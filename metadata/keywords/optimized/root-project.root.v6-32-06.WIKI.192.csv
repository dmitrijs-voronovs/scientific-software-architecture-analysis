quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Usability,". ROOT: core/foundation/res/RConversionRuleParser.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RConversionRuleParser.h. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#ifndef R__CONVERSION_RULE_PARSER_H; 5#define R__CONVERSION_RULE_PARSER_H; 6 ; 7#include <list>; 8#include <map>; 9#include <string>; 10#include <ostream>; 11 ; 12#include ""RConfigure.h""; 13 ; 14#include ""TSchemaType.h""; 15#include ""DllImport.h""; 16 ; 17namespace ROOT; 18{; 19 //---------------------------------------------------------------------------; 20 // Global variables; 21 //---------------------------------------------------------------------------; 22 typedef std::map<std::string, std::string> SchemaRuleMap_t;; 23 typedef std::map<std::string, std::list<SchemaRuleMap_t> > SchemaRuleClassMap_t;; 24 R__EXTERN SchemaRuleClassMap_t gReadRules;; 25 R__EXTERN SchemaRuleClassMap_t gReadRawRules;; 26 ; 27 typedef std::map<std::string, ROOT::Internal::TSchemaType> MembersTypeMap_t;; 28 ; 29 //---------------------------------------------------------------------------; 30 // Create the data member name-type map; 31 //---------------------------------------------------------------------------; 32 // void CreateNameTypeMap( const clang::CXXRecordDecl &cl, MembersTypeMap_t& members );; 33 ; 34 //---------------------------------------------------------------------------; 35 // Check if given rule contains references to valid data members; 36 //---------------------------------------------------------------------------; 37 bool HasValidDataMembers( SchemaRuleMap_t& rule, MembersTypeMap_t& members,; 38 std::string& error_string);; 39 ; 40 //---------------------------------------------------------------------------; 41 // Write the conversion function for Read rule; 42 //---------------------------------------------------------------------------; 43 void WriteReadRuleFunc( SchemaRuleMap_t& rule",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8h_source.html:95,Guid,Guide,95,doc/master/RConversionRuleParser_8h_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/res/RConversionRuleParser.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RConversionRuleParser.h. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#ifndef R__CONVERSION_RULE_PARSER_H; 5#define R__CONVERSION_RULE_PARSER_H; 6 ; 7#include <list>; 8#include <map>; 9#include <string>; 10#include <ostream>; 11 ; 12#include ""RConfigure.h""; 13 ; 14#include ""TSchemaType.h""; 15#include ""DllImport.h""; 16 ; 17namespace ROOT; 18{; 19 //---------------------------------------------------------------------------; 20 // Global variables; 21 //---------------------------------------------------------------------------; 22 typedef std::map<std::string, std::string> SchemaRuleMap_t;; 23 typedef std::map<std::string, std::list<SchemaRuleMap_t> > SchemaRuleClassMap_t;; 24 R__EXTERN SchemaRuleClassMap_t gReadRules;; 25 R__EXTERN SchemaRuleClassMap_t gReadRawRules;; 26 ; 27 typedef std::map<std::string, ROOT::Internal::TSchemaType> MembersTypeMap_t;; 28 ; 29 //---------------------------------------------------------------------------; 30 // Create the data member name-type map; 31 //---------------------------------------------------------------------------; 32 // void CreateNameTypeMap( const clang::CXXRecordDecl &cl, MembersTypeMap_t& members );; 33 ; 34 //---------------------------------------------------------------------------; 35 // Check if given rule contains references to valid data members; 36 //---------------------------------------------------------------------------; 37 bool HasValidDataMembers( SchemaRuleMap_t& rule, MembersTypeMap_t& members,; 38 std::string& error_string);; 39 ; 40 //---------------------------------------------------------------------------; 41 // Write the conversion function for Read rule; 42 //---------------------------------------------------------------------------; 43 void WriteReadRuleFunc( SchemaRuleMap_t& rule,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RConversionRuleParser_8h_source.html:94,Guid,Guide,94,doc/v632/RConversionRuleParser_8h_source.html,https://root.cern,https://root.cern/doc/v632/RConversionRuleParser_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/res/ROOT/RSha256.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; RSha256.hxx File Reference. #include ""Rtypes.h""; #include <iostream>; #include <stdlib.h>; #include <stdint.h>. Include dependency graph for RSha256.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Internal::SHA256::sha256_t;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  ; namespace  ROOT::Internal::SHA256;  . Macros; #define _SHA256_UNROLL;  ; #define _SHA256_UNROLL2;  ; #define a(i)   T[(0 - (i)) & 7];  ; #define b(i)   T[(1 - (i)) & 7];  ; #define blk0(i)   (W[i] = data[i]);  ; #define blk2(i)   (W[i & 15] += s1(W[(i - 2) & 15]) + W[(i - 7) & 15] + s0(W[(i - 15) & 15]));  ; #define c(i)   T[(2 - (i)) & 7];  ; #define Ch(x, y, z)   (z ^ (x & (y ^ z)));  ; #define d(i)   T[(3 - (i)) & 7];  ; #define e(i)   T[(4 - (i)) & 7];  ; #define f(i)   T[(5 - (i)) & 7];  ; #define g(i)   T[(6 - (i)) & 7];  ; #define h(i)   T[(7 - (i)) & 7];  ; #define Maj(x, y, z)   ((x & y) | (z & (x | y)));  ; #define R(a, b, c, d, e, f, g, h, i);  ; #define ROTL16(v, n)   (U16V((uint16_t)(v) << (n)) | ((uint16_t)(v) >> (16 - (n))));  ; #define ROTL32(v, n)   (U32V((uint32_t)(v) << (n)) | ((uint32_t)(v) >> (32 - (n))));  ; #define ROTL64(v, n)   (U64V((uint64_t)(v) << (n)) | ((uint64_t)(v) >> (64 - (n))));  ; #define ROTL8(v, n)   (U8V((uint8_t)(v) << (n)) | ((uint8_t)(v) >> (8 - (n))));  ; #define ROTR16(v, n)   ROTL16(v, 16 - (n));  ; #define ROTR32(v, n)   ROTL32(v, 32 - (n));  ; #define",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSha256_8hxx.html:91,Guid,Guide,91,doc/master/RSha256_8hxx.html,https://root.cern,https://root.cern/doc/master/RSha256_8hxx.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/res/ROOT/RSha256.hxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; RSha256.hxx File Reference. #include ""Rtypes.h""; #include <iostream>; #include <stdlib.h>; #include <stdint.h>. Include dependency graph for RSha256.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Internal::SHA256::sha256_t;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  ; namespace  ROOT::Internal::SHA256;  . Macros; #define _SHA256_UNROLL;  ; #define _SHA256_UNROLL2;  ; #define a(i)   T[(0 - (i)) & 7];  ; #define b(i)   T[(1 - (i)) & 7];  ; #define blk0(i)   (W[i] = data[i]);  ; #define blk2(i)   (W[i & 15] += s1(W[(i - 2) & 15]) + W[(i - 7) & 15] + s0(W[(i - 15) & 15]));  ; #define c(i)   T[(2 - (i)) & 7];  ; #define Ch(x, y, z)   (z ^ (x & (y ^ z)));  ; #define d(i)   T[(3 - (i)) & 7];  ; #define e(i)   T[(4 - (i)) & 7];  ; #define f(i)   T[(5 - (i)) & 7];  ; #define g(i)   T[(6 - (i)) & 7];  ; #define h(i)   T[(7 - (i)) & 7];  ; #define Maj(x, y, z)   ((x & y) | (z & (x | y)));  ; #define R(a, b, c, d, e, f, g, h, i);  ; #define ROTL16(v, n)   (U16V((uint16_t)(v) << (n)) | ((uint16_t)(v) >> (16 - (n))));  ; #define ROTL32(v, n)   (U32V((uint32_t)(v) << (n)) | ((uint32_t)(v) >> (32 - (n))));  ; #define ROTL64(v, n)   (U64V((uint64_t)(v) << (n)) | ((uint64_t)(v) >> (64 - (n))));  ; #define ROTL8(v, n)   (U8V((uint8_t)(v) << (n)) | ((uint8_t)(v) >> (8 - (n))));  ; #define ROTR16(v, n)   ROTL16(v, 16 - (n));  ; #define ROTR32(v, n)   ROTL32(v, 32 - (n));  ; #define ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RSha256_8hxx.html:90,Guid,Guide,90,doc/v632/RSha256_8hxx.html,https://root.cern,https://root.cern/doc/v632/RSha256_8hxx.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/res/ROOT/RSha256.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RSha256.hxx. Go to the documentation of this file. 1// Author: Danilo Piparo May 2018; 2// Inspired by public domain code of Igor Pavlov: https://github.com/jb55/sha256.c; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_RSHA; 13#define ROOT_RSHA; 14 ; 15#include ""Rtypes.h""; 16 ; 17#include <iostream>; 18#include <stdlib.h>; 19#include <stdint.h>; 20 ; 21 ; 22namespace ROOT {; 23namespace Internal {; 24namespace SHA256 {; 25 ; 26#ifdef _MSC_VER; 27 ; 28#define ROTL32(v, n) _rotl((v), (n)); 29#define ROTL64(v, n) _rotl64((v), (n)); 30 ; 31#define ROTR32(v, n) _rotr((v), (n)); 32#define ROTR64(v, n) _rotr64((v), (n)); 33 ; 34#else; 35 ; 36#define U8V(v) ((uint8_t)(v)&0xFFU); 37#define U16V(v) ((uint16_t)(v)&0xFFFFU); 38#define U32V(v) ((uint32_t)(v)&0xFFFFFFFFU); 39#define U64V(v) ((uint64_t)(v)&0xFFFFFFFFFFFFFFFFU); 40 ; 41#define ROTL32(v, n) (U32V((uint32_t)(v) << (n)) | ((uint32_t)(v) >> (32 - (n)))); 42 ; 43// tests fail if we don't have this cast...; 44#define ROTL64(v, n) (U64V((uint64_t)(v) << (n)) | ((uint64_t)(v) >> (64 - (n)))); 45 ; 46#define ROTR32(v, n) ROTL32(v, 32 - (n)); 47#define ROTR64(v, n) ROTL64(v, 64 - (n)); 48 ; 49#endif; 50 ; 51#define ROTL8(v, n) (U8V((uint8_t)(v) << (n)) | ((uint8_t)(v) >> (8 - (n)))); 52 ; 53#define ROTL16(v, n) (U16V((uint16_t)(v) << (n)) | ((uint16_t)(v) >> (16 - (n)))); 54 ; 55#define ROTR8(v, n) ROTL8(v, 8 - (n)); 56#define ROTR16(v, n) ROTL16(v, 16 - (n)); 57 ; 58#define SHA256_DIGEST_SIZE 32; 59 ; 60typedef struct sha256_t {; 61 uint32_t stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSha256_8hxx_source.html:88,Guid,Guide,88,doc/master/RSha256_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RSha256_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/res/ROOT/RSha256.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RSha256.hxx. Go to the documentation of this file. 1// Author: Danilo Piparo May 2018; 2// Inspired by public domain code of Igor Pavlov: https://github.com/jb55/sha256.c; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_RSHA; 13#define ROOT_RSHA; 14 ; 15#include ""Rtypes.h""; 16 ; 17#include <iostream>; 18#include <stdlib.h>; 19#include <stdint.h>; 20 ; 21 ; 22namespace ROOT {; 23namespace Internal {; 24namespace SHA256 {; 25 ; 26#ifdef _MSC_VER; 27 ; 28#define ROTL32(v, n) _rotl((v), (n)); 29#define ROTL64(v, n) _rotl64((v), (n)); 30 ; 31#define ROTR32(v, n) _rotr((v), (n)); 32#define ROTR64(v, n) _rotr64((v), (n)); 33 ; 34#else; 35 ; 36#define U8V(v) ((uint8_t)(v)&0xFFU); 37#define U16V(v) ((uint16_t)(v)&0xFFFFU); 38#define U32V(v) ((uint32_t)(v)&0xFFFFFFFFU); 39#define U64V(v) ((uint64_t)(v)&0xFFFFFFFFFFFFFFFFU); 40 ; 41#define ROTL32(v, n) (U32V((uint32_t)(v) << (n)) | ((uint32_t)(v) >> (32 - (n)))); 42 ; 43// tests fail if we don't have this cast...; 44#define ROTL64(v, n) (U64V((uint64_t)(v) << (n)) | ((uint64_t)(v) >> (64 - (n)))); 45 ; 46#define ROTR32(v, n) ROTL32(v, 32 - (n)); 47#define ROTR64(v, n) ROTL64(v, 64 - (n)); 48 ; 49#endif; 50 ; 51#define ROTL8(v, n) (U8V((uint8_t)(v) << (n)) | ((uint8_t)(v) >> (8 - (n)))); 52 ; 53#define ROTL16(v, n) (U16V((uint16_t)(v) << (n)) | ((uint16_t)(v) >> (16 - (n)))); 54 ; 55#define ROTR8(v, n) ROTL8(v, 8 - (n)); 56#define ROTR16(v, n) ROTL16(v, 16 - (n)); 57 ; 58#define SHA256_DIGEST_SIZE 32; 59 ; 60typedef struct sha256_t {; 61 uint32_t state",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RSha256_8hxx_source.html:87,Guid,Guide,87,doc/v632/RSha256_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RSha256_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/src/RConversionRuleParser.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RConversionRuleParser.cxx. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2/// \file RConversionRuleParser.cxx; 3/// \ingroup Base; 4/// \author Victor Perev; 5/// \author Philippe Canal; 6/// \date 04/10/2003; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include ""RConversionRuleParser.h""; 17#include ""TSchemaRuleProcessor.h""; 18#include ""TClassEdit.h""; 19 ; 20#include <algorithm>; 21#include <iostream>; 22#include <map>; 23#include <sstream>; 24#include <string>; 25#include <utility>; 26#include <vector>; 27 ; 28namespace {; 29 static void RemoveEscapeSequences(std::string& rawString); 30 {; 31 const std::vector<std::pair<std::string, std::string>> subPairs { {""\\\\"",""\\""},; 32 {""\\\"""",""\""""},; 33 {""\\\'"",""\'""}};; 34 size_t start_pos = 0;; 35 for (auto const & subPair : subPairs){; 36 start_pos = 0;; 37 auto from = subPair.first;; 38 auto to = subPair.second;; 39 while((start_pos = rawString.find(from, start_pos)) != std::string::npos) {; 40 rawString.replace(start_pos, from.length(), to);; 41 start_pos += to.length();; 42 }; 43 }; 44 }; 45}; 46 ; 47namespace ROOT; 48{; 49 using namespace Internal;; 50 ; 51 typedef std::list<std::pair<ROOT::Internal::TSchemaType,std::string> > SourceTypeList_t;; 52 ; 53 //--------------------------------------------------------------------------; 54 // Allocate global variables; 55 /////////////////////////////////////////////////////////////////////////////; 56 ; 57 SchemaRuleClassMap_t gReadRules;; 58 SchemaRuleClassMap_t gReadRawRules;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html:97,Guid,Guide,97,doc/master/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/src/RConversionRuleParser.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RConversionRuleParser.cxx. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2/// \file RConversionRuleParser.cxx; 3/// \ingroup Base; 4/// \author Victor Perev; 5/// \author Philippe Canal; 6/// \date 04/10/2003; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include ""RConversionRuleParser.h""; 17#include ""TSchemaRuleProcessor.h""; 18#include ""TClassEdit.h""; 19 ; 20#include <algorithm>; 21#include <iostream>; 22#include <map>; 23#include <sstream>; 24#include <string>; 25#include <utility>; 26#include <vector>; 27 ; 28namespace {; 29 static void RemoveEscapeSequences(std::string& rawString); 30 {; 31 const std::vector<std::pair<std::string, std::string>> subPairs { {""\\\\"",""\\""},; 32 {""\\\"""",""\""""},; 33 {""\\\'"",""\'""}};; 34 size_t start_pos = 0;; 35 for (auto const & subPair : subPairs){; 36 start_pos = 0;; 37 auto from = subPair.first;; 38 auto to = subPair.second;; 39 while((start_pos = rawString.find(from, start_pos)) != std::string::npos) {; 40 rawString.replace(start_pos, from.length(), to);; 41 start_pos += to.length();; 42 }; 43 }; 44 }; 45}; 46 ; 47namespace ROOT; 48{; 49 using namespace Internal;; 50 ; 51 typedef std::list<std::pair<ROOT::Internal::TSchemaType,std::string> > SourceTypeList_t;; 52 ; 53 //--------------------------------------------------------------------------; 54 // Allocate global variables; 55 /////////////////////////////////////////////////////////////////////////////; 56 ; 57 SchemaRuleClassMap_t gReadRules;; 58 SchemaRuleClassMap_t gReadRawRules;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RConversionRuleParser_8cxx_source.html:96,Guid,Guide,96,doc/v632/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RConversionRuleParser_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/src/StringUtils.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. StringUtils.cxx. Go to the documentation of this file. 1/// \file ROOT/StringUtils.hxx; 2/// \ingroup Base StdExt; 3/// \author Jonas Rembser <jonas.rembser@cern.ch>; 4/// \date 2021-08-09; 5 ; 6/*************************************************************************; 7 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 8 * All rights reserved. *; 9 * *; 10 * For the licensing terms see $ROOTSYS/LICENSE. *; 11 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 12 *************************************************************************/; 13 ; 14#include ""ROOT/StringUtils.hxx""; 15 ; 16namespace ROOT {; 17 ; 18/// Splits a string at each character in delims.; 19/// The behavior mimics `str.split` from Python,; 20/// \param[in] str String to tokenise.; 21/// \param[in] delims One or more delimiters used to split the string.; 22/// \param[in] skipEmpty Strip empty strings from the output.; 23std::vector<std::string> Split(std::string_view str, std::string_view delims, bool skipEmpty /* =false */); 24{; 25 std::vector<std::string> out;; 26 ; 27 std::size_t beg = 0;; 28 std::size_t end = 0;; 29 while ((end = str.find_first_of(delims, beg)) != std::string::npos) {; 30 if (!skipEmpty || end > beg); 31 out.emplace_back(str.substr(beg, end - beg));; 32 beg = end + 1;; 33 }; 34 if (!skipEmpty || str.size() > beg); 35 out.emplace_back(str.substr(beg, str.size() - beg));; 36 ; 37 return out;; 38}; 39 ; 40} // namespace ROOT; StringUtils.hxx; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::Splitstd::vector< std::string > Split(std::string_view str, std::string_view delims, bool skipEmpty=false)Splits a string at each character in delims.Definition StringUtils.cxx:23. corefoundationsrcStringUtils.cxx. ROOT master - Referenc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/StringUtils_8cxx_source.html:87,Guid,Guide,87,doc/master/StringUtils_8cxx_source.html,https://root.cern,https://root.cern/doc/master/StringUtils_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/src/StringUtils.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. StringUtils.cxx. Go to the documentation of this file. 1/// \file ROOT/StringUtils.hxx; 2/// \ingroup Base StdExt; 3/// \author Jonas Rembser <jonas.rembser@cern.ch>; 4/// \date 2021-08-09; 5 ; 6/*************************************************************************; 7 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 8 * All rights reserved. *; 9 * *; 10 * For the licensing terms see $ROOTSYS/LICENSE. *; 11 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 12 *************************************************************************/; 13 ; 14#include ""ROOT/StringUtils.hxx""; 15 ; 16namespace ROOT {; 17 ; 18/// Splits a string at each character in delims.; 19/// The behavior mimics `str.split` from Python,; 20/// \param[in] str String to tokenise.; 21/// \param[in] delims One or more delimiters used to split the string.; 22/// \param[in] skipEmpty Strip empty strings from the output.; 23std::vector<std::string> Split(std::string_view str, std::string_view delims, bool skipEmpty /* =false */); 24{; 25 std::vector<std::string> out;; 26 ; 27 std::size_t beg = 0;; 28 std::size_t end = 0;; 29 while ((end = str.find_first_of(delims, beg)) != std::string::npos) {; 30 if (!skipEmpty || end > beg); 31 out.emplace_back(str.substr(beg, end - beg));; 32 beg = end + 1;; 33 }; 34 if (!skipEmpty || str.size() > beg); 35 out.emplace_back(str.substr(beg, str.size() - beg));; 36 ; 37 return out;; 38}; 39 ; 40} // namespace ROOT; StringUtils.hxx; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::Splitstd::vector< std::string > Split(std::string_view str, std::string_view delims, bool skipEmpty=false)Splits a string at each character in delims.Definition StringUtils.cxx:23. corefoundationsrcStringUtils.cxx. ROOT v6-32 - Reference ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/StringUtils_8cxx_source.html:86,Guid,Guide,86,doc/v632/StringUtils_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/StringUtils_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/foundation/src/TError.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TError.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 29/07/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13Error handling routines.; 14 ; 15This file defines a number of global error handling routines:; 16Warning(), Error(), SysError() and Fatal(). They all take a; 17location string (where the error happened) and a printf style format; 18string plus vararg's. In the end these functions call an; 19errorhandler function. Initially the MinimalErrorHandler, which is supposed; 20to be replaced by the proper DefaultErrorHandler(); 21*/; 22 ; 23#include ""TError.h""; 24 ; 25#include <cstdarg>; 26#include <cstdio>; 27#include <cstdlib>; 28#include <cerrno>; 29#include <string>; 30 ; 31Int_t gErrorIgnoreLevel = kUnset;; 32Int_t gErrorAbortLevel = kSysError+1;; 33Bool_t gPrintViaErrorHandler = kFALSE;; 34 ; 35const char *kAssertMsg = ""%s violated at line %d of `%s'"";; 36const char *kCheckMsg = ""%s not true at line %d of `%s'"";; 37 ; 38static ErrorHandlerFunc_t gErrorHandler = ROOT::Internal::MinimalErrorHandler;; 39 ; 40 ; 41static ROOT::Internal::ErrorSystemMsgHandlerFunc_t &GetErrorSystemMsgHandlerRef(); 42{; 43 static ROOT::Internal::ErrorSystemMsgHandlerFunc_t h;; 44 return h;; 45}; 46 ; 47 ; 48namespace ROOT {; 49namespace Internal {; 50 ; 51ErrorSystemMsgHandlerFunc_t GetErrorSystemMsgHandler(); 52{; 53 return GetErrorSystemMsgHandlerRef();; 54}; 55 ; 56ErrorSystemMsgHandlerFunc_t SetErrorSystemMsgHandler(ErrorSystemMsgHandlerFunc_t h); 57{; 58 auto oldHa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8cxx_source.html:82,Guid,Guide,82,doc/master/TError_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TError_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/gui/inc/GuiTypes.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Enumerations |; Variables ; GuiTypes.h File Reference. #include ""Rtypes.h""; #include <climits>. Include dependency graph for GuiTypes.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ColorStruct_t;  ; struct  Event_t;  Event structure. More...;  ; struct  GCValues_t;  Graphics context structure. More...;  ; struct  PictureAttributes_t;  ; struct  Point_t;  Point structure (maps to the X11 XPoint structure) More...;  ; struct  Rectangle_t;  Rectangle structure (maps to the X11 XRectangle structure) More...;  ; struct  Segment_t;  Used for drawing line segments (maps to the X11 XSegments structure) More...;  ; struct  SetWindowAttributes_t;  Attributes that can be used when creating or changing a window. More...;  ; struct  WindowAttributes_t;  Window attributes that can be inquired. More...;  . Typedefs; typedef Handle_t Atom_t;  WM token. ;  ; typedef Handle_t Colormap_t;  Colormap handle. ;  ; typedef Handle_t Cursor_t;  Cursor handle. ;  ; typedef Handle_t Display_t;  Display handle. ;  ; typedef Handle_t Drawable_t;  Drawable handle. ;  ; typedef Handle_t FontH_t;  Font handle (as opposed to Font_t which is an index) ;  ; typedef Handle_t FontStruct_t;  Pointer to font structure. ;  ; typedef Handle_t GContext_t;  Graphics context handle. ;  ; typedef ULongptr_t Handle_t;  Generic resource handle. ;  ; typedef Handle_t KeySym_t;  Key symbol handle. ;  ; typedef UInt_t Mask_t;  Structure mask type. ;  ; typedef ULong_t Pixel_t;  Pixel value. ;  ; typedef Handle_t Pixmap_t;  Pixmap handle. ;  ; typedef Handle_t Region_t;  Region handle. ;  ; typedef ULong_t Time_t;  Event time. ;  ; typedef Handle_t Visual_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GuiTypes_8h.html:78,Guid,Guide,78,doc/master/GuiTypes_8h.html,https://root.cern,https://root.cern/doc/master/GuiTypes_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: core/gui/inc/TBrowser.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBrowser.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 25/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TBrowser; 14#define ROOT_TBrowser; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBrowser //; 19// //; 20// Using a TBrowser on can browse all ROOT objects. It shows in a list //; 21// on the left side of the window all browsable ROOT classes. Selecting //; 22// one of the classes displays, in the iconbox on the right side, all //; 23// objects in the class. Selecting one of the objects in the iconbox, //; 24// will place all browsable objects in a new list and draws the //; 25// contents of the selected class in the iconbox. And so on.... //; 26// //; 27//////////////////////////////////////////////////////////////////////////; 28 ; 29#include ""TNamed.h""; 30#include ""TBrowserImp.h""; 31 ; 32 ; 33class TContextMenu;; 34class TBrowserTimer;; 35 ; 36 ; 37class TBrowser : public TNamed {; 38 ; 39private:; 40 TObject *fLastSelectedObject{nullptr}; //!The last TObject selected by user; 41 ; 42 TBrowser(const TBrowser&) = delete; // TBrowser can not be copied since we do not know the type of the TBrowserImp (and it can not be 'Cloned'); 43 TBrowser& operator=(const TBrowser&) = delete; // TBrowser can not be copied since we do not know the type of the TBrowserImp (and it can not be 'Cloned'); 44 ; 45protected:; 46 TBrowserImp *fImp{nullptr}; //!Window system specific browser implementation; 47 TBr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBrowser_8h_source.html:75,Guid,Guide,75,doc/master/TBrowser_8h_source.html,https://root.cern,https://root.cern/doc/master/TBrowser_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/gui/src/TBrowser.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBrowser.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 25/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TBrowser; 13\ingroup Base; 14 ; 15Using a TBrowser one can browse all ROOT objects. It shows in a list; 16on the left side of the window all browsable ROOT classes. Selecting; 17one of the classes displays, in the icon-box on the right side, all; 18objects in the class. Selecting one of the objects in the icon-box,; 19will place all browsable objects in a new list and draws the; 20contents of the selected class in the icon-box. And so on....; 21 ; 22\image html base_browser.png; 23 ; 24\since **ROOT version 6.24/00**; 25 ; 26TBrowser invokes by default the Web-based %ROOT file browser [RBrowser](ROOT::RBrowser); 27To change this behaviour, and invoke the standard TBrowser, one should put; 28the following directive in the `.rootrc` file:; 29```; 30Browser.Name: TRootBrowser; 31```; 32*/; 33 ; 34#include ""TBrowser.h""; 35#include ""TGuiFactory.h""; 36#include ""TROOT.h""; 37#include ""TEnv.h""; 38#include ""TSystem.h""; 39#include ""TStyle.h""; 40#include ""TTimer.h""; 41#include ""TContextMenu.h""; 42#include ""TInterpreter.h""; 43#include ""TVirtualMutex.h""; 44#include ""TClass.h""; 45#include ""TApplication.h""; 46 ; 47/** \class TBrowserTimer; 48Called whenever timer times out.; 49*/; 50 ; 51class TBrowserTimer : public TTimer {; 52 ; 53protected:; 54 TBrowser *fBrowser{nullptr};; 55 Bool_t fActivate{kFALSE};; 56 ; 57public:; 58 TBrowserTimer(TBrowser *b, Long_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBrowser_8cxx_source.html:77,Guid,Guide,77,doc/master/TBrowser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBrowser_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TBaseClass.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBaseClass.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 08/02/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBaseClass; 13#define ROOT_TBaseClass; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBaseClass //; 19// //; 20// Description of a base class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TDictionary.h""; 26#include ""TClassRef.h""; 27 ; 28#include <atomic>; 29 ; 30class TBrowser;; 31class TClass;; 32 ; 33class TBaseClass : public TDictionary {; 34#ifndef __CLING__; 35 using AtomicInt_t = std::atomic<Int_t>;; 36 static_assert(sizeof(std::atomic<Int_t>) == sizeof(Int_t),; 37 ""We requiqre atomic<int> and <int> to have the same size but they are not"");; 38#else; 39 // std::atomic is not yet supported in the I/O, so; 40 // we hide them from Cling; 41 using AtomicInt_t = Int_t;; 42#endif; 43 ; 44private:; 45 TBaseClass(const TBaseClass &) = delete;; 46 TBaseClass&operator=(const TBaseClass &) = delete;; 47 ; 48private:; 49 BaseClassInfo_t *fInfo; //!pointer to CINT base class info; 50 TClassRef fClassPtr; // pointer to the base class TClass; 51 TClass *fClass; //!pointer to parent class; 52 AtomicInt_t fDelta; // BaseClassInfo_t offset (INT_MAX if unset); 53 mutable AtomicInt_t fProperty; // BaseClassInfo_t's properties; 54 Int_t fSTLType; // cache of IsSTLContainer(); 55 ; 56public:; 57 TBaseClass(BaseClassInfo_t *info = null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBaseClass_8h_source.html:78,Guid,Guide,78,doc/master/TBaseClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TBaseClass_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TClass.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; TClass.h File Reference. #include ""TDictionary.h""; #include ""TString.h""; #include ""TObjArray.h""; #include <cstddef>; #include <map>; #include <string>; #include <unordered_set>; #include <vector>; #include <atomic>. Include dependency graph for TClass.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TClass::InsertTClassInRegistryRAII;  ; struct  TClass::ObjectPtr;  ; class  TClass;  TClass instances represent classes, structs and namespaces in the ROOT type system. More...;  ; struct  ROOT::Internal::TClassGetClassHelper< T >;  ; class  TClass::TDeclNameRegistry;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  ROOT::Internal;  . Typedefs; typedef ROOT::TMapDeclIdToTClass DeclIdMap_t;  ; typedef ROOT::TMapTypeToTClass IdMap_t;  . Functions; TClass * ROOT::CreateClass (const char *cname, Version_t id, const char *dfil, const char *ifil, Int_t dl, Int_t il);  Global function called by a class' static Dictionary() method (see the ClassDef macro). ;  ; template<typename T > ; TClass * ROOT::GetClass (const T *);  ; template<typename T > ; TClass * ROOT::GetClass (const T **);  ; template<typename T > ; TClass * ROOT::GetClass (const T *const *);  ; template<typename T > ; TClass * ROOT::GetClass (T *);  ; template<typename T > ; TClass * ROOT::GetClass (T **);  ; template<typename T > ; TClass * ROOT::Internal::GetClassHelper (Bool_t load, Bool_t silent, std::false_type);  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h.html:77,Guid,Guide,77,doc/master/TClass_8h.html,https://root.cern,https://root.cern/doc/master/TClass_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TClass.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Rene Brun 07/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TClass; 13#define ROOT_TClass; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TClass //; 18// //; 19// Dictionary of a class. //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TDictionary.h""; 24#include ""TString.h""; 25 ; 26#ifdef R__LESS_INCLUDES; 27class TObjArray;; 28#else; 29#include ""TObjArray.h""; 30// Not used in this header file; user code should #include this directly.; 31// #include ""TObjString.h""; 32// #include ""ThreadLocalStorage.h""; 33// #include <set>; 34#endif; 35 ; 36#include <cstddef>; 37#include <map>; 38#include <string>; 39#include <unordered_set>; 40#include <vector>; 41#include <atomic>; 42 ; 43class TBaseClass;; 44class TBrowser;; 45class TDataMember;; 46class TCling;; 47class TMethod;; 48class TRealData;; 49class TBuffer;; 50class TVirtualStreamerInfo;; 51class TVirtualCollectionProxy;; 52class TMethodCall;; 53class TVirtualIsAProxy;; 54class TVirtualRefProxy;; 55class THashTable;; 56class TListOfFunctions;; 57class TListOfFunctionTemplates;; 58class TListOfDataMembers;; 59class TListOfEnums;; 60class TViewPubFunctions;; 61class TViewPubDataMembers;; 62class TFunctionTemplate;; 63class TProtoClass;; 64 ; 65namespace ROOT {; 66 class TGenericClassInfo;; 67 class TMapTypeToTClass;; 68 class TMapDeclIdToTClass;; 69 namespace Deta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h_source.html:74,Guid,Guide,74,doc/master/TClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TClass_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TClass.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Rene Brun 07/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TClass; 13#define ROOT_TClass; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TClass //; 18// //; 19// Dictionary of a class. //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TDictionary.h""; 24#include ""TString.h""; 25 ; 26#ifdef R__LESS_INCLUDES; 27class TObjArray;; 28#else; 29#include ""TObjArray.h""; 30// Not used in this header file; user code should #include this directly.; 31// #include ""TObjString.h""; 32// #include ""ThreadLocalStorage.h""; 33// #include <set>; 34#endif; 35 ; 36#include <cstddef>; 37#include <map>; 38#include <string>; 39#include <unordered_set>; 40#include <vector>; 41#include <atomic>; 42 ; 43class TBaseClass;; 44class TBrowser;; 45class TDataMember;; 46class TCling;; 47class TMethod;; 48class TRealData;; 49class TBuffer;; 50class TVirtualStreamerInfo;; 51class TVirtualCollectionProxy;; 52class TMethodCall;; 53class TVirtualIsAProxy;; 54class TVirtualRefProxy;; 55class THashTable;; 56class TListOfFunctions;; 57class TListOfFunctionTemplates;; 58class TListOfDataMembers;; 59class TListOfEnums;; 60class TViewPubFunctions;; 61class TViewPubDataMembers;; 62class TFunctionTemplate;; 63class TProtoClass;; 64 ; 65namespace ROOT {; 66 class TGenericClassInfo;; 67 class TMapTypeToTClass;; 68 class TMapDeclIdToTClass;; 69 namespace Detai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8h_source.html:73,Guid,Guide,73,doc/v632/TClass_8h_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TDataType.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TDataType.h File Reference. #include ""TDictionary.h"". Include dependency graph for TDataType.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TDataType;  Basic data type descriptor (datatype information is obtained from CINT). More...;  . Enumerations; enum  EDataType { ;   kChar_t = 1; , kUChar_t = 11; , kShort_t = 2; , kUShort_t = 12; , ;   kInt_t = 3; , kUInt_t = 13; , kLong_t = 4; , kULong_t = 14; , ;   kFloat_t = 5; , kDouble_t = 8; , kDouble32_t = 9; , kchar = 10; , ;   kBool_t = 18; , kLong64_t = 16; , kULong64_t = 17; , kOther_t = -1; , ;   kNoType_t = 0; , kFloat16_t = 19; , kCounter = 6; , kCharStar = 7; , ;   kBits = 15; , kVoid_t = 20; , kDataTypeAliasUnsigned_t = 21; , kDataTypeAliasSignedChar_t = 22; , ;   kNumDataTypes. };  . Enumeration Type Documentation. ◆ EDataType. enum EDataType. EnumeratorkChar_t ; kUChar_t ; kShort_t ; kUShort_t ; kInt_t ; kUInt_t ; kLong_t ; kULong_t ; kFloat_t ; kDouble_t ; kDouble32_t ; kchar ; kBool_t ; kLong64_t ; kULong64_t ; kOther_t ; kNoType_t ; kFloat16_t ; kCounter ; kCharStar ; kBits ; kVoid_t ; kDataTypeAliasUnsigned_t ; kDataTypeAliasSignedChar_t ; kNumDataTypes . Definition at line 28 of file TDataType.h. coremetaincTDataType.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDataType_8h.html:80,Guid,Guide,80,doc/master/TDataType_8h.html,https://root.cern,https://root.cern/doc/master/TDataType_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TDictionary.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Enumerations ; TDictionary.h File Reference. #include ""TNamed.h""; #include ""ESTLType.h"". Include dependency graph for TDictionary.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TDictionary;  This class defines an abstract interface that must be implemented by all classes that contain dictionary information. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Enumerations; enum  EClassProperty { ;   kClassIsValid = 0x00000001; , kClassHasExplicitCtor = 0x00000010; , kClassHasImplicitCtor = 0x00000020; , kClassHasCtor = 0x00000030; , ;   kClassHasDefaultCtor = 0x00000040; , kClassHasAssignOpr = 0x00000080; , kClassHasExplicitDtor = 0x00000100; , kClassHasImplicitDtor = 0x00000200; , ;   kClassHasDtor = 0x00000300; , kClassHasVirtual = 0x00001000; , kClassIsAbstract = 0x00002000; , kClassIsAggregate = 0x00004000. };  ; enum  ROOT::EFunctionMatchMode { ROOT::kExactMatch = 0; , ROOT::kConversionMatch = 1; };  ; enum  EFunctionProperty { ;   kIsConstructor = 0x00000001; , kIsConversion = 0x00000002; , kIsDestructor = 0x00000004; , kIsOperator = 0x00000008; , ;   kIsInlined = 0x00000010; , kIsTemplateSpec = 0x00000020. };  ; enum  EProperty { ;   kIsClass = 0x00000001; , kIsStruct = 0x00000002; , kIsUnion = 0x00000004; , kIsEnum = 0x00000008; , ;   kIsTypedef = 0x00000010; , kIsFundamental = 0x00000020; , kIsAbstract = 0x00000040; , kIsVirtual = 0x00000080; , ;   kIsPureVirtual = 0x00000100; , kIsUnionMember = 0x00000100; , kIsPublic = 0x00000200; , kIsProtec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDictionary_8h.html:82,Guid,Guide,82,doc/master/TDictionary_8h.html,https://root.cern,https://root.cern/doc/master/TDictionary_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TDictionary.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDictionary.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 20/06/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TDictionary; 14#define ROOT_TDictionary; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TDictionary //; 19// //; 20// This class defines an abstract interface that must be implemented //; 21// by all classes that contain dictionary information. //; 22// //; 23// The dictionary is defined by the followling classes: //; 24// TDataType (typedef definitions) //; 25// TGlobal (global variables) //; 26// TFunction (global functions) //; 27// TClass (classes) //; 28// TBaseClass (base classes) //; 29// TDataMember (class datamembers) //; 30// TMethod (class methods) //; 31// TMethodArg (method arguments) //; 32// //; 33// All the above classes implement the TDictionary abstract interface //; 34// (note: the indentation shows aggregation not inheritance). //; 35// The ROOT dictionary system provides a very extensive RTTI //; 36// environment that facilitates a.o. object inspectors, object I/O, //; 37// ROOT Trees, etc. Most of the type information is provided by the //; 38// CINT C++ interpreter. //; 39// //; 40// TMethodCall (method call environment) //; 41// //; 42//////////////////////////////////////////////////////////////////////////; 43 ; 44#include ""TNamed.h""; 45 ; 46#include ""ESTLType.h""; 47 ; 48// The following are opaque type and are never really declared; 49// The specific impleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDictionary_8h_source.html:79,Guid,Guide,79,doc/master/TDictionary_8h_source.html,https://root.cern,https://root.cern/doc/master/TDictionary_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TDictionary.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TDictionary.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 20/06/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TDictionary; 14#define ROOT_TDictionary; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TDictionary //; 19// //; 20// This class defines an abstract interface that must be implemented //; 21// by all classes that contain dictionary information. //; 22// //; 23// The dictionary is defined by the followling classes: //; 24// TDataType (typedef definitions) //; 25// TGlobal (global variables) //; 26// TFunction (global functions) //; 27// TClass (classes) //; 28// TBaseClass (base classes) //; 29// TDataMember (class datamembers) //; 30// TMethod (class methods) //; 31// TMethodArg (method arguments) //; 32// //; 33// All the above classes implement the TDictionary abstract interface //; 34// (note: the indentation shows aggregation not inheritance). //; 35// The ROOT dictionary system provides a very extensive RTTI //; 36// environment that facilitates a.o. object inspectors, object I/O, //; 37// ROOT Trees, etc. Most of the type information is provided by the //; 38// CINT C++ interpreter. //; 39// //; 40// TMethodCall (method call environment) //; 41// //; 42//////////////////////////////////////////////////////////////////////////; 43 ; 44#include ""TNamed.h""; 45 ; 46#include ""ESTLType.h""; 47 ; 48// The following are opaque type and are never really declared; 49// The specific implemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TDictionary_8h_source.html:78,Guid,Guide,78,doc/v632/TDictionary_8h_source.html,https://root.cern,https://root.cern/doc/v632/TDictionary_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TInterpreter.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Variables ; TInterpreter.h File Reference. #include ""TDataType.h""; #include ""TDictionary.h""; #include ""TInterpreterValue.h""; #include ""TNamed.h""; #include ""TVirtualRWMutex.h""; #include <map>; #include <typeinfo>; #include <vector>; #include <string>; #include <utility>. Include dependency graph for TInterpreter.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TInterpreter::CallFuncIFacePtr_t;  ; struct  ROOT::Internal::InterpreterMutexRegistrationRAII;  ; class  TInterpreter::SuspendAutoLoadingRAII;  ; class  TInterpreter::SuspendAutoParsing;  ; class  TInterpreter;  This class defines an abstract interface to a generic command line interpreter. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Macros; #define gInterpreter   (TInterpreter::Instance());  ; #define R__LOCKGUARD_CLING(mutex)   ::ROOT::Internal::InterpreterMutexRegistrationRAII _R__UNIQUE_(R__guard)(mutex); { };  . Typedefs; typedef TInterpreter * CreateInterpreter_t(void *shlibHandle, const char *argv[]);  ; typedef void * DestroyInterpreter_t(TInterpreter *);  . Variables; R__EXTERN TInterpreter * gCling;  ; R__EXTERN TVirtualMutex * gInterpreterMutex;  . Macro Definition Documentation. ◆ gInterpreter. #define gInterpreter   (TInterpreter::Instance()). Definition at line 573 of file TInterpreter.h. ◆ R__LOCKGUARD_CLING. #define R__LOCKGUARD_CLING; (;  ; mutex);    ::ROOT::Internal::InterpreterMutexRegistrationRAII _R__UNIQUE_(R__guard",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h.html:83,Guid,Guide,83,doc/master/TInterpreter_8h.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TInterpreter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TInterpreter.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 01/03/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TInterpreter; 14#define ROOT_TInterpreter; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TInterpreter //; 19// //; 20// This class defines an abstract interface to a generic command line //; 21// interpreter. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TDataType.h""; 26#include ""TDictionary.h""; 27#include ""TInterpreterValue.h""; 28#include ""TNamed.h""; 29#include ""TVirtualRWMutex.h""; 30 ; 31#include <map>; 32#include <typeinfo>; 33#include <vector>; 34#include <string>; 35#include <utility>; 36 ; 37class TClass;; 38class TEnv;; 39class TFunction;; 40class TMethod;; 41class TObjArray;; 42class TEnum;; 43class TListOfEnums;; 44class TSeqCollection;; 45 ; 46R__EXTERN TVirtualMutex *gInterpreterMutex;; 47 ; 48# define R__LOCKGUARD_CLING(mutex) ::ROOT::Internal::InterpreterMutexRegistrationRAII _R__UNIQUE_(R__guard)(mutex); { }; 49 ; 50namespace ROOT {; 51namespace Internal {; 52struct InterpreterMutexRegistrationRAII {; 53 TLockGuard fLockGuard;; 54 InterpreterMutexRegistrationRAII(TVirtualMutex* mutex);; 55 ~InterpreterMutexRegistrationRAII();; 56};; 57}; 58}; 59 ; 60class TInterpreter : public TNamed {; 61 ; 62protected:; 63 void Execute(TMethod *method, TObjArray *params, int *error = nullptr) override = 0;; 64 virtual Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h_source.html:80,Guid,Guide,80,doc/master/TInterpreter_8h_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TSchemaRule.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSchemaRule.h. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#ifndef ROOT_TSchemaRule; 5#define ROOT_TSchemaRule; 6 ; 7#include ""TNamed.h""; 8#include ""TString.h""; 9 ; 10#include <vector>; 11#include <utility>; 12 ; 13class TBuffer;; 14class TVirtualObject;; 15class TObjArray;; 16 ; 17namespace ROOT {; 18 ; 19 class TSchemaRule : public TObject; 20 {; 21 public:; 22 ; 23 class TSources : public TNamed {; 24 private:; 25 TString fDimensions;; 26 public:; 27 TSources(const char *name = nullptr, const char *title = nullptr, const char *dims = nullptr) : TNamed(name,title), fDimensions(dims) {}; 28 const char *GetDimensions() { return fDimensions; }; 29 ; 30 ClassDefOverride(TSources,2);; 31 };; 32 ; 33 typedef enum; 34 {; 35 kReadRule = 0,; 36 kReadRawRule = 1,; 37 kNone = 99999; 38 } RuleType_t;; 39 ; 40 typedef void (*ReadFuncPtr_t)( char*, TVirtualObject* );; 41 typedef void (*ReadRawFuncPtr_t)( char*, TBuffer&);; 42 ; 43 TSchemaRule();; 44 virtual ~TSchemaRule();; 45 ; 46 TSchemaRule( const TSchemaRule& rhs );; 47 TSchemaRule& operator = ( const TSchemaRule& rhs );; 48 Bool_t operator == ( const TSchemaRule& rhs ) const;; 49 ; 50 ; 51 void Clear(Option_t * /*option*/ ="""") override;; 52 Bool_t SetFromRule( const char *rule );; 53 ; 54 const char *GetVersion( ) const;; 55 Bool_t SetVersion( const TString& version );; 56 Bool_t TestVersion( Int_t version ) const;; 57 Bool_t SetChecksum( const TString& checksum );; 58 Bool_t TestChecksum( UInt_t checksum ) const;; 59 void SetSourceClass( const TString& classname );; 60 const char *GetSourceClass() const;; 61 void SetTargetClass( const TString& classname );; 62 const char *GetTargetClass() const;; 63 void SetTarget( const TString& target );; 64 const TObjArray* GetTarget() const;; 65 const char *GetTargetString() const;; 66 void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRule_8h_source.html:79,Guid,Guide,79,doc/master/TSchemaRule_8h_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRule_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TSchemaRuleSet.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSchemaRuleSet.h. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#ifndef ROOT_TSchemaRuleSet; 5#define ROOT_TSchemaRuleSet; 6 ; 7#include ""TObject.h""; 8#include ""TString.h""; 9#include ""TClassRef.h""; 10#include <vector>; 11 ; 12#ifdef R__LESS_INCLUDES; 13class TObjArray;; 14#else; 15#include ""TObjArray.h""; 16#endif; 17 ; 18 ; 19namespace ROOT {; 20 ; 21class TSchemaRule;; 22 ; 23namespace Detail {; 24 class TSchemaRuleSet: public TObject; 25 {; 26 public:; 27 ; 28 class TMatches: public std::vector<const TSchemaRule*>; 29 {; 30 public:; 31 operator bool() { return !empty(); }; 32 const TSchemaRule* GetRuleWithSource( const TString& name ) const;; 33 const TSchemaRule* GetRuleWithTarget( const TString& name ) const;; 34 Bool_t HasRuleWithSource( const TString& name, Bool_t needingAlloc ) const;; 35 Bool_t HasRuleWithTarget( const TString& name, Bool_t willset ) const;; 36 };; 37 ; 38 enum EConsistencyCheck {; 39 kNoCheck = 0,; 40 kCheckAll = 1,; 41 kCheckConflict = 2; 42 };; 43 ; 44 TSchemaRuleSet();; 45 virtual ~TSchemaRuleSet();; 46 ; 47 Bool_t AddRule(TSchemaRule *rule, EConsistencyCheck checkConsistency = kCheckAll, TString *errmsg = nullptr);; 48 Bool_t AddRules(TSchemaRuleSet *rules, EConsistencyCheck checkConsistency = kCheckAll, TString *errmsg = nullptr);; 49 Bool_t HasRuleWithSourceClass( const TString &source) const;; 50 const TMatches FindRules( const TString &source ) const;; 51 const TMatches FindRules( const TString &source, Int_t version ) const;; 52 const TMatches FindRules( const TString &source, UInt_t checksum ) const;; 53 const TMatches FindRules( const TString &source, Int_t version, UInt_t checksum ) const;; 54 TClass* GetClass();; 55 UInt_t GetClassCheckSum() const;; 56 TString GetClassName() const;; 57 Int_t GetClassVersion() const;; 58 const TObjArr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRuleSet_8h_source.html:82,Guid,Guide,82,doc/master/TSchemaRuleSet_8h_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRuleSet_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/inc/TVirtualObject.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualObject.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Philippe Canal July, 2008; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualObject; 13#define ROOT_TVirtualObject; 14 ; 15/**; 16\class TVirtualObject; 17\ingroup IO; 18 ; 19Wrapper around an object and giving indirect access to its content; 20even if the object is not of a class in the Cint/Reflex dictionary.; 21*/; 22 ; 23#include ""TClassRef.h""; 24 ; 25 ; 26class TVirtualObject {; 27private:; 28 ; 29 TVirtualObject(const TVirtualObject&) = delete;; 30 TVirtualObject &operator=(const TVirtualObject&) = delete;; 31 ; 32public:; 33 TClassRef fClass;; 34 void *fObject;; 35 ; 36 TVirtualObject(TClass *cl) : fClass(cl), fObject(cl ? cl->New() : nullptr) { }; 37 ~TVirtualObject() { if (fClass) fClass->Destructor(fObject); }; 38 ; 39 ; 40 TClass *GetClass() const { return fClass; }; 41 void *GetObject() const { return fObject; }; 42 ; 43};; 44 ; 45#endif // ROOT_TVirtualObject; TClassRef.h; TClassRefTClassRef is used to implement a permanent reference to a TClass object.Definition TClassRef.h:28; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::Destructorvoid Destructor(void *obj, Bool_t dtorOnly=kFALSE)Explicitly call destructor for object.Definition TClass.cxx:5467; TVirtualObjectWrapper around an object and giving indirect access to its content even if the object is not of a cla...Definition TVirtualObject.h:26; TVirtualObject::fObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualObject_8h_source.html:82,Guid,Guide,82,doc/master/TVirtualObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualObject_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/src/TClass.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id: 7109cb45f1219c2aae6be19906ae5a63e31972ef $; 2// Author: Rene Brun 07/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TClass; 13TClass instances represent classes, structs and namespaces in the ROOT type system.; 14 ; 15TClass instances are created starting from different sources of information:; 161. TStreamerInfo instances saved in a ROOT file which is opened. This is called in jargon an *emulated TClass*.; 172. From TProtoClass instances saved in a ROOT pcm file created by the dictionary generator and the dictionary itself.; 183. From a lookup in the AST built by cling.; 19 ; 20If a TClass instance is built through the mechanisms 1. and 2., it does not contain information about methods of the; 21class/struct/namespace it represents. Conversely, if built through 3. or 1., it does not carry the information which is necessary; 22to ROOT to perform I/O of instances of the class/struct it represents.; 23The mechanisms 1., 2. and 3. are not mutually exclusive: it can happen that during the execution of the program, all; 24the three are triggered, modifying the state of the TClass instance.; 25 ; 26In order to retrieve a TClass instance from the type system, a query can be executed as follows through the static; 27TClass::GetClass method:; 28 ; 29~~~ {.cpp}; 30auto myClassTClass_0 = TClass::GetClass(""myClass"");; 31auto myClassTClass_1 = TClass::GetClass<myClass>();; 32auto myClassTClass_2 = TClass::GetClass(myClassTypeInfo);; 33~",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:76,Guid,Guide,76,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/src/TClass.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id: 7109cb45f1219c2aae6be19906ae5a63e31972ef $; 2// Author: Rene Brun 07/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TClass; 13TClass instances represent classes, structs and namespaces in the ROOT type system.; 14 ; 15TClass instances are created starting from different sources of information:; 161. TStreamerInfo instances saved in a ROOT file which is opened. This is called in jargon an *emulated TClass*.; 172. From TProtoClass instances saved in a ROOT pcm file created by the dictionary generator and the dictionary itself.; 183. From a lookup in the AST built by cling.; 19 ; 20If a TClass instance is built through the mechanisms 1. and 2., it does not contain information about methods of the; 21class/struct/namespace it represents. Conversely, if built through 3. or 1., it does not carry the information which is necessary; 22to ROOT to perform I/O of instances of the class/struct it represents.; 23The mechanisms 1., 2. and 3. are not mutually exclusive: it can happen that during the execution of the program, all; 24the three are triggered, modifying the state of the TClass instance.; 25 ; 26In order to retrieve a TClass instance from the type system, a query can be executed as follows through the static; 27TClass::GetClass method:; 28 ; 29~~~ {.cpp}; 30auto myClassTClass_0 = TClass::GetClass(""myClass"");; 31auto myClassTClass_1 = TClass::GetClass<myClass>();; 32auto myClassTClass_2 = TClass::GetClass(myClassTypeInfo);; 33~~",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:75,Guid,Guide,75,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/src/TInterpreter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TInterpreter.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 01/03/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TInterpreter; 13This class defines an abstract interface to a generic command line; 14interpreter.; 15*/; 16 ; 17#include ""TInterpreter.h""; 18 ; 19#include ""TROOT.h""; 20#include ""TError.h""; 21#include ""TGlobal.h""; 22 ; 23 ; 24TInterpreter* gCling = nullptr; // returns pointer to global TCling object; 25static TInterpreter *gInterpreterLocal = nullptr; // The real holder of the pointer.; 26 ; 27 ; 28namespace {; 29static struct AddPseudoGlobals {; 30AddPseudoGlobals() {; 31 ; 32 // use special functor to extract pointer on gInterpreterLocal variable; 33 TGlobalMappedFunction::MakeFunctor(""gInterpreter"", ""TInterpreter*"", TInterpreter::Instance, [] {; 34 TInterpreter::Instance();; 35 return (void *) &gInterpreterLocal;; 36 });; 37 ; 38}; 39} gAddPseudoGlobals;; 40}; 41 ; 42 ; 43ClassImp(TInterpreter);; 44 ; 45////////////////////////////////////////////////////////////////////////////////; 46/// TInterpreter ctor only called by derived classes.; 47 ; 48TInterpreter::TInterpreter(const char *name, const char *title); 49 : TNamed(name, title); 50{; 51 gInterpreterLocal = this;; 52 gCling = this;; 53}; 54 ; 55////////////////////////////////////////////////////////////////////////////////; 56/// returns gInterpreter global; 57 ; 58TInterpreter *TInterpreter::Instance(); 59{; 60 if (gInterpreterLocal == nullptr) {; 61 static TROOT *getROOT =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8cxx_source.html:82,Guid,Guide,82,doc/master/TInterpreter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/src/TSchemaRule.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSchemaRule.cxx. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#include ""TSchemaRule.h""; 5 ; 6#include ""RConversionRuleParser.h""; 7#include ""TClassEdit.h""; 8#include ""TSchemaRuleProcessor.h""; 9#include ""TSchemaType.h""; 10#include ""TObjArray.h""; 11#include ""TObjString.h""; 12#include ""TROOT.h""; 13 ; 14#include <utility>; 15#include <iostream>; 16#include <vector>; 17#include <list>; 18#include <string>; 19#include <cstdlib>; 20#include <sstream>; 21 ; 22ClassImp(TSchemaRule);; 23 ; 24using namespace ROOT;; 25 ; 26namespace {; 27 static Bool_t IsIrrelevantCharacter(char c); 28 {; 29 return (c == ' ' || c == '\n' || c == '\t');; 30 }; 31 ; 32 static void AdvanceOverIrrelevantCharacter(const char*& str); 33 {; 34 while (IsIrrelevantCharacter(*str)) {; 35 ++str;; 36 }; 37 }; 38 ; 39 // check if lhs matches rhs if we ignore irelevant white space differences; 40 ; 41 static Bool_t IsCodeEquivalent(const TString& lhs, const TString& rhs); 42 {; 43 Bool_t result = kTRUE;; 44 ; 45 if (lhs != rhs) {; 46 const char null = '\0';; 47 const char* left = lhs.Data();; 48 const char* right = rhs.Data();; 49 Bool_t literal = false;; 50 // skip initial white space; 51 AdvanceOverIrrelevantCharacter(left);; 52 AdvanceOverIrrelevantCharacter(right);; 53 ; 54 while (*left != null || *right != null) {; 55 // If both chars are white space, skip consecutive white space; 56 if (!literal && IsIrrelevantCharacter(*left) && IsIrrelevantCharacter(*right)) {; 57 AdvanceOverIrrelevantCharacter(left);; 58 AdvanceOverIrrelevantCharacter(right);; 59 continue;; 60 }; 61 // Check if one string has trailing white space, and the other doesn't.; 62 if (*left == null || *right == null) {; 63 AdvanceOverIrrelevantCharacter(left);; 64 AdvanceOverIrrelevantCharacter(right);; 65 result = (*left == null && *right == nul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRule_8cxx_source.html:81,Guid,Guide,81,doc/master/TSchemaRule_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRule_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/meta/src/TSchemaRuleSet.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSchemaRuleSet.cxx. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#include ""TSchemaRuleSet.h""; 5#include ""TSchemaRule.h""; 6#include ""TObjArray.h""; 7#include ""TObjString.h""; 8#include ""TClass.h""; 9#include ""TROOT.h""; 10#include ""TBuffer.h""; 11#include <iostream>; 12 ; 13#include ""TVirtualCollectionProxy.h""; 14#include ""TVirtualStreamerInfo.h""; 15#include ""TVirtualMutex.h""; 16#include ""TInterpreter.h"" // For gInterpreterMutex; 17#include ""TStreamerElement.h""; 18#include ""TClassEdit.h""; 19 ; 20ClassImp(TSchemaRule);; 21 ; 22using namespace ROOT;; 23using namespace ROOT::Detail;; 24 ; 25////////////////////////////////////////////////////////////////////////////////; 26/// Default constructor.; 27 ; 28TSchemaRuleSet::TSchemaRuleSet(): fPersistentRules( nullptr ), fRemainingRules( nullptr ),; 29 fAllRules( nullptr ), fVersion(-3), fCheckSum( 0 ); 30{; 31 fPersistentRules = new TObjArray();; 32 fRemainingRules = new TObjArray();; 33 fAllRules = new TObjArray();; 34 fAllRules->SetOwner( kTRUE );; 35}; 36 ; 37////////////////////////////////////////////////////////////////////////////////; 38/// Destructor.; 39 ; 40TSchemaRuleSet::~TSchemaRuleSet(); 41{; 42 delete fPersistentRules;; 43 delete fRemainingRules;; 44 delete fAllRules;; 45}; 46 ; 47////////////////////////////////////////////////////////////////////////////////; 48/// The ls function lists the contents of a class on stdout. Ls output; 49/// is typically much less verbose then Dump().; 50 ; 51void TSchemaRuleSet::ls(Option_t *) const; 52{; 53 TROOT::IndentLevel();; 54 std::cout << ""TSchemaRuleSet for "" << fClassName << "":\n"";; 55 TROOT::IncreaseDirLevel();; 56 TObject *object = nullptr;; 57 TIter next(fPersistentRules);; 58 while ((object = next())) {; 59 object->ls(fClassName);; 60 }; 61 TROOT::DecreaseDirLevel();; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRuleSet_8cxx_source.html:84,Guid,Guide,84,doc/master/TSchemaRuleSet_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRuleSet_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/metacling/src/TCling.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Enumerations |; Functions |; Variables ; TCling.cxx File Reference. #include ""TCling.h""; #include ""ROOT/FoundationUtils.hxx""; #include ""TClingBaseClassInfo.h""; #include ""TClingCallFunc.h""; #include ""TClingClassInfo.h""; #include ""TClingDataMemberInfo.h""; #include ""TClingMethodArgInfo.h""; #include ""TClingMethodInfo.h""; #include ""TClingRdictModuleFileExtension.h""; #include ""TClingTypedefInfo.h""; #include ""TClingTypeInfo.h""; #include ""TClingValue.h""; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TGlobal.h""; #include ""TDataType.h""; #include ""TClass.h""; #include ""TClassEdit.h""; #include ""TClassTable.h""; #include ""TClingCallbacks.h""; #include ""TClingDiagnostics.h""; #include ""TBaseClass.h""; #include ""TDataMember.h""; #include ""TMemberInspector.h""; #include ""TMethod.h""; #include ""TMethodArg.h""; #include ""TFunctionTemplate.h""; #include ""TObjArray.h""; #include ""TObjString.h""; #include ""TString.h""; #include ""THashList.h""; #include ""TVirtualPad.h""; #include ""TSystem.h""; #include ""TVirtualMutex.h""; #include ""TError.h""; #include ""TEnv.h""; #include ""TEnum.h""; #include ""TEnumConstant.h""; #include ""THashTable.h""; #include ""RConversionRuleParser.h""; #include ""RConfigure.h""; #include ""compiledata.h""; #include ""strlcpy.h""; #include ""snprintf.h""; #include ""TClingUtils.h""; #include ""TVirtualCollectionProxy.h""; #include ""TVirtualStreamerInfo.h""; #include ""TListOfDataMembers.h""; #include ""TListOfEnums.h""; #include ""TListOfEnumsWithLock.h""; #include ""TListOfFunctions.h""; #include ""TListOfFunctionTemplates.h""; #include ""TMemFile.h""; #include ""TProtoClass.h""; #include ""TStreamerInfo.h""; #include ""ThreadLocalStorage.h""; #include ""TFile.h""; #include ""TKey.h""; #include ""ClingRAII.h""; #include ""clang/AST/ASTContext.h""; #include ""clang/AST/Decl.h""; #include ""clang/AST/DeclarationName.h""; #include ""clang/AST/GlobalDecl.h""; #include ""clan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx.html:84,Guid,Guide,84,doc/master/TCling_8cxx.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: core/metacling/src/TCling.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCling.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// vim: sw=3 ts=3 expandtab foldmethod=indent; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TCling; 13 ; 14This class defines an interface to the cling C++ interpreter.; 15 ; 16Cling is a full ANSI compliant C++-11 interpreter based on; 17clang/LLVM technology.; 18*/; 19 ; 20#include ""TCling.h""; 21 ; 22#include ""ROOT/FoundationUtils.hxx""; 23 ; 24#include ""TClingBaseClassInfo.h""; 25#include ""TClingCallFunc.h""; 26#include ""TClingClassInfo.h""; 27#include ""TClingDataMemberInfo.h""; 28#include ""TClingMethodArgInfo.h""; 29#include ""TClingMethodInfo.h""; 30#include ""TClingRdictModuleFileExtension.h""; 31#include ""TClingTypedefInfo.h""; 32#include ""TClingTypeInfo.h""; 33#include ""TClingValue.h""; 34 ; 35#include ""TROOT.h""; 36#include ""TApplication.h""; 37#include ""TGlobal.h""; 38#include ""TDataType.h""; 39#include ""TClass.h""; 40#include ""TClassEdit.h""; 41#include ""TClassTable.h""; 42#include ""TClingCallbacks.h""; 43#include ""TClingDiagnostics.h""; 44#include ""TBaseClass.h""; 45#include ""TDataMember.h""; 46#include ""TMemberInspector.h""; 47#include ""TMethod.h""; 48#include ""TMethodArg.h""; 49#include ""TFunctionTemplate.h""; 50#include ""TObjArray.h""; 51#include ""TObjString.h""; 52#include ""TString.h""; 53#include ""THashList.h""; 54#include ""TVirtualPad.h""; 55#include ""TSystem.h""; 56#include ""TVirtualMutex.h""; 57#include ""TError.h""; 58#include ""TEnv.h""; 59#include ""TEnum.h""; 60#include ""TEnumConstant.h""; 61#include ""THashTable.h""; 62#include ""RConversion",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:81,Guid,Guide,81,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/metacling/src/TCling.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCling.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Axel Naumann, 2011-10-19; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TCling; 14#define ROOT_TCling; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TCling //; 19// //; 20// This class defines an interface to the cling C++ interpreter. //; 21// //; 22// Cling is a full ANSI compliant C++ interpreter based on //; 23// clang/LLVM technology. //; 24// //; 25//////////////////////////////////////////////////////////////////////////; 26 ; 27#include ""TInterpreter.h""; 28 ; 29#include <map>; 30#include <memory>; 31#include <set>; 32#include <tuple>; 33#include <unordered_map>; 34#include <unordered_set>; 35#include <vector>; 36#include <string>; 37#include <utility>; 38 ; 39#ifndef WIN32; 40#define TWin32SendClass char; 41#endif; 42 ; 43namespace llvm {; 44 class GlobalValue;; 45 class StringRef;; 46}; 47 ; 48namespace clang {; 49 class CXXRecordDecl;; 50 class Decl;; 51 class DeclContext;; 52 class EnumDecl;; 53 class FunctionDecl;; 54 class IdentifierIterator;; 55 class NamedDecl;; 56 class NamespaceDecl;; 57 class TagDecl;; 58 class Type;; 59 class QualType;; 60}; 61namespace cling {; 62 class Interpreter;; 63 class MetaProcessor;; 64 class Transaction;; 65 class Value;; 66}; 67 ; 68class TClingCallbacks;; 69class TEnv;; 70class TFile;; 71class THashTable;; 72class TInterpreterValue;; 73class TMethod;; 74class TObjArray;; 75class TListOfDataMembers;; 76class TLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8h_source.html:79,Guid,Guide,79,doc/master/TCling_8h_source.html,https://root.cern,https://root.cern/doc/master/TCling_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/metacling/src/TClingCallFunc.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Functions |; Variables ; TClingCallFunc.cxx File Reference. #include ""TClingCallFunc.h""; #include ""TClingClassInfo.h""; #include ""TClingMethodInfo.h""; #include ""TClingUtils.h""; #include ""TError.h""; #include ""TCling.h""; #include ""TInterpreter.h""; #include ""cling/Interpreter/CompilationOptions.h""; #include ""cling/Interpreter/Interpreter.h""; #include ""cling/Interpreter/LookupHelper.h""; #include ""cling/Interpreter/Transaction.h""; #include ""cling/Interpreter/Value.h""; #include ""cling/Utils/AST.h""; #include ""clang/AST/ASTContext.h""; #include ""clang/AST/Decl.h""; #include ""clang/AST/DeclCXX.h""; #include ""clang/AST/GlobalDecl.h""; #include ""clang/AST/PrettyPrinter.h""; #include ""clang/AST/QualTypeNames.h""; #include ""clang/AST/RecordLayout.h""; #include ""clang/AST/Type.h""; #include ""clang/Frontend/CompilerInstance.h""; #include ""clang/Lex/Preprocessor.h""; #include ""clang/Sema/Sema.h""; #include ""clang/Sema/Lookup.h""; #include ""llvm/ADT/APInt.h""; #include ""llvm/ExecutionEngine/ExecutionEngine.h""; #include ""llvm/ExecutionEngine/GenericValue.h""; #include ""llvm/Support/Casting.h""; #include ""llvm/Support/raw_ostream.h""; #include ""llvm/IR/LLVMContext.h""; #include ""llvm/IR/DerivedTypes.h""; #include ""llvm/IR/Function.h""; #include ""llvm/IR/GlobalValue.h""; #include ""llvm/IR/Module.h""; #include ""llvm/IR/Type.h""; #include ""clang/Sema/SemaInternal.h""; #include <map>; #include <string>; #include <sstream>. Include dependency graph for TClingCallFunc.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define X(type, name)    case BuiltinType::name: fArgVals[i] = cling::Value::Create(*fInterp, fArgVals[i].castAs<type>()); break;;  . Functions; static void EvaluateExpr (cling::Interpreter &interp, const Expr *E, cling::Value &V);  ; static void GetTypeAsString (QualType QT, string &type_name, ASTContex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClingCallFunc_8cxx.html:92,Guid,Guide,92,doc/master/TClingCallFunc_8cxx.html,https://root.cern,https://root.cern/doc/master/TClingCallFunc_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: core/metacling/src/rootclingTCling.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rootclingTCling.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef R__DLLEXPORT; 12# if _WIN32; 13# define R__DLLEXPORT __declspec(dllexport); 14# else; 15# define R__DLLEXPORT __attribute__ ((visibility (""default""))); 16# endif; 17#endif; 18 ; 19#include ""rootclingTCling.h""; 20 ; 21#undef R__DLLEXPORT; 22 ; 23#ifdef __FreeBSD__; 24char* __progname;; 25char** environ;; 26#endif; 27 ; 28#include ""TROOT.h""; 29#include ""TCling.h""; 30 ; 31extern ""C""; 32const char ** *TROOT__GetExtraInterpreterArgs(); 33{; 34 return &TROOT::GetExtraInterpreterArgs();; 35}; 36 ; 37extern ""C""; 38const char *TROOT__GetIncludeDir(); 39{; 40 return TROOT::GetIncludeDir();; 41}; 42 ; 43extern ""C""; 44const char *TROOT__GetEtcDir(); 45{; 46 return TROOT::GetEtcDir();; 47}; 48 ; 49extern ""C""; 50cling::Interpreter *TCling__GetInterpreter(); 51{; 52 static auto triggerInitialization = gROOT;; 53 (void)triggerInitialization;; 54 return (cling::Interpreter *)((TCling *)gCling)->GetInterpreterImpl();; 55}; 56 ; TCling.h; gClingR__EXTERN TInterpreter * gClingDefinition TInterpreter.h:574; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TROOT::GetIncludeDirstatic const TString & GetIncludeDir()Get the include directory in the installation. Static utility function.Definition TROOT.cxx:3046; TROOT::GetEtcDirstatic const TString & GetEtcDir()Get the sysconfig directory in the i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootclingTCling_8cxx_source.html:90,Guid,Guide,90,doc/master/rootclingTCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootclingTCling_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/rint/inc/TRint.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TRint.h File Reference. #include ""TApplication.h""; #include ""TString.h"". Include dependency graph for TRint.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TRint;  . corerintincTRint.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8h.html:76,Guid,Guide,76,doc/master/TRint_8h.html,https://root.cern,https://root.cern/doc/master/TRint_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: core/rint/inc/TRint.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRint.h. Go to the documentation of this file. 1// @(#)root/rint:$Id$; 2// Author: Rene Brun 17/02/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TRint; 14#define ROOT_TRint; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// Rint //; 19// //; 20// Rint is the ROOT Interactive Interface. It allows interactive access //; 21// to the ROOT system via a C++ interpreter. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TApplication.h""; 26#include ""TString.h""; 27 ; 28class TFileHandler;; 29 ; 30 ; 31class TRint : public TApplication {; 32 ; 33private:; 34 Int_t fNcmd; // command history number; 35 TString fDefaultPrompt; // default prompt: ""root [%d] ""; 36 TString fNonContinuePrompt; // default prompt before continue prompt was set; 37 char fPrompt[64]; // interpreter prompt; 38 Bool_t fInterrupt; // if true macro execution will be stopped; 39 Int_t fCaughtSignal; // TRint just caught a signal; 40 TFileHandler *fInputHandler; // terminal input handler; 41 Bool_t fBackslashContinue{};// whether the last line ended with '\'; 42 ; 43 TRint(const TRint&) = delete;; 44 TRint& operator=(const TRint&) = delete;; 45 ; 46 void ExecLogon();; 47 Longptr_t ProcessRemote(const char *line, Int_t *error = nullptr) override;; 48 Longptr_t ProcessLineNr(const char* filestem, const char *line, Int_t *error = nullptr);; 49 ; 50public:; 51 TRint(const char *appClassName, Int_t *argc, char **argv, void *options = null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8h_source.html:73,Guid,Guide,73,doc/master/TRint_8h_source.html,https://root.cern,https://root.cern/doc/master/TRint_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/rint/src/TRint.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRint.cxx. Go to the documentation of this file. 1// @(#)root/rint:$Id$; 2// Author: Rene Brun 17/02/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// Rint //; 15// //; 16// Rint is the ROOT Interactive Interface. It allows interactive access //; 17// to the ROOT system via the Cling C/C++ interpreter. //; 18// //; 19//////////////////////////////////////////////////////////////////////////; 20 ; 21#include ""TROOT.h""; 22#include ""TClass.h""; 23#include ""TClassEdit.h""; 24#include ""TVirtualX.h""; 25#include ""TObjectTable.h""; 26#include ""TClassTable.h""; 27#include ""TStopwatch.h""; 28#include ""TBenchmark.h""; 29#include ""TRint.h""; 30#include ""TSystem.h""; 31#include ""TEnv.h""; 32#include ""TSysEvtHandler.h""; 33#include ""TSystemDirectory.h""; 34#include ""TError.h""; 35#include ""TException.h""; 36#include ""TInterpreter.h""; 37#include ""TObjString.h""; 38#include ""TObjArray.h""; 39#include ""TStorage.h"" // ROOT::Internal::gMmallocDesc; 40#include ""ThreadLocalStorage.h""; 41#include ""TTabCom.h""; 42#include <cstdlib>; 43#include <algorithm>; 44#include <iostream>; 45#include ""Getline.h""; 46#include ""strlcpy.h""; 47#include ""snprintf.h""; 48 ; 49#ifdef R__UNIX; 50#include <signal.h>; 51#include <unistd.h>; 52#endif; 53 ; 54////////////////////////////////////////////////////////////////////////////////; 55 ; 56static Int_t Key_Pressed(Int_t key); 57{; 58 gApplication->KeyPressed(key);; 59 return 0;; 60}; 61 ; 62////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:75,Guid,Guide,75,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/unix/inc/TUnixSystem.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs ; TUnixSystem.h File Reference. #include ""TSystem.h""; #include ""TSysEvtHandler.h""; #include ""TTimer.h""; #include <string>. Include dependency graph for TUnixSystem.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TUnixSystem;  . Typedefs; typedef void(* SigHandler_t) (ESignals);  . Typedef Documentation. ◆ SigHandler_t. typedef void(* SigHandler_t) (ESignals). Definition at line 29 of file TUnixSystem.h. coreunixincTUnixSystem.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8h.html:82,Guid,Guide,82,doc/master/TUnixSystem_8h.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: core/unix/inc/TUnixSystem.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnixSystem.h. Go to the documentation of this file. 1// @(#)root/unix:$Id$; 2// Author: Fons Rademakers 15/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TUnixSystem; 13#define ROOT_TUnixSystem; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TUnixSystem //; 19// //; 20// Class providing an interface to the UNIX Operating System. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TSystem.h""; 25#include ""TSysEvtHandler.h""; 26#include ""TTimer.h""; 27#include <string>; 28 ; 29typedef void (*SigHandler_t)(ESignals);; 30 ; 31 ; 32class TUnixSystem : public TSystem {; 33 ; 34private:; 35 void FillWithCwd(char *cwd) const;; 36 ; 37protected:; 38 const char *GetLinkedLibraries() override;; 39 ; 40 // static functions providing semi-low level interface to raw Unix; 41 static int UnixMakedir(const char *name);; 42 static void *UnixOpendir(const char *name);; 43 static const char *UnixGetdirentry(void *dir);; 44 static const char *UnixHomedirectory(const char *user = nullptr);; 45 static const char *UnixHomedirectory(const char *user, char *path, char *mydir);; 46 static Long64_t UnixNow();; 47 static int UnixWaitchild();; 48 static int UnixSetitimer(Long_t ms);; 49 static int UnixSelect(Int_t nfds, TFdSet *readready, TFdSet *writeready,; 50 Long_t timeout);; 51 static void UnixSignal(ESignals sig, SigHandler_t h);; 52 static const char *UnixSigname(ESignals sig);; 53 static void UnixSigAlarm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8h_source.html:79,Guid,Guide,79,doc/master/TUnixSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/unix/src/TUnixSystem.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnixSystem.cxx. Go to the documentation of this file. 1// @(#)root/unix:$Id: 887c618d89c4ed436e4034fc133f468fecad651b $; 2// Author: Fons Rademakers 15/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// TUnixSystem //; 15// //; 16// Class providing an interface to the UNIX Operating System. //; 17// //; 18//////////////////////////////////////////////////////////////////////////; 19 ; 20#include ""RConfigure.h""; 21#include <ROOT/RConfig.hxx>; 22#include <ROOT/FoundationUtils.hxx>; 23#include ""TUnixSystem.h""; 24#include ""TROOT.h""; 25#include ""TError.h""; 26#include ""TOrdCollection.h""; 27#include ""TRegexp.h""; 28#include ""TPRegexp.h""; 29#include ""TException.h""; 30#include ""TEnv.h""; 31#include ""Getline.h""; 32#include ""TInterpreter.h""; 33#include ""TApplication.h""; 34#include ""TObjString.h""; 35#include ""TVirtualMutex.h""; 36#include ""ThreadLocalStorage.h""; 37#include ""TObjArray.h""; 38#include ""snprintf.h""; 39#include ""strlcpy.h""; 40#include <iostream>; 41#include <fstream>; 42#include <map>; 43#include <algorithm>; 44#include <atomic>; 45 ; 46//#define G__OLDEXPAND; 47 ; 48#include <unistd.h>; 49#include <stdlib.h>; 50#include <sys/types.h>; 51#if defined(R__SUN) || defined(R__AIX) || \; 52 defined(R__LINUX) || defined(R__SOLARIS) || \; 53 defined(R__FBSD) || defined(R__OBSD) || \; 54 defined(R__MACOSX) || defined(R__HURD); 55#define HAS_DIRENT; 56#endif; 57#ifdef HAS_DIRENT; 58# include <dirent.h>; 59#else; 60# include <sys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:81,Guid,Guide,81,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/zip/inc/Compression.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions |; Variables ; Compression.h File Reference. #include ""RtypesCore.h""; #include ""ROOT/RConfig.hxx""; #include <string>. Include dependency graph for Compression.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::RCompressionSetting::EAlgorithm;  ; struct  ROOT::RCompressionSetting::EDefaults;  ; struct  ROOT::RCompressionSetting::ELevel;  ; struct  ROOT::RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; int ROOT::CompressionSettings (RCompressionSetting::EAlgorithm::EValues algorithm, int compressionLevel);  ; int ROOT::CompressionSettings (ROOT::ECompressionAlgorithm algorithm, int compressionLevel) R__DEPRECATED(6;  ; enum ROOT::R__DEPRECATED (6, 34, ""Use RCompressionSetting::EAlgorithm instead"") ECompressionAlgorithm;  . Variables; int Use the overload accepting RCompressionSetting::EAlgorithm ROOT::instead;  . corezipincCompression.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Compression_8h.html:81,Guid,Guide,81,doc/master/Compression_8h.html,https://root.cern,https://root.cern/doc/master/Compression_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: core/zip/inc/Compression.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Compression.h. Go to the documentation of this file. 1// @(#)root/zip:$Id$; 2// Author: David Dagenhart May 2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_Compression; 13#define ROOT_Compression; 14 ; 15#include ""RtypesCore.h""; 16#include ""ROOT/RConfig.hxx""; 17 ; 18#include <string>; 19 ; 20namespace ROOT {; 21 ; 22/// The global settings depend on a global variable named R__ZipMode which can be; 23/// modified by a global function named R__SetZipMode. Both are defined in Bits.h.; 24///; 25/// - The default is to use the global setting and the default of the global; 26/// setting is to use the ZLIB compression algorithm.; 27/// - The LZMA algorithm (from the XZ package) is also available. The LZMA; 28/// compression usually results in greater compression factors, but takes; 29/// more CPU time and memory when compressing. LZMA memory usage is particularly; 30/// high for compression levels 8 and 9.; 31/// - Finally, the LZ4 package results in worse compression ratios; 32/// than ZLIB but achieves much faster decompression rates.; 33///; 34/// The current algorithms support level 1 to 9. The higher the level the greater; 35/// the compression and more CPU time and memory resources used during compression.; 36/// Level 0 means no compression.; 37///; 38/// Recommendation for the compression algorithm's levels:; 39/// - ZLIB is recommended to be used with compression level 1 [101]; 40/// - LZMA is recommended to be used with compression level 7-8 (higher is better,; 41/// since in the case of LZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Compression_8h_source.html:78,Guid,Guide,78,doc/master/Compression_8h_source.html,https://root.cern,https://root.cern/doc/master/Compression_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: core/zip/inc/Compression.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Compression.h. Go to the documentation of this file. 1// @(#)root/zip:$Id$; 2// Author: David Dagenhart May 2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_Compression; 13#define ROOT_Compression; 14 ; 15#include ""RtypesCore.h""; 16 ; 17#include <string>; 18 ; 19namespace ROOT {; 20 ; 21/// The global settings depend on a global variable named R__ZipMode which can be; 22/// modified by a global function named R__SetZipMode. Both are defined in Bits.h.; 23///; 24/// - The default is to use the global setting and the default of the global; 25/// setting is to use the ZLIB compression algorithm.; 26/// - The LZMA algorithm (from the XZ package) is also available. The LZMA; 27/// compression usually results in greater compression factors, but takes; 28/// more CPU time and memory when compressing. LZMA memory usage is particularly; 29/// high for compression levels 8 and 9.; 30/// - Finally, the LZ4 package results in worse compression ratios; 31/// than ZLIB but achieves much faster decompression rates.; 32///; 33/// The current algorithms support level 1 to 9. The higher the level the greater; 34/// the compression and more CPU time and memory resources used during compression.; 35/// Level 0 means no compression.; 36///; 37/// Recommendation for the compression algorithm's levels:; 38/// - ZLIB is recommended to be used with compression level 1 [101]; 39/// - LZMA is recommended to be used with compression level 7-8 (higher is better,; 40/// since in the case of LZMA we don't care about compressi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Compression_8h_source.html:77,Guid,Guide,77,doc/v632/Compression_8h_source.html,https://root.cern,https://root.cern/doc/v632/Compression_8h_source.html,1,['Guid'],['Guide']
Usability,. ROOT: double Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. double Class Reference. The documentation for this class was generated from the following files:. double. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classdouble.html:62,Guid,Guide,62,doc/master/classdouble.html,https://root.cern,https://root.cern/doc/master/classdouble.html,2,['Guid'],['Guide']
Usability,. ROOT: double Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. double Class Reference. The documentation for this class was generated from the following files:. double. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classdouble.html:61,Guid,Guide,61,doc/v632/classdouble.html,https://root.cern,https://root.cern/doc/v632/classdouble.html,2,['Guid'],['Guide']
Usability,". ROOT: fileDesc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; fileDesc Class Reference. . Definition at line 741 of file TProofBench.cxx. Public Member Functions;  fileDesc (const char *n, const char *o, Long_t t, const char *d);  ; Int_t Compare (const TObject *o) const override;  Compare abstract method. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classfileDesc.html:64,Guid,Guide,64,doc/master/classfileDesc.html,https://root.cern,https://root.cern/doc/master/classfileDesc.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: fw3dlego Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Variables ; fw3dlego Namespace Reference. Variables; const double xbins [xbins_n];  ; const int xbins_n = 83;  . Variable Documentation. ◆ xbins. const double fw3dlego::xbins[xbins_n]. Initial value:= {; -5.191, -4.889, -4.716, -4.538, -4.363, -4.191, -4.013, -3.839, -3.664, -3.489, -3.314, -3.139, -2.964, -2.853,; -2.650, -2.500, -2.322, -2.172, -2.043, -1.930, -1.830, -1.740, -1.653, -1.566, -1.479, -1.392, -1.305, -1.218,; -1.131, -1.044, -0.957, -0.870, -0.783, -0.696, -0.609, -0.522, -0.435, -0.348, -0.261, -0.174, -0.087, 0.000,; 0.087, 0.174, 0.261, 0.348, 0.435, 0.522, 0.609, 0.696, 0.783, 0.870, 0.957, 1.044, 1.131, 1.218,; 1.305, 1.392, 1.479, 1.566, 1.653, 1.740, 1.830, 1.930, 2.043, 2.172, 2.322, 2.500, 2.650, 2.853,; 2.964, 3.139, 3.314, 3.489, 3.664, 3.839, 4.013, 4.191, 4.363, 4.538, 4.716, 4.889, 5.191}. Definition at line 49 of file collection_proxies.C. ◆ xbins_n. const int fw3dlego::xbins_n = 83. Definition at line 48 of file collection_proxies.C. fw3dlego. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespacefw3dlego.html:68,Guid,Guide,68,doc/master/namespacefw3dlego.html,https://root.cern,https://root.cern/doc/master/namespacefw3dlego.html,2,['Guid'],['Guide']
Usability,". ROOT: geom/gdml/writer.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. writer.py. Go to the documentation of this file. 1# @(#)root/gdml:$Id$; 2# Author: Witold Pokorski 05/06/2006; 3# This is the application-independent part of the GDML 'writer' implementation.; 4# It contains the 'writeFile' method (at the end of the file) which does the actual; 5# formating and writing out of the GDML file as well as the specialized 'add-element'; 6# methods for all the supported GDML elements. These methods are used to build; 7# the content of the GDML document, which is then generatd using the 'writeFile' method.; 8 ; 9# The constructor of this class takes the output file (.gdml) as argument.; 10# An instance of this class should be passed to the constructor of application-specific; 11# 'writer binding' (in the present case ROOTwriter) as argument.; 12 ; 13# For any question or remarks concerning this code, please send an email to; 14# Witold.Pokorski@cern.ch.; 15 ; 16class writer(object):; 17 ; 18 def __init__(self, fname):; 19 ; 20 self.gdmlfile = fname; 21 self.define = ['define',{},[]]; 22 self.materials = ['materials',{},[]]; 23 self.solids = ['solids',{},[]]; 24 self.structure = ['structure',{},[]]; 25 self.document = ['gdml',{'xmlns:gdml':""http://cern.ch/2001/Schemas/GDML"",; 26 'xmlns:xsi':""http://www.w3.org/2001/XMLSchema-instance"",; 27 'xsi:noNamespaceSchemaLocation':""gdml.xsd""},; 28 [self.define, self.materials, self.solids, self.structure]]; 29 ; 30 def addPosition(self, name, x, y, z):; 31 self.define[2].append(['position',{'name':name, 'x':x, 'y':y, 'z':z, 'unit':'cm'},[]]); 32 ; 33 def addRotation(self, name, x, y, z):; 34 self.define[2].append(['rotation',{'name':name, 'x':x, 'y':y, 'z':z, 'unit':'deg'},[]]); 35 ; 36 def addMaterial(self, name, a, z, rho):; 37 self.materials[2].append(['material', {'name':name, 'Z':z},; 38 [['D',{'value':rho},[]], ['atom',{'value':a},[]]] ] ); 39 ; 40 def addMixture(self, name, rh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/writer_8py_source.html:71,Guid,Guide,71,doc/master/writer_8py_source.html,https://root.cern,https://root.cern/doc/master/writer_8py_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoArb8.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoArb8.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 24/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoArb8; 13#define ROOT_TGeoArb8; 14 ; 15#include ""TGeoBBox.h""; 16 ; 17class TGeoArb8 : public TGeoBBox {; 18protected:; 19 enum EGeoArb8Type {; 20 // kArb8Trd1 = BIT(25), // trd1 type; 21 // kArb8Trd2 = BIT(26), // trd2 type; 22 kArb8Trap = BIT(27), // planar surface trapezoid; 23 kArb8Tra = BIT(28) // general twisted trapezoid; 24 };; 25 // data members; 26 Double_t fDz{0}; // half length in Z; 27 Double_t *fTwist{nullptr}; //! [4] tangents of twist angles; 28 Double_t fXY[8][2]; // list of vertices; 29 ; 30 TGeoArb8(const TGeoArb8 &) = delete;; 31 TGeoArb8 &operator=(const TGeoArb8 &) = delete;; 32 ; 33 void CopyTwist(Double_t *twist = nullptr);; 34 ; 35public:; 36 // constructors; 37 TGeoArb8();; 38 TGeoArb8(Double_t dz, Double_t *vertices = nullptr);; 39 TGeoArb8(const char *name, Double_t dz, Double_t *vertices = nullptr);; 40 // destructor; 41 ~TGeoArb8() override;; 42 // methods; 43 Double_t Capacity() const override;; 44 void ComputeBBox() override;; 45 void ComputeNormal(const Double_t *point, const Double_t *dir, Double_t *norm) override;; 46 void ComputeNormal_v(const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;; 47 void ComputeTwist();; 48 Bool_t Contains(const Double_t *point) const override;; 49 void Contains_v(const Double_t *points, Bool_t *inside, Int_t vecsize) const override;; 50 Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoArb8_8h_source.html:76,Guid,Guide,76,doc/master/TGeoArb8_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoArb8_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoElement.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoElement.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 17/06/04; 3// Added support for radionuclides: Mihaela Gheata 24/08/2006; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoElement; 13#define ROOT_TGeoElement; 14 ; 15#include ""TNamed.h""; 16 ; 17#include ""TAttLine.h""; 18 ; 19#include ""TAttFill.h""; 20 ; 21#include ""TAttMarker.h""; 22 ; 23#include ""TObjArray.h""; 24 ; 25#include <map>; 26 ; 27class TGeoElementTable;; 28class TGeoIsotope;; 29 ; 30////////////////////////////////////////////////////////////////////////////; 31// //; 32// TGeoElement - a chemical element //; 33// //; 34////////////////////////////////////////////////////////////////////////////; 35 ; 36class TGeoElement : public TNamed {; 37protected:; 38 enum EGeoElement { kElemUsed = BIT(17), kElemDefined = BIT(18), kElementChecked = BIT(19) };; 39 ; 40 Int_t fZ; // Z of element; 41 Int_t fN; // Number of nucleons; 42 Int_t fNisotopes; // Number of isotopes for the element; 43 Double_t fA; // A of element; 44 TObjArray *fIsotopes; // List of isotopes; 45 Double_t *fAbundances; //[fNisotopes] Array of relative isotope abundances; 46 Double_t fCoulomb; // Coulomb correction factor; 47 Double_t fRadTsai; // Tsai formula for the radiation length; 48 ; 49private:; 50 TGeoElement(const TGeoElement &other) = delete;; 51 TGeoElement &operator=(const TGeoElement &other) = delete;; 52 ; 53 // Compute the Coulomb correction factor; 54 void ComputeCoulombFactor();; 55 // Compute the Tsai formula fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoElement_8h_source.html:79,Guid,Guide,79,doc/master/TGeoElement_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoElement_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoManager.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TGeoManager.h File Reference. #include <mutex>; #include <thread>; #include <map>; #include ""TNamed.h""; #include ""TObjArray.h""; #include ""TGeoNavigator.h"". Include dependency graph for TGeoManager.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGeoManager;  The manager class for any TGeo geometry. More...;  . Variables; R__EXTERN TGeoManager * gGeoManager;  . Variable Documentation. ◆ gGeoManager. R__EXTERN TGeoManager* gGeoManager. Definition at line 608 of file TGeoManager.h. geomgeomincTGeoManager.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8h.html:82,Guid,Guide,82,doc/master/TGeoManager_8h.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoManager.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoManager.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoManager; 13#define ROOT_TGeoManager; 14 ; 15#include <mutex>; 16#include <thread>; 17#include <map>; 18 ; 19#include ""TNamed.h""; 20#include ""TObjArray.h""; 21#include ""TGeoNavigator.h""; 22 ; 23// forward declarations; 24class TVirtualGeoTrack;; 25class TGeoNode;; 26class TGeoPhysicalNode;; 27class TGeoPNEntry;; 28class TGeoVolume;; 29class TGeoVolumeMulti;; 30class TGeoMatrix;; 31class TGeoHMatrix;; 32class TGeoMaterial;; 33class TGeoMedium;; 34class TGeoShape;; 35class TVirtualGeoPainter;; 36class THashList;; 37class TGeoParallelWorld;; 38class TGeoRegion;; 39class TGDMLMatrix;; 40class TGeoOpticalSurface;; 41class TGeoSkinSurface;; 42class TGeoBorderSurface;; 43 ; 44class TGeoManager : public TNamed {; 45public:; 46 enum EDefaultUnits { kG4Units = 0, kRootUnits = 1 };; 47 ; 48protected:; 49 static std::mutex fgMutex; //! mutex for navigator booking in MT mode; 50 static Bool_t fgLock; //! Lock preventing a second geometry to be loaded; 51 static Int_t fgVerboseLevel; //! Verbosity level for Info messages (no IO).; 52 static Int_t fgMaxLevel; //! Maximum level in geometry; 53 static Int_t fgMaxDaughters; //! Maximum number of daughters; 54 static Int_t fgMaxXtruVert; //! Maximum number of Xtru vertices; 55 static UInt_t fgExportPrecision; //! Precision to be used in ASCII exports; 56 static EDefaultUnits fgDefaultUnits; //! Default unit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8h_source.html:79,Guid,Guide,79,doc/master/TGeoManager_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoMaterial.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TGeoMaterial.h File Reference. #include <TNamed.h>; #include <TAttFill.h>; #include <TList.h>; #include ""TGeoElement.h"". Include dependency graph for TGeoMaterial.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGeoMaterial;  Base class describing materials. More...;  ; class  TGeoMixture;  Mixtures of elements. More...;  . Variables; static const Double_t STP_pressure = 6.32420e+8;  ; static const Double_t STP_temperature = 273.15;  . Variable Documentation. ◆ STP_pressure. const Double_t STP_pressure = 6.32420e+8. static . Definition at line 32 of file TGeoMaterial.h. ◆ STP_temperature. const Double_t STP_temperature = 273.15. static . Definition at line 31 of file TGeoMaterial.h. geomgeomincTGeoMaterial.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMaterial_8h.html:83,Guid,Guide,83,doc/master/TGeoMaterial_8h.html,https://root.cern,https://root.cern/doc/master/TGeoMaterial_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoMaterial.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMaterial.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoMaterial; 13#define ROOT_TGeoMaterial; 14 ; 15#include <TNamed.h>; 16#include <TAttFill.h>; 17#include <TList.h>; 18 ; 19#ifdef R__LESS_INCLUDES; 20class TGeoElement;; 21class TGeoElementTable;; 22#else; 23#include ""TGeoElement.h""; 24#endif; 25 ; 26// forward declarations; 27class TGeoExtension;; 28class TGDMLMatrix;; 29 ; 30// Some units used in G4; 31static const Double_t STP_temperature = 273.15; // [K]; 32static const Double_t STP_pressure = 6.32420e+8; // [MeV/mm3]; 33 ; 34class TGeoMaterial : public TNamed, public TAttFill {; 35public:; 36 enum EGeoMaterial { kMatUsed = BIT(17), kMatSavePrimitive = BIT(18) };; 37 enum EGeoMaterialState { kMatStateUndefined, kMatStateSolid, kMatStateLiquid, kMatStateGas };; 38 ; 39protected:; 40 Int_t fIndex; // material index; 41 Double_t fA; // A of material; 42 Double_t fZ; // Z of material; 43 Double_t fDensity; // density of material; 44 Double_t fRadLen; // radiation length; 45 Double_t fIntLen; // interaction length; 46 Double_t fTemperature; // temperature; 47 Double_t fPressure; // pressure; 48 EGeoMaterialState fState; // material state; 49 TObject *fShader; // shader with optical properties; 50 TObject *fCerenkov; // pointer to class with Cerenkov properties; 51 TGeoElement *fElement; // pointer to element composing the material; 52 TList fProperties; // user-defined properties; 53 TLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMaterial_8h_source.html:80,Guid,Guide,80,doc/master/TGeoMaterial_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoMaterial_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoMatrix.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TGeoMatrix.h File Reference. #include ""TNamed.h"". Include dependency graph for TGeoMatrix.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGeoCombiTrans;  Class describing rotation + translation. More...;  ; class  TGeoGenTrans;  Most general transformation, holding a translation, a rotation and a scale. More...;  ; class  TGeoHMatrix;  Matrix class used for computing global transformations Should NOT be used for node definition. More...;  ; class  TGeoIdentity;  An identity transformation. More...;  ; class  TGeoMatrix;  Geometrical transformation package. More...;  ; class  TGeoRotation;  Class describing rotations. More...;  ; class  TGeoScale;  Class describing scale transformations. More...;  ; class  TGeoTranslation;  Class describing translations. More...;  . Variables; R__EXTERN TGeoIdentity * gGeoIdentity;  ; const Double_t kIdentityMatrix [3 *3] = {1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0};  ; const Double_t kNullVector [3] = {0.0, 0.0, 0.0};  ; const Double_t kUnitScale [3] = {1.0, 1.0, 1.0};  . Variable Documentation. ◆ gGeoIdentity. R__EXTERN TGeoIdentity* gGeoIdentity. Definition at line 537 of file TGeoMatrix.h. ◆ kIdentityMatrix. const Double_t kIdentityMatrix[3 *3] = {1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0}. Definition at line 26 of file TGeoMatrix.h. ◆ kNullVector. const Double_t kNullVector[3] = {0.0, 0.0, 0.0}. Definition at line 24 of file TGeoMatrix.h. ◆ kUnitScale. const Double_t kUnitScale[3] = {1.0, 1.0, 1.0}. Definition at line 28 of file TGeoMatrix.h. geomgeomincTGeoMatrix.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8h.html:81,Guid,Guide,81,doc/master/TGeoMatrix_8h.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoMatrix.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMatrix.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoMatrix; 13#define ROOT_TGeoMatrix; 14 ; 15/*************************************************************************; 16 * Geometrical transformations. TGeoMatrix - base class, TGeoTranslation *; 17 * TGeoRotation, TGeoScale, TGeoCombiTrans, TGeoGenTrans . *; 18 * *; 19 *************************************************************************/; 20 ; 21#include ""TNamed.h""; 22 ; 23//--- globals; 24const Double_t kNullVector[3] = {0.0, 0.0, 0.0};; 25 ; 26const Double_t kIdentityMatrix[3 * 3] = {1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0};; 27 ; 28const Double_t kUnitScale[3] = {1.0, 1.0, 1.0};; 29 ; 30class TGeoHMatrix;; 31 ; 32////////////////////////////////////////////////////////////////////////////; 33// //; 34// TGeoMatrix - base class for geometrical transformations. //; 35// //; 36////////////////////////////////////////////////////////////////////////////; 37 ; 38class TGeoMatrix : public TNamed {; 39public:; 40 enum EGeoTransfTypes {; 41 kGeoIdentity = 0,; 42 kGeoShared = BIT(14),; 43 kGeoTranslation = BIT(17),; 44 kGeoRotation = BIT(18),; 45 kGeoScale = BIT(19),; 46 kGeoReflection = BIT(20),; 47 kGeoRegistered = BIT(21),; 48 kGeoSavePrimitive = BIT(22),; 49 kGeoMatrixOwned = BIT(23),; 50 kGeoCombiTrans = kGeoTranslation | kGeoRotation,; 51 kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale,; 52 kGeoMatrixBits = kGeoShared ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8h_source.html:78,Guid,Guide,78,doc/master/TGeoMatrix_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoMedium.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMedium.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Rene Brun 26/12/02; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoMedium; 13#define ROOT_TGeoMedium; 14 ; 15#include ""TGeoMaterial.h""; 16 ; 17////////////////////////////////////////////////////////////////////////////; 18// //; 19// TGeoMedium - base class describing tracking media //; 20// //; 21////////////////////////////////////////////////////////////////////////////; 22 ; 23class TGeoMedium : public TNamed {; 24public:; 25 enum EGeoMedium { kMedSavePrimitive = BIT(18) };; 26 ; 27protected:; 28 Int_t fId; // unique Id; 29 Double_t fParams[20]; // parameters; 30 TGeoMaterial *fMaterial; // pointer to material; 31 ; 32 // methods; 33 TGeoMedium(const TGeoMedium &);; 34 TGeoMedium &operator=(const TGeoMedium &);; 35 ; 36public:; 37 // constructors; 38 TGeoMedium();; 39 TGeoMedium(const char *name, Int_t numed, const TGeoMaterial *mat, Double_t *params = nullptr);; 40 TGeoMedium(const char *name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd,; 41 Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin);; 42 ~TGeoMedium() override;; 43 // methods; 44 virtual Int_t GetByteCount() const { return sizeof(*this); }; 45 Int_t GetId() const { return fId; }; 46 Double_t GetParam(Int_t i) const { return fParams[i]; }; 47 void SetParam(Int_t i, Double_t val) { fParams[i] = val; }; 48 const char *GetPointerName() const;; 49 TGeoMaterial *GetMaterial() const { return fMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMedium_8h_source.html:78,Guid,Guide,78,doc/master/TGeoMedium_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoMedium_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoNavigator.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoNavigator.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Mihaela Gheata 30/05/07; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoNavigator; 13#define ROOT_TGeoNavigator; 14 ; 15#include ""TObject.h""; 16 ; 17#include ""TGeoCache.h""; 18 ; 19////////////////////////////////////////////////////////////////////////////; 20// //; 21// TGeoNavigator - Class containing the implementation of all navigation //; 22// methods.; 23// //; 24////////////////////////////////////////////////////////////////////////////; 25 ; 26class TGeoManager;; 27class TGeoNode;; 28class TGeoVolume;; 29class TGeoMatrix;; 30class TGeoHMatrix;; 31 ; 32class TGeoNavigator : public TObject {; 33 ; 34protected:; 35 TGeoNavigator(const TGeoNavigator &) = delete;; 36 TGeoNavigator &operator=(const TGeoNavigator &) = delete;; 37 TGeoNode *FindInCluster(Int_t *cluster, Int_t nc);; 38 Int_t GetTouchedCluster(Int_t start, Double_t *point, Int_t *check_list, Int_t ncheck, Int_t *result);; 39 TGeoNode *CrossDivisionCell();; 40 void SafetyOverlaps();; 41 ; 42private:; 43 Double_t fStep; //! step to be done from current point and direction; 44 Double_t fSafety; //! safety radius from current point; 45 Double_t fLastSafety; //! last computed safety radius; 46 Double_t fNormal[3]; //! cosine of incident angle on current checked surface; 47 Double_t fCldir[3]; //! unit vector to current closest shape; 48 Double_t fCldirChecked[3]; //! unit vector to current checked shape; 49 Double_t fPoint[3]; //! current po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoNavigator_8h_source.html:81,Guid,Guide,81,doc/master/TGeoNavigator_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoNavigator_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoNode.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoNode.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 24/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoNode; 13#define ROOT_TGeoNode; 14 ; 15#include ""TGeoAtt.h""; 16 ; 17#include ""TNamed.h""; 18 ; 19#include ""TGeoVolume.h""; 20 ; 21#include ""TGeoPatternFinder.h""; 22 ; 23// forward declarations; 24class TString;; 25class TGeoVolume;; 26class TGeoShape;; 27class TGeoMedium;; 28class TGeoMatrix;; 29class TGeoHMatrix;; 30class TGeoExtension;; 31 ; 32////////////////////////////////////////////////////////////////////////////; 33// //; 34// TGeoNode - base class for logical nodes. They represent volumes //; 35// positioned inside a mother volume //; 36// //; 37////////////////////////////////////////////////////////////////////////////; 38 ; 39class TGeoNode : public TNamed, public TGeoAtt {; 40protected:; 41 TGeoVolume *fVolume = nullptr; // volume associated with this; 42 TGeoVolume *fMother = nullptr; // mother volume; 43 Int_t fNumber = 0; // copy number; 44 Int_t fNovlp = 0; // number of overlaps; 45 Int_t *fOverlaps = nullptr; //[fNovlp] list of indices for overlapping brothers; 46 TGeoExtension *fUserExtension = nullptr; //! Transient user-defined extension to volumes; 47 TGeoExtension *fFWExtension = nullptr; //! Transient framework-defined extension to volumes; 48 ; 49 void CopyOverlaps(Int_t *ovlp, Int_t novlp);; 50 ; 51private:; 52 TGeoNode(const TGeoNode &) = delete;; 53 TGeoNode &operator=(const TGeoNode &) = delete;; 54 ; 55public:; 56 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoNode_8h_source.html:76,Guid,Guide,76,doc/master/TGeoNode_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoNode_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoPhysicalNode.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPhysicalNode.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 17/02/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoPhysicalNode; 13#define ROOT_TGeoPhysicalNode; 14 ; 15#include ""TNamed.h""; 16 ; 17#include ""TAttLine.h""; 18 ; 19// forward declarations; 20class TGeoHMatrix;; 21class TGeoMatrix;; 22class TGeoVolume;; 23class TGeoNode;; 24class TGeoShape;; 25class TGeoNavigator;; 26class TObjArray;; 27 ; 28//////////////////////////////////////////////////////////////////////////////; 29// //; 30// TGeoPhysicalNode - class representing an unique object associated with a //; 31// path. //; 32// //; 33//////////////////////////////////////////////////////////////////////////////; 34 ; 35class TGeoPhysicalNode : public TNamed, public TAttLine {; 36protected:; 37 Int_t fLevel; // depth in the geometry tree; 38 TObjArray *fMatrices; // global transformation matrices; 39 TObjArray *fNodes; // branch of nodes; 40 TGeoHMatrix *fMatrixOrig; // original local matrix of the last node in the path; 41 ; 42 TGeoPhysicalNode(const TGeoPhysicalNode &) = delete;; 43 TGeoPhysicalNode &operator=(const TGeoPhysicalNode &) = delete;; 44 ; 45 void SetAligned(Bool_t flag = kTRUE) { TObject::SetBit(kGeoPNodeAligned, flag); }; 46 Bool_t SetPath(const char *path);; 47 void SetBranchAsState();; 48 ; 49public:; 50 enum {; 51 kGeoPNodeFull = BIT(10), // full branch is visible (default only last node); 52 kGeoPNodeVisible = BIT(11), // this node is visible (default); 53 kG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPhysicalNode_8h_source.html:84,Guid,Guide,84,doc/master/TGeoPhysicalNode_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoPhysicalNode_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoShape.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoShape.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 31/01/02; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoShape; 13#define ROOT_TGeoShape; 14 ; 15#include ""TNamed.h""; 16 ; 17// forward declarations; 18class TGeoBoolCombinator;; 19class TGeoBBox;; 20class TGeoMatrix;; 21class TGeoHMatrix;; 22class TGeoVolume;; 23class TBuffer3D;; 24 ; 25class TGeoShape : public TNamed {; 26private:; 27 static TGeoMatrix *fgTransform; // current transformation matrix that applies to shape; 28 static Double_t fgEpsMch; // Machine round-off error; 29public:; 30 enum EShapeType {; 31 kBitMask32 = 0xffffffff,; 32 kGeoNoShape = 0,; 33 kGeoBad = BIT(0),; 34 kGeoRSeg = BIT(1),; 35 kGeoPhiSeg = BIT(2),; 36 kGeoThetaSeg = BIT(3),; 37 kGeoVisX = BIT(4),; 38 kGeoVisY = BIT(5),; 39 kGeoVisZ = BIT(6),; 40 kGeoRunTimeShape = BIT(7),; 41 kGeoInvalidShape = BIT(8),; 42 kGeoTorus = BIT(9),; 43 kGeoBox = BIT(10),; 44 kGeoPara = BIT(11),; 45 kGeoSph = BIT(12),; 46 kGeoTube = BIT(13),; 47 kGeoTubeSeg = BIT(14),; 48 kGeoCone = BIT(15),; 49 kGeoConeSeg = BIT(16),; 50 kGeoPcon = BIT(17),; 51 kGeoPgon = BIT(18),; 52 kGeoArb8 = BIT(19),; 53 kGeoEltu = BIT(20),; 54 kGeoTrap = BIT(21),; 55 kGeoCtub = BIT(22),; 56 kGeoTrd1 = BIT(23),; 57 kGeoTrd2 = BIT(24),; 58 kGeoComb = BIT(25),; 59 kGeoClosedShape = BIT(26),; 60 kGeoXtru = BIT(27),; 61 kGeoParaboloid = BIT(28),; 62 kGeoHalfSpace = BIT(29),; 63 kGeoHype = BIT(30),; 64 kGeoSavePrimitive = BIT(20); 65 };; 66 virtual void ClearThreadData() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoShape_8h_source.html:77,Guid,Guide,77,doc/master/TGeoShape_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoShape_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoTube.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoTube.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Andrei Gheata 24/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoTube; 13#define ROOT_TGeoTube; 14 ; 15#include ""TGeoBBox.h""; 16 ; 17class TGeoTube : public TGeoBBox {; 18protected:; 19 // data members; 20 Double_t fRmin; // inner radius; 21 Double_t fRmax; // outer radius; 22 Double_t fDz; // half length; 23 // methods; 24 ; 25 TGeoTube(const TGeoTube &) = delete;; 26 TGeoTube &operator=(const TGeoTube &) = delete;; 27 ; 28public:; 29 // constructors; 30 TGeoTube();; 31 TGeoTube(Double_t rmin, Double_t rmax, Double_t dz);; 32 TGeoTube(const char *name, Double_t rmin, Double_t rmax, Double_t dz);; 33 TGeoTube(Double_t *params);; 34 // destructor; 35 ~TGeoTube() override;; 36 // methods; 37 ; 38 Double_t Capacity() const override;; 39 static Double_t Capacity(Double_t rmin, Double_t rmax, Double_t dz);; 40 void ComputeBBox() override;; 41 void ComputeNormal(const Double_t *point, const Double_t *dir, Double_t *norm) override;; 42 void ComputeNormal_v(const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;; 43 static void ComputeNormalS(const Double_t *point, const Double_t *dir, Double_t *norm, Double_t rmin, Double_t rmax,; 44 Double_t dz);; 45 Bool_t Contains(const Double_t *point) const override;; 46 void Contains_v(const Double_t *points, Bool_t *inside, Int_t vecsize) const override;; 47 static Double_t; 48 DistFromInsideS(const Double_t *point, const Double_t *dir, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoTube_8h_source.html:76,Guid,Guide,76,doc/master/TGeoTube_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoTube_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TGeoVolume.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoVolume.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 30/05/02; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// Author : date : Wed 24 Oct 2001 01:39:36 PM CEST; 12 ; 13#ifndef ROOT_TGeoVolume; 14#define ROOT_TGeoVolume; 15 ; 16#include ""TNamed.h""; 17#include ""TGeoAtt.h""; 18#include ""TAttLine.h""; 19#include ""TAttFill.h""; 20#include ""TAtt3D.h""; 21#include ""TObjArray.h""; 22#include ""TGeoMedium.h""; 23#include ""TGeoShape.h""; 24#include <mutex>; 25#include <vector>; 26 ; 27// forward declarations; 28class TH2F;; 29class TGeoNode;; 30class TGeoMatrix;; 31class TGeoPatternFinder;; 32class TGeoVoxelFinder;; 33class TGeoManager;; 34class TGeoExtension;; 35 ; 36////////////////////////////////////////////////////////////////////////////; 37// //; 38// TGeoVolume - base class representing a single volume having a shape //; 39// and a medium. //; 40// //; 41////////////////////////////////////////////////////////////////////////////; 42 ; 43class TGeoVolume : public TNamed, public TGeoAtt, public TAttLine, public TAttFill, public TAtt3D {; 44protected:; 45 TObjArray *fNodes; // array of nodes inside this volume; 46 TGeoShape *fShape; // shape; 47 TGeoMedium *fMedium; // tracking medium; 48 static TGeoMedium *fgDummyMedium; //! dummy medium; 49 TGeoPatternFinder *fFinder; // finder object for divisions; 50 TGeoVoxelFinder *fVoxels; // finder object for bounding boxes; 51 TGeoManager *fGeoManager; //! pointer to TGeoManager owning this volume; 52 ; 53 TObject *fField; //! just a h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoVolume_8h_source.html:78,Guid,Guide,78,doc/master/TGeoVolume_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoVolume_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/inc/TVirtualGeoTrack.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualGeoTrack.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 2003/04/10; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualGeoTrack; 13#define ROOT_TVirtualGeoTrack; 14 ; 15#include ""TObjArray.h""; 16 ; 17#include ""TGeoAtt.h""; 18 ; 19#include ""TAttLine.h""; 20 ; 21#include ""TAttMarker.h""; 22 ; 23class TVirtualGeoTrack : public TObject, public TGeoAtt, public TAttLine, public TAttMarker {; 24protected:; 25 Int_t fPDG{0}; // track pdg code; 26 Int_t fId{-1}; // track id; 27 TVirtualGeoTrack *fParent{nullptr}; // id of parent; 28 TObject *fParticle{nullptr}; // particle for this track; 29 TObjArray *fTracks{nullptr}; // daughter tracks; 30 ; 31 TVirtualGeoTrack(const TVirtualGeoTrack &) = delete;; 32 TVirtualGeoTrack &operator=(const TVirtualGeoTrack &) = delete;; 33 ; 34public:; 35 TVirtualGeoTrack();; 36 TVirtualGeoTrack(Int_t id, Int_t pdgcode, TVirtualGeoTrack *parent = nullptr, TObject *particle = nullptr);; 37 ~TVirtualGeoTrack() override;; 38 ; 39 virtual TVirtualGeoTrack *AddDaughter(Int_t id, Int_t pdgcode, TObject *particle = nullptr) = 0;; 40 virtual Int_t AddDaughter(TVirtualGeoTrack *other) = 0;; 41 virtual void AddPoint(Double_t x, Double_t y, Double_t z, Double_t t) = 0;; 42 virtual TVirtualGeoTrack *FindTrackWithId(Int_t id) const;; 43 Int_t GetId() const { return fId; }; 44 virtual Int_t GetDaughterId(Int_t index) const;; 45 TVirtualGeoTrack *GetDaughter(Int_t index) const { return (TVirtualGeoTrack *)fTracks->At(index); }; 46 TV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualGeoTrack_8h_source.html:84,Guid,Guide,84,doc/master/TVirtualGeoTrack_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualGeoTrack_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/src/TGeoElement.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoElement.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 17/06/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoElement; 13\ingroup Materials_classes; 14Base class for chemical elements; 15*/; 16 ; 17/** \class TGeoElementRN; 18\ingroup Geometry_classes; 19Class representing a radionuclidevoid TGeoManager::SetDefaultRootUnits(); 20{; 21 if ( fgDefaultUnits == kRootUnits ) {; 22 return;; 23 }; 24 else if ( gGeometryLocked ) {; 25 TError::Fatal(""TGeoManager"",""The system of units may only be changed once BEFORE any elements and materials are; 26created!"");; 27 }; 28 fgDefaultUnits = kRootUnits;; 29}; 30 ; 31*/; 32 ; 33/** \class TGeoElemIter; 34\ingroup Geometry_classes; 35Iterator for decay branches; 36*/; 37 ; 38/** \class TGeoDecayChannel; 39\ingroup Geometry_classes; 40A decay channel for a radionuclide; 41*/; 42 ; 43/** \class TGeoElementTable; 44\ingroup Geometry_classes; 45Table of elements; 46*/; 47 ; 48#include ""RConfigure.h""; 49 ; 50#include <fstream>; 51#include <iomanip>; 52 ; 53#include ""TSystem.h""; 54#include ""TROOT.h""; 55#include ""TObjArray.h""; 56#include ""TVirtualGeoPainter.h""; 57#include ""TGeoManager.h""; 58#include ""TGeoElement.h""; 59#include ""TMath.h""; 60#include ""TGeoPhysicalConstants.h""; 61#include ""TGeant4PhysicalConstants.h""; 62 ; 63// statics and globals; 64static const Int_t gMaxElem = 110;; 65static const Int_t gMaxLevel = 8;; 66static const Int_t gMaxDecay = 15;; 67 ; 68static const char gElName[gMaxElem][3] = {; 69 ""H "",",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoElement_8cxx_source.html:81,Guid,Guide,81,doc/master/TGeoElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoElement_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/src/TGeoManager.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoManager.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoManager; 13\ingroup Geometry_classes; 14 ; 15The manager class for any TGeo geometry. Provides user; 16interface for geometry creation, navigation, state querying,; 17visualization, IO, geometry checking and other utilities.; 18 ; 19## General architecture; 20 ; 21 The ROOT geometry package is a tool designed for building, browsing,; 22tracking and visualizing a detector geometry. The code is independent from; 23other external MC for simulation, therefore it does not contain any; 24constraints related to physics. However, the package defines a number of; 25hooks for tracking, such as media, materials, magnetic field or track state flags,; 26in order to allow interfacing to tracking MC's. The final goal is to be; 27able to use the same geometry for several purposes, such as tracking,; 28reconstruction or visualization, taking advantage of the ROOT features; 29related to bookkeeping, I/O, histogramming, browsing and GUI's.; 30 ; 31 The geometrical modeler is the most important component of the package and; 32it provides answers to the basic questions like ""Where am I ?"" or ""How far; 33from the next boundary ?"", but also to more complex ones like ""How far from; 34the closest surface ?"" or ""Which is the next crossing along a helix ?"".; 35 ; 36 The architecture of the modeler is a combination between a GEANT-like; 37containment scheme and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:81,Guid,Guide,81,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/src/TGeoMaterial.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMaterial.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoMaterial; 13\ingroup Materials_classes; 14 ; 15Base class describing materials.; 16 ; 17## Important note about units; 18Since **v6-17-02** the geometry package adopted a system of units, upon the request to support; 19an in-memory material representation consistent with the one in Geant4. The adoption was done; 20gradually and starting with **v6-19-02** (back-ported to **v6-18-02**) the package supports changing; 21the default units to either ROOT (CGS) or Geant4 ones. In the same version the Geant4 units were; 22set to be the default ones, changing the previous behavior and making material properties such; 23as radiation and interaction lengths having in memory values an order of magnitude lower. This behavior; 24affected versions up to **v6-25-01**, after which the default units were restored to be the ROOT ones.; 25 ; 26For users needing to restore the CGS behavior for material properties, the following sequence needs; 27to be called before creating the TGeoManager instance:; 28 * From **v6-18-02** to **v6-22-06**:; 29```; 30 TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);; 31```; 32 ; 33 * From **v6-22-08** to **v6-25-01**:; 34```; 35 TGeoManager::LockDefaultUnits(false);; 36 TGeoManager::SetDefaultUnits(kRootUnits);; 37 TGeoManager::LockDefaultUnits(true);; 38```; 39*/; 40 ; 41#include <iostream>; 42#include <limits>; 43#include ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMaterial_8cxx_source.html:82,Guid,Guide,82,doc/master/TGeoMaterial_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMaterial_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/src/TGeoMatrix.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMatrix.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoMatrix; 13\ingroup Geometry_classes; 14 ; 15Geometrical transformation package.; 16 ; 17 All geometrical transformations handled by the modeller are provided as a; 18built-in package. This was designed to minimize memory requirements and; 19optimize performance of point/vector master-to-local and local-to-master; 20computation. We need to have in mind that a transformation in TGeo has 2; 21major use-cases. The first one is for defining the placement of a volume; 22with respect to its container reference frame. This frame will be called; 23'master' and the frame of the positioned volume - 'local'. If T is a; 24transformation used for positioning volume daughters, then:; 25 ; 26~~~ {.cpp}; 27 MASTER = T * LOCAL; 28~~~; 29 ; 30 Therefore a local-to-master conversion will be performed by using T, while; 31a master-to-local by using its inverse. The second use case is the computation; 32of the global transformation of a given object in the geometry. Since the; 33geometry is built as 'volumes-inside-volumes', this global transformation; 34represent the pile-up of all local transformations in the corresponding; 35branch. The conversion from the global reference frame and the given object; 36is also called master-to-local, but it is handled by the manager class.; 37 A general homogenous transformation is defined as a 4x4 matrix embedding; 38a r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html:80,Guid,Guide,80,doc/master/TGeoMatrix_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/src/TGeoMedium.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMedium.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Rene Brun 26/12/02; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoMedium; 13\ingroup Materials_classes; 14 ; 15Media are used to store properties related to tracking and which are useful; 16only when using geometry with a particle transport MC package (via VMC). One; 17may define several tracking media for a given material. The media ID are user; 18defined values that are not used by the geometry package. In case geometry; 19is used via VMC (in GEANT) these numbers are overwritten, so one can only; 20rely on these values after gMC->FinishGeometry() is called.; 21The media parameters are inspired from GEANT3 and the values defined make sense; 22in context of GEANT (3 but also 4) or FLUKA interfaces.; 23*/; 24 ; 25#include <iostream>; 26#include ""TGeoManager.h""; 27#include ""TGeoMedium.h""; 28#include ""TList.h""; 29 ; 30ClassImp(TGeoMedium);; 31 ; 32////////////////////////////////////////////////////////////////////////////////; 33/// Default constructor; 34 ; 35TGeoMedium::TGeoMedium(); 36{; 37 fId = 0;; 38 for (Int_t i = 0; i < 20; i++); 39 fParams[i] = 0.;; 40 fMaterial = nullptr;; 41}; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// constructor; 45 ; 46TGeoMedium::TGeoMedium(const char *name, Int_t numed, const TGeoMaterial *mat, Double_t *params) : TNamed(name, """"); 47{; 48 fName = fName.Strip();; 49 fId = numed;; 50 for (Int_t i = 0; i < 20; i++); 51 fParam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMedium_8cxx_source.html:80,Guid,Guide,80,doc/master/TGeoMedium_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMedium_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/src/TGeoPhysicalNode.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPhysicalNode.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 17/02/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoPhysicalNode; 13\ingroup Geometry_classes; 14 ; 15Physical nodes are the actual 'touchable' objects in the geometry, representing; 16a path of positioned volumes starting with the top node:; 17 path=/TOP/A_1/B_4/C_3 , where A, B, C represent names of volumes.; 18 ; 19The number of physical nodes is given by the total number of possible of; 20branches in the geometry hierarchy. In case of detector geometries and; 21specially for calorimeters this number can be of the order 1e6-1e9, therefore; 22it is impossible to create all physical nodes as objects in memory. In TGeo,; 23physical nodes are represented by the class TGeoPhysicalNode and can be created; 24on demand for alignment purposes:; 25 ; 26~~~ {.cpp}; 27 TGeoPhysicalNode *pn = new TGeoPhysicalNode(""path_to_object""); 28~~~; 29 ; 30Once created, a physical node can be misaligned, meaning that its position; 31or even shape can be changed:; 32 ; 33~~~ {.cpp}; 34 pn->Align(TGeoMatrix* newmat, TGeoShape* newshape, Bool_t check=kFALSE); 35~~~; 36*/; 37 ; 38/** \class TGeoPNEntry; 39\ingroup Geometry_classes; 40 ; 41The knowledge of the path to the objects that need to be misaligned is; 42essential since there is no other way of identifying them. One can however; 43create 'symbolic links' to any complex path to make it more representable; 44for the object it designates:; 45 ; 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPhysicalNode_8cxx_source.html:86,Guid,Guide,86,doc/master/TGeoPhysicalNode_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPhysicalNode_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geom/src/TGeoVolume.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoVolume.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 30/05/02; 3// Divide(), CheckOverlaps() implemented by Mihaela Gheata; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13/** \class TGeoVolume; 14\ingroup Shapes_classes; 15 ; 16TGeoVolume, TGeoVolumeMulti, TGeoVolumeAssembly are the volume classes; 17 ; 18 Volumes are the basic objects used in building the geometrical hierarchy.; 19They represent unpositioned objects but store all information about the; 20placement of the other volumes they may contain. Therefore a volume can; 21be replicated several times in the geometry. In order to create a volume, one; 22has to put together a shape and a medium which are already defined. Volumes; 23have to be named by users at creation time. Every different name may represent a; 24an unique volume object, but may also represent more general a family (class); 25of volume objects having the same shape type and medium, but possibly; 26different shape parameters. It is the user's task to provide different names; 27for different volume families in order to avoid ambiguities at tracking time.; 28A generic family rather than a single volume is created only in two cases :; 29when a generic shape is provided to the volume constructor or when a division; 30operation is applied. Each volume in the geometry stores an unique; 31ID corresponding to its family. In order to ease-up their creation, the manager; 32class is providing an API that allows making a shape and a volume in a sing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoVolume_8cxx_source.html:80,Guid,Guide,80,doc/master/TGeoVolume_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoVolume_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geompainter/inc/TGeoPainter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPainter.h. Go to the documentation of this file. 1// Author: Andrei Gheata 05/03/02; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10#ifndef ROOT_TGeoPainter; 11#define ROOT_TGeoPainter; 12 ; 13//////////////////////////////////////////////////////////////////////////; 14// //; 15// TGeoPainter //; 16// //; 17// Painter class utility TGeo geometries. Interfaces visualization //; 18// queries with the viewers. //; 19// //; 20//////////////////////////////////////////////////////////////////////////; 21 ; 22#include ""TVirtualGeoPainter.h""; 23 ; 24#include ""TGeoManager.h""; 25 ; 26class TString;; 27class TGeoHMatrix;; 28class TGeoNode;; 29class TGeoVolume;; 30class TGeoShape;; 31class TVirtualGeoTrack;; 32class TGeoPhysicalNode;; 33class TGeoChecker;; 34class TGeoOverlap;; 35class TH2F;; 36class TGeoBatemanSol;; 37class TGeoPolygon;; 38 ; 39class TGeoPainter : public TVirtualGeoPainter {; 40private:; 41 Double_t fBombX; // bomb factor on X; 42 Double_t fBombY; // bomb factor on Y; 43 Double_t fBombZ; // bomb factor on Z; 44 Double_t fBombR; // bomb factor on radius (cyl or sph); 45 Double_t fCheckedBox[6]; // bounding box of checked node; 46 Double_t fMat[9]; // view rotation matrix; 47 Int_t fNsegments; // number of segments approximating circles; 48 Int_t fNVisNodes; // number of visible nodes; 49 Int_t fVisLevel; // depth for drawing; 50 Int_t fVisOption; // global visualization option; 51 Int_t fExplodedView; // type of exploding current view; 52 Bool_t fVisLock; // lock for adding visible volumes; 53 Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8h_source.html:86,Guid,Guide,86,doc/master/TGeoPainter_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/geompainter/src/TGeoPainter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPainter.cxx. Go to the documentation of this file. 1// @(#)root/geompainter:$Id: 58726ead32989b65bb2cbff2af4235fe9c6b12ae $; 2// Author: Andrei Gheata 05/03/02; 3/*************************************************************************; 4 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11/** \class TGeoPainter; 12\ingroup Geometry_painter; 13 ; 14Class implementing all draw interfaces for a generic 3D viewer; 15using TBuffer3D mechanism.; 16*/; 17 ; 18#include <map>; 19#include ""TROOT.h""; 20#include ""TClass.h""; 21#include ""TColor.h""; 22#include ""TPoint.h""; 23#include ""TView.h""; 24#include ""TAttLine.h""; 25#include ""TAttFill.h""; 26#include ""TVirtualPad.h""; 27#include ""TCanvas.h""; 28#include ""TCanvasImp.h""; 29#include ""TH2F.h""; 30#include ""TF1.h""; 31#include ""TGraph.h""; 32#include ""TPluginManager.h""; 33#include ""TVirtualPadEditor.h""; 34#include ""TStopwatch.h""; 35 ; 36#include ""TPolyMarker3D.h""; 37 ; 38#include ""TGeoAtt.h""; 39#include ""TGeoVolume.h""; 40#include ""TGeoNode.h""; 41#include ""TGeoElement.h""; 42#include ""TGeoManager.h""; 43#include ""TGeoTrack.h""; 44#include ""TGeoOverlap.h""; 45#include ""TGeoChecker.h""; 46#include ""TGeoPhysicalNode.h""; 47#include ""TGeoPolygon.h""; 48#include ""TGeoCompositeShape.h""; 49#include ""TGeoShapeAssembly.h""; 50#include ""TGeoPainter.h""; 51#include ""TMath.h""; 52 ; 53#include ""X3DBuffer.h""; 54 ; 55#include ""TBuffer3D.h""; 56#include ""TBuffer3DTypes.h""; 57#include ""TVirtualViewer3D.h""; 58#include ""TVirtualX.h""; 59 ; 60ClassImp(TGeoPainter);; 61 ; 62////////////////////////////////////////////////////////////////////////////////; 63/// Default constructor.; 64 ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8cxx_source.html:88,Guid,Guide,88,doc/master/TGeoPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/webviewer/inc/ROOT/RGeomData.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RGeomData.hxx. Go to the documentation of this file. 1// Author: Sergey Linev, 14.12.2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT7_RGeomData; 12#define ROOT7_RGeomData; 13 ; 14#include <vector>; 15#include <string>; 16#include <functional>; 17#include <memory>; 18 ; 19#include <ROOT/Browsable/RItem.hxx>; 20 ; 21#include ""TVirtualMutex.h""; 22 ; 23class TGeoNode;; 24class TGeoManager;; 25class TGeoShape;; 26class TGeoMatrix;; 27class TGeoVolume;; 28 ; 29// do not use namespace to avoid too long JSON; 30 ; 31namespace ROOT {; 32 ; 33class RGeomBrowserIter;; 34 ; 35namespace Experimental {; 36class RLogChannel;; 37} // namespace Experimental; 38 ; 39/// Log channel for Geomviewer diagnostics.; 40Experimental::RLogChannel &RGeomLog();; 41 ; 42/** Base description of geometry node, required only to build hierarchy */; 43 ; 44class RGeomNodeBase {; 45public:; 46 int id{0}; ///< node id, index in array; 47 std::string name; ///< node name; 48 std::vector<int> chlds; ///< list of childs id; 49 int vis{0}; ///< visibility flag, 0 - off, 1 - only when level==0, 99 - always; 50 bool nochlds{false}; ///< how far in hierarchy depth should be scanned; 51 ; 52 std::string color; ///< rgb code in hex format; 53 std::string material; ///< name of the material; 54 int sortid{0}; ///<! place in sorted array, to check cuts, or id of original node when used search structures; 55 ; 56 RGeomNodeBase(int _id = 0) : id(_id) {}; 57 ; 58 bool IsVisible() const { return vis > 0; }; 59 ; 60 /** Returns argumen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8hxx_source.html:89,Guid,Guide,89,doc/master/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/webviewer/inc/ROOT/RGeomData.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RGeomData.hxx. Go to the documentation of this file. 1// Author: Sergey Linev, 14.12.2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT7_RGeomData; 12#define ROOT7_RGeomData; 13 ; 14#include <vector>; 15#include <string>; 16#include <functional>; 17#include <memory>; 18 ; 19#include <ROOT/Browsable/RItem.hxx>; 20 ; 21#include ""TVirtualMutex.h""; 22 ; 23class TGeoNode;; 24class TGeoManager;; 25class TGeoShape;; 26class TGeoMatrix;; 27class TGeoVolume;; 28 ; 29// do not use namespace to avoid too long JSON; 30 ; 31namespace ROOT {; 32 ; 33class RGeomBrowserIter;; 34 ; 35namespace Experimental {; 36class RLogChannel;; 37} // namespace Experimental; 38 ; 39/// Log channel for Geomviewer diagnostics.; 40Experimental::RLogChannel &RGeomLog();; 41 ; 42/** Base description of geometry node, required only to build hierarchy */; 43 ; 44class RGeomNodeBase {; 45public:; 46 int id{0}; ///< node id, index in array; 47 std::string name; ///< node name; 48 std::vector<int> chlds; ///< list of childs id; 49 int vis{0}; ///< visibility flag, 0 - off, 1 - only when level==0, 99 - always; 50 bool nochlds{false}; ///< how far in hierarchy depth should be scanned; 51 ; 52 std::string color; ///< rgb code in hex format; 53 std::string material; ///< name of the material; 54 int sortid{0}; ///<! place in sorted array, to check cuts, or id of original node when used search structures; 55 ; 56 RGeomNodeBase(int _id = 0) : id(_id) {}; 57 ; 58 bool IsVisible() const { return vis > 0; }; 59 ; 60 /** Returns argument",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RGeomData_8hxx_source.html:88,Guid,Guide,88,doc/v632/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RGeomData_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/webviewer/src/RGeomData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RGeomData.cxx. Go to the documentation of this file. 1// Author: Sergey Linev, 14.12.2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include <ROOT/RGeomData.hxx>; 12 ; 13#include <ROOT/RBrowserRequest.hxx>; 14#include <ROOT/RBrowserReply.hxx>; 15#include <ROOT/RLogger.hxx>; 16#include ""CsgOps.h""; 17 ; 18#include ""TMath.h""; 19#include ""TColor.h""; 20#include ""TROOT.h""; 21#include ""TGeoNode.h""; 22#include ""TGeoVolume.h""; 23#include ""TGeoBBox.h""; 24#include ""TGeoSphere.h""; 25#include ""TGeoCone.h""; 26#include ""TGeoTube.h""; 27#include ""TGeoEltu.h""; 28#include ""TGeoTorus.h""; 29#include ""TGeoPcon.h""; 30#include ""TGeoPgon.h""; 31#include ""TGeoXtru.h""; 32#include ""TGeoParaboloid.h""; 33#include ""TGeoHype.h""; 34#include ""TGeoTessellated.h""; 35#include ""TGeoScaledShape.h""; 36#include ""TGeoCompositeShape.h""; 37#include ""TGeoManager.h""; 38#include ""TGeoMatrix.h""; 39#include ""TGeoMedium.h""; 40#include ""TGeoMaterial.h""; 41#include ""TGeoBoolNode.h""; 42#include ""TBuffer3D.h""; 43#include ""TBufferJSON.h""; 44#include ""TRegexp.h""; 45 ; 46#include <algorithm>; 47#include <array>; 48 ; 49ROOT::Experimental::RLogChannel &ROOT::RGeomLog(); 50{; 51 static ROOT::Experimental::RLogChannel sLog(""ROOT.Geom"");; 52 return sLog;; 53}; 54 ; 55 ; 56namespace ROOT {; 57 ; 58/** Iterator of hierarchical geometry structures */; 59 ; 60class RGeomBrowserIter {; 61 ; 62 RGeomDescription &fDesc;; 63 int fParentId{-1};; 64 unsigned fChild{0};; 65 int fNodeId{0};; 66 ; 67 std::vector<int> fStackParents;; 68 std::vector<int> fStackChilds;; 69 ; 7",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:84,Guid,Guide,84,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: geom/webviewer/src/RGeomData.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RGeomData.cxx. Go to the documentation of this file. 1// Author: Sergey Linev, 14.12.2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include <ROOT/RGeomData.hxx>; 12 ; 13#include <ROOT/RBrowserRequest.hxx>; 14#include <ROOT/RBrowserReply.hxx>; 15#include <ROOT/RLogger.hxx>; 16#include ""CsgOps.h""; 17 ; 18#include ""TMath.h""; 19#include ""TColor.h""; 20#include ""TROOT.h""; 21#include ""TGeoNode.h""; 22#include ""TGeoVolume.h""; 23#include ""TGeoBBox.h""; 24#include ""TGeoSphere.h""; 25#include ""TGeoCone.h""; 26#include ""TGeoTube.h""; 27#include ""TGeoEltu.h""; 28#include ""TGeoTorus.h""; 29#include ""TGeoPcon.h""; 30#include ""TGeoPgon.h""; 31#include ""TGeoXtru.h""; 32#include ""TGeoParaboloid.h""; 33#include ""TGeoHype.h""; 34#include ""TGeoTessellated.h""; 35#include ""TGeoScaledShape.h""; 36#include ""TGeoCompositeShape.h""; 37#include ""TGeoManager.h""; 38#include ""TGeoMatrix.h""; 39#include ""TGeoMedium.h""; 40#include ""TGeoMaterial.h""; 41#include ""TGeoBoolNode.h""; 42#include ""TBuffer3D.h""; 43#include ""TBufferJSON.h""; 44#include ""TRegexp.h""; 45 ; 46#include <algorithm>; 47#include <array>; 48 ; 49ROOT::Experimental::RLogChannel &ROOT::RGeomLog(); 50{; 51 static ROOT::Experimental::RLogChannel sLog(""ROOT.Geom"");; 52 return sLog;; 53}; 54 ; 55 ; 56namespace ROOT {; 57 ; 58/** Iterator of hierarchical geometry structures */; 59 ; 60class RGeomBrowserIter {; 61 ; 62 RGeomDescription &fDesc;; 63 int fParentId{-1};; 64 unsigned fChild{0};; 65 int fNodeId{0};; 66 ; 67 std::vector<int> fStackParents;; 68 std::vector<int> fStackChilds;; 69 ; 70",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RGeomData_8cxx_source.html:83,Guid,Guide,83,doc/v632/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RGeomData_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpad/inc/TCanvas.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TCanvas.h File Reference. #include ""TPad.h""; #include ""TAttCanvas.h"". Include dependency graph for TCanvas.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TCanvas;  The Canvas class. More...;  . graf2dgpadincTCanvas.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8h.html:80,Guid,Guide,80,doc/master/TCanvas_8h.html,https://root.cern,https://root.cern/doc/master/TCanvas_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpad/inc/TCanvas.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCanvas.h. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TCanvas; 13#define ROOT_TCanvas; 14 ; 15#include ""TPad.h""; 16 ; 17#include ""TAttCanvas.h""; 18 ; 19class TCanvasImp;; 20class TContextMenu;; 21class TControlBar;; 22 ; 23class TCanvas : public TPad {; 24 ; 25friend class TCanvasImp;; 26friend class TWebCanvas;; 27friend class TThread;; 28friend class TInterpreter;; 29 ; 30protected:; 31 TAttCanvas fCatt; ///< Canvas attributes; 32 TString fDISPLAY; ///< Name of destination screen; 33 Size_t fXsizeUser; ///< User specified size of canvas along X in CM; 34 Size_t fYsizeUser; ///< User specified size of canvas along Y in CM; 35 Size_t fXsizeReal; ///< Current size of canvas along X in CM; 36 Size_t fYsizeReal; ///< Current size of canvas along Y in CM; 37 Color_t fHighLightColor; ///< Highlight color of active pad; 38 Int_t fDoubleBuffer; ///< Double buffer flag (0=off, 1=on); 39 Int_t fWindowTopX; ///< Top X position of window (in pixels); 40 Int_t fWindowTopY; ///< Top Y position of window (in pixels); 41 UInt_t fWindowWidth; ///< Width of window (including borders, etc.); 42 UInt_t fWindowHeight; ///< Height of window (including menubar, borders, etc.); 43 UInt_t fCw; ///< Width of the canvas along X (pixels); 44 UInt_t fCh; ///< Height of the canvas along Y (pixels); 45 Int_t fEvent; ///<! Type of current or last handled event; 46 Int_t fEventX; ///<! Last X mouse position in canvas; 47 Int_t fEventY",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8h_source.html:77,Guid,Guide,77,doc/master/TCanvas_8h_source.html,https://root.cern,https://root.cern/doc/master/TCanvas_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpad/inc/TColorWheel.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TColorWheel.h. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 10/03/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TColorWheel; 13#define ROOT_TColorWheel; 14 ; 15#include ""TNamed.h""; 16 ; 17class TCanvas;; 18class TArc;; 19class TLine;; 20class TText;; 21class TGraph;; 22 ; 23class TColorWheel : public TNamed {; 24 ; 25private:; 26 Double_t fRmin{0.}; ///<Minimum radius for rectangles; 27 Double_t fRmax{0.}; ///<Maximum radius for rectangles; 28 Double_t fR0{0.}; ///<Minimum radius for circles; 29 Double_t fDr{0.}; ///<Circles radius; 30 Double_t fRgray{0.}; ///<Maximum radius of gray circle; 31 Double_t fX[15]; ///<X coordinates of the center of circles; 32 Double_t fY[15]; ///<Y coordinates of the center of circles; 33 TCanvas *fCanvas{nullptr}; ///<! Canvas used to draw the Color Wheel; 34 TArc *fArc{nullptr}; ///<! pointer to utility arc; 35 TLine *fLine{nullptr}; ///<! pointer to utility line; 36 TText *fText{nullptr}; ///<! pointer to utility text; 37 TGraph *fGraph{nullptr}; ///<! pointer to utility graph; 38 ; 39 TColorWheel(const TColorWheel &) = delete;; 40 TColorWheel &operator=(const TColorWheel &) = delete;; 41 ; 42protected:; 43 Int_t InCircles(Double_t x, Double_t y, Int_t coffset, Double_t angle) const;; 44 Int_t InGray(Double_t x, Double_t y) const;; 45 Int_t InRectangles(Double_t x, Double_t y, Int_t coffset, Double_t angle) const;; 46 void PaintCircle(Int_t coffset,Int_t n,Double_t x, Double_t y, Double_t ang) const;; 47 void PaintCi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColorWheel_8h_source.html:81,Guid,Guide,81,doc/master/TColorWheel_8h_source.html,https://root.cern,https://root.cern/doc/master/TColorWheel_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpad/inc/TPad.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPad.h. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPad; 13#define ROOT_TPad; 14 ; 15#include ""TVirtualPad.h""; 16#include ""TAttBBox2D.h""; 17#include <vector>; 18 ; 19class TVirtualViewer3D;; 20class TVirtualPadPainter;; 21class TBrowser;; 22class TBox;; 23class TLegend;; 24class TArrow;; 25class TPoint;; 26class TWebCanvas;; 27 ; 28class TPad : public TVirtualPad, public TAttBBox2D {; 29 ; 30friend class TWebCanvas;; 31 ; 32private:; 33 TObject *fTip{nullptr}; ///<! tool tip associated with box; 34 ; 35protected:; 36 Double_t fX1; ///< X of lower X coordinate; 37 Double_t fY1; ///< Y of lower Y coordinate; 38 Double_t fX2; ///< X of upper X coordinate; 39 Double_t fY2; ///< Y of upper Y coordinate; 40 ; 41 Double_t fXtoAbsPixelk; ///< Conversion coefficient for X World to absolute pixel; 42 Double_t fXtoPixelk; ///< Conversion coefficient for X World to pixel; 43 Double_t fXtoPixel; ///< xpixel = fXtoPixelk + fXtoPixel*xworld; 44 Double_t fYtoAbsPixelk; ///< Conversion coefficient for Y World to absolute pixel; 45 Double_t fYtoPixelk; ///< Conversion coefficient for Y World to pixel; 46 Double_t fYtoPixel; ///< ypixel = fYtoPixelk + fYtoPixel*yworld; 47 ; 48 Double_t fUtoAbsPixelk; ///< Conversion coefficient for U NDC to absolute pixel; 49 Double_t fUtoPixelk; ///< Conversion coefficient for U NDC to pixel; 50 Double_t fUtoPixel; ///< xpixel = fUtoPixelk + fUtoPixel*undc; 51 Double_t fVtoAbsPixelk; ///< C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8h_source.html:74,Guid,Guide,74,doc/master/TPad_8h_source.html,https://root.cern,https://root.cern/doc/master/TPad_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpad/src/TCanvas.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCanvas.cxx. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <cstdlib>; 14#include <iostream>; 15#include <fstream>; 16 ; 17#include ""TROOT.h""; 18#include ""TBuffer.h""; 19#include ""TCanvas.h""; 20#include ""TCanvasImp.h""; 21#include ""TDatime.h""; 22#include ""TClass.h""; 23#include ""TStyle.h""; 24#include ""TBox.h""; 25#include ""TCanvasImp.h""; 26#include ""TDialogCanvas.h""; 27#include ""TGuiFactory.h""; 28#include ""TEnv.h""; 29#include ""TError.h""; 30#include ""TContextMenu.h""; 31#include ""TControlBar.h""; 32#include ""TInterpreter.h""; 33#include ""TApplication.h""; 34#include ""TColor.h""; 35#include ""TSystem.h""; 36#include ""TObjArray.h""; 37#include ""TVirtualPadEditor.h""; 38#include ""TVirtualViewer3D.h""; 39#include ""TPadPainter.h""; 40#include ""TVirtualGL.h""; 41#include ""TVirtualPS.h""; 42#include ""TVirtualX.h""; 43#include ""TAxis.h""; 44#include ""TH1.h""; 45#include ""TGraph.h""; 46#include ""TMath.h""; 47#include ""TView.h""; 48#include ""strlcpy.h""; 49#include ""snprintf.h""; 50 ; 51#include ""TVirtualMutex.h""; 52 ; 53class TCanvasInit {; 54public:; 55 TCanvasInit() { TApplication::NeedGraphicsLibs(); }; 56} gCanvasInit;; 57 ; 58//*-*x16 macros/layout_canvas; 59 ; 60Bool_t TCanvas::fgIsFolder = kFALSE;; 61 ; 62const Size_t kDefaultCanvasSize = 20;; 63 ; 64ClassImpQ(TCanvas); 65 ; 66 ; 67TString GetNewCanvasName(const char *arg = nullptr); 68{; 69 if (arg && *arg); 70 return arg;; 71 ; 72 const char *defcanvas = gROOT->G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8cxx_source.html:79,Guid,Guide,79,doc/master/TCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCanvas_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpad/src/TPad.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPad.cxx. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <cstdlib>; 14#include <iostream>; 15#include <locale>; 16#include <memory>; 17 ; 18#include ""TROOT.h""; 19#include ""TBuffer.h""; 20#include ""TError.h""; 21#include ""TMath.h""; 22#include ""TSystem.h""; 23#include ""TStyle.h""; 24#include ""TFile.h""; 25#include ""TH1.h""; 26#include ""TH2.h""; 27#include ""TH3.h""; 28#include ""TClass.h""; 29#include ""TBaseClass.h""; 30#include ""TClassTable.h""; 31#include ""TVirtualPS.h""; 32#include ""TVirtualX.h""; 33#include ""TVirtualViewer3D.h""; 34#include ""TView.h""; 35#include ""TPoint.h""; 36#include ""TGraph.h""; 37#include ""TMultiGraph.h""; 38#include ""THStack.h""; 39#include ""TPaveText.h""; 40#include ""TPaveStats.h""; 41#include ""TGroupButton.h""; 42#include ""TBrowser.h""; 43#include ""TVirtualGL.h""; 44#include ""TString.h""; 45#include ""TDataMember.h""; 46#include ""TMethod.h""; 47#include ""TDataType.h""; 48#include ""TFrame.h""; 49#include ""TExec.h""; 50#include ""TDatime.h""; 51#include ""TColor.h""; 52#include ""TCanvas.h""; 53#include ""TPluginManager.h""; 54#include ""TEnv.h""; 55#include ""TImage.h""; 56#include ""TViewer3DPad.h""; 57#include ""TCreatePrimitives.h""; 58#include ""TLegend.h""; 59#include ""TAtt3D.h""; 60#include ""TVirtualPadPainter.h""; 61#include ""strlcpy.h""; 62#include ""snprintf.h""; 63 ; 64#include ""TVirtualMutex.h""; 65 ; 66static Int_t gReadLevel = 0;; 67 ; 68Int_t TPad::fgMaxPickDistance = 5;; 69 ; 70ClassImpQ(TPad); 71 ; 72/** ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:76,Guid,Guide,76,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpadv7/inc/ROOT/RCanvas.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RCanvas.hxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#ifndef ROOT7_RCanvas; 10#define ROOT7_RCanvas; 11 ; 12#include ""ROOT/RPadBase.hxx""; 13#include ""ROOT/RVirtualCanvasPainter.hxx""; 14#include ""ROOT/RDrawableRequest.hxx""; 15 ; 16#include <memory>; 17#include <string>; 18#include <vector>; 19#include <list>; 20 ; 21namespace ROOT {; 22namespace Experimental {; 23 ; 24class RChangeAttrRequest : public RDrawableRequest {; 25 std::vector<std::string> ids; ///< array of ids; 26 std::vector<std::string> names; ///< array of attribute names; 27 std::vector<std::unique_ptr<RAttrMap::Value_t>> values; ///< array of values; 28 bool update{true}; ///< update canvas at the end; 29 bool fNeedUpdate{false}; ///<! is canvas update required; 30 RChangeAttrRequest(const RChangeAttrRequest &) = delete;; 31 RChangeAttrRequest& operator=(const RChangeAttrRequest &) = delete;; 32public:; 33 RChangeAttrRequest() = default; // for I/O; 34 ~RChangeAttrRequest() override = default;; 35 std::unique_ptr<RDrawableReply> Process() override;; 36 bool NeedCanvasUpdate() const override { return fNeedUpdate; }; 37};; 38 ; 39/** \class RCanvas; 40\ingroup GpadROOT7; 41\brief A window's topmost `RPad`.; 42\author Axel Naumann <axel@cern.ch>; 43\date 2015-07-08; 44\warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 45*/; 46 ; 47class RCanvas: public RPadBase {; 48friend class RPadBase; /// use for ID generation; 49friend cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RCanvas_8hxx_source.html:86,Guid,Guide,86,doc/master/RCanvas_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RCanvas_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpadv7/inc/ROOT/RColor.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RColor.hxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#ifndef ROOT7_RColor; 10#define ROOT7_RColor; 11 ; 12#include <cstdint>; 13#include <vector>; 14#include <string>; 15#include <array>; 16#include <DllImport.h>; 17 ; 18namespace ROOT {; 19namespace Experimental {; 20 ; 21// TODO: see also imagemagick's C++ interface for RColor operations!; 22// https://www.imagemagick.org/api/magick++-classes.php; 23 ; 24/** \class RColor; 25\ingroup GpadROOT7; 26\brief The color class; 27\author Axel Naumann <axel@cern.ch>; 28\author Sergey Linev <S.Linev@gsi.de>; 29\date 2017-09-26; 30\warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 31*/; 32 ; 33class RColor {; 34 ; 35 using RGB_t = std::array<uint8_t, 3>;; 36 ; 37private:; 38 ; 39 std::string fColor; ///< string representation of color; 40 ; 41 static std::string toHex(uint8_t v);; 42 ; 43 static std::vector<uint8_t> ConvertNameToRGB(const std::string &name);; 44 ; 45 bool SetRGBHex(const std::string &hex);; 46 bool SetAlphaHex(const std::string &hex);; 47 ; 48public:; 49 ; 50 RColor() = default;; 51 ; 52 /** Construct color with provided r,g,b values */; 53 RColor(uint8_t r, uint8_t g, uint8_t b) { SetRGB(r, g, b); }; 54 ; 55 /** Construct color with provided r,g,b and alpha values */; 56 RColor(uint8_t r, uint8_t g, uint8_t b, float alpha); 57 {; 58 SetRGBA(r, g, b, alpha);; 59 }; 60 ; 61 /** Construct color with provided RGB_t value */; 62 RColor(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RColor_8hxx_source.html:85,Guid,Guide,85,doc/master/RColor_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RColor_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/gpadv7/src/RCanvas.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RCanvas.cxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#include ""ROOT/RCanvas.hxx""; 10 ; 11#include ""ROOT/RLogger.hxx""; 12 ; 13#include <algorithm>; 14#include <memory>; 15#include <mutex>; 16#include <thread>; 17#include <chrono>; 18#include <cstdio>; 19#include <cstring>; 20 ; 21#include ""TList.h""; 22#include ""TROOT.h""; 23#include ""TString.h""; 24 ; 25namespace {; 26 ; 27std::mutex &GetHeldCanvasesMutex(); 28{; 29 static std::mutex sMutex;; 30 return sMutex;; 31}; 32 ; 33std::vector<std::shared_ptr<ROOT::Experimental::RCanvas>> &GetHeldCanvases(); 34{; 35 static std::vector<std::shared_ptr<ROOT::Experimental::RCanvas>> sCanvases;; 36 return sCanvases;; 37}; 38 ; 39 ; 40} // namespace; 41 ; 42///////////////////////////////////////////////////////////////////////////////////////; 43/// Returns list of created canvases; 44 ; 45const std::vector<std::shared_ptr<ROOT::Experimental::RCanvas>> ROOT::Experimental::RCanvas::GetCanvases(); 46{; 47 std::lock_guard<std::mutex> grd(GetHeldCanvasesMutex());; 48 ; 49 return GetHeldCanvases();; 50}; 51 ; 52///////////////////////////////////////////////////////////////////////////////////////; 53/// Release list of held canvases pointers; 54/// If no other shared pointers exists on the canvas, object will be destroyed; 55 ; 56void ROOT::Experimental::RCanvas::ReleaseHeldCanvases(); 57{; 58 std::vector<std::shared_ptr<ROOT::Experimental::RCanvas>> vect;; 59 ; 60 {; 61 std::lock_guard<std::mutex> grd(GetHeldCanvasesMutex());; 62 ; 63 std:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RCanvas_8cxx_source.html:81,Guid,Guide,81,doc/master/RCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RCanvas_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/legend1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; legend1.C File Reference. Functions; leg AddEntry (""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");  ; leg AddEntry (""gr"",""Graph with error bars"",""lep"");  ; leg AddEntry (h1,""Histogram filled with random numbers"",""f"");  ; gr Draw (""P"");  ; f1 Draw (""same"");  ; h1 Draw ();  ; h1 FillRandom (""gaus"", 30000);  ;  for (Int_t i=0;i< n;i++);  ; h1 SetFillColor (kGreen);  ; h1 SetFillStyle (3003);  ; leg SetHeader (""The Legend Title"");  ; f1 SetLineColor (kBlue);  ; gr SetLineColor (kRed);  ; gr SetLineWidth (2);  ; f1 SetLineWidth (4);  ; gr SetMarkerColor (7);  ; gr SetMarkerSize (1.3);  ; gr SetMarkerStyle (21);  ; gr SetName (""gr"");  ; gStyle SetOptStat (0);  . Variables; return c1;  ; Double_t ex [n];  ; Double_t ey [n];  ; TF1 * f1 =new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);  ; TGraphErrors * gr = new TGraphErrors(n,x,y,ex,ey);  ; TH1F * h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);  ;  leg = new TLegend(0.1,0.7,0.48,0.9);  ; const Int_t n = 20;  ; Double_t x [n];  ; Double_t y [n];  . Function Documentation. ◆ AddEntry() [1/3]. leg AddEntry ; (; ""f1"" ; , . ""Function abs(#frac{sin(x)}{x})"" ; , . ""l"" ;  . ). ◆ AddEntry() [2/3]. leg AddEntry ; (; ""gr"" ; , . ""Graph with error bars"" ; , . ""lep"" ;  . ). ◆ AddEntry() [3/3]. leg AddEntry ; (; h1 ; , . ""Histogram filled with random numbers"" ; , . ""f"" ;  . ). ◆ Draw() [1/3]. gr Draw ; (; ""P"" ; ). ◆ Draw() [2/3]. f1 Draw ; (; ""same"" ; ). ◆ Draw() [3/3]. h1 Draw ; (; ). ◆ FillRandom(). h1 FillRandom ; (; ""gaus"" ; , . 30000 ;  . ). ◆ for(). for ; (; ). Definition at line 18 of file legend1.C. ◆ SetFillColor(). h1 SetFillColor ; (; kGreen ; ). ◆ SetFillStyle(). h1 SetFillStyle ; (; 3003 ; ). ◆ SetHeader(). leg SetHeader ; (; ""The Legend Title"" ; ). ◆ SetLineColor() [1/2]. f1 SetLineColor ; (; kBlue ; ). ◆ SetLineColor() [2/2]. gr SetLineColor ; (; kRed ; ). ◆ SetLin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend1_8C.html:87,Guid,Guide,87,doc/master/legend1_8C.html,https://root.cern,https://root.cern/doc/master/legend1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/legend1.C File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; legend1.C File Reference. Functions; leg AddEntry (""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");  ; leg AddEntry (""gr"",""Graph with error bars"",""lep"");  ; leg AddEntry (h1,""Histogram filled with random numbers"",""f"");  ; gr Draw (""P"");  ; f1 Draw (""same"");  ; h1 Draw ();  ; h1 FillRandom (""gaus"", 30000);  ;  for (Int_t i=0;i< n;i++);  ; h1 SetFillColor (kGreen);  ; h1 SetFillStyle (3003);  ; leg SetHeader (""The Legend Title"");  ; f1 SetLineColor (kBlue);  ; gr SetLineColor (kRed);  ; gr SetLineWidth (2);  ; f1 SetLineWidth (4);  ; gr SetMarkerColor (7);  ; gr SetMarkerSize (1.3);  ; gr SetMarkerStyle (21);  ; gr SetName (""gr"");  ; gStyle SetOptStat (0);  . Variables; return c1;  ; Double_t ex [n];  ; Double_t ey [n];  ; TF1 * f1 =new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);  ; TGraphErrors * gr = new TGraphErrors(n,x,y,ex,ey);  ; TH1F * h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);  ;  leg = new TLegend(0.1,0.7,0.48,0.9);  ; const Int_t n = 20;  ; Double_t x [n];  ; Double_t y [n];  . Function Documentation. ◆ AddEntry() [1/3]. leg AddEntry ; (; ""f1"" ; , . ""Function abs(#frac{sin(x)}{x})"" ; , . ""l"" ;  . ). ◆ AddEntry() [2/3]. leg AddEntry ; (; ""gr"" ; , . ""Graph with error bars"" ; , . ""lep"" ;  . ). ◆ AddEntry() [3/3]. leg AddEntry ; (; h1 ; , . ""Histogram filled with random numbers"" ; , . ""f"" ;  . ). ◆ Draw() [1/3]. gr Draw ; (; ""P"" ; ). ◆ Draw() [2/3]. f1 Draw ; (; ""same"" ; ). ◆ Draw() [3/3]. h1 Draw ; (; ). ◆ FillRandom(). h1 FillRandom ; (; ""gaus"" ; , . 30000 ;  . ). ◆ for(). for ; (; ). Definition at line 18 of file legend1.C. ◆ SetFillColor(). h1 SetFillColor ; (; kGreen ; ). ◆ SetFillStyle(). h1 SetFillStyle ; (; 3003 ; ). ◆ SetHeader(). leg SetHeader ; (; ""The Legend Title"" ; ). ◆ SetLineColor() [1/2]. f1 SetLineColor ; (; kBlue ; ). ◆ SetLineColor() [2/2]. gr SetLineColor ; (; kRed ; ). ◆ SetLine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/legend1_8C.html:86,Guid,Guide,86,doc/v632/legend1_8C.html,https://root.cern,https://root.cern/doc/v632/legend1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/legend1.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. legend1.C. Go to the documentation of this file. 1{; 2 TCanvas *c1 = new TCanvas(""c1"",""c1"",600,500);; 3 gStyle->SetOptStat(0);; 4 ; 5 TH1F *h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);; 6 h1->FillRandom(""gaus"",30000);; 7 h1->SetFillColor(kGreen);; 8 h1->SetFillStyle(3003);; 9 h1->Draw();; 10 ; 11 TF1 *f1=new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);; 12 f1->SetLineColor(kBlue);; 13 f1->SetLineWidth(4);; 14 f1->Draw(""same"");; 15 ; 16 const Int_t n = 20;; 17 Double_t x[n], y[n], ex[n], ey[n];; 18 for (Int_t i=0;i<n;i++) {; 19 x[i] = i*0.1;; 20 y[i] = 1000*sin(x[i]+0.2);; 21 x[i] = 17.8*x[i]-8.9;; 22 ex[i] = 1.0;; 23 ey[i] = 10.*i;; 24 }; 25 TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; 26 gr->SetName(""gr"");; 27 gr->SetLineColor(kRed);; 28 gr->SetLineWidth(2);; 29 gr->SetMarkerStyle(21);; 30 gr->SetMarkerSize(1.3);; 31 gr->SetMarkerColor(7);; 32 gr->Draw(""P"");; 33 ; 34 leg = new TLegend(0.1,0.7,0.48,0.9);; 35 leg->SetHeader(""The Legend Title"");; 36 leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; 37 leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; 38 leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; 39 leg->Draw();; 40 ; 41 return c1;; 42}; 43 ; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend1_8C_source.html:84,Guid,Guide,84,doc/master/legend1_8C_source.html,https://root.cern,https://root.cern/doc/master/legend1_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/legend1.C Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. legend1.C. Go to the documentation of this file. 1{; 2 TCanvas *c1 = new TCanvas(""c1"",""c1"",600,500);; 3 gStyle->SetOptStat(0);; 4 ; 5 TH1F *h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);; 6 h1->FillRandom(""gaus"",30000);; 7 h1->SetFillColor(kGreen);; 8 h1->SetFillStyle(3003);; 9 h1->Draw();; 10 ; 11 TF1 *f1=new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);; 12 f1->SetLineColor(kBlue);; 13 f1->SetLineWidth(4);; 14 f1->Draw(""same"");; 15 ; 16 const Int_t n = 20;; 17 Double_t x[n], y[n], ex[n], ey[n];; 18 for (Int_t i=0;i<n;i++) {; 19 x[i] = i*0.1;; 20 y[i] = 1000*sin(x[i]+0.2);; 21 x[i] = 17.8*x[i]-8.9;; 22 ex[i] = 1.0;; 23 ey[i] = 10.*i;; 24 }; 25 TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; 26 gr->SetName(""gr"");; 27 gr->SetLineColor(kRed);; 28 gr->SetLineWidth(2);; 29 gr->SetMarkerStyle(21);; 30 gr->SetMarkerSize(1.3);; 31 gr->SetMarkerColor(7);; 32 gr->Draw(""P"");; 33 ; 34 leg = new TLegend(0.1,0.7,0.48,0.9);; 35 leg->SetHeader(""The Legend Title"");; 36 leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; 37 leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; 38 leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; 39 leg->Draw();; 40 ; 41 return c1;; 42}; 43 ; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:433; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/legend1_8C_source.html:83,Guid,Guide,83,doc/v632/legend1_8C_source.html,https://root.cern,https://root.cern/doc/v632/legend1_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/legend2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; legend2.C File Reference. Functions; leg AddEntry ((TObject *) 0, """", """");  ; leg AddEntry ((TObject *) 0, ""Some text"", """");  ; leg AddEntry (h, ""Histogram \""h\"" again"", ""l"");  ; leg AddEntry (h, ""Histogram \""h\"""", ""l"");  ; leg Draw ();  . Variables; return c2;  ; TH1 * h = new TH1F("""", """", 1, 0, 1);  ; TLegend * leg = new TLegend(0.2, 0.2, .8, .8);  . Function Documentation. ◆ AddEntry() [1/4]. leg AddEntry ; (; (TObject *) ; 0, . """" ; , . """" ;  . ). ◆ AddEntry() [2/4]. leg AddEntry ; (; (TObject *) ; 0, . ""Some text"" ; , . """" ;  . ). ◆ AddEntry() [3/4]. leg AddEntry ; (; h ; , . ""Histogram \""h\"" again"" ; , . ""l"" ;  . ). ◆ AddEntry() [4/4]. leg AddEntry ; (; h ; , . ""Histogram \""h\"""" ; , . ""l"" ;  . ). ◆ Draw(). leg Draw ; (; ). Variable Documentation. ◆ c2. return c2. Definition at line 14 of file legend2.C. ◆ h. Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t h = new TH1F("""", """", 1, 0, 1). Definition at line 5 of file legend2.C. ◆ leg. TLegend* leg = new TLegend(0.2, 0.2, .8, .8). Definition at line 4 of file legend2.C. graf2dgrafdocmacroslegend2.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend2_8C.html:87,Guid,Guide,87,doc/master/legend2_8C.html,https://root.cern,https://root.cern/doc/master/legend2_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/legend2.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. legend2.C. Go to the documentation of this file. 1{; 2 TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);; 3 ; 4 TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; 5 TH1* h = new TH1F("""", """", 1, 0, 1);; 6 ; 7 leg->AddEntry(h, ""Histogram \""h\"""", ""l"");; 8 leg->AddEntry((TObject*)0, """", """");; 9 leg->AddEntry((TObject*)0, ""Some text"", """");; 10 leg->AddEntry((TObject*)0, """", """");; 11 leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");; 12 ; 13 leg->Draw();; 14 return c2;; 15}; 16 ; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TLegendThis class displays a legend box (TPaveText) containing several legend entries.Definition TLegend.h:23; TLegend::AddEntryTLegendEntry * AddEntry(const TObject *obj, const char *label="""", Option_t *option=""lpf"")Add a new entry to this legend.Definition TLegend.cxx:320; TLegend::Drawvoid Draw(Option_t *option="""") overrideDraw this legend with its current attributes.Definition TLegend.cxx:425; TObjectMother of all ROOT objects.Definition TObject.h:41; hTH1 * hDefinition legend2.C:5; c2return c2Definition legend2.C:14; legTLegend * legDefinition legend2.C:4. graf2dgrafdocmacroslegend2.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend2_8C_source.html:84,Guid,Guide,84,doc/master/legend2_8C_source.html,https://root.cern,https://root.cern/doc/master/legend2_8C_source.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/legend3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; legend3.C File Reference. Functions; leg AddEntry (h, ""Column 1 line 1"", ""l"");  ; leg AddEntry (h, ""Column 1 line 2"", ""l"");  ; leg AddEntry (h, ""Column 2 line 1"", ""l"");  ; leg AddEntry (h, ""Column 2 line 2"", ""l"");  ; leg Draw ();  ; leg SetNColumns (2);  . Variables; return c3;  ; TH1 * h = new TH1F("""", """", 1, 0, 1);  ; TLegend * leg = new TLegend(0.2, 0.2, .8, .8);  . Function Documentation. ◆ AddEntry() [1/4]. leg AddEntry ; (; h ; , . ""Column 1 line 1"" ; , . ""l"" ;  . ). ◆ AddEntry() [2/4]. leg AddEntry ; (; h ; , . ""Column 1 line 2"" ; , . ""l"" ;  . ). ◆ AddEntry() [3/4]. leg AddEntry ; (; h ; , . ""Column 2 line 1"" ; , . ""l"" ;  . ). ◆ AddEntry() [4/4]. leg AddEntry ; (; h ; , . ""Column 2 line 2"" ; , . ""l"" ;  . ). ◆ Draw(). leg Draw ; (; ). ◆ SetNColumns(). leg SetNColumns ; (; 2 ; ). Variable Documentation. ◆ c3. return c3. Definition at line 15 of file legend3.C. ◆ h. TH1* h = new TH1F("""", """", 1, 0, 1). Definition at line 5 of file legend3.C. ◆ leg. TLegend* leg = new TLegend(0.2, 0.2, .8, .8). Definition at line 4 of file legend3.C. graf2dgrafdocmacroslegend3.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend3_8C.html:87,Guid,Guide,87,doc/master/legend3_8C.html,https://root.cern,https://root.cern/doc/master/legend3_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/legend3.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. legend3.C. Go to the documentation of this file. 1{; 2 TCanvas *c3 = new TCanvas(""c2"",""c2"",500,300);; 3 ; 4 TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; 5 TH1* h = new TH1F("""", """", 1, 0, 1);; 6 ; 7 leg-> SetNColumns(2);; 8 ; 9 leg->AddEntry(h, ""Column 1 line 1"", ""l"");; 10 leg->AddEntry(h, ""Column 2 line 1"", ""l"");; 11 leg->AddEntry(h, ""Column 1 line 2"", ""l"");; 12 leg->AddEntry(h, ""Column 2 line 2"", ""l"");; 13 ; 14 leg->Draw();; 15 return c3;; 16}; 17 ; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TLegendThis class displays a legend box (TPaveText) containing several legend entries.Definition TLegend.h:23; TLegend::AddEntryTLegendEntry * AddEntry(const TObject *obj, const char *label="""", Option_t *option=""lpf"")Add a new entry to this legend.Definition TLegend.cxx:320; TLegend::Drawvoid Draw(Option_t *option="""") overrideDraw this legend with its current attributes.Definition TLegend.cxx:425; SetNColumnsleg SetNColumns(2); c3return c3Definition legend3.C:15; legTLegend * legDefinition legend3.C:4; hTH1 * hDefinition legend3.C:5. graf2dgrafdocmacroslegend3.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend3_8C_source.html:84,Guid,Guide,84,doc/master/legend3_8C_source.html,https://root.cern,https://root.cern/doc/master/legend3_8C_source.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/polyline.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; polyline.C File Reference. Functions; pline Draw (""f"");  ; pline Draw ();  ; pline SetFillColor (38);  ; pline SetLineColor (2);  ; pline SetLineWidth (4);  . Variables; TPolyLine * pline = new TPolyLine(5,x,y);  ; Double_t y [5] = {.5,.1,.9,.7,.5};  . Function Documentation. ◆ Draw() [1/2]. pline Draw ; (; ""f"" ; ). ◆ Draw() [2/2]. pline Draw ; (; ). ◆ SetFillColor(). pline SetFillColor ; (; 38 ; ). ◆ SetLineColor(). pline SetLineColor ; (; 2 ; ). ◆ SetLineWidth(). pline SetLineWidth ; (; 4 ; ). Variable Documentation. ◆ pline. TPolyLine* pline = new TPolyLine(5,x,y). Definition at line 4 of file polyline.C. ◆ y. Double_t y[5] = {.5,.1,.9,.7,.5}. Definition at line 3 of file polyline.C. graf2dgrafdocmacrospolyline.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/polyline_8C.html:88,Guid,Guide,88,doc/master/polyline_8C.html,https://root.cern,https://root.cern/doc/master/polyline_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/doc/macros/polyline.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. polyline.C. Go to the documentation of this file. 1{; 2 Double_t x[5] = {.2,.7,.6,.25,.2};; 3 Double_t y[5] = {.5,.1,.9,.7,.5};; 4 TPolyLine *pline = new TPolyLine(5,x,y);; 5 pline->SetFillColor(38);; 6 pline->SetLineColor(2);; 7 pline->SetLineWidth(4);; 8 pline->Draw(""f"");; 9 pline->Draw();; 10}; Double_tdouble Double_tDefinition RtypesCore.h:59; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TPolyLineDefined by an array on N points in a 2-D space.Definition TPolyLine.h:23; TPolyLine::Drawvoid Draw(Option_t *option="""") overrideDraw this polyline with its current attributes.Definition TPolyLine.cxx:215; xDouble_t x[n]Definition legend1.C:17; plineTPolyLine * plineDefinition polyline.C:4; yDouble_t y[5]Definition polyline.C:3. graf2dgrafdocmacrospolyline.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/polyline_8C_source.html:85,Guid,Guide,85,doc/master/polyline_8C_source.html,https://root.cern,https://root.cern/doc/master/polyline_8C_source.html,2,['Guid'],['Guide']
Usability,. ROOT: graf2d/graf/doc/macros/roots.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; roots.C File Reference. Functions; TCanvas * roots ();  . Function Documentation. ◆ roots(). TCanvas * roots ; (; ). Definition at line 1 of file roots.C. graf2dgrafdocmacrosroots.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/roots_8C.html:85,Guid,Guide,85,doc/master/roots_8C.html,https://root.cern,https://root.cern/doc/master/roots_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TArc.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArc.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 16/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TArc; 13#define ROOT_TArc; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TArc //; 19// //; 20// Arc of a circle. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TEllipse.h""; 25 ; 26class TArc : public TEllipse {; 27 ; 28public:; 29 TArc();; 30 TArc(Double_t x1, Double_t y1,Double_t radius; 31 , Double_t phimin=0,Double_t phimax=360);; 32 TArc(const TArc &arc);; 33 ~TArc() override;; 34 ; 35 void Copy(TObject &arc) const override;; 36 virtual TArc *DrawArc(Double_t x1, Double_t y1, Double_t radius; 37 ,Double_t phimin=0, Double_t phimax=360, Option_t *option="""");; 38 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 39 ; 40 ClassDefOverride(TArc,1) //Arc of a circle; 41};; 42 ; 43#endif; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; TEllipse.h; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; TArcCreate an Arc.Definition TArc.h:26; TArc::~TArc~TArc() overrideArc default destructor.Definition TArc.cxx:64; TArc::TArcTArc()Arc default constructor.Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TArc_8h_source.html:74,Guid,Guide,74,doc/master/TArc_8h_source.html,https://root.cern,https://root.cern/doc/master/TArc_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TArrow.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArrow.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 17/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TArrow; 13#define ROOT_TArrow; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TArrow //; 19// //; 20// One arrow --->. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TString.h""; 25#include ""TLine.h""; 26#include ""TAttFill.h""; 27 ; 28 ; 29class TArrow : public TLine, public TAttFill {; 30protected:; 31 Float_t fAngle; ///< Arrow opening angle (degrees); 32 Float_t fArrowSize; ///< Arrow Size; 33 TString fOption; ///< Arrow shapes; 34 ; 35 static Float_t fgDefaultAngle; ///< Default Arrow opening angle (degrees); 36 static Float_t fgDefaultArrowSize; ///< Default Arrow Size; 37 static TString fgDefaultOption; ///< Default Arrow shapes; 38 ; 39public:; 40 TArrow();; 41 TArrow(Double_t x1, Double_t y1, Double_t x2 ,Double_t y2,; 42 Float_t arrowsize=0.05, Option_t *option="">"");; 43 TArrow(const TArrow &arrow);; 44 ~TArrow() override;; 45 ; 46 void Copy(TObject &arrow) const override;; 47 ; 48 void Draw(Option_t *option="""") override;; 49 virtual TArrow *DrawArrow(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2,; 50 Float_t arrowsize=0 ,Option_t *option="""");; 51 Float_t GetAngle() const {return fAngle;}; 52 Float_t GetArrowSize() const {return fArrowSize;}; 53 Option_t *GetOption() const override { return fOption.Data();}; 54 void Paint(Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TArrow_8h_source.html:76,Guid,Guide,76,doc/master/TArrow_8h_source.html,https://root.cern,https://root.cern/doc/master/TArrow_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TBox.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBox.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBox; 13#define ROOT_TBox; 14 ; 15#include ""TObject.h""; 16#include ""TAttLine.h""; 17#include ""TAttFill.h""; 18#include ""TAttBBox2D.h""; 19 ; 20class TPoint;; 21 ; 22class TBox : public TObject, public TAttLine, public TAttFill, public TAttBBox2D {; 23 ; 24private:; 25 TObject *fTip{nullptr}; ///<! tool tip associated with box; 26 ; 27protected:; 28 Double_t fX1; ///< X of 1st point; 29 Double_t fY1; ///< Y of 1st point; 30 Double_t fX2; ///< X of 2nd point; 31 Double_t fY2; ///< Y of 2nd point; 32 Bool_t fResizing; ///<! True if box is being resized; 33 ; 34public:; 35 // Private bits, clients can only test but not change them; 36 enum {; 37 kCannotMove = BIT(12) //if set the box cannot be moved/resized; 38 };; 39 TBox();; 40 TBox(Double_t x1, Double_t y1,Double_t x2, Double_t y2);; 41 TBox(const TBox &box);; 42 TBox& operator=(const TBox&);; 43 ~TBox() override;; 44 ; 45 void Copy(TObject &box) const override;; 46 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 47 void Draw(Option_t *option="""") override;; 48 virtual TBox *DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2);; 49 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 50 Bool_t IsBeingResized() const { return fResizing; }; 51 Double_t GetX1() const { return fX1; }; 52 Double_t GetX2() const { return fX2; }; 53 Double_t GetY1() const { return fY1; }; 54 Double_t GetY2() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBox_8h_source.html:74,Guid,Guide,74,doc/master/TBox_8h_source.html,https://root.cern,https://root.cern/doc/master/TBox_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TCurlyArc.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyArc.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Otto Schaile 20/11/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TCurlyArc; 12#define ROOT_TCurlyArc; 13 ; 14#include ""TCurlyLine.h""; 15 ; 16class TCurlyArc : public TCurlyLine {; 17 ; 18private:; 19 Double_t fR1; ///< Radius of arc; 20 Double_t fPhimin; ///< start phi (degrees); 21 Double_t fPhimax; ///< end phi (degrees); 22 Double_t fTheta; ///< used internally; 23 ; 24 static Double_t fgDefaultWaveLength; ///< default wavelength; 25 static Double_t fgDefaultAmplitude; ///< default amplitude; 26 static Bool_t fgDefaultIsCurly; ///< default curly type; 27 ; 28public:; 29 TCurlyArc();; 30 TCurlyArc(Double_t x1, Double_t y1, Double_t rad,; 31 Double_t phimin, Double_t phimax,; 32 Double_t wl = .02, Double_t amp = .01);; 33 ~TCurlyArc() override {}; 34 ; 35 void Build() override;; 36 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 37 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 38 Double_t GetRadius() const {return fR1;}; 39 Double_t GetPhimin() const {return fPhimin;}; 40 Double_t GetPhimax() const {return fPhimax;}; 41 virtual void SetCenter(Double_t x1, Double_t y1); // *MENU* *ARGS={x1=>fX1,y1=>fY1}; 42 virtual void SetRadius(Double_t radius); // *MENU* *ARGS={radius=>fR1}; 43 virtual void SetPhimin(Double_t phimin); // *MENU* *ARGS={phimin=>fPhimin}; 44 virtual void SetPhimax(Double_t phimax); // *MENU* *ARGS={phimax=>fPhimax}; 45 void SavePrimitive(std::ostream &out, Option_t * = """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyArc_8h_source.html:79,Guid,Guide,79,doc/master/TCurlyArc_8h_source.html,https://root.cern,https://root.cern/doc/master/TCurlyArc_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TCurlyLine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyLine.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Otto Schaile 20/11/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TCurlyLine; 12#define ROOT_TCurlyLine; 13 ; 14#include ""TPolyLine.h""; 15#include ""TAttBBox2D.h""; 16 ; 17class TPoint;; 18 ; 19class TCurlyLine : public TPolyLine, public TAttBBox2D {; 20 ; 21protected:; 22 Double_t fX1; ///< start x, center for arc; 23 Double_t fY1; ///< start y, center for arc; 24 Double_t fX2; ///< end x; 25 Double_t fY2; ///< end y; 26 Double_t fWaveLength; ///< wavelength of sinusoid in percent of pad height; 27 Double_t fAmplitude; ///< amplitude of sinusoid in percent of pad height; 28 Int_t fNsteps; ///< used internally (controls precision); 29 Bool_t fIsCurly; ///< true: Gluon, false: Gamma; 30 ; 31 static Double_t fgDefaultWaveLength; ///< default wavelength; 32 static Double_t fgDefaultAmplitude; ///< default amplitude; 33 static Bool_t fgDefaultIsCurly; ///< default curly type; 34 ; 35public:; 36 TCurlyLine();; 37 TCurlyLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2,; 38 Double_t wl = .02,; 39 Double_t amp = .01);; 40 ~TCurlyLine() override{}; 41 virtual void Build();; 42 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 43 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 44 Bool_t GetCurly() const {return fIsCurly;}; 45 Double_t GetWaveLength() const{return fWaveLength;}; 46 Double_t GetAmplitude() const {return fAmplitude;}; 47 Double_t GetStartX() const {return fX1;}; 48 Double_t GetEndX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyLine_8h_source.html:80,Guid,Guide,80,doc/master/TCurlyLine_8h_source.html,https://root.cern,https://root.cern/doc/master/TCurlyLine_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TCutG.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TCutG.h File Reference. #include ""TGraph.h"". Include dependency graph for TCutG.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TCutG;  Graphical cut class. More...;  . graf2dgrafincTCutG.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCutG_8h.html:78,Guid,Guide,78,doc/master/TCutG_8h.html,https://root.cern,https://root.cern/doc/master/TCutG_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TCutG.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCutG.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 16/05/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TCutG; 13#define ROOT_TCutG; 14 ; 15 ; 16#include ""TGraph.h""; 17 ; 18class TH2;; 19 ; 20class TCutG : public TGraph {; 21 ; 22protected:; 23 TString fVarX; ///< X variable; 24 TString fVarY; ///< Y variable; 25 TObject *fObjectX; ///<! pointer to an object corresponding to X; 26 TObject *fObjectY; ///<! pointer to an object corresponding to Y; 27 ; 28public:; 29 TCutG();; 30 TCutG(const TCutG &cutg);; 31 TCutG(const char *name, Int_t n=0);; 32 TCutG(const char *name, Int_t n, const Float_t *x, const Float_t *y);; 33 TCutG(const char *name, Int_t n, const Double_t *x, const Double_t *y);; 34 ~TCutG() override;; 35 ; 36 TCutG &operator=(const TCutG &);; 37 virtual Double_t Area() const;; 38 virtual void Center(Double_t &cx, Double_t &cy) const;; 39 TObject *GetObjectX() const {return fObjectX;}; 40 TObject *GetObjectY() const {return fObjectY;}; 41 const char *GetVarX() const {return fVarX.Data();}; 42 const char *GetVarY() const {return fVarY.Data();}; 43 virtual Double_t IntegralHist(TH2 *h, Option_t *option="""") const;; 44 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 45 virtual void SetObjectX(TObject *obj);; 46 virtual void SetObjectY(TObject *obj);; 47 virtual void SetVarX(const char *varx); // *MENU*; 48 virtual void SetVarY(const char *vary); // *MENU*; 49 ; 50 ClassDefOverride(TCutG,2) // A Graphical cut.; 51};; 52 ; 53#en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCutG_8h_source.html:75,Guid,Guide,75,doc/master/TCutG_8h_source.html,https://root.cern,https://root.cern/doc/master/TCutG_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TEllipse.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEllipse.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 16/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TEllipse; 13#define ROOT_TEllipse; 14 ; 15 ; 16#include ""TObject.h""; 17#include ""TAttLine.h""; 18#include ""TAttFill.h""; 19#include ""TAttBBox2D.h""; 20 ; 21class TPoint;; 22 ; 23class TEllipse : public TObject, public TAttLine, public TAttFill, public TAttBBox2D {; 24 ; 25protected:; 26 Double_t fX1; ///< X coordinate of centre; 27 Double_t fY1; ///< Y coordinate of centre; 28 Double_t fR1; ///< first radius; 29 Double_t fR2; ///< second radius; 30 Double_t fPhimin; ///< Minimum angle (degrees); 31 Double_t fPhimax; ///< Maximum angle (degrees); 32 Double_t fTheta; ///< Rotation angle (degrees); 33 ; 34public:; 35 // TEllipse status bits; 36 enum {; 37 kNoEdges = BIT(9) // don't draw lines connecting center to edges; 38 };; 39 TEllipse();; 40 TEllipse(Double_t x1, Double_t y1,Double_t r1,Double_t r2=0,Double_t phimin=0, Double_t phimax=360,Double_t theta=0);; 41 TEllipse(const TEllipse &ellipse);; 42 ~TEllipse() override;; 43 void Copy(TObject &ellipse) const override;; 44 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 45 void Draw(Option_t *option="""") override;; 46 virtual TEllipse *DrawEllipse(Double_t x1, Double_t y1, Double_t r1,Double_t r2,Double_t phimin, Double_t phimax,Double_t theta,Option_t *option="""");; 47 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 48 Int_t IsInside(Double_t x, Double_t y) const;; 49 Double_t Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEllipse_8h_source.html:78,Guid,Guide,78,doc/master/TEllipse_8h_source.html,https://root.cern,https://root.cern/doc/master/TEllipse_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TFrame.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFrame.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 31/10/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFrame; 13#define ROOT_TFrame; 14 ; 15 ; 16#include ""TWbox.h""; 17 ; 18 ; 19class TFrame : public TWbox {; 20 ; 21 ; 22public:; 23 TFrame();; 24 TFrame(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2);; 25 TFrame(const TFrame &frame);; 26 ~TFrame() override;; 27 void Copy(TObject &frame) const override;; 28 void Draw(Option_t *option="""") override;; 29 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 30 void Paint(Option_t *option="""") override;; 31 void Pop() override;; 32 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 33 void UseCurrentStyle() override; // *MENU*; 34 ; 35 ClassDefOverride(TFrame,1) //Pad graphics frame; 36};; 37 ; 38#endif; 39 ; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; y2Option_t Option_t TPoint TPoint const char y2Definition TGWin32VirtualXProxy.cxx:70; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; TWbox.h; TFrameDefine a Frame.Definition TFrame.h:19; TFrame::Popvoid Pop() overrideDo not pop frame's, if allowed they would cover t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFrame_8h_source.html:76,Guid,Guide,76,doc/master/TFrame_8h_source.html,https://root.cern,https://root.cern/doc/master/TFrame_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TGaxis.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGaxis.h File Reference. #include ""TLine.h""; #include ""TAttText.h""; #include ""TString.h"". Include dependency graph for TGaxis.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGaxis;  The axis painter class. More...;  . graf2dgrafincTGaxis.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8h.html:79,Guid,Guide,79,doc/master/TGaxis_8h.html,https://root.cern,https://root.cern/doc/master/TGaxis_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TGaxis.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGaxis.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun, Olivier Couet 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGaxis; 13#define ROOT_TGaxis; 14 ; 15#include ""TLine.h""; 16#include ""TAttText.h""; 17#include ""TString.h""; 18 ; 19class TF1;; 20class TAxis;; 21class TLatex;; 22class TAxisModLab;; 23 ; 24class TGaxis : public TLine, public TAttText {; 25 ; 26protected:; 27 ; 28 Double_t fWmin; ///< Lowest value on the axis; 29 Double_t fWmax; ///< Highest value on the axis; 30 Float_t fGridLength; ///< Length of the grid in NDC; 31 Float_t fTickSize; ///< Size of primary tick mark in NDC; 32 Float_t fLabelOffset; ///< Offset of label wrt axis; 33 Float_t fLabelSize; ///< Size of labels in NDC; 34 Float_t fTitleOffset; ///< Offset of title wrt axis; 35 Float_t fTitleSize; ///< Size of title in NDC; 36 Int_t fNdiv; ///< Number of divisions; 37 Int_t fLabelColor; ///< Color for labels; 38 Int_t fLabelFont; ///< Font for labels; 39 Int_t fNModLabs; ///< Number of modified labels; 40 TString fChopt; ///< Axis options; 41 TString fName; ///< Axis name; 42 TString fTitle; ///< Axis title; 43 TString fTimeFormat; ///< Time format, ex: 09/12/99 12:34:00; 44 TString fFunctionName; ///< Name of mapping function pointed by fFunction; 45 TF1 *fFunction; ///<! Pointer to function computing axis values; 46 TAxis *fAxis; ///<! Pointer to original TAxis axis (if any); 47 TList *fModLabs; ///< List of modified labels.; 48 ; 49 TGaxis(const TGaxis&);; 50 TGaxis& operator=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8h_source.html:76,Guid,Guide,76,doc/master/TGaxis_8h_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TGraphPolar.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPolar.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Sebastian Boser, 02/02/06; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphPolar; 13#define ROOT_TGraphPolar; 14 ; 15#include ""TGraphErrors.h""; 16 ; 17#ifdef R__LESS_INCLUDES; 18class TGraphPolargram;; 19#else; 20#include ""TGraphPolargram.h""; 21#endif; 22 ; 23class TGraphPolar : public TGraphErrors {; 24 ; 25private:; 26 Bool_t fOptionAxis; ///< Force drawing of new coord system; 27 ; 28protected:; 29 TGraphPolargram* fPolargram; ///< The polar coordinates system; 30 Double_t* fXpol; ///< [fNpoints] points in polar coordinates; 31 Double_t* fYpol; ///< [fNpoints] points in polar coordinates; 32 ; 33public:; 34 TGraphPolar();; 35 TGraphPolar(Int_t n, const Double_t* theta = nullptr, const Double_t* r = nullptr,; 36 const Double_t* etheta = nullptr, const Double_t* er = nullptr);; 37 ~TGraphPolar() override;; 38 ; 39 TGraphPolargram *GetPolargram() {return fPolargram;}; 40 ; 41 void Draw(Option_t* options = """") override;; 42 Bool_t GetOptionAxis() {return fOptionAxis;}; 43 void SetMaxRadial(Double_t maximum = 1); //*MENU*; 44 void SetMinRadial(Double_t minimum = 0); //*MENU*; 45 void SetMaximum(Double_t maximum = 1) override {SetMaxRadial(maximum);}; 46 void SetMinimum(Double_t minimum = 0) override {SetMinRadial(minimum);}; 47 void SetMaxPolar(Double_t maximum = 6.28318530717958623); //*MENU*; 48 void SetMinPolar(Double_t minimum = 0); //*MENU*; 49 void SetOptionAxis(Bool_t opt) {fOptionAxis = opt;}; 50 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolar_8h_source.html:81,Guid,Guide,81,doc/master/TGraphPolar_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolar_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TGraphQQ.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphQQ.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Anna Kreshuk 18/11/2005; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphQQ; 13#define ROOT_TGraphQQ; 14 ; 15 ; 16#include ""TGraph.h""; 17 ; 18class TGraphQQ : public TGraph{; 19protected:; 20 Int_t fNy0{0}; ///< size of the fY0 dataset; 21 Double_t fXq1{0.}; ///< x1 coordinate of the interquartile line; 22 Double_t fXq2{0.}; ///< x2 coordinate of the interquartile line; 23 Double_t fYq1{0.}; ///< y1 coordinate of the interquartile line; 24 Double_t fYq2{0.}; ///< y2 coordinate of the interquartile line; 25 Double_t *fY0{nullptr}; ///<! second dataset, if specified; 26 TF1 *fF{nullptr}; ///< theoretical density function, if specified; 27 ; 28 void Quartiles();; 29 void MakeQuantiles();; 30 void MakeFunctionQuantiles();; 31 ; 32public:; 33 TGraphQQ();; 34 TGraphQQ(Int_t n, Double_t *x);; 35 TGraphQQ(Int_t n, Double_t *x, TF1 *f);; 36 TGraphQQ(Int_t nx, Double_t *x, Int_t ny, Double_t *y);; 37 ~TGraphQQ() override;; 38 ; 39 void SetFunction(TF1 *f);; 40 Double_t GetXq1() const {return fXq1;}; 41 Double_t GetXq2() const {return fXq2;}; 42 Double_t GetYq1() const {return fYq1;}; 43 Double_t GetYq2() const {return fYq2;}; 44 TF1 *GetF() const {return fF;}; 45 ; 46 ClassDefOverride(TGraphQQ, 1); // to create and to draw quantile-quantile plots; 47};; 48 ; 49#endif; f#define f(i)Definition RSha256.hxx:104; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; ClassDefOverride#de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphQQ_8h_source.html:78,Guid,Guide,78,doc/master/TGraphQQ_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphQQ_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TLatex.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TLatex.h File Reference. #include ""TText.h""; #include ""TAttLine.h""; #include <vector>. Include dependency graph for TLatex.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TLatex::TextSpec_t;  TLatex helper struct holding the attributes of a piece of text. More...;  ; class  TLatex;  To draw Mathematical Formula. More...;  ; class  TLatex::TLatexFormSize;  TLatex helper class used to compute the size of a portion of a formula. More...;  . graf2dgrafincTLatex.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLatex_8h.html:79,Guid,Guide,79,doc/master/TLatex_8h.html,https://root.cern,https://root.cern/doc/master/TLatex_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TLatex.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLatex.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Nicolas Brun 07/08/98; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TLatex; 12#define ROOT_TLatex; 13 ; 14#include ""TText.h""; 15#include ""TAttLine.h""; 16#include <vector>; 17 ; 18class TLatex : public TText, public TAttLine {; 19protected:; 20 ; 21////////////////////////////////////////////////////////////////////////////////; 22/// @brief TLatex helper struct holding the attributes of a piece of text.; 23 ; 24 struct TextSpec_t {; 25 Double_t fAngle,fSize;; 26 Int_t fColor,fFont;; 27 };; 28 ; 29////////////////////////////////////////////////////////////////////////////////; 30/// @class TLatexFormSize; 31/// @brief TLatex helper class used to compute the size of a portion of a formula.; 32 ; 33 class TLatexFormSize {; 34 private:; 35 Double_t fWidth{0}, fOver{0}, fUnder{0};; 36 ; 37 public:; 38 TLatexFormSize() = default;; 39 TLatexFormSize(Double_t width, Double_t over, Double_t under) : fWidth(width), fOver(over), fUnder(under) { } // constructor; 40 ; 41 // definition of operators + and +=; 42 TLatexFormSize operator+(TLatexFormSize f); 43 { return TLatexFormSize(f.Width()+fWidth,TMath::Max(f.Over(),fOver),TMath::Max(f.Under(),fUnder)); }; 44 void operator+=(TLatexFormSize f); 45 { fWidth += f.Width(); fOver = TMath::Max(fOver,f.Over()); fUnder = TMath::Max(fUnder,f.Under()); }; 46 ; 47 inline void Set(Double_t x, Double_t y1, Double_t y2) { fWidth=x; fOver=y1; fUnder=y2; }; 48 TLatexFormSize AddOver(TLatexFormSize",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLatex_8h_source.html:76,Guid,Guide,76,doc/master/TLatex_8h_source.html,https://root.cern,https://root.cern/doc/master/TLatex_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TLegend.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TLegend.h File Reference. #include ""TPave.h""; #include ""TAttText.h"". Include dependency graph for TLegend.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TLegend;  This class displays a legend box (TPaveText) containing several legend entries. More...;  . graf2dgrafincTLegend.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8h.html:80,Guid,Guide,80,doc/master/TLegend_8h.html,https://root.cern,https://root.cern/doc/master/TLegend_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TLegend.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegend.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Matthew.Adam.Dobbs 06/09/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11//--------------------------------------------------------------------------; 12#ifndef ROOT_TLegend; 13#define ROOT_TLegend; 14 ; 15 ; 16#include ""TPave.h""; 17#include ""TAttText.h""; 18 ; 19class TObject;; 20class TList;; 21class TLegendEntry;; 22 ; 23class TLegend : public TPave , public TAttText {; 24 ; 25protected:; 26 TLegend& operator=(const TLegend&);; 27 ; 28public:; 29 TLegend();; 30 TLegend( Double_t x1, Double_t y1, Double_t x2, Double_t y2,; 31 const char* header = """", Option_t* option=""brNDC"" );; 32 TLegend( Double_t w, Double_t h, const char* header = """", Option_t* option=""brNDC"" );; 33 ~TLegend() override;; 34 TLegend(const TLegend &legend);; 35 ; 36 TLegendEntry *AddEntry(const TObject* obj, const char* label = """", Option_t* option = ""lpf"" );; 37 TLegendEntry *AddEntry(const char *name, const char* label = """", Option_t* option = ""lpf"" );; 38 void Clear( Option_t* option = """" ) override; // *MENU*; 39 void Copy( TObject &obj ) const override;; 40 virtual void DeleteEntry(); // *MENU*; 41 void Draw( Option_t* option = """" ) override;; 42 virtual void EditEntryAttFill();; 43 virtual void EditEntryAttLine();; 44 virtual void EditEntryAttMarker();; 45 virtual void EditEntryAttText();; 46 Float_t GetColumnSeparation() const { return fColumnSeparation; }; 47 TLegendEntry *GetEntry() const;; 48 Float_t GetEntrySeparation() const { return fEntrySeparatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8h_source.html:77,Guid,Guide,77,doc/master/TLegend_8h_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TLegendEntry.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegendEntry.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Matthew.Adam.Dobbs 06/09/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11//--------------------------------------------------------------------------; 12 ; 13#ifndef ROOT_TLegendEntry; 14#define ROOT_TLegendEntry; 15 ; 16 ; 17#include ""TObject.h""; 18#include ""TAttText.h""; 19#include ""TAttLine.h""; 20#include ""TAttFill.h""; 21#include ""TAttMarker.h""; 22#include ""TString.h""; 23 ; 24class TLegendEntry : public TObject, public TAttText, public TAttLine,; 25 public TAttFill, public TAttMarker {; 26public:; 27 TLegendEntry();; 28 TLegendEntry(const TObject *obj, const char *label = nullptr, Option_t *option=""lpf"" );; 29 TLegendEntry( const TLegendEntry &entry );; 30 ~TLegendEntry() override;; 31 void Copy( TObject &obj ) const override;; 32 virtual const char *GetLabel() const { return fLabel.Data(); }; 33 virtual TObject *GetObject() const { return fObject; }; 34 Option_t *GetOption() const override { return fOption.Data(); }; 35 void Print( Option_t *option = """" ) const override;; 36 virtual void SaveEntry( std::ostream &out, const char *name );; 37 virtual void SetLabel( const char *label = """" ) { fLabel = label; } // *MENU*; 38 virtual void SetObject(TObject* obj );; 39 virtual void SetObject( const char *objectName ); // *MENU*; 40 virtual void SetOption( Option_t *option=""lpf"" ) { fOption = option; } // *MENU*; 41 ; 42protected:; 43 TObject *fObject; ///< pointer to object being represented by this entry; 44 TString fLabel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegendEntry_8h_source.html:82,Guid,Guide,82,doc/master/TLegendEntry_8h_source.html,https://root.cern,https://root.cern/doc/master/TLegendEntry_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TLine.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TLine.h File Reference. #include ""TObject.h""; #include ""TAttLine.h""; #include ""TAttBBox2D.h"". Include dependency graph for TLine.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TLine;  Use the TLine constructor to create a simple line. More...;  . graf2dgrafincTLine.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8h.html:78,Guid,Guide,78,doc/master/TLine_8h.html,https://root.cern,https://root.cern/doc/master/TLine_8h.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: graf2d/graf/inc/TLine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLine.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TLine; 13#define ROOT_TLine; 14 ; 15 ; 16#include ""TObject.h""; 17#include ""TAttLine.h""; 18#include ""TAttBBox2D.h""; 19 ; 20class TPoint;; 21 ; 22class TLine : public TObject, public TAttLine, public TAttBBox2D {; 23 ; 24protected:; 25 Double_t fX1{0}; ///< X of 1st point; 26 Double_t fY1{0}; ///< Y of 1st point; 27 Double_t fX2{0}; ///< X of 2nd point; 28 Double_t fY2{0}; ///< Y of 2nd point; 29 ; 30public:; 31 // TLine status bits; 32 enum {; 33 kLineNDC = BIT(14), ///< Use NDC coordinates; 34 kVertical = BIT(15), ///< Line is vertical; 35 kHorizontal = BIT(16) ///< Line is horizontal; 36 };; 37 ; 38 TLine() {}; 39 TLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2);; 40 TLine(const TLine &line);; 41 ~TLine() override = default;; 42 ; 43 TLine &operator=(const TLine &src);; 44 ; 45 void Copy(TObject &line) const override;; 46 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 47 virtual TLine *DrawLine(Double_t x1, Double_t y1,Double_t x2, Double_t y2);; 48 virtual TLine *DrawLineNDC(Double_t x1, Double_t y1,Double_t x2, Double_t y2);; 49 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 50 Double_t GetX1() const {return fX1;}; 51 Double_t GetX2() const {return fX2;}; 52 Double_t GetY1() const {return fY1;}; 53 Double_t GetY2() const {return fY2;}; 54 Bool_t IsHorizontal();; 55 Bool_t IsVertical();; 56 void ls(Option_t *option="""")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8h_source.html:75,Guid,Guide,75,doc/master/TLine_8h_source.html,https://root.cern,https://root.cern/doc/master/TLine_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TMarker.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMarker.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/05/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TMarker; 13#define ROOT_TMarker; 14 ; 15 ; 16#include ""TObject.h""; 17#include ""TAttMarker.h""; 18#include ""TAttBBox2D.h""; 19 ; 20class TPoint;; 21 ; 22class TMarker : public TObject, public TAttMarker, public TAttBBox2D {; 23 ; 24protected:; 25 Double_t fX; ///< X position of marker (left,center,etc..); 26 Double_t fY; ///< Y position of marker (left,center,etc..); 27 ; 28public:; 29 // TMarker status bits; 30 enum {; 31 kMarkerNDC = BIT(14) ///< Marker position is in NDC; 32 };; 33 ; 34 TMarker();; 35 TMarker(Double_t x, Double_t y, Int_t marker);; 36 TMarker(const TMarker &marker);; 37 ~TMarker() override;; 38 ; 39 void Copy(TObject &marker) const override;; 40 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 41 void Draw(Option_t *option="""") override;; 42 virtual TMarker *DrawMarker(Double_t x, Double_t y);; 43 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 44 Double_t GetX() const {return fX;}; 45 Double_t GetY() const {return fY;}; 46 void ls(Option_t *option="""") const override;; 47 void Paint(Option_t *option="""") override;; 48 virtual void PaintMarker(Double_t x, Double_t y);; 49 virtual void PaintMarkerNDC(Double_t u, Double_t v);; 50 void Print(Option_t *option="""") const override;; 51 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 52 virtual void SetNDC(Bool_t isNDC=kTRUE);; 53 virtual void SetX(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMarker_8h_source.html:77,Guid,Guide,77,doc/master/TMarker_8h_source.html,https://root.cern,https://root.cern/doc/master/TMarker_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TMathText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMathText.h. Go to the documentation of this file. 1// @(#)root/graf:$Id: TMathText.h 20882 2007-11-19 11:31:26Z rdm $; 2// Author: Yue Shi Lai 12/12/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2009, Yue Shi Lai. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TMathText; 12#define ROOT_TMathText; 13 ; 14#include ""TText.h""; 15#include ""TAttFill.h""; 16 ; 17class TMathTextRenderer;; 18 ; 19class TMathText : public TText, public TAttFill {; 20protected:; 21 ; 22 friend class TMathTextRenderer;; 23 ; 24 TMathTextRenderer *fRenderer{nullptr}; //!TMathText Painter; 25 TMathText &operator=(const TMathText &);; 26 ; 27 void Render(const Double_t x, const Double_t y,; 28 const Double_t size, const Double_t angle,; 29 const Char_t *t, const Int_t length);; 30 void GetSize(Double_t &x0, Double_t &y0,; 31 Double_t &x1, Double_t &y1,; 32 const Double_t size, const Double_t angle,; 33 const Char_t *t, const Int_t length);; 34 void GetAlignPoint(Double_t &x0, Double_t &y0,; 35 const Double_t size, const Double_t angle,; 36 const Char_t *t, const Int_t length,; 37 const Short_t align);; 38public:; 39 enum {; 40 kTextNDC = BIT(14); 41 };; 42 TMathText();; 43 TMathText(Double_t x, Double_t y, const char *text);; 44 TMathText(const TMathText &text);; 45 ~TMathText() override;; 46 void Copy(TObject &text) const override;; 47 TMathText *DrawMathText(Double_t x, Double_t y, const char *text);; 48 void GetBoundingBox(UInt_t &w, UInt_t &h, Bool_t angle = kFALSE) override;; 49 Double_t GetXsize();; 50 Double_t GetYsize();; 51 void Paint(Option_t *option = """") override;; 52 virtual void PaintMathText(Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMathText_8h_source.html:79,Guid,Guide,79,doc/master/TMathText_8h_source.html,https://root.cern,https://root.cern/doc/master/TMathText_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TPaveLabel.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveLabel.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 17/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPaveLabel; 13#define ROOT_TPaveLabel; 14 ; 15 ; 16#include ""TPave.h""; 17#include ""TAttText.h""; 18 ; 19 ; 20class TPaveLabel : public TPave, public TAttText {; 21 ; 22protected:; 23 TString fLabel; ///< Label written at the center of Pave; 24 ; 25public:; 26 TPaveLabel();; 27 TPaveLabel(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2, const char *label, Option_t *option=""br"");; 28 TPaveLabel(const TPaveLabel &pavelabel);; 29 TPaveLabel& operator=(const TPaveLabel &pavelabel);; 30 ~TPaveLabel() override;; 31 ; 32 void Copy(TObject &pavelabel) const override;; 33 void Draw(Option_t *option="""") override;; 34 virtual TPaveLabel *DrawPaveLabel(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2,; 35 const char *label, Option_t *option="""");; 36 const char *GetLabel() const {return fLabel.Data();}; 37 const char *GetTitle() const override {return fLabel.Data();}; 38 void Paint(Option_t *option="""") override;; 39 virtual void PaintPaveLabel(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2,; 40 const char *label, Option_t *option="""");; 41 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 42 virtual void SetLabel(const char *label) {fLabel = label;} // *MENU*; 43 ; 44 ClassDefOverride(TPaveLabel,1) //PaveLabel. A Pave with a label; 45};; 46 ; 47#endif; 48 ; Double_tdouble Double_tDefinition RtypesCore.h:59; Option_tconst char Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveLabel_8h_source.html:80,Guid,Guide,80,doc/master/TPaveLabel_8h_source.html,https://root.cern,https://root.cern/doc/master/TPaveLabel_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TPaveStats.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveStats.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 15/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TPaveStats; 12#define ROOT_TPaveStats; 13 ; 14 ; 15#include ""TPaveText.h""; 16#include ""TVirtualPaveStats.h""; 17 ; 18class TPaveStats : public TPaveText, public TVirtualPaveStats {; 19 ; 20protected:; 21 Int_t fOptFit; ///< option Fit; 22 Int_t fOptStat; ///< option Stat; 23 TString fFitFormat; ///< Printing format for fit parameters; 24 TString fStatFormat; ///< Printing format for stats; 25 TObject *fParent{nullptr}; ///< owner of this TPaveStats; 26 ; 27public:; 28 TPaveStats();; 29 TPaveStats(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2, Option_t *option=""br"");; 30 ~TPaveStats() override;; 31 TBox *AddBox(Double_t , Double_t , Double_t , Double_t) override {return nullptr;}; 32 TLine *AddLine(Double_t , Double_t , Double_t, Double_t) override {return nullptr;}; 33 void DeleteText() override {}; 34 void EditText() override {}; 35 virtual const char *GetFitFormat() const {return fFitFormat.Data();}; 36 virtual const char *GetStatFormat() const {return fStatFormat.Data();}; 37 Int_t GetOptFit() const;; 38 Int_t GetOptStat() const;; 39 TObject *GetParent() const override { return fParent; }; 40 void Paint(Option_t *option="""") override;; 41 void InsertText(const char *) override { }; 42 void InsertLine() override { }; 43 void ReadFile(const char *, Option_t *, Int_t, Int_t) override {}; 44 void SavePrimitive(std::ostream &out, Option_t *option = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveStats_8h_source.html:80,Guid,Guide,80,doc/master/TPaveStats_8h_source.html,https://root.cern,https://root.cern/doc/master/TPaveStats_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TPaveText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveText.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 20/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPaveText; 13#define ROOT_TPaveText; 14 ; 15 ; 16#include ""TPave.h""; 17#include ""TText.h""; 18 ; 19class TLine;; 20 ; 21class TPaveText : public TPave, public TAttText {; 22 ; 23protected:; 24 TString fLabel; ///< Label written at the top of the pavetext; 25 Int_t fLongest; ///< Length of the longest line; 26 Float_t fMargin; ///< Text margin; 27 TList *fLines{nullptr}; ///< List of labels; 28 ; 29public:; 30 TPaveText();; 31 TPaveText(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2, Option_t *option=""br"");; 32 TPaveText(const TPaveText &pavetext);; 33 ~TPaveText() override;; 34 TPaveText& operator=(const TPaveText&);; 35 ; 36 virtual TBox *AddBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2);; 37 virtual TLine *AddLine(Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0);; 38 virtual TText *AddText(Double_t x1, Double_t y1, const char *label);; 39 virtual TText *AddText(const char *label);; 40 void Clear(Option_t *option="""") override; // *MENU*; 41 virtual void DeleteText(); // *MENU*; 42 void Draw(Option_t *option="""") override;; 43 virtual void DrawFile(const char *filename, Option_t *option="""");; 44 virtual void EditText(); // *MENU*; 45 const char *GetLabel() const {return fLabel.Data();}; 46 virtual TText *GetLine(Int_t number) const;; 47 virtual TText *GetLineWith(const char *text) const;; 48 virtual TList *GetListOfLines() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveText_8h_source.html:79,Guid,Guide,79,doc/master/TPaveText_8h_source.html,https://root.cern,https://root.cern/doc/master/TPaveText_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TPavesText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPavesText.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 19/11/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPavesText; 13#define ROOT_TPavesText; 14 ; 15 ; 16#include ""TPaveText.h""; 17 ; 18class TPavesText : public TPaveText {; 19 ; 20protected:; 21 Int_t fNpaves; ///< Number of stacked paves; 22 ; 23public:; 24 TPavesText();; 25 TPavesText(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2, Int_t npaves=5, Option_t *option=""br"");; 26 TPavesText(const TPavesText &pavestext);; 27 ~TPavesText() override;; 28 ; 29 void Draw(Option_t *option="""") override;; 30 virtual Int_t GetNpaves() {return fNpaves;}; 31 void Paint(Option_t *option="""") override;; 32 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 33 virtual void SetNpaves(Int_t npaves=5) {fNpaves=npaves;} // *MENU*; 34 ; 35 ClassDefOverride(TPavesText,1) //Stacked Paves with text strings; 36};; 37 ; 38#endif; 39 ; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; y2Option_t Option_t TPoint TPoint const char y2Definition TGWin32VirtualXProxy.cxx:70; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; TPaveText.h; TPaveTextA Pav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPavesText_8h_source.html:80,Guid,Guide,80,doc/master/TPavesText_8h_source.html,https://root.cern,https://root.cern/doc/master/TPavesText_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TPolyLine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPolyLine.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPolyLine; 13#define ROOT_TPolyLine; 14 ; 15 ; 16#include ""TString.h""; 17#include ""TObject.h""; 18#include ""TAttLine.h""; 19#include ""TAttFill.h""; 20 ; 21class TCollection;; 22 ; 23class TPolyLine : public TObject, public TAttLine, public TAttFill {; 24 ; 25protected:; 26 Int_t fN{0}; ///<Number of points; 27 Int_t fLastPoint{-1}; ///<The index of the last filled point; 28 Double_t *fX{nullptr}; ///<[fN] Array of X coordinates; 29 Double_t *fY{nullptr}; ///<[fN] Array of Y coordinates; 30 TString fOption; ///<options; 31 ; 32 TPolyLine& operator=(const TPolyLine&);; 33 ; 34public:; 35 // TPolyLine status bits; 36 enum {; 37 kPolyLineNDC = BIT(14) ///< Polyline coordinates are in NDC space.; 38 };; 39 ; 40 TPolyLine();; 41 TPolyLine(Int_t n, Option_t *option="""");; 42 TPolyLine(Int_t n, Float_t *x, Float_t *y, Option_t *option="""");; 43 TPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""");; 44 TPolyLine(const TPolyLine &polyline);; 45 ~TPolyLine() override;; 46 ; 47 void Copy(TObject &polyline) const override;; 48 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 49 void Draw(Option_t *option="""") override;; 50 virtual TPolyLine *DrawPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""");; 51 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 52 virtual Int_t GetLastPoint() const { return fLastPoint;}; 53 Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPolyLine_8h_source.html:79,Guid,Guide,79,doc/master/TPolyLine_8h_source.html,https://root.cern,https://root.cern/doc/master/TPolyLine_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TTF.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTF.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Olivier Couet 01/10/02; 3// Author: Fons Rademakers 21/11/98; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_TTF; 14#define ROOT_TTF; 15 ; 16 ; 17#include ""Rtypes.h""; 18 ; 19/// @cond DOXYGEN_IGNORE; 20// Forward declare for the headers:; 21// # include <ft2build.h>; 22// # include FT_FREETYPE_H; 23// # include FT_GLYPH_H; 24extern ""C"" {; 25 struct FT_LibraryRec_;; 26 struct FT_FaceRec_;; 27 struct FT_CharMapRec_;; 28 struct FT_GlyphRec_;; 29 struct FT_Matrix_;; 30 struct FT_Bitmap_;; 31 typedef struct FT_LibraryRec_* FT_Library;; 32 typedef struct FT_FaceRec_* FT_Face;; 33 typedef struct FT_CharMapRec_* FT_CharMap;; 34 typedef struct FT_GlyphRec_* FT_Glyph;; 35 typedef struct FT_Matrix_ FT_Matrix;; 36 typedef struct FT_Bitmap_ FT_Bitmap; // Forward declared for TGX11TTF.h's benefit; 37 typedef signed long FT_Pos;; 38 #ifndef FT_FREETYPE_H; 39 struct FT_Vector_ { FT_Pos x, y; };; 40 struct FT_BBox_ { FT_Pos xMin, yMin, xMax, yMax; };; 41 #endif; 42 typedef struct FT_Vector_ FT_Vector;; 43 typedef struct FT_BBox_ FT_BBox;; 44}; 45/// @endcond; 46 ; 47 ; 48class TGX11TTF;; 49class TGWin32;; 50class TMathTextRenderer;; 51 ; 52 ; 53class TTF {; 54 ; 55friend class TGX11TTF;; 56friend class TGWin32;; 57friend class TMathTextRenderer;; 58 ; 59public:; 60 ; 61/** \class TTGlyph; 62TTF helper class containing glyphs description.; 63*/; 64 ; 65 class TTGlyph {; 66 public:; 67 UInt_t fIndex{0}; ///< glyph index in face; 68 FT_Vector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTF_8h_source.html:73,Guid,Guide,73,doc/master/TTF_8h_source.html,https://root.cern,https://root.cern/doc/master/TTF_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/inc/TText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TText.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Nicolas Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TText; 13#define ROOT_TText; 14 ; 15 ; 16#include ""TAttText.h""; 17#include ""TNamed.h""; 18#include ""TAttBBox2D.h""; 19 ; 20class TPoint;; 21 ; 22class TText : public TNamed, public TAttText, public TAttBBox2D {; 23 ; 24protected:; 25 Double_t fX{0}; ///< X position of text (left,center,etc..); 26 Double_t fY{0}; ///< Y position of text (left,center,etc..); 27 void *fWcsTitle{nullptr}; ///<!Used by TMathText; 28 ; 29public:; 30 // TText status bits; 31 enum {; 32 kTextNDC = BIT(14) ///< The text position is in the NDC space; 33 };; 34 ; 35 TText() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300; 36 TText(Double_t x, Double_t y, const char *text);; 37 TText(Double_t x, Double_t y, const wchar_t *text);; 38 TText(const TText &text);; 39 ~TText() override;; 40 ; 41 TText &operator=(const TText &src);; 42 ; 43 void Copy(TObject &text) const override;; 44 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 45 virtual TText *DrawText(Double_t x, Double_t y, const char *text);; 46 virtual TText *DrawText(Double_t x, Double_t y, const wchar_t *text);; 47 virtual TText *DrawTextNDC(Double_t x, Double_t y, const char *text);; 48 virtual TText *DrawTextNDC(Double_t x, Double_t y, const wchar_t *text);; 49 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 50 ; 51 virtual void GetControlBox(Int_t x, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TText_8h_source.html:75,Guid,Guide,75,doc/master/TText_8h_source.html,https://root.cern,https://root.cern/doc/master/TText_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TArrow.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArrow.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 17/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include ""TMath.h""; 15#include ""TArrow.h""; 16#include ""TVirtualPad.h""; 17#include ""TVirtualPS.h""; 18#include ""TVirtualX.h""; 19 ; 20Float_t TArrow::fgDefaultAngle = 60;; 21Float_t TArrow::fgDefaultArrowSize = 0.05;; 22TString TArrow::fgDefaultOption = "">"";; 23 ; 24ClassImp(TArrow);; 25 ; 26/** \class TArrow; 27\ingroup BasicGraphics; 28 ; 29Draw all kinds of Arrows.; 30 ; 31The different arrow's formats are explained in TArrow::TArrow.; 32The picture below gives some examples.; 33 ; 34Once an arrow is drawn on the screen:; 35 ; 36- One can click on one of the edges and move this edge.; 37- One can click on any other arrow part to move the entire arrow.; 38 ; 39Begin_Macro(source); 40../../../tutorials/graphics/arrows.C; 41End_Macro; 42*/; 43 ; 44////////////////////////////////////////////////////////////////////////////////; 45/// Arrow default constructor.; 46 ; 47TArrow::TArrow(): TLine(),TAttFill(); 48{; 49 fAngle = fgDefaultAngle;; 50 fArrowSize = 0.;; 51}; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54/// Arrow normal constructor.; 55///; 56/// Define an arrow between points x1,y1 and x2,y2; 57/// the `arrowsize` is in percentage of the pad height; 58/// Opening angle between the two sides of the arrow is fAngle (60 degrees); 59/// ~~~ {.cpp}; 60/// option = "">"" -----",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TArrow_8cxx_source.html:78,Guid,Guide,78,doc/master/TArrow_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TArrow_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TBox.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBox.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13 ; 14#include <iostream>; 15#include ""TROOT.h""; 16#include ""TBuffer.h""; 17#include ""TBox.h""; 18#include ""TVirtualPad.h""; 19#include ""TVirtualX.h""; 20#include ""TClass.h""; 21#include ""TMath.h""; 22#include ""TPoint.h""; 23 ; 24ClassImp(TBox);; 25 ; 26/** \class TBox; 27\ingroup BasicGraphics; 28 ; 29Create a Box.; 30 ; 31A box is defined by :; 32 ; 33- Its bottom left coordinates x1,y1; 34- Its top right coordinates x2,y2; 35 ; 36A box has line attributes (see TAttLine) and fill area attributes (see TAttFill).; 37*/; 38 ; 39////////////////////////////////////////////////////////////////////////////////; 40/// Box default constructor.; 41 ; 42TBox::TBox(): TObject(), TAttLine(), TAttFill(); 43{; 44 fTip = nullptr;; 45 fX1 = 0.;; 46 fY1 = 0.;; 47 fX2 = 0.;; 48 fY2 = 0.;; 49 fResizing = kTRUE;; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Box standard constructor.; 54 ; 55TBox::TBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); 56 : TObject(), TAttLine(), TAttFill(); 57{; 58 if (x2 >= x1) {fX1 =x1; fX2 = x2;}; 59 else {fX1 = x2; fX2 = x1;}; 60 if (y2 >= y1) {fY1 =y1; fY2 = y2;}; 61 else {fY1 = y2; fY2 = y1;}; 62 fResizing = kFALSE;; 63 fTip = nullptr;; 64}; 65 ; 66////////////////////////////////////////////////////////////////////////////////; 67/// Box destructor.; 68 ; 69TBox::~TBox(); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBox_8cxx_source.html:76,Guid,Guide,76,doc/master/TBox_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBox_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TCurlyArc.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyArc.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Otto Schaile 20/11/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TCurlyArc; 13\ingroup BasicGraphics; 14 ; 15Implements curly or wavy arcs used to draw Feynman diagrams.; 16 ; 17Amplitudes and wavelengths may be specified in the constructors,; 18via commands or interactively from popup menus.; 19The class make use of TCurlyLine by inheritance, ExecuteEvent methods; 20are highly inspired from the methods used in TPolyLine and TArc.; 21The picture below has been generated by the tutorial feynman.; 22 ; 23Begin_Macro(source); 24../../../tutorials/graphics/feynman.C; 25End_Macro; 26*/; 27 ; 28#include <iostream>; 29#include ""TCurlyArc.h""; 30#include ""TROOT.h""; 31#include ""TVirtualPad.h""; 32#include ""TVirtualX.h""; 33#include ""TMath.h""; 34#include ""TPoint.h""; 35 ; 36Double_t TCurlyArc::fgDefaultWaveLength = 0.02;; 37Double_t TCurlyArc::fgDefaultAmplitude = 0.01;; 38Bool_t TCurlyArc::fgDefaultIsCurly = kTRUE;; 39 ; 40ClassImp(TCurlyArc);; 41 ; 42////////////////////////////////////////////////////////////////////////////////; 43/// Default constructor; 44 ; 45TCurlyArc::TCurlyArc(); 46{; 47 fR1 = 0.;; 48 fPhimin = 0.;; 49 fPhimax = 0.;; 50 fTheta = 0.;; 51}; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54/// Create a new TCurlyArc with center (x1, y1) and radius rad.; 55/// The wavelength and amplitude are given in percent of the line length; 56/// phimin and phimax ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyArc_8cxx_source.html:81,Guid,Guide,81,doc/master/TCurlyArc_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCurlyArc_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TCurlyLine.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyLine.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Otto Schaile 20/11/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TCurlyLine; 13\ingroup BasicGraphics; 14 ; 15Implements curly or wavy polylines used to draw Feynman diagrams.; 16 ; 17Amplitudes and wavelengths may be specified in the constructors,; 18via commands or interactively from popup menus.; 19The class make use of TPolyLine by inheritance, ExecuteEvent methods; 20are highly inspired from the methods used in TPolyLine and TArc.; 21The picture below has been generated by the tutorial feynman.; 22 ; 23Begin_Macro(source); 24../../../tutorials/graphics/feynman.C; 25End_Macro; 26*/; 27 ; 28#include ""TCurlyLine.h""; 29#include ""TROOT.h""; 30#include ""TVirtualPad.h""; 31#include ""TVirtualX.h""; 32#include ""TMath.h""; 33#include ""TPoint.h""; 34 ; 35#include <iostream>; 36 ; 37Double_t TCurlyLine::fgDefaultWaveLength = 0.02;; 38Double_t TCurlyLine::fgDefaultAmplitude = 0.01;; 39Bool_t TCurlyLine::fgDefaultIsCurly = kTRUE;; 40 ; 41ClassImp(TCurlyLine);; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// Default constructor.; 45 ; 46TCurlyLine::TCurlyLine(); 47{; 48 fX1 = 0.;; 49 fY1 = 0.;; 50 fX2 = 0.;; 51 fY2 = 0.;; 52 fWaveLength = 0.;; 53 fAmplitude = 0.;; 54 fIsCurly = fgDefaultIsCurly;; 55 fNsteps = 0;; 56}; 57 ; 58////////////////////////////////////////////////////////////////////////////////; 59/// Create a new TCurlyLine with starting point (x1, y1), end poi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyLine_8cxx_source.html:82,Guid,Guide,82,doc/master/TCurlyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCurlyLine_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TEllipse.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEllipse.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 16/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13 ; 14#include <iostream>; 15#include ""TROOT.h""; 16#include ""TBuffer.h""; 17#include ""TEllipse.h""; 18#include ""TVirtualPad.h""; 19#include ""TMath.h""; 20#include ""TPoint.h""; 21#include ""TVirtualX.h""; 22 ; 23 ; 24constexpr Double_t kPI = TMath::Pi();; 25 ; 26ClassImp(TEllipse);; 27 ; 28/** \class TEllipse; 29\ingroup BasicGraphics; 30 ; 31Draw Ellipses.; 32 ; 33The ellipse can be truncated and rotated. It is defined by its center `(x1,y1)`; 34and two radius `r1` and `r2`.; 35 ; 36A minimum and maximum angle may be specified `(phimin, phimax)`.; 37The ellipse may be rotated with an angle `theta`. All these; 38angles are in degrees.; 39The attributes of the outline line are given via `TAttLine`.; 40The attributes of the fill area are given via `TAttFill`.; 41The picture below illustrates different types of ellipses.; 42 ; 43When an ellipse sector only is drawn, the lines connecting the center; 44of the ellipse to the edges are drawn by default. One can specify; 45the drawing option ""only"" to not draw these lines or alternatively; 46call the function `SetNoEdges()`. To remove completely the ellipse; 47outline it is enough to specify 0 as line style.; 48 ; 49Begin_Macro(source); 50../../../tutorials/graphics/ellipse.C; 51End_Macro; 52*/; 53 ; 54////////////////////////////////////////////////////////////////////////////////; 55/// Ellipse defau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEllipse_8cxx_source.html:80,Guid,Guide,80,doc/master/TEllipse_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEllipse_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TFrame.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFrame.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 31/10/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TVirtualPad.h""; 13#include ""TFrame.h""; 14#include ""TStyle.h""; 15 ; 16ClassImp(TFrame);; 17 ; 18/** \class TFrame; 19\ingroup BasicGraphics; 20 ; 21Define a Frame.; 22 ; 23A `TFrame` is a `TWbox` for drawing histogram frames.; 24*/; 25 ; 26////////////////////////////////////////////////////////////////////////////////; 27/// Frame default constructor.; 28 ; 29TFrame::TFrame(): TWbox(); 30{; 31}; 32 ; 33////////////////////////////////////////////////////////////////////////////////; 34/// Frame normal constructor.; 35 ; 36TFrame::TFrame(Double_t x1, Double_t y1,Double_t x2, Double_t y2); 37 :TWbox(x1,y1,x2,y2); 38{; 39}; 40 ; 41////////////////////////////////////////////////////////////////////////////////; 42/// Frame copy constructor.; 43 ; 44TFrame::TFrame(const TFrame &frame) : TWbox(frame); 45{; 46 frame.TFrame::Copy(*this);; 47}; 48 ; 49////////////////////////////////////////////////////////////////////////////////; 50/// Frame default destructor.; 51 ; 52TFrame::~TFrame(); 53{; 54}; 55 ; 56////////////////////////////////////////////////////////////////////////////////; 57/// Copy this frame to frame.; 58 ; 59void TFrame::Copy(TObject &frame) const; 60{; 61 TWbox::Copy(frame);; 62}; 63 ; 64////////////////////////////////////////////////////////////////////////////////; 65/// Draw this frame with its current attributes.; 66 ; 67void TFrame::D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFrame_8cxx_source.html:78,Guid,Guide,78,doc/master/TFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFrame_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TGaxis.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGaxis.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun, Olivier Couet 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13#include <cstring>; 14#include <ctime>; 15#include <cmath>; 16#include <iostream>; 17 ; 18#include ""TROOT.h""; 19#include ""TBuffer.h""; 20#include ""TGaxis.h""; 21#include ""TAxisModLab.h""; 22#include ""TVirtualPad.h""; 23#include ""TVirtualX.h""; 24#include ""TLine.h""; 25#include ""TArrow.h""; 26#include ""TLatex.h""; 27#include ""TStyle.h""; 28#include ""TF1.h""; 29#include ""TAxis.h""; 30#include ""THashList.h""; 31#include ""TObject.h""; 32#include ""TMath.h""; 33#include ""THLimitsFinder.h""; 34#include ""TColor.h""; 35#include ""TTimeStamp.h""; 36#include ""strlcpy.h""; 37#include ""snprintf.h""; 38 ; 39const Int_t kHori = BIT(9);; 40 ; 41ClassImp(TGaxis);; 42 ; 43/** \class TGaxis; 44\ingroup BasicGraphics; 45 ; 46The axis painter class.; 47 ; 48Instances of this class are generated by the histograms and graphs painting; 49classes when `TAxis` are drawn. `TGaxis` is the ""painter class"" of; 50`TAxis`. Therefore it is mainly used via `TAxis`, even if is some; 51occasion it can be used directly to draw an axis which is not part of a graph; 52or an instance. For instance to draw an extra scale on a plot.; 53 ; 54- [Basic definition](\ref GA00); 55- [Definition with a function](\ref GA01); 56- [Logarithmic axis](\ref GA02); 57- [Blank axis](\ref GA03); 58- [Arrow on axis](\ref GA03a); 59- [Tick marks' orientation](\ref GA04); 60- [Tick marks' size](\ref GA05",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:78,Guid,Guide,78,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TGraphPolar.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPolar.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Sebastian Boser, Mathieu Demaret 02/02/06; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGraphPolar; 13\ingroup BasicGraphics; 14 ; 15To draw a polar graph.; 16 ; 17TGraphPolar creates a polar graph (including error bars). A TGraphPolar is; 18a TGraphErrors represented in polar coordinates.; 19It uses the class TGraphPolargram to draw the polar axis.; 20 ; 21Example:; 22 ; 23Begin_Macro(source); 24{; 25 TCanvas * CPol = new TCanvas(""CPol"",""TGraphPolar Example"",500,500);; 26 ; 27 Double_t theta[8];; 28 Double_t radius[8];; 29 Double_t etheta[8];; 30 Double_t eradius[8];; 31 ; 32 for (int i=0; i<8; i++) {; 33 theta[i] = (i+1)*(TMath::Pi()/4.);; 34 radius[i] = (i+1)*0.05;; 35 etheta[i] = TMath::Pi()/8.;; 36 eradius[i] = 0.05;; 37 }; 38 ; 39 TGraphPolar * grP1 = new TGraphPolar(8, theta, radius, etheta, eradius);; 40 grP1->SetTitle(""TGraphPolar Example"");; 41 ; 42 grP1->SetMarkerStyle(20);; 43 grP1->SetMarkerSize(2.);; 44 grP1->SetMarkerColor(4);; 45 grP1->SetLineColor(2);; 46 grP1->SetLineWidth(3);; 47 grP1->Draw(""PE"");; 48 ; 49 // Update, otherwise GetPolargram returns 0; 50 CPol->Update();; 51 grP1->GetPolargram()->SetToRadian();; 52 ; 53 return CPol;; 54}; 55End_Macro; 56*/; 57 ; 58#include ""TGraphPolar.h""; 59#include ""TGraphPolargram.h""; 60 ; 61ClassImp(TGraphPolar);; 62 ; 63////////////////////////////////////////////////////////////////////////////////; 64/// TGraphPolar default constructor.; 65 ; 66T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolar_8cxx_source.html:83,Guid,Guide,83,doc/master/TGraphPolar_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolar_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TGraphPolargram.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPolargram.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Sebastian Boser, Mathieu Demaret 02/02/06; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGraphPolargram; 13\ingroup BasicGraphics; 14 ; 15To draw polar axis; 16 ; 17TGraphPolargram draw the polar axis of the TGraphPolar.; 18 ; 19Example:; 20 ; 21Begin_Macro(source); 22{; 23 TCanvas * CPol = new TCanvas(""CPol"",""TGraphPolar Examples"",500,500);; 24 ; 25 Double_t rmin=0;; 26 Double_t rmax=TMath::Pi()*2;; 27 Double_t r[1000];; 28 Double_t theta[1000];; 29 ; 30 TF1 * fp1 = new TF1(""fplot"",""cos(x)"",rmin,rmax);; 31 for (Int_t ipt = 0; ipt < 1000; ipt++) {; 32 r[ipt] = ipt*(rmax-rmin)/1000+rmin;; 33 theta[ipt] = fp1->Eval(r[ipt]);; 34 }; 35 TGraphPolar * grP1 = new TGraphPolar(1000,r,theta);; 36 grP1->SetTitle("""");; 37 grP1->SetLineColor(2);; 38 grP1->Draw(""AOL"");; 39}; 40End_Macro; 41*/; 42 ; 43#include ""TGraphPolar.h""; 44#include ""TGraphPolargram.h""; 45#include ""TGaxis.h""; 46#include ""THLimitsFinder.h""; 47#include ""TVirtualPad.h""; 48#include ""TLatex.h""; 49#include ""TEllipse.h""; 50#include ""TMath.h""; 51 ; 52ClassImp(TGraphPolargram);; 53 ; 54////////////////////////////////////////////////////////////////////////////////; 55/// TGraphPolargram Constructor.; 56 ; 57TGraphPolargram::TGraphPolargram(const char* name, Double_t rmin, Double_t rmax,; 58 Double_t tmin, Double_t tmax):; 59 TNamed(name,""Polargram""); 60{; 61 Init();; 62 fNdivRad = 508;; 63 fNdivPol = 508;; 64 fPolarLabels = nullptr;; 65 fRwrmax = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolargram_8cxx_source.html:87,Guid,Guide,87,doc/master/TGraphPolargram_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolargram_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TGraphQQ.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphQQ.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Anna Kreshuk 18/11/2005; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TGraphQQ.h""; 13#include ""TAxis.h""; 14#include ""TF1.h""; 15#include ""TMath.h""; 16 ; 17ClassImp(TGraphQQ);; 18 ; 19/** \class TGraphQQ; 20\ingroup BasicGraphics; 21 ; 22This class allows to draw quantile-quantile plots; 23 ; 24Plots can be drawn for 2 datasets or for a dataset and a theoretical; 25distribution function; 26 ; 27## 2 datasets:; 28 Quantile-quantile plots are used to determine whether 2 samples come from; 29 the same distribution.; 30 A qq-plot draws the quantiles of one dataset against the quantile of the; 31 the other. The quantiles of the dataset with fewer entries are on Y axis,; 32 with more entries - on X axis.; 33 A straight line, going through 0.25 and 0.75 quantiles is also plotted; 34 for reference. It represents a robust linear fit, not sensitive to the; 35 extremes of the datasets.; 36 If the datasets come from the same distribution, points of the plot should; 37 fall approximately on the 45 degrees line. If they have the same; 38 distribution function, but location or scale different parameters,; 39 they should still fall on the straight line, but not the 45 degrees one.; 40 The greater their departure from the straight line, the more evidence there; 41 is, that the datasets come from different distributions.; 42 The advantage of qq-plot is that it not only shows that the underlying; 43 distributions are different, but",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphQQ_8cxx_source.html:80,Guid,Guide,80,doc/master/TGraphQQ_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphQQ_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TLatex.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLatex.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Nicolas Brun, Olivier Couet, Oleksandr Grebenyuk; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include ""TLatex.h""; 15#include ""TMathText.h""; 16#include ""TMath.h""; 17#include ""TVirtualPad.h""; 18#include ""TVirtualPS.h""; 19#include ""TVirtualX.h""; 20#include ""snprintf.h""; 21 ; 22const Double_t kPI = TMath::Pi();; 23 ; 24ClassImp(TLatex);; 25 ; 26/** \class TLatex; 27\ingroup BasicGraphics; 28 ; 29To draw Mathematical Formula.; 30 ; 31TLatex's purpose is to write mathematical equations. The syntax is very similar; 32to the Latex's one. It provides several functionalities:; 33 ; 34- [Subscripts and Superscripts](\ref L1); 35- [Fractions](\ref L2); 36- [Splitting Lines](\ref L3); 37- [Roots](\ref L4); 38- [Mathematical Symbols](\ref L5); 39- [Delimiters](\ref L6); 40- [Greek Letters](\ref L7); 41- [Accents](\ref L8); 42- [Changing Style](\ref L9); 43- [Alignment Rules](\ref L10); 44- [Character Adjustment](\ref L11); 45- [Italic and Boldface](\ref L12); 46- [Examples](\ref L13); 47- [Interface to TMathText](\ref L14); 48 ; 49When the font precision (see `TAttText`) is low (0 or 1), TLatex is; 50painted as a normal TText, the control characters are not interpreted.; 51 ; 52\anchor L1; 53## Subscripts and Superscripts; 54Subscripts and superscripts are made with the `_` and `^`; 55commands. These commands can be combined to make complicated subscript and; 56superscript expressions. You ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLatex_8cxx_source.html:78,Guid,Guide,78,doc/master/TLatex_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLatex_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TLegend.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegend.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Matthew.Adam.Dobbs 06/09/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdio>; 13#include <iostream>; 14 ; 15#include ""TStyle.h""; 16#include ""TLatex.h""; 17#include ""TLine.h""; 18#include ""TPolyLine.h""; 19#include ""TMarker.h""; 20#include ""TLegend.h""; 21#include ""TList.h""; 22#include ""TVirtualPad.h""; 23#include ""TMath.h""; 24#include ""TROOT.h""; 25#include ""TLegendEntry.h""; 26#include ""TMultiGraph.h""; 27#include ""TGraph.h""; 28#include ""TH1.h""; 29#include ""THStack.h""; 30 ; 31ClassImp(TLegend);; 32 ; 33/** \class TLegend; 34\ingroup BasicGraphics; 35 ; 36This class displays a legend box (TPaveText) containing several legend entries.; 37 ; 38Each legend entry is made of a reference to a ROOT object, a text label and an; 39option specifying which graphical attributes (marker/line/fill) should be; 40displayed.; 41 ; 42The following example shows how to create a legend. In this example the legend; 43contains a histogram, a function and a graph. The histogram is put in the legend; 44using its reference pointer whereas the graph and the function are added; 45using their names. Note that, because `TGraph` constructors do not have the; 46`TGraph` name as parameter, the graph name should be specified using the; 47`SetName` method.; 48 ; 49When an object is added by name, a scan is performed on the list of objects; 50contained in the current pad (`gPad`) and also in the possible; 51`TMultiGraph` and `THStack` present in the p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8cxx_source.html:79,Guid,Guide,79,doc/master/TLegend_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TLegendEntry.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegendEntry.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Matthew.Adam.Dobbs 06/09/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdio>; 13 ; 14#include ""TLegendEntry.h""; 15#include ""TVirtualPad.h""; 16#include ""TROOT.h""; 17#include <iostream>; 18 ; 19ClassImp(TLegendEntry);; 20 ; 21/** \class TLegendEntry; 22\ingroup BasicGraphics; 23 ; 24Storage class for one entry of a TLegend.; 25*/; 26 ; 27////////////////////////////////////////////////////////////////////////////////; 28/// TLegendEntry do-nothing default constructor; 29 ; 30TLegendEntry::TLegendEntry(): TAttText(), TAttLine(), TAttFill(), TAttMarker(); 31{; 32 fObject = nullptr;; 33}; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/// TLegendEntry normal constructor for one entry in a TLegend.; 37///; 38/// obj is the object this entry will represent. If obj has; 39/// line/fill/marker attributes, then the TLegendEntry will display; 40/// these attributes.; 41///; 42/// label is the text that will describe the entry, it is displayed using; 43/// TLatex, so may have a complex format.; 44///; 45/// option may have values; 46/// - L draw line associated w/ TAttLine if obj inherits from TAttLine; 47/// - P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; 48/// - F draw a box with fill associated w/ TAttFill if obj inherits TAttFill; 49/// default is object = ""LPF""; 50 ; 51TLegendEntry::TLegendEntry(const TObject* obj, const char* label, Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegendEntry_8cxx_source.html:84,Guid,Guide,84,doc/master/TLegendEntry_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegendEntry_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TLine.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLine.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13 ; 14#include <iostream>; 15#include ""TROOT.h""; 16#include ""TBuffer.h""; 17#include ""TLine.h""; 18#include ""TVirtualPad.h""; 19#include ""TClass.h""; 20#include ""TVirtualX.h""; 21#include ""TMath.h""; 22#include ""TPoint.h""; 23 ; 24ClassImp(TLine);; 25 ; 26/** \class TLine; 27\ingroup BasicGraphics; 28 ; 29Use the TLine constructor to create a simple line.; 30 ; 31~~~ {.cpp}; 32 TLine(Double_t x1,Double_t y1,Double_t x2,Double_t y2); 33~~~; 34 ; 35`x1`, `y1`, `x2`, `y2` are the coordinates of the first and the second point.; 36 ; 37_**Example**_:; 38 ; 39~~~ {.cpp}; 40 root[] l = new TLine(0.2,0.2,0.8,0.3); 41 root[] l->Draw(); 42~~~; 43*/; 44 ; 45 ; 46////////////////////////////////////////////////////////////////////////////////; 47/// Line normal constructor.; 48 ; 49TLine::TLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2); 50 :TObject(), TAttLine(); 51{; 52 fX1=x1; fY1=y1; fX2=x2; fY2=y2;; 53}; 54 ; 55 ; 56////////////////////////////////////////////////////////////////////////////////; 57/// Line copy constructor.; 58 ; 59TLine::TLine(const TLine &line) : TObject(line), TAttLine(line), TAttBBox2D(line); 60{; 61 line.TLine::Copy(*this);; 62}; 63 ; 64////////////////////////////////////////////////////////////////////////////////; 65/// Assignment operator; 66 ; 67TLine &TLine::operator=(const TLine &src); 68{; 69 src.TLine::Copy(*this);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8cxx_source.html:77,Guid,Guide,77,doc/master/TLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLine_8cxx_source.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: graf2d/graf/src/TMarker.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMarker.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/05/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13#include <iostream>; 14 ; 15#include ""TROOT.h""; 16#include ""TBuffer.h""; 17#include ""TVirtualPad.h""; 18#include ""TMarker.h""; 19#include ""TVirtualX.h""; 20#include ""TMath.h""; 21#include ""TPoint.h""; 22#include ""TText.h""; 23#include ""snprintf.h""; 24 ; 25ClassImp(TMarker);; 26 ; 27 ; 28/** \class TMarker; 29\ingroup BasicGraphics; 30 ; 31Manages Markers.; 32 ; 33Use the TMarker constructor to create a marker.; 34 ; 35~~~ {.cpp}; 36 TMarker(Double_t x,Double_t y,Int_t marker); 37~~~; 38 ; 39The parameters `x` and `y` are the marker coordinates and `marker` is the marker type.; 40 ; 41Use the TPolyMarker to create an array on N points in a 2D space.; 42At each point `x[i]`, `y[i]` a marker is drawn.; 43 ; 44Use the TAttMarker class to change the attributes color, style and size of a marker.; 45 ; 46_**Example**_; 47 ; 48- Use the `TAttMarker::SetMarkerSize(size)` method to set the `size` of a marker.; 49 ; 50*/; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Marker default constructor.; 54 ; 55TMarker::TMarker(): TObject(), TAttMarker(); 56{; 57 fX = 0;; 58 fY = 0;; 59}; 60 ; 61////////////////////////////////////////////////////////////////////////////////; 62/// Marker normal constructor.; 63 ; 64TMarker::TMarker(Double_t x, Double_t y, Int_t marker); 65 :TObject(), TAttMarker(); 66{; 67 fX = x;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMarker_8cxx_source.html:79,Guid,Guide,79,doc/master/TMarker_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMarker_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TMathText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMathText.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id: TMathText.cxx $; 2// Author: Yue Shi Lai 16/10/12; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include <ft2build.h>; 15#include FT_FREETYPE_H; 16#include FT_GLYPH_H; 17#include ""TTF.h""; 18#include ""TMathText.h""; 19#include ""TMath.h""; 20#include ""TVirtualPad.h""; 21#include ""TVirtualPS.h""; 22#include ""TVirtualX.h""; 23#include ""TText.h""; 24 ; 25#include ""../../../graf2d/mathtext/inc/mathtext.h""; 26#include ""../../../graf2d/mathtext/inc/mathrender.h""; 27 ; 28/** \class TMathText; 29\ingroup BasicGraphics; 30 ; 31To draw TeX Mathematical Formula; 32 ; 33TMathText's purpose is to write mathematical equations, exactly as TeX would; 34do it. The syntax is the same as the TeX's one.; 35 ; 36The following example demonstrate how to use TMathText:; 37 ; 38Begin_Macro(source); 39../../../tutorials/graphics/tmathtext.C; 40End_Macro; 41 ; 42The list of all available symbols is given in the following example:; 43 ; 44Begin_Macro; 45../../../tutorials/graphics/tmathtext2.C; 46End_Macro; 47 ; 48#### Limitation:; 49TMathText rendering is not implemented for the PDF output.; 50PostScript output should be used instead.; 51*/; 52 ; 53const Double_t kPI = TMath::Pi();; 54 ; 55class TMathTextRenderer : public TText, public TAttFill,; 56 public mathtext::math_text_renderer_t {; 57private:; 58 TMathText *_parent;; 59 float _font_size;; 60 float _x0;; 61 float _y0;; 62 float _angle_degree;; 63 float _pad_pixel_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMathText_8cxx_source.html:81,Guid,Guide,81,doc/master/TMathText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMathText_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TPaveLabel.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveLabel.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 17/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include ""TStyle.h""; 15#include ""TPaveLabel.h""; 16#include ""TLatex.h""; 17#include ""TVirtualPad.h""; 18 ; 19ClassImp(TPaveLabel);; 20 ; 21/** \class TPaveLabel; 22\ingroup BasicGraphics; 23 ; 24A Pave (see TPave) with a text centered in the Pave.; 25 ; 26\image html graf_pavelabel.png; 27*/; 28 ; 29////////////////////////////////////////////////////////////////////////////////; 30/// Pavelabel default constructor.; 31 ; 32TPaveLabel::TPaveLabel(): TPave(), TAttText(); 33{; 34}; 35 ; 36////////////////////////////////////////////////////////////////////////////////; 37/// Pavelabel normal constructor.; 38///; 39/// a PaveLabel is a Pave with a label centered in the Pave; 40/// The Pave is by default defined bith bordersize=5 and option =""br"".; 41/// The text size is automatically computed as a function of the pave size.; 42/// To remove the shadow or border of a TPaveLabel, use the function TPave::SetBorderSize; 43 ; 44TPaveLabel::TPaveLabel(Double_t x1, Double_t y1,Double_t x2, Double_t y2, const char *label, Option_t *option); 45 :TPave(x1,y1,x2,y2,3,option), TAttText(22,0,1,gStyle->GetTextFont(),0.99); 46{; 47 fLabel = label;; 48}; 49 ; 50////////////////////////////////////////////////////////////////////////////////; 51/// TPaveLabel default destructor.; 52 ; 53TPaveLabel::~TPaveLabel(); 54{; 55}; 56 ; 57/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveLabel_8cxx_source.html:82,Guid,Guide,82,doc/master/TPaveLabel_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPaveLabel_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TPaveText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveText.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 20/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <cstdlib>; 14#include <cstdio>; 15#include <iostream>; 16#include <fstream>; 17 ; 18#include ""TBufferFile.h""; 19#include ""TROOT.h""; 20#include ""TStyle.h""; 21#include ""TPaveText.h""; 22#include ""TPaveLabel.h""; 23#include ""TVirtualPad.h""; 24#include ""TMath.h""; 25#include ""TLatex.h""; 26#include ""TError.h""; 27#include ""TColor.h""; 28#include ""TLine.h""; 29 ; 30ClassImp(TPaveText);; 31 ; 32 ; 33/** \class TPaveText; 34\ingroup BasicGraphics; 35 ; 36A Pave (see TPave) with text, lines or/and boxes inside.; 37 ; 38Line (and boxes) are positioned in the pave using coordinates relative to; 39the pave (%).; 40 ; 41The text lines are added in order using the AddText method. Also line separators; 42can be added, in order too, using the AddLine method.; 43 ; 44AddText returns a TText corresponding to the line added to the pave. This; 45return value can be used to modify the text attributes.; 46 ; 47Once the TPaveText is build the text of each line can be retrieved using; 48GetLine or GetLineWith as a TText wich is useful to modify the text attributes; 49of a line.; 50 ; 51Example:; 52Begin_Macro(source); 53../../../tutorials/graphics/pavetext.C; 54End_Macro; 55 ; 56GetListOfLines can also be used to retrieve all the lines in the TPaveText as; 57a TList:; 58 ; 59Begin_Macro(source); 60{; 61 TPaveText *t = new TPaveText(.05,.3,.95,.6);; 62 t-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveText_8cxx_source.html:81,Guid,Guide,81,doc/master/TPaveText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPaveText_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TPavesText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPavesText.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 19/11/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include ""TPavesText.h""; 15#include ""TVirtualPad.h""; 16#include ""TBufferFile.h""; 17#include ""TError.h""; 18 ; 19ClassImp(TPavesText);; 20 ; 21 ; 22/** \class TPavesText; 23\ingroup BasicGraphics; 24 ; 25A PaveText (see TPaveText) with several stacked paves.; 26 ; 27\image html graf_pavestext.png; 28*/; 29 ; 30////////////////////////////////////////////////////////////////////////////////; 31/// Pavestext default constructor.; 32 ; 33TPavesText::TPavesText(): TPaveText(); 34{; 35 fNpaves = 5;; 36}; 37 ; 38////////////////////////////////////////////////////////////////////////////////; 39/// Pavestext normal constructor.; 40///; 41/// The PavesText is by default defined both bordersize=1 and option =""br"".; 42/// - option = ""T"" Top frame; 43/// - option = ""B"" Bottom frame; 44/// - option = ""R"" Right frame; 45/// - option = ""L"" Left frame; 46/// - option = ""NDC"" x1,y1,x2,y2 are given in NDC; 47/// - option = ""ARC"" corners are rounded; 48/// To add a shadow to the TPavesText, use the function TPave::SetBorderSize; 49 ; 50TPavesText::TPavesText(Double_t x1, Double_t y1,Double_t x2, Double_t y2, Int_t npaves,Option_t *option); 51 :TPaveText(x1,y1,x2,y2,option); 52{; 53 fNpaves = npaves;; 54 SetBorderSize(1);; 55}; 56 ; 57////////////////////////////////////////////////////////////////////////////////; 58/// Paveste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPavesText_8cxx_source.html:82,Guid,Guide,82,doc/master/TPavesText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPavesText_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TPolyLine.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPolyLine.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include <vector>; 14#include ""TROOT.h""; 15#include ""TBuffer.h""; 16#include ""TMath.h""; 17#include ""TVirtualPad.h""; 18#include ""TVirtualX.h""; 19#include ""TPolyLine.h""; 20 ; 21ClassImp(TPolyLine);; 22 ; 23/** \class TPolyLine; 24\ingroup BasicGraphics; 25 ; 26Defined by an array on N points in a 2-D space.; 27 ; 28One can draw the contour of the polyline or/and its fill area.; 29Example:; 30Begin_Macro(source); 31{; 32 Double_t x[5] = {.2,.7,.6,.25,.2};; 33 Double_t y[5] = {.5,.1,.9,.7,.5};; 34 TPolyLine *pline = new TPolyLine(5,x,y);; 35 pline->SetFillColor(38);; 36 pline->SetLineColor(2);; 37 pline->SetLineWidth(4);; 38 pline->Draw(""f"");; 39 pline->Draw();; 40}; 41End_Macro; 42*/; 43 ; 44////////////////////////////////////////////////////////////////////////////////; 45/// PolyLine default constructor.; 46 ; 47TPolyLine::TPolyLine(); 48{; 49}; 50 ; 51////////////////////////////////////////////////////////////////////////////////; 52/// PolyLine normal constructor without initialisation.; 53/// Allocates n points.; 54 ; 55TPolyLine::TPolyLine(Int_t n, Option_t *option); 56 :TObject(), TAttLine(), TAttFill(); 57{; 58 fOption = option;; 59 if (n <= 0); 60 return;; 61 ; 62 fN = n;; 63 fX = new Double_t[fN];; 64 fY = new Double_t[fN];; 65}; 66 ; 67////////////////////////////////////////////////////////////////////////////////; 68/// P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPolyLine_8cxx_source.html:81,Guid,Guide,81,doc/master/TPolyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPolyLine_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/graf/src/TText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TText.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Nicolas Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TText.h""; 13 ; 14#include ""TROOT.h""; 15#include ""TBuffer.h""; 16#include ""TVirtualPad.h""; 17#include <ft2build.h>; 18#include FT_FREETYPE_H; 19#include FT_GLYPH_H; 20#include ""TTF.h""; 21#include ""TVirtualX.h""; 22#include ""TMath.h""; 23#include ""TPoint.h""; 24 ; 25#include <cwchar>; 26#include <cstdlib>; 27#include <iostream>; 28 ; 29ClassImp(TText);; 30 ; 31 ; 32/** \class TText; 33\ingroup BasicGraphics; 34 ; 35Base class for several text objects.; 36 ; 37See TAttText for a list of text attributes or fonts,; 38and also for a discussion on text speed and font quality.; 39 ; 40By default, the text is drawn in the pad coordinates system.; 41One can draw in NDC coordinates [0,1] if the function SetNDC; 42is called for a TText object.; 43 ; 44Example:; 45Begin_Macro(source); 46{; 47 TText *t = new TText(.5,.5,""Hello World !"");; 48 t->SetTextAlign(22);; 49 t->SetTextColor(kRed+2);; 50 t->SetTextFont(43);; 51 t->SetTextSize(40);; 52 t->SetTextAngle(45);; 53 t->Draw();; 54}; 55End_Macro; 56*/; 57 ; 58////////////////////////////////////////////////////////////////////////////////; 59/// Text normal constructor.; 60 ; 61TText::TText(Double_t x, Double_t y, const char *text) : TNamed("""",text), TAttText(), fWcsTitle(nullptr); 62{; 63 fX = x;; 64 fY = y;; 65}; 66 ; 67////////////////////////////////////////////////////////////////////////////////; 68/// Text norma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TText_8cxx_source.html:77,Guid,Guide,77,doc/master/TText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TText_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/inc/TGWin32ProxyDefs.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Enumerations |; Variables ; TGWin32ProxyDefs.h File Reference. #include ""Rtypes.h"". Include dependency graph for TGWin32ProxyDefs.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define _NAME4_(name1, name2, name3, name4)   _NAME3_(name1,name2,name3)name4;  ; #define DEBUG_PROFILE_PROXY_START(method);  ; #define DEBUG_PROFILE_PROXY_STOP(method);  ; #define RETURN_METHOD_ARG0(klass, type, method);  ; #define RETURN_METHOD_ARG0_CONST(klass, type, method);  ; #define RETURN_METHOD_ARG1(klass, type, method, type1, par1);  ; #define RETURN_METHOD_ARG10(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5, type6, par6, type7, par7, type8, par8, type9, par9, type10, par10);  ; #define RETURN_METHOD_ARG11(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5, type6, par6, type7, par7, type8, par8, type9, par9, type10, par10, type11, par11);  ; #define RETURN_METHOD_ARG2(klass, type, method, type1, par1, type2, par2);  ; #define RETURN_METHOD_ARG3(klass, type, method, type1, par1, type2, par2, type3, par3);  ; #define RETURN_METHOD_ARG4(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4);  ; #define RETURN_METHOD_ARG5(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5);  ; #define RETURN_METHOD_ARG6(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5, type6, par6);  ; #define RETURN_METHOD_ARG7(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5, type6, par6, type7, par7);  ; #define RETURN_METHOD_ARG8(klass, type, method, type1, par1, type2,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32ProxyDefs_8h.html:93,Guid,Guide,93,doc/master/TGWin32ProxyDefs_8h.html,https://root.cern,https://root.cern/doc/master/TGWin32ProxyDefs_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/inc/TGWin32ProxyDefs.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGWin32ProxyDefs.h. Go to the documentation of this file. 1// @(#)root/win32gdk:$Id$; 2// Author: Valeriy Onuchin 08/08/2003; 3 ; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_TGWin32ProxyDefs; 14#define ROOT_TGWin32ProxyDefs; 15 ; 16#include ""Rtypes.h"" // CINT headers; 17 ; 18 ; 19#define _NAME4_(name1,name2,name3,name4) _NAME3_(name1,name2,name3)name4; 20 ; 21 ; 22 ; 23///////////////////// debug & profile interface /////////////////////////////; 24//; 25// - recompile with gDebugProxy = 1; 26//; 27// root [0] gDebug = -123 // start profiling; 28//or; 29// root [0] gDebug = -1234 // start profiling and debugging(call trace); 30//; 31// root [1] .x macro.C // profile macro.C; 32// root [2] gDebug = 0 // stop profiling; 33// root [3] .x macro.C // print results; 34//; 35 ; 36static int gDebugProxy = 0; // if kTRUE - use debug & profile interface; 37 ; 38enum { kDebugProfile = -123, kDebugTrace = -1234 };; 39 ; 40static unsigned int total = 0;; 41static double total_time = 0;; 42 ; 43#define DEBUG_PROFILE_PROXY_START(method)\; 44 static int i = 0;\; 45 static double t = 0;\; 46 double start = 0;\; 47 int gDebugValue = 0;\; 48 int debug = 0;\; 49 if (gDebugProxy) {\; 50 gDebugValue = gDebug;\; 51 debug = (gDebugValue==kDebugProfile) || (gDebugValue==kDebugTrace);\; 52 if (debug) {\; 53 start = GetMilliSeconds();\; 54 } else {\; 55 if (total) {\; 56 printf("" method name hits time/hits(ms) time(ms) | Total = %d hits %6.2f ms\n"",total,total_time );\; 57 printf(""----------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32ProxyDefs_8h_source.html:90,Guid,Guide,90,doc/master/TGWin32ProxyDefs_8h_source.html,https://root.cern,https://root.cern/doc/master/TGWin32ProxyDefs_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/src/TGWin32VirtualGLProxy.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; TGWin32VirtualGLProxy.cxx File Reference. #include ""TGWin32ProxyDefs.h""; #include ""TGWin32VirtualGLProxy.h""; #include ""TGWin32.h""; #include ""TROOT.h""; #include ""TList.h"". Include dependency graph for TGWin32VirtualGLProxy.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; winID h RETURN_METHOD_ARG1 (GLManager, Bool_t, MakeCurrent, Int_t, devInd) VOID_METHOD_ARG1(GLManager;  ; winID RETURN_METHOD_ARG1 (GLManager, Int_t, CreateGLContext, Int_t, winInd) RETURN_METHOD_ARG5(GLManager;  ; winID h RETURN_METHOD_ARG1 (GLManager, Int_t, GetVirtualXInd, Int_t, pixInd) VOID_METHOD_ARG2(GLManager;  ; winID h TVirtualViewer3D TVirtualGLPainter RETURN_METHOD_ARG3 (GLManager, Bool_t, PlotSelected, TVirtualGLPainter *, plot, Int_t, x, Int_t, y) RETURN_METHOD_ARG3(GLManager;  ; winID h TVirtualViewer3D TVirtualGLPainter char TVirtualGLPainter y RETURN_METHOD_ARG4 (GLManager, Bool_t, SelectManip, TVirtualGLManip *, manip, const TGLCamera *, camera, const TGLRect *, rect, const TGLBoundingBox *, box) RETURN_METHOD_ARG1(GLManager;  ; winID h RETURN_METHOD_ARG5 (GLManager, Bool_t, ResizeOffScreenDevice, Int_t, pixInd, Int_t, x, Int_t, y, UInt_t, w, UInt_t, h) VOID_METHOD_ARG1(GLManager;  ;  RETURN_PROXY_OBJECT (GLManager) RETURN_METHOD_ARG1(GLManager;  ; winID h TVirtualViewer3D VOID_METHOD_ARG1 (GLManager, PaintSingleObject, TVirtualGLPainter *, p, 1) VOID_METHOD_ARG3(GLManager;  ; winID h VOID_METHOD_ARG1 (GLManager, ReadGLBuffer, Int_t, devInd, 1) VOID_METHOD_ARG1(GLManager;  ; winID h VOID_METHOD_ARG2 (GLManager, ExtractViewport, Int_t, pixInd, Int_t *, vp, 1) VOID_METHOD_ARG1(GLManager;  . Variables; winID AttachOffScreenDevice;  ; winID Bool_t;  ; winID h DeleteGLContext;  ; winID h devInd;  ; winID h direct;  ; winID h Flush;  ; winID h TVirtualViewer3D TVir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualGLProxy_8cxx.html:100,Guid,Guide,100,doc/master/TGWin32VirtualGLProxy_8cxx.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualGLProxy_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/src/TGWin32VirtualGLProxy.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGWin32VirtualGLProxy.cxx. Go to the documentation of this file. 1// @(#)root/win32gdk:$Id$; 2// Author: Valeriy Onuchin 05/08/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004,Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TGWin32ProxyDefs.h""; 13#include ""TGWin32VirtualGLProxy.h""; 14#include ""TGWin32.h""; 15#include ""TROOT.h""; 16#include ""TList.h""; 17 ; 18static TGLManager *gManager = 0;; 19 ; 20////////////////////////////////////////////////////////////////////////////////; 21 ; 22TGLManager *TGWin32GLManagerProxy::RealObject(); 23{; 24 if (!gManager) {; 25 gManager = (TGLManager *)gROOT->GetListOfSpecials()->FindObject(""gGLManager"");; 26 }; 27 ; 28 return gManager;; 29}; 30 ; 31TGWin32GLManagerProxy::TGWin32GLManagerProxy(); 32{; 33 fIsVirtualX = kFALSE;; 34}; 35 ; 36RETURN_PROXY_OBJECT(GLManager); 37RETURN_METHOD_ARG1(GLManager, Int_t, InitGLWindow, Window_t, winID); 38RETURN_METHOD_ARG1(GLManager, Int_t, CreateGLContext, Int_t, winInd); 39RETURN_METHOD_ARG5(GLManager, Bool_t, AttachOffScreenDevice, Int_t, winInd, Int_t, x, Int_t, y, UInt_t, w, UInt_t, h); 40RETURN_METHOD_ARG5(GLManager, Bool_t, ResizeOffScreenDevice, Int_t, pixInd, Int_t, x, Int_t, y, UInt_t, w, UInt_t, h); 41VOID_METHOD_ARG1(GLManager, SelectOffScreenDevice, Int_t, pixInd, 1); 42RETURN_METHOD_ARG1(GLManager, Int_t, GetVirtualXInd, Int_t, pixInd); 43VOID_METHOD_ARG2(GLManager, MarkForDirectCopy, Int_t, pixInd, Bool_t, direct, 1); 44RETURN_METHOD_ARG1(GLManager, Bool_t, MakeCurrent, Int_t, devInd); 45VOID_METHOD_ARG1(GLManager, Flush, Int_t, devInd, 1); 46VO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualGLProxy_8cxx_source.html:97,Guid,Guide,97,doc/master/TGWin32VirtualGLProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualGLProxy_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/src/TGWin32VirtualXProxy.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; TGWin32VirtualXProxy.cxx File Reference. #include ""TGWin32ProxyDefs.h""; #include ""TGWin32VirtualXProxy.h""; #include ""TGWin32.h""; #include ""TList.h"". Include dependency graph for TGWin32VirtualXProxy.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner RETURN_METHOD_ARG0 (VirtualX, Region_t, CreateRegion) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t RETURN_METHOD_ARG0 (VirtualX, Window_t, GetInputFocus) RETURN_METHOD_ARG0(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap RETURN_METHOD_ARG0_CONST (VirtualX, Bool_t, HasTTFonts) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle RETURN_METHOD_ARG0_CONST (VirtualX, Bool_t, IsTransparent) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude RETURN_METHO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx.html:99,Guid,Guide,99,doc/master/TGWin32VirtualXProxy_8cxx.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/src/TGWin32VirtualXProxy.cxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; TGWin32VirtualXProxy.cxx File Reference. #include ""TGWin32ProxyDefs.h""; #include ""TGWin32VirtualXProxy.h""; #include ""TGWin32.h""; #include ""TList.h"". Include dependency graph for TGWin32VirtualXProxy.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner RETURN_METHOD_ARG0 (VirtualX, Region_t, CreateRegion) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t RETURN_METHOD_ARG0 (VirtualX, Window_t, GetInputFocus) RETURN_METHOD_ARG0(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap RETURN_METHOD_ARG0_CONST (VirtualX, Bool_t, HasTTFonts) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle RETURN_METHOD_ARG0_CONST (VirtualX, Bool_t, IsTransparent) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude RETURN_METHOD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TGWin32VirtualXProxy_8cxx.html:98,Guid,Guide,98,doc/v632/TGWin32VirtualXProxy_8cxx.html,https://root.cern,https://root.cern/doc/v632/TGWin32VirtualXProxy_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/src/TGWin32VirtualXProxy.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGWin32VirtualXProxy.cxx. Go to the documentation of this file. 1// @(#)root/win32gdk:$Id$; 2// Author: Valeriy Onuchin 08/08/2003; 3 ; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13 ; 14//////////////////////////////////////////////////////////////////////////; 15// //; 16// TGWin32Proxy //; 17// //; 18// This class is the proxy interface to the Win32 graphics system. //; 19// //; 20//////////////////////////////////////////////////////////////////////////; 21 ; 22#include ""TGWin32ProxyDefs.h""; 23#include ""TGWin32VirtualXProxy.h""; 24#include ""TGWin32.h""; 25#include ""TList.h""; 26 ; 27TVirtualX *TGWin32VirtualXProxy::fgRealObject = 0;; 28 ; 29////////////////////////////////////////////////////////////////////////////////; 30////////////////////////////////////////////////////////////////////////////////; 31 ; 32TVirtualX *TGWin32VirtualXProxy::RealObject(); 33{; 34 return fgRealObject;; 35}; 36 ; 37RETURN_PROXY_OBJECT(VirtualX); 38VOID_METHOD_ARG0(VirtualX,SetFillAttributes,1); 39VOID_METHOD_ARG0(VirtualX,SetMarkerAttributes,1); 40VOID_METHOD_ARG0(VirtualX,SetLineAttributes,1); 41VOID_METHOD_ARG0(VirtualX,SetTextAttributes,1); 42VOID_METHOD_ARG1(VirtualX,ResetAttMarker,Option_t*,toption,1); 43VOID_METHOD_ARG1(VirtualX,ResetAttFill,Option_t*,option,1); 44VOID_METHOD_ARG1(VirtualX,ResetAttLine,Option_t*,option,1); 45VOID_METHOD_ARG1(VirtualX,ResetAttText,Option_t*,option,1); 46VOID_METHOD_ARG1(VirtualX,SetFillStyle,Style_t,style,1); 47VOID_METHOD_ARG1(VirtualX,SetTextAngle,Float_t,tangle,1); 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx_source.html:96,Guid,Guide,96,doc/master/TGWin32VirtualXProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/src/gifencode.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Typedefs |; Functions |; Variables ; gifencode.c File Reference. #include <stdio.h>; #include <stdlib.h>; #include <string.h>. Include dependency graph for gifencode.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ARGS(alist)   ();  ; #define BITS   12 /* largest code size */;  ; #define HSIZE   5003 /* hash table size */;  ; #define put_byte(A)   (*put_b)((byte)(A)); Nbyte++;  ; #define SHIFT   4 /* shift for hashing */;  ; #define THELIMIT   4096 /* NEVER generate this */;  . Typedefs; typedef unsigned char byte;  . Functions; static void char_flush ();  ; static void char_init ();  ; static void char_out ();  ; static void char_out (int c);  ; long GIFencode (int Width, int Height, int Ncol, R, G, B, ScLine, void *get_scline, pb);  ; static void output ();  ; static void output (int code);  ; static void put_short ();  ; static void put_short (int word);  . Variables; static int a_count;  ; static char accum [256];  ; static int BitsPixel;  ; static int ClearCode;  ; static int CodeTab [5003];  ; static unsigned long cur_accum;  ; static int cur_bits;  ; static int CurCodeSize;  ; static int CurMaxCode;  ; static int EOFCode;  ; static int FreeCode;  ; static long HashTab [5003];  ; static int IniCodeSize;  ; static unsigned long masks [];  ; static long Nbyte;  ; static void(* put_b )();  . Macro Definition Documentation. ◆ ARGS. #define ARGS; (;  ; alist);    (). Definition at line 10 of file gifencode.c. ◆ BITS. #define BITS   12 /* largest code size */. Definition at line 13 of file gifencode.c. ◆ HSIZE. #define HSIZE   5003 /* hash table size */. Definition at line 15 of file gifencode.c. ◆ put_byte. #define put_byte; (;  ; A);    (*put_b)((byte)(A)); Nbyte++. Definition at line 18 of file gifencode.c. ◆ SHIFT. #define SHIFT   4 /* shift for hashing */. Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/win32gdk_2src_2gifencode_8c.html:86,Guid,Guide,86,doc/master/win32gdk_2src_2gifencode_8c.html,https://root.cern,https://root.cern/doc/master/win32gdk_2src_2gifencode_8c.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/win32gdk/src/gifencode.c File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Typedefs |; Functions |; Variables ; gifencode.c File Reference. #include <stdio.h>; #include <stdlib.h>; #include <string.h>. Include dependency graph for gifencode.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ARGS(alist)   ();  ; #define BITS   12 /* largest code size */;  ; #define HSIZE   5003 /* hash table size */;  ; #define put_byte(A)   (*put_b)((byte)(A)); Nbyte++;  ; #define SHIFT   4 /* shift for hashing */;  ; #define THELIMIT   4096 /* NEVER generate this */;  . Typedefs; typedef unsigned char byte;  . Functions; static void char_flush ();  ; static void char_init ();  ; static void char_out ();  ; static void char_out (int c);  ; long GIFencode (int Width, int Height, int Ncol, R, G, B, ScLine, void *get_scline, pb);  ; static void output ();  ; static void output (int code);  ; static void put_short ();  ; static void put_short (int word);  . Variables; static int a_count;  ; static char accum [256];  ; static int BitsPixel;  ; static int ClearCode;  ; static int CodeTab [5003];  ; static unsigned long cur_accum;  ; static int cur_bits;  ; static int CurCodeSize;  ; static int CurMaxCode;  ; static int EOFCode;  ; static int FreeCode;  ; static long HashTab [5003];  ; static int IniCodeSize;  ; static unsigned long masks [];  ; static long Nbyte;  ; static void(* put_b )();  . Macro Definition Documentation. ◆ ARGS. #define ARGS; (;  ; alist);    (). Definition at line 10 of file gifencode.c. ◆ BITS. #define BITS   12 /* largest code size */. Definition at line 13 of file gifencode.c. ◆ HSIZE. #define HSIZE   5003 /* hash table size */. Definition at line 15 of file gifencode.c. ◆ put_byte. #define put_byte; (;  ; A);    (*put_b)((byte)(A)); Nbyte++. Definition at line 18 of file gifencode.c. ◆ SHIFT. #define SHIFT   4 /* shift for hashing */. Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/win32gdk_2src_2gifencode_8c.html:85,Guid,Guide,85,doc/v632/win32gdk_2src_2gifencode_8c.html,https://root.cern,https://root.cern/doc/v632/win32gdk_2src_2gifencode_8c.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/x11/src/TGX11.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions |; Variables ; TGX11.cxx File Reference. #include ""TROOT.h""; #include ""TColor.h""; #include ""TGX11.h""; #include ""TPoint.h""; #include ""TMath.h""; #include ""TStorage.h""; #include ""TStyle.h""; #include ""TExMap.h""; #include ""TEnv.h""; #include ""TString.h""; #include ""TObjString.h""; #include ""TObjArray.h""; #include ""RStipples.h""; #include ""strlcpy.h""; #include <X11/Xlib.h>; #include <X11/Xutil.h>; #include <X11/Xatom.h>; #include <X11/cursorfont.h>; #include <X11/keysym.h>; #include <X11/xpm.h>; #include <cstdio>; #include <cstring>; #include <cstdlib>; #include <cctype>; #include <unistd.h>. Include dependency graph for TGX11.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  RVisual;  ; struct  RXColor;  ; struct  RXGCValues;  ; struct  RXImage;  ; struct  RXPoint;  ; struct  RXVisualInfo;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; static Int_t DummyX11ErrorHandler (Display *, XErrorEvent *);  Dummy error handler for X11. Used by FindUsableVisual(). ;  ; static void GetPixel (int y, int width, Byte_t *scline);  Get pixels in line y and put in array scline. ;  ; int GIFdecode (Byte_t *gifArr, Byte_t *pixArr, int *Width, int *Height, int *Ncols, Byte_t *R, Byte_t *G, Byte_t *B);  ; long GIFencode (int Width, int Height, Int_t Ncol, Byte_t R[], Byte_t G[], Byte_t B[], Byte_t ScLine[], void(*get_scline)(int, int, Byte_t *), void(*pb)(Byte_t));  ; int GIFinfo (Byte_t *gifArr, int *Width, int *Height, int *Ncols);  ; int GIFquantize (UInt_t width, UInt_t height, Int_t *ncol, Byte_t *red, Byte_t *green, Byte_t *blue, Byte_t *outputBuf, Byte_t *outputCmap);  ; static void PutByte (Byte_t b);  Put byte b i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGX11_8cxx.html:79,Guid,Guide,79,doc/master/TGX11_8cxx.html,https://root.cern,https://root.cern/doc/master/TGX11_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/x11/src/TGX11.cxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions |; Variables ; TGX11.cxx File Reference. #include ""TROOT.h""; #include ""TColor.h""; #include ""TGX11.h""; #include ""TPoint.h""; #include ""TMath.h""; #include ""TStorage.h""; #include ""TStyle.h""; #include ""TExMap.h""; #include ""TEnv.h""; #include ""TString.h""; #include ""TObjString.h""; #include ""TObjArray.h""; #include ""RStipples.h""; #include ""strlcpy.h""; #include <X11/Xlib.h>; #include <X11/Xutil.h>; #include <X11/Xatom.h>; #include <X11/cursorfont.h>; #include <X11/keysym.h>; #include <X11/xpm.h>; #include <cstdio>; #include <cstring>; #include <cstdlib>; #include <cctype>; #include <unistd.h>. Include dependency graph for TGX11.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  RVisual;  ; struct  RXColor;  ; struct  RXGCValues;  ; struct  RXImage;  ; struct  RXPoint;  ; struct  RXVisualInfo;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; static Int_t DummyX11ErrorHandler (Display *, XErrorEvent *);  Dummy error handler for X11. Used by FindUsableVisual(). ;  ; static void GetPixel (int y, int width, Byte_t *scline);  Get pixels in line y and put in array scline. ;  ; int GIFdecode (Byte_t *gifArr, Byte_t *pixArr, int *Width, int *Height, int *Ncols, Byte_t *R, Byte_t *G, Byte_t *B);  ; long GIFencode (int Width, int Height, Int_t Ncol, Byte_t R[], Byte_t G[], Byte_t B[], Byte_t ScLine[], void(*get_scline)(int, int, Byte_t *), void(*pb)(Byte_t));  ; int GIFinfo (Byte_t *gifArr, int *Width, int *Height, int *Ncols);  ; int GIFquantize (UInt_t width, UInt_t height, Int_t *ncol, Byte_t *red, Byte_t *green, Byte_t *blue, Byte_t *outputBuf, Byte_t *outputCmap);  ; static void PutByte (Byte_t b);  Put byte b in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TGX11_8cxx.html:78,Guid,Guide,78,doc/v632/TGX11_8cxx.html,https://root.cern,https://root.cern/doc/v632/TGX11_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: graf2d/x11/src/TGX11.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGX11.cxx. Go to the documentation of this file. 1// @(#)root/x11:$Id$; 2// Author: Rene Brun, Olivier Couet, Fons Rademakers 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/// \defgroup x11 X11 backend; 13/// \brief Interface to X11 graphics.; 14/// \ingroup GraphicsBackends; 15 ; 16/** \class TGX11; 17\ingroup x11; 18This class is the basic interface to the X11 (Xlib) graphics system.; 19It is an implementation of the abstract TVirtualX class.; 20 ; 21This class gives access to basic X11 graphics, pixmap, text and font handling; 22routines.; 23 ; 24The companion class for Win32 is TGWin32.; 25 ; 26The file G11Gui.cxx contains the implementation of the GUI methods of the; 27TGX11 class. Most of the methods are used by the machine independent; 28GUI classes (libGUI.so).; 29 ; 30This code was initially developed in the context of HIGZ and PAW; 31by Olivier Couet (package X11INT).; 32*/; 33 ; 34#include ""TROOT.h""; 35#include ""TColor.h""; 36#include ""TGX11.h""; 37#include ""TPoint.h""; 38#include ""TMath.h""; 39#include ""TStorage.h""; 40#include ""TStyle.h""; 41#include ""TExMap.h""; 42#include ""TEnv.h""; 43#include ""TString.h""; 44#include ""TObjString.h""; 45#include ""TObjArray.h""; 46#include ""RStipples.h""; 47#include ""strlcpy.h""; 48 ; 49#include <X11/Xlib.h>; 50#include <X11/Xutil.h>; 51#include <X11/Xatom.h>; 52#include <X11/cursorfont.h>; 53#include <X11/keysym.h>; 54#include <X11/xpm.h>; 55 ; 56#include <cstdio>; 57#include <cstring>; 58#include <cstdlib>; 59#include <cctype>; 60#include <unistd.h>; 61#ifdef R__AIX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGX11_8cxx_source.html:76,Guid,Guide,76,doc/master/TGX11_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGX11_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf3d/eve7/glu/mesh.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Functions ; mesh.c File Reference. #include ""gluos.h""; #include <stddef.h>; #include <assert.h>; #include ""mesh.h""; #include ""memalloc.h"". Include dependency graph for mesh.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define FALSE   0;  ; #define TRUE   1;  . Functions; GLUhalfEdge * __gl_meshAddEdgeVertex (GLUhalfEdge *eOrg);  ; void __gl_meshCheckMesh (GLUmesh *mesh);  ; GLUhalfEdge * __gl_meshConnect (GLUhalfEdge *eOrg, GLUhalfEdge *eDst);  ; int __gl_meshDelete (GLUhalfEdge *eDel);  ; void __gl_meshDeleteMesh (GLUmesh *mesh);  ; GLUhalfEdge * __gl_meshMakeEdge (GLUmesh *mesh);  ; GLUmesh * __gl_meshNewMesh (void);  ; int __gl_meshSplice (GLUhalfEdge *eOrg, GLUhalfEdge *eDst);  ; GLUhalfEdge * __gl_meshSplitEdge (GLUhalfEdge *eOrg);  ; GLUmesh * __gl_meshUnion (GLUmesh *mesh1, GLUmesh *mesh2);  ; void __gl_meshZapFace (GLUface *fZap);  ; static GLUface * allocFace ();  ; static GLUvertex * allocVertex ();  ; static void KillEdge (GLUhalfEdge *eDel);  ; static void KillFace (GLUface *fDel, GLUface *newLface);  ; static void KillVertex (GLUvertex *vDel, GLUvertex *newOrg);  ; static GLUhalfEdge * MakeEdge (GLUhalfEdge *eNext);  ; static void MakeFace (GLUface *newFace, GLUhalfEdge *eOrig, GLUface *fNext);  ; static void MakeVertex (GLUvertex *newVertex, GLUhalfEdge *eOrig, GLUvertex *vNext);  ; static void Splice (GLUhalfEdge *a, GLUhalfEdge *b);  . Macro Definition Documentation. ◆ FALSE. #define FALSE   0. Definition at line 45 of file mesh.c. ◆ TRUE. #define TRUE   1. Definition at line 42 of file mesh.c. Function Documentation. ◆ __gl_meshAddEdgeVertex(). GLUhalfEdge * __gl_meshAddEdgeVertex ; (; GLUhalfEdge * ; eOrg). Definition at line 441 of file mesh.c. ◆ __gl_meshCheckMesh(). void __gl_meshCheckMesh ; (; GLUmesh * ; mesh). Definition at line 737 of file mesh.c. ◆ __gl_m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mesh_8c.html:77,Guid,Guide,77,doc/master/mesh_8c.html,https://root.cern,https://root.cern/doc/master/mesh_8c.html,1,['Guid'],['Guide']
Usability,". ROOT: graf3d/eve7/glu/mesh.c Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. mesh.c. Go to the documentation of this file. 1/*; 2 * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008); 3 * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.; 4 *; 5 * Permission is hereby granted, free of charge, to any person obtaining a; 6 * copy of this software and associated documentation files (the ""Software""),; 7 * to deal in the Software without restriction, including without limitation; 8 * the rights to use, copy, modify, merge, publish, distribute, sublicense,; 9 * and/or sell copies of the Software, and to permit persons to whom the; 10 * Software is furnished to do so, subject to the following conditions:; 11 *; 12 * The above copyright notice including the dates of first publication and; 13 * either this permission notice or a reference to; 14 * http://oss.sgi.com/projects/FreeB/; 15 * shall be included in all copies or substantial portions of the Software.; 16 *; 17 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; 18 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; 19 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; 20 * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,; 21 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF; 22 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; 23 * SOFTWARE.; 24 *; 25 * Except as contained in this notice, the name of Silicon Graphics, Inc.; 26 * shall not be used in advertising or otherwise to promote the sale, use or; 27 * other dealings in this Software without prior written authorization from; 28 * Silicon Graphics, Inc.; 29 */; 30/*; 31** Author: Eric Veach, July 1994.; 32**; 33*/; 34 ; 35#include ""gluos.h""; 36#include <stddef.h>; 37#include <assert.h>; 38#include ""mesh.h""; 39#include ""memalloc.h""; 40 ; 41#ifn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mesh_8c_source.html:74,Guid,Guide,74,doc/master/mesh_8c_source.html,https://root.cern,https://root.cern/doc/master/mesh_8c_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf3d/eve7/glu/normal.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Functions ; normal.c File Reference. #include ""gluos.h""; #include ""mesh.h""; #include ""tess.h""; #include ""normal.h""; #include <math.h>; #include <assert.h>. Include dependency graph for normal.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ABS(x)   ((x) < 0 ? -(x) : (x));  ; #define Dot(u, v)   (u[0]*v[0] + u[1]*v[1] + u[2]*v[2]);  ; #define FALSE   0;  ; #define S_UNIT_X   1.0;  ; #define S_UNIT_Y   0.0;  ; #define TRUE   1;  . Functions; void __gl_projectPolygon (GLUtesselator *tess);  ; static void CheckOrientation (GLUtesselator *tess);  ; static void ComputeNormal (GLUtesselator *tess, GLdouble norm[3]);  ; static int LongAxis (GLdouble v[3]);  . Macro Definition Documentation. ◆ ABS. #define ABS; (;  ; x);    ((x) < 0 ? -(x) : (x)). Definition at line 65 of file normal.c. ◆ Dot. #define Dot; (;  ; u, .  ; v . );    (u[0]*v[0] + u[1]*v[1] + u[2]*v[2]). Definition at line 49 of file normal.c. ◆ FALSE. #define FALSE   0. Definition at line 46 of file normal.c. ◆ S_UNIT_X. #define S_UNIT_X   1.0. Definition at line 190 of file normal.c. ◆ S_UNIT_Y. #define S_UNIT_Y   0.0. Definition at line 191 of file normal.c. ◆ TRUE. #define TRUE   1. Definition at line 43 of file normal.c. Function Documentation. ◆ __gl_projectPolygon(). void __gl_projectPolygon ; (; GLUtesselator * ; tess). Definition at line 198 of file normal.c. ◆ CheckOrientation(). static void CheckOrientation ; (; GLUtesselator * ; tess). static . Definition at line 141 of file normal.c. ◆ ComputeNormal(). static void ComputeNormal ; (; GLUtesselator * ; tess, . GLdouble ; norm[3] . ). static . Definition at line 76 of file normal.c. ◆ LongAxis(). static int LongAxis ; (; GLdouble ; v[3]). static . Definition at line 67 of file normal.c. graf3deve7glunormal.c. ROOT master - Reference Guide Generated on Tue Nov 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/normal_8c.html:79,Guid,Guide,79,doc/master/normal_8c.html,https://root.cern,https://root.cern/doc/master/normal_8c.html,1,['Guid'],['Guide']
Usability,". ROOT: graf3d/g3d/src/X3DBuffer.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; X3DBuffer.c File Reference. #include ""X3DBuffer.h""; #include ""../../x3d/src/X3DDefs.h""; #include <stdio.h>; #include <stdlib.h>. Include dependency graph for X3DBuffer.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; int AllocateX3DBuffer ();  ; void FillX3DBuffer (X3DBuffer *buff);  ; Size3D * gFuncSize3D ();  . Variables; Color * colors;  ; int currPoint = 0;  ; int currPoly = 0;  ; int currSeg = 0;  ; Size3D gVarSize3D;  ; point * points;  ; polygon * polys;  ; segment * segs;  . Function Documentation. ◆ AllocateX3DBuffer(). int AllocateX3DBuffer ; (; ). Definition at line 27 of file X3DBuffer.c. ◆ FillX3DBuffer(). void FillX3DBuffer ; (; X3DBuffer * ; buff). Definition at line 142 of file X3DBuffer.c. ◆ gFuncSize3D(). Size3D * gFuncSize3D ; (; ). Definition at line 10 of file X3DBuffer.c. Variable Documentation. ◆ colors. Color* colors. Definition at line 21 of file X3DBuffer.c. ◆ currPoint. int currPoint = 0. Definition at line 17 of file X3DBuffer.c. ◆ currPoly. int currPoly = 0. Definition at line 19 of file X3DBuffer.c. ◆ currSeg. int currSeg = 0. Definition at line 18 of file X3DBuffer.c. ◆ gVarSize3D. Size3D gVarSize3D. Definition at line 9 of file X3DBuffer.c. ◆ points. point* points. Definition at line 22 of file X3DBuffer.c. ◆ polys. polygon* polys. Definition at line 24 of file X3DBuffer.c. ◆ segs. segment* segs. Definition at line 23 of file X3DBuffer.c. graf3dg3dsrcX3DBuffer.c. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/X3DBuffer_8c.html:81,Guid,Guide,81,doc/master/X3DBuffer_8c.html,https://root.cern,https://root.cern/doc/master/X3DBuffer_8c.html,2,['Guid'],['Guide']
Usability,". ROOT: graf3d/g3d/src/X3DBuffer.c Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. X3DBuffer.c. Go to the documentation of this file. 1/* @(#)root/g3d:$Id$ */; 2/* Author: Nenad Buncic 13/12/95*/; 3 ; 4#include ""X3DBuffer.h""; 5#include ""../../x3d/src/X3DDefs.h""; 6#include <stdio.h>; 7#include <stdlib.h>; 8 ; 9Size3D gVarSize3D;; 10Size3D* gFuncSize3D(){ return &gVarSize3D; }; 11 ; 12#if defined (WIN32) || defined (__MWERKS__); 13 void FillX3DBuffer (X3DBuffer *buff) { }; 14 int AllocateX3DBuffer () { return 0;}; 15#else; 16 ; 17int currPoint = 0;; 18int currSeg = 0;; 19int currPoly = 0;; 20 ; 21Color *colors;; 22point *points;; 23segment *segs;; 24polygon *polys;; 25 ; 26 ; 27int AllocateX3DBuffer (); 28{; 29/******************************************************************************; 30 Allocate memory for points, colors, segments and polygons.; 31 Returns 1 if OK, otherwise 0.; 32******************************************************************************/; 33 ; 34 int ret = 1;; 35 ; 36 points = NULL;; 37 colors = NULL;; 38 segs = NULL;; 39 polys = NULL;; 40 ; 41 /*; 42 * Allocate memory for points; 43 */; 44 ; 45 if (gSize3D.numPoints) {; 46 points = (point *) calloc(gSize3D.numPoints, sizeof (point));; 47 if (!points) {; 48 puts (""Unable to allocate memory for points !"");; 49 ret = 0;; 50 }; 51 }; 52 else return (0); /* if there are no points, return back */; 53 ; 54 ; 55 ; 56 /*; 57 * Allocate memory for colors; 58 */; 59 ; 60 colors = (Color *) calloc(28+4, sizeof (Color));; 61 if(!colors) {; 62 puts (""Unable to allocate memory for colors !"");; 63 ret = 0;; 64 }; 65 else {; 66 colors[ 0].red = 92; colors[ 0].green = 92; colors[0].blue = 92;; 67 colors[ 1].red = 122; colors[ 1].green = 122; colors[1].blue = 122;; 68 colors[ 2].red = 184; colors[ 2].green = 184; colors[2].blue = 184;; 69 colors[ 3].red = 215; colors[ 3].green = 215; colors[3].blue = 215;; 70 colors[ 4].red = 138; colors[ 4].green = 15; colors[4].",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/X3DBuffer_8c_source.html:78,Guid,Guide,78,doc/master/X3DBuffer_8c_source.html,https://root.cern,https://root.cern/doc/master/X3DBuffer_8c_source.html,1,['Guid'],['Guide']
Usability,". ROOT: graf3d/gl/inc/TGLUtil.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Enumerations |; Functions |; Variables ; TGLUtil.h File Reference. #include ""Rtypes.h""; #include ""TError.h""; #include <vector>; #include <cmath>; #include <cassert>; #include <utility>. Include dependency graph for TGLUtil.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGLUtil::TColorLocker;  ; class  TGLUtil::TDrawQualityModifier;  ; class  TGLUtil::TDrawQualityScaler;  ; class  TGL2DArray< T >;  ; class  TGLCapabilityEnabler;  ; class  TGLCapabilitySwitch;  ; class  TGLColor;  Class encapsulating color information in preferred GL format - an array of four unsigned bytes. More...;  ; class  TGLColorSet;  Class encapsulating a set of colors used throughout standard rendering. More...;  ; class  TGLDisableGuard;  ; class  TGLEnableGuard;  ; class  TGLFloatHolder;  ; class  TGLLevelPalette;  ; class  TGLLine3;  3D space, fixed length, line class, with direction / length 'vector', passing through point 'vertex'. More...;  ; class  TGLMatrix;  16 component (4x4) transform matrix - column MAJOR as per GL. More...;  ; class  TGLPlane;  3D plane class - of format Ax + By + Cz + D = 0 More...;  ; class  TGLRect;  Viewport (pixel base) 2D rectangle class. More...;  ; class  TGLSelectionBuffer;  ; class  TGLUtil;  Wrapper class for various misc static functions - error checking, draw helpers etc. More...;  ; class  TGLVector3;  3 component (x/y/z) vector class. More...;  ; class  TGLVertex3;  3 component (x/y/z) vertex class. More...;  ; class  Rgl::TGuardBase;  ; class  Rgl::TOneArgGuard< Func, Arg >;  ; class  Rgl::TTwoArgsGuard< Func, Arg1, Arg2 >;  . Namespaces; namespace  Rgl;  . Typedefs; typedef ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGLUtil_8h.html:78,Guid,Guide,78,doc/master/TGLUtil_8h.html,https://root.cern,https://root.cern/doc/master/TGLUtil_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: group Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; group Struct Reference. . Definition at line 50 of file TWinNTSystem.h. Public Attributes; int gr_gid;  ; char ** gr_mem;  ; char * gr_name;  ; char * gr_passwd;  . #include <TWinNTSystem.h>; Member Data Documentation. ◆ gr_gid. int group::gr_gid. Definition at line 53 of file TWinNTSystem.h. ◆ gr_mem. char** group::gr_mem. Definition at line 54 of file TWinNTSystem.h. ◆ gr_name. char* group::gr_name. Definition at line 51 of file TWinNTSystem.h. ◆ gr_passwd. char* group::gr_passwd. Definition at line 52 of file TWinNTSystem.h. Collaboration diagram for group:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; core/winnt/inc/TWinNTSystem.h. group. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:35 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structgroup.html:62,Guid,Guide,62,doc/master/structgroup.html,https://root.cern,https://root.cern/doc/master/structgroup.html,2,['Guid'],['Guide']
Usability,". ROOT: gui/browsable/src/RElement.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RElement.cxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#include <ROOT/Browsable/RElement.hxx>; 10 ; 11#include <ROOT/Browsable/RLevelIter.hxx>; 12#include <ROOT/Browsable/RItem.hxx>; 13#include <ROOT/RLogger.hxx>; 14 ; 15#include ""TBufferJSON.h""; 16 ; 17using namespace ROOT::Browsable;; 18using namespace std::string_literals;; 19 ; 20ROOT::Experimental::RLogChannel &ROOT::BrowsableLog(); 21{; 22 static ROOT::Experimental::RLogChannel sLog(""ROOT.Browsable"");; 23 return sLog;; 24}; 25 ; 26 ; 27/////////////////////////////////////////////////////////////////////; 28/// Returns child iterator (if any); 29 ; 30std::unique_ptr<RLevelIter> RElement::GetChildsIter(); 31{; 32 return nullptr;; 33}; 34 ; 35/////////////////////////////////////////////////////////////////////; 36/// Returns number of childs; 37/// By default creates iterator and iterates over all items; 38 ; 39int RElement::GetNumChilds(); 40{; 41 auto iter = GetChildsIter();; 42 if (!iter) return 0;; 43 int cnt = 0;; 44 while (iter->Next()) cnt++;; 45 return cnt;; 46}; 47 ; 48/////////////////////////////////////////////////////////////////////; 49/// Find item with specified name; 50/// Default implementation, should work for all; 51 ; 52RElement::EContentKind RElement::GetContentKind(const std::string &kind); 53{; 54 std::string lkind = kind;; 55 std::transform(lkind.begin(), lkind.end(), lkind.begin(), ::tolower);; 56 ; 57 if (lkind == ""text"") return kText;; 58 if ((lkind == ""image"") || (lkind == ""image64"")) re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RElement_8cxx_source.html:82,Guid,Guide,82,doc/master/RElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RElement_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: gui/browsable/src/RElement.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RElement.cxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#include <ROOT/Browsable/RElement.hxx>; 10 ; 11#include <ROOT/Browsable/RLevelIter.hxx>; 12#include <ROOT/Browsable/RItem.hxx>; 13#include <ROOT/RLogger.hxx>; 14 ; 15#include ""TBufferJSON.h""; 16 ; 17using namespace ROOT::Browsable;; 18using namespace std::string_literals;; 19 ; 20ROOT::Experimental::RLogChannel &ROOT::BrowsableLog(); 21{; 22 static ROOT::Experimental::RLogChannel sLog(""ROOT.Browsable"");; 23 return sLog;; 24}; 25 ; 26 ; 27/////////////////////////////////////////////////////////////////////; 28/// Returns child iterator (if any); 29 ; 30std::unique_ptr<RLevelIter> RElement::GetChildsIter(); 31{; 32 return nullptr;; 33}; 34 ; 35/////////////////////////////////////////////////////////////////////; 36/// Returns number of childs; 37/// By default creates iterator and iterates over all items; 38 ; 39int RElement::GetNumChilds(); 40{; 41 auto iter = GetChildsIter();; 42 if (!iter) return 0;; 43 int cnt = 0;; 44 while (iter->Next()) cnt++;; 45 return cnt;; 46}; 47 ; 48/////////////////////////////////////////////////////////////////////; 49/// Find item with specified name; 50/// Default implementation, should work for all; 51 ; 52RElement::EContentKind RElement::GetContentKind(const std::string &kind); 53{; 54 std::string lkind = kind;; 55 std::transform(lkind.begin(), lkind.end(), lkind.begin(), ::tolower);; 56 ; 57 if (lkind == ""text"") return kText;; 58 if ((lkind == ""image"") || (lkind == ""image64"")) ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RElement_8cxx_source.html:81,Guid,Guide,81,doc/v632/RElement_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RElement_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: gui/browserv7/inc/ROOT/RFileDialog.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RFileDialog.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <S.Linev@gsi.de>; 2// Date: 2019-10-31; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RFileDialog; 14#define ROOT7_RFileDialog; 15 ; 16#include <ROOT/RWebWindow.hxx>; 17#include <ROOT/RBrowserData.hxx>; 18 ; 19#include <vector>; 20#include <memory>; 21#include <stdint.h>; 22 ; 23namespace ROOT {; 24 ; 25namespace Details {; 26 class RWebWindowPlugin;; 27}; 28 ; 29/** \class ROOT::RFileDialog; 30\ingroup rbrowser; 31Initial message send to client to configure layout; 32*/; 33 ; 34/// function signature for file dialog call-backs; 35/// argument is selected file name; 36using RFileDialogCallback_t = std::function<void(const std::string &)>;; 37 ; 38 ; 39/** Web-based FileDialog */; 40 ; 41class RFileDialog {; 42 friend class Details::RWebWindowPlugin;; 43public:; 44 ; 45 enum EDialogTypes {; 46 kOpenFile,; 47 kSaveAs,; 48 kNewFile; 49 };; 50 ; 51protected:; 52 ; 53 EDialogTypes fKind{kOpenFile}; ///<! dialog kind OpenFile, SaveAs, NewFile; 54 std::string fTitle; ///<! title, when not specified default will be used; 55 RBrowserData fBrowsable; ///<! central browsing element; 56 bool fCanChangePath{true}; ///<! if working path can be changed via gui elements; 57 ; 58 std::shared_ptr<RWebWindow> fWebWindow; ///<! web window for file dialog; 59 ; 60 bool fDidSelect{false}; ///<! ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RFileDialog_8hxx_source.html:90,Guid,Guide,90,doc/master/RFileDialog_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RFileDialog_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/browserv7/inc/ROOT/RFileDialog.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RFileDialog.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <S.Linev@gsi.de>; 2// Date: 2019-10-31; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RFileDialog; 14#define ROOT7_RFileDialog; 15 ; 16#include <ROOT/RWebWindow.hxx>; 17#include <ROOT/RBrowserData.hxx>; 18 ; 19#include <vector>; 20#include <memory>; 21#include <stdint.h>; 22 ; 23namespace ROOT {; 24 ; 25namespace Details {; 26 class RWebWindowPlugin;; 27}; 28 ; 29/** \class ROOT::RFileDialog; 30\ingroup rbrowser; 31Initial message send to client to configure layout; 32*/; 33 ; 34/// function signature for file dialog call-backs; 35/// argument is selected file name; 36using RFileDialogCallback_t = std::function<void(const std::string &)>;; 37 ; 38 ; 39/** Web-based FileDialog */; 40 ; 41class RFileDialog {; 42 friend class Details::RWebWindowPlugin;; 43public:; 44 ; 45 enum EDialogTypes {; 46 kOpenFile,; 47 kSaveAs,; 48 kNewFile; 49 };; 50 ; 51protected:; 52 ; 53 EDialogTypes fKind{kOpenFile}; ///<! dialog kind OpenFile, SaveAs, NewFile; 54 std::string fTitle; ///<! title, when not specified default will be used; 55 RBrowserData fBrowsable; ///<! central browsing element; 56 bool fCanChangePath{true}; ///<! if working path can be changed via gui elements; 57 ; 58 std::shared_ptr<RWebWindow> fWebWindow; ///<! web window for file dialog; 59 ; 60 bool fDidSelect{false}; ///<! t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RFileDialog_8hxx_source.html:89,Guid,Guide,89,doc/v632/RFileDialog_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RFileDialog_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/browserv7/src/RBrowserData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RBrowserData.cxx. Go to the documentation of this file. 1// Author: Sergey Linev <S.Linev@gsi.de>; 2// Date: 2019-10-14; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include <ROOT/RBrowserData.hxx>; 14 ; 15#include <ROOT/Browsable/RGroup.hxx>; 16#include <ROOT/Browsable/RWrapper.hxx>; 17#include <ROOT/Browsable/RProvider.hxx>; 18#include <ROOT/Browsable/RLevelIter.hxx>; 19#include <ROOT/Browsable/TObjectHolder.hxx>; 20#include <ROOT/Browsable/RSysFile.hxx>; 21 ; 22#include <ROOT/RLogger.hxx>; 23 ; 24#include ""TFolder.h""; 25#include ""TROOT.h""; 26#include ""TBufferJSON.h""; 27#include ""TEnv.h""; 28 ; 29#include <algorithm>; 30#include <regex>; 31 ; 32using namespace ROOT;; 33using namespace std::string_literals;; 34 ; 35ROOT::Experimental::RLogChannel &ROOT::BrowserLog(); 36{; 37 static ROOT::Experimental::RLogChannel sLog(""ROOT.Browser"");; 38 return sLog;; 39}; 40 ; 41namespace ROOT {; 42 ; 43class RBrowserDataCleanup : public TObject {; 44 ; 45 RBrowserData &fData;; 46 ; 47public:; 48 RBrowserDataCleanup(RBrowserData &_data) : fData(_data) {}; 49 ; 50 void RecursiveRemove(TObject *obj) override; 51 {; 52 fData.RemoveFromCache(obj);; 53 }; 54};; 55 ; 56} // namespace ROOT; 57 ; 58 ; 59/** \class ROOT::RBrowserData; 60\ingroup rbrowser; 61\brief Way to browse (hopefully) everything in %ROOT; 62*/; 63 ; 64 ; 65////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RBrowserData_8cxx_source.html:86,Guid,Guide,86,doc/master/RBrowserData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RBrowserData_8cxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/browserv7/src/RBrowserData.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RBrowserData.cxx. Go to the documentation of this file. 1// Author: Sergey Linev <S.Linev@gsi.de>; 2// Date: 2019-10-14; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include <ROOT/RBrowserData.hxx>; 14 ; 15#include <ROOT/Browsable/RGroup.hxx>; 16#include <ROOT/Browsable/RWrapper.hxx>; 17#include <ROOT/Browsable/RProvider.hxx>; 18#include <ROOT/Browsable/RLevelIter.hxx>; 19#include <ROOT/Browsable/TObjectHolder.hxx>; 20#include <ROOT/Browsable/RSysFile.hxx>; 21 ; 22#include <ROOT/RLogger.hxx>; 23 ; 24#include ""TFolder.h""; 25#include ""TROOT.h""; 26#include ""TBufferJSON.h""; 27#include ""TEnv.h""; 28 ; 29#include <algorithm>; 30#include <regex>; 31 ; 32using namespace ROOT;; 33using namespace std::string_literals;; 34 ; 35ROOT::Experimental::RLogChannel &ROOT::BrowserLog(); 36{; 37 static ROOT::Experimental::RLogChannel sLog(""ROOT.Browser"");; 38 return sLog;; 39}; 40 ; 41namespace ROOT {; 42 ; 43class RBrowserDataCleanup : public TObject {; 44 ; 45 RBrowserData &fData;; 46 ; 47public:; 48 RBrowserDataCleanup(RBrowserData &_data) : fData(_data) {}; 49 ; 50 void RecursiveRemove(TObject *obj) override; 51 {; 52 fData.RemoveFromCache(obj);; 53 }; 54};; 55 ; 56} // namespace ROOT; 57 ; 58 ; 59/** \class ROOT::RBrowserData; 60\ingroup rbrowser; 61\brief Way to browse (hopefully) everything in %ROOT; 62*/; 63 ; 64 ; 65/////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RBrowserData_8cxx_source.html:85,Guid,Guide,85,doc/v632/RBrowserData_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RBrowserData_8cxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/gui/inc/TGButton.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGButton.h. Go to the documentation of this file. 1// @(#)root/gui:$Id$; 2// Author: Fons Rademakers 06/01/98; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGButton; 13#define ROOT_TGButton; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGButton, TGTextButton, TGPictureButton, TGCheckButton TGRadioButton //; 19// and TGSplitButton //; 20// //; 21// This header defines all GUI button widgets. //; 22// //; 23// TGButton is a button abstract base class. It defines general button //; 24// behaviour. //; 25// //; 26// Selecting a text or picture button will generate the event: //; 27// kC_COMMAND, kCM_BUTTON, button id, user data. //; 28// //; 29// Selecting a check button will generate the event: //; 30// kC_COMMAND, kCM_CHECKBUTTON, button id, user data. //; 31// //; 32// Selecting a radio button will generate the event: //; 33// kC_COMMAND, kCM_RADIOBUTTON, button id, user data. //; 34// //; 35// If a command string has been specified (via SetCommand()) then this //; 36// command string will be executed via the interpreter whenever a //; 37// button is selected. A command string can contain the macros: //; 38// $MSG -- kC_COMMAND, kCM[CHECK|RADIO]BUTTON packed message //; 39// (use GET_MSG() and GET_SUBMSG() to unpack) //; 40// $PARM1 -- button id //; 41// $PARM2 -- user data pointer //; 42// Before executing these macros are expanded into the respective //; 43// Long_t's //; 44// //; 45/////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGButton_8h_source.html:74,Guid,Guide,74,doc/master/TGButton_8h_source.html,https://root.cern,https://root.cern/doc/master/TGButton_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: gui/gui/inc/TGFrame.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TGFrame.h File Reference. #include ""TGWindow.h""; #include ""TQObject.h""; #include ""TGDimension.h""; #include ""TGGC.h""; #include ""TGFont.h""; #include ""TGLayout.h""; #include ""TGString.h"". Include dependency graph for TGFrame.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGCompositeFrame;  The base class for composite widgets (menu bars, list boxes, etc.). More...;  ; class  TGFrame;  A subclasses of TGWindow, and is used as base class for some simple widgets (buttons, labels, etc.). More...;  ; class  TGGroupFrame;  A composite frame with a border and a title. More...;  ; class  TGHeaderFrame;  Horizontal Frame used to contain header buttons and splitters in a list view. More...;  ; class  TGHorizontalFrame;  A composite frame that layout their children in horizontal way. More...;  ; class  TGMainFrame;  Defines top level windows that interact with the system Window Manager. More...;  ; class  TGMainFrame::TGMapKey;  ; class  TGTransientFrame;  Defines transient windows that typically are used for dialogs windows. More...;  ; class  TGVerticalFrame;  A composite frame that layout their children in vertical way. More...;  . Enumerations; enum  EDNDFlags { kIsDNDSource = (1ULL << ( 0 )); , kIsDNDTarget = (1ULL << ( 1 )); };  ; enum  EFrameCleanup { kNoCleanup = 0; , kLocalCleanup = 1; , kDeepCleanup = -1; };  ; enum  EFrameState { kIsVisible = (1ULL << ( 0 )); , kIsMapped = kIsVisible; , kIsArranged = (1ULL << ( 1 )); };  ; enum  EMWMHints { ;   kMWMFuncAll = (1ULL << ( 0 )); , kMWMFuncResize = (1ULL << ( 1 )); , kMWMFuncMove = (1ULL << ( 2 )); , kMWMFuncMinimize = (1ULL << ( 3 )); , ;   kMWMFuncMaximize = (1UL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGFrame_8h.html:76,Guid,Guide,76,doc/master/TGFrame_8h.html,https://root.cern,https://root.cern/doc/master/TGFrame_8h.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: gui/gui/inc/TRootBrowser.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRootBrowser.h. Go to the documentation of this file. 1// @(#)root/gui:$Id: 7cf312b9bc9940a03d7c0cee95eea0085dc9898c $; 2// Author: Bertrand Bellenot 26/09/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRootBrowser; 13#define ROOT_TRootBrowser; 14 ; 15#include ""TGFrame.h""; 16 ; 17#include ""TBrowserImp.h""; 18 ; 19class TGLayoutHints;; 20class TGTab;; 21class TGMenuBar;; 22class TGPopupMenu;; 23class TGStatusBar;; 24class TGVSplitter;; 25class TGHSplitter;; 26 ; 27 ; 28/** \class TBrowserPlugin; 29 \ingroup guiwidgets; 30 ; 31Helper class used to manage plugins (command or macro to be executed).; 32*/; 33 ; 34 ; 35class TBrowserPlugin : public TNamed; 36{; 37public:; 38 Int_t fTab{0}; ///< Tab number; 39 Int_t fSubTab{0}; ///< Tab element number; 40 TString fCommand; ///< Command to be executed; 41 ; 42 TBrowserPlugin(const char *name, const char *cmd = """", Int_t tab = 1,; 43 Int_t sub = -1) : TNamed(name, cmd), fTab(tab),; 44 fSubTab(sub), fCommand(cmd) { }; 45 ~TBrowserPlugin() override {}; 46 ; 47 void SetTab(Int_t tab) { fTab = tab; }; 48 void SetSubTab(Int_t sub) { fSubTab = sub; }; 49 void SetCommand(const char *cmd) { fCommand = cmd; }; 50 ; 51 ClassDefOverride(TBrowserPlugin, 0) // basic plugin description class; 52};; 53 ; 54class TRootBrowser : public TGMainFrame, public TBrowserImp {; 55 TRootBrowser(const TRootBrowser&) = delete;; 56 TRootBrowser& operator=(const TRootBrowser&) = delete;; 57 ; 58protected:; 59 ; 60 TGLayoutHints *fLH0, *fLH1, *fLH2, *fLH3; ///< Layout hints, part 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRootBrowser_8h_source.html:78,Guid,Guide,78,doc/master/TRootBrowser_8h_source.html,https://root.cern,https://root.cern/doc/master/TRootBrowser_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: gui/guihtml/src/TGHtmlTable.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; TGHtmlTable.cxx File Reference. #include <cstdlib>; #include <cstring>; #include <cctype>; #include <cmath>; #include ""TGHtml.h""; #include ""snprintf.h"". Include dependency graph for TGHtmlTable.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ColMin(A, B)   colMin[(A)-1][(B)-1];  ; #define ColReq(A, B)   colMin[(B)-1][(A)-1];  ; #define DFLT_BORDER   0;  ; #define DFLT_CELLPADDING   2;  ; #define DFLT_CELLSPACING_3D   5;  ; #define DFLT_CELLSPACING_FLAT   0;  ; #define DFLT_HSPACE   0;  ; #define DFLT_VSPACE   0;  ; #define MAX(A, B)   ((A) < (B) ? (B) : (A));  ; #define N   (HTML_MAX_COLUMNS+1);  ; #define SETMAX(A, B)   if ((A) < (B)) { (A) = (B); };  ; #define VAlign_Baseline   4;  ; #define VAlign_Bottom   2;  ; #define VAlign_Center   3;  ; #define VAlign_Top   1;  ; #define VAlign_Unknown   0;  . Macro Definition Documentation. ◆ ColMin. #define ColMin; (;  ; A, .  ; B . );    colMin[(A)-1][(B)-1]. ◆ ColReq. #define ColReq; (;  ; A, .  ; B . );    colMin[(B)-1][(A)-1]. ◆ DFLT_BORDER. #define DFLT_BORDER   0. Definition at line 38 of file TGHtmlTable.cxx. ◆ DFLT_CELLPADDING. #define DFLT_CELLPADDING   2. Definition at line 41 of file TGHtmlTable.cxx. ◆ DFLT_CELLSPACING_3D. #define DFLT_CELLSPACING_3D   5. Definition at line 39 of file TGHtmlTable.cxx. ◆ DFLT_CELLSPACING_FLAT. #define DFLT_CELLSPACING_FLAT   0. Definition at line 40 of file TGHtmlTable.cxx. ◆ DFLT_HSPACE. #define DFLT_HSPACE   0. Definition at line 42 of file TGHtmlTable.cxx. ◆ DFLT_VSPACE. #define DFLT_VSPACE   0. Definition at line 43 of file TGHtmlTable.cxx. ◆ MAX. #define MAX; (;  ; A, .  ; B . );    ((A) < (B) ? (B) : (A)). Definition at line 47 of file TGHtmlTable.cxx. ◆ N. #define N   (HTML_MAX_COLUMNS+1). ◆ SETMAX. #define SETMAX; (;  ; A, .  ; B . );    if ((A) < (B)) { (A) = (B); }. Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGHtmlTable_8cxx.html:86,Guid,Guide,86,doc/master/TGHtmlTable_8cxx.html,https://root.cern,https://root.cern/doc/master/TGHtmlTable_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: gui/guihtml/src/TGHtmlTable.cxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; TGHtmlTable.cxx File Reference. #include <cstdlib>; #include <cstring>; #include <cctype>; #include <cmath>; #include ""TGHtml.h""; #include ""snprintf.h"". Include dependency graph for TGHtmlTable.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ColMin(A, B)   colMin[(A)-1][(B)-1];  ; #define ColReq(A, B)   colMin[(B)-1][(A)-1];  ; #define DFLT_BORDER   0;  ; #define DFLT_CELLPADDING   2;  ; #define DFLT_CELLSPACING_3D   5;  ; #define DFLT_CELLSPACING_FLAT   0;  ; #define DFLT_HSPACE   0;  ; #define DFLT_VSPACE   0;  ; #define MAX(A, B)   ((A) < (B) ? (B) : (A));  ; #define N   (HTML_MAX_COLUMNS+1);  ; #define SETMAX(A, B)   if ((A) < (B)) { (A) = (B); };  ; #define VAlign_Baseline   4;  ; #define VAlign_Bottom   2;  ; #define VAlign_Center   3;  ; #define VAlign_Top   1;  ; #define VAlign_Unknown   0;  . Macro Definition Documentation. ◆ ColMin. #define ColMin; (;  ; A, .  ; B . );    colMin[(A)-1][(B)-1]. ◆ ColReq. #define ColReq; (;  ; A, .  ; B . );    colMin[(B)-1][(A)-1]. ◆ DFLT_BORDER. #define DFLT_BORDER   0. Definition at line 38 of file TGHtmlTable.cxx. ◆ DFLT_CELLPADDING. #define DFLT_CELLPADDING   2. Definition at line 41 of file TGHtmlTable.cxx. ◆ DFLT_CELLSPACING_3D. #define DFLT_CELLSPACING_3D   5. Definition at line 39 of file TGHtmlTable.cxx. ◆ DFLT_CELLSPACING_FLAT. #define DFLT_CELLSPACING_FLAT   0. Definition at line 40 of file TGHtmlTable.cxx. ◆ DFLT_HSPACE. #define DFLT_HSPACE   0. Definition at line 42 of file TGHtmlTable.cxx. ◆ DFLT_VSPACE. #define DFLT_VSPACE   0. Definition at line 43 of file TGHtmlTable.cxx. ◆ MAX. #define MAX; (;  ; A, .  ; B . );    ((A) < (B) ? (B) : (A)). Definition at line 47 of file TGHtmlTable.cxx. ◆ N. #define N   (HTML_MAX_COLUMNS+1). ◆ SETMAX. #define SETMAX; (;  ; A, .  ; B . );    if ((A) < (B)) { (A) = (B); }. Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TGHtmlTable_8cxx.html:85,Guid,Guide,85,doc/v632/TGHtmlTable_8cxx.html,https://root.cern,https://root.cern/doc/v632/TGHtmlTable_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: gui/webdisplay/inc/ROOT/RWebWindow.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebWindow.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2017-10-16; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RWebWindow; 14#define ROOT7_RWebWindow; 15 ; 16#include <ROOT/RWebDisplayHandle.hxx>; 17 ; 18#include ""ROOT/RConfig.hxx""; 19 ; 20#include <memory>; 21#include <vector>; 22#include <string>; 23#include <queue>; 24#include <map>; 25#include <functional>; 26#include <mutex>; 27#include <thread>; 28#include <chrono>; 29 ; 30class THttpCallArg;; 31class THttpServer;; 32 ; 33namespace ROOT {; 34 ; 35/// function signature for connect/disconnect call-backs; 36/// argument is connection id; 37using WebWindowConnectCallback_t = std::function<void(unsigned)>;; 38 ; 39/// function signature for call-backs from the window clients; 40/// first argument is connection id, second is received data; 41using WebWindowDataCallback_t = std::function<void(unsigned, const std::string &)>;; 42 ; 43/// function signature for waiting call-backs; 44/// Such callback used when calling thread need to waits for some special data,; 45/// but wants to run application event loop; 46/// As argument, spent time in second will be provided; 47/// Waiting will be performed until function returns non-zero value; 48using WebWindowWaitFunc_t = std::function<int(double)>;; 49 ; 50class RFileDialog;; 51class RWebWindowsManager;; 52c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindow_8hxx_source.html:90,Guid,Guide,90,doc/master/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindow_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/webdisplay/inc/ROOT/RWebWindow.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebWindow.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2017-10-16; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RWebWindow; 14#define ROOT7_RWebWindow; 15 ; 16#include <ROOT/RWebDisplayHandle.hxx>; 17 ; 18#include <memory>; 19#include <vector>; 20#include <string>; 21#include <queue>; 22#include <map>; 23#include <functional>; 24#include <mutex>; 25#include <thread>; 26#include <chrono>; 27 ; 28class THttpCallArg;; 29class THttpServer;; 30 ; 31namespace ROOT {; 32 ; 33/// function signature for connect/disconnect call-backs; 34/// argument is connection id; 35using WebWindowConnectCallback_t = std::function<void(unsigned)>;; 36 ; 37/// function signature for call-backs from the window clients; 38/// first argument is connection id, second is received data; 39using WebWindowDataCallback_t = std::function<void(unsigned, const std::string &)>;; 40 ; 41/// function signature for waiting call-backs; 42/// Such callback used when calling thread need to waits for some special data,; 43/// but wants to run application event loop; 44/// As argument, spent time in second will be provided; 45/// Waiting will be performed until function returns non-zero value; 46using WebWindowWaitFunc_t = std::function<int(double)>;; 47 ; 48class RFileDialog;; 49class RWebWindowsManager;; 50class RWebWindowWSHandler;; 51 ; 52cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindow_8hxx_source.html:89,Guid,Guide,89,doc/v632/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindow_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/webdisplay/inc/ROOT/RWebWindowsManager.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebWindowsManager.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2017-10-16; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RWebWindowsManager; 14#define ROOT7_RWebWindowsManager; 15 ; 16#include <memory>; 17#include <string>; 18#include <thread>; 19#include <mutex>; 20#include <functional>; 21 ; 22#include ""THttpEngine.h""; 23 ; 24#include <ROOT/RWebWindow.hxx>; 25 ; 26class THttpServer;; 27class THttpWSHandler;; 28class TExec;; 29 ; 30namespace ROOT {; 31 ; 32/// function signature for catching show calls of arbitrary RWebWindow; 33/// if returns true, normal show procedure will not be invoked; 34using WebWindowShowCallback_t = std::function<bool(RWebWindow &, const RWebDisplayArgs &)>;; 35 ; 36/// function signature for callback when RWebWindow destroyed; 37using WebWindowDeleteCallback_t = std::function<void(RWebWindow &)>;; 38 ; 39 ; 40class RWebWindowsManager {; 41 ; 42 friend class RWebWindow;; 43 ; 44private:; 45 std::unique_ptr<THttpServer> fServer; ///<! central communication with the all used displays; 46 std::string fAddr; ///<! HTTP address of the server; 47 std::string fSessionKey; ///<! secret session key used on client to code connections keys; 48 bool fUseSessionKey{false}; ///<! is session key has to be used for data signing; 49 std::recursive_mutex fMutex; ///<! main mutex, used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html:98,Guid,Guide,98,doc/master/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/webdisplay/inc/ROOT/RWebWindowsManager.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebWindowsManager.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2017-10-16; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RWebWindowsManager; 14#define ROOT7_RWebWindowsManager; 15 ; 16#include <memory>; 17#include <string>; 18#include <thread>; 19#include <mutex>; 20#include <functional>; 21 ; 22#include ""THttpEngine.h""; 23 ; 24#include <ROOT/RWebWindow.hxx>; 25 ; 26class THttpServer;; 27class THttpWSHandler;; 28class TExec;; 29 ; 30namespace ROOT {; 31 ; 32/// function signature for catching show calls of arbitrary RWebWindow; 33/// if returns true, normal show procedure will not be invoked; 34using WebWindowShowCallback_t = std::function<bool(RWebWindow &, const RWebDisplayArgs &)>;; 35 ; 36class RWebWindowsManager {; 37 ; 38 friend class RWebWindow;; 39 ; 40private:; 41 std::unique_ptr<THttpServer> fServer; ///<! central communication with the all used displays; 42 std::string fAddr; ///<! HTTP address of the server; 43 std::string fSessionKey; ///<! secret session key used on client to code connections keys; 44 bool fUseSessionKey{false}; ///<! is session key has to be used for data signing; 45 std::recursive_mutex fMutex; ///<! main mutex, used for window creations; 46 unsigned fIdCnt{0}; ///<! counter for identifiers; 47 bool fUseHttpThrd{false}; ///<! use special thread for THttpServer; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindowsManager_8hxx_source.html:97,Guid,Guide,97,doc/v632/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindowsManager_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/webdisplay/src/RWebDisplayArgs.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebDisplayArgs.cxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2018-10-24; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include <ROOT/RWebDisplayArgs.hxx>; 14 ; 15#include <ROOT/RConfig.hxx>; 16#include <ROOT/RLogger.hxx>; 17#include <ROOT/RWebWindow.hxx>; 18 ; 19#include ""TROOT.h""; 20#include <string>; 21 ; 22using namespace ROOT;; 23 ; 24ROOT::Experimental::RLogChannel &ROOT::WebGUILog(); 25{; 26 static ROOT::Experimental::RLogChannel sLog(""ROOT.WebGUI"");; 27 return sLog;; 28}; 29 ; 30 ; 31/** \class ROOT::RWebDisplayArgs; 32\ingroup webdisplay; 33 ; 34Holds different arguments for starting browser with RWebDisplayHandle::Display() method; 35 ; 36*/; 37 ; 38///////////////////////////////////////////////////////////////////////////////////////////; 39/// Default constructor.; 40/// Browser kind configured from gROOT->GetWebDisplay(); 41 ; 42RWebDisplayArgs::RWebDisplayArgs(); 43{; 44 SetBrowserKind("""");; 45}; 46 ; 47///////////////////////////////////////////////////////////////////////////////////////////; 48/// Constructor.; 49/// Browser kind specified as std::string.; 50/// See \ref SetBrowserKind method for description of allowed parameters; 51 ; 52RWebDisplayArgs::RWebDisplayArgs(const std::string &browser); 53{; 54 SetBrowserKind(browser);; 55}; 56 ; 57///////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebDisplayArgs_8cxx_source.html:90,Guid,Guide,90,doc/master/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RWebDisplayArgs_8cxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: gui/webdisplay/src/RWebDisplayArgs.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebDisplayArgs.cxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2018-10-24; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include <ROOT/RWebDisplayArgs.hxx>; 14 ; 15#include <ROOT/RConfig.hxx>; 16#include <ROOT/RLogger.hxx>; 17#include <ROOT/RWebWindow.hxx>; 18 ; 19#include ""TROOT.h""; 20#include <string>; 21 ; 22using namespace ROOT;; 23 ; 24ROOT::Experimental::RLogChannel &ROOT::WebGUILog(); 25{; 26 static ROOT::Experimental::RLogChannel sLog(""ROOT.WebGUI"");; 27 return sLog;; 28}; 29 ; 30 ; 31/** \class ROOT::RWebDisplayArgs; 32\ingroup webdisplay; 33 ; 34Holds different arguments for starting browser with RWebDisplayHandle::Display() method; 35 ; 36*/; 37 ; 38///////////////////////////////////////////////////////////////////////////////////////////; 39/// Default constructor.; 40/// Browser kind configured from gROOT->GetWebDisplay(); 41 ; 42RWebDisplayArgs::RWebDisplayArgs(); 43{; 44 SetBrowserKind("""");; 45}; 46 ; 47///////////////////////////////////////////////////////////////////////////////////////////; 48/// Constructor.; 49/// Browser kind specified as std::string.; 50/// See \ref SetBrowserKind method for description of allowed parameters; 51 ; 52RWebDisplayArgs::RWebDisplayArgs(const std::string &browser); 53{; 54 SetBrowserKind(browser);; 55}; 56 ; 57////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html:89,Guid,Guide,89,doc/v632/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: h1analysis Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; h1analysis Class Reference. . Definition at line 24 of file h1analysis.h. Public Member Functions;  h1analysis (TTree *tree=nullptr);  ;  ~h1analysis () override;  ; void Begin (TTree *tree) override;  ; TList * GetOutputList () const override;  ; void Init (TTree *tree) override;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; Bool_t Process (Long64_t entry) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void Reset ();  ; void SetInputList (TList *input) override;  ; void SetObject (TObject *obj) override;  ; void SetOption (const char *option) override;  ; void SlaveBegin (TTree *tree) override;  ; void SlaveTerminate () override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base imp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysis.html:66,Guid,Guide,66,doc/master/classh1analysis.html,https://root.cern,https://root.cern/doc/master/classh1analysis.html,1,['Guid'],['Guide']
Usability,". ROOT: h1analysisTreeReader Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; h1analysisTreeReader Class Reference. . Definition at line 12 of file h1analysisTreeReader.h. Public Member Functions;  h1analysisTreeReader (TTree *=nullptr);  ;  ~h1analysisTreeReader () override;  ; void Begin (TTree *) override;  ; TList * GetOutputList () const override;  ; void Init (TTree *myTree) override;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; Bool_t Process (Long64_t entry) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void Reset ();  ; void SetInputList (TList *input) override;  ; void SetObject (TObject *obj) override;  ; void SetOption (const char *option) override;  ; void SlaveBegin (TTree *) override;  ; void SlaveTerminate () override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysisTreeReader.html:76,Guid,Guide,76,doc/master/classh1analysisTreeReader.html,https://root.cern,https://root.cern/doc/master/classh1analysisTreeReader.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hbook/src/THbookFile.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros |; Functions |; Variables ; THbookFile.cxx File Reference. #include <cstdlib>; #include <cstring>; #include <cctype>; #include ""TROOT.h""; #include ""THbookFile.h""; #include ""TH2.h""; #include ""THbookTree.h""; #include ""THbookBranch.h""; #include ""THbookKey.h""; #include ""TGraph.h""; #include ""TProfile.h""; #include ""TTreeFormula.h""; #include ""TLeafI.h""; #include ""TBrowser.h""; #include ""TSystem.h""; #include ""TMath.h""; #include ""strlcpy.h""; #include ""snprintf.h"". Include dependency graph for THbookFile.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define DEFCHAR   const char*;  ; #define hbnam   hbnam_;  ; #define hbnamc   hbnamc_;  ; #define hbname   hbname_;  ; #define hcbits   hcbits_;  ; #define hcbook   hcbook_;  ; #define hcdir   hcdir_;  ; #define hdcofl   hdcofl_;  ; #define hdelet   hdelet_;  ; #define hgive   hgive_;  ; #define hgiven   hgiven_;  ; #define hgnf   hgnf_;  ; #define hgnpar   hgnpar_;  ; #define hgnt   hgnt_;  ; #define hgnt1   hgnt1_;  ; #define hgntf   hgntf_;  ; #define hi   hi_;  ; #define hie   hie_;  ; #define hif   hif_;  ; #define hij   hij_;  ; #define hije   hije_;  ; #define hijxy   hijxy_;  ; #define hix   hix_;  ; #define hldir   hldir_;  ; #define hlimit   hlimit_;  ; #define hmaxim   hmaxim_;  ; #define hminim   hminim_;  ; #define hnoent   hnoent_;  ; #define hntvar2   hntvar2_;  ; #define hntvar3   hntvar3_;  ; #define hrend   hrend_;  ; #define hrin   hrin_;  ; #define hropen   hropen_;  ; #define PASSCHAR(string)   string;  ; #define pawc   pawc_;  ; #define PAWC_SIZE   4000000;  ; #define quest   quest_;  ; #define rzcl   rzcl_;  ; #defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THbookFile_8cxx.html:84,Guid,Guide,84,doc/master/THbookFile_8cxx.html,https://root.cern,https://root.cern/doc/master/THbookFile_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hbook/src/THbookFile.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THbookFile.cxx. Go to the documentation of this file. 1// @(#)root/hbook:$Id$; 2// Author: Rene Brun 18/02/2002; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class THbookFile; 13 \ingroup Hist; 14 This class is an interface to the Hbook objects in Hbook files.; 15 Any Hbook object (1-D, 2-D, Profile, RWN or CWN can be read; 16 ; 17 NB: a THbookFile can only be used in READ mode; 18 Use the utility in $ROOTSYS/bin/h2root to convert Hbook to Root; 19 ; 20 Example of use:; 21 ; 22 gSystem->Load(""libHbook"");; 23 THbookFile f(""myfile.hbook"");; 24 f.ls();; 25 TH1F *h1 = (TH1F*)f.Get(1); //import histogram ID=1 in h1; 26 h1->Fit(""gaus"");; 27 THbookTree *T = (THbookTree*)f.Get(111); //import ntuple header; 28 T->Print(); //show the Hbook ntuple variables; 29 T->Draw(""x"",""y<0""); // as in normal TTree::Draw; 30 ; 31 THbookFile can be browsed via TBrowser.; 32*/; 33 ; 34#include <cstdlib>; 35#include <cstring>; 36#include <cctype>; 37 ; 38#include ""TROOT.h""; 39#include ""THbookFile.h""; 40#include ""TH2.h""; 41#include ""THbookTree.h""; 42#include ""THbookBranch.h""; 43#include ""THbookKey.h""; 44#include ""TGraph.h""; 45#include ""TProfile.h""; 46#include ""TTreeFormula.h""; 47#include ""TLeafI.h""; 48#include ""TBrowser.h""; 49#include ""TSystem.h""; 50#include ""TMath.h""; 51#include ""strlcpy.h""; 52#include ""snprintf.h""; 53 ; 54// NOTE: THe following comments and declarations are a duplicate; 55// of those in main/src/h2root.cxx; 56 ; 57// Note that with gcc3.4 or above the size of PAWC_SIZE must be the same; 58// as in the Fortran ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THbookFile_8cxx_source.html:81,Guid,Guide,81,doc/master/THbookFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THbookFile_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/HFitInterface.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Enumerations |; Functions ; HFitInterface.h File Reference. #include ""TFitResultPtr.h"". Include dependency graph for HFitInterface.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  ; namespace  ROOT::Math;  . Enumerations; enum class  ROOT::Fit::EChisquareType { ROOT::Fit::kNeyman = 0; , ROOT::Fit::kPLikeRatio; , ROOT::Fit::kPearson; };  ; enum class  ROOT::Fit::EFitObjectType { ROOT::Fit::kHistogram; , ROOT::Fit::kGraph; };  . Functions; double ROOT::Fit::Chisquare (const TGraph &h1, TF1 &f1, bool useRange);  compute the chi2 value for a graph given a function (see TGraph::Chisquare) ;  ; double ROOT::Fit::Chisquare (const TH1 &h1, TF1 &f1, bool useRange, EChisquareType type);  compute the chi2 value for an histogram given a function (see TH1::Chisquare for the documentation) ;  ; void ROOT::Fit::FillData (BinData &dv, const TGraph *gr, TF1 *func=nullptr);  fill the data vector from a TGraph. ;  ; void ROOT::Fit::FillData (BinData &dv, const TGraph2D *gr, TF1 *func=nullptr);  fill the data vector from a TGraph2D. ;  ; void ROOT::Fit::FillData (BinData &dv, const TH1 *hist, TF1 *func=nullptr);  fill the data vector from a TH1. ;  ; void ROOT::Fit::FillData (BinData &dv, const THnBase *hist, TF1 *func=nullptr);  fill the data vector from a THnBase. ;  ; void ROOT::Fit::FillData (BinData &dv, const TMultiGraph *gr, TF1 *func=nullptr);  fill the data vector from a TMultiGraph. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8h.html:84,Guid,Guide,84,doc/master/HFitInterface_8h.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/HFitInterface.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. HFitInterface.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: L. Moneta Thu Aug 31 10:40:20 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class HFitInterface; 12// set of free functions used to couple the ROOT data object with the fitting classes; 13 ; 14// avoid including this file when running CINT since free functions cannot be re-defined; 15 ; 16#ifndef ROOT_HFitInterface; 17#define ROOT_HFitInterface; 18 ; 19 ; 20class TH1;; 21class THnBase;; 22class TF1;; 23class TF2;; 24class TGraph;; 25class TGraphErrors;; 26class TGraph2D;; 27class TMultiGraph;; 28struct Foption_t;; 29 ; 30#include ""TFitResultPtr.h""; 31 ; 32namespace ROOT {; 33 ; 34 namespace Math {; 35 class MinimizerOptions;; 36 }; 37 ; 38 namespace Fit {; 39 ; 40 //class BinData;; 41 ; 42 class FitResult;; 43 class DataRange;; 44 class BinData;; 45 class UnBinData;; 46 class SparseData;; 47 ; 48 enum class EFitObjectType {; 49 kHistogram,; 50 kGraph; 51 };; 52 ; 53 enum class EChisquareType {; 54 kNeyman = 0,; 55 kPLikeRatio,; 56 kPearson; 57 };; 58 ; 59 ; 60 ; 61 /**; 62 Decode list of options into fitOption; 63 */; 64 void FitOptionsMake(EFitObjectType type, const char *option, Foption_t &fitOption);; 65 ; 66 /**; 67 fitting function for a TH1 (called from TH1::Fit); 68 */; 69 TFitResultPtr FitObject(TH1 * h1, TF1 *f1, Foption_t & option, const ROOT::Math::MinimizerOptions & moption, const char *goption, ROOT::Fit::DataRange & range);; 70 ; 71 /**; 72 fitting function for a TGraph (called from TGraph::Fit); 73 */; 74 TFitResultPtr FitObject(TGraph * gr, TF1 *f1 , Foption_t & option , const ROOT::Math::MinimizerOptions & moption, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8h_source.html:81,Guid,Guide,81,doc/master/HFitInterface_8h_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/Math/WrappedMultiTF1.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; WrappedMultiTF1.h File Reference. #include ""Math/IParamFunction.h""; #include ""TF1.h""; #include <string>; #include <vector>; #include <algorithm>. Include dependency graph for WrappedMultiTF1.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Math::GeneralHessianCalc< T >;  ; struct  ROOT::Math::GeneralHessianCalc< double >;  ; struct  ROOT::Math::GeneralLinearFunctionDerivation< T >;  Auxiliar class to bypass the (provisional) lack of vectorization in TFormula::EvalPar. More...;  ; struct  ROOT::Math::GeneralLinearFunctionDerivation< double >;  ; class  ROOT::Math::WrappedMultiTF1Templ< T >;  Class to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface of multi-dimensions to be used in the ROOT::Math numerical algorithm. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Math;  ; namespace  ROOT::Math::Internal;  . Typedefs; using ROOT::Math::WrappedMultiTF1 = WrappedMultiTF1Templ< double >;  . Functions; TF1 * ROOT::Math::Internal::CopyTF1Ptr (const TF1 *funcToCopy);  ; double ROOT::Math::Internal::DerivPrecision (double eps);  . histhistincMathWrappedMultiTF1.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedMultiTF1_8h.html:91,Guid,Guide,91,doc/master/WrappedMultiTF1_8h.html,https://root.cern,https://root.cern/doc/master/WrappedMultiTF1_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/Math/WrappedMultiTF1.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. WrappedMultiTF1.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta Wed Sep 6 09:52:26 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class WrappedTFunction; 12 ; 13#ifndef ROOT_Math_WrappedMultiTF1; 14#define ROOT_Math_WrappedMultiTF1; 15 ; 16 ; 17#include ""Math/IParamFunction.h""; 18 ; 19#include ""TF1.h""; 20#include <string>; 21#include <vector>; 22#include <algorithm>; 23 ; 24namespace ROOT {; 25 ; 26 namespace Math {; 27 ; 28 namespace Internal {; 29 double DerivPrecision(double eps);; 30 TF1 *CopyTF1Ptr(const TF1 *funcToCopy);; 31 };; 32 ; 33 /**; 34 Class to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface; 35 of multi-dimensions to be used in the ROOT::Math numerical algorithm.; 36 This wrapper class does not own the TF1 pointer, so it assumes it exists during the wrapper lifetime.; 37 The class copy the TF1 pointer only when it owns it.; 38 ; 39 The class from ROOT version 6.03 does not contain anymore a copy of the parameters. The parameters are; 40 stored in the TF1 class.; 41 ; 42 @ingroup CppFunctions; 43 */; 44 ; 45 //LM note: are there any issues when cloning the class for the parameters that are not copied anymore ??; 46 ; 47 template<class T>; 48 class WrappedMultiTF1Templ: virtual public ROOT::Math::IParametricGradFunctionMultiDimTempl<T> {; 49 ; 50 public:; 51 ; 52 typedef ROOT::Math::IParametricGradFunctionMultiDimTempl<T> BaseParamFunc;; 53 typedef typename ROOT::Math::IParametricFunctionMultiDimTempl<T>::BaseFunc BaseFunc;; 54 ; 55 /**; 56 constructor from a function pointer to a TF1; 57 If dim = 0 dimension is taken from TF1::GetNdim()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedMultiTF1_8h_source.html:88,Guid,Guide,88,doc/master/WrappedMultiTF1_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedMultiTF1_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TAxis.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TAxis.h File Reference. #include ""TNamed.h""; #include ""TAttAxis.h""; #include ""TArrayD.h"". Include dependency graph for TAxis.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TAxis;  Class to manage histogram axis. More...;  . histhistincTAxis.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8h.html:76,Guid,Guide,76,doc/master/TAxis_8h.html,https://root.cern,https://root.cern/doc/master/TAxis_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TAxis.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAxis.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TAxis; 13#define ROOT_TAxis; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TAxis //; 19// //; 20// Axis class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TAttAxis.h""; 26#include ""TArrayD.h""; 27 ; 28class THashList;; 29class TAxisModLab;; 30 ; 31class TAxis : public TNamed, public TAttAxis {; 32 ; 33private:; 34 Int_t fNbins; ///< Number of bins; 35 Double_t fXmin; ///< Low edge of first bin; 36 Double_t fXmax; ///< Upper edge of last bin; 37 TArrayD fXbins; ///< Bin edges array in X; 38 Int_t fFirst; ///< First bin to display; 39 Int_t fLast; ///< Last bin to display; 40 UShort_t fBits2; ///< Second bit status word; 41 Bool_t fTimeDisplay; ///< On/off displaying time values instead of numerics; 42 TString fTimeFormat; ///< Date&time format, ex: 09/12/99 12:34:00; 43 TObject *fParent; ///<! Object owning this axis; 44 THashList *fLabels; ///< List of labels; 45 TList *fModLabs; ///< List of modified labels; 46 ; 47 /// TAxis extra status bits (stored in fBits2); 48 enum {; 49 kAlphanumeric = BIT(0), ///< Axis is alphanumeric; 50 kCanExtend = BIT(1), ///< Axis can be extended; 51 kNotAlpha = BIT(2) ///< Axis is forced to be not alphanumeric; 52 };; 53 ; 54 Bool_t HasBinWithoutLabel() const;; 55 ; 56 ; 57 TAxisModLab ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8h_source.html:73,Guid,Guide,73,doc/master/TAxis_8h_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TEfficiency.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEfficiency.h. Go to the documentation of this file. 1#ifndef ROOT_TEfficiency; 2#define ROOT_TEfficiency; 3 ; 4//standard header; 5#include <vector>; 6#include <utility>; 7 ; 8//ROOT header; 9#include ""TNamed.h""; 10 ; 11#include ""TAttLine.h""; 12 ; 13#include ""TAttFill.h""; 14 ; 15#include ""TAttMarker.h""; 16 ; 17#include ""TFitResultPtr.h""; 18 ; 19 ; 20class TCollection;; 21class TF1;; 22class TGraphAsymmErrors;; 23class TGraph2DAsymmErrors;; 24class TH1;; 25class TH2;; 26class TList;; 27 ; 28class TEfficiency: public TNamed, public TAttLine, public TAttFill, public TAttMarker; 29{; 30public:; 31 /// Enumeration type for different statistic options for calculating confidence intervals; 32 /// kF* ... frequentist methods; kB* ... bayesian methods; 33 enum EStatOption {; 34 kFCP = 0, ///< Clopper-Pearson interval (recommended by PDG); 35 kFNormal, ///< Normal approximation; 36 kFWilson, ///< Wilson interval; 37 kFAC, ///< Agresti-Coull interval; 38 kFFC, ///< Feldman-Cousins interval; 39 kBJeffrey, ///< Jeffrey interval (Prior ~ Beta(0.5,0.5); 40 kBUniform, ///< Prior ~ Uniform = Beta(1,1); 41 kBBayesian, ///< User specified Prior ~ Beta(fBeta_alpha,fBeta_beta); 42 kMidP ///< Mid-P Lancaster interval; 43 };; 44 ; 45protected:; 46 ; 47 Double_t fBeta_alpha; ///< Global parameter for prior beta distribution (default = 1); 48 Double_t fBeta_beta; ///< Global parameter for prior beta distribution (default = 1); 49 std::vector<std::pair<Double_t, Double_t> > fBeta_bin_params; ///< Parameter for prior beta distribution different bin by bin; 50 ///< (default vector is empty); 51 Double_t (*fBoundary)(Double_t,Double_t,Double_t,Bool_t); ///<! Pointer to a method calculating the boundaries of confidence intervals; 52 Double_t fConfLevel; ///< Confidence level (default = 0.683, 1 sigma); 53 TDirectory* fDirectory; ///<! Pointer to directory holding this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8h_source.html:79,Guid,Guide,79,doc/master/TEfficiency_8h_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF1.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; TF1.h File Reference. #include ""RConfigure.h""; #include <functional>; #include <cassert>; #include <memory>; #include <string>; #include <vector>; #include ""TFormula.h""; #include ""TMethodCall.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TF1AbsComposition.h""; #include ""TMath.h""; #include ""Math/Types.h""; #include ""Math/ParamFunctor.h"". Include dependency graph for TF1.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Internal::GetFunctorType< T >;  Internal class used by TF1 for obtaining the type from a functor out of the set of valid operator() signatures. More...;  ; struct  ROOT::Internal::GetFunctorType< T(F::*)(const T *, const double *) const >;  ; struct  ROOT::Internal::GetFunctorType< T(F::*)(const T *, const double *)>;  ; struct  ROOT::Internal::GetFunctorType< T(F::*)(T *, double *) const >;  ; struct  ROOT::Internal::GetFunctorType< T(F::*)(T *, double *)>;  ; class  TF1;  1-Dim function class More...;  ; struct  ROOT::Internal::TF1Builder< Func >;  Internal class used by TF1 for defining template specialization for different TF1 constructors More...;  ; struct  ROOT::Internal::TF1Builder< const char * >;  TF1 building from a string used to build a TFormula based on a lambda function. More...;  ; struct  ROOT::Internal::TF1Builder< Func * >;  ; struct  TF1::TF1FunctorPointer;  ; struct  TF1::TF1FunctorPointerImpl< T >;  ; class  TF1Parameters;  TF1 Parameters class. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8h.html:74,Guid,Guide,74,doc/master/TF1_8h.html,https://root.cern,https://root.cern/doc/master/TF1_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF1.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 18/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// ---------------------------------- F1.h; 12 ; 13#ifndef ROOT_TF1; 14#define ROOT_TF1; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TF1 //; 19// //; 20// The Parametric 1-D function //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""RConfigure.h""; 25#include <functional>; 26#include <cassert>; 27#include <memory>; 28#include <string>; 29#include <vector>; 30#include ""TFormula.h""; 31#include ""TMethodCall.h""; 32#include ""TAttLine.h""; 33#include ""TAttFill.h""; 34#include ""TAttMarker.h""; 35#include ""TF1AbsComposition.h""; 36#include ""TMath.h""; 37#include ""Math/Types.h""; 38#include ""Math/ParamFunctor.h""; 39 ; 40#include <string>; 41 ; 42class TF1;; 43class TH1;; 44class TAxis;; 45class TRandom;; 46 ; 47namespace ROOT {; 48 namespace Fit {; 49 class FitResult;; 50 }; 51}; 52 ; 53class TF1Parameters {; 54public:; 55 TF1Parameters() {} // needed for the I/O; 56 TF1Parameters(Int_t npar) :; 57 fParameters(std::vector<Double_t>(npar)),; 58 fParNames(std::vector<std::string>(npar)); 59 {; 60 for (int i = 0; i < npar; ++i) {; 61 fParNames[i] = std::string(TString::Format(""p%d"", i).Data());; 62 }; 63 }; 64 // copy constructor; 65 TF1Parameters(const TF1Parameters &rhs) :; 66 fParameters(rhs.fParameters),; 67 fParNames(rhs.fParNames); 68 {}; 69 // assignment; 70 TF1Parameters &operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8h_source.html:71,Guid,Guide,71,doc/master/TF1_8h_source.html,https://root.cern,https://root.cern/doc/master/TF1_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF1Convolution.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TF1Convolution.h File Reference. #include ""TF1AbsComposition.h""; #include <memory>; #include <vector>; #include ""TF1.h""; #include ""TGraph.h"". Include dependency graph for TF1Convolution.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TF1Convolution;  Class wrapping convolution of two functions. More...;  . histhistincTF1Convolution.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1Convolution_8h.html:85,Guid,Guide,85,doc/master/TF1Convolution_8h.html,https://root.cern,https://root.cern/doc/master/TF1Convolution_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF1Convolution.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1Convolution.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Authors: Lorenzo Moneta, Aurélie Flandi 27/08/14; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 ROOT Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#ifndef ROOT_TF1Convolution__; 12#define ROOT_TF1Convolution__; 13 ; 14#include ""TF1AbsComposition.h""; 15#include <memory>; 16#include <vector>; 17#include ""TF1.h""; 18#include ""TGraph.h""; 19 ; 20class TF1Convolution : public TF1AbsComposition {; 21 std::unique_ptr<TF1> fFunction1; ///< First function to be convolved; 22 std::unique_ptr<TF1> fFunction2; ///< Second function to be convolved; 23 std::unique_ptr<TGraph> fGraphConv; ///<! Graph of the convolution; 24 ; 25 std::vector < Double_t > fParams1;; 26 std::vector < Double_t > fParams2;; 27 ; 28 std::vector< TString > fParNames; ///< Parameters' names; 29 ; 30 Double_t fXmin; ///< Minimal bound of the range of the convolution; 31 Double_t fXmax; ///< Maximal bound of the range of the convolution; 32 Int_t fNofParams1;; 33 Int_t fNofParams2;; 34 Int_t fCstIndex; ///< Index of the constant parameter f the first function; 35 Int_t fNofPoints; ///< Number of point for FFT array; 36 Bool_t fFlagFFT; ///< Choose FFT or numerical convolution; 37 Bool_t fFlagGraph = false; ///<! Tells if the graph is already done or not; 38 static Double_t fgExtraRangeFraction; ///<! Additional default fraction of the range used for FFT convolution; 39 ; 40 Double_t EvalNumConv(Double_t t);; 41 Double_t EvalFFTConv(Double_t t);; 42 void InitializeDataMembers(TF1* function1, TF1* function2, Bool_t useFFT);; 43 void MakeFFTConv();; 44 ; 45public:; 46 TF1Convolution();; 47 TF1Convolution(TF1 *function1, TF1 *function2, Bool_t useFFT = true);; 48 TF1Convo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1Convolution_8h_source.html:82,Guid,Guide,82,doc/master/TF1Convolution_8h_source.html,https://root.cern,https://root.cern/doc/master/TF1Convolution_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF1NormSum.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TF1NormSum.h File Reference. #include ""TF1AbsComposition.h""; #include <vector>; #include <memory>; #include ""TF1.h"". Include dependency graph for TF1NormSum.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TF1NormSum;  Class adding two functions: c1*f1+c2*f2. More...;  . histhistincTF1NormSum.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1NormSum_8h.html:81,Guid,Guide,81,doc/master/TF1NormSum_8h.html,https://root.cern,https://root.cern/doc/master/TF1NormSum_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF1NormSum.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1NormSum.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Authors: Lorenzo Moneta, Aurélie Flandi 27/08/14; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 ROOT Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#ifndef ROOT_TF1NormSum__; 12#define ROOT_TF1NormSum__; 13 ; 14#include ""TF1AbsComposition.h""; 15#include <vector>; 16#include <memory>; 17#include ""TF1.h""; 18 ; 19class TF1NormSum : public TF1AbsComposition {; 20 ; 21protected:; 22 unsigned int fNOfFunctions; ///< Number of functions to add; 23 Double_t fScale; ///< Fixed Scale parameter to normalize function (e.g. bin width); 24 Double_t fXmin; ///< Minimal bound of range of NormSum; 25 Double_t fXmax; ///< Maximal bound of range of NormSum; 26 std::vector<std::unique_ptr<TF1>> fFunctions; ///< Vector of size fNOfFunctions containing TF1 functions; 27 std::vector < Double_t > fCoeffs; ///< Vector of size afNOfFunctions containing coefficients in front of each function; 28 std::vector < Int_t > fCstIndexes; ///< Vector with size of fNOfFunctions containing the index of the constant parameter/ function (the removed ones); 29 std::vector< TString > fParNames; ///< Parameter names; 30 ; 31 void InitializeDataMembers(const std::vector<TF1 *> &functions, const std::vector<Double_t> &coeffs,; 32 Double_t scale); // acts as a constructor; 33 ; 34public:; 35 ; 36 TF1NormSum();; 37 TF1NormSum(const std::vector <TF1*>&functions, const std::vector <Double_t> &coeffs, Double_t scale = 1.);; 38 TF1NormSum(TF1* function1, TF1* function2, Double_t coeff1 = 1., Double_t coeff2 = 1., Double_t scale = 1.);; 39 TF1NormSum(TF1* function1, TF1* function2, TF1*function3, Double_t coeff1 = 1., Double_t coeff2 = 1., Double_t coeff3 = 1., Double_t scale = 1.);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1NormSum_8h_source.html:78,Guid,Guide,78,doc/master/TF1NormSum_8h_source.html,https://root.cern,https://root.cern/doc/master/TF1NormSum_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF2.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TF2.h File Reference. #include ""TF1.h""; #include ""TArrayD.h"". Include dependency graph for TF2.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TF2;  A 2-Dim function with parameters. More...;  . histhistincTF2.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8h.html:74,Guid,Guide,74,doc/master/TF2_8h.html,https://root.cern,https://root.cern/doc/master/TF2_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF2.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF2.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 23/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// ---------------------------------- F2.h; 12 ; 13#ifndef ROOT_TF2; 14#define ROOT_TF2; 15 ; 16 ; 17 ; 18//////////////////////////////////////////////////////////////////////////; 19// //; 20// TF2 //; 21// //; 22// The Parametric 2-D function //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TF1.h""; 27#include ""TArrayD.h""; 28 ; 29class TF2 : public TF1 {; 30 ; 31protected:; 32 Double_t fYmin; ///< Lower bound for the range in y; 33 Double_t fYmax; ///< Upper bound for the range in y; 34 Int_t fNpy; ///< Number of points along y used for the graphical representation; 35 TArrayD fContour; ///< Array to display contour levels; 36 ; 37public:; 38 TF2();; 39 TF2(const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Option_t * opt = nullptr);; 40 TF2(const char *name, Double_t (*fcn)(Double_t *, Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Int_t npar=0,Int_t ndim = 2);; 41 TF2(const char *name, Double_t (*fcn)(const Double_t *, const Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Int_t npar=0, Int_t ndim = 2);; 42 ; 43 // Constructor using a functor; 44 TF2(const char *name, ROOT::Math::ParamFunctor f, Double_t xmin = 0, Double_t xmax = 1, Double_t ymin = 0, Double_t ymax = 1, Int_t npar = 0, Int_t ndim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8h_source.html:71,Guid,Guide,71,doc/master/TF2_8h_source.html,https://root.cern,https://root.cern/doc/master/TF2_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TF3.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF3.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 27/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// ---------------------------------- F3.h; 12 ; 13#ifndef ROOT_TF3; 14#define ROOT_TF3; 15 ; 16 ; 17 ; 18//////////////////////////////////////////////////////////////////////////; 19// //; 20// TF3 //; 21// //; 22// The Parametric 3-D function //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TF2.h""; 27 ; 28class TF3 : public TF2 {; 29 ; 30protected:; 31 Double_t fZmin; ///< Lower bound for the range in z; 32 Double_t fZmax; ///< Upper bound for the range in z; 33 Int_t fNpz; ///< Number of points along z used for the graphical representation; 34 Bool_t fClipBoxOn{kFALSE}; ///<! Is clip box on; 35 Double_t fClipBox[3]; ///<! Coordinates of clipbox; 36public:; 37 TF3();; 38 TF3(const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, Double_t ymin=0,; 39 Double_t ymax=1, Double_t zmin=0, Double_t zmax=1, Option_t * opt = nullptr);; 40 TF3(const char *name, Double_t (*fcn)(Double_t *, Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0,; 41 Double_t ymax=1, Double_t zmin=0, Double_t zmax=1, Int_t npar=0, Int_t ndim = 3);; 42 TF3(const char *name, Double_t (*fcn)(const Double_t *, const Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0,; 43 Double_t ymax=1, Double_t zmin=0, Double_t zmax=1, Int_t npar=0, Int_t ndim = 3);; 44 ; 45 // Constructor using a functor; 46 TF3(const char *na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF3_8h_source.html:71,Guid,Guide,71,doc/master/TF3_8h_source.html,https://root.cern,https://root.cern/doc/master/TF3_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TFitResult.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TFitResult.h File Reference. #include ""TNamed.h""; #include ""Fit/FitResult.h""; #include ""TMatrixDSym.h""; #include <string>. Include dependency graph for TFitResult.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TFitResult;  Extends the ROOT::Fit::Result class with a TNamed inheritance providing easy possibility for I/O. More...;  . histhistincTFitResult.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResult_8h.html:81,Guid,Guide,81,doc/master/TFitResult_8h.html,https://root.cern,https://root.cern/doc/master/TFitResult_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TFitResult.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResult.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: David Gonzalez Maline Tue Nov 10 15:01:24 2009; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFitResult; 13#define ROOT_TFitResult; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TFitResult //; 18// //; 19// Provides a way to view the fit result and to store them. //; 20// //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25 ; 26#include ""Fit/FitResult.h""; 27 ; 28#include ""TMatrixDSym.h""; 29 ; 30#include <string>; 31 ; 32class TGraph;; 33 ; 34class TFitResult:public TNamed, public ROOT::Fit::FitResult {; 35 ; 36public:; 37 ; 38 // Default constructor for I/O; 39 TFitResult(int status = 0): TNamed(""TFitResult"",""TFitResult""),; 40 ROOT::Fit::FitResult() {; 41 fStatus = status;; 42 };; 43 ; 44 // constructor from name and title; 45 TFitResult(const char * name, const char * title) :; 46 TNamed(name,title),; 47 ROOT::Fit::FitResult(); 48 {}; 49 ; 50 // constructor from an FitResult; 51 TFitResult(const ROOT::Fit::FitResult& f);; 52 ; 53 ~TFitResult() override {}; 54 ; 55 ; 56 void Print(Option_t *option="""") const override;; 57 ; 58 TMatrixDSym GetCovarianceMatrix() const;; 59 ; 60 TMatrixDSym GetCorrelationMatrix() const;; 61 ; 62 // scan likelihood value of parameter and fill the given graph.; 63 using ROOT::Fit::FitResult::Scan;; 64 bool Scan(unsigned int ipar, TGraph * gr, double xmin = 0, d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResult_8h_source.html:78,Guid,Guide,78,doc/master/TFitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/TFitResult_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TFitResultPtr.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResultPtr.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: David Gonzalez Maline Tue Nov 10 15:01:24 2009; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFitResultPtr; 13#define ROOT_TFitResultPtr; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TFitResultPtr //; 18// //; 19// Provides an indirection to TFitResult class and with a semantics //; 20// identical to a TFitResult pointer //; 21// //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""Rtypes.h""; 26 ; 27#include <memory>; 28#include <string>; 29 ; 30class TFitResult;; 31 ; 32class TFitResultPtr {; 33public:; 34 ; 35 TFitResultPtr(int status = -1): fStatus(status), fPointer(nullptr) {}; 36 ; 37 TFitResultPtr(const std::shared_ptr<TFitResult> & p);; 38 ; 39 TFitResultPtr(TFitResult *p);; 40 ; 41 TFitResultPtr(const TFitResultPtr& rhs);; 42 ; 43 operator int() const { return fStatus; }; 44 ; 45 TFitResult& operator*() const;; 46 ; 47 TFitResult* operator->() const;; 48 ; 49 TFitResult* Get() const;; 50 ; 51 TFitResultPtr& operator= (const TFitResultPtr& rhs);; 52 ; 53 virtual ~TFitResultPtr();; 54 ; 55private:; 56 ; 57 int fStatus; ///< fit status code; 58 std::shared_ptr<TFitResult> fPointer; ///<! Smart Pointer to TFitResult class; 59 ; 60 ClassDef(TFitResultPtr,2) //indirection to TFitResult; 61};; 62 ; 63namespace cling {; 64 std::string printValue(const TFitResultPtr* val);; 65}; 66#endif; Rtypes.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResultPtr_8h_source.html:81,Guid,Guide,81,doc/master/TFitResultPtr_8h_source.html,https://root.cern,https://root.cern/doc/master/TFitResultPtr_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraph.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGraph.h File Reference. #include ""TNamed.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TVectorFfwd.h""; #include ""TVectorDfwd.h""; #include ""TFitResultPtr.h"". Include dependency graph for TGraph.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGraph;  A TGraph is an object made of two arrays X and Y with npoints each. More...;  . histhistincTGraph.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8h.html:77,Guid,Guide,77,doc/master/TGraph_8h.html,https://root.cern,https://root.cern/doc/master/TGraph_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraph.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun, Olivier Couet 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraph; 13#define ROOT_TGraph; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraph //; 19// //; 20// Graph graphics class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TAttLine.h""; 26#include ""TAttFill.h""; 27#include ""TAttMarker.h""; 28#include ""TVectorFfwd.h""; 29#include ""TVectorDfwd.h""; 30#include ""TFitResultPtr.h""; 31 ; 32class TBrowser;; 33class TAxis;; 34class TH1;; 35class TH1F;; 36class TCollection;; 37class TF1;; 38class TSpline;; 39class TList;; 40 ; 41class TGraph : public TNamed, public TAttLine, public TAttFill, public TAttMarker {; 42 ; 43protected:; 44 ; 45 Int_t fMaxSize; ///<!Current dimension of arrays fX and fY; 46 Int_t fNpoints; ///< Number of points <= fMaxSize; 47 Double_t *fX; ///<[fNpoints] array of X points; 48 Double_t *fY; ///<[fNpoints] array of Y points; 49 TList *fFunctions; ///< Pointer to list of functions (fits and user); 50 TH1F *fHistogram; ///< Pointer to histogram used for drawing axis; 51 Double_t fMinimum; ///< Minimum value for plotting along y; 52 Double_t fMaximum; ///< Maximum value for plotting along y; 53 TString fOption; ///< Options used for drawing the graph; 54 ; 55 static void SwapValues(Double_t* arr, Int_t pos1, Int_t pos2);; 56 virtual void SwapPoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8h_source.html:74,Guid,Guide,74,doc/master/TGraph_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraph2D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGraph2D.h File Reference. #include ""TNamed.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TFitResultPtr.h"". Include dependency graph for TGraph2D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGraph2D;  Graphics object made of three arrays X, Y and Z with the same number of points each. More...;  . histhistincTGraph2D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8h.html:79,Guid,Guide,79,doc/master/TGraph2D_8h.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraph2D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2D.h. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2D.h,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraph2D; 13#define ROOT_TGraph2D; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraph2D //; 19// //; 20// Graph 2D graphics class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TAttLine.h""; 26#include ""TAttFill.h""; 27#include ""TAttMarker.h""; 28 ; 29class TAxis;; 30class TList;; 31class TF2;; 32class TH1;; 33class TH2;; 34class TH2D;; 35class TView;; 36class TDirectory;; 37class TVirtualHistPainter;; 38 ; 39#include ""TFitResultPtr.h""; 40 ; 41class TGraph2D : public TNamed, public TAttLine, public TAttFill, public TAttMarker {; 42 ; 43protected:; 44 ; 45 Int_t fNpoints; ///< Number of points in the data set; 46 Int_t fNpx; ///< Number of bins along X in fHistogram; 47 Int_t fNpy; ///< Number of bins along Y in fHistogram; 48 Int_t fMaxIter; ///< Maximum number of iterations to find Delaunay triangles; 49 Int_t fSize; ///<!Real size of fX, fY and fZ; 50 Double_t *fX; ///<[fNpoints]; 51 Double_t *fY; ///<[fNpoints] Data set to be plotted; 52 Double_t *fZ; ///<[fNpoints]; 53 Double_t fMinimum; ///< Minimum value for plotting along z; 54 Double_t fMaximum; ///< Maximum value for plotting along z; 55 Double_t fMargin; ///< Extra space (in %) around interpolated area for fHistogram; 56 Double_t fZout; ///",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8h_source.html:76,Guid,Guide,76,doc/master/TGraph2D_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraph2DErrors.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGraph2DErrors.h File Reference. #include ""TGraph2D.h"". Include dependency graph for TGraph2DErrors.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGraph2DErrors;  Graph 2D class with errors. More...;  . histhistincTGraph2DErrors.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8h.html:85,Guid,Guide,85,doc/master/TGraph2DErrors_8h.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraph2DErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2DErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2DErrors.h,v 1.00; 2// Author: Olivier Couet 26/11/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraph2DErrors; 13#define ROOT_TGraph2DErrors; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraph2DErrors //; 19// //; 20// a 2D Graph with error bars //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TGraph2D.h""; 25 ; 26class TGraph2DErrors : public TGraph2D {; 27 ; 28protected:; 29 Double_t *fEX{nullptr}; ///<[fNpoints] array of X errors; 30 Double_t *fEY{nullptr}; ///<[fNpoints] array of Y errors; 31 Double_t *fEZ{nullptr}; ///<[fNpoints] array of Z errors; 32 ; 33public:; 34 TGraph2DErrors();; 35 TGraph2DErrors(Int_t n);; 36 TGraph2DErrors(Int_t n, Double_t *x, Double_t *y, Double_t *z,; 37 Double_t *ex = nullptr, Double_t *ey = nullptr, Double_t *ez = nullptr, Option_t *option = """");; 38 TGraph2DErrors(const TGraph2DErrors&);; 39 TGraph2DErrors& operator=(const TGraph2DErrors&);; 40 ~TGraph2DErrors() override;; 41 virtual void AddPointError(Double_t x, Double_t y, Double_t z, Double_t ex = 0., Double_t ey = 0., Double_t ez = 0.);; 42 Double_t GetErrorX(Int_t bin) const override;; 43 Double_t GetErrorY(Int_t bin) const override;; 44 Double_t GetErrorZ(Int_t bin) const override;; 45 Double_t *GetEX() const override {return fEX;}; 46 Double_t *GetEY() const override {return fEY;}; 47 Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8h_source.html:82,Guid,Guide,82,doc/master/TGraph2DErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraphAsymmErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphAsymmErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 03/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphAsymmErrors; 13#define ROOT_TGraphAsymmErrors; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraphAsymmErrors //; 19// //; 20// a Graph with asymmetric error bars //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TGraph.h""; 25 ; 26class TGraphAsymmErrors : public TGraph {; 27 ; 28protected:; 29 Double_t *fEXlow{nullptr}; ///<[fNpoints] array of X low errors; 30 Double_t *fEXhigh{nullptr}; ///<[fNpoints] array of X high errors; 31 Double_t *fEYlow{nullptr}; ///<[fNpoints] array of Y low errors; 32 Double_t *fEYhigh{nullptr}; ///<[fNpoints] array of Y high errors; 33 ; 34 void SwapPoints(Int_t pos1, Int_t pos2) override;; 35 void UpdateArrays(const std::vector<Int_t> &sorting_indices, Int_t numSortedPoints, Int_t low) override;; 36 ; 37 Double_t** Allocate(Int_t size) override;; 38 void CopyAndRelease(Double_t **newarrays,; 39 Int_t ibegin, Int_t iend, Int_t obegin) override;; 40 Bool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend,; 41 Int_t obegin) override;; 42 Bool_t CtorAllocate();; 43 void FillZero(Int_t begin, Int_t end,; 44 Bool_t from_ctor = kTRUE) override;; 45 Bool_t DoMerge(const TGraph * g) override;; 46 ; 47public:; 48 TGraphAsymmErrors();; 49 TGraphAsymmErrors(Int_t n);; 50 TGraphAsymmErrors(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8h_source.html:85,Guid,Guide,85,doc/master/TGraphAsymmErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraphBentErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphBentErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Dave Morrison 30/06/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphBentErrors; 13#define ROOT_TGraphBentErrors; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TGraphBentErrors //; 18// //; 19// a Graph with bent, asymmetric error bars //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TGraph.h""; 24 ; 25class TGraphBentErrors : public TGraph {; 26 ; 27protected:; 28 Double_t *fEXlow; ///<[fNpoints] array of X low errors; 29 Double_t *fEXhigh; ///<[fNpoints] array of X high errors; 30 Double_t *fEYlow; ///<[fNpoints] array of Y low errors; 31 Double_t *fEYhigh; ///<[fNpoints] array of Y high errors; 32 ; 33 Double_t *fEXlowd; ///<[fNpoints] array of X low displacements; 34 Double_t *fEXhighd; ///<[fNpoints] array of X high displacements; 35 Double_t *fEYlowd; ///<[fNpoints] array of Y low displacements; 36 Double_t *fEYhighd; ///<[fNpoints] array of Y high displacements; 37 ; 38 void SwapPoints(Int_t pos1, Int_t pos2) override;; 39 void UpdateArrays(const std::vector<Int_t> &sorting_indices, Int_t numSortedPoints, Int_t low) override;; 40 ; 41 Double_t** Allocate(Int_t size) override;; 42 void CopyAndRelease(Double_t **newarrays,; 43 Int_t ibegin, Int_t iend, Int_t obegin) override;; 44 Bool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend,; 45 Int_t obegin) override;; 46 Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphBentErrors_8h_source.html:84,Guid,Guide,84,doc/master/TGraphBentErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphBentErrors_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraphDelaunay.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphDelaunay.h. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraphDelaunay.h,v 1.00; 2// Author: Olivier Couet, Luke Jones (Royal Holloway, University of London); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphDelaunay; 13#define ROOT_TGraphDelaunay; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraphDelaunay //; 19// //; 20// This class uses the Delaunay triangles technique to interpolate and //; 21// render the data set. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TNamed.h""; 26 ; 27class TGraph2D;; 28class TView;; 29 ; 30class TGraphDelaunay : public TNamed {; 31 ; 32private:; 33 ; 34 TGraphDelaunay(const TGraphDelaunay&) = delete;; 35 TGraphDelaunay& operator=(const TGraphDelaunay&) = delete;; 36 ; 37protected:; 38 ; 39 Int_t fNdt; ///<! Number of Delaunay triangles found; 40 Int_t fNpoints; ///<! Number of data points in fGraph2D; 41 Int_t fNhull; ///<! Number of points in the hull; 42 Double_t *fX; ///<! Pointer to fGraph2D->fX; 43 Double_t *fY; ///<! Pointer to fGraph2D->fY; 44 Double_t *fZ; ///<! Pointer to fGraph2D->fZ; 45 Double_t *fXN; ///<! fGraph2D vectors normalized of size fNpoints; 46 Double_t *fYN; ///<! fGraph2D vectors normalized of size fNpoints; 47 Double_t fXNmin; ///<! Minimum value of fXN; 48 Double_t fXNmax; ///<! Maximum value of fXN; 49 Double_t fYNmin; ///<! Minimum value of fYN; 50 Double_t fYNmax; ///<! Maximum value of fY",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphDelaunay_8h_source.html:82,Guid,Guide,82,doc/master/TGraphDelaunay_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphDelaunay_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraphErrors.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGraphErrors.h File Reference. #include ""TGraph.h"". Include dependency graph for TGraphErrors.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGraphErrors;  A TGraphErrors is a TGraph with error bars. More...;  . histhistincTGraphErrors.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8h.html:83,Guid,Guide,83,doc/master/TGraphErrors_8h.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraphErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 15/09/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphErrors; 13#define ROOT_TGraphErrors; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraphErrors //; 19// //; 20// a Graph with error bars //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TGraph.h""; 25 ; 26class TGraphErrors : public TGraph {; 27 ; 28protected:; 29 Double_t *fEX{nullptr}; ///<[fNpoints] array of X errors; 30 Double_t *fEY{nullptr}; ///<[fNpoints] array of Y errors; 31 ; 32 void SwapPoints(Int_t pos1, Int_t pos2) override;; 33 void UpdateArrays(const std::vector<Int_t> &sorting_indices, Int_t numSortedPoints, Int_t low) override;; 34 ; 35 Double_t** Allocate(Int_t size) override;; 36 void CopyAndRelease(Double_t **newarrays,; 37 Int_t ibegin, Int_t iend, Int_t obegin) override;; 38 Bool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend,; 39 Int_t obegin) override;; 40 Bool_t CtorAllocate();; 41 void FillZero(Int_t begin, Int_t end,; 42 Bool_t from_ctor = kTRUE) override;; 43 Bool_t DoMerge(const TGraph * g) override;; 44 ; 45 ; 46public:; 47 TGraphErrors();; 48 TGraphErrors(Int_t n);; 49 TGraphErrors(Int_t n, const Float_t *x, const Float_t *y, const Float_t *ex = nullptr, const Float_t *ey = nullptr);; 50 TGraphErrors(Int_t n, const Double_t *x, const Double_t *y, const Double_t *ex = nullptr, const D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8h_source.html:80,Guid,Guide,80,doc/master/TGraphErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TGraphMultiErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphMultiErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Simon Spies 18/02/19; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2018-2019, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphMultiErrors; 13#define ROOT_TGraphMultiErrors; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TGraphMultiErrors //; 18// //; 19// a Graph with asymmetric error bars and multiple y errors //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TGraph.h""; 24#include <vector>; 25 ; 26class TArrayF;; 27class TArrayD;; 28 ; 29class TGraphMultiErrors : public TGraph {; 30 ; 31protected:; 32 Int_t fNYErrors; ///< The amount of different y-errors; 33 Int_t fSumErrorsMode; ///< How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum =; 34 ///< Absolute Addition; 35 Double_t *fExL; ///<[fNpoints] array of X low errors; 36 Double_t *fExH; ///<[fNpoints] array of X high errors; 37 std::vector<TArrayD> fEyL; ///< Two dimensional array of Y low errors; 38 std::vector<TArrayD> fEyH; ///< Two dimensional array of Y high errors; 39 mutable Double_t *fEyLSum = nullptr; ///<! Array of summed Y low errors for fitting; 40 mutable Double_t *fEyHSum = nullptr; ///<! Array of summed Y high errors for fitting; 41 std::vector<TAttFill> fAttFill; ///< The AttFill attributes of the different errors; 42 std::vector<TAttLine> fAttLine; ///< The AttLine attributes of the different errors; 43 ; 44 Double_t **Allocate(Int_t size) ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8h_source.html:85,Guid,Guide,85,doc/master/TGraphMultiErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TH1.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; TH1.h File Reference. #include ""TAxis.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TArrayC.h""; #include ""TArrayS.h""; #include ""TArrayI.h""; #include ""TArrayL64.h""; #include ""TArrayF.h""; #include ""TArrayD.h""; #include ""Foption.h""; #include ""TVectorFfwd.h""; #include ""TVectorDfwd.h""; #include ""TFitResultPtr.h""; #include <cfloat>; #include <string>. Include dependency graph for TH1.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TH1;  TH1 is the base class of all histogram classes in ROOT. More...;  ; class  TH1C;  1-D histogram with a byte per channel (see TH1 documentation) More...;  ; class  TH1D;  1-D histogram with a double per channel (see TH1 documentation) More...;  ; class  TH1F;  1-D histogram with a float per channel (see TH1 documentation) More...;  ; class  TH1I;  1-D histogram with an int per channel (see TH1 documentation) More...;  ; class  TH1L;  1-D histogram with a long64 per channel (see TH1 documentation) More...;  ; class  TH1S;  1-D histogram with a short per channel (see TH1 documentation) More...;  . Functions; TH1C operator* (const TH1C &h1, const TH1C &h2);  Operator *. ;  ; TH1C operator* (const TH1C &h1, Double_t c1);  ; TH1D operator* (const TH1D &h1, const TH1D &h2);  Operator *. ;  ; TH1D operator* (const TH1D &h1, Double_t c1);  ; TH1F operator* (const TH1F &h1, const TH1F &h2);  Operator *. ;  ; TH1F operator* (const TH1F &h1, Double_t c1);  ; TH1I operator* (const TH1I &h1, const TH1I &h2);  Operator *. ;  ; TH1I operator* (const TH1I &h1, Double_t c1);  ; TH1L operator* (const TH1L &h1, const TH1L &h2);  Operator *. ;  ; TH1L operator* (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h.html:74,Guid,Guide,74,doc/master/TH1_8h.html,https://root.cern,https://root.cern/doc/master/TH1_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TH1.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TH1; 13#define ROOT_TH1; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TH1 //; 19// //; 20// 1-Dim histogram base class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TAxis.h""; 25 ; 26#include ""TAttLine.h""; 27 ; 28#include ""TAttFill.h""; 29 ; 30#include ""TAttMarker.h""; 31 ; 32#include ""TArrayC.h""; 33#include ""TArrayS.h""; 34#include ""TArrayI.h""; 35#include ""TArrayL64.h""; 36#include ""TArrayF.h""; 37#include ""TArrayD.h""; 38#include ""Foption.h""; 39 ; 40#include ""TVectorFfwd.h""; 41#include ""TVectorDfwd.h""; 42 ; 43#include ""TFitResultPtr.h""; 44 ; 45#include <cfloat>; 46#include <string>; 47 ; 48class TF1;; 49class TH1D;; 50class TBrowser;; 51class TDirectory;; 52class TList;; 53class TCollection;; 54class TVirtualFFT;; 55class TVirtualHistPainter;; 56class TRandom;; 57 ; 58 ; 59class TH1 : public TNamed, public TAttLine, public TAttFill, public TAttMarker {; 60 ; 61public:; 62 ; 63 /// Enumeration specifying type of statistics for bin errors; 64 enum EBinErrorOpt {; 65 kNormal = 0, ///< Errors with Normal (Wald) approximation: errorUp=errorLow= sqrt(N); 66 kPoisson = 1 , ///< Errors from Poisson interval at 68.3% (1 sigma); 67 kPoisson2 = 2 ///< Errors from Poisson interval at 95% CL (~ 2 sigma); 68 };; 69 ; 70 /// Enumeration specifying which axes can",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h_source.html:71,Guid,Guide,71,doc/master/TH1_8h_source.html,https://root.cern,https://root.cern/doc/master/TH1_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TH1F.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1F.h File Reference. #include ""TH1.h"". Include dependency graph for TH1F.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. histhistincTH1F.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1F_8h.html:75,Guid,Guide,75,doc/master/TH1F_8h.html,https://root.cern,https://root.cern/doc/master/TH1F_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TH1I.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1I.h File Reference. #include ""TH1.h"". Include dependency graph for TH1I.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. histhistincTH1I.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1I_8h.html:75,Guid,Guide,75,doc/master/TH1I_8h.html,https://root.cern,https://root.cern/doc/master/TH1I_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TH2.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TH2.h File Reference. #include ""TH1.h""; #include ""TMatrixFBasefwd.h""; #include ""TMatrixDBasefwd.h"". Include dependency graph for TH2.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TH2;  Service class for 2-D histogram classes. More...;  ; class  TH2C;  2-D histogram with a byte per channel (see TH1 documentation) More...;  ; class  TH2D;  2-D histogram with a double per channel (see TH1 documentation) More...;  ; class  TH2F;  2-D histogram with a float per channel (see TH1 documentation) More...;  ; class  TH2I;  2-D histogram with an int per channel (see TH1 documentation) More...;  ; class  TH2L;  2-D histogram with a long64 per channel (see TH1 documentation) More...;  ; class  TH2S;  2-D histogram with a short per channel (see TH1 documentation) More...;  . histhistincTH2.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8h.html:74,Guid,Guide,74,doc/master/TH2_8h.html,https://root.cern,https://root.cern/doc/master/TH2_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TH2.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TH2; 13#define ROOT_TH2; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TH2 //; 19// //; 20// 2-Dim histogram base class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH1.h""; 25#include ""TMatrixFBasefwd.h""; 26#include ""TMatrixDBasefwd.h""; 27 ; 28class TProfile;; 29 ; 30class TH2 : public TH1 {; 31 ; 32protected:; 33 Double_t fScalefactor; ///< Scale factor; 34 Double_t fTsumwy; ///< Total Sum of weight*Y; 35 Double_t fTsumwy2; ///< Total Sum of weight*Y*Y; 36 Double_t fTsumwxy; ///< Total Sum of weight*X*Y; 37 ; 38 TH2();; 39 TH2(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 40 ,Int_t nbinsy,Double_t ylow,Double_t yup);; 41 TH2(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 42 ,Int_t nbinsy,Double_t ylow,Double_t yup);; 43 TH2(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 44 ,Int_t nbinsy,const Double_t *ybins);; 45 TH2(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 46 ,Int_t nbinsy,const Double_t *ybins);; 47 TH2(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 48 ,Int_t nbinsy,const Float_t *ybins);; 49 ; 50 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t w);; 51 virtual TH1D *DoProjection(bool onX, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8h_source.html:71,Guid,Guide,71,doc/master/TH2_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TH2Poly.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2Poly.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Olivier Couet, Deniz Gunceler; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TH2Poly; 13#define ROOT_TH2Poly; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TH2Poly //; 18// //; 19// 2-Dim histogram with polygon bins //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TH2.h""; 24 ; 25class TH2PolyBin: public TObject{; 26 ; 27public:; 28 TH2PolyBin();; 29 TH2PolyBin(TObject *poly, Int_t bin_number);; 30 ~TH2PolyBin() override;; 31 ; 32 void ClearContent(){fContent = 0;}; 33 void Fill(Double_t w) {fContent = fContent+w; SetChanged(true);}; 34 Double_t GetArea();; 35 Double_t GetContent() const{return fContent;}; 36 Bool_t GetChanged() const{return fChanged;}; 37 Int_t GetBinNumber() const {return fNumber;}; 38 TObject *GetPolygon() const {return fPoly;}; 39 Double_t GetXMax();; 40 Double_t GetXMin();; 41 Double_t GetYMax();; 42 Double_t GetYMin();; 43 Bool_t IsInside(Double_t x, Double_t y) const;; 44 void SetChanged(Bool_t flag){fChanged = flag;}; 45 void SetContent(Double_t content){fContent = content; SetChanged(true);}; 46 ; 47protected:; 48 Bool_t fChanged; ///< For the 3D Painter; 49 Int_t fNumber; ///< Bin number of the bin in TH2Poly; 50 TObject *fPoly; ///< Object holding the polygon definition; 51 Double_t fArea; ///< Bin area; 52 Double_t fContent; ///< Bin content; 53 Double_t fXmin; ///< X minimum value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8h_source.html:75,Guid,Guide,75,doc/master/TH2Poly_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TH3.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH3.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 27/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TH3; 13#define ROOT_TH3; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TH3 //; 19// //; 20// 3-Dim histogram base class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH1.h""; 25 ; 26#include ""TAtt3D.h""; 27 ; 28class TH2D;; 29class TProfile2D;; 30 ; 31class TH3 : public TH1, public TAtt3D {; 32 ; 33protected:; 34 Double_t fTsumwy; ///< Total Sum of weight*Y; 35 Double_t fTsumwy2; ///< Total Sum of weight*Y*Y; 36 Double_t fTsumwxy; ///< Total Sum of weight*X*Y; 37 Double_t fTsumwz; ///< Total Sum of weight*Z; 38 Double_t fTsumwz2; ///< Total Sum of weight*Z*Z; 39 Double_t fTsumwxz; ///< Total Sum of weight*X*Z; 40 Double_t fTsumwyz; ///< Total Sum of weight*Y*Z; 41 ; 42 TH3();; 43 TH3(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 44 ,Int_t nbinsy,Double_t ylow,Double_t yup; 45 ,Int_t nbinsz,Double_t zlow,Double_t zup);; 46 TH3(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 47 ,Int_t nbinsy,const Float_t *ybins; 48 ,Int_t nbinsz,const Float_t *zbins);; 49 TH3(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 50 ,Int_t nbinsy,const Double_t *ybins; 51 ,Int_t nbinsz,const Double_t *zbins);; 52 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t z, Double_t w);; 53 ; 54 v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8h_source.html:71,Guid,Guide,71,doc/master/TH3_8h_source.html,https://root.cern,https://root.cern/doc/master/TH3_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/THStack.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THStack.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 10/12/2001; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_THStack; 13#define ROOT_THStack; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// THStack //; 19// //; 20// A collection of histograms //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TObjArray.h""; 26 ; 27#ifdef R__LESS_INCLUDES; 28class TH1;; 29class TList;; 30class TAxis;; 31#else; 32#include ""TH1.h""; 33#endif; 34 ; 35#include <limits>; 36 ; 37class TBrowser;; 38class TFileMergeInfo;; 39 ; 40class THStack : public TNamed {; 41private:; 42 THStack& operator=(const THStack&) = delete;; 43 ; 44protected:; 45 TList *fHists{nullptr}; ///< Pointer to array of TH1; 46 TObjArray *fStack{nullptr}; ///<! Pointer to array of sums of TH1; 47 TH1 *fHistogram{nullptr}; ///< Pointer to histogram used for drawing axis; 48 Double_t fMaximum{-1111}; ///< Maximum value for plotting along y; 49 Double_t fMinimum{-1111}; ///< Minimum value for plotting along y; 50 ; 51 void BuildStack();; 52 ; 53 void BuildAndPaint(Option_t *chopt, Bool_t paint, Bool_t rebuild_stack = kFALSE);; 54 ; 55public:; 56 ; 57 THStack() {}; 58 THStack(const char *name, const char *title);; 59 THStack(TH1* hist, Option_t *axis=""x"",; 60 const char *name = nullptr, const char *title = nullptr,; 61 Int_t firstbin = 1, Int_t lastbin = -1,; 62 Int_t firstbin2 = 1, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THStack_8h_source.html:75,Guid,Guide,75,doc/master/THStack_8h_source.html,https://root.cern,https://root.cern/doc/master/THStack_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/THn.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs ; THn.h File Reference. #include ""THnBase.h""; #include ""TNDArray.h""; #include ""TArrayD.h""; #include ""TAxis.h"". Include dependency graph for THn.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  THn;  Multidimensional histogram. More...;  ; class  THnT< T >;  Templated implementation of the abstract base THn. More...;  . Typedefs; typedef THnT< Char_t > THnC;  ; typedef THnT< Double_t > THnD;  ; typedef THnT< Float_t > THnF;  ; typedef THnT< Int_t > THnI;  ; typedef THnT< Long64_t > THnL;  ; typedef THnT< Long64_t > THnL64;  ; typedef THnT< Short_t > THnS;  . Typedef Documentation. ◆ THnC. typedef THnT<Char_t> THnC. Definition at line 245 of file THn.h. ◆ THnD. typedef THnT<Double_t> THnD. Definition at line 244 of file THn.h. ◆ THnF. typedef THnT<Float_t> THnF. Definition at line 243 of file THn.h. ◆ THnI. typedef THnT<Int_t> THnI. Definition at line 247 of file THn.h. ◆ THnL. typedef THnT<Long64_t> THnL. Definition at line 248 of file THn.h. ◆ THnL64. typedef THnT<Long64_t> THnL64. Definition at line 249 of file THn.h. ◆ THnS. typedef THnT<Short_t> THnS. Definition at line 246 of file THn.h. histhistincTHn.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THn_8h.html:74,Guid,Guide,74,doc/master/THn_8h.html,https://root.cern,https://root.cern/doc/master/THn_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/THn.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THn.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Axel Naumann, Nov 2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_THN; 13#define ROOT_THN; 14 ; 15#include ""THnBase.h""; 16 ; 17#include ""TNDArray.h""; 18 ; 19#include ""TArrayD.h""; 20 ; 21#include ""TAxis.h""; 22 ; 23class TH1;; 24class TH1D;; 25class TH2D;; 26class TH3D;; 27class THnSparse;; 28class TF1;; 29 ; 30class THn: public THnBase {; 31 ; 32protected:; 33 void AllocCoordBuf() const;; 34 void InitStorage(Int_t* nbins, Int_t chunkSize) override;; 35 ; 36 THn() = default;; 37 THn(const char* name, const char* title, Int_t dim, const Int_t* nbins,; 38 const Double_t* xmin, const Double_t* xmax);; 39 ; 40 THn(const char *name, const char *title, Int_t dim, const Int_t *nbins,; 41 const std::vector<std::vector<double>> &xbins);; 42 ; 43public:; 44 ~THn() override;; 45 ; 46 static THn* CreateHn(const char* name, const char* title, const TH1* h1) {; 47 return (THn*) CreateHnAny(name, title, h1, kFALSE /*THn*/, -1);; 48 }; 49 static THn* CreateHn(const char* name, const char* title, const THnBase* hn) {; 50 return (THn*) CreateHnAny(name, title, hn, kFALSE /*THn*/, -1);; 51 }; 52 ; 53 ROOT::Internal::THnBaseBinIter* CreateIter(Bool_t respectAxisRange) const override;; 54 Long64_t GetNbins() const override { return GetArray().GetNbins(); }; 55 ; 56 Long64_t GetBin(const Int_t* idx) const override {; 57 return GetArray().GetBin(idx);; 58 }; 59 Long64_t GetBin(const Double_t* x) const override {; 60 if (fCoordBuf.empty()); 61 Al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THn_8h_source.html:71,Guid,Guide,71,doc/master/THn_8h_source.html,https://root.cern,https://root.cern/doc/master/THn_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/THnSparse.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THnSparse.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Axel Naumann (2007-09-11); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_THnSparse; 13#define ROOT_THnSparse; 14 ; 15/*************************************************************************; 16 ; 17 THnSparse: histogramming multi-dimensional, sparse distributions in; 18 a memory-efficient way.; 19 ; 20*************************************************************************/; 21 ; 22 ; 23#include ""THnBase.h""; 24#include ""TExMap.h""; 25#include ""THnSparse_Internal.h""; 26 ; 27// needed only for template instantiations of THnSparseT:; 28#include ""TArrayF.h""; 29#include ""TArrayL.h""; 30#include ""TArrayL64.h""; 31#include ""TArrayI.h""; 32#include ""TArrayS.h""; 33#include ""TArrayC.h""; 34 ; 35class THnSparseCompactBinCoord;; 36 ; 37class THnSparse: public THnBase {; 38 private:; 39 Int_t fChunkSize; ///< Number of entries for each chunk; 40 Long64_t fFilledBins; ///< Number of filled bins; 41 TObjArray fBinContent; ///< Array of THnSparseArrayChunk; 42 TExMap fBins; ///<! Filled bins; 43 TExMap fBinsContinued; ///<! Filled bins for non-unique hashes, containing pairs of (bin index 0, bin index 1); 44 THnSparseCompactBinCoord *fCompactCoord; ///<! Compact coordinate; 45 ; 46 THnSparse(const THnSparse&) = delete;; 47 THnSparse& operator=(const THnSparse&) = delete;; 48 ; 49 protected:; 50 ; 51 THnSparse();; 52 THnSparse(const char* name, const char* title, Int_t dim,; 53 const Int_t* nbins, const Double_t* xmin, const Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THnSparse_8h_source.html:77,Guid,Guide,77,doc/master/THnSparse_8h_source.html,https://root.cern,https://root.cern/doc/master/THnSparse_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TMultiGraph.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMultiGraph.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TMultiGraph; 13#define ROOT_TMultiGraph; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TMultiGraph //; 19// //; 20// A collection of TGraph objects //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TCollection.h""; 26#include ""TFitResultPtr.h""; 27 ; 28class TH1F;; 29class TAxis;; 30class TBrowser;; 31class TGraph;; 32class TF1;; 33 ; 34class TMultiGraph : public TNamed {; 35 ; 36protected:; 37 TList *fGraphs{nullptr}; ///< Pointer to list of TGraphs; 38 TList *fFunctions{nullptr}; ///< Pointer to list of functions (fits and user); 39 TH1F *fHistogram{nullptr}; ///< Pointer to histogram used for drawing axis; 40 Double_t fMaximum{-1111}; ///< Maximum value for plotting along y; 41 Double_t fMinimum{-1111}; ///< Minimum value for plotting along y; 42 ; 43 TMultiGraph(const TMultiGraph&) = delete;; 44 TMultiGraph& operator=(const TMultiGraph&) = delete;; 45 ; 46public:; 47 TMultiGraph();; 48 TMultiGraph(const char *name, const char *title);; 49 ~TMultiGraph() override;; 50 ; 51 virtual void Add(TGraph *graph, Option_t *chopt = """");; 52 virtual void Add(TMultiGraph *multigraph, Option_t *chopt = """");; 53 void Browse(TBrowser *b) override;; 54 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 55 void Draw(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMultiGraph_8h_source.html:79,Guid,Guide,79,doc/master/TMultiGraph_8h_source.html,https://root.cern,https://root.cern/doc/master/TMultiGraph_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TPrincipal.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPrincipal.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Christian Holm Christensen 1/8/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPrincipal; 13#define ROOT_TPrincipal; 14 ; 15#include ""TNamed.h""; 16#include ""TVectorD.h""; 17#include ""TMatrixD.h""; 18 ; 19class TList;; 20 ; 21class TPrincipal : public TNamed {; 22 ; 23protected:; 24 Int_t fNumberOfDataPoints; ///< Number of data points; 25 Int_t fNumberOfVariables; ///< Number of variables; 26 ; 27 TVectorD fMeanValues; ///< Mean value over all data points; 28 TVectorD fSigmas; ///< vector of sigmas; 29 TMatrixD fCovarianceMatrix; ///< Covariance matrix; 30 ; 31 TMatrixD fEigenVectors; ///< Eigenvector matrix of trans; 32 TVectorD fEigenValues; ///< Eigenvalue vector of trans; 33 ; 34 TVectorD fOffDiagonal; ///< Elements of the tridiagonal; 35 ; 36 TVectorD fUserData; ///< Vector of original data points; 37 ; 38 Double_t fTrace; ///< Trace of covarience matrix; 39 ; 40 TList *fHistograms; ///< List of histograms; 41 ; 42 Bool_t fIsNormalised; ///< Normalize matrix?; 43 Bool_t fStoreData; ///< Should we store input data?; 44 ; 45 TPrincipal(const TPrincipal&);; 46 TPrincipal& operator=(const TPrincipal&);; 47 ; 48 void MakeNormalised();; 49 void MakeRealCode(const char *filename, const char *prefix, Option_t *option="""");; 50 ; 51public:; 52 TPrincipal();; 53 ~TPrincipal() override;; 54 TPrincipal(Long64_t nVariables, Option_t *opt=""ND"");; 55 ; 56 virtual void AddRow(const Double_t *x);; 57 void Browse(TBrowser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPrincipal_8h_source.html:78,Guid,Guide,78,doc/master/TPrincipal_8h_source.html,https://root.cern,https://root.cern/doc/master/TPrincipal_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TProfile.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TProfile.h File Reference. #include ""TH1.h"". Include dependency graph for TProfile.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TProfile;  Profile Histogram. More...;  . Enumerations; enum  EErrorType { kERRORMEAN = 0; , kERRORSPREAD; , kERRORSPREADI; , kERRORSPREADG; };  . Enumeration Type Documentation. ◆ EErrorType. enum EErrorType. EnumeratorkERRORMEAN ; kERRORSPREAD ; kERRORSPREADI ; kERRORSPREADG . Definition at line 28 of file TProfile.h. histhistincTProfile.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8h.html:79,Guid,Guide,79,doc/master/TProfile_8h.html,https://root.cern,https://root.cern/doc/master/TProfile_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TProfile.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 29/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TProfile; 13#define ROOT_TProfile; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TProfile //; 19// //; 20// Profile histogram class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH1.h""; 25 ; 26class TProfileHelper;; 27 ; 28enum EErrorType { kERRORMEAN = 0, kERRORSPREAD, kERRORSPREADI, kERRORSPREADG };; 29 ; 30class TF1;; 31 ; 32class TProfile : public TH1D {; 33 ; 34public:; 35 friend class TProfileHelper;; 36 friend class TH1Merger;; 37 ; 38protected:; 39 TArrayD fBinEntries; ///< number of entries per bin; 40 EErrorType fErrorMode; ///< Option to compute errors; 41 Double_t fYmin; ///< Lower limit in Y (if set); 42 Double_t fYmax; ///< Upper limit in Y (if set); 43 Bool_t fScaling; ///<! True when TProfile::Scale is called; 44 Double_t fTsumwy; ///< Total Sum of weight*Y; 45 Double_t fTsumwy2; ///< Total Sum of weight*Y*Y; 46 TArrayD fBinSumw2; ///< Array of sum of squares of weights per bin; 47 ; 48 static Bool_t fgApproximate; ///< bin error approximation option; 49 ; 50 Int_t BufferFill(Double_t, Double_t) override {return -2;} //may not use; 51 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t w);; 52 ; 53 // helper methods for the Merge unification in TProfileHelper; 54 void SetBins(const Int_t* nbins, const Double_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8h_source.html:76,Guid,Guide,76,doc/master/TProfile_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TProfile2D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile2D.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 16/04/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TProfile2D; 13#define ROOT_TProfile2D; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TProfile2D //; 19// //; 20// Profile2D histogram class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH2.h""; 25#include ""TProfile.h""; 26 ; 27class TProfile2D : public TH2D {; 28 ; 29public:; 30 friend class TProfileHelper;; 31 friend class TH1Merger;; 32 ; 33protected:; 34 TArrayD fBinEntries; ///< Number of entries per bin; 35 EErrorType fErrorMode; ///< Option to compute errors; 36 Double_t fZmin; ///< Lower limit in Z (if set); 37 Double_t fZmax; ///< Upper limit in Z (if set); 38 Bool_t fScaling; ///<! True when TProfile2D::Scale is called; 39 Double_t fTsumwz; ///< Total Sum of weight*Z; 40 Double_t fTsumwz2; ///< Total Sum of weight*Z*Z; 41 TArrayD fBinSumw2; ///< Array of sum of squares of weights per bin; 42 static Bool_t fgApproximate; ///< Bin error approximation option; 43 ; 44 Int_t BufferFill(Double_t, Double_t) override {return -2;} //may not use; 45 Int_t BufferFill(Double_t, Double_t, Double_t) override {return -2;} //may not use; 46 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t z, Double_t w);; 47 ; 48 // helper methods for the Merge unification in TProfileHelper; 49 void SetBins(const Int_t* nbins, const Double_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8h_source.html:78,Guid,Guide,78,doc/master/TProfile2D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TProfile3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile3D.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 17/05/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TProfile3D; 13#define ROOT_TProfile3D; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TProfile3D //; 19// //; 20// Profile3D histogram class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH3.h""; 25#include ""TProfile.h""; 26 ; 27class TProfile3D : public TH3D {; 28 ; 29public:; 30 friend class TProfileHelper;; 31 friend class TH1Merger;; 32 ; 33protected:; 34 TArrayD fBinEntries; ///< Number of entries per bin; 35 EErrorType fErrorMode; ///< Option to compute errors; 36 Double_t fTmin; ///< Lower limit in T (if set); 37 Double_t fTmax; ///< Upper limit in T (if set); 38 Bool_t fScaling; ///<! True when TProfile3D::Scale is called; 39 Double_t fTsumwt; ///< Total Sum of weight*T; 40 Double_t fTsumwt2; ///< Total Sum of weight*T*T; 41 TArrayD fBinSumw2; ///< Array of sum of squares of weights per bin; 42 static Bool_t fgApproximate; ///< Bin error approximation option; 43 ; 44 Int_t BufferFill(Double_t, Double_t) override {return -2;} //may not use; 45 Int_t BufferFill(Double_t, Double_t, Double_t) override {return -2;} //may not use; 46 Int_t BufferFill(Double_t, Double_t, Double_t, Double_t) override {return -2;} //may not use; 47 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t z, Double_t t, Double_t w);; 48 ; 49 // hel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8h_source.html:78,Guid,Guide,78,doc/master/TProfile3D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TScatter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TScatter.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Olivier Couet 18/05/2022; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TScatter; 13#define ROOT_TScatter; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TScatter //; 19// //; 20// A scatter plot able to draw four variables on a single plot //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TAttLine.h""; 26#include ""TAttFill.h""; 27#include ""TAttMarker.h""; 28#include ""TGraph.h""; 29 ; 30class TH2F;; 31 ; 32class TScatter : public TNamed, public TAttLine, public TAttFill, public TAttMarker {; 33 ; 34protected:; 35 Int_t fMaxSize{-1}; ///<!Current dimension of arrays fX and fY; 36 Int_t fNpoints{-1}; ///< Number of points <= fMaxSize; 37 TH2F *fHistogram{nullptr}; ///< Pointer to histogram used for drawing axis; 38 TGraph *fGraph{nullptr}; ///< Pointer to graph holding X and Y positions; 39 Double_t *fColor{nullptr}; ///< [fNpoints] array of colors; 40 Double_t *fSize{nullptr}; ///< [fNpoints] array of marker sizes; 41 Double_t fMaxMarkerSize{5.}; ///< Largest marker size used to paint the markers; 42 Double_t fMinMarkerSize{1.}; ///< Smallest marker size used to paint the markers; 43 Double_t fMargin{.1}; ///< Margin around the plot in %; 44 ; 45public:; 46 TScatter();; 47 TScatter(Int_t n);; 48 TScatter(Int_t n, const Double_t *x, const Double_t *y, const Double_t *col = nullptr, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TScatter_8h_source.html:76,Guid,Guide,76,doc/master/TScatter_8h_source.html,https://root.cern,https://root.cern/doc/master/TScatter_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/TVirtualFitter.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TVirtualFitter.h File Reference. #include ""TNamed.h""; #include ""TMethodCall.h""; #include ""Foption.h"". Include dependency graph for TVirtualFitter.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TVirtualFitter;  Abstract Base Class for Fitting. More...;  . histhistincTVirtualFitter.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFitter_8h.html:85,Guid,Guide,85,doc/master/TVirtualFitter_8h.html,https://root.cern,https://root.cern/doc/master/TVirtualFitter_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/inc/v5/TFormula.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFormula.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Nicolas Brun 19/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// ---------------------------------- Formula.h; 12 ; 13#ifndef ROOT_v5_TFormula; 14#define ROOT_v5_TFormula; 15 ; 16 ; 17 ; 18//////////////////////////////////////////////////////////////////////////; 19// //; 20// TFormula //; 21// //; 22// The old formula base class f(x,y,z,par) //; 23// mantained for backward compatibility and TTree usage //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TNamed.h""; 27#include ""TBits.h""; 28#include ""TObjArray.h""; 29 ; 30 ; 31const Int_t kMAXFOUND = 500;; 32const Int_t kTFOperMask = 0x7fffff;; 33const UChar_t kTFOperShift = 23;; 34 ; 35 ; 36 ; 37namespace ROOT {; 38 namespace v5 {; 39 ; 40 class TFormulaPrimitive;; 41 ; 42class TOperOffset {; 43 friend class TFormula;; 44public:; 45 enum {; 46 kVariable = 0,; 47 kParameter = 1,; 48 kConstant = 2; 49 };; 50 TOperOffset();; 51protected:; 52 Short_t fType0; // type of operand 0; 53 Short_t fOffset0; // offset of operand 0; 54 Short_t fType1; // type of operand 1; 55 Short_t fOffset1; // offset of operand 1; 56 Short_t fType2; // type of operand 2; 57 Short_t fOffset2; // offset of operand 2; 58 Short_t fType3; // type of operand 3; 59 Short_t fOffset3; // offset of operand 3; 60 Short_t fToJump; // where to jump in case of optimized boolen; 61 Short_t fOldAction; // temporary variable used during optimization; 62};; 63 ; 64 ; 65cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/v5_2TFormula_8h_source.html:79,Guid,Guide,79,doc/master/v5_2TFormula_8h_source.html,https://root.cern,https://root.cern/doc/master/v5_2TFormula_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/HFitImpl.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. HFitImpl.cxx. Go to the documentation of this file. 1// new HFit function; 2//______________________________________________________________________________; 3 ; 4 ; 5#include ""TH1.h""; 6#include ""TF1.h""; 7#include ""TF2.h""; 8#include ""TF3.h""; 9#include ""TError.h""; 10#include ""TGraph.h""; 11#include ""TMultiGraph.h""; 12#include ""TGraph2D.h""; 13#include ""THnBase.h""; 14 ; 15#include ""Fit/Fitter.h""; 16#include ""Fit/FitConfig.h""; 17#include ""Fit/BinData.h""; 18#include ""Fit/UnBinData.h""; 19#include ""Fit/Chi2FCN.h""; 20#include ""Fit/PoissonLikelihoodFCN.h""; 21#include ""HFitInterface.h""; 22#include ""Math/MinimizerOptions.h""; 23#include ""Math/Minimizer.h""; 24 ; 25#include ""Math/WrappedTF1.h""; 26#include ""Math/WrappedMultiTF1.h""; 27 ; 28#include ""TList.h""; 29#include ""TMath.h""; 30#include ""TROOT.h""; 31 ; 32#include ""TVirtualPad.h"" // for gPad; 33 ; 34#include ""TBackCompFitter.h""; 35#include ""TFitResultPtr.h""; 36#include ""TFitResult.h""; 37 ; 38#include <cstdlib>; 39#include <cmath>; 40#include <memory>; 41#include <limits>; 42 ; 43//#define DEBUG; 44 ; 45// utility functions used in TH1::Fit; 46 ; 47namespace HFit {; 48 ; 49 ; 50 int GetDimension(const TH1 * h1) { return h1->GetDimension(); }; 51 int GetDimension(const TGraph * ) { return 1; }; 52 int GetDimension(const TMultiGraph * ) { return 1; }; 53 int GetDimension(const TGraph2D * ) { return 2; }; 54 int GetDimension(const THnBase * s1) { return s1->GetNdimensions(); }; 55 ; 56 int CheckFitFunction(const TF1 * f1, int hdim);; 57 ; 58 ; 59 void GetFunctionRange(const TF1 & f1, ROOT::Fit::DataRange & range);; 60 ; 61 void FitOptionsMake(const char *option, Foption_t &fitOption);; 62 ; 63 void CheckGraphFitOptions(Foption_t &fitOption);; 64 ; 65 ; 66 void GetDrawingRange(TH1 * h1, ROOT::Fit::DataRange & range);; 67 void GetDrawingRange(TGraph * gr, ROOT::Fit::DataRange & range);; 68 void GetDrawingRang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:78,Guid,Guide,78,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/HFitInterface.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. HFitInterface.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: L. Moneta Thu Aug 31 10:40:20 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class TH1Interface; 12 ; 13#include ""HFitInterface.h""; 14 ; 15#include ""Fit/BinData.h""; 16#include ""Fit/SparseData.h""; 17#include ""Fit/FitResult.h""; 18#include ""Math/IParamFunction.h""; 19 ; 20#include <vector>; 21 ; 22#include <cassert>; 23#include <cmath>; 24 ; 25#include ""TH1.h""; 26#include ""THnBase.h""; 27#include ""TF1.h""; 28#include ""TGraph2D.h""; 29#include ""TGraph.h""; 30#include ""TGraphErrors.h""; 31// #include ""TGraphErrors.h""; 32// #include ""TGraphBentErrors.h""; 33// #include ""TGraphAsymmErrors.h""; 34#include ""TMultiGraph.h""; 35#include ""TList.h""; 36#include ""TError.h""; 37 ; 38 ; 39//#define DEBUG; 40#ifdef DEBUG; 41#include ""TClass.h""; 42#include <iostream>; 43#endif; 44 ; 45 ; 46namespace ROOT {; 47 ; 48namespace Fit {; 49 ; 50// add a namespace to distinguish from the Graph functions; 51namespace HFitInterface {; 52 ; 53 ; 54bool IsPointOutOfRange(const TF1 * func, const double * x) {; 55 // function to check if a point is outside range; 56 if (func ==nullptr) return false;; 57 return !func->IsInside(x);; 58}; 59 ; 60bool AdjustError(const DataOptions & option, double & error, double value = 1) {; 61 // adjust the given error according to the option; 62 // return false when point must be skipped.; 63 // When point error = 0, the point is kept if the option UseEmpty is set or if; 64 // fErrors1 is set and the point value is not zero.; 65 // The value should be used only for points representing counts (histograms), not for the graph.; 66 // I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:83,Guid,Guide,83,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/Haxis.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Haxis.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 18/05/95; 3 ; 4#include <cstring>; 5#include <cstdio>; 6#include <cctype>; 7 ; 8#include ""TH1.h""; 9 ; 10 ; 11////////////////////////////////////////////////////////////////////////////////; 12/// Choose an axis according to ""axis"".; 13 ; 14Int_t TH1::AxisChoice( Option_t *axis) const; 15{; 16 char achoice = toupper(axis[0]);; 17 if (achoice == 'X') return 1;; 18 if (achoice == 'Y') return 2;; 19 if (achoice == 'Z') return 3;; 20 return 0;; 21}; 22 ; 23 ; 24////////////////////////////////////////////////////////////////////////////////; 25/// Return the number of divisions for ""axis"".; 26 ; 27Int_t TH1::GetNdivisions( Option_t *axis) const; 28{; 29 Int_t ax = AxisChoice(axis);; 30 if (ax == 1) return fXaxis.GetNdivisions();; 31 if (ax == 2) return fYaxis.GetNdivisions();; 32 if (ax == 3) return fZaxis.GetNdivisions();; 33 return 0;; 34}; 35 ; 36 ; 37////////////////////////////////////////////////////////////////////////////////; 38/// Return the number of divisions for ""axis"".; 39 ; 40Color_t TH1::GetAxisColor( Option_t *axis) const; 41{; 42 Int_t ax = AxisChoice(axis);; 43 if (ax == 1) return fXaxis.GetAxisColor();; 44 if (ax == 2) return fYaxis.GetAxisColor();; 45 if (ax == 3) return fZaxis.GetAxisColor();; 46 return 0;; 47}; 48 ; 49 ; 50////////////////////////////////////////////////////////////////////////////////; 51/// Return the ""axis"" label color.; 52 ; 53Color_t TH1::GetLabelColor( Option_t *axis) const; 54{; 55 Int_t ax = AxisChoice(axis);; 56 if (ax == 1) return fXaxis.GetLabelColor();; 57 if (ax == 2) return fYaxis.GetLabelColor();; 58 if (ax == 3) return fZaxis.GetLabelColor();; 59 return 0;; 60}; 61 ; 62 ; 63////////////////////////////////////////////////////////////////////////////////; 64/// Return the ""axis"" label font.; 65 ; 66S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Haxis_8cxx_source.html:75,Guid,Guide,75,doc/master/Haxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Haxis_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TAxis.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAxis.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TAxis.h""; 13#include ""TVirtualPad.h""; 14#include ""TStyle.h""; 15#include ""TError.h""; 16#include ""THashList.h""; 17#include ""TList.h""; 18#include ""TAxisModLab.h""; 19#include ""TH1.h""; 20#include ""TObjString.h""; 21#include ""TDatime.h""; 22#include ""TTimeStamp.h""; 23#include ""TBuffer.h""; 24#include ""TMath.h""; 25#include ""THLimitsFinder.h""; 26#include ""strlcpy.h""; 27#include ""snprintf.h""; 28 ; 29#include <iostream>; 30#include <ctime>; 31#include <cassert>; 32 ; 33ClassImp(TAxis);; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/** \class TAxis; 37 \ingroup Histograms; 38 \brief Class to manage histogram axis; 39 ; 40This class manages histogram axis. It is referenced by TH1 and TGraph.; 41To make a graphical representation of an histogram axis, this class; 42references the TGaxis class. TAxis supports axis with fixed or variable bin sizes.; 43Labels may be associated to individual bins.; 44See examples of various axis representations drawn by class TGaxis.; 45*///////////////////////////////////////////////////////////////////////////////; 46 ; 47////////////////////////////////////////////////////////////////////////////////; 48/// Default constructor.; 49 ; 50TAxis::TAxis(); 51{; 52 fNbins = 1;; 53 fXmin = 0;; 54 fXmax = 1;; 55 fFirst = 0;; 56 fLast = 0;; 57 fParent = nullptr;; 58 fLabels = nullptr;; 59 fModLabs = nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:75,Guid,Guide,75,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TEfficiency.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEfficiency.cxx. Go to the documentation of this file. 1#ifndef ROOT_TEfficiency_cxx; 2#define ROOT_TEfficiency_cxx; 3 ; 4//standard header; 5#include <vector>; 6#include <string>; 7#include <cmath>; 8#include <cstdlib>; 9#include <cassert>; 10 ; 11//ROOT headers; 12#include ""Math/DistFuncMathCore.h""; 13#include ""TBinomialEfficiencyFitter.h""; 14#include ""TDirectory.h""; 15#include ""TF1.h""; 16#include ""TGraphAsymmErrors.h""; 17#include ""TGraph2DAsymmErrors.h""; 18#include ""TH1.h""; 19#include ""TH2.h""; 20#include ""TH3.h""; 21#include ""TList.h""; 22#include ""TMath.h""; 23#include ""TROOT.h""; 24#include ""TStyle.h""; 25#include ""TVirtualPad.h""; 26#include ""TError.h""; 27#include ""Math/BrentMinimizer1D.h""; 28#include ""Math/WrappedFunction.h""; 29 ; 30//custom headers; 31#include ""TEfficiency.h""; 32 ; 33// file with extra class for FC method; 34#include ""TEfficiencyHelper.h""; 35 ; 36//default values; 37const Double_t kDefBetaAlpha = 1;; 38const Double_t kDefBetaBeta = 1;; 39const Double_t kDefConfLevel = 0.682689492137; // 1 sigma; 40const TEfficiency::EStatOption kDefStatOpt = TEfficiency::kFCP;; 41const Double_t kDefWeight = 1;; 42 ; 43ClassImp(TEfficiency);; 44 ; 45////////////////////////////////////////////////////////////////////////////////; 46/** \class TEfficiency; 47 \ingroup Hist; 48 \brief Class to handle efficiency histograms; 49 ; 50- [I. Overview](\ref EFF01); 51- [II. Creating a TEfficiency object](\ref EFF02); 52 - [Example 1](\ref EFF02a); 53 - [Example 2](\ref EFF02b); 54- [III. Filling with events](\ref EFF03); 55- [IV. Statistic options](\ref EFF04); 56 - [Frequentist methods](\ref EFF04a); 57 - [Bayesian methods](\ref EFF04b); 58 - [IV.1 Coverage probabilities for different methods](\ref EFF041); 59- [V. Merging and combining TEfficiency objects](\ref EFF05); 60 - [Example](\ref EFF05a); 61 - [V.1 When should I use merging?](\ref EFF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:81,Guid,Guide,81,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TEfficiencyHelper.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TEfficiencyHelper.h File Reference. #include <algorithm>; #include <cmath>; #include <vector>; #include ""Math/PdfFuncMathCore.h"". Include dependency graph for TEfficiencyHelper.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  BinomialNeymanInterval< Sorter >;  Implement noncentral binomial confidence intervals using the Neyman construction. More...;  ; class  BinomialProbHelper;  Helper class impelementing the binomial probability and the likelihood ratio used for ordering the interval in the FeldmanCousins interval class. More...;  ; class  FeldmanCousinsBinomialInterval;  ; struct  FeldmanCousinsSorter;  . histhistsrcTEfficiencyHelper.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiencyHelper_8h.html:88,Guid,Guide,88,doc/master/TEfficiencyHelper_8h.html,https://root.cern,https://root.cern/doc/master/TEfficiencyHelper_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TF1.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 18/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include <memory>; 14#include ""strlcpy.h""; 15#include ""snprintf.h""; 16#include ""TROOT.h""; 17#include ""TBuffer.h""; 18#include ""TMath.h""; 19#include ""TF1.h""; 20#include ""TH1.h""; 21#include ""TGraph.h""; 22#include ""TVirtualPad.h""; 23#include ""TStyle.h""; 24#include ""TRandom.h""; 25#include ""TObjString.h""; 26#include ""TInterpreter.h""; 27#include ""TPluginManager.h""; 28#include ""TBrowser.h""; 29#include ""TColor.h""; 30#include ""TMethodCall.h""; 31#include ""TF1Helper.h""; 32#include ""TF1NormSum.h""; 33#include ""TF1Convolution.h""; 34#include ""TVirtualMutex.h""; 35#include ""Math/WrappedFunction.h""; 36#include ""Math/WrappedTF1.h""; 37#include ""Math/BrentRootFinder.h""; 38#include ""Math/BrentMinimizer1D.h""; 39#include ""Math/BrentMethods.h""; 40#include ""Math/Integrator.h""; 41#include ""Math/IntegratorMultiDim.h""; 42#include ""Math/IntegratorOptions.h""; 43#include ""Math/GaussIntegrator.h""; 44#include ""Math/GaussLegendreIntegrator.h""; 45#include ""Math/AdaptiveIntegratorMultiDim.h""; 46#include ""Math/RichardsonDerivator.h""; 47#include ""Math/Functor.h""; 48#include ""Math/Minimizer.h""; 49#include ""Math/MinimizerOptions.h""; 50#include ""Math/Factory.h""; 51#include ""Math/ChebyshevPol.h""; 52#include ""Fit/FitResult.h""; 53// for I/O backward compatibility; 54#include ""v5/TF1Data.h""; 55 ; 56#include ""AnalyticalIntegrals.h""; 57 ; 58std::atomic<Bool_t> TF1::fgAbsValue(kFALSE);; 59Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:73,Guid,Guide,73,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TF1Convolution.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1Convolution.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Authors: Lorenzo Moneta, Aurélie Flandi 27/08/14; 3//; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 ROOT Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#include <memory>; 12 ; 13#include ""TF1Convolution.h""; 14#include ""TROOT.h""; 15#include ""TObject.h""; 16#include ""TObjString.h""; 17#include ""TObjArray.h""; 18#include ""TMath.h""; 19#include ""Math/Integrator.h""; 20#include ""Math/IntegratorMultiDim.h""; 21#include ""Math/IntegratorOptions.h""; 22#include ""Math/GaussIntegrator.h""; 23#include ""Math/GaussLegendreIntegrator.h""; 24#include ""Math/AdaptiveIntegratorMultiDim.h""; 25#include ""Math/Functor.h""; 26#include ""TVirtualFFT.h""; 27 ; 28/** \class TF1Convolution; 29 \ingroup Functions; 30 \brief Class wrapping convolution of two functions; 31 ; 32Class wrapping convolution of two functions: evaluation of \f$\int f(x)g(x-t)dx\f$; 33 ; 34The convolution is performed by default using FFTW if it is available .; 35One can pass optionally the range of the convolution (by default the first function range is used).; 36Note that when using Discrete Fourier Transform (as FFTW), it is a circular transform, so the functions should be; 37approximately zero at the end of the range. If they are significantly different than zero on one side (e.g. the left side); 38a spill over will occur on the other side (e.g right side).; 39If no function range is given by default the function1 range + 10% is used; 40One should use also a not too small number of points for the DFT (a minimum of 1000). By default 10000 points are used.; 41*/; 42 ; 43ClassImp(TF1Convolution);; 44 ; 45Double_t TF1Convolution::fgExtraRangeFraction = 0.1;; 46 ; 47class TF1Convolution_Eva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1Convolution_8cxx_source.html:84,Guid,Guide,84,doc/master/TF1Convolution_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1Convolution_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TF1NormSum.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1NormSum.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Authors: Lorenzo Moneta, Aurélie Flandi 27/08/14; 3//; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 ROOT Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#include ""TROOT.h""; 12#include ""TClass.h""; 13#include ""TObjString.h""; 14#include ""TObjArray.h""; 15#include ""TF1NormSum.h""; 16#include ""Math/WrappedFunction.h""; 17#include ""Math/WrappedTF1.h""; 18 ; 19ClassImp(TF1NormSum);; 20 ; 21/** \class TF1NormSum; 22 \ingroup Functions; 23Class adding two functions: c1*f1+c2*f2; 24*/; 25 ; 26////////////////////////////////////////////////////////////////////////////////; 27/// Function to find and rename duplicate parameters with the same name; 28 ; 29template<class Iterator>; 30void FixDuplicateNames(Iterator begin, Iterator end) {; 31 ; 32 // make a map of values; 33 ; 34 std::multimap<TString, int > parMap;; 35 for (Iterator it = begin; it != end; ++it) {; 36 parMap.insert( std::make_pair( *it, std::distance(begin,it) ) );; 37 }; 38 for ( auto & elem : parMap) {; 39 TString name = elem.first;; 40 int n = parMap.count( name);; 41 if (n > 1 ) {; 42 std::pair <std::multimap<TString,int>::iterator, std::multimap<TString,int>::iterator> ret;; 43 ret = parMap.equal_range(name);; 44 int i = 0;; 45 for (std::multimap<TString,int>::iterator it=ret.first; it!=ret.second; ++it) {; 46 *(begin+it->second) = TString::Format(""%s%d"",name.Data(),++i);; 47 }; 48 }; 49 }; 50 ; 51}; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54 ; 55void TF1NormSum::InitializeDataMembers(const std::vector<TF1 *> &functions, const std::vector<Double_t> &coeffs,; 56 Double_t scale); 57{; 58 ; 59 fScale = scale;; 60 fCoeffs = coeffs;; 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1NormSum_8cxx_source.html:80,Guid,Guide,80,doc/master/TF1NormSum_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1NormSum_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TF2.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF2.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 23/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TF2.h""; 14#include ""TMath.h""; 15#include ""TRandom.h""; 16#include ""TBuffer.h""; 17#include ""TH2.h""; 18#include ""TVirtualPad.h""; 19#include <iostream>; 20#include ""TColor.h""; 21#include ""TVirtualFitter.h""; 22#include ""Math/IntegratorOptions.h""; 23#include ""snprintf.h""; 24 ; 25ClassImp(TF2);; 26 ; 27/** \class TF2; 28 \ingroup Functions; 29 \brief A 2-Dim function with parameters.; 30 ; 31The following types of functions can be created:; 32 ; 331. [Expression using variables x and y](\ref TF2a); 342. [Expression using a user defined function](\ref TF2b); 353. [Lambda Expression with x and y variables and parameters](\ref TF2c); 36 ; 37\anchor TF2a; 38### Expression using variables x and y; 39 ; 40Begin_Macro (source); 41{; 42 auto f2 = new TF2(""f2"",""sin(x)*sin(y)/(x*y)"",0,5,0,5);; 43 f2->Draw();; 44}; 45End_Macro; 46 ; 47\anchor TF2b; 48### Expression using a user defined function; 49 ; 50~~~~{.cpp}; 51Double_t func(Double_t *val, Double_t *par); 52{; 53 Float_t x = val[0];; 54 Float_t y = val[1];; 55 Double_t f = x*x-y*y;; 56 return f;; 57}; 58 ; 59void fplot(); 60{; 61 auto f = new TF2(""f"",func,-1,1,-1,1);; 62 f->Draw(""surf1"");; 63}; 64~~~~; 65 ; 66\anchor TF2c; 67### Lambda Expression with x and y variables and parameters; 68 ; 69~~~~{.cpp}; 70root [0] TF2 f2(""f2"", [](double* x, double*p) { return x[0] + x[1] * p[0]; }, 0., 1., 0., 1., 1)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8cxx_source.html:73,Guid,Guide,73,doc/master/TF2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF2_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TFitResult.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResult.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: David Gonzalez Maline 12/11/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TFitResult.h""; 13#include ""Math/WrappedMultiTF1.h""; 14#include ""TGraph.h""; 15 ; 16 ; 17#include <iostream>; 18 ; 19/** \class TFitResult; 20 \ingroup Hist; 21Extends the ROOT::Fit::Result class with a TNamed inheritance; 22providing easy possibility for I/O; 23*/; 24 ; 25ClassImp(TFitResult);; 26 ; 27////////////////////////////////////////////////////////////////////////////////; 28/// Constructor from a ROOT::Fit::FitResult; 29/// copy the contained TF1 pointer function if it is; 30 ; 31TFitResult::TFitResult(const ROOT::Fit::FitResult& f) :; 32 TNamed(""TFitResult"",""TFitResult""),; 33 ROOT::Fit::FitResult(f); 34{; 35 ROOT::Math::WrappedMultiTF1 * wfunc = dynamic_cast<ROOT::Math::WrappedMultiTF1 *>(ModelFunction().get() );; 36 if (wfunc) wfunc->SetAndCopyFunction();; 37}; 38 ; 39 ; 40////////////////////////////////////////////////////////////////////////////////; 41/// Print result of the fit, by default chi2, parameter values and errors.; 42/// if option ""V"" is given print also error matrix and correlation; 43 ; 44void TFitResult::Print(Option_t *option) const; 45{; 46 TString opt(option);; 47 opt.ToUpper();; 48 bool doCovMat = opt.Contains(""V"");; 49 ROOT::Fit::FitResult::Print( std::cout, doCovMat);; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Return the covariance matrix fro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResult_8cxx_source.html:80,Guid,Guide,80,doc/master/TFitResult_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFitResult_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TFitResultPtr.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResultPtr.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: David Gonzalez Maline 12/11/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TFitResultPtr.h""; 13#include ""TFitResult.h""; 14#include ""TError.h""; 15 ; 16/** \class TFitResultPtr; 17Provides an indirection to the TFitResult class and with a semantics; 18identical to a TFitResult pointer, i.e. it is like a smart pointer to a TFitResult.; 19In addition it provides an automatic conversion to an integer. In this way it can be; 20returned from the TH1::Fit method and the change in TH1::Fit be backward compatible.; 21 */; 22 ; 23ClassImp(TFitResultPtr);; 24 ; 25////////////////////////////////////////////////////////////////////////////////; 26/// Constructor from a TFitResult pointer; 27 ; 28TFitResultPtr::TFitResultPtr(const std::shared_ptr<TFitResult> & p) :; 29 fStatus(-1),; 30 fPointer(p); 31{; 32 if (fPointer) fStatus = fPointer->Status();; 33}; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/// Constructor from a TFitResult pointer; 37 ; 38TFitResultPtr::TFitResultPtr(TFitResult * p) :; 39 fStatus(-1),; 40 fPointer(std::shared_ptr<TFitResult>(p)); 41{; 42 if (fPointer) fStatus = fPointer->Status();; 43}; 44 ; 45TFitResultPtr::TFitResultPtr(const TFitResultPtr& rhs) :; 46 fStatus(rhs.fStatus), fPointer(rhs.fPointer); 47{; 48}; 49 ; 50////////////////////////////////////////////////////////////////////////////////; 51/// Destructor. Delete the contained TFitResul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResultPtr_8cxx_source.html:83,Guid,Guide,83,doc/master/TFitResultPtr_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFitResultPtr_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TFormula.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFormula.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Maciej Zimnoch 30/09/2013; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TMethod.h""; 15#include ""TF1.h""; 16#include ""TMethodCall.h""; 17#include <TBenchmark.h>; 18#include ""TError.h""; 19#include ""TInterpreter.h""; 20#include ""TInterpreterValue.h""; 21#include ""TFormula.h""; 22#include ""TRegexp.h""; 23 ; 24#include ""ROOT/StringUtils.hxx""; 25 ; 26#include <array>; 27#include <iostream>; 28#include <memory>; 29#include <unordered_map>; 30#include <functional>; 31#include <set>; 32#include <sstream>; 33 ; 34using std::map, std::pair, std::make_pair, std::list, std::max, std::string;; 35 ; 36#ifdef WIN32; 37#pragma optimize("""",off); 38#endif; 39#include ""v5/TFormula.h""; 40 ; 41ClassImp(TFormula);; 42 ; 43/** \class TFormula TFormula.h ""inc/TFormula.h""; 44 \ingroup Hist; 45 The Formula class; 46 ; 47 This is a new version of the TFormula class based on Cling.; 48 This class is not 100% backward compatible with the old TFormula class, which is still available in ROOT as; 49 `ROOT::v5::TFormula`. Some of the TFormula member functions available in version 5, such as; 50 `Analyze` and `AnalyzeFunction` are not available in the new TFormula.; 51 On the other hand formula expressions which were valid in version 5 are still valid in TFormula version 6; 52 ; 53 This class has been implemented during Google Summer of Code 2013 by Maciej Zimnoch.; 54 ; 55 ### Example of valid expressions:;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:78,Guid,Guide,78,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TGraph.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun, Olivier Couet 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#include ""TROOT.h""; 14#include ""TBuffer.h""; 15#include ""TEnv.h""; 16#include ""TGraph.h""; 17#include ""TGraphErrors.h""; 18#include ""TGraphAsymmErrors.h""; 19#include ""TGraphBentErrors.h""; 20#include ""TH1.h""; 21#include ""TF1.h""; 22#include ""TStyle.h""; 23#include ""TMath.h""; 24#include ""TVectorD.h""; 25#include ""Foption.h""; 26#include ""TRandom.h""; 27#include ""TSpline.h""; 28#include ""TVirtualFitter.h""; 29#include ""TVirtualPad.h""; 30#include ""TVirtualGraphPainter.h""; 31#include ""TBrowser.h""; 32#include ""TSystem.h""; 33#include ""TPluginManager.h""; 34#include ""strtok.h""; 35 ; 36#include <cstdlib>; 37#include <string>; 38#include <cassert>; 39#include <iostream>; 40#include <fstream>; 41#include <cstring>; 42#include <numeric>; 43 ; 44#include ""HFitInterface.h""; 45#include ""Fit/DataRange.h""; 46#include ""Math/MinimizerOptions.h""; 47 ; 48extern void H1LeastSquareSeqnd(Int_t n, Double_t *a, Int_t idim, Int_t &ifail, Int_t k, Double_t *b);; 49 ; 50ClassImp(TGraph);; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53 ; 54/** \class TGraph; 55 \ingroup Graphs; 56A TGraph is an object made of two arrays X and Y with npoints each.; 57The TGraph painting is performed thanks to the TGraphPainter; 58class. All details about the various painting options are given in this class.; 59 ; 60#### Notes; 61 ; 62 - Unlike histogram or t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8cxx_source.html:76,Guid,Guide,76,doc/master/TGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TGraph2D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2D.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2D.cxx,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TMath.h""; 15#include ""TH2.h""; 16#include ""TF2.h""; 17#include ""TList.h""; 18#include ""TGraph2D.h""; 19#include ""TGraphDelaunay.h""; 20#include ""TGraphDelaunay2D.h""; 21#include ""TVirtualPad.h""; 22#include ""TVirtualFitter.h""; 23#include ""TVirtualHistPainter.h""; 24#include ""TPluginManager.h""; 25#include ""TSystem.h""; 26#include ""strtok.h""; 27#include ""snprintf.h""; 28 ; 29#include <cstdlib>; 30#include <cassert>; 31#include <iostream>; 32#include <fstream>; 33 ; 34#include ""HFitInterface.h""; 35#include ""Fit/DataRange.h""; 36#include ""Math/MinimizerOptions.h""; 37 ; 38ClassImp(TGraph2D);; 39 ; 40 ; 41/** \class TGraph2D; 42 \ingroup Graphs; 43Graphics object made of three arrays X, Y and Z with the same number of points each.; 44 ; 45- [Creating a TGraph2D](\ref G2D00); 46- [Drawing options](\ref G2D01); 47- [Examples](\ref G2D02); 48 - [SURF1 Example](\ref G2D021); 49 - [Fitting Example](\ref G2D022); 50 - [PCOL Example](\ref G2D023); 51- [Definition of the Delaunay triangulation (After B. Delaunay)](\ref G2D03); 52 ; 53 ; 54\anchor G2D00; 55## Creating a TGraph2D; 56 ; 57This class has different constructors:; 58- With an array's dimension and three arrays x, y, and z:; 59~~~ {.cpp}; 60 auto g = new TGraph2D(n, x, y, z);; 61~~~; 62 x, y, z arrays can be doubles, floats, or ints.; 63- With an array's",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8cxx_source.html:78,Guid,Guide,78,doc/master/TGraph2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TGraph2DErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2DErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2DErrors.cxx,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TBuffer.h""; 14#include ""TGraph2DErrors.h""; 15#include ""TH2.h""; 16#include ""TVirtualPad.h""; 17#include ""TVirtualFitter.h""; 18#include ""THLimitsFinder.h""; 19 ; 20ClassImp(TGraph2DErrors);; 21 ; 22/** \class TGraph2DErrors; 23 \ingroup Graphs; 24Graph 2D class with errors.; 25 ; 26A TGraph2DErrors is a TGraph2D with errors. It behaves like a TGraph2D and has; 27the same drawing options.; 28 ; 29The **""ERR""** drawing option allows to display the error bars. The; 30following example shows how to use it:; 31 ; 32Begin_Macro(source); 33{; 34 auto c = new TCanvas(""c"",""TGraph2DErrors example"",0,0,600,600);; 35 Double_t P = 6.;; 36 Int_t np = 200;; 37 ; 38 Double_t *rx=0, *ry=0, *rz=0;; 39 Double_t *ex=0, *ey=0, *ez=0;; 40 ; 41 rx = new Double_t[np];; 42 ry = new Double_t[np];; 43 rz = new Double_t[np];; 44 ex = new Double_t[np];; 45 ey = new Double_t[np];; 46 ez = new Double_t[np];; 47 ; 48 auto r = new TRandom();; 49 ; 50 for (Int_t N=0; N<np;N++) {; 51 rx[N] = 2*P*(r->Rndm(N))-P;; 52 ry[N] = 2*P*(r->Rndm(N))-P;; 53 rz[N] = rx[N]*rx[N]-ry[N]*ry[N];; 54 rx[N] = 10.+rx[N];; 55 ry[N] = 10.+ry[N];; 56 rz[N] = 40.+rz[N];; 57 ex[N] = r->Rndm(N);; 58 ey[N] = r->Rndm(N);; 59 ez[N] = 10*r->Rndm(N);; 60 }; 61 ; 62 auto g = new TGraph2DErrors(np, rx, ry, rz, ex, ey, ez);; 63 g->SetTitle(""TGraph2D with error bars:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html:84,Guid,Guide,84,doc/master/TGraph2DErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TGraphAsymmErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphAsymmErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 03/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#include ""TEfficiency.h""; 14#include ""TROOT.h""; 15#include ""TBuffer.h""; 16#include ""TGraphAsymmErrors.h""; 17#include ""TGraphErrors.h""; 18#include ""TStyle.h""; 19#include ""TMath.h""; 20#include ""TVirtualPad.h""; 21#include ""TF1.h""; 22#include ""TH1.h""; 23#include ""TVector.h""; 24#include ""TVectorD.h""; 25#include ""TSystem.h""; 26#include ""Math/QuantFuncMathCore.h""; 27#include ""strtok.h""; 28 ; 29#include <cstring>; 30#include <iostream>; 31#include <fstream>; 32 ; 33 ; 34ClassImp(TGraphAsymmErrors);; 35 ; 36/** \class TGraphAsymmErrors; 37 \ingroup Graphs; 38TGraph with asymmetric error bars.; 39 ; 40The TGraphAsymmErrors painting is performed thanks to the TGraphPainter; 41class. All details about the various painting options are given in this class.; 42 ; 43The picture below gives an example:; 44 ; 45Begin_Macro(source); 46{; 47 auto c1 = new TCanvas(""c1"",""A Simple Graph with asymmetric error bars"",200,10,700,500);; 48 c1->SetFillColor(42);; 49 c1->SetGrid();; 50 c1->GetFrame()->SetFillColor(21);; 51 c1->GetFrame()->SetBorderSize(12);; 52 const Int_t n = 10;; 53 Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; 54 Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; 55 Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; 56 Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; 57 Double_t exh[n] = {.02,.08,.05,.0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:87,Guid,Guide,87,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TGraphBentErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphBentErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Dave Morrison 30/06/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <iostream>; 14 ; 15#include ""TROOT.h""; 16#include ""TGraphBentErrors.h""; 17#include ""TMath.h""; 18#include ""TVirtualPad.h""; 19#include ""TH1.h""; 20#include ""TF1.h""; 21 ; 22ClassImp(TGraphBentErrors);; 23 ; 24 ; 25////////////////////////////////////////////////////////////////////////////////; 26 ; 27/** \class TGraphBentErrors; 28 \ingroup Graphs; 29A TGraphBentErrors is a TGraph with bent, asymmetric error bars.; 30 ; 31The TGraphBentErrors painting is performed thanks to the TGraphPainter; 32class. All details about the various painting options are given in this class.; 33 ; 34The picture below gives an example:; 35Begin_Macro(source); 36{; 37 auto c1 = new TCanvas(""c1"",""A Simple Graph with bent error bars"",200,10,700,500);; 38 const Int_t n = 10;; 39 Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; 40 Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; 41 Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; 42 Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; 43 Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; 44 Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; 45 Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; 46 Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; 47 Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; 48 Double_t eyhd[n] = {.0,.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html:86,Guid,Guide,86,doc/master/TGraphBentErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TGraphDelaunay.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphDelaunay.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraphDelaunay.cxx,v 1.00; 2// Author: Olivier Couet, Luke Jones (Royal Holloway, University of London); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TMath.h""; 13#include ""TGraph2D.h""; 14#include ""TGraphDelaunay.h""; 15 ; 16ClassImp(TGraphDelaunay);; 17 ; 18 ; 19/** \class TGraphDelaunay; 20 \ingroup Graphs; 21TGraphDelaunay generates a Delaunay triangulation of a TGraph2D. This; 22triangulation code derives from an implementation done by Luke Jones; 23(Royal Holloway, University of London) in April 2002 in the PAW context.; 24 ; 25This software cannot be guaranteed to work under all circumstances. They; 26were originally written to work with a few hundred points in an XY space; 27with similar X and Y ranges.; 28 ; 29Definition of Delaunay triangulation (After B. Delaunay):; 30For a set S of points in the Euclidean plane, the unique triangulation DT(S); 31of S such that no point in S is inside the circumcircle of any triangle in; 32DT(S). DT(S) is the dual of the Voronoi diagram of S. If n is the number of; 33points in S, the Voronoi diagram of S is the partitioning of the plane; 34containing S points into n convex polygons such that each polygon contains; 35exactly one point and every point in a given polygon is closer to its; 36central point than to any other. A Voronoi diagram is sometimes also known; 37as a Dirichlet tessellation.; 38 ; 39\image html tgraph2d_delaunay.png; 40 ; 41[This applet](http://www.cs.cor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphDelaunay_8cxx_source.html:84,Guid,Guide,84,doc/master/TGraphDelaunay_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphDelaunay_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TGraphErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 15/09/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#include ""TROOT.h""; 14#include ""TBuffer.h""; 15#include ""TGraphErrors.h""; 16#include ""TStyle.h""; 17#include ""TMath.h""; 18#include ""TVirtualPad.h""; 19#include ""TH1.h""; 20#include ""TF1.h""; 21#include ""TVectorD.h""; 22#include ""TSystem.h""; 23#include ""strtok.h""; 24 ; 25#include <iostream>; 26#include <fstream>; 27#include <cstring>; 28#include <string>; 29 ; 30ClassImp(TGraphErrors);; 31 ; 32 ; 33////////////////////////////////////////////////////////////////////////////////; 34 ; 35/** \class TGraphErrors; 36 \ingroup Graphs; 37A TGraphErrors is a TGraph with error bars.; 38 ; 39The TGraphErrors painting is performed thanks to the TGraphPainter; 40class. All details about the various painting options are given in this class.; 41 ; 42The picture below gives an example:; 43 ; 44Begin_Macro(source); 45{; 46 auto c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);; 47 c1->SetFillColor(42);; 48 c1->SetGrid();; 49 c1->GetFrame()->SetFillColor(21);; 50 c1->GetFrame()->SetBorderSize(12);; 51 const Int_t n = 10;; 52 Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; 53 Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; 54 Double_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; 55 Double_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; 56 auto gr = new TGraphErrors(n,x,y,ex,ey);; 57 gr->SetTitle(""TGraphErrors Examp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:82,Guid,Guide,82,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TGraphMultiErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphMultiErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Simon Spies 18/02/19; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2018-2019, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TStyle.h""; 14#include ""TVirtualPad.h""; 15#include ""TEfficiency.h""; 16#include ""Riostream.h""; 17 ; 18#include ""TArrayD.h""; 19#include ""TVector.h""; 20#include ""TH1.h""; 21#include ""TF1.h""; 22#include ""TMath.h""; 23#include ""Math/QuantFuncMathCore.h""; 24 ; 25#include ""TGraphMultiErrors.h""; 26 ; 27ClassImp(TGraphMultiErrors); 28 ; 29/** \class TGraphMultiErrors; 30 \ingroup Graphs; 31TGraph with asymmetric error bars and multiple y error dimensions.; 32 ; 33The TGraphMultiErrors painting is performed thanks to the TGraphPainter; 34class. All details about the various painting options are given in this class.; 35 ; 36The picture below gives an example:; 37 ; 38Begin_Macro(source); 39{; 40 auto c1 = new TCanvas(""c1"", ""A Simple Graph with multiple y-errors"", 200, 10, 700, 500);; 41 c1->SetGrid();; 42 c1->GetFrame()->SetBorderSize(12);; 43 const Int_t np = 5;; 44 Double_t x[np] = {0, 1, 2, 3, 4};; 45 Double_t y[np] = {0, 2, 4, 1, 3};; 46 Double_t exl[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; 47 Double_t exh[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; 48 Double_t eylstat[np] = {1, 0.5, 1, 0.5, 1};; 49 Double_t eyhstat[np] = {0.5, 1, 0.5, 1, 2};; 50 Double_t eylsys[np] = {0.5, 0.4, 0.8, 0.3, 1.2};; 51 Double_t eyhsys[np] = {0.6, 0.7, 0.6, 0.4, 0.8};; 52 auto gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", np, x, y, exl, e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:87,Guid,Guide,87,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TH1.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions |; Variables ; TH1.cxx File Reference. #include <array>; #include <cctype>; #include <climits>; #include <cmath>; #include <cstdio>; #include <cstdlib>; #include <cstring>; #include <iostream>; #include <sstream>; #include <fstream>; #include ""TROOT.h""; #include ""TBuffer.h""; #include ""TEnv.h""; #include ""TClass.h""; #include ""TMath.h""; #include ""THashList.h""; #include ""TH1.h""; #include ""TH2.h""; #include ""TH3.h""; #include ""TF2.h""; #include ""TF3.h""; #include ""TPluginManager.h""; #include ""TVirtualPad.h""; #include ""TRandom.h""; #include ""TVirtualFitter.h""; #include ""THLimitsFinder.h""; #include ""TProfile.h""; #include ""TStyle.h""; #include ""TVectorF.h""; #include ""TVectorD.h""; #include ""TBrowser.h""; #include ""TError.h""; #include ""TVirtualHistPainter.h""; #include ""TVirtualFFT.h""; #include ""TVirtualPaveStats.h""; #include ""HFitInterface.h""; #include ""Fit/DataRange.h""; #include ""Fit/BinData.h""; #include ""Math/GoFTest.h""; #include ""Math/MinimizerOptions.h""; #include ""Math/QuantFuncMathCore.h""; #include ""TH1Merger.h"". Include dependency graph for TH1.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; static Bool_t AlmostEqual (Double_t a, Double_t b, Double_t epsilon=0.00000001);  Test if two double are almost equal. ;  ; static Bool_t AlmostInteger (Double_t a, Double_t epsilon=0.00000001);  Test if a double is almost an integer. ;  ; void H1InitExpo ();  Compute Initial values of parameters for an exponential. ;  ; void H1InitGaus ();  Compute Initial values of parameters for a gaussian. ;  ; void H1InitPolynom ();  Compute Initial values of parameters for a polynom. ;  ; void H1LeastSquareFit (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx.html:76,Guid,Guide,76,doc/master/TH1_8cxx.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TH1.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <array>; 13#include <cctype>; 14#include <climits>; 15#include <cmath>; 16#include <cstdio>; 17#include <cstdlib>; 18#include <cstring>; 19#include <iostream>; 20#include <sstream>; 21#include <fstream>; 22 ; 23#include ""TROOT.h""; 24#include ""TBuffer.h""; 25#include ""TEnv.h""; 26#include ""TClass.h""; 27#include ""TMath.h""; 28#include ""THashList.h""; 29#include ""TH1.h""; 30#include ""TH2.h""; 31#include ""TH3.h""; 32#include ""TF2.h""; 33#include ""TF3.h""; 34#include ""TPluginManager.h""; 35#include ""TVirtualPad.h""; 36#include ""TRandom.h""; 37#include ""TVirtualFitter.h""; 38#include ""THLimitsFinder.h""; 39#include ""TProfile.h""; 40#include ""TStyle.h""; 41#include ""TVectorF.h""; 42#include ""TVectorD.h""; 43#include ""TBrowser.h""; 44#include ""TError.h""; 45#include ""TVirtualHistPainter.h""; 46#include ""TVirtualFFT.h""; 47#include ""TVirtualPaveStats.h""; 48 ; 49#include ""HFitInterface.h""; 50#include ""Fit/DataRange.h""; 51#include ""Fit/BinData.h""; 52#include ""Math/GoFTest.h""; 53#include ""Math/MinimizerOptions.h""; 54#include ""Math/QuantFuncMathCore.h""; 55 ; 56#include ""TH1Merger.h""; 57 ; 58/** \addtogroup Histograms; 59@{; 60\class TH1C; 61\brief 1-D histogram with a byte per channel (see TH1 documentation); 62\class TH1S; 63\brief 1-D histogram with a short per channel (see TH1 documentation); 64\class TH1I; 65\brief 1-D histogram with an int per channel (see TH1 documentation); 66\class TH1L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:73,Guid,Guide,73,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TH2.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TClass.h""; 15#include ""THashList.h""; 16#include ""TH2.h""; 17#include ""TVirtualPad.h""; 18#include ""TF2.h""; 19#include ""TProfile.h""; 20#include ""TRandom.h""; 21#include ""TMatrixFBase.h""; 22#include ""TMatrixDBase.h""; 23#include ""THLimitsFinder.h""; 24#include ""TError.h""; 25#include ""TMath.h""; 26#include ""TObjString.h""; 27#include ""TObjArray.h""; 28#include ""TVirtualHistPainter.h""; 29#include ""snprintf.h""; 30 ; 31ClassImp(TH2);; 32 ; 33/** \addtogroup Histograms; 34@{; 35\class TH2C; 36\brief 2-D histogram with a byte per channel (see TH1 documentation); 37\class TH2S; 38\brief 2-D histogram with a short per channel (see TH1 documentation); 39\class TH2I; 40\brief 2-D histogram with an int per channel (see TH1 documentation); 41\class TH2L; 42\brief 2-D histogram with a long64 per channel (see TH1 documentation); 43\class TH2F; 44\brief 2-D histogram with a float per channel (see TH1 documentation); 45\class TH2D; 46\brief 2-D histogram with a double per channel (see TH1 documentation); 47@}; 48*/; 49 ; 50/** \class TH2; 51 Service class for 2-D histogram classes; 52 ; 53- TH2C a 2-D histogram with one byte per cell (char). Maximum bin content = 127; 54- TH2S a 2-D histogram with two bytes per cell (short integer). Maximum bin content = 32767; 55- TH2I a 2-D histogram with four bytes per cell (32 bit integer). Maximum bin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:73,Guid,Guide,73,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TH2Poly.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2Poly.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// TH2Poly v2.1; 3// Author: Olivier Couet, Deniz Gunceler, Danilo Piparo; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include ""TH2Poly.h""; 14#include ""TMultiGraph.h""; 15#include ""TGraph.h""; 16#include ""TInterpreter.h""; 17#include ""Riostream.h""; 18#include ""TList.h""; 19#include ""TMath.h""; 20#include <cassert>; 21 ; 22ClassImp(TH2Poly);; 23 ; 24/** \class TH2Poly; 25 \ingroup Histograms; 262D Histogram with Polygonal Bins; 27 ; 28## Overview; 29`TH2Poly` is a 2D Histogram class (TH2) allowing to define polygonal; 30bins of arbitrary shape.; 31 ; 32Each bin in the `TH2Poly` histogram is a `TH2PolyBin` object.; 33`TH2PolyBin` is a very simple class containing the vertices (stored; 34as `TGraph`s or `TMultiGraph`s ) and contents of the polygonal; 35bin as well as several related functions.; 36 ; 37Essentially, a `TH2Poly` is a TList of `TH2PolyBin` objects; 38with methods to manipulate them.; 39 ; 40Bins are defined using one of the `AddBin()` methods. The bin definition; 41should be done before filling.; 42 ; 43The histogram can be filled with `Fill(Double_t x, Double_t y, Double_t w); 44`. `w` is the weight.; 45If no weight is specified, it is assumed to be 1.; 46 ; 47Not all histogram's area need to be binned. Filling an area without bins,; 48will falls into the overflows. Adding a bin is not retroactive; it doesn't; 49affect previous fillings. A `Fill()` call, that; 50was previously ignored due to the lack of a bin at the specified ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8cxx_source.html:77,Guid,Guide,77,doc/master/TH2Poly_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TH3.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH3.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 27/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TClass.h""; 15#include ""THashList.h""; 16#include ""TH3.h""; 17#include ""TProfile2D.h""; 18#include ""TH2.h""; 19#include ""TF3.h""; 20#include ""TVirtualPad.h""; 21#include ""TVirtualHistPainter.h""; 22#include ""THLimitsFinder.h""; 23#include ""TRandom.h""; 24#include ""TError.h""; 25#include ""TMath.h""; 26#include ""TObjString.h""; 27 ; 28ClassImp(TH3);; 29 ; 30/** \addtogroup Histograms; 31@{; 32\class TH3C; 33\brief 3-D histogram with a byte per channel (see TH1 documentation); 34\class TH3S; 35\brief 3-D histogram with a short per channel (see TH1 documentation); 36\class TH3I; 37\brief 3-D histogram with an int per channel (see TH1 documentation); 38\class TH3L; 39\brief 3-D histogram with a long64 per channel (see TH1 documentation); 40\class TH3F; 41\brief 3-D histogram with a float per channel (see TH1 documentation); 42\class TH3D; 43\brief 3-D histogram with a double per channel (see TH1 documentation); 44@}; 45*/; 46 ; 47/** \class TH3; 48 \ingroup Histograms; 49The 3-D histogram classes derived from the 1-D histogram classes.; 50All operations are supported (fill, fit).; 51Drawing is currently restricted to one single option.; 52A cloud of points is drawn. The number of points is proportional to; 53cell content.; 54 ; 55- TH3C a 3-D histogram with one byte per cell (char). Maximum bin content = 127; 56- TH3S a 3-D histogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:73,Guid,Guide,73,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/THStack.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THStack.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 10/12/2001; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TClassRef.h""; 14#include ""THStack.h""; 15#include ""TVirtualPad.h""; 16#include ""TVirtualHistPainter.h""; 17#include ""THashList.h""; 18#include ""TH2.h""; 19#include ""TH3.h""; 20#include ""TList.h""; 21#include ""TStyle.h""; 22#include ""TBrowser.h""; 23#include ""TMath.h""; 24#include ""TObjString.h""; 25#include ""TVirtualMutex.h""; 26#include ""strlcpy.h""; 27 ; 28#include <iostream>; 29 ; 30ClassImp(THStack);; 31 ; 32////////////////////////////////////////////////////////////////////////////////; 33 ; 34/** \class THStack; 35 \ingroup Histograms; 36The Histogram stack class; 37 ; 38A THStack is a collection of TH1 or TH2 histograms. By using THStack::Draw(), the entire; 39histogram collection is drawn at once according to the specified drawing option.; 40 ; 41THStack::Add() allows adding a new histogram to the list. Note that the THStack does not; 42take ownership of the objects in the list.; 43 ; 44\anchor HS00; 45### Stack painting; 46 ; 47By default, histograms are shown stacked:; 48 - the first histogram is painted; 49 - then the sum of the first and second histograms is painted, and so on; 50 ; 51The axis ranges are computed automatically along the X and Y axes to display the complete; 52histogram collection.; 53 ; 54Warning: Histogram bins with negative content may produce wrong plots.; 55 ; 56### Stack's drawing options; 57 ; 58The speci",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THStack_8cxx_source.html:77,Guid,Guide,77,doc/master/THStack_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THStack_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/THn.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THn.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Axel Naumann (2011-12-13); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""THn.h""; 13 ; 14namespace {; 15 //______________________________________________________________________________; 16 //; 17 // Helper struct to hold one dimension's bin range for THnBinIter.; 18 /////////////////////////////////////////////////////////////////////////////; 19 ; 20 struct CounterRange_t {; 21 Int_t i;; 22 Int_t first;; 23 Int_t last;; 24 Int_t len;; 25 Long64_t cellSize;; 26 };; 27 ; 28 //______________________________________________________________________________; 29 //; 30 // THnBinIter iterates over all bins of a THn, recursing over all dimensions.; 31 /////////////////////////////////////////////////////////////////////////////; 32 ; 33 class THnBinIter: public ROOT::Internal::THnBaseBinIter {; 34 public:; 35 THnBinIter(Int_t dim, const TObjArray* axes, const TNDArray* arr,; 36 Bool_t respectAxisRange);; 37 ~THnBinIter() override { delete [] fCounter; }; 38 ; 39 Long64_t Next(Int_t* coord = nullptr) override;; 40 Int_t GetCoord(Int_t dim) const override { return fCounter[dim].i; }; 41 private:; 42 THnBinIter(const THnBinIter&) = delete; // intentionally unimplemented; 43 THnBinIter& operator=(const THnBinIter&) = delete; // intentionally unimplemented; 44 ; 45 public:; 46 Int_t fNdimensions;; 47 Long64_t fIndex;; 48 const TNDArray* fArray;; 49 CounterRange_t* fCounter;; 50 };; 51 ; 52 ; 53 //////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THn_8cxx_source.html:73,Guid,Guide,73,doc/master/THn_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THn_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/THnSparse.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THnSparse.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Axel Naumann (2007-09-11); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""THnSparse.h""; 13 ; 14#include ""TAxis.h""; 15#include ""TClass.h""; 16#include ""TDataMember.h""; 17#include ""TDataType.h""; 18 ; 19namespace {; 20//______________________________________________________________________________; 21//; 22// THnSparseBinIter iterates over all filled bins of a THnSparse.; 23//______________________________________________________________________________; 24 ; 25 class THnSparseBinIter: public ROOT::Internal::THnBaseBinIter {; 26 public:; 27 THnSparseBinIter(Bool_t respectAxisRange, const THnSparse* hist):; 28 ROOT::Internal::THnBaseBinIter(respectAxisRange), fHist(hist),; 29 fNbins(hist->GetNbins()), fIndex(-1) {; 30 // Construct a THnSparseBinIter; 31 fCoord = new Int_t[hist->GetNdimensions()];; 32 fCoord[0] = -1;; 33 }; 34 ~THnSparseBinIter() override { delete [] fCoord; }; 35 ; 36 Int_t GetCoord(Int_t dim) const override;; 37 Long64_t Next(Int_t* coord = nullptr) override;; 38 ; 39 private:; 40 THnSparseBinIter(const THnSparseBinIter&) = delete; // intentionally unimplemented; 41 THnSparseBinIter& operator=(const THnSparseBinIter&) = delete; // intentionally unimplemented; 42 ; 43 const THnSparse* fHist;; 44 Int_t* fCoord; // coord buffer for fIndex; fCoord[0] == -1 if not yet calculated; 45 Long64_t fNbins; // number of bins to iterate over; 46 Long64_t fIndex; // current bin index; 47 };; 48}; 49 ; 50Int_t THnSp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THnSparse_8cxx_source.html:79,Guid,Guide,79,doc/master/THnSparse_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THnSparse_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TMultiGraph.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMultiGraph.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TEnv.h""; 14#include ""TBrowser.h""; 15#include ""TMultiGraph.h""; 16#include ""TGraph.h""; 17#include ""TH1.h""; 18#include ""TH2.h""; 19#include ""TVirtualPad.h""; 20#include ""TVirtualFitter.h""; 21#include ""TPluginManager.h""; 22#include ""TMath.h""; 23#include ""TF1.h""; 24#include ""strlcpy.h""; 25 ; 26#include ""HFitInterface.h""; 27#include ""Fit/DataRange.h""; 28#include ""Math/MinimizerOptions.h""; 29 ; 30#include <iostream>; 31#include <cstdlib>; 32#include <cctype>; 33 ; 34extern void H1LeastSquareSeqnd(Int_t n, Double_t *a, Int_t idim, Int_t &ifail, Int_t k, Double_t *b);; 35 ; 36ClassImp(TMultiGraph);; 37 ; 38 ; 39////////////////////////////////////////////////////////////////////////////////; 40 ; 41/** \class TMultiGraph; 42 \ingroup Graphs; 43 \brief A TMultiGraph is a collection of TGraph (or derived) objects.; 44 ; 45- [Introduction](\ref MG00); 46- [MultiGraphs' drawing](\ref MG01); 47 - [Setting drawing options](\ref MG01a); 48 - [Titles setting](\ref MG01b); 49 - [The option \""3D\""](\ref MG01c); 50 - [Legend drawing](\ref MG01d); 51 - [Automatic coloring](\ref MG01e); 52 - [Reverse axis](\ref MG01f); 53- [MultiGraphs' fitting](\ref MG02); 54 - [Fit box position](\ref MG02a); 55- [Axis' limits setting](\ref MG03); 56 ; 57 ; 58\anchor MG00; 59### Introduction; 60 ; 61A TMultiGraph allows to manipulate a set of graphs as a sing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMultiGraph_8cxx_source.html:81,Guid,Guide,81,doc/master/TMultiGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMultiGraph_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TProfile.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 29/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TProfile.h""; 13#include ""TBuffer.h""; 14#include ""TMath.h""; 15#include ""TF1.h""; 16#include ""THLimitsFinder.h""; 17#include <iostream>; 18#include ""TError.h""; 19#include ""TClass.h""; 20#include ""TObjString.h""; 21 ; 22#include ""TProfileHelper.h""; 23 ; 24Bool_t TProfile::fgApproximate = kFALSE;; 25 ; 26ClassImp(TProfile);; 27 ; 28/** \class TProfile; 29 \ingroup Histograms; 30 Profile Histogram.; 31 Profile histograms are used to display the mean; 32 value of Y and its error for each bin in X. The displayed error is by default the; 33 standard error on the mean (i.e. the standard deviation divided by the sqrt(n) ).; 34 Profile histograms are in many cases an; 35 elegant replacement of two-dimensional histograms. The inter-relation of two; 36 measured quantities X and Y can always be visualized by a two-dimensional; 37 histogram or scatter plot, but if Y is an unknown (but single-valued); 38 approximate function of X, this function is displayed by a profile histogram with; 39 much better precision than by a scatter plot.; 40 ; 41 The following formulae show the cumulated contents (capital letters) and the values; 42 displayed by the printing or plotting routines (small letters) of the elements for bin j.; 43 \f[; 44 \begin{align}; 45 H(j) &= \sum w \cdot Y \\; 46 E(j) &= \sum w \cdot Y^2 \\; 47 W(j) &= \sum w & &\text{if weights different from 1, the numbe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:78,Guid,Guide,78,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TProfile2D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile2D.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 16/04/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TProfile2D.h""; 13#include ""TBuffer.h""; 14#include ""TMath.h""; 15#include ""THLimitsFinder.h""; 16#include ""TError.h""; 17#include ""TClass.h""; 18#include ""TProfileHelper.h""; 19#include <iostream>; 20 ; 21Bool_t TProfile2D::fgApproximate = kFALSE;; 22 ; 23ClassImp(TProfile2D);; 24 ; 25/** \class TProfile2D; 26 \ingroup Histograms; 27 Profile2D histograms are used to display the mean; 28 value of Z and its error for each cell in X,Y.; 29 Profile2D histograms are in many cases an; 30 elegant replacement of three-dimensional histograms : the inter-relation of three; 31 measured quantities X, Y and Z can always be visualized by a three-dimensional; 32 histogram or scatter-plot; its representation on the line-printer is not particularly; 33 satisfactory, except for sparse data. If Z is an unknown (but single-valued); 34 approximate function of X,Y this function is displayed by a profile2D histogram with; 35 much better precision than by a scatter-plot.; 36 ; 37 The following formulae show the cumulated contents (capital letters) and the values; 38 displayed by the printing or plotting routines (small letters) of the elements for cell i, j.; 39 \f[; 40 \begin{align}; 41 H(i,j) &= \sum w \cdot Z \\; 42 E(i,j) &= \sum w \cdot Z^2 \\; 43 W(i,j) &= \sum w \\; 44 h(i,j) &= \frac{H(i,j)}{W(i,j)} \\; 45 s(i,j) &= \sqrt{E(i,j)/W(i,j)- h(i,j)^2} \\; 46 e(i,j) &= \",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:80,Guid,Guide,80,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TProfile3D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile3D.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 17/05/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TProfile3D.h""; 13#include ""TProfile2D.h""; 14#include ""THashList.h""; 15#include ""TMath.h""; 16#include ""THLimitsFinder.h""; 17#include <iostream>; 18#include ""TError.h""; 19#include ""TClass.h""; 20 ; 21#include ""TProfileHelper.h""; 22 ; 23Bool_t TProfile3D::fgApproximate = kFALSE;; 24 ; 25ClassImp(TProfile3D);; 26 ; 27/** \class TProfile3D; 28 \ingroup Histograms; 29 Profile3D histograms are used to display the mean; 30 value of T and its RMS for each cell in X,Y,Z.; 31 Profile3D histograms are in many cases an; 32 The inter-relation of three measured quantities X, Y, Z and T can always; 33 be visualized by a four-dimensional histogram or scatter-plot;; 34 its representation on the line-printer is not particularly; 35 satisfactory, except for sparse data. If T is an unknown (but single-valued); 36 approximate function of X,Y,Z this function is displayed by a profile3D histogram with; 37 much better precision than by a scatter-plot.; 38 ; 39 The following formulae show the cumulated contents (capital letters) and the values; 40 displayed by the printing or plotting routines (small letters) of the elements for cell I, J.; 41 ; 42 2; 43 H(I,J,K) = sum T E(I,J,K) = sum T; 44 l(I,J,K) = sum l L(I,J,K) = sum l; 45 h(I,J,K) = H(I,J,K)/L(I,J,K) s(I,J,K) = sqrt(E(I,J,K)/L(I,J,K)- h(I,J,K)**2); 46 e(I,J,K) = s(I,J,K)/sqrt(L(I,J,K)); 47 ; 48 In the special cas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:80,Guid,Guide,80,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TScatter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TScatter.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Olivier Couet 18/05/2022; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#include ""TROOT.h""; 14#include ""TBuffer.h""; 15#include ""TScatter.h""; 16#include ""TStyle.h""; 17#include ""TMath.h""; 18#include ""TVirtualPad.h""; 19#include ""TH2.h""; 20#include ""TVirtualGraphPainter.h""; 21#include ""strtok.h""; 22 ; 23#include <iostream>; 24#include <fstream>; 25#include <cstring>; 26#include <string>; 27 ; 28ClassImp(TScatter);; 29 ; 30 ; 31////////////////////////////////////////////////////////////////////////////////; 32 ; 33/** \class TScatter; 34 \ingroup Graphs; 35A TScatter is able to draw four variables scatter plot on a single plot. The two first; 36variables are the x and y position of the markers, the third is mapped on the current; 37color map and the fourth on the marker size.; 38 ; 39The following example demonstrates how it works:; 40 ; 41Begin_Macro(source); 42../../../tutorials/graphs/scatter.C; 43End_Macro; 44 ; 45### TScatter's plotting options; 46TScatter can be drawn with the following options:; 47 ; 48| Option | Description |; 49|----------|-------------------------------------------------------------------|; 50| ""A"" | Produce a new plot with Axis around the graph |; 51 ; 52*/; 53 ; 54 ; 55////////////////////////////////////////////////////////////////////////////////; 56/// TScatter default constructor.; 57 ; 58TScatter::TScatter(); 59{; 60}; 61 ; 62////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TScatter_8cxx_source.html:78,Guid,Guide,78,doc/master/TScatter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TScatter_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/hist/src/TVirtualFitter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualFitter.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 31/08/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13/** \class TVirtualFitter; 14 \ingroup Hist; 15 Abstract Base Class for Fitting; 16*/; 17 ; 18#include ""TROOT.h""; 19#include ""TVirtualFitter.h""; 20#include ""TPluginManager.h""; 21#include ""TEnv.h""; 22#include ""Math/MinimizerOptions.h""; 23#include ""ThreadLocalStorage.h""; 24 ; 25 ; 26// Implement a thread local static member as a replacement; 27// for TVirtualFitter::fgFitter; 28namespace {; 29 struct FitterGlobals {; 30 FitterGlobals() : fFitter(nullptr),fMaxPar(0) {}; 31 ; 32 TVirtualFitter *fFitter;; 33 Int_t fMaxPar;; 34 TString fDefault;; 35 };; 36 FitterGlobals &GetGlobals() {; 37 TTHREAD_TLS_DECL(FitterGlobals,globals);; 38 return globals;; 39 }; 40 TVirtualFitter *&GetGlobalFitter() {; 41 return GetGlobals().fFitter;; 42 }; 43 Int_t &GetGlobalMaxPar() {; 44 return GetGlobals().fMaxPar;; 45 }; 46 TString &GetGlobalDefault() {; 47 return GetGlobals().fDefault;; 48 }; 49}; 50//Int_t TVirtualFitter::fgMaxpar = 0;; 51// Int_t TVirtualFitter::fgMaxiter = 5000;; 52// Double_t TVirtualFitter::fgPrecision = 1e-6;; 53// Double_t TVirtualFitter::fgErrorDef = 1;; 54//TString TVirtualFitter::fgDefault = """";; 55 ; 56ClassImp(TVirtualFitter);; 57 ; 58#ifdef R__COMPLETE_MEM_TERMINATION; 59namespace {; 60 struct TVirtualFitterCleanup {; 61 ~TVirtualFitterCleanup() {; 62 delete TVirtualFitter::GetFitter();; 63 }; 64 };; 65 TVirtualFitterCleanup cleanup;; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFitter_8cxx_source.html:84,Guid,Guide,84,doc/master/TVirtualFitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFitter_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/histpainter/inc/TGraphPainter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPainter.h. Go to the documentation of this file. 1// @(#)root/histpainter:$Id: TGraphPainter.h,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphPainter; 13#define ROOT_TGraphPainter; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraphPainter //; 19// //; 20// helper class to draw graphs //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TVirtualGraphPainter.h""; 25#include <vector>; 26 ; 27class TGraph;; 28class TF1;; 29class TScatter;; 30 ; 31class TGraphPainter : public TVirtualGraphPainter {; 32 ; 33public:; 34 ; 35 TGraphPainter();; 36 ; 37 ~TGraphPainter() override;; 38 ; 39 void ComputeLogs(Int_t npoints, Int_t opt);; 40 Int_t DistancetoPrimitiveHelper(TGraph *theGraph, Int_t px, Int_t py) override;; 41 void DrawPanelHelper(TGraph *theGraph) override;; 42 void ExecuteEventHelper(TGraph *theGraph, Int_t event, Int_t px, Int_t py) override;; 43 char *GetObjectInfoHelper(TGraph *theGraph, Int_t px, Int_t py) const override;; 44 virtual Int_t GetHighlightPoint(TGraph *theGraph) const;; 45 virtual void HighlightPoint(TGraph *theGraph, Int_t hpoint, Int_t distance);; 46 virtual void PaintHighlightPoint(TGraph *theGraph, Option_t *option);; 47 void PaintHelper(TGraph *theGraph, Option_t *option) override;; 48 void PaintGraph(TGraph *theGraph, Int_t npoints, const Double_t *x, const Double_t *y, Option_t *chopt) override;; 49 void Pain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8h_source.html:88,Guid,Guide,88,doc/master/TGraphPainter_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/histpainter/inc/THistPainter.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; THistPainter.h File Reference. #include ""TVirtualHistPainter.h""; #include ""TString.h""; #include <vector>; #include <utility>; #include <memory>. Include dependency graph for THistPainter.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  THistPainter;  The histogram painter class. More...;  ; struct  THistRenderingRegion;  . Variables; const Int_t kMaxCuts = 16;  . Variable Documentation. ◆ kMaxCuts. const Int_t kMaxCuts = 16. Definition at line 41 of file THistPainter.h. histhistpainterincTHistPainter.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8h.html:90,Guid,Guide,90,doc/master/THistPainter_8h.html,https://root.cern,https://root.cern/doc/master/THistPainter_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: hist/histpainter/inc/THistPainter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THistPainter.h. Go to the documentation of this file. 1// @(#)root/histpainter:$Id$; 2// Author: Rene Brun, Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_THistPainter; 12#define ROOT_THistPainter; 13 ; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// THistPainter //; 18// //; 19// helper class to draw histograms //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23 ; 24#include ""TVirtualHistPainter.h""; 25#include ""TString.h""; 26 ; 27#include <vector>; 28#include <utility>; 29#include <memory>; 30 ; 31 ; 32class TH1;; 33class TAxis;; 34class TCutG;; 35class TGaxis;; 36class TPainter3dAlgorithms;; 37class TGraph2DPainter;; 38class TPie;; 39class TF3;; 40 ; 41const Int_t kMaxCuts = 16;; 42 ; 43struct THistRenderingRegion; 44{; 45 std::pair<Int_t, Int_t> fPixelRange;; 46 std::pair<Int_t, Int_t> fBinRange;; 47};; 48 ; 49 ; 50class THistPainter : public TVirtualHistPainter {; 51 ; 52protected:; 53 TH1 *fH; ///< Pointer to histogram to paint; 54 TAxis *fXaxis; ///< Pointer to X axis; 55 TAxis *fYaxis; ///< Pointer to Y axis; 56 TAxis *fZaxis; ///< Pointer to Z axis; 57 TList *fFunctions; ///< Pointer to histogram list of functions; 58 std::unique_ptr<TPainter3dAlgorithms> fLego; ///< Pointer to a TPainter3dAlgorithms object; 59 std::unique_ptr<TGraph2DPainter> fGraph2DPainter; ///< Pointer to a TGraph2DPainter object; 60 std::unique_ptr<TPie> fPie; ///< Pointer to a TPie in case of option PIE; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8h_source.html:87,Guid,Guide,87,doc/master/THistPainter_8h_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/histpainter/src/TGraphPainter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPainter.cxx. Go to the documentation of this file. 1// @(#)root/histpainter:$Id: TGraphPainter.cxx,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TGraphPainter.h""; 14#include ""TMath.h""; 15#include ""TGraph.h""; 16#include ""TPolyLine.h""; 17#include ""TPolyMarker.h""; 18#include ""TCanvas.h""; 19#include ""TStyle.h""; 20#include ""TH1.h""; 21#include ""TH2.h""; 22#include ""TF1.h""; 23#include ""TPaveStats.h""; 24#include ""TGaxis.h""; 25#include ""TGraphAsymmErrors.h""; 26#include ""TGraphMultiErrors.h""; 27#include ""TGraphBentErrors.h""; 28#include ""TGraphPolargram.h""; 29#include ""TGraphPolar.h""; 30#include ""TGraphQQ.h""; 31#include ""TScatter.h""; 32#include ""TPaletteAxis.h""; 33#include ""TLatex.h""; 34#include ""TArrow.h""; 35#include ""TFrame.h""; 36#include ""TMarker.h""; 37#include ""TVirtualPadEditor.h""; 38#include ""TVirtualX.h""; 39#include ""TRegexp.h""; 40#include ""strlcpy.h""; 41#include ""snprintf.h""; 42#include <memory>; 43 ; 44Int_t TGraphPainter::fgMaxPointsPerLine = 50;; 45 ; 46static Int_t gHighlightPoint = -1; // highlight point of graph; 47static TGraph *gHighlightGraph = nullptr; // pointer to graph with highlight point; 48static std::unique_ptr<TMarker> gHighlightMarker; // highlight marker; 49 ; 50ClassImp(TGraphPainter);; 51 ; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54 ; 55/*! \class TGraphPainter; 56 \ingroup Histpainter; 57 \brief The graph painter class. Implements all graphs' drawing's options",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:90,Guid,Guide,90,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: hist/histpainter/src/THistPainter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THistPainter.cxx. Go to the documentation of this file. 1// @(#)root/histpainter:$Id$; 2// Author: Rene Brun, Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13#include <cstring>; 14#include <cstdio>; 15#include <cctype>; 16#include <iostream>; 17 ; 18#include ""TROOT.h""; 19#include ""TSystem.h""; 20#include ""THistPainter.h""; 21#include ""TH2.h""; 22#include ""TH2Poly.h""; 23#include ""TH3.h""; 24#include ""TProfile.h""; 25#include ""TProfile2D.h""; 26#include ""THStack.h""; 27#include ""TF2.h""; 28#include ""TF3.h""; 29#include ""TCutG.h""; 30#include ""TMatrixDBase.h""; 31#include ""TMatrixFBase.h""; 32#include ""TVectorD.h""; 33#include ""TVectorF.h""; 34#include ""TCanvas.h""; 35#include ""TPad.h""; 36#include ""TPaveStats.h""; 37#include ""TFrame.h""; 38#include ""TLatex.h""; 39#include ""TPolyLine.h""; 40#include ""TPoints.h""; 41#include ""TStyle.h""; 42#include ""TGraph.h""; 43#include ""TMultiGraph.h""; 44#include ""TPie.h""; 45#include ""TGaxis.h""; 46#include ""TColor.h""; 47#include ""TPainter3dAlgorithms.h""; 48#include ""TGraph2D.h""; 49#include ""TGraph2DPainter.h""; 50#include ""TGraphDelaunay2D.h""; 51#include ""TView.h""; 52#include ""TMath.h""; 53#include ""TRandom2.h""; 54#include ""TObjArray.h""; 55#include ""Hoption.h""; 56#include ""Hparam.h""; 57#include ""TPluginManager.h""; 58#include ""TPaletteAxis.h""; 59#include ""TCrown.h""; 60#include ""TArrow.h""; 61#include ""TVirtualPadEditor.h""; 62#include ""TVirtualX.h""; 63#include ""TEnv.h""; 64#include ""TPoint.h""; 65#include ""TImage.h""; 66#include ""TCandle.h""; 67#include ""strlcpy.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:89,Guid,Guide,89,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['Guid'],['Guide']
Usability,. ROOT: int Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. int Class Reference. The documentation for this class was generated from the following files:. int. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classint.html:59,Guid,Guide,59,doc/master/classint.html,https://root.cern,https://root.cern/doc/master/classint.html,2,['Guid'],['Guide']
Usability,. ROOT: int Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. int Class Reference. The documentation for this class was generated from the following files:. int. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classint.html:58,Guid,Guide,58,doc/v632/classint.html,https://root.cern,https://root.cern/doc/v632/classint.html,2,['Guid'],['Guide']
Usability,". ROOT: io/io/inc/TDirectoryFile.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectoryFile.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 22/01/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TDirectoryFile; 13#define ROOT_TDirectoryFile; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TDirectoryFile //; 19// //; 20// Describe directory structure in a ROOT file. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""Compression.h""; 25#include ""TDirectory.h""; 26#include ""TDatime.h""; 27#include ""TList.h""; 28 ; 29class TKey;; 30class TFile;; 31 ; 32class TDirectoryFile : public TDirectory {; 33 ; 34protected:; 35 Bool_t fModified{kFALSE}; ///< True if directory has been modified; 36 Bool_t fWritable{kFALSE}; ///< True if directory is writable; 37 TDatime fDatimeC; ///< Date and time when directory is created; 38 TDatime fDatimeM; ///< Date and time of last modification; 39 Int_t fNbytesKeys{0}; ///< Number of bytes for the keys; 40 Int_t fNbytesName{0}; ///< Number of bytes in TNamed at creation time; 41 Int_t fBufferSize{0}; ///< Default buffer size to create new TKeys; 42 Long64_t fSeekDir{0}; ///< Location of directory on file; 43 Long64_t fSeekParent{0}; ///< Location of parent directory on file; 44 Long64_t fSeekKeys{0}; ///< Location of Keys record on file; 45 TFile *fFile{nullptr}; ///< Pointer to current file in memory; 46 TList *fKeys{nullptr}; ///< Pointer to keys list in memory; 47 ; 48 void CleanTargets();; 49 void I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8h_source.html:78,Guid,Guide,78,doc/master/TDirectoryFile_8h_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/inc/TFile.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros ; TFile.h File Reference. #include <atomic>; #include <string>; #include ""Compression.h""; #include ""TDirectoryFile.h""; #include ""TUrl.h""; #include ""ROOT/RConcurrentHashColl.hxx""; #include ""ROOT/TRWSpinLock.hxx""; #include <mutex>. Include dependency graph for TFile.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TFile::InfoListRet;  Simple struct of the return value of GetStreamerInfoListImpl. More...;  ; class  TFile;  A ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-like logical structure, possibly including subdirectory hierarchies. More...;  ; class  TFileOpenHandle;  Class holding info about the file being opened. More...;  . Macros; #define gFile   (TFile::CurrentFile());  . Macro Definition Documentation. ◆ gFile. #define gFile   (TFile::CurrentFile()). Definition at line 347 of file TFile.h. ioioincTFile.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8h.html:72,Guid,Guide,72,doc/master/TFile_8h.html,https://root.cern,https://root.cern/doc/master/TFile_8h.html,3,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: io/io/inc/TFile.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFile.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFile; 13#define ROOT_TFile; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TFile //; 19// //; 20// ROOT file. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include <atomic>; 25#include <string>; 26 ; 27#include ""Compression.h""; 28#include ""TDirectoryFile.h""; 29#include ""TUrl.h""; 30#include ""ROOT/RConcurrentHashColl.hxx""; 31 ; 32// Not a part of TFile interface; provide a forward declaration instead of #include.; 33// #ifndef R__LESS_INCLUDES; 34// #include ""TMap.h""; 35// #endif; 36 ; 37#ifdef R__USE_IMT; 38#include ""ROOT/TRWSpinLock.hxx""; 39#include <mutex>; 40#endif; 41 ; 42class TMap;; 43class TFree;; 44class TArrayC;; 45class TArchiveFile;; 46class TFileOpenHandle;; 47class TFileCacheRead;; 48class TFileCacheWrite;; 49class TProcessID;; 50class TStopwatch;; 51class TFilePrefetch;; 52 ; 53class TFile : public TDirectoryFile {; 54 friend class TDirectoryFile;; 55 friend class TFilePrefetch;; 56// TODO: We need to make sure only one TBasket is being written at a time; 57// if we are writing multiple baskets in parallel.; 58#ifdef R__USE_IMT; 59 friend class TBasket;; 60#endif; 61 ; 62public:; 63 /// Asynchronous open request status; 64 enum EAsyncOpenStatus { kAOSNotAsync = -1, kAOSFailure = 0,; 65 kAOSInProgress = 1, kAOSSuccess = 2 };; 66 /// Open timeo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8h_source.html:69,Guid,Guide,69,doc/master/TFile_8h_source.html,https://root.cern,https://root.cern/doc/master/TFile_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/inc/TFree.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFree.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 28/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFree; 13#define ROOT_TFree; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TFree //; 19// //; 20// Description of free segments on a file. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TObject.h""; 25 ; 26 ; 27class TFree : public TObject {; 28 ; 29protected:; 30 Long64_t fFirst; ///<First free word of segment; 31 Long64_t fLast; ///<Last free word of segment; 32 ; 33public:; 34 TFree();; 35 TFree(TList *lfree, Long64_t first, Long64_t last);; 36 ~TFree() override;; 37 TFree *AddFree(TList *lfree, Long64_t first, Long64_t last);; 38 virtual void FillBuffer(char *&buffer);; 39 TFree *GetBestFree(TList *lfree, Int_t nbytes);; 40 Long64_t GetFirst() const {return fFirst;}; 41 Long64_t GetLast() const {return fLast;}; 42 void ls(Option_t * = """") const override;; 43 virtual void ReadBuffer(char *&buffer);; 44 void SetFirst(Long64_t first) {fFirst=first;}; 45 void SetLast(Long64_t last) {fLast=last;}; 46 Int_t Sizeof() const;; 47 ; 48 ClassDefOverride(TFree,1); //Description of free segments on a file; 49};; 50 ; 51#endif; Int_tint Int_tDefinition RtypesCore.h:45; Long64_tlong long Long64_tDefinition RtypesCore.h:69; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; TObject.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFree_8h_source.html:69,Guid,Guide,69,doc/master/TFree_8h_source.html,https://root.cern,https://root.cern/doc/master/TFree_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/inc/TKey.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TKey.h. Go to the documentation of this file. 1// @(#)root/io; 2// Author: Rene Brun 28/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TKey; 13#define ROOT_TKey; 14 ; 15#include ""TNamed.h""; 16#include ""TDatime.h""; 17#include ""TClass.h""; 18#ifdef R__LESS_INCLUDES; 19class TBuffer;; 20#else; 21#include ""TBuffer.h""; 22#endif; 23 ; 24class TBrowser;; 25class TDirectory;; 26class TFile;; 27 ; 28class TKey : public TNamed {; 29 ; 30private:; 31 enum EStatusBits {; 32 kIsDirectoryFile = BIT(14),; 33 kReproducible = BIT(15); 34 };; 35 TKey(const TKey&) = delete; // TKey objects are not copiable.; 36 TKey& operator=(const TKey&) = delete; // TKey objects are not copiable.; 37 ; 38protected:; 39 Int_t fVersion; ///< Key version identifier; 40 Int_t fNbytes; ///< Number of bytes for the object on file; 41 Int_t fObjlen; ///< Length of uncompressed object in bytes; 42 TDatime fDatime; ///< Date/Time of insertion in file; 43 Short_t fKeylen; ///< Number of bytes for the key itself; 44 Short_t fCycle; ///< Cycle number; 45 Long64_t fSeekKey; ///< Location of object on file; 46 Long64_t fSeekPdir; ///< Location of parent directory on file; 47 TString fClassName; ///< Object Class name; 48 Int_t fLeft; ///< Number of bytes left in current segment; 49 char *fBuffer; ///< Object buffer; 50 TBuffer *fBufferRef; ///< Pointer to the TBuffer object; 51 UShort_t fPidOffset; ///<!Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir; 52 TDirectory *fMotherDir; ///<!point",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8h_source.html:68,Guid,Guide,68,doc/master/TKey_8h_source.html,https://root.cern,https://root.cern/doc/master/TKey_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/inc/TStreamerInfo.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfo.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TStreamerInfo; 13#define ROOT_TStreamerInfo; 14 ; 15#include <atomic>; 16#include <vector>; 17 ; 18#include ""TVirtualStreamerInfo.h""; 19 ; 20#include ""TVirtualCollectionProxy.h""; 21 ; 22#include ""TObjArray.h""; 23 ; 24 ; 25class TFile;; 26class TClass;; 27class TClonesArray;; 28class TDataMember;; 29class TMemberStreamer;; 30class TStreamerElement;; 31class TStreamerBasicType;; 32class TClassStreamer;; 33class TVirtualArray;; 34namespace ROOT { namespace Detail { class TCollectionProxyInfo; } }; 35namespace ROOT { class TSchemaRule; }; 36 ; 37namespace TStreamerInfoActions { class TActionSequence; }; 38 ; 39class TStreamerInfo : public TVirtualStreamerInfo {; 40 ; 41 class TCompInfo {; 42 // Class used to cache information (see fComp); 43 private:; 44 // TCompInfo(const TCompInfo&) = default;; 45 // TCompInfo& operator=(const TCompInfo&) = default;; 46 public:; 47 Int_t fType;; 48 Int_t fNewType;; 49 Int_t fOffset;; 50 Int_t fLength;; 51 TStreamerElement *fElem; ///< Not Owned; 52 ULongptr_t fMethod;; 53 TClass *fClass; ///< Not Owned; 54 TClass *fNewClass; ///< Not Owned; 55 TString fClassName;; 56 TMemberStreamer *fStreamer; ///< Not Owned; 57 TCompInfo() : fType(-1), fNewType(0), fOffset(0), fLength(0), fElem(nullptr), fMethod(0),; 58 fClass(nullptr), fNewClass(nullptr), fClassName(), fStreamer(nullptr) {}; 59 ~TCompInfo() {}; 60 void Update(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8h_source.html:77,Guid,Guide,77,doc/master/TStreamerInfo_8h_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TDirectoryFile.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectoryFile.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 22/01/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13 \class TDirectoryFile; 14 \ingroup IO; 15 ; 16 A ROOT file is structured in Directories (like a file system).; 17 Each Directory has a list of Keys (see TKeys) and a list of objects; 18 in memory. A Key is a small object that describes the type and location; 19 of a persistent object in a file. The persistent object may be a directory.; 20Begin_Macro; 21../../../tutorials/io/fildir.C; 22End_Macro; 23 The structure of a file is shown in TFile::TFile; 24*/; 25 ; 26#include <iostream>; 27#include ""Strlen.h""; 28#include ""strlcpy.h""; 29#include ""TDirectoryFile.h""; 30#include ""TFile.h""; 31#include ""TBufferFile.h""; 32#include ""TBufferJSON.h""; 33#include ""TMapFile.h""; 34#include ""TClassTable.h""; 35#include ""TInterpreter.h""; 36#include ""THashList.h""; 37#include ""TBrowser.h""; 38#include ""TFree.h""; 39#include ""TKey.h""; 40#include ""TStreamerInfo.h""; 41#include ""TROOT.h""; 42#include ""TError.h""; 43#include ""Bytes.h""; 44#include ""TClass.h""; 45#include ""TRegexp.h""; 46#include ""TSystem.h""; 47#include ""TStreamerElement.h""; 48#include ""TProcessUUID.h""; 49#include ""TVirtualMutex.h""; 50#include ""TEmulatedCollectionProxy.h""; 51 ; 52const UInt_t kIsBigFile = BIT(16);; 53const Int_t kMaxLen = 2048;; 54 ; 55ClassImp(TDirectoryFile);; 56 ; 57 ; 58////////////////////////////////////////////////////////////////////////////////; 59/// Default TDirectoryFile constructor; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html:80,Guid,Guide,80,doc/master/TDirectoryFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TFile.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFile.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id: 3a19890259ad6443ee313e090166614971ad4296 $; 2// Author: Rene Brun 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13\file TFile.cxx; 14\class TFile; 15\ingroup IO; 16\brief A ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-like logical structure, possibly including subdirectory hierarchies.; 17\sa \ref IO; 18\sa \ref rootio (or `io/doc/TFile` folder in your codebase); 19 ; 20<details>; 21<summary>ROOT file data format specification</summary>; 22 ; 23A ROOT file is composed of a header, followed by consecutive data records; 24(`TKey` instances) with a well defined format.; 25 ; 26The first data record starts at byte fBEGIN (currently set to kBEGIN).; 27Bytes 1->kBEGIN contain the file description, when fVersion >= 1000000; 28it is a large file (> 2 GB) and the offsets will be 8 bytes long and; 29fUnits will be set to 8:; 30 ; 31Byte Range | Record Name | Description; 32----------------|-------------|------------; 331->4 | ""root"" | Root file identifier; 345->8 | fVersion | File format version; 359->12 | fBEGIN | Pointer to first data record; 3613->16 [13->20] | fEND | Pointer to first free word at the EOF; 3717->20 [21->28] | fSeekFree | Pointer to FREE data record; 3821->24 [29->32] | fNbytesFree | Number of bytes in FREE data record; 3925->28 [33->36] | nfree | Number of free data records; 4029->32 [37->40] | fNbytesName | Number of bytes in TNamed at creation time; 4133->33 [41->41] | f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:71,Guid,Guide,71,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TFree.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFree.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 28/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TFree.h""; 13#include ""TList.h""; 14#include ""TFile.h""; 15#include ""Bytes.h""; 16#include <iostream>; 17 ; 18ClassImp(TFree);; 19 ; 20/**; 21\class TFree; 22\ingroup IO; 23Service class for TFile.; 24 ; 25Each file has a linked list of free segments. Each free segment is described; 26by its firts and last address.; 27When an object is written to a file, a new Key (see TKey); 28is created. The first free segment big enough to accomodate the object; 29is used.; 30If the object size has a length corresponding to the size of the free segment,; 31the free segment is deleted from the list of free segments.; 32When an object is deleted from a file, a new TFree object is generated.; 33If the deleted object is contiguous to an already deleted object, the free; 34segments are merged in one single segment.; 35*/; 36 ; 37////////////////////////////////////////////////////////////////////////////////; 38/// Default constructor.; 39 ; 40TFree::TFree(); 41{; 42 fFirst = fLast = 0;; 43}; 44 ; 45////////////////////////////////////////////////////////////////////////////////; 46/// Constructor for a free segment.; 47 ; 48TFree::TFree(TList *lfree, Long64_t first, Long64_t last); 49{; 50 fFirst = first;; 51 fLast = last;; 52 lfree->Add(this);; 53}; 54 ; 55////////////////////////////////////////////////////////////////////////////////; 56/// Add a new free segment to the list of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFree_8cxx_source.html:71,Guid,Guide,71,doc/master/TFree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFree_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TGenCollectionProxy.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGenCollectionProxy.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Markus Frank 28/10/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TGenCollectionProxy.h""; 13#include ""TVirtualStreamerInfo.h""; 14#include ""TStreamerElement.h""; 15#include ""TClassEdit.h""; 16#include ""TClass.h""; 17#include ""TError.h""; 18#include ""TEnum.h""; 19#include ""TROOT.h""; 20#include ""TInterpreter.h"" // For gInterpreterMutex; 21#include ""TVirtualMutex.h""; 22#include ""TStreamerInfoActions.h""; 23#include ""THashTable.h""; 24#include ""THashList.h""; 25#include <cstdlib>; 26 ; 27#define MESSAGE(which,text); 28 ; 29/**; 30\class TGenVectorProxy; 31\ingroup IO; 32Local optimization class.; 33 ; 34Collection proxies get copied. On copy we switch the type of the; 35proxy to the concrete STL type. The concrete types are optimized; 36for element access.; 37*/; 38 ; 39class TGenVectorProxy : public TGenCollectionProxy {; 40public:; 41 // Standard Destructor; 42 TGenVectorProxy(const TGenCollectionProxy& c) : TGenCollectionProxy(c); 43 {; 44 }; 45 // Standard Destructor; 46 ~TGenVectorProxy() override; 47 {; 48 }; 49 // Return the address of the value at index 'idx'; 50 void* At(UInt_t idx) override; 51 {; 52 if ( fEnv && fEnv->fObject ) {; 53 fEnv->fIdx = idx;; 54 switch( idx ) {; 55 case 0:; 56 return fEnv->fStart = fFirst.invoke(fEnv);; 57 default:; 58 if (! fEnv->fStart ) fEnv->fStart = fFirst.invoke(fEnv);; 59 return ((char*)fEnv->fStart) + fValDiff*idx;; 60 }; 61 }; 62 Fatal(""TGenVectorProxy"",""At> Log",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html:85,Guid,Guide,85,doc/master/TGenCollectionProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TKey.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TKey.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 28/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13\class TKey; 14\ingroup IO; 15 ; 16 Book space in a file, create I/O buffers, to fill them, (un)compress them.; 17 ; 18 The TKey class includes functions to book space in a file, to create I/O; 19 buffers, to fill these buffers, to compress/uncompress data buffers.; 20 Before saving (making persistent) an object in a file, a key must; 21 be created. The key structure contains all the information to; 22 uniquely identify a persistent object in a file.; 23 | Data Member | Explanation |; 24 |-------------|-------------|; 25 | fNbytes | Number of bytes for the compressed object and key. |; 26 | fObjlen | Length of uncompressed object. |; 27 | fDatime | Date/Time when the object was written. |; 28 | fKeylen | Number of bytes for the key structure. |; 29 | fCycle | Cycle number of the object. |; 30 | fSeekKey | Address of the object on file (points to fNbytes). This is a redundant information used to cross-check the data base integrity. |; 31 | fSeekPdir | Pointer to the directory supporting this object.|; 32 | fClassName | Object class name. |; 33 | fName | Name of the object. |; 34 | fTitle | Title of the object. |; 35 ; 36 In the 16 highest bits of fSeekPdir is encoded a pid offset. This; 37 offset is to be added to the pid index stored in the TRef object; 38 and the referenced TObject.; 39 ; 40 The TKey class is used by ROOT to:; 41 - Write an object in the current di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:70,Guid,Guide,70,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TStreamerInfo.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfo.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TStreamerInfo; 13 \ingroup IO; 14 ; 15Describes a persistent version of a class.; 16 ; 17A ROOT file contains the list of TStreamerInfo objects for all the; 18class versions written to this file.; 19When reading a file, all the TStreamerInfo objects are read back in; 20memory and registered to the TClass list of TStreamerInfo.; 21One can see the list and contents of the TStreamerInfo on a file; 22with, e.g.,; 23~~~{.cpp}; 24 TFile f(""myfile.root"");; 25 f.ShowStreamerInfo();; 26~~~; 27A TStreamerInfo is a list of TStreamerElement objects (one per data; 28member or base class).; 29When streaming an object, the system (TClass) loops on all the; 30TStreamerElement objects and calls the appropriate function for each; 31element type.; 32*/; 33 ; 34#include ""TStreamerInfo.h""; 35#include ""TFile.h""; 36#include ""TROOT.h""; 37#include ""TClonesArray.h""; 38#include ""TStreamerElement.h""; 39#include ""TClass.h""; 40#include ""TClassEdit.h""; 41#include ""TClassTable.h""; 42#include ""TDataMember.h""; 43#include ""TDataType.h""; 44#include ""TRealData.h""; 45#include ""TBaseClass.h""; 46#include ""TBuffer.h""; 47#include ""TArrayC.h""; 48#include ""TArrayI.h""; 49#include ""TArrayF.h""; 50#include ""TArrayD.h""; 51#include ""TArrayS.h""; 52#include ""TArrayL.h""; 53#include ""TError.h""; 54#include ""TEnum.h""; 55#include ""TRef.h""; 56#include ""TProcessID.h""; 57#include ""TSystem.h""; 58#inclu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:79,Guid,Guide,79,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TStreamerInfoActions.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfoActions.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Philippe Canal 05/2010; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TStreamerInfo.h""; 13#include ""TStreamerInfoActions.h""; 14#include ""TROOT.h""; 15#include ""TStreamerElement.h""; 16#include ""TVirtualMutex.h""; 17#include ""TInterpreter.h""; 18#include ""TError.h""; 19#include ""TVirtualArray.h""; 20#include ""TBufferFile.h""; 21#include ""TBufferText.h""; 22#include ""TMemberStreamer.h""; 23#include ""TClassEdit.h""; 24#include ""TVirtualCollectionIterators.h""; 25#include ""TProcessID.h""; 26#include ""TFile.h""; 27 ; 28static const Int_t kRegrouped = TStreamerInfo::kOffsetL;; 29 ; 30// More possible optimizations:; 31// Avoid call the virtual version of TBuffer::ReadInt and co.; 32// Merge the Reading of the version and the looking up or the StreamerInfo; 33// Avoid if (bytecnt) inside the CheckByteCount routines and avoid multiple (mostly useless nested calls); 34// Try to avoid if statement on onfile class being set (TBufferFile::ReadClassBuffer).; 35 ; 36using namespace TStreamerInfoActions;; 37 ; 38#ifdef _AIX; 39# define INLINE_TEMPLATE_ARGS; 40#else; 41# define INLINE_TEMPLATE_ARGS inline; 42#endif; 43 ; 44 ; 45namespace TStreamerInfoActions; 46{; 47 bool IsDefaultVector(TVirtualCollectionProxy &proxy); 48 {; 49 const auto props = proxy.GetProperties();; 50 const bool isVector = proxy.GetCollectionType() == ROOT::kSTLvector;; 51 const bool hasDefaultAlloc = !(props & TVirtualCollectionProxy::kCustomAlloc);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:86,Guid,Guide,86,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TStreamerInfoReadBuffer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfoReadBuffer.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TBuffer.h""; 13#include ""TFile.h""; 14#include ""TClass.h""; 15#include ""TBufferFile.h""; 16#include ""TClonesArray.h""; 17#include ""TError.h""; 18#include ""TRef.h""; 19#include ""TProcessID.h""; 20#include ""TStreamer.h""; 21#include ""TStreamerElement.h""; 22#include ""TStreamerInfo.h""; 23#include ""TVirtualCollectionProxy.h""; 24#include ""TContainerConverters.h""; 25#include ""TVirtualArray.h""; 26#include ""TVirtualObject.h""; 27#include ""ThreadLocalStorage.h""; 28 ; 29// GetCurrentElement.; 30// Currently only used by TRef::Streamer.; 31 ; 32static TStreamerElement* &CurrentElement(); 33{; 34 //Pointer to current TStreamerElement; 35 //Thread local storage.; 36 ; 37 TTHREAD_TLS(TStreamerElement*) fgElement(0);; 38 ; 39 return fgElement;; 40}; 41 ; 42////////////////////////////////////////////////////////////////////////////////; 43///static function returning a pointer to the current TStreamerElement; 44///fgElement points to the current TStreamerElement being read in ReadBuffer; 45 ; 46TStreamerElement *TStreamerInfo::GetCurrentElement(); 47{; 48 return CurrentElement();; 49}; 50 ; 51//==========CPP macros; 52 ; 53#define DOLOOP for(Int_t k=0; k<narr; ++k); 54 ; 55#define ReadBasicTypeElem(name,index) \; 56 { \; 57 name *x=(name*)(arr[index]+ioffset); \; 58 b >> *x; \; 59 }; 60 ; 61#define ReadBasicType(name) \; 62 { \; 63 ReadBasicTypeElem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html:89,Guid,Guide,89,doc/master/TStreamerInfoReadBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: io/io/src/TStreamerInfoWriteBuffer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfoWriteBuffer.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TBuffer.h""; 13#include ""TClass.h""; 14#include ""TClonesArray.h""; 15#include ""TError.h""; 16#include ""TProcessID.h""; 17#include ""TStreamer.h""; 18#include ""TStreamerElement.h""; 19#include ""TStreamerInfo.h""; 20#include ""TVirtualCollectionProxy.h""; 21#include ""TRefTable.h""; 22#include ""TFile.h""; 23 ; 24#include ""TVirtualArray.h""; 25#include ""TBufferFile.h""; 26#include ""TInterpreter.h""; 27 ; 28//==========CPP macros; 29 ; 30#define DOLOOP for(int k=0; k<narr; ++k); 31 ; 32#define WriteBasicTypeElem(name,index) \; 33 { \; 34 name *x=(name*)(arr[index]+ioffset); \; 35 b << *x; \; 36 }; 37 ; 38#define WriteBasicType(name) \; 39 { \; 40 WriteBasicTypeElem(name,0); \; 41 }; 42 ; 43#define WriteBasicTypeLoop(name) \; 44 { \; 45 for(int k=0; k<narr; ++k) WriteBasicTypeElem(name,k); \; 46 }; 47 ; 48#define WriteBasicArrayElem(name,index) \; 49 { \; 50 name *x=(name*)(arr[index]+ioffset); \; 51 b.WriteFastArray(x,compinfo[i]->fLength); \; 52 }; 53 ; 54#define WriteBasicArray(name) \; 55 { \; 56 WriteBasicArrayElem(name,0); \; 57 }; 58 ; 59#define WriteBasicArrayLoop(name) \; 60 { \; 61 for(int k=0; k<narr; ++k) WriteBasicArrayElem(name,k); \; 62 }; 63 ; 64#define WriteBasicPointerElem(name,index) \; 65 { \; 66 Int_t *l = (Int_t*)(arr[index]+imethod); \; 67 name **f = (name**)(arr[index]+ioffset); \; 68 name *af = *f; \; 69 if (af && *l) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoWriteBuffer_8cxx_source.html:90,Guid,Guide,90,doc/master/TStreamerInfoWriteBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoWriteBuffer_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: iterplugin Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; iterplugin Class Reference. . Definition at line 9 of file iterplugin.cxx. Public Member Functions;  iterplugin ();  ;  ~iterplugin () override;  ; TClass * IsA () const override;  ; void ProcessNode () override;  ; void Select (Int_t replica, Int_t color);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoIteratorPlugin;  TGeoIteratorPlugin ();  ;  ~TGeoIteratorPlugin () override;  ; TClass * IsA () const override;  ; void SetIterator (const TGeoIterator *iter);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classiterplugin.html:66,Guid,Guide,66,doc/master/classiterplugin.html,https://root.cern,https://root.cern/doc/master/classiterplugin.html,1,['Guid'],['Guide']
Usability,". ROOT: math/fumili/inc/TFumili.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFumili.h. Go to the documentation of this file. 1// @(#)root/fumili:$Id$; 2// Author: Rene Brun 31/08/99; 3 ; 4#ifndef ROOT_TFumili; 5#define ROOT_TFumili; 6 ; 7#include ""TVirtualFitter.h""; 8 ; 9class TF1;; 10 ; 11class TFumili : public TVirtualFitter {; 12private:; 13 Int_t fMaxParam; ///<; 14 Int_t fNlog; ///<; 15 Int_t fNfcn; ///< Number of FCN calls;; 16 Int_t fNED1; ///< Number of experimental vectors X=(x1,x2,...xK); 17 Int_t fNED2; ///< K - Length of vector X plus 2 (for chi2); 18 Int_t fNED12; ///< fNED1+fNED2; 19 Int_t fNpar; ///< fNpar - number of parameters; 20 Int_t fNstepDec; ///< fNstepDec - maximum number of step decreasing counter; 21 Int_t fNlimMul; ///< fNlimMul - after fNlimMul successful iterations permits four-fold increasing of fPL; 22 Int_t fNmaxIter; ///< fNmaxIter - maximum number of iterations; 23 Int_t fLastFixed; ///< Last fixed parameter number; 24 Int_t fENDFLG; ///< End flag of fit; 25 Int_t fINDFLG[5]; ///< internal flags;; 26 ; 27 ; 28 Bool_t fGRAD; ///< user calculated gradients; 29 Bool_t fWARN; ///< warnings; 30 Bool_t fDEBUG; ///< debug info; 31 Bool_t fLogLike; ///< LogLikelihood flag; 32 Bool_t fNumericDerivatives; ///<; 33 ; 34 Double_t *fZ0; ///< [fMaxParam2] Matrix of approximate second derivatives of objective function; 35 ///< This matrix is diagonal and always contain only variable parameter's; 36 ///< derivatives; 37 Double_t *fZ; ///< [fMaxParam2] Inverse fZ0 matrix - covariance matrix; 38 Double_t *fGr; ///< [fMaxParam] Gradients of objective function; 39 Double_t *fParamError; ///< [fMaxParam] Parameter errors; 40 Double_t *fSumLog; ///< [fNlog]; 41 Double_t *fEXDA; ///< [fNED12] experimental data poInt_ter; 42 ; 43 // don't calculate parameter errors - take them from fParamError array; 44 Double_t *fA; ///< [fMaxParam] Fit parameter array; 45 Double_t *fPL0; ///< [fMaxParam] Step initial bou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8h_source.html:77,Guid,Guide,77,doc/master/TFumili_8h_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/fumili/src/TFumili.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFumili.cxx. Go to the documentation of this file. 1// @(#)root/fumili:$Id$; 2// Author: Stanislav Nesterov 07/05/2003; 3 ; 4 ; 5/** \class TFumili; 6 ; 7### FUMILI minimization package; 8 ; 9FUMILI is based on ideas, proposed by I.N. Silin [See NIM A440, 2000 (p431)].; 10It was converted from FORTRAN to C by Sergey Yaschenko <s.yaschenko@fz-juelich.de>; 11 ; 12 ; 13FUMILI is used to minimize Chi-square function or to search maximum of; 14likelihood function.; 15 ; 16Experimentally measured values \f$F_i\f$ are fitted with theoretical; 17functions \f$f_i({\vec x}_i,\vec\theta\,\,)\f$, where \f${\vec x}_i\f$ are; 18coordinates, and \f$\vec\theta\f$ -- vector of parameters.; 19 ; 20For better convergence Chi-square function has to be the following form; 21 ; 22\f[; 23{\chi^2\over2}={1\over2}\sum^n_{i=1}\left(f_i(\vec; 24x_i,\vec\theta\,\,)-F_i\over\sigma_i\right)^2 \tag{1}; 25\f]; 26 ; 27where \f$\sigma_i\f$ are errors of measured function.; 28 ; 29The minimum condition is; 30 ; 31\f[; 32{\partial\chi^2\over\partial\theta_i}=\sum^n_{j=1}{1\over\sigma^2_j}\cdot; 33{\partial f_j\over\partial\theta_i}\left[f_j(\vec; 34x_j,\vec\theta\,\,)-F_j\right]=0,\qquad i=1\ldots m\tag{2}; 35\f]; 36 ; 37where m is the quantity of parameters.; 38 ; 39Expanding left part of (2) over parameter increments and; 40retaining only linear terms one gets; 41 ; 42\f[; 43\left(\partial\chi^2\over\theta_i\right)_{\vec\theta={\vec\theta}^0}; 44+\sum_k\left(\partial^2\chi^2\over\partial\theta_i\partial\theta_k\right)_{; 45\vec\theta={\vec\theta}^0}\cdot(\theta_k-\theta_k^0); 46= 0\tag{3}; 47\f]; 48 ; 49Here \f${\vec\theta}_0\f$ is some initial value of parameters. In general case:; 50 ; 51\f[; 52{\partial^2\chi^2\over\partial\theta_i\partial\theta_k}=; 53\sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; 54{\partial f_j\over\theta_k} +; 55\sum^n_{j=1}{(f_j - F_j)\",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:79,Guid,Guide,79,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genetic/inc/Math/GeneticMinimizer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GeneticMinimizer.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id; 2 ; 3/**********************************************************************; 4 * *; 5 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 6 * *; 7 * *; 8 **********************************************************************/; 9 ; 10// Header file for class GeneticMinimizer; 11 ; 12#ifndef ROOT_Math_GeneticMinimizer; 13#define ROOT_Math_GeneticMinimizer; 14 ; 15#include ""Math/Minimizer.h""; 16 ; 17#include ""RtypesCore.h""; 18 ; 19#include <vector>; 20#include <string>; 21 ; 22namespace TMVA {; 23 class IFitterTarget;; 24 class Interval;; 25}; 26 ; 27namespace ROOT {; 28 namespace Math {; 29 ; 30 ; 31//_______________________________________________________________________________; 32/*; 33 structure containing the parameters of the genetic minimizer; 34 */; 35struct GeneticMinimizerParameters {; 36 ; 37 Int_t fPopSize;; 38 Int_t fNsteps;; 39 Int_t fCycles;; 40 Int_t fSC_steps;; 41 Int_t fSC_rate;; 42 Double_t fSC_factor;; 43 Double_t fConvCrit;; 44 Int_t fSeed;; 45 ; 46 ; 47 // constructor with default value; 48 GeneticMinimizerParameters();; 49};; 50 ; 51 ; 52 ; 53//_______________________________________________________________________________; 54/**; 55 GeneticMinimizer; 56 ; 57 Minimizer class based on the Gentic algorithm implemented in TMVA; 58 ; 59 @ingroup MultiMin; 60*/; 61class GeneticMinimizer: public ROOT::Math::Minimizer {; 62 ; 63public:; 64 ; 65 //GeneticMinimizer (int = 0);; 66 GeneticMinimizer (int i = 0);; 67 ~GeneticMinimizer () override;; 68 ; 69 void Clear() override;; 70 using ROOT::Math::Minimizer::SetFunction;; 71 void SetFunction(const ROOT::Math::IMultiGenFunction & func) override;; 72 ; 73 bool SetLimitedVariable(unsigned int , const std::string& , double , double , double, double) override;; 74 bool SetVariable(u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GeneticMinimizer_8h_source.html:92,Guid,Guide,92,doc/master/GeneticMinimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/GeneticMinimizer_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/AxisAngle.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. AxisAngle.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class AxisAngle; 12//; 13// Created by: Lorenzo Moneta at Wed May 11 10:37:10 2005; 14//; 15// Last update: Wed May 11 10:37:10 2005; 16//; 17#ifndef ROOT_Math_GenVector_AxisAngle; 18#define ROOT_Math_GenVector_AxisAngle 1; 19 ; 20#include ""Math/GenVector/Rotation3D.h""; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22#include ""Math/GenVector/PositionVector3D.h""; 23#include ""Math/GenVector/LorentzVector.h""; 24#include ""Math/GenVector/3DConversions.h""; 25#include <algorithm>; 26#include <cassert>; 27 ; 28 ; 29namespace ROOT {; 30namespace Math {; 31 ; 32 ; 33//__________________________________________________________________________________________; 34 /**; 35 AxisAngle class describing rotation represented with direction axis (3D Vector) and an; 36 angle of rotation around that axis.; 37 ; 38 @ingroup GenVector; 39 ; 40 @sa Overview of the @ref GenVector ""physics vector library""; 41 */; 42class AxisAngle {; 43 ; 44public:; 45 ; 46 typedef double Scalar;; 47 ; 48 /**; 49 definition of vector axis; 50 */; 51 typedef DisplacementVector3D<Cartesian3D<Scalar> > AxisVector;; 52 ; 53 ; 54 /**; 55 Default constructor (axis is z and angle is zero); 56 */; 57 AxisAngle() : fAxis(0,0,1), fAngle(0) { }; 58 ; 59 /**; 60 Construct from a non-zero vector (x,y,z) and an angle.; 61 Precondition: the Vector needs to implement x(), y(), z(), and unit(); 62 */; 63 template<class AnyVector>; 64 AxisAngle(const AnyVector & v, Scalar angle) :; 65 fAxis(v.unit()), f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2AxisAngle_8h_source.html:97,Guid,Guide,97,doc/master/GenVector_2AxisAngle_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2AxisAngle_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/DisplacementVector2D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DisplacementVector2D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team and *; 7 * FNAL LCG ROOT MathLib Team *; 8 * *; 9 * *; 10 **********************************************************************/; 11 ; 12// Header source file for class DisplacementVector2D; 13//; 14// Created by: Lorenzo Moneta at Mon Apr 16 2007; 15//; 16 ; 17#ifndef ROOT_Math_GenVector_DisplacementVector2D; 18#define ROOT_Math_GenVector_DisplacementVector2D 1; 19 ; 20#include ""Math/GenVector/Cartesian2D.h""; 21 ; 22#include ""Math/GenVector/PositionVector2Dfwd.h""; 23 ; 24#include ""Math/GenVector/GenVectorIO.h""; 25 ; 26#include ""Math/GenVector/BitReproducible.h""; 27 ; 28#include ""Math/GenVector/CoordinateSystemTags.h""; 29 ; 30//#include ""Math/GenVector/Expression2D.h""; 31 ; 32 ; 33 ; 34 ; 35namespace ROOT {; 36 ; 37 namespace Math {; 38 ; 39 ; 40 ; 41//__________________________________________________________________________________________; 42 /**; 43 Class describing a generic displacement vector in 2 dimensions.; 44 This class is templated on the type of Coordinate system.; 45 One example is the XYVector which is a vector based on; 46 double precision x,y data members by using the; 47 ROOT::Math::Cartesian2D<double> Coordinate system.; 48 The class is having also an extra template parameter, the coordinate system tag,; 49 to be able to identify (tag) vector described in different reference coordinate system,; 50 like global or local coordinate systems.; 51 ; 52 @ingroup GenVector; 53 ; 54 @sa Overview of the @ref GenVector ""physics vector library""; 55 */; 56 ; 57 template <class CoordSystem, class Tag = DefaultCoordinateSystemTag >; 58 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2DisplacementVector2D_8h_source.html:108,Guid,Guide,108,doc/master/GenVector_2DisplacementVector2D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2DisplacementVector2D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/DisplacementVector3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DisplacementVector3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team and *; 7 * FNAL LCG ROOT MathLib Team *; 8 * *; 9 * *; 10 **********************************************************************/; 11 ; 12// Header source file for class DisplacementVector3D; 13//; 14// Created by: Lorenzo Moneta at Mon May 30 12:21:43 2005; 15// Major rewrite: M. FIschler at Wed Jun 8 2005; 16//; 17// Last update: $Id$; 18//; 19 ; 20#ifndef ROOT_Math_GenVector_DisplacementVector3D; 21#define ROOT_Math_GenVector_DisplacementVector3D 1; 22 ; 23#include ""Math/GenVector/Cartesian3D.h""; 24 ; 25#include ""Math/GenVector/PositionVector3Dfwd.h""; 26 ; 27#include ""Math/GenVector/GenVectorIO.h""; 28 ; 29#include ""Math/GenVector/BitReproducible.h""; 30 ; 31#include ""Math/GenVector/CoordinateSystemTags.h""; 32 ; 33#include <cassert>; 34 ; 35 ; 36namespace ROOT {; 37 ; 38 namespace Math {; 39 ; 40 ; 41//__________________________________________________________________________________________; 42 /**; 43 Class describing a generic displacement vector in 3 dimensions.; 44 This class is templated on the type of Coordinate system.; 45 One example is the XYZVector which is a vector based on; 46 double precision x,y,z data members by using the; 47 ROOT::Math::Cartesian3D<double> Coordinate system.; 48 The class is having also an extra template parameter, the coordinate system tag,; 49 to be able to identify (tag) vector described in different reference coordinate system,; 50 like global or local coordinate systems.; 51 ; 52 @ingroup GenVector; 53 ; 54 @sa Overview of the @ref GenVector ""physics vector library""; 55 */; 56 ; 57 template <class Coor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2DisplacementVector3D_8h_source.html:108,Guid,Guide,108,doc/master/GenVector_2DisplacementVector3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2DisplacementVector3D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/EulerAngles.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. EulerAngles.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class EulerAngles; 12//; 13// Created by: Lorenzo Moneta at Tue May 10 17:55:10 2005; 14//; 15// Last update: Tue May 10 17:55:10 2005; 16//; 17#ifndef ROOT_Math_GenVector_EulerAngles; 18#define ROOT_Math_GenVector_EulerAngles 1; 19 ; 20#include ""Math/GenVector/Rotation3D.h""; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22#include ""Math/GenVector/PositionVector3D.h""; 23#include ""Math/GenVector/LorentzVector.h""; 24#include ""Math/GenVector/3DConversions.h""; 25#include <algorithm>; 26#include <cassert>; 27 ; 28namespace ROOT {; 29namespace Math {; 30 ; 31 ; 32//__________________________________________________________________________________________; 33 /**; 34 EulerAngles class describing rotation as three angles (Euler Angles).; 35 The Euler angles definition matches that of Classical Mechanics (Goldstein).; 36 It is also the same convention defined in; 37 <A HREF=""http://mathworld.wolfram.com/EulerAngles.html"">mathworld</A>; 38 and used in Mathematica and CLHEP. Note that the ROOT class TRotation defines; 39 a slightly different convention.; 40 ; 41 @ingroup GenVector; 42 ; 43 @sa Overview of the @ref GenVector ""physics vector library""; 44 */; 45class EulerAngles {; 46 ; 47public:; 48 ; 49 typedef double Scalar;; 50 ; 51 /**; 52 Default constructor; 53 */; 54 constexpr EulerAngles() : fPhi(0.0), fTheta(0.0), fPsi(0.0) { }; 55 ; 56 /**; 57 Constructor from phi, theta and psi; 58 */; 59 EulerAngles( Scalar phi, Scalar theta, Scalar psi )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2EulerAngles_8h_source.html:99,Guid,Guide,99,doc/master/GenVector_2EulerAngles_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2EulerAngles_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/GenVectorIO.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GenVectorIO.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team (FNAL component) *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Support templates (class and function) for stream i/o of vectors; 12// This is a utuility to allow for control, via manipulators, of the; 13// form of; 14//; 15// Created by: W. E. Brown and M. Fischler at Tue Jun 21 2005; 16//; 17// Last update: Tue Jun 21 2005; 18//; 19#ifndef ROOT_Math_GenVector_GenVectorIO; 20#define ROOT_Math_GenVector_GenVectorIO 1; 21 ; 22#include <cctype>; 23#include <iostream>; 24 ; 25 ; 26namespace ROOT {; 27namespace Math {; 28 ; 29namespace detail {; 30 ; 31 ; 32// -------- Manipulator support ----------; 33 ; 34 ; 35enum manip_t { open, sep, close, bitforbit };; 36 ; 37 ; 38inline int; 39 ios_data( int k ); 40{; 41 static int const ios_data[4] = { std::ios::xalloc() // open; 42 , std::ios::xalloc() // sep; 43 , std::ios::xalloc() // close; 44 , std::ios::xalloc() // bitforbit; 45 };; 46 ; 47 return ios_data[k];; 48 ; 49} // ios_data(); 50 ; 51 ; 52template< class char_t, class traits_t >; 53 inline char_t; 54 get_manip( std::basic_ios<char_t,traits_t> & ios; 55 , manip_t m; 56 ); 57{; 58 char_t ch = static_cast<char_t>( ios.iword( ios_data(m) ) );; 59 if( ch ) return ch;; 60 ; 61 switch( m ); 62 { default : return ios.widen( '?' );; 63 case open : return ios.widen( '(' );; 64 case close : return ios.widen( ')' );; 65 case sep : return ios.widen( ',' );; 66 case bitforbit : return ch;; 67 }; 68 ; 69} // get_manip<>(); 70 ; 71 ; 72template< class char_t, class traits_t >; 73 inline void; 74 set_manip( std::basic_io",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVectorIO_8h_source.html:99,Guid,Guide,99,doc/master/GenVectorIO_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVectorIO_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/GenVector_exception.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GenVector_exception.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_GenVector_GenVector_exception; 5#define ROOT_Math_GenVector_GenVector_exception 1; 6 ; 7// ======================================================================; 8// $Id $; 9//; 10// Define the exception type used throughout this package.; 11// ======================================================================; 12 ; 13// ----------------------------------------------------------------------; 14// Prolog; 15 ; 16#include <stdexcept>; 17#include <string>; 18 ; 19namespace ROOT {; 20namespace Math {; 21 ; 22class GenVector_exception;; 23inline void Throw(GenVector_exception &e);; 24namespace GenVector {; 25inline void Throw(const char *);; 26}; 27 ; 28// ----------------------------------------------------------------------; 29// GenVector_exception class definition; 30//; 31// This class needs to be entirely contained in this header, otherwise; 32// the interactive usage of entities such as ROOT::Math::PtEtaPhiMVector; 33// is not possible because of missing symbols.; 34// This is due to the fact that the Throw function is used in the inline; 35// code bu this function is implemented in the Genvector library.; 36class GenVector_exception : public std::runtime_error {; 37public:; 38 GenVector_exception(const std::string &s) : runtime_error(s) {}; 39 ; 40 // Compiler-generated copy ctor, copy assignment, dtor are fine; 41 // Inherited what() from runtime_error is fine; 42 ; 43 static bool EnableThrow(); 44 {; 45 bool tmp = GenVector_exception::IsOn();; 46 IsOn() = true;; 47 return tmp;; 48 }; 49 static bool DisableThrow(); 50 {; 51 bool tmp = GenVector_exception::IsOn();; 52 IsOn() = false;; 53 return tmp;; 54 }; 55 ; 56private:; 57 friend void Throw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector__exception_8h_source.html:107,Guid,Guide,107,doc/master/GenVector__exception_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector__exception_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/LorentzVector.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. LorentzVector.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LorentzVector; 12//; 13// Created by: moneta at Tue May 31 17:06:09 2005; 14// Major mods by: fischler at Wed Jul 20 2005; 15//; 16// Last update: $Id$; 17//; 18#ifndef ROOT_Math_GenVector_LorentzVector; 19#define ROOT_Math_GenVector_LorentzVector 1; 20 ; 21#include ""Math/GenVector/PxPyPzE4D.h""; 22 ; 23#include ""Math/GenVector/DisplacementVector3D.h""; 24 ; 25#include ""Math/GenVector/GenVectorIO.h""; 26 ; 27#include <cmath>; 28#include <string>; 29 ; 30namespace ROOT {; 31 ; 32 namespace Math {; 33 ; 34//__________________________________________________________________________________________; 35/** @ingroup GenVector; 36 ; 37Class describing a generic LorentzVector in the 4D space-time,; 38using the specified coordinate system for the spatial vector part.; 39The metric used for the LorentzVector is (-,-,-,+).; 40In the case of LorentzVector we don't distinguish the concepts; 41of points and displacement vectors as in the 3D case,; 42since the main use case for 4D Vectors is to describe the kinematics of; 43relativistic particles. A LorentzVector behaves like a; 44DisplacementVector in 4D. The Minkowski components could be viewed as; 45v and t, or for kinematic 4-vectors, as p and E.; 46 ; 47ROOT provides specialisations and aliases to them of the ROOT::Math::LorentzVector template:; 48- ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; 49- ROOT::Math::PtEtaPhiEVector based on pt (rho),eta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2LorentzVector_8h_source.html:101,Guid,Guide,101,doc/master/GenVector_2LorentzVector_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2LorentzVector_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/Plane3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Plane3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta 12/2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LorentzVector; 12//; 13// Created by: moneta at Fri Dec 02 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_Plane3D; 18#define ROOT_Math_GenVector_Plane3D 1; 19 ; 20#include <type_traits>; 21 ; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24 ; 25 ; 26 ; 27namespace ROOT {; 28 ; 29namespace Math {; 30 ; 31namespace Impl {; 32 ; 33//_______________________________________________________________________________; 34/**; 35 Class describing a geometrical plane in 3 dimensions.; 36 A Plane3D is a 2 dimensional surface spanned by two linearly independent vectors.; 37 The plane is described by the equation; 38 \f$ a*x + b*y + c*z + d = 0 \f$ where (a,b,c) are the components of the; 39 normal vector to the plane \f$ n = (a,b,c) \f$ and \f$ d = - n \dot x \f$, where x is any point; 40 belonging to plane.; 41 More information on the mathematics describing a plane in 3D is available on; 42 <A HREF=http://mathworld.wolfram.com/Plane.html>MathWord</A>.; 43 The Plane3D class contains the 4 scalar values in T which represent the; 44 four coefficients, fA, fB, fC, fD. fA, fB, fC are the normal components normalized to 1,; 45 i.e. fA**2 + fB**2 + fC**2 = 1; 46 ; 47 @ingroup GenVector; 48 ; 49 @sa Overview of the @ref GenVector ""physics vector library""; 50*/; 51 ; 52template <typename T = double>; 53class Plane3D {; 54 ; 55public:; 56 // ------ ctors ------; 57 ; 58 typedef T Scalar;; 59 ; 60 typedef Displa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Plane3D_8h_source.html:95,Guid,Guide,95,doc/master/GenVector_2Plane3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Plane3D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/PositionVector2D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PositionVector2D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class PositionVector2D; 12//; 13// Created by: Lorenzo Moneta at Mon Apr 16 2007; 14//; 15//; 16#ifndef ROOT_Math_GenVector_PositionVector2D; 17#define ROOT_Math_GenVector_PositionVector2D 1; 18 ; 19#include ""Math/GenVector/DisplacementVector2D.h""; 20 ; 21#include ""Math/GenVector/GenVectorIO.h""; 22 ; 23#include ""Math/GenVector/BitReproducible.h""; 24 ; 25#include ""Math/GenVector/CoordinateSystemTags.h""; 26 ; 27 ; 28namespace ROOT {; 29 ; 30 namespace Math {; 31 ; 32 ; 33//__________________________________________________________________________________________; 34 /**; 35 Class describing a generic position vector (point) in 2 dimensions.; 36 This class is templated on the type of Coordinate system.; 37 One example is the XYPoint which is a vector based on; 38 double precision x,y data members by using the; 39 ROOT::Math::Cartesian2D<double> Coordinate system.; 40 The class is having also an extra template parameter, the coordinate system tag,; 41 to be able to identify (tag) vector described in different reference coordinate system,; 42 like global or local coordinate systems.; 43 ; 44 @ingroup GenVector; 45 ; 46 @sa Overview of the @ref GenVector ""physics vector library""; 47 */; 48 ; 49 template <class CoordSystem, class Tag = DefaultCoordinateSystemTag >; 50 class PositionVector2D {; 51 ; 52 public:; 53 ; 54 typedef typename CoordSystem::Scalar Scalar;; 55 typedef CoordSystem CoordinateType;; 56 typedef Tag CoordinateSystemTag;; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2PositionVector2D_8h_source.html:104,Guid,Guide,104,doc/master/GenVector_2PositionVector2D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2PositionVector2D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/PositionVector3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PositionVector3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class PositionVector3D; 12//; 13// Created by: Lorenzo Moneta at Mon May 30 15:25:04 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_PositionVector3D; 18#define ROOT_Math_GenVector_PositionVector3D 1; 19 ; 20#include ""Math/GenVector/DisplacementVector3Dfwd.h""; 21 ; 22#include ""Math/GenVector/Cartesian3D.h""; 23 ; 24#include ""Math/GenVector/GenVectorIO.h""; 25 ; 26#include ""Math/GenVector/BitReproducible.h""; 27 ; 28#include ""Math/GenVector/CoordinateSystemTags.h""; 29 ; 30 ; 31#include <cassert>; 32 ; 33namespace ROOT {; 34 ; 35 namespace Math {; 36 ; 37 ; 38//__________________________________________________________________________________________; 39 /**; 40 Class describing a generic position vector (point) in 3 dimensions.; 41 This class is templated on the type of Coordinate system.; 42 One example is the XYZPoint which is a vector based on; 43 double precision x,y,z data members by using the; 44 ROOT::Math::Cartesian3D<double> Coordinate system.; 45 The class is having also an extra template parameter, the coordinate system tag,; 46 to be able to identify (tag) vector described in different reference coordinate system,; 47 like global or local coordinate systems.; 48 ; 49 @ingroup GenVector; 50 ; 51 @sa Overview of the @ref GenVector ""physics vector library""; 52 */; 53 ; 54 template <class CoordSystem, class Tag = DefaultCoordinateSystemTag >; 55 class PositionVector3D {; 56 ; 57 public:; 58 ; 59 typedef ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2PositionVector3D_8h_source.html:104,Guid,Guide,104,doc/master/GenVector_2PositionVector3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2PositionVector3D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/Quaternion.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Quaternion.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for rotation in 3 dimensions, represented by a quaternion; 12// Created by: Mark Fischler Thurs June 9 2005; 13//; 14// Last update: $Id$; 15//; 16#ifndef ROOT_Math_GenVector_Quaternion; 17#define ROOT_Math_GenVector_Quaternion 1; 18 ; 19 ; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22#include ""Math/GenVector/PositionVector3D.h""; 23#include ""Math/GenVector/LorentzVector.h""; 24#include ""Math/GenVector/3DConversions.h""; 25#include ""Math/GenVector/3DDistances.h""; 26 ; 27#include <algorithm>; 28#include <cassert>; 29 ; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//__________________________________________________________________________________________; 36 /**; 37 Rotation class with the (3D) rotation represented by; 38 a unit quaternion (u, i, j, k).; 39 This is the optimal representation for multiplication of multiple; 40 rotations, and for computation of group-manifold-invariant distance; 41 between two rotations.; 42 See also ROOT::Math::AxisAngle, ROOT::Math::EulerAngles, and ROOT::Math::Rotation3D.; 43 ; 44 @ingroup GenVector; 45 ; 46 @sa Overview of the @ref GenVector ""physics vector library""; 47 */; 48 ; 49class Quaternion {; 50 ; 51public:; 52 ; 53 typedef double Scalar;; 54 ; 55 // ========== Constructors and Assignment =====================; 56 ; 57 /**; 58 Default constructor (identity rotation); 59 */; 60 Quaternion(); 61 : fU(1.0); 62 , fI(0.0); 63 , fJ(0.0); 64 , fK(0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Quaternion_8h_source.html:98,Guid,Guide,98,doc/master/GenVector_2Quaternion_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Quaternion_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/Rotation3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Rotation3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Rotation in 3 dimensions, represented by 3x3 matrix; 12//; 13// Created by: Mark Fischler Thurs June 9 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_Rotation3D; 18#define ROOT_Math_GenVector_Rotation3D 1; 19 ; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24#include ""Math/GenVector/PxPyPzE4D.h""; 25#include ""Math/GenVector/LorentzVector.h""; 26#include ""Math/GenVector/3DConversions.h""; 27#include ""Math/GenVector/3DDistances.h""; 28 ; 29#include ""Math/GenVector/Rotation3Dfwd.h""; 30#include ""Math/GenVector/AxisAnglefwd.h""; 31#include ""Math/GenVector/EulerAnglesfwd.h""; 32#include ""Math/GenVector/Quaternionfwd.h""; 33#include ""Math/GenVector/RotationXfwd.h""; 34#include ""Math/GenVector/RotationYfwd.h""; 35#include ""Math/GenVector/RotationZfwd.h""; 36 ; 37 ; 38#include <algorithm>; 39#include <cassert>; 40#include <iostream>; 41 ; 42 ; 43namespace ROOT {; 44namespace Math {; 45 ; 46 ; 47//__________________________________________________________________________________________; 48 /**; 49 Rotation class with the (3D) rotation represented by; 50 a 3x3 orthogonal matrix.; 51 This is the optimal representation for application to vectors.; 52 See also ROOT::Math::AxisAngle, ROOT::Math::EulerAngles, and ROOT::Math::Quaternion for; 53 classes which have conversion operators to Rotation3D.; 54 ; 55 All Rotations types (not onl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Rotation3D_8h_source.html:98,Guid,Guide,98,doc/master/GenVector_2Rotation3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Rotation3D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/RotationX.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationX.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class RotationZ representing a rotation about the Z axis; 12//; 13// Created by: Mark Fischler Mon July 18 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_RotationX; 18#define ROOT_Math_GenVector_RotationX 1; 19 ; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24#include ""Math/GenVector/LorentzVector.h""; 25#include ""Math/GenVector/3DDistances.h""; 26 ; 27#include ""Math/GenVector/RotationXfwd.h""; 28 ; 29#include <cmath>; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//__________________________________________________________________________________________; 36 /**; 37 Rotation class representing a 3D rotation about the X axis by the angle of rotation.; 38 For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; 39 ; 40 @ingroup GenVector; 41 ; 42 @sa Overview of the @ref GenVector ""physics vector library""; 43 */; 44 ; 45class RotationX {; 46 ; 47public:; 48 ; 49 typedef double Scalar;; 50 ; 51 ; 52 // ========== Constructors and Assignment =====================; 53 ; 54 /**; 55 Default constructor (identity rotation); 56 */; 57 RotationX() : fAngle(0), fSin(0), fCos(1) { }; 58 ; 59 /**; 60 Construct from an angle; 61 */; 62 explicit RotationX( Scalar angle ) : fAngle(angle),; 63 fSin(std::sin(angle)),; 64 fCos(std::cos(angle)); 65 {; 66 Rectify();; 67 }; 68 ; 69 // The compil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2RotationX_8h_source.html:97,Guid,Guide,97,doc/master/GenVector_2RotationX_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2RotationX_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/RotationY.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationY.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class RotationY representing a rotation about the Y axis; 12//; 13// Created by: Mark Fischler Mon July 18 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_RotationY; 18#define ROOT_Math_GenVector_RotationY 1; 19 ; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24#include ""Math/GenVector/LorentzVector.h""; 25#include ""Math/GenVector/3DDistances.h""; 26 ; 27#include ""Math/GenVector/RotationYfwd.h""; 28 ; 29#include <cmath>; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//__________________________________________________________________________________________; 36 /**; 37 Rotation class representing a 3D rotation about the Y axis by the angle of rotation.; 38 For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; 39 ; 40 @ingroup GenVector; 41 ; 42 @sa Overview of the @ref GenVector ""physics vector library""; 43 */; 44 ; 45class RotationY {; 46 ; 47public:; 48 ; 49 typedef double Scalar;; 50 ; 51 ; 52 // ========== Constructors and Assignment =====================; 53 ; 54 /**; 55 Default constructor (identity rotation); 56 */; 57 RotationY() : fAngle(0), fSin(0), fCos(1) { }; 58 ; 59 /**; 60 Construct from an angle; 61 */; 62 explicit RotationY( Scalar angle ) : fAngle(angle),; 63 fSin(std::sin(angle)),; 64 fCos(std::cos(angle)); 65 {; 66 Rectify();; 67 }; 68 ; 69 // The compil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2RotationY_8h_source.html:97,Guid,Guide,97,doc/master/GenVector_2RotationY_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2RotationY_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/RotationZ.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationZ.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class RotationZ representing a rotation about the Z axis; 12//; 13// Created by: Mark Fischler Mon July 18 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_RotationZ; 18#define ROOT_Math_GenVector_RotationZ 1; 19 ; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24#include ""Math/GenVector/LorentzVector.h""; 25#include ""Math/GenVector/3DDistances.h""; 26 ; 27#include ""Math/GenVector/RotationZfwd.h""; 28 ; 29#include <cmath>; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//__________________________________________________________________________________________; 36 /**; 37 Rotation class representing a 3D rotation about the Z axis by the angle of rotation.; 38 For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; 39 ; 40 @ingroup GenVector; 41 ; 42 @sa Overview of the @ref GenVector ""physics vector library""; 43 */; 44 ; 45class RotationZ {; 46 ; 47public:; 48 ; 49 typedef double Scalar;; 50 ; 51 ; 52 // ========== Constructors and Assignment =====================; 53 ; 54 /**; 55 Default constructor (identity rotation); 56 */; 57 RotationZ() : fAngle(0), fSin(0), fCos(1) { }; 58 ; 59 /**; 60 Construct from an angle; 61 */; 62 explicit RotationZ( Scalar angle ) : fAngle(angle),; 63 fSin(std::sin(angle)),; 64 fCos(std::cos(angle)); 65 {; 66 Rectify();; 67 }; 68 ; 69 // The compil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2RotationZ_8h_source.html:97,Guid,Guide,97,doc/master/GenVector_2RotationZ_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2RotationZ_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/RotationZYX.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationZYX.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: J. Palacios, L. Moneta 2007; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2007 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Rotation in 3 dimensions, described by 3 Z-Y-X Euler angles; 12// representing a rotation along Z, Y and X; 13//; 14// Created by: Lorenzo Moneta, Wed. May 22, 2007; 15//; 16// Last update: $Id$; 17//; 18#ifndef ROOT_Math_GenVector_RotationZYX; 19#define ROOT_Math_GenVector_RotationZYX 1; 20 ; 21#include ""Math/Math.h""; 22 ; 23#include ""Math/GenVector/Rotation3D.h""; 24 ; 25 ; 26#include ""Math/GenVector/DisplacementVector3D.h""; 27 ; 28#include ""Math/GenVector/PositionVector3D.h""; 29 ; 30#include ""Math/GenVector/LorentzVector.h""; 31 ; 32#include ""Math/GenVector/3DConversions.h""; 33 ; 34 ; 35#include <algorithm>; 36#include <cassert>; 37#include <iostream>; 38 ; 39 ; 40namespace ROOT {; 41namespace Math {; 42 ; 43 ; 44//__________________________________________________________________________________________; 45 /**; 46 Rotation class with the (3D) rotation represented by; 47 angles describing first a rotation of; 48 an angle phi (yaw) about the Z axis,; 49 followed by a rotation of an angle theta (pitch) about the Y axis,; 50 followed by a third rotation of an angle psi (roll) about the X axis.; 51 Note that the rotations are extrinsic rotations happening around a fixed coordinate system. ; 52 This is different than the convention of the ROOT::Math::EulerAngles class, where the rotation are intrinsic. ; 53 Also it has not to be confused with the typical Goldstein definition of the Euler Angles; 54 (Z-X-Z or 313 sequence) which is used by the ROOT::M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2RotationZYX_8h_source.html:99,Guid,Guide,99,doc/master/GenVector_2RotationZYX_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2RotationZYX_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/Transform3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Transform3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Transform3D; 12//; 13// Created by: Lorenzo Moneta October 21 2005; 14//; 15//; 16#ifndef ROOT_Math_GenVector_Transform3D; 17#define ROOT_Math_GenVector_Transform3D 1; 18 ; 19 ; 20 ; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22 ; 23#include ""Math/GenVector/PositionVector3D.h""; 24 ; 25#include ""Math/GenVector/Rotation3D.h""; 26 ; 27#include ""Math/GenVector/Translation3D.h""; 28 ; 29 ; 30#include ""Math/GenVector/AxisAnglefwd.h""; 31#include ""Math/GenVector/EulerAnglesfwd.h""; 32#include ""Math/GenVector/Quaternionfwd.h""; 33#include ""Math/GenVector/RotationZYXfwd.h""; 34#include ""Math/GenVector/RotationXfwd.h""; 35#include ""Math/GenVector/RotationYfwd.h""; 36#include ""Math/GenVector/RotationZfwd.h""; 37 ; 38#include <iostream>; 39#include <type_traits>; 40#include <cmath>; 41 ; 42//#include ""Math/Vector3Dfwd.h""; 43 ; 44 ; 45 ; 46namespace ROOT {; 47 ; 48namespace Math {; 49 ; 50namespace Impl {; 51 ; 52//_________________________________________________________________________________________; 53/**; 54 Basic 3D Transformation class describing a rotation and then a translation; 55 The internal data are a 3D rotation data (represented as a 3x3 matrix) and a 3D vector data.; 56 They are represented and held in this class like a 3x4 matrix (a simple array of 12 numbers).; 57 ; 58 The class can be constructed from any 3D rotation object; 59 (ROOT::Math::Rotation3D, ROOT::Math::AxisAngle, ROOT::Math::Quaternion, etc...) and/or; 60 a 3D Vector (R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Transform3D_8h_source.html:99,Guid,Guide,99,doc/master/GenVector_2Transform3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Transform3D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/Translation3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Translation3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Translation3D; 12//; 13// Created by: Lorenzo Moneta October 21 2005; 14//; 15//; 16#ifndef ROOT_Math_GenVector_Translation3D; 17#define ROOT_Math_GenVector_Translation3D 1; 18 ; 19 ; 20#include ""Math/GenVector/DisplacementVector3D.h""; 21 ; 22#include ""Math/GenVector/Plane3D.h""; 23 ; 24#include ""Math/GenVector/PositionVector3Dfwd.h""; 25 ; 26#include ""Math/GenVector/LorentzVectorfwd.h""; 27 ; 28#include <iostream>; 29#include <type_traits>; 30 ; 31namespace ROOT {; 32 ; 33namespace Math {; 34 ; 35namespace Impl {; 36 ; 37//____________________________________________________________________________________________________; 38/**; 39 Class describing a 3 dimensional translation. It can be combined (using the operator *); 40 with the ROOT::Math::Rotation3D classes and ROOT::Math::Transform3D to obtained combined; 41 transformations and to operate on points and vectors.; 42 Note that a the translation applied to a Vector object (DisplacementVector3D and LorentzVector classes); 43 performs a noop, i.e. it returns the same vector. A translation can be applied only to the Point objects; 44 (PositionVector3D classes).; 45 ; 46 @ingroup GenVector; 47 ; 48 @sa Overview of the @ref GenVector ""physics vector library""; 49 ; 50*/; 51 ; 52template <typename T = double>; 53class Translation3D {; 54 ; 55public:; 56 typedef T Scalar;; 57 ; 58 typedef DisplacementVector3D<Cartesian3D<T>, DefaultCoordinateSystemTag> Vector;; 59 ; 60 /**; 61 Default constr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Translation3D_8h_source.html:101,Guid,Guide,101,doc/master/GenVector_2Translation3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Translation3D_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/GenVector/etaMax.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. etaMax.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11 ; 12// Header source file for function etaMax; 13//; 14// Created by: Mark Fischler at Thu Jun 2 2005; 15 ; 16 ; 17#ifndef ROOT_Math_GenVector_etaMax; 18#define ROOT_Math_GenVector_etaMax 1; 19 ; 20 ; 21#include <limits>; 22#include <cmath>; 23 ; 24 ; 25namespace ROOT {; 26 ; 27 namespace Math {; 28 ; 29 /**; 30 The following function could be called to provide the maximum possible; 31 value of pseudorapidity for a non-zero rho. This is log ( max/min ); 32 where max and min are the extrema of positive values for type; 33 long double.; 34 */; 35 inline; 36 long double etaMax_impl() {; 37 using std::log;; 38 return log ( std::numeric_limits<long double>::max()/256.0l ) -; 39 log ( std::numeric_limits<long double>::denorm_min()*256.0l ); 40 + 16.0 * log(2.0);; 41 // Actual usage of etaMax() simply returns the number 22756, which is; 42 // the answer this would supply, rounded to a higher integer.; 43 }; 44 ; 45 /**; 46 Function providing the maximum possible value of pseudorapidity for; 47 a non-zero rho, in the Scalar type with the largest dynamic range.; 48 */; 49 template <class T>; 50 inline; 51 T etaMax() {; 52 return static_cast<T>(22756.0);; 53 }; 54 ; 55 } // namespace Math; 56 ; 57} // namespace ROOT; 58 ; 59 ; 60#endif /* ROOT_Math_GenVector_etaMax */; MathNamespace for new Math classes and functions.; ROOT::Math::etaMax_impllong double etaMax_impl()The following function could be called to provide the maximum possible value of pseudorapidity for a ...Definition etaMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/etaMax_8h_source.html:94,Guid,Guide,94,doc/master/etaMax_8h_source.html,https://root.cern,https://root.cern/doc/master/etaMax_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Point2D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Point2D.h File Reference. #include ""Math/Point2Dfwd.h""; #include ""Math/GenVector/Cartesian2D.h""; #include ""Math/GenVector/Polar2D.h""; #include ""Math/GenVector/PositionVector2D.h"". Include dependency graph for Point2D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathPoint2D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Point2D_8h.html:88,Guid,Guide,88,doc/master/Point2D_8h.html,https://root.cern,https://root.cern/doc/master/Point2D_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Point2Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Point2Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file Point2Dfwd; 12//; 13// Created by: Lorenzo Moneta at Mon Apr 16 2007; 14//; 15 ; 16#ifndef ROOT_Math_Point2Dfwd; 17#define ROOT_Math_Point2Dfwd 1; 18 ; 19// forward declareations of position vectors (Points) and type defs definitions; 20 ; 21namespace ROOT {; 22 ; 23 namespace Math {; 24 ; 25 template<class CoordSystem, class Tag> class PositionVector2D;; 26 ; 27 template<typename T> class Cartesian2D;; 28 template<typename T> class Polar2D;; 29 ; 30 class DefaultCoordinateSystemTag;; 31 ; 32 /**; 33 2D Point based on the cartesian coordinates x,y,z in double precision; 34 */; 35 typedef PositionVector2D< Cartesian2D<double>, DefaultCoordinateSystemTag > XYPoint;; 36 typedef XYPoint XYPointD;; 37 ; 38 /**; 39 2D Point based on the cartesian coordinates x,y,z in single precision; 40 */; 41 typedef PositionVector2D< Cartesian2D<float>, DefaultCoordinateSystemTag > XYPointF;; 42 ; 43 ; 44 /**; 45 2D Point based on the polar coordinates rho, theta, phi in double precision.; 46 */; 47 typedef PositionVector2D< Polar2D<double>, DefaultCoordinateSystemTag > Polar2DPoint;; 48 typedef Polar2DPoint Polar2DPointD;; 49 ; 50 /**; 51 2D Point based on the polar coordinates rho, theta, phi in single precision.; 52 */; 53 typedef PositionVector2D< Polar2D<float>, DefaultCoordinateSystemTag > Polar2DPointF;; 54 ; 55 ; 56 ; 57 } // end namespace Math; 58 ; 59} // end namespace ROOT; 60 ; 61 ; 62#endif /* ROOT_Math_Point2Dfwd */; ROOT::Math::DefaultCoordinateSystemTagDefaultCoo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Point2Dfwd_8h_source.html:88,Guid,Guide,88,doc/master/Point2Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Point2Dfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Point3D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Point3D.h File Reference. #include ""Math/Point3Dfwd.h""; #include ""Math/GenVector/Cartesian3D.h""; #include ""Math/GenVector/CylindricalEta3D.h""; #include ""Math/GenVector/Polar3D.h""; #include ""Math/GenVector/Cylindrical3D.h""; #include ""Math/GenVector/PositionVector3D.h"". Include dependency graph for Point3D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathPoint3D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Point3D_8h.html:88,Guid,Guide,88,doc/master/Point3D_8h.html,https://root.cern,https://root.cern/doc/master/Point3D_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Point3Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Point3Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file Point3Dfwd; 12//; 13// Created by: Lorenzo Moneta at Mon May 30 18:12:14 2005; 14//; 15// Last update: Mon May 30 18:12:14 2005; 16//; 17#ifndef ROOT_Math_Point3Dfwd; 18#define ROOT_Math_Point3Dfwd 1; 19 ; 20// forward declareations of position vectors (Points) and type defs definitions; 21 ; 22namespace ROOT {; 23 ; 24 namespace Math {; 25 ; 26 template<class CoordSystem, class Tag> class PositionVector3D;; 27 ; 28 template<typename T> class Cartesian3D;; 29 template<typename T> class Cylindrical3D;; 30 template<typename T> class CylindricalEta3D;; 31 template<typename T> class Polar3D;; 32 ; 33 class DefaultCoordinateSystemTag;; 34 ; 35 /**; 36 3D Point based on the cartesian coordinates x,y,z in double precision; 37 */; 38 typedef PositionVector3D< Cartesian3D<double>, DefaultCoordinateSystemTag > XYZPoint;; 39 ; 40 /**; 41 3D Point based on the cartesian coordinates x,y,z in single precision; 42 */; 43 typedef PositionVector3D< Cartesian3D<float>, DefaultCoordinateSystemTag > XYZPointF;; 44 typedef XYZPoint XYZPointD;; 45 ; 46 /**; 47 3D Point based on the eta based cylindrical coordinates rho, eta, phi in double precision.; 48 */; 49 typedef PositionVector3D< CylindricalEta3D<double>, DefaultCoordinateSystemTag > RhoEtaPhiPoint;; 50 /**; 51 3D Point based on the eta based cylindrical coordinates rho, eta, phi in single precision.; 52 */; 53 typedef PositionVector3D< CylindricalEta3D<float>, DefaultCoordinateSystemTag > RhoEtaPhiPointF;; 54 typedef RhoEta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Point3Dfwd_8h_source.html:88,Guid,Guide,88,doc/master/Point3Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Point3Dfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Vector2D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector2D.h File Reference. #include ""Math/Vector2Dfwd.h""; #include ""Math/GenVector/Cartesian2D.h""; #include ""Math/GenVector/Polar2D.h""; #include ""Math/GenVector/DisplacementVector2D.h"". Include dependency graph for Vector2D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathVector2D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector2D_8h.html:89,Guid,Guide,89,doc/master/Vector2D_8h.html,https://root.cern,https://root.cern/doc/master/Vector2D_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Vector2Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector2Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file Vector2Dfwd; 12//; 13// Created by: Lorenzo Moneta at Mon Apr 16 2007; 14//; 15//; 16#ifndef ROOT_Math_Vector2Dfwd; 17#define ROOT_Math_Vector2Dfwd 1; 18 ; 19// forward declarations of displacement vectors (Vectors) and type defs definitions; 20 ; 21namespace ROOT {; 22 ; 23 namespace Math {; 24 ; 25 ; 26 template<class CoordSystem, class Tag> class DisplacementVector2D;; 27 ; 28 template<typename T> class Cartesian2D;; 29 template<typename T> class Polar2D;; 30 ; 31 class DefaultCoordinateSystemTag;; 32 ; 33 ; 34 /**; 35 2D Vector based on the cartesian coordinates x,y in double precision; 36 ; 37 To use it add the line `#include <Vector2D.h>`; 38 ; 39 See the documentation on the DisplacementVector2D page.; 40 */; 41 typedef DisplacementVector2D< Cartesian2D<double>, DefaultCoordinateSystemTag > XYVector;; 42 typedef XYVector XYVectorD;; 43 ; 44 /**; 45 2D Vector based on the cartesian coordinates x,y,z in single precision; 46 ; 47 To use it add the line `#include <Vector2D.h>`; 48 ; 49 See the documentation on the DisplacementVector2D page.; 50 */; 51 typedef DisplacementVector2D< Cartesian2D<float>, DefaultCoordinateSystemTag > XYVectorF;; 52 ; 53 ; 54 /**; 55 2D Vector based on the polar coordinates rho, phi in double precision.; 56 ; 57 To use it add the line `#include <Vector2D.h>`; 58 ; 59 See the documentation on the DisplacementVector2D page.; 60 */; 61 typedef DisplacementVector2D< Polar2D<double>, DefaultCoordinateSystemTag > Polar2DVector;; 62 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector2Dfwd_8h_source.html:89,Guid,Guide,89,doc/master/Vector2Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Vector2Dfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Vector3D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector3D.h File Reference. #include ""Math/Vector3Dfwd.h""; #include ""Math/GenVector/Cartesian3D.h""; #include ""Math/GenVector/CylindricalEta3D.h""; #include ""Math/GenVector/Polar3D.h""; #include ""Math/GenVector/Cylindrical3D.h""; #include ""Math/GenVector/DisplacementVector3D.h"". Include dependency graph for Vector3D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathVector3D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector3D_8h.html:89,Guid,Guide,89,doc/master/Vector3D_8h.html,https://root.cern,https://root.cern/doc/master/Vector3D_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Vector3Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector3Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file Vector3Dfwd; 12//; 13// Created by: Lorenzo Moneta at Mon May 30 18:08:35 2005; 14//; 15// Last update: Mon May 30 18:08:35 2005; 16//; 17#ifndef ROOT_Math_Vector3Dfwd; 18#define ROOT_Math_Vector3Dfwd 1; 19 ; 20// forward declarations of displacement vectors (Vectors) and type defs definitions; 21 ; 22namespace ROOT {; 23 ; 24 namespace Math {; 25 ; 26 ; 27 template<class CoordSystem, class Tag> class DisplacementVector3D;; 28 ; 29 template<typename T> class Cartesian3D;; 30 template<typename T> class CylindricalEta3D;; 31 template<typename T> class Polar3D;; 32 template<typename T> class Cylindrical3D;; 33 ; 34 class DefaultCoordinateSystemTag;; 35 ; 36 ; 37 /**; 38 3D Vector based on the cartesian coordinates x,y,z in double precision; 39 ; 40 To use it add the line `#include <Vector3D.h>`; 41 ; 42 See the documentation on the DisplacementVector3D page.; 43 */; 44 typedef DisplacementVector3D< Cartesian3D<double>, DefaultCoordinateSystemTag > XYZVector;; 45 /**; 46 3D Vector based on the cartesian coordinates x,y,z in single precision; 47 ; 48 To use it add the line `#include <Vector3D.h>`; 49 ; 50 See the documentation on the DisplacementVector3D page.; 51 */; 52 typedef DisplacementVector3D< Cartesian3D<float>, DefaultCoordinateSystemTag > XYZVectorF;; 53 typedef XYZVector XYZVectorD;; 54 ; 55 /**; 56 3D Vector based on the eta based cylindrical coordinates rho, eta, phi in double precision.; 57 ; 58 To use it add the line `#include <Vector3D.h>`; 59 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector3Dfwd_8h_source.html:89,Guid,Guide,89,doc/master/Vector3Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Vector3Dfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Vector4D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector4D.h File Reference. #include ""Math/Vector4Dfwd.h""; #include ""Math/GenVector/PxPyPzE4D.h""; #include ""Math/GenVector/PtEtaPhiE4D.h""; #include ""Math/GenVector/PxPyPzM4D.h""; #include ""Math/GenVector/PtEtaPhiM4D.h""; #include ""Math/GenVector/LorentzVector.h"". Include dependency graph for Vector4D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathVector4D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector4D_8h.html:89,Guid,Guide,89,doc/master/Vector4D_8h.html,https://root.cern,https://root.cern/doc/master/Vector4D_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/genvector/inc/Math/Vector4Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector4Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LorentzVectorfwd; 12//; 13// Created by: moneta at Tue May 31 21:06:43 2005; 14//; 15// Last update: Tue May 31 21:06:43 2005; 16//; 17#ifndef ROOT_Math_Vector4Dfwd; 18#define ROOT_Math_Vector4Dfwd 1; 19 ; 20 ; 21namespace ROOT {; 22 ; 23 namespace Math {; 24 ; 25 ; 26 // forward declarations of Lorentz Vectors and type defs definitions; 27 ; 28 template<class CoordSystem> class LorentzVector;; 29 ; 30 template<typename T> class PxPyPzE4D;; 31 template<typename T> class PtEtaPhiE4D;; 32 template<typename T> class PxPyPzM4D;; 33 template<typename T> class PtEtaPhiM4D;; 34// template<typename T> class EEtaPhiMSystem;; 35 ; 36 ; 37 // for LorentzVector have only double classes (define the vector in the global ref frame); 38 ; 39 /**; 40 LorentzVector based on x,y,x,t (or px,py,pz,E) coordinates in double precision with metric (-,-,-,+); 41 ; 42 To use it add the line `#include <Math/Vector4D.h>`; 43 ; 44 See the documentation on the LorentzVector page.; 45 */; 46 typedef LorentzVector<PxPyPzE4D<double> > XYZTVector;; 47 // for consistency; 48 typedef LorentzVector<PxPyPzE4D<double> > PxPyPzEVector;; 49 ; 50 ; 51 /**; 52 LorentzVector based on x,y,x,t (or px,py,pz,E) coordinates in float precision with metric (-,-,-,+); 53 ; 54 To use it add the line `#include <Math/Vector4D.h>`; 55 ; 56 See the documentation on the LorentzVector page.; 57 */; 58 typedef LorentzVector< PxPyPzE4D <float> > XYZTVectorF;; 59 ; 60 ; 61 /**; 62 LorentzVector based on the x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector4Dfwd_8h_source.html:89,Guid,Guide,89,doc/master/Vector4Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Vector4Dfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/AxisAngle.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. AxisAngle.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class AxisAngle, a rotation in 3 dimensions; 12// represented by its axis and angle of rotation; 13//; 14// Created by: Mark Fischler Tues July 5 2005; 15//; 16#include ""Math/GenVector/AxisAngle.h""; 17 ; 18#include <cmath>; 19#include <algorithm>; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/Rotation3D.h""; 24 ; 25namespace ROOT {; 26 ; 27namespace Math {; 28 ; 29// ========== Constructors and Assignment =====================; 30 ; 31void AxisAngle::RectifyAngle() {; 32 // Note: We could require the angle to be in [0,pi) since we; 33 // can represent negative angles by flipping the axis.; 34 // We choose not to do this.; 35 ; 36 if ( fAngle <= Pi() && fAngle > -Pi() ) return;; 37 ; 38 if ( fAngle > 0 ) {; 39 int n = static_cast<int>( (fAngle+Pi())/(2*Pi()) );; 40 fAngle -= 2*Pi()*n;; 41 } else {; 42 int n = static_cast<int>( -(fAngle-Pi())/(2*Pi()) );; 43 fAngle += 2*Pi()*n;; 44 }; 45} // RectifyAngle(); 46 ; 47void AxisAngle::Rectify(); 48{; 49 // The two conditions are that the angle is in (-pi, pi] and; 50 // the axis is a unit vector.; 51 ; 52 Scalar r2 = fAxis.Mag2();; 53 if ( r2 == 0 ) {; 54 fAxis.SetCoordinates(0,0,1);; 55 fAngle = 0;; 56 return;; 57 }; 58 fAxis *= (1.0/r2);; 59 RectifyAngle();; 60} // Rectify(); 61 ; 62// ======== Transformation to other Rotation Forms ==================; 63 ; 64enum ERotation3DMatrixIndex {; 65 kXX = 0, kXY = 1, kXZ = 2; 66 , kYX =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/AxisAngle_8cxx_source.html:84,Guid,Guide,84,doc/master/AxisAngle_8cxx_source.html,https://root.cern,https://root.cern/doc/master/AxisAngle_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/AxisAngleXother.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. AxisAngleXother.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for multiplications of AxisAngle by a rotation; 12//; 13// Created by: Mark Fischler Tues July 5 2005; 14//; 15 ; 16#include ""Math/GenVector/AxisAngle.h""; 17 ; 18#include <cmath>; 19 ; 20#include ""Math/GenVector/Quaternion.h""; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/RotationX.h""; 23#include ""Math/GenVector/RotationY.h""; 24#include ""Math/GenVector/RotationZ.h""; 25 ; 26#include ""Math/GenVector/Rotation3Dfwd.h""; 27#include ""Math/GenVector/EulerAnglesfwd.h""; 28 ; 29namespace ROOT {; 30 ; 31namespace Math {; 32 ; 33 ; 34AxisAngle AxisAngle::operator * (const Rotation3D & r) const {; 35 // combination with a Rotation3D; 36 return operator* ( Quaternion(r) );; 37 ; 38}; 39 ; 40AxisAngle AxisAngle::operator * (const AxisAngle & a) const {; 41 // combination with another AxisAngle; 42 return operator* ( Quaternion(a) );; 43}; 44 ; 45AxisAngle AxisAngle::operator * (const EulerAngles & e) const {; 46 // combination with EulerAngles; 47 return operator* ( Quaternion(e) );; 48}; 49 ; 50AxisAngle AxisAngle::operator * (const RotationZYX & r) const {; 51 // combination with RotationZYX; 52 return operator* ( Quaternion(r) );; 53}; 54 ; 55AxisAngle AxisAngle::operator * (const Quaternion & q) const {; 56 // combination with Quaternion; 57 return AxisAngle ( Quaternion(*this) * q );; 58}; 59 ; 60#ifdef MOVE; 61 ; 62AxisAngle AxisAngle::operator * (const Quaternion & q) const {; 63 // combination with quaternion (not used); 64 const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/AxisAngleXother_8cxx_source.html:90,Guid,Guide,90,doc/master/AxisAngleXother_8cxx_source.html,https://root.cern,https://root.cern/doc/master/AxisAngleXother_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/Boost.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Boost.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: M. Fischler 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Boost, a 4x4 symmetric matrix representation of; 12// an axial Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Nov 1 2005; 15//; 16#include ""Math/GenVector/Boost.h""; 17#include ""Math/GenVector/LorentzVector.h""; 18#include ""Math/GenVector/PxPyPzE4D.h""; 19#include ""Math/GenVector/DisplacementVector3D.h""; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/GenVector_exception.h""; 22 ; 23#include <cmath>; 24#include <algorithm>; 25 ; 26//#ifdef TEX; 27/**; 28 ; 29 A variable names bgamma appears in several places in this file. A few; 30 words of elaboration are needed to make its meaning clear. On page 69; 31 of Misner, Thorne and Wheeler, (Exercise 2.7) the elements of the matrix; 32 for a general Lorentz boost are given as; 33 ; 34 \f[ \Lambda^{j'}_k = \Lambda^{k'}_j; 35 = (\gamma - 1) n^j n^k + \delta^{jk} \f]; 36 ; 37 where the n^i are unit vectors in the direction of the three spatial; 38 axes. Using the definitions, \f$ n^i = \beta_i/\beta \f$ , then, for example,; 39 ; 40 \f[ \Lambda_{xy} = (\gamma - 1) n_x n_y; 41 = (\gamma - 1) \beta_x \beta_y/\beta^2 \f]; 42 ; 43 By definition, \f[ \gamma^2 = 1/(1 - \beta^2) \f]; 44 ; 45 so that \f[ \gamma^2 \beta^2 = \gamma^2 - 1 \f]; 46 ; 47 or \f[ \beta^2 = (\gamma^2 - 1)/\gamma^2 \f]; 48 ; 49 If we insert this into the expression for \f$ \Lambda_{xy} \f$, we get; 50 ; 51 \f[ \Lambda_{xy} = (\gamma - 1) \gamma^2/(\gamma^2 - 1) \beta_x \beta_y \f]; 52 ; 53 or, finally; 54 ; 55 \f[ \Lambda_{xy} = \gam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Boost_8cxx_source.html:80,Guid,Guide,80,doc/master/Boost_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Boost_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/BoostX.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BoostX.cxx. Go to the documentation of this file. 1 // @(#)root/mathcore:$Id$; 2// Authors: M. Fischler 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class BoostX, a 4x4 symmetric matrix representation of; 12// an axial Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Nov 1 2005; 15//; 16#include ""Math/GenVector/BoostX.h""; 17#include ""Math/GenVector/LorentzVector.h""; 18#include ""Math/GenVector/PxPyPzE4D.h""; 19#include ""Math/GenVector/DisplacementVector3D.h""; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/GenVector_exception.h""; 22 ; 23#include <cmath>; 24#include <algorithm>; 25 ; 26namespace ROOT {; 27 ; 28namespace Math {; 29 ; 30 ; 31BoostX::BoostX() : fBeta(0.0), fGamma(1.0) {}; 32 ; 33void BoostX::SetComponents (Scalar bx ) {; 34 // set component; 35 Scalar bp2 = bx*bx;; 36 if (bp2 >= 1) {; 37 GenVector::Throw (; 38 ""Beta Vector supplied to set BoostX represents speed >= c"");; 39 return;; 40 }; 41 fBeta = bx;; 42 fGamma = 1.0 / std::sqrt(1.0 - bp2);; 43}; 44 ; 45void BoostX::GetComponents (Scalar& bx) const {; 46 // get component; 47 bx = fBeta;; 48}; 49 ; 50DisplacementVector3D< Cartesian3D<BoostX::Scalar> >; 51BoostX::BetaVector() const {; 52 // return beta vector; 53 return DisplacementVector3D< Cartesian3D<Scalar> > ( fBeta, 0.0, 0.0 );; 54}; 55 ; 56void BoostX::GetLorentzRotation (Scalar r[]) const {; 57 // get corresponding LorentzRotation; 58 r[kLXX] = fGamma; r[kLXY] = 0.0; r[kLXZ] = 0.0; r[kLXT] = fGamma*fBeta;; 59 r[kLYX] = 0.0; r[kLYY] = 1.0; r[kLYZ] = 0.0; r[kLYT] = 0.0;; 60 r[kLZX] = 0.0; r[kLZY] = 0.0; r[kLZZ] = 1.0; r[kLZT] = 0.0;; 61 r[kLTX] = fGamma*fBeta; r[kLTY] =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BoostX_8cxx_source.html:81,Guid,Guide,81,doc/master/BoostX_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BoostX_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/BoostY.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BoostY.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: M. Fischler 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class BoostY, a 4x4 symmetric matrix representation of; 12// an axial Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Nov 1 2005; 15//; 16#include ""Math/GenVector/BoostY.h""; 17#include ""Math/GenVector/LorentzVector.h""; 18#include ""Math/GenVector/PxPyPzE4D.h""; 19#include ""Math/GenVector/DisplacementVector3D.h""; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/GenVector_exception.h""; 22 ; 23#include <cmath>; 24#include <algorithm>; 25 ; 26namespace ROOT {; 27 ; 28namespace Math {; 29 ; 30BoostY::BoostY() : fBeta(0.0), fGamma(1.0) {}; 31 ; 32void BoostY::SetComponents (Scalar by) {; 33 // set component; 34 Scalar bp2 = by*by;; 35 if (bp2 >= 1) {; 36 GenVector::Throw(; 37 ""Beta Vector supplied to set BoostY represents speed >= c"");; 38 return;; 39 }; 40 fBeta = by;; 41 fGamma = 1.0 / std::sqrt(1.0-bp2);; 42}; 43 ; 44void BoostY::GetComponents (Scalar& by) const {; 45 // get component; 46 by = fBeta;; 47}; 48 ; 49DisplacementVector3D< Cartesian3D<BoostY::Scalar> >; 50BoostY::BetaVector() const {; 51 // return beta vector; 52 return DisplacementVector3D< Cartesian3D<Scalar> > ( 0.0, fBeta, 0.0 );; 53}; 54 ; 55void BoostY::GetLorentzRotation (Scalar r[]) const {; 56 // get corresponding LorentzRotation; 57 r[kLXX] = 1.0; r[kLXY] = 0.0; r[kLXZ] = 0.0; r[kLXT] = 0.0;; 58 r[kLYX] = 0.0; r[kLYY] = fGamma; r[kLYZ] = 0.0; r[kLYT] = fGamma*fBeta;; 59 r[kLZX] = 0.0; r[kLZY] = 0.0; r[kLZZ] = 1.0; r[kLZT] = 0.0;; 60 r[kLTX] = 0.0; r[kLTY] = fGamma*fBeta; r[kL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BoostY_8cxx_source.html:81,Guid,Guide,81,doc/master/BoostY_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BoostY_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/BoostZ.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BoostZ.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: M. Fischler 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class BoostZ, a 4x4 symmetric matrix representation of; 12// an axial Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Nov 1 2005; 15//; 16#include ""Math/GenVector/BoostZ.h""; 17#include ""Math/GenVector/LorentzVector.h""; 18#include ""Math/GenVector/PxPyPzE4D.h""; 19#include ""Math/GenVector/DisplacementVector3D.h""; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/GenVector_exception.h""; 22 ; 23#include <cmath>; 24#include <algorithm>; 25 ; 26namespace ROOT {; 27 ; 28namespace Math {; 29 ; 30BoostZ::BoostZ() : fBeta(0.0), fGamma(1.0) {}; 31 ; 32void BoostZ::SetComponents (Scalar bz) {; 33 // set component; 34 Scalar bp2 = bz*bz;; 35 if (bp2 >= 1) {; 36 GenVector::Throw (; 37 ""Beta Vector supplied to set BoostZ represents speed >= c"");; 38 return;; 39 }; 40 fBeta = bz;; 41 fGamma = 1.0 / std::sqrt(1.0 - bp2);; 42}; 43 ; 44void BoostZ::GetComponents (Scalar& bz) const {; 45 // get component; 46 bz = fBeta;; 47}; 48 ; 49DisplacementVector3D< Cartesian3D<BoostZ::Scalar> >; 50BoostZ::BetaVector() const {; 51 // return beta vector; 52 return DisplacementVector3D< Cartesian3D<Scalar> >; 53 ( 0.0, 0.0, fBeta );; 54}; 55 ; 56void BoostZ::GetLorentzRotation (Scalar r[]) const {; 57 // get corresponding LorentzRotation; 58 r[kLXX] = 1.0; r[kLXY] = 0.0; r[kLXZ] = 0.0; r[kLXT] = 0.0 ;; 59 r[kLYX] = 0.0; r[kLYY] = 1.0; r[kLYZ] = 0.0; r[kLYT] = 0.0 ;; 60 r[kLZX] = 0.0; r[kLZY] = 0.0; r[kLZZ] = fGamma; r[kLZT] = fGamma*fBeta;; 61 r[kLTX] = 0.0; r[kLTY] = 0.0; r[kL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BoostZ_8cxx_source.html:81,Guid,Guide,81,doc/master/BoostZ_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BoostZ_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/EulerAngles.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. EulerAngles.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for rotation in 3 dimensions, represented by EulerAngles; 12//; 13// Created by: Mark Fischler Thurs June 9 2005; 14//; 15// Last update: $Id$; 16//; 17#include ""Math/GenVector/EulerAngles.h""; 18 ; 19#include <cmath>; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/Rotation3D.h""; 24#include ""Math/GenVector/Quaternion.h""; 25#include ""Math/GenVector/RotationX.h""; 26#include ""Math/GenVector/RotationY.h""; 27#include ""Math/GenVector/RotationZ.h""; 28 ; 29#include ""Math/GenVector/AxisAnglefwd.h""; 30 ; 31namespace ROOT {; 32 ; 33namespace Math {; 34 ; 35// ========== Constructors and Assignment =====================; 36 ; 37void EulerAngles::Rectify(); 38{; 39 // rectify; 40 if ( fTheta < 0 || fTheta > Pi() ) {; 41 Scalar t = fTheta - std::floor( fTheta/(2*Pi()) ) * 2*Pi();; 42 if ( t <= Pi() ) {; 43 fTheta = t;; 44 } else {; 45 fTheta = 2*Pi() - t;; 46 fPhi = fPhi + Pi();; 47 fPsi = fPsi + Pi();; 48 }; 49 }; 50 ; 51 if ( fPhi <= -Pi()|| fPhi > Pi() ) {; 52 fPhi = fPhi - std::floor( fPhi/(2*Pi()) +.5 ) * 2*Pi();; 53 }; 54 ; 55 if ( fPsi <= -Pi()|| fPsi > Pi() ) {; 56 fPsi = fPsi - std::floor( fPsi/(2*Pi()) +.5 ) * 2*Pi();; 57 }; 58 ; 59} // Rectify(); 60 ; 61 ; 62// ========== Operations =====================; 63 ; 64// DisplacementVector3D< Cartesian3D<double> >; 65// EulerAngles::; 66// operator() (const DisplacementVector3D< Cartesian3D<double> > & v) const; 67// {; 68// r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/EulerAngles_8cxx_source.html:86,Guid,Guide,86,doc/master/EulerAngles_8cxx_source.html,https://root.cern,https://root.cern/doc/master/EulerAngles_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/LorentzRotation.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. LorentzRotation.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LorentzRotation, a 4x4 matrix representation of; 12// a general Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Aug 8 2005; 15//; 16 ; 17#include ""Math/GenVector/GenVectorIO.h""; 18 ; 19#include ""Math/GenVector/LorentzRotation.h""; 20#include ""Math/GenVector/LorentzVector.h""; 21#include ""Math/GenVector/PxPyPzE4D.h""; 22#include ""Math/GenVector/GenVector_exception.h""; 23 ; 24#include <cmath>; 25#include <algorithm>; 26 ; 27#include ""Math/GenVector/Rotation3D.h""; 28#include ""Math/GenVector/RotationX.h""; 29#include ""Math/GenVector/RotationY.h""; 30#include ""Math/GenVector/RotationZ.h""; 31 ; 32namespace ROOT {; 33 ; 34namespace Math {; 35 ; 36LorentzRotation::LorentzRotation() {; 37 // constructor of an identity LR; 38 fM[kXX] = 1.0; fM[kXY] = 0.0; fM[kXZ] = 0.0; fM[kXT] = 0.0;; 39 fM[kYX] = 0.0; fM[kYY] = 1.0; fM[kYZ] = 0.0; fM[kYT] = 0.0;; 40 fM[kZX] = 0.0; fM[kZY] = 0.0; fM[kZZ] = 1.0; fM[kZT] = 0.0;; 41 fM[kTX] = 0.0; fM[kTY] = 0.0; fM[kTZ] = 0.0; fM[kTT] = 1.0;; 42}; 43 ; 44LorentzRotation::LorentzRotation(Rotation3D const & r) {; 45 // construct from Rotation3D; 46 r.GetComponents ( fM[kXX], fM[kXY], fM[kXZ],; 47 fM[kYX], fM[kYY], fM[kYZ],; 48 fM[kZX], fM[kZY], fM[kZZ] );; 49 fM[kXT] = 0.0;; 50 fM[kYT] = 0.0;; 51 fM[kZT] = 0.0;; 52 fM[kTX] = 0.0; fM[kTY] = 0.0; fM[kTZ] = 0.0; fM[kTT] = 1.0;; 53}; 54 ; 55LorentzRotation::LorentzRotation(AxisAngle const & a) {; 56 // construct from AxisAngle; 57 const Rotation3D r(a);; 58 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/LorentzRotation_8cxx_source.html:90,Guid,Guide,90,doc/master/LorentzRotation_8cxx_source.html,https://root.cern,https://root.cern/doc/master/LorentzRotation_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/Quaternion.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Quaternion.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for rotation in 3 dimensions, represented by quaternion; 12//; 13// Created by: Mark Fischler Thurs June 9 2005; 14//; 15// Last update: $Id$; 16//; 17#include ""Math/GenVector/Quaternion.h""; 18 ; 19#include <cmath>; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23 ; 24#include ""Math/GenVector/Rotation3Dfwd.h""; 25#include ""Math/GenVector/AxisAnglefwd.h""; 26#include ""Math/GenVector/EulerAnglesfwd.h""; 27 ; 28namespace ROOT {; 29 ; 30namespace Math {; 31 ; 32// ========== Constructors and Assignment =====================; 33 ; 34void Quaternion::Rectify(); 35{; 36 ; 37 // The vector should be a unit vector, and the first element should be; 38 // non-negative (though negative fU quaternions would work just fine,; 39 // being isomorphic to a quaternion with positive fU).; 40 ; 41 if ( fU < 0 ) {; 42 fU = - fU; fI = - fI; fJ = - fJ; fK = - fK;; 43 }; 44 ; 45 Scalar a = 1.0 / std::sqrt(fU*fU + fI*fI + fJ*fJ + fK*fK);; 46 fU *= a;; 47 fI *= a;; 48 fJ *= a;; 49 fK *= a;; 50 ; 51} // Rectify(); 52 ; 53 ; 54// ========== Operations =====================; 55 ; 56// DisplacementVector3D< Cartesian3D<double> >; 57// Quaternion::operator() (const DisplacementVector3D< Cartesian3D<double> > & v) const; 58// {; 59// // apply to a 3D Vector; 60// }; 61 ; 62// Quaternion Quaternion::operator * (const Quaternion & q) const {; 63// // combination of rotations; 64// return Quaternion (; 65// fU*q.fU - fI*q.fI - fJ*q.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Quaternion_8cxx_source.html:85,Guid,Guide,85,doc/master/Quaternion_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Quaternion_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/QuaternionXaxial.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. QuaternionXaxial.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for quaternion times other non-axial rotations.; 12// Decoupled from main Quaternion implementations.; 13//; 14// Created by: Mark Fischler Tues July 19, 2005; 15//; 16// Last update: $Id$; 17//; 18#include ""Math/GenVector/Quaternion.h""; 19 ; 20namespace ROOT {; 21 ; 22namespace Math {; 23 ; 24 ; 25// Although the same technique would work with axial rotations,; 26// we know that two of the four quaternion components will be zero,; 27// and we exploit that knowledge:; 28 ; 29Quaternion Quaternion::operator * (const RotationX & rx) const {; 30 // combination with a RotationX; 31 Quaternion q(rx);; 32 return Quaternion (; 33 U()*q.U() - I()*q.I(); 34 , I()*q.U() + U()*q.I(); 35 , J()*q.U() + K()*q.I(); 36 , K()*q.U() - J()*q.I(); 37 );; 38}; 39 ; 40Quaternion Quaternion::operator * (const RotationY & ry) const {; 41 // combination with a RotationY; 42 Quaternion q(ry);; 43 return Quaternion (; 44 U()*q.U() - J()*q.J(); 45 , I()*q.U() - K()*q.J(); 46 , J()*q.U() + U()*q.J(); 47 , K()*q.U() + I()*q.J(); 48 );; 49}; 50 ; 51Quaternion Quaternion::operator * (const RotationZ & rz) const {; 52 // combination with a RotationZ; 53 Quaternion q(rz);; 54 return Quaternion (; 55 U()*q.U() - K()*q.K(); 56 , I()*q.U() + J()*q.K(); 57 , J()*q.U() - I()*q.K(); 58 , K()*q.U() + U()*q.K(); 59 );; 60}; 61 ; 62Quaternion; 63operator * ( RotationX const & r, Quaternion const & q ) {; 64 return Quaternion(r) * q; // TODO: improve performance; 65}; 66 ; 67Qua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/QuaternionXaxial_8cxx_source.html:91,Guid,Guide,91,doc/master/QuaternionXaxial_8cxx_source.html,https://root.cern,https://root.cern/doc/master/QuaternionXaxial_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/Rotation3D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Rotation3D.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Rotation in 3 dimensions, represented by 3x3 matrix; 12//; 13// Created by: Mark Fischler Tues July 5 2005; 14//; 15#include ""Math/GenVector/Rotation3D.h""; 16 ; 17#include <cmath>; 18#include <algorithm>; 19 ; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22 ; 23namespace ROOT {; 24 ; 25namespace Math {; 26 ; 27// ========== Constructors and Assignment =====================; 28 ; 29Rotation3D::Rotation3D(); 30{; 31 // constructor of a identity rotation; 32 fM[kXX] = 1.0; fM[kXY] = 0.0; fM[kXZ] = 0.0;; 33 fM[kYX] = 0.0; fM[kYY] = 1.0; fM[kYZ] = 0.0;; 34 fM[kZX] = 0.0; fM[kZY] = 0.0; fM[kZZ] = 1.0;; 35}; 36 ; 37 ; 38void Rotation3D::Rectify(); 39{; 40 // rectify rotation matrix (make orthogonal); 41 // The ""nearest"" orthogonal matrix X to a nearly-orthogonal matrix A; 42 // (in the sense that X is exactly orthogonal and the sum of the squares; 43 // of the element differences X-A is as small as possible) is given by; 44 // X = A * inverse(sqrt(A.transpose()*A.inverse())).; 45 ; 46 // Step 1 -- form symmetric M = A.transpose * A; 47 ; 48 double m11 = fM[kXX]*fM[kXX] + fM[kYX]*fM[kYX] + fM[kZX]*fM[kZX];; 49 double m12 = fM[kXX]*fM[kXY] + fM[kYX]*fM[kYY] + fM[kZX]*fM[kZY];; 50 double m13 = fM[kXX]*fM[kXZ] + fM[kYX]*fM[kYZ] + fM[kZX]*fM[kZZ];; 51 double m22 = fM[kXY]*fM[kXY] + fM[kYY]*fM[kYY] + fM[kZY]*fM[kZY];; 52 double m23 = fM[kXY]*fM[kXZ] + fM[kYY]*fM[kYZ] + fM[kZY]*fM[kZZ];; 53 double m33 = fM[kXZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Rotation3D_8cxx_source.html:85,Guid,Guide,85,doc/master/Rotation3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Rotation3D_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/Rotation3DxAxial.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Rotation3DxAxial.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4#include ""Math/GenVector/Rotation3D.h""; 5 ; 6#include ""Math/GenVector/RotationX.h""; 7#include ""Math/GenVector/RotationY.h""; 8#include ""Math/GenVector/RotationZ.h""; 9 ; 10namespace ROOT {; 11 ; 12namespace Math {; 13 ; 14Rotation3D Rotation3D::operator * (const RotationX & rx) const {; 15 // combination of a Rotation3D with a RotationX; 16 Scalar s = rx.SinAngle();; 17 Scalar c = rx.CosAngle();; 18 return Rotation3D; 19 (; 20 fM[kXX], fM[kXY]*c + fM[kXZ]*s, fM[kXZ]*c - fM[kXY]*s; 21 , fM[kYX], fM[kYY]*c + fM[kYZ]*s, fM[kYZ]*c - fM[kYY]*s; 22 , fM[kZX], fM[kZY]*c + fM[kZZ]*s, fM[kZZ]*c - fM[kZY]*s; 23 );; 24}; 25 ; 26Rotation3D Rotation3D::operator * (const RotationY & ry) const {; 27 // combination of a Rotation3D with a RotationY; 28 Scalar s = ry.SinAngle();; 29 Scalar c = ry.CosAngle();; 30 return Rotation3D; 31 (; 32 fM[kXX]*c - fM[kXZ]*s, fM[kXY], fM[kXX]*s + fM[kXZ]*c; 33 , fM[kYX]*c - fM[kYZ]*s, fM[kYY], fM[kYX]*s + fM[kYZ]*c; 34 , fM[kZX]*c - fM[kZZ]*s, fM[kZY], fM[kZX]*s + fM[kZZ]*c; 35 );; 36}; 37 ; 38 ; 39Rotation3D Rotation3D::operator * (const RotationZ & rz) const {; 40 // combination of a Rotation3D with a RotationZ; 41 Scalar s = rz.SinAngle();; 42 Scalar c = rz.CosAngle();; 43 return Rotation3D; 44 (; 45 fM[kXX]*c + fM[kXY]*s, fM[kXY]*c - fM[kXX]*s, fM[kXZ]; 46 , fM[kYX]*c + fM[kYY]*s, fM[kYY]*c - fM[kYX]*s, fM[kYZ]; 47 , fM[kZX]*c + fM[kZY]*s, fM[kZY]*c - fM[kZX]*s, fM[kZZ]; 48 );; 49}; 50 ; 51Rotation3D operator* (RotationX const & r1, Rotation3D const & r2) {; 52 // combination of a RotationX with a Rotation3D; 53 // TODO -- recode for much better efficiency!; 54 return Rotation3D(r1)*r2;; 55}; 56 ; 57Rotation3D operator* (RotationY const & r1, Rotation3D const & r2)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Rotation3DxAxial_8cxx_source.html:91,Guid,Guide,91,doc/master/Rotation3DxAxial_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Rotation3DxAxial_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/genvector/src/RotationZYX.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationZYX.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for rotation in 3 dimensions, represented by RotationZYX; 12//; 13// Created by: Lorenzo Moneta, May 23 2007; 14//; 15// Last update: $Id$; 16//; 17#include ""Math/GenVector/RotationZYX.h""; 18 ; 19#include <cmath>; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/Rotation3D.h""; 24#include ""Math/GenVector/Quaternion.h""; 25#include ""Math/GenVector/RotationX.h""; 26#include ""Math/GenVector/RotationY.h""; 27#include ""Math/GenVector/RotationZ.h""; 28 ; 29#include ""Math/GenVector/AxisAnglefwd.h""; 30 ; 31namespace ROOT {; 32 ; 33namespace Math {; 34 ; 35// ========== Constructors and Assignment =====================; 36 ; 37 ; 38 ; 39// ========== Operations =====================; 40 ; 41// DisplacementVector3D< Cartesian3D<double> >; 42// RotationZYX::; 43// operator() (const DisplacementVector3D< Cartesian3D<double> > & v) const; 44// {; 45// return Rotation3D(*this)(v);; 46// }; 47 ; 48 ; 49RotationZYX RotationZYX::operator * (const Rotation3D & r) const {; 50 // combine with a Rotation3D; 51 return RotationZYX ( Rotation3D(*this) * r );; 52}; 53 ; 54RotationZYX RotationZYX::operator * (const AxisAngle & a) const {; 55 // combine with a AxisAngle; 56 return RotationZYX ( Quaternion(*this) * Quaternion(a) );; 57}; 58 ; 59RotationZYX RotationZYX::operator * (const EulerAngles & e) const {; 60 // combine with EulerAngles; 61 return RotationZYX ( Quaternion(*this) * Quaternion(e) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RotationZYX_8cxx_source.html:86,Guid,Guide,86,doc/master/RotationZYX_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RotationZYX_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/BinData.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; BinData.h File Reference. #include ""Fit/FitData.h""; #include ""Math/Error.h""; #include <cmath>; #include <vector>. Include dependency graph for BinData.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Fit::BinData;  Class describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  . mathmathcoreincFitBinData.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h.html:86,Guid,Guide,86,doc/master/BinData_8h.html,https://root.cern,https://root.cern/doc/master/BinData_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/BinData.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BinData.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:15:23 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class BinData; 12 ; 13#ifndef ROOT_Fit_BinData; 14#define ROOT_Fit_BinData; 15 ; 16#include ""Fit/FitData.h""; 17#include ""Math/Error.h""; 18#include <cmath>; 19#include <vector>; 20 ; 21namespace ROOT {; 22 ; 23 namespace Fit {; 24 ; 25 ; 26 ; 27//___________________________________________________________________________________; 28/**; 29 Class describing the binned data sets :; 30 vectors of x coordinates, y values and optionally error on y values and error on coordinates; 31 The dimension of the coordinate is free; 32 There are 4 different options:; 33 - only coordinates and values (for binned likelihood fits) : kNoError; 34 - coordinate, values and error on values (for normal least square fits) : kValueError; 35 - coordinate, values, error on values and coordinates (for effective least square fits) : kCoordError; 36 - coordinate, values, error on coordinates and asymmetric error on values : kAsymError; 37 ; 38 In addition there is the option to construct Bindata copying the data in (using the DataVector class); 39 or using pointer to external data (DataWrapper) class.; 40 In general is found to be more efficient to copy the data.; 41 In case of really large data sets for limiting memory consumption then the other option can be used; 42 Specialized constructor exists for data up to 3 dimensions.; 43 ; 44 When the data are copying in the number of points can be set later (or re-set) using Initialize and; 45 the data are inserted one by one using the Add metho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:83,Guid,Guide,83,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/Chi2FCN.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs ; Chi2FCN.h File Reference. #include ""ROOT/EExecutionPolicy.hxx""; #include ""Fit/BasicFCN.h""; #include ""Fit/BinData.h""; #include ""Fit/FitUtil.h""; #include ""Math/IFunction.h""; #include ""Math/IFunctionfwd.h""; #include ""Math/IParamFunction.h""; #include <memory>; #include <vector>. Include dependency graph for Chi2FCN.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >;  Chi2FCN class for binned fits using the least square methods. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  . Typedefs; typedef Chi2FCN< ROOT::Math::IMultiGenFunction, ROOT::Math::IParamMultiFunction > ROOT::Fit::Chi2Function;  ; typedef Chi2FCN< ROOT::Math::IMultiGradFunction, ROOT::Math::IParamMultiFunction > ROOT::Fit::Chi2GradFunction;  . mathmathcoreincFitChi2FCN.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Chi2FCN_8h.html:86,Guid,Guide,86,doc/master/Chi2FCN_8h.html,https://root.cern,https://root.cern/doc/master/Chi2FCN_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/Chi2FCN.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Chi2FCN.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Sep 5 09:13:32 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Chi2FCN; 12 ; 13#ifndef ROOT_Fit_Chi2FCN; 14#define ROOT_Fit_Chi2FCN; 15 ; 16#include ""ROOT/EExecutionPolicy.hxx""; 17#include ""Fit/BasicFCN.h""; 18#include ""Fit/BinData.h""; 19#include ""Fit/FitUtil.h""; 20#include ""Math/IFunction.h""; 21#include ""Math/IFunctionfwd.h""; 22#include ""Math/IParamFunction.h""; 23 ; 24#include <memory>; 25#include <vector>; 26 ; 27/**; 28@defgroup FitMethodFunc Fit Method Classes; 29 ; 30Classes describing Fit Method functions; 31@ingroup Fit; 32*/; 33 ; 34namespace ROOT {; 35 ; 36 ; 37 namespace Fit {; 38 ; 39//___________________________________________________________________________________; 40/**; 41 Chi2FCN class for binned fits using the least square methods; 42 ; 43 @ingroup FitMethodFunc; 44*/; 45template<class DerivFunType, class ModelFunType = ROOT::Math::IParamMultiFunction>; 46class Chi2FCN : public BasicFCN<DerivFunType, ModelFunType, BinData> {; 47 ; 48public:; 49 ; 50 typedef typename ModelFunType::BackendType T;; 51 typedef BasicFCN<DerivFunType, ModelFunType, BinData> BaseFCN;; 52 ; 53 typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> BaseObjFunction;; 54 typedef typename BaseObjFunction::BaseFunction BaseFunction;; 55 ; 56 //typedef typename ::ROOT::Math::ParamFunctionTrait<FunType>::PFType IModelFunction;; 57 typedef ::ROOT::Math::IParamMultiFunctionTempl<T> IModelFunction;; 58 typedef typename BaseObjFunction::Type_t Type_t;; 59 ; 60 /**; 61 Constructor from data set (binned ) and model function; 62 */; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Chi2FCN_8h_source.html:83,Guid,Guide,83,doc/master/Chi2FCN_8h_source.html,https://root.cern,https://root.cern/doc/master/Chi2FCN_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/DataOptions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataOptions.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:04:59 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class DataOptions; 12 ; 13#ifndef ROOT_Fit_DataOptions; 14#define ROOT_Fit_DataOptions; 15 ; 16 ; 17namespace ROOT {; 18 ; 19 namespace Fit {; 20 ; 21 ; 22//___________________________________________________________________________________; 23/**; 24 DataOptions : simple structure holding the options on how the data are filled; 25 ; 26 @ingroup FitData; 27*/; 28struct DataOptions {; 29 ; 30 ; 31 /**; 32 Default constructor: use the default options; 33 */; 34 DataOptions () :; 35 fIntegral(false),; 36 fBinVolume(false),; 37 fNormBinVolume(false),; 38 fUseEmpty(false),; 39 fUseRange(false),; 40 fErrors1(false),; 41 fExpErrors(false),; 42 fCoordErrors(true),; 43 fAsymErrors(true); 44 {}; 45 ; 46 ; 47 bool fIntegral; ///< use integral of bin content instead of bin center (default is false); 48 bool fBinVolume; ///< normalize data by the bin volume (it is used in the Poisson likelihood fits); 49 bool fNormBinVolume; ///< normalize data by a normalized the bin volume (bin volume divided by a reference value); 50 bool fUseEmpty; ///< use empty bins (default is false) with a fixed error of 1; 51 bool fUseRange; ///< use the function range when creating the fit data (default is false); 52 bool fErrors1; ///< use all errors equal to 1, i.e. fit without errors (default is false); 53 bool fExpErrors; ///< use expected errors from the function and not from the data; 54 bool fCoordErrors; ///< use errors on the x coordinates when available (default is true); 55 boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataOptions_8h_source.html:87,Guid,Guide,87,doc/master/DataOptions_8h_source.html,https://root.cern,https://root.cern/doc/master/DataOptions_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/DataRange.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataRange.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:02 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class DataRange; 12 ; 13#ifndef ROOT_Fit_DataRange; 14#define ROOT_Fit_DataRange; 15 ; 16#include <vector>; 17#include <utility>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Fit {; 22 ; 23 ; 24//___________________________________________________________________________________; 25/**; 26 class describing the range in the coordinates; 27 it supports multiple range in a coordinate.; 28 The range dimension is the dimension of the coordinate, its size is; 29 the number of interval for each coordinate.; 30 Default range is -inf, inf; 31 Range can be modified with the add range method; 32 ; 33 @ingroup FitData; 34*/; 35class DataRange {; 36 ; 37public:; 38 ; 39 typedef std::vector<std::pair<double,double> > RangeSet;; 40 typedef std::vector< RangeSet > RangeIntervals;; 41 ; 42 /**; 43 Default constructor (infinite range); 44 */; 45 explicit DataRange (unsigned int dim = 1) :; 46 fRanges ( std::vector<RangeSet> (dim) ); 47 {}; 48 ; 49 /**; 50 construct a range for [xmin, xmax]; 51 */; 52 DataRange(double xmin, double xmax);; 53 ; 54 /**; 55 construct a range for [xmin, xmax] , [ymin, ymax]; 56 */; 57 DataRange(double xmin, double xmax, double ymin, double ymax);; 58 /**; 59 construct a range for [xmin, xmax] , [ymin, ymax] , [zmin, zmax]; 60 */; 61 DataRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax);; 62 /**; 63 get range dimension; 64 */; 65 unsigned int NDim() const { return fRanges.size(); }; 66 ; 67 /**; 68 return range siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataRange_8h_source.html:85,Guid,Guide,85,doc/master/DataRange_8h_source.html,https://root.cern,https://root.cern/doc/master/DataRange_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/FitConfig.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FitConfig.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Sep 21 16:21:29 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class FitConfig; 12 ; 13#ifndef ROOT_Fit_FitConfig; 14#define ROOT_Fit_FitConfig; 15 ; 16 ; 17#include ""Fit/ParameterSettings.h""; 18 ; 19#include ""Math/MinimizerOptions.h""; 20 ; 21#include ""Math/IParamFunctionfwd.h""; 22 ; 23#include ""TMath.h""; 24 ; 25#include <vector>; 26#include <string>; 27 ; 28namespace ROOT {; 29 ; 30 namespace Math {; 31 ; 32 class Minimizer;; 33 class MinimizerOptions;; 34 }; 35 ; 36 namespace Fit {; 37 ; 38 class FitResult;; 39 ; 40//___________________________________________________________________________________; 41/**; 42 Class describing the configuration of the fit, options and parameter settings; 43 using the ROOT::Fit::ParameterSettings class; 44 ; 45 @ingroup FitMain; 46*/; 47class FitConfig {; 48 ; 49public:; 50 ; 51 /**; 52 Default constructor; 53 */; 54 FitConfig (unsigned int npar = 0);; 55 ; 56 ; 57 /*; 58 Copy constructor; 59 */; 60 FitConfig(const FitConfig & rhs);; 61 ; 62 /**; 63 Destructor; 64 */; 65 ~FitConfig ();; 66 ; 67 /*; 68 Assignment operator; 69 */; 70 FitConfig & operator= (const FitConfig & rhs);; 71 ; 72 ; 73 /**; 74 get the parameter settings for the i-th parameter (const method); 75 */; 76 const ParameterSettings & ParSettings(unsigned int i) const { return fSettings.at(i); }; 77 ; 78 /**; 79 get the parameter settings for the i-th parameter (non-const method); 80 */; 81 ParameterSettings & ParSettings(unsigned int i) { return fSettings.at(i); }; 82 ; 83 /**; 84 get the vector of parameter settings ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:85,Guid,Guide,85,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/FitResult.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FitResult.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:34 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class FitResult; 12 ; 13#ifndef ROOT_Fit_FitResult; 14#define ROOT_Fit_FitResult; 15 ; 16#include ""Math/IFunctionfwd.h""; 17#include ""Math/IParamFunctionfwd.h""; 18 ; 19#include <vector>; 20#include <map>; 21#include <string>; 22#include <cmath>; 23#include <memory>; 24 ; 25namespace ROOT {; 26 ; 27 namespace Math {; 28 class Minimizer;; 29 }; 30 ; 31 ; 32 namespace Fit {; 33 ; 34 class FitConfig;; 35 class FitData;; 36 class BinData;; 37 ; 38//___________________________________________________________________________________; 39/**; 40 class containing the result of the fit and all the related information; 41 (fitted parameter values, error, covariance matrix and minimizer result information); 42 Contains a pointer also to the fitted (model) function, modified with the fit parameter values.; 43 When the fit is valid, it is constructed from a Minimizer and a model function pointer; 44 ; 45 @ingroup FitMain; 46*/; 47class FitResult {; 48 ; 49public:; 50 ; 51 typedef ROOT::Math::IParamMultiFunction IModelFunction;; 52 ; 53 /**; 54 Default constructor for an empty (non valid) fit result; 55 */; 56 FitResult ();; 57 ; 58 /**; 59 Constructor from a fit-config for a dummy fit; 60 (e.g. when only one fcn evaluation is done); 61 */; 62 FitResult (const FitConfig & fconfig);; 63 ; 64 // default copy constructor and assignment can be used; 65 ; 66 /**; 67 Destructor; 68 */; 69 virtual ~FitResult () {}; 70 ; 71 ; 72public:; 73 ; 74 /**; 75 Fill the fit result from a M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8h_source.html:85,Guid,Guide,85,doc/master/FitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/Fitter.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs ; Fitter.h File Reference. #include ""Fit/BinData.h""; #include ""Fit/UnBinData.h""; #include ""Fit/FitConfig.h""; #include ""ROOT/EExecutionPolicy.hxx""; #include ""Fit/FitResult.h""; #include ""Math/IParamFunction.h""; #include <memory>; #include ""Math/WrappedFunction.h"". Include dependency graph for Fitter.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Fit::Fitter;  Fitter class, entry point for performing all type of fits. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  ; namespace  ROOT::Math;  . Typedefs; typedef BasicFitMethodFunction< ROOT::Math::IMultiGenFunction > ROOT::Math::FitMethodFunction;  ; typedef BasicFitMethodFunction< ROOT::Math::IMultiGradFunction > ROOT::Math::FitMethodGradFunction;  . mathmathcoreincFitFitter.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h.html:85,Guid,Guide,85,doc/master/Fitter_8h.html,https://root.cern,https://root.cern/doc/master/Fitter_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/Fitter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Fitter.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:19 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Fitter; 12 ; 13#ifndef ROOT_Fit_Fitter; 14#define ROOT_Fit_Fitter; 15 ; 16/**; 17@defgroup Fit Fitting and Parameter Estimation; 18 ; 19Classes used for fitting (regression analysis) and estimation of parameter values given a data sample.; 20 ; 21@ingroup MathCore; 22 ; 23*/; 24 ; 25#include ""Fit/BinData.h""; 26#include ""Fit/UnBinData.h""; 27#include ""Fit/FitConfig.h""; 28#include ""ROOT/EExecutionPolicy.hxx""; 29#include ""Fit/FitResult.h""; 30#include ""Math/IParamFunction.h""; 31#include <memory>; 32 ; 33namespace ROOT {; 34 ; 35 ; 36 namespace Math {; 37 class Minimizer;; 38 ; 39 // should maybe put this in a FitMethodFunctionfwd file; 40 template<class FunctionType> class BasicFitMethodFunction;; 41 ; 42 // define the normal and gradient function; 43 typedef BasicFitMethodFunction<ROOT::Math::IMultiGenFunction> FitMethodFunction;; 44 typedef BasicFitMethodFunction<ROOT::Math::IMultiGradFunction> FitMethodGradFunction;; 45 ; 46 }; 47 ; 48 /**; 49 Namespace for the fitting classes; 50 @ingroup Fit; 51 */; 52 ; 53 namespace Fit {; 54 ; 55/**; 56 @defgroup FitMain User Fitting classes; 57 ; 58 Main Classes used for fitting a given data set; 59 @ingroup Fit; 60*/; 61 ; 62 ; 63//___________________________________________________________________________________; 64/**; 65 Fitter class, entry point for performing all type of fits.; 66 Fits are performed using the generic ROOT::Fit::Fitter::Fit method.; 67 The inputs are the data points and a model function (using a R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:82,Guid,Guide,82,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/LogLikelihoodFCN.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. LogLikelihoodFCN.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Aug 17 14:29:24 2007; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LogLikelihoodFCN; 12 ; 13#ifndef ROOT_Fit_LogLikelihoodFCN; 14#define ROOT_Fit_LogLikelihoodFCN; 15 ; 16#include ""ROOT/EExecutionPolicy.hxx""; 17#include ""Fit/BasicFCN.h""; 18#include ""Fit/FitUtil.h""; 19#include ""Fit/UnBinData.h""; 20#include ""Math/IParamFunction.h""; 21 ; 22#include <memory>; 23#include <vector>; 24 ; 25namespace ROOT {; 26 ; 27 namespace Fit {; 28 ; 29 ; 30//___________________________________________________________________________________; 31/**; 32 LogLikelihoodFCN class; 33 for likelihood fits; 34 ; 35 it is template to distinguish gradient and non-gradient case; 36 ; 37 @ingroup FitMethodFunc; 38*/; 39template<class DerivFunType,class ModelFunType = ROOT::Math::IParamMultiFunction>; 40class LogLikelihoodFCN : public BasicFCN<DerivFunType,ModelFunType,UnBinData> {; 41 ; 42public:; 43 ; 44 typedef typename ModelFunType::BackendType T;; 45 typedef BasicFCN<DerivFunType,ModelFunType,UnBinData> BaseFCN;; 46 ; 47 typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> BaseObjFunction;; 48 typedef typename BaseObjFunction::BaseFunction BaseFunction;; 49 ; 50 typedef ::ROOT::Math::IParamMultiFunctionTempl<T> IModelFunction;; 51 typedef typename BaseObjFunction::Type_t Type_t;; 52 ; 53 ; 54 /**; 55 Constructor from unbin data set and model function (pdf); 56 */; 57 LogLikelihoodFCN (const std::shared_ptr<UnBinData> & data, const std::shared_ptr<IModelFunction> & func, int weight = 0, bool extended = false, const ::ROOT::EE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/LogLikelihoodFCN_8h_source.html:92,Guid,Guide,92,doc/master/LogLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/LogLikelihoodFCN_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/ParameterSettings.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ParameterSettings.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Sep 21 16:21:48 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class ParameterSettings; 12 ; 13#ifndef ROOT_Fit_ParameterSettings; 14#define ROOT_Fit_ParameterSettings; 15 ; 16#include <string>; 17 ; 18namespace ROOT {; 19 ; 20 namespace Fit {; 21 ; 22 ; 23//___________________________________________________________________________________; 24/**; 25 Class, describing value, limits and step size of the parameters; 26 Provides functionality also to set/retrieve values, step sizes, limits and fix the; 27 parameters.; 28 ; 29 To be done: add constraints (equality and inequality) as functions of the parameters; 30 ; 31 @ingroup FitMain; 32*/; 33class ParameterSettings {; 34 ; 35public:; 36 ; 37 /**; 38 Default constructor; 39 */; 40 ParameterSettings () {}; 41 ; 42 ; 43 ///constructor for unlimited named Parameter; 44 ParameterSettings(const std::string & name, double val, double err) :; 45 fValue(val), fStepSize(err),; 46 fName(name); 47 {}; 48 ; 49 ///constructor for double limited Parameter. The given value should be within the given limits [min,max]; 50 ParameterSettings(const std::string & name, double val, double err,; 51 double min, double max) :; 52 fValue(val), fStepSize(err),; 53 fName(name); 54 {; 55 SetLimits(min,max);; 56 }; 57 ; 58 ///constructor for fixed Parameter; 59 ParameterSettings(const std::string & name, double val) :; 60 fValue(val), fStepSize(0), fFix(true),; 61 fName(name); 62 {}; 63 ; 64 ; 65 ; 66 ; 67 /// set value and name (unlimited parameter); 68 void Set(const std::string &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ParameterSettings_8h_source.html:93,Guid,Guide,93,doc/master/ParameterSettings_8h_source.html,https://root.cern,https://root.cern/doc/master/ParameterSettings_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/PoissonLikelihoodFCN.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PoissonLikelihoodFCN.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Aug 17 14:29:24 2007; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class PoissonLikelihoodFCN; 12 ; 13#ifndef ROOT_Fit_PoissonLikelihoodFCN; 14#define ROOT_Fit_PoissonLikelihoodFCN; 15 ; 16#include ""ROOT/EExecutionPolicy.hxx""; 17#include ""Fit/BasicFCN.h""; 18#include ""Fit/BinData.h""; 19#include ""Fit/FitUtil.h""; 20#include ""Math/IParamFunction.h""; 21 ; 22#include <memory>; 23#include <vector>; 24 ; 25//#define PARALLEL; 26// #ifdef PARALLEL; 27// #ifndef ROOT_Fit_FitUtilParallel; 28// #include ""Fit/FitUtilParallel.h""; 29// #endif; 30// #endif; 31 ; 32namespace ROOT {; 33 ; 34 namespace Fit {; 35 ; 36 ; 37//___________________________________________________________________________________; 38/**; 39 class evaluating the log likelihood; 40 for binned Poisson likelihood fits; 41 it is template to distinguish gradient and non-gradient case; 42 ; 43 @ingroup FitMethodFunc; 44*/; 45template<class DerivFunType, class ModelFunType = ROOT::Math::IParamMultiFunction>; 46class PoissonLikelihoodFCN : public BasicFCN<DerivFunType,ModelFunType,BinData> {; 47 ; 48public:; 49 typedef typename ModelFunType::BackendType T;; 50 typedef BasicFCN<DerivFunType,ModelFunType,BinData> BaseFCN;; 51 ; 52 typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> BaseObjFunction;; 53 typedef typename BaseObjFunction::BaseFunction BaseFunction;; 54 ; 55 typedef ::ROOT::Math::IParamMultiFunctionTempl<T> IModelFunction;; 56 typedef typename BaseObjFunction::Type_t Type_t;; 57 ; 58 /**; 59 Constructor from unbin data set and model f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html:96,Guid,Guide,96,doc/master/PoissonLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Fit/UnBinData.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. UnBinData.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:15:23 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class UnBinData; 12 ; 13#ifndef ROOT_Fit_UnBinData; 14#define ROOT_Fit_UnBinData; 15 ; 16#include ""Fit/FitData.h""; 17#include ""Math/Error.h""; 18 ; 19#include <vector>; 20 ; 21namespace ROOT {; 22 ; 23 namespace Fit {; 24 ; 25 ; 26//___________________________________________________________________________________; 27/**; 28 Class describing the un-binned data sets (just x coordinates values) of any dimensions; 29 ; 30 There is the option to construct UnBindata copying the data inside; 31 (in the base FitData class) or using a pointer to external data, depending on which; 32 constructor of the UnBinData class is used.; 33 It is recommended to copy the input data inside, since this will be more efficient and; 34 less error prone, since the input provided data will have to be kept alive for all the time the; 35 Fit classes will be used.; 36 In case of really large data sets for limiting memory consumption then the other option can be used; 37 with special care.; 38 Specialized constructor exists for using external data up to 3 dimensions.; 39 ; 40 When the data are copying in the number of points can be set later (or re-set) using Initialize and; 41 the data are inserted one by one using the Add method.; 42 It is mandatory to set the size before using the Add method.; 43 ; 44 @ingroup FitData; 45*/; 46class UnBinData : public FitData {; 47 ; 48public :; 49 ; 50 /**; 51 constructor from dimension of point and max number of points (to pre-allocate vector); 52 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/UnBinData_8h_source.html:85,Guid,Guide,85,doc/master/UnBinData_8h_source.html,https://root.cern,https://root.cern/doc/master/UnBinData_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/ChebyshevPol.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ChebyshevPol.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta, 11/2012; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// Header file declaring functions for the evaluation of the Chebyshev //; 15// polynomials and the ChebyshevPol class which can be used for //; 16// creating a TF1. //; 17// //; 18//////////////////////////////////////////////////////////////////////////; 19 ; 20#ifndef ROOT_Math_ChebyshevPol; 21#define ROOT_Math_ChebyshevPol; 22 ; 23#include <sys/types.h>; 24#include <cstring>; 25 ; 26namespace ROOT {; 27 ; 28 namespace Math {; 29 ; 30 /// template recursive functions for defining evaluation of Chebyshev polynomials; 31 /// T_n(x) and the series S(x) = Sum_i c_i* T_i(x); 32 namespace Chebyshev {; 33 ; 34 template<int N> double T(double x) {; 35 return (2.0 * x * T<N-1>(x)) - T<N-2>(x);; 36 }; 37 ; 38 template<> double T<0> (double );; 39 template<> double T<1> (double x);; 40 template<> double T<2> (double x);; 41 template<> double T<3> (double x);; 42 ; 43 template<int N> double Eval(double x, const double * c) {; 44 return c[N]*T<N>(x) + Eval<N-1>(x,c);; 45 }; 46 ; 47 template<> double Eval<0> (double , const double *c);; 48 template<> double Eval<1> (double x, const double *c);; 49 template<> double Eval<2> (double x, const double *c);; 50 template<> double Eval<3> (double x, const double *c);; 51 ; 52 } // end namespace Chebyshev; 53 ; 54 ; 55 // impl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ChebyshevPol_8h_source.html:89,Guid,Guide,89,doc/master/ChebyshevPol_8h_source.html,https://root.cern,https://root.cern/doc/master/ChebyshevPol_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/Functor.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functor.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Mon Nov 13 15:58:13 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for Functor classes.; 12// designed is inspired by the Loki Functor; 13 ; 14#ifndef ROOT_Math_Functor; 15#define ROOT_Math_Functor; 16 ; 17#include ""Math/IFunction.h""; 18 ; 19// #ifndef Root_Math_StaticCheck; 20// #include ""Math/StaticCheck.h""; 21// #endif; 22 ; 23#include <memory>; 24#include <functional>; 25#include <vector>; 26 ; 27namespace ROOT {; 28 ; 29namespace Math {; 30 ; 31/**; 32 Documentation for class Functor class.; 33 It is used to wrap in a very simple and convenient way multi-dimensional function objects.; 34 It can wrap all the following types:; 35 <ul>; 36 <li> any C++ callable object implementation double operator()( const double * ); 37 <li> a free C function of type double ()(const double * ); 38 <li> an std::function of type std::function<double (double const *)>; 39 <li> a member function with the correct signature like Foo::Eval(const double * ).; 40 In this case one pass the object pointer and a pointer to the member function (&Foo::Eval); 41 </ul>; 42 The function dimension is required when constructing the functor.; 43 ; 44 @ingroup GenFunc; 45 ; 46 */; 47class Functor : public IBaseFunctionMultiDim {; 48 ; 49public:; 50 ; 51 /// Default constructor.; 52 Functor () {}; 53 ; 54 /// Construct from a pointer to member function (multi-dim type).; 55 template <class PtrObj, typename MemFn>; 56 Functor(const PtrObj& p, MemFn memFn, unsigned int dim ); 57 : fDim{dim}, fFunc{std::bind(memFn, p, std::placeholders::_1)}; 58 {}; 59 ; 60 /// Cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Functor_8h_source.html:84,Guid,Guide,84,doc/master/Functor_8h_source.html,https://root.cern,https://root.cern/doc/master/Functor_8h_source.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: math/mathcore/inc/Math/IFunction.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. IFunction.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta 11/2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for function interfaces; 12//; 13// Generic Interfaces for one or multi-dimensional functions; 14//; 15// Created by: Lorenzo Moneta : Wed Nov 13 2006; 16//; 17//; 18#ifndef ROOT_Math_IFunction; 19#define ROOT_Math_IFunction; 20 ; 21/**; 22@defgroup CppFunctions Function Classes and Interfaces; 23 ; 24 Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods; 25 for describing function classes. They define function and gradient evaluation and as well the; 26 functionality for dealing with parameters in the case of parametric functions which are used for; 27 fitting and data modeling.; 28 Included are also adapter classes, such as functors, to wrap generic callable C++ objects; 29 in the desired interface.; 30 ; 31@ingroup MathCore; 32*/; 33 ; 34#include ""Math/IFunctionfwd.h""; 35 ; 36 ; 37namespace ROOT {; 38 namespace Math {; 39 ; 40 /**; 41 @defgroup GenFunc Generic Function Evaluation Interfaces; 42 Interface classes for evaluation of function object classes in one or multi-dimensions.; 43 @ingroup CppFunctions; 44 */; 45 ; 46//___________________________________________________________________________________; 47 /**; 48 Documentation for the abstract class IBaseFunctionMultiDim.; 49 Interface (abstract class) for generic functions objects of multi-dimension; 50 Provides a method to evaluate the function given a vector of coordinate values,; 51 by implementing operator() (const double *).; 52 In addition it defines the interface for copying f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/IFunction_8h_source.html:86,Guid,Guide,86,doc/master/IFunction_8h_source.html,https://root.cern,https://root.cern/doc/master/IFunction_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/IFunctionfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. IFunctionfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Nov 14 14:38:48 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Defines Forward declaration for template IFunction class and useful typedefs; 12 ; 13#ifndef ROOT_Math_IFunctionfwd; 14#define ROOT_Math_IFunctionfwd; 15 ; 16namespace ROOT {; 17 ; 18 namespace Math {; 19 ; 20 class IBaseFunctionOneDim;; 21 class IGradientFunctionOneDim;; 22 template<class T>; 23 class IBaseFunctionMultiDimTempl;; 24 template <class T>; 25 class IGradientFunctionMultiDimTempl;; 26 template <class T>; 27 class IGradientMultiDimTempl;; 28 ; 29 template<class T>; 30 using IMultiGenFunctionTempl = IBaseFunctionMultiDimTempl<T>;; 31 using IBaseFunctionMultiDim = IBaseFunctionMultiDimTempl<double>;; 32 using IMultiGenFunction = IMultiGenFunctionTempl<double>;; 33 ; 34 using IGradientFunctionMultiDim = IGradientFunctionMultiDimTempl<double>;; 35 using IGradientMultiDim = IGradientMultiDimTempl<double>;; 36 ; 37 typedef IBaseFunctionOneDim IGenFunction;; 38 typedef IBaseFunctionMultiDim IMultiGenFunction;; 39 ; 40 typedef IGradientFunctionOneDim IGradFunction;; 41 typedef IGradientFunctionMultiDim IMultiGradFunction;; 42 ; 43 ; 44 } // end namespace Math; 45 ; 46} // end namespace ROOT; 47 ; 48 ; 49#endif /* ROOT_Math_IFunctionfwd */; ROOT::Math::IBaseFunctionMultiDimTemplDocumentation for the abstract class IBaseFunctionMultiDim.Definition IFunction.h:61; ROOT::Math::IBaseFunctionOneDimInterface (abstract class) for generic functions objects of one-dimension Provides a method to evalua...Definition IFunction.h:112; ROOT::Math::IGradientFunctionMultiDimTem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/IFunctionfwd_8h_source.html:89,Guid,Guide,89,doc/master/IFunctionfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/IFunctionfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/IParamFunctionfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. IParamFunctionfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Nov 14 14:38:52 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Forward declarations for template class IParamFunction class; 12 ; 13#ifndef ROOT_Math_IParamFunctionfwd; 14#define ROOT_Math_IParamFunctionfwd; 15 ; 16#include ""Math/IFunctionfwd.h""; 17 ; 18namespace ROOT {; 19 ; 20 namespace Math {; 21 ; 22 class IParametricFunctionOneDim;; 23 class IParametricGradFunctionOneDim;; 24 template<class T>; 25 class IParametricFunctionMultiDimTempl;; 26 using IParametricFunctionMultiDim = IParametricFunctionMultiDimTempl<double>;; 27 template<class T>; 28 class IParametricGradFunctionMultiDimTempl;; 29 using IParametricGradFunctionMultiDim = IParametricGradFunctionMultiDimTempl<double>;; 30 ; 31 typedef IParametricFunctionOneDim IParamFunction;; 32 typedef IParametricFunctionMultiDim IParamMultiFunction;; 33 template<class T>; 34 using IParamMultiFunctionTempl = IParametricFunctionMultiDimTempl<T>;; 35 ; 36 typedef IParametricGradFunctionOneDim IParamGradFunction;; 37 typedef IParametricGradFunctionMultiDim IParamMultiGradFunction;; 38 template<class T>; 39 using IParamMultiGradFunctionTempl = IParametricGradFunctionMultiDimTempl<T>;; 40 ; 41 ; 42 } // end namespace Math; 43 ; 44} // end namespace ROOT; 45 ; 46 ; 47#endif /* ROOT_Math_IParamFunctionfwd */; IFunctionfwd.h; ROOT::Math::IParametricFunctionMultiDimTempl< double >; ROOT::Math::IParametricFunctionOneDimSpecialized IParamFunction interface (abstract class) for one-dimensional parametric functions It is ...Definition IParamFunction.h:161; ROOT::Math::IParametricGrad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/IParamFunctionfwd_8h_source.html:94,Guid,Guide,94,doc/master/IParamFunctionfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/IParamFunctionfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/Integrator.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Integrator.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, M. Slawinska 10/2007; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Integrator; 12//; 13//; 14#ifndef ROOT_Math_Integrator; 15#define ROOT_Math_Integrator; 16 ; 17#include ""Math/AllIntegrationTypes.h""; 18 ; 19#include ""Math/IntegratorOptions.h""; 20 ; 21#include ""Math/IFunction.h""; 22 ; 23#include ""Math/VirtualIntegrator.h""; 24 ; 25#include <memory>; 26#include <vector>; 27#include <string>; 28 ; 29 ; 30/**; 31@defgroup NumAlgo Numerical Algorithms; 32 ; 33Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries.; 34 ; 35@ingroup MathCore; 36@ingroup MathMore; 37 ; 38*/; 39 ; 40 ; 41/**; 42 ; 43@defgroup Integration Numerical Integration; 44 ; 45Classes for numerical integration of functions.; 46These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods; 47and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator).; 48The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class; 49ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones.; 50The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and; 51ROOT::Math::IntegratorMultiDimOptions classes.; 52 ; 53@ingroup NumAlgo; 54 ; 55*/; 56 ; 57 ; 58 ; 59namespace ROOT {; 60namespace Math {; 61 ; 62 ; 63 ; 64 ; 65//___________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Integrator_8h_source.html:87,Guid,Guide,87,doc/master/Integrator_8h_source.html,https://root.cern,https://root.cern/doc/master/Integrator_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/Math.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Math.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Nov 14 15:44:38 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// mathematical constants like Pi; 12 ; 13#ifndef ROOT_Math_Math; 14#define ROOT_Math_Math; 15 ; 16#ifdef _MSC_VER; 17#define _USE_MATH_DEFINES; 18#endif; 19 ; 20#include <cmath>; 21 ; 22#if defined(__sun) || defined(_MSC_VER); 23//Microsoft and solaris definition of cmath does not include math.h which has the definitions of numerical constants; 24#include <math.h>; 25#endif; 26 ; 27 ; 28#ifdef HAVE_NO_EXPM1; 29// needed to implement expm1; 30#include <limits>; 31#endif; 32 ; 33 ; 34#ifndef M_PI; 35 ; 36#define M_PI 3.14159265358979323846264338328 // Pi; 37#endif; 38 ; 39#ifndef M_PI_2; 40#define M_PI_2 1.57079632679489661923132169164 // Pi/2; 41#endif; 42 ; 43#ifndef M_PI_4; 44#define M_PI_4 0.78539816339744830961566084582 // Pi/4; 45#endif; 46 ; 47/**; 48 \namespace ROOT; 49 Namespace for new ROOT classes and functions; 50 */; 51 ; 52namespace ROOT {; 53 ; 54/**; 55\namespace Math; 56Namespace for new Math classes and functions.; 57See the \ref Math ""Math Libraries"" page for a detailed description.; 58*/; 59 ; 60namespace Math {; 61// Enable Vc/VecCore template instantiations to replace std math functions.; 62//; 63// Vc declares `std::sqrt(Vc-type)`. To use this for Vc-`SCALAR`s, the call; 64// to `sqrt()` must only be resolved at the template instantiation time, when; 65// the Vc headers are guaranteed to be included, and thus its `sqrt()`; 66// overloads have been declared.; 67// The trick is to keep sqrt() dependent (on its argument type) by making it; 68// an unqualified name.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Math_8h_source.html:81,Guid,Guide,81,doc/master/Math_8h_source.html,https://root.cern,https://root.cern/doc/master/Math_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/MinimTransformVariable.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MinimTransformVariable.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta 2009; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10// Header file for class MinimizerVariable; 11 ; 12#ifndef ROOT_Math_MinimizerVariable; 13#define ROOT_Math_MinimizerVariable; 14 ; 15#include ""MinimizerVariableTransformation.h""; 16 ; 17#include <memory>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Math {; 22 ; 23 /**; 24 Enumeration describing the status of the variable; 25 The enumeration are used in the minimizer classes to categorize the variables; 26 */; 27 enum EMinimVariableType {; 28 kDefault, ///< free variable (unlimited); 29 kFix, ///< fixed variable; 30 kBounds, ///< variable has two bounds; 31 kLowBound, ///< variable has a lower bound; 32 kUpBound ///< variable has an upper bounds; 33 };; 34 ; 35 ; 36 ; 37/**; 38 MinimTransformVariable class; 39 Contains meta information of the variables such as bounds, fix flags and; 40 deals with transformation of the variable; 41 The class does not contain the values and the step size (error) of the variable; 42 This is an internal class used by the MinimTransformFunction class; 43 ; 44 @ingroup MultiMin; 45*/; 46 ; 47 ; 48class MinimTransformVariable {; 49 ; 50public:; 51 ; 52 /**; 53 Default Constructor for an unlimited variable; 54 */; 55 MinimTransformVariable () :; 56 fFix(false), fLowBound(false), fUpBound(false), fBounds(false),; 57 fLower(1), fUpper(0); 58 {}; 59 ; 60 // constructor for fixed variable; 61 MinimTransformVariable (double value) :; 62 fFix(true), fLowBound(false), fUpBound(false), fBounds(false),; 63 fLower(value), fUpper(value); 64 {}; 65 ; 66 // con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimTransformVariable_8h_source.html:99,Guid,Guide,99,doc/master/MinimTransformVariable_8h_source.html,https://root.cern,https://root.cern/doc/master/MinimTransformVariable_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/Minimizer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Minimizer.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Sep 22 15:06:47 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Minimizer; 12 ; 13#ifndef ROOT_Math_Minimizer; 14#define ROOT_Math_Minimizer; 15 ; 16#include ""Math/IFunction.h""; 17#include ""Math/MinimizerOptions.h""; 18 ; 19#include <ROOT/RSpan.hxx>; 20 ; 21#include <string>; 22#include <limits>; 23#include <cmath>; 24#include <vector>; 25#include <functional>; 26 ; 27 ; 28 ; 29namespace ROOT {; 30 ; 31 namespace Fit {; 32 class ParameterSettings;; 33 }; 34 ; 35 ; 36 namespace Math {; 37 ; 38/**; 39 @defgroup MultiMin Multi-dimensional Minimization; 40 @ingroup NumAlgo; 41 ; 42 Classes implementing algorithms for multi-dimensional minimization; 43 */; 44 ; 45 ; 46 ; 47//_______________________________________________________________________________; 48/**; 49 Abstract Minimizer class, defining the interface for the various minimizer; 50 (like Minuit2, Minuit, GSL, etc..) in ROOT.; 51 Plug-in's exist in ROOT to be able to instantiate the derived classes without linking the library; 52 using the static function ROOT::Math::Factory::CreateMinimizer.; 53 ; 54 Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated:; 55 The name shown below can be used to create them. More documentation can be found in the respective class; 56 ; 57 - Minuit (class TMinuitMinimizer); 58 - Migrad (default); 59 - MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of [Minuit tutorial on Function Minimization](https://seal.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:86,Guid,Guide,86,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/MinimizerOptions.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; MinimizerOptions.h File Reference. #include <string>; #include <iostream>. Include dependency graph for MinimizerOptions.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Math::MinimizerOptions;  Minimizer options. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Math;  . mathmathcoreincMathMinimizerOptions.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimizerOptions_8h.html:96,Guid,Guide,96,doc/master/MinimizerOptions_8h.html,https://root.cern,https://root.cern/doc/master/MinimizerOptions_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/MinimizerOptions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MinimizerOptions.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Aug 15 2008; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2008 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#ifndef ROOT_Math_MinimizerOptions; 12#define ROOT_Math_MinimizerOptions; 13 ; 14#include <string>; 15 ; 16#include <iostream>; 17 ; 18namespace ROOT {; 19 ; 20 ; 21namespace Math {; 22 ; 23 ; 24class IOptions;; 25 ; 26//_______________________________________________________________________________; 27/**; 28 Minimizer options; 29 ; 30 @ingroup MultiMin; 31 ; 32 Class defining the options for the minimizer.; 33 It contains also static methods for setting the default Minimizer option values; 34 that will be used by default by all Minimizer instances.; 35 To see the current default options do:; 36 ; 37 ROOT::Math::MinimizerOptions::PrintDefault();; 38 ; 39*/; 40class MinimizerOptions {; 41 ; 42public:; 43 ; 44 // static methods for setting and retrieving the default options; 45 ; 46 /// Set the default Minimizer type and corresponding algorithms.; 47 /// Here is the list of the available minimizers and their corresponding algorithms.; 48 /// For some minimizers (e.g. Fumili) there are no specific algorithms available, then there is no need to specify it.; 49 ///; 50 /// \anchor ROOTMinimizers; 51 /// ### ROOT Minimizers; 52 ///; 53 /// - Minuit Minimizer based on TMinuit, the legacy Minuit implementation. Here are the available algorithms:; 54 /// - Migrad default algorithm based on the variable metric minimizer; 55 /// - Minimize combination of Simplex and Migrad; 56 /// - Simplex minimization algorithm not using the gradient information; 57 /// - Scan brute function s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimizerOptions_8h_source.html:93,Guid,Guide,93,doc/master/MinimizerOptions_8h_source.html,https://root.cern,https://root.cern/doc/master/MinimizerOptions_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/MixMaxEngine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MixMaxEngine.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Aug 4 2015; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// random engines based on ROOT; 12 ; 13#ifndef ROOT_Math_MixMaxEngine; 14#define ROOT_Math_MixMaxEngine; 15 ; 16#include <cstdint>; 17#include <vector>; 18 ; 19#include ""Math/TRandomEngine.h""; 20 ; 21 ; 22// struct rng_state_st; /// forward declare generator state; 23 ; 24// typedef struct rng_state_st rng_state_t;; 25 ; 26// namespace mixmax {; 27// template<int Ndim>; 28// class mixmax_engine;; 29// }; 30 ; 31namespace ROOT {; 32 ; 33 namespace Math {; 34 ; 35 template<int N>; 36 class MixMaxEngineImpl;; 37 ; 38/**; 39MixMaxEngine is a wrapper class for the MIXMAX Random number generator.; 40MIXMAX is a matrix-recursive random number generator introduced by; 41G. Savvidy.; 42 ; 43The real implementation of the generator, written in C, is in the mixmax.h and mixmax.cxx files.; 44This generator code is available also at hepforge: http://mixmax.hepforge.org; 45The MIXMAX code has been created and developed by Konstantin Savvidy and it is; 46released under GNU Lesser General Public License v3.; 47 ; 48This wrapper class provides 3 different variants of MIXMAX according to the template para extra parameter N.; 49The extra parameter, `SkipNumber`, is used to perform additional iterations of the generator before returning the random numbers.; 50For example, when `SkipNumber = 2`, the generator will have two extra iterations that will be discarder.; 51 ; 52 - MIXMAX with N = 240. This is a new version of the generator (version 2.0beta) described in the; 53 <a href=""http://dx.doi.org",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MixMaxEngine_8h_source.html:89,Guid,Guide,89,doc/master/MixMaxEngine_8h_source.html,https://root.cern,https://root.cern/doc/master/MixMaxEngine_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/ParamFunctor.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ParamFunctor.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Mon Nov 13 15:58:13 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for Functor classes.; 12// design is inspired by the Loki Functor; 13 ; 14#ifndef ROOT_Math_ParamFunctor; 15#define ROOT_Math_ParamFunctor; 16 ; 17// #ifndef ROOT_Math_IFunction; 18// #include ""Math/IFunction.h""; 19// #endif; 20 ; 21// #ifndef Root_Math_StaticCheck; 22// #include ""Math/StaticCheck.h""; 23// #endif; 24 ; 25//#include <memory>; 26 ; 27#include ""RtypesCore.h""; 28#include <functional>; 29#include <iostream>; 30 ; 31namespace ROOT {; 32 ; 33namespace Math {; 34 ; 35/**; 36 * \defgroup ParamFunctor_int N-D parametric functions; 37 * \brief Multi-dimensional parametric functions; 38 */; 39 ; 40/** class defining the signature for multi-dim parametric functions; 41 ; 42 @ingroup ParamFunctor_int; 43 */; 44template<class T>; 45class ParamFunctionBase {; 46 public:; 47 virtual ~ParamFunctionBase() {}; 48 virtual T operator() (const T * x, const double *p) = 0;; 49 virtual T operator() (T * x, double *p) = 0;; 50 virtual ParamFunctionBase * Clone() const = 0;; 51};; 52 ; 53 ; 54 ; 55/**; 56 ParamFunctor Handler class is responsible for wrapping any other functor and pointer to; 57 free C functions.; 58 It can be created from any function implementing the correct signature; 59 corresponding to the requested type; 60 ; 61 @ingroup ParamFunctor_int; 62 ; 63*/; 64 ; 65template<class ParentFunctor, class Func >; 66class ParamFunctorHandler : public ParentFunctor::Impl {; 67 ; 68 typedef typename ParentFunctor::EvalType EvalType;; 69 typedef typename Par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ParamFunctor_8h_source.html:89,Guid,Guide,89,doc/master/ParamFunctor_8h_source.html,https://root.cern,https://root.cern/doc/master/ParamFunctor_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/ProbFuncMathCore.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ProbFuncMathCore.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta, A. Zsenei 06/2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#ifndef ROOT_Math_ProbFuncMathCore; 12#define ROOT_Math_ProbFuncMathCore; 13 ; 14 ; 15namespace ROOT {; 16namespace Math {; 17 ; 18 ; 19 /** @defgroup ProbFunc Cumulative Distribution Functions (CDF); 20 ; 21 @ingroup StatFunc; 22 ; 23 * Cumulative distribution functions of various distributions.; 24 * The functions with the extension <em>_cdf</em> calculate the; 25 * lower tail integral of the probability density function; 26 *; 27 * \f[ D(x) = \int_{-\infty}^{x} p(x') dx' \f]; 28 *; 29 * while those with the <em>_cdf_c</em> extension calculate the complement of; 30 * cumulative distribution function, called in statistics the survival; 31 * function.; 32 * It corresponds to the upper tail integral of the; 33 * probability density function; 34 *; 35 * \f[ D(x) = \int_{x}^{+\infty} p(x') dx' \f]; 36 *; 37 *; 38 * <strong>NOTE:</strong> In the old releases (< 5.14) the <em>_cdf</em> functions were called; 39 * <em>_quant</em> and the <em>_cdf_c</em> functions were called; 40 * <em>_prob</em>.; 41 * These names are currently kept for backward compatibility, but; 42 * their usage is deprecated.; 43 *; 44 * These functions are defined in the header file <em>Math/ProbFunc.h</em> or in the global one; 45 * including all statistical functions <em>Math/DistFunc.h</em>; 46 *; 47 */; 48 ; 49 ; 50 ; 51 /**; 52 ; 53 Complement of the cumulative distribution function of the beta distribution.; 54 Upper tail of the integral of the #beta_pdf; 55 ; 56 @ingroup ProbFunc; 57 ; 58 */; 59 ; 60",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ProbFuncMathCore_8h_source.html:93,Guid,Guide,93,doc/master/ProbFuncMathCore_8h_source.html,https://root.cern,https://root.cern/doc/master/ProbFuncMathCore_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/Random.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Random.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta 8/2015; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 , ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for random class; 12//; 13//; 14// Created by: Lorenzo Moneta : Tue 4 Aug 2015; 15//; 16//; 17#ifndef ROOT_Math_Random; 18#define ROOT_Math_Random; 19 ; 20/**; 21@defgroup Random Interface classes for Random number generation; 22*/; 23 ; 24#include ""Math/RandomFunctions.h""; 25 ; 26#include <string>; 27#include <vector>; 28#include <cstdint>; 29 ; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//___________________________________________________________________________________; 36 /**; 37 Documentation for the Random class; 38 ; 39 @ingroup Random; 40 */; 41 ; 42 template < class Engine>; 43 class Random {; 44 ; 45 public:; 46 ; 47 typedef typename Engine::BaseType EngineBaseType;; 48 typedef RandomFunctions<Engine, EngineBaseType> RndmFunctions;; 49 ; 50 Random() :; 51 fEngine(),; 52 fFunctions(fEngine); 53 {}; 54 ; 55 explicit Random(unsigned int seed) :; 56 fEngine(),; 57 fFunctions(fEngine); 58 {; 59 fEngine.SetSeed(seed);; 60 }; 61 ; 62 double Rndm() {; 63 return fEngine();; 64 }; 65 ; 66 /**; 67 Generate an array of random numbers between ]0,1]; 68 0 is excluded and 1 is included; 69 Function to preserve ROOT Trandom compatibility; 70 */; 71 void RndmArray(int n, double * array) {; 72 fEngine.RandomArray(array, array+n);; 73 }; 74 ; 75 /**; 76 Return the type (name) of the used generator; 77 */; 78 std::string Type() const {; 79 return fEngine.Name();; 80 }; 81 ; 82 /**; 83 Return the size of the generator state; 84 */; 85 unsigned int EngineSize() const {; 86 return fEngine.Si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Random_8h_source.html:83,Guid,Guide,83,doc/master/Random_8h_source.html,https://root.cern,https://root.cern/doc/master/Random_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/RanluxppEngine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RanluxppEngine.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Jonas Hahnfeld 11/2020; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_Math_RanluxppEngine; 13#define ROOT_Math_RanluxppEngine; 14 ; 15#include ""Math/TRandomEngine.h""; 16 ; 17#include <cstdint>; 18#include <memory>; 19 ; 20namespace ROOT {; 21namespace Math {; 22 ; 23template <int w, int p, int u = 0>; 24class RanluxppEngineImpl;; 25 ; 26template <int p>; 27class RanluxppEngine final : public TRandomEngine {; 28 ; 29private:; 30 using ImplType = RanluxppEngineImpl<48, p>;; 31 std::unique_ptr<ImplType> fImpl;; 32 ; 33public:; 34 RanluxppEngine(uint64_t seed = 314159265);; 35 ~RanluxppEngine() override;; 36 ; 37 /// Generate a double-precision random number with 48 bits of randomness; 38 double Rndm() override;; 39 /// Generate a double-precision random number (non-virtual method); 40 double operator()();; 41 /// Generate a random integer value with 48 bits; 42 uint64_t IntRndm();; 43 ; 44 /// Initialize and seed the state of the generator; 45 void SetSeed(uint64_t seed);; 46 /// Skip `n` random numbers without generating them; 47 void Skip(uint64_t n);; 48 ; 49 /// Get name of the generator; 50 static const char *Name() { return ""RANLUX++""; }; 51};; 52 ; 53using RanluxppEngine24 = RanluxppEngine<24>;; 54using RanluxppEngine2048 = RanluxppEngine<2048>;; 55 ; 56extern template class RanluxppEngine<24>;; 57extern template class RanluxppEngine<2048>;; 58 ; 59 ; 60template <int p>; 61class Ranluxp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RanluxppEngine_8h_source.html:91,Guid,Guide,91,doc/master/RanluxppEngine_8h_source.html,https://root.cern,https://root.cern/doc/master/RanluxppEngine_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/TDataPoint.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDataPoint.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: C. Gumpert 09/2011; 3/**********************************************************************; 4 * *; 5 * Copyright (c) 2011 , LCG ROOT MathLib Team *; 6 * *; 7 * *; 8 **********************************************************************/; 9//; 10// Header file for TDataPointclass; 11//; 12 ; 13#ifndef ROOT_Math_TDataPoint; 14#define ROOT_Math_TDataPoint; 15 ; 16//ROOT include(s); 17#include ""RtypesCore.h""; 18 ; 19 ; 20namespace ROOT; 21{; 22namespace Math; 23{; 24 ; 25 ; 26template<unsigned int K,typename _val_type = float>; 27class TDataPoint; 28{; 29public:; 30 typedef _val_type value_type;; 31 enum {; 32 kDimension = K //the dimensionality of this data point; 33 };; 34 static UInt_t Dimension() {return kDimension;}; 35 TDataPoint();; 36#ifndef __MAKECINT__; 37 template<typename _coord_typ>; 38 TDataPoint(const _coord_typ* pData,_val_type fWeight = 1);; 39#endif; 40 //virtual ~TDataPoint() {}; 41#ifndef __MAKECINT__; 42 template<typename _val>; 43 value_type Distance(const TDataPoint<K,_val>& rPoint) const;; 44#endif; 45 value_type GetCoordinate(unsigned int iAxis) const;; 46 value_type GetWeight() const {return m_fWeight;}; 47 Bool_t Less(TDataPoint& rPoint,unsigned int iAxis) const;; 48 void SetCoordinate(unsigned int iAxis,_val_type fValue);; 49 void SetWeight(float fWeight) {m_fWeight = fWeight;}; 50 ; 51private:; 52 value_type m_vCoordinates[K]; ///< coordinates; 53 value_type m_fWeight; ///< weight at this point; 54};; 55 ; 56// some typedef definitions; 57typedef TDataPoint<1,Float_t> TDataPoint1F;; 58typedef TDataPoint<2,Float_t> TDataPoint2F;; 59typedef TDataPoint<3,Float_t> TDataPoint3F;; 60typedef TDataPoint<1,Double_t> TDataPoint1D;; 61typedef TDataPoint<2,Double_t> TDataPoint2D;; 62typedef TDataPoint<3,Double_t> TDataPoint3D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDataPoint_8h_source.html:87,Guid,Guide,87,doc/master/TDataPoint_8h_source.html,https://root.cern,https://root.cern/doc/master/TDataPoint_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/Types.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Types.h. Go to the documentation of this file. 1#ifndef ROOT_Math_VecTypes; 2#define ROOT_Math_VecTypes; 3 ; 4#include ""RConfigure.h""; 5 ; 6#ifdef R__HAS_VECCORE; 7 ; 8#if defined(R__HAS_VC); 9 ; 10#pragma GCC diagnostic push; 11#pragma GCC diagnostic ignored ""-Wall""; 12#pragma GCC diagnostic ignored ""-Wunused-parameter""; 13#pragma GCC diagnostic ignored ""-Wdeprecated-declarations""; 14#if (__cplusplus >= 202002L) // only for C++20; 15#pragma GCC diagnostic ignored ""-Wdeprecated-enum-enum-conversion""; 16#endif; 17 ; 18#ifdef __clang__; 19#pragma clang diagnostic ignored ""-Wconditional-uninitialized""; 20#pragma clang diagnostic ignored ""-Wdeprecated-copy""; 21#endif; 22 ; 23#include <Vc/Vc>; 24#pragma GCC diagnostic pop; 25#endif; 26 ; 27#include <VecCore/VecCore>; 28 ; 29namespace ROOT {; 30 ; 31namespace Internal {; 32 using ScalarBackend = vecCore::backend::Scalar;; 33#ifdef VECCORE_ENABLE_VC; 34 using VectorBackend = vecCore::backend::VcVector;; 35#else; 36 using VectorBackend = vecCore::backend::Scalar;; 37#endif; 38}; 39 using Float_v = typename Internal::VectorBackend::Float_v;; 40 using Double_v = typename Internal::VectorBackend::Double_v;; 41 using Int_v = typename Internal::VectorBackend::Int_v;; 42 using Int32_v = typename Internal::VectorBackend::Int32_v;; 43 using UInt_v = typename Internal::VectorBackend::UInt_v;; 44 using UInt32_v = typename Internal::VectorBackend::UInt32_v;; 45}; 46 ; 47#else // R__HAS_VECCORE; 48 ; 49// We do not have explicit vectorisation support enabled. Fall back to regular ROOT types.; 50 ; 51#include ""RtypesCore.h""; 52 ; 53namespace ROOT {; 54 using Float_v = Float_t;; 55 using Double_v = Double_t;; 56 using Int_v = Int_t;; 57 using Int32_v = Int_t; // FIXME: Should we introduce Int32_t in RtypesCore.h?; 58 using UInt_v = UInt_t;; 59 using UInt32_v = UInt_t; // FIXME: Should we introduce UInt32_t i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/math_2mathcore_2inc_2Math_2Types_8h_source.html:82,Guid,Guide,82,doc/master/math_2mathcore_2inc_2Math_2Types_8h_source.html,https://root.cern,https://root.cern/doc/master/math_2mathcore_2inc_2Math_2Types_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/Types.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Types.h. Go to the documentation of this file. 1#ifndef ROOT_Math_VecTypes; 2#define ROOT_Math_VecTypes; 3 ; 4#include ""RConfigure.h""; 5 ; 6#ifdef R__HAS_VECCORE; 7 ; 8#if defined(R__HAS_VC); 9 ; 10#pragma GCC diagnostic push; 11#pragma GCC diagnostic ignored ""-Wall""; 12#pragma GCC diagnostic ignored ""-Wunused-parameter""; 13#pragma GCC diagnostic ignored ""-Wdeprecated-declarations""; 14#if (__cplusplus >= 202002L) // only for C++20; 15#pragma GCC diagnostic ignored ""-Wdeprecated-enum-enum-conversion""; 16#endif; 17 ; 18#ifdef __clang__; 19#pragma clang diagnostic ignored ""-Wconditional-uninitialized""; 20#pragma clang diagnostic ignored ""-Wdeprecated-copy""; 21#endif; 22 ; 23#include <Vc/Vc>; 24#pragma GCC diagnostic pop; 25#endif; 26 ; 27#include <VecCore/VecCore>; 28 ; 29namespace ROOT {; 30 ; 31namespace Internal {; 32 using ScalarBackend = vecCore::backend::Scalar;; 33#ifdef VECCORE_ENABLE_VC; 34 using VectorBackend = vecCore::backend::VcVector;; 35#else; 36 using VectorBackend = vecCore::backend::Scalar;; 37#endif; 38}; 39 using Float_v = typename Internal::VectorBackend::Float_v;; 40 using Double_v = typename Internal::VectorBackend::Double_v;; 41 using Int_v = typename Internal::VectorBackend::Int_v;; 42 using Int32_v = typename Internal::VectorBackend::Int32_v;; 43 using UInt_v = typename Internal::VectorBackend::UInt_v;; 44 using UInt32_v = typename Internal::VectorBackend::UInt32_v;; 45}; 46 ; 47#else // R__HAS_VECCORE; 48 ; 49// We do not have explicit vectorisation support enabled. Fall back to regular ROOT types.; 50 ; 51#include ""RtypesCore.h""; 52 ; 53namespace ROOT {; 54 using Float_v = Float_t;; 55 using Double_v = Double_t;; 56 using Int_v = Int_t;; 57 using Int32_v = Int_t; // FIXME: Should we introduce Int32_t in RtypesCore.h?; 58 using UInt_v = UInt_t;; 59 using UInt32_v = UInt_t; // FIXME: Should we introduce UInt32_t in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/math_2mathcore_2inc_2Math_2Types_8h_source.html:81,Guid,Guide,81,doc/v632/math_2mathcore_2inc_2Math_2Types_8h_source.html,https://root.cern,https://root.cern/doc/v632/math_2mathcore_2inc_2Math_2Types_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/Util.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Util.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Nov 14 15:44:38 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Utility functions for all ROOT Math classes; 12 ; 13#ifndef ROOT_Math_Util; 14#define ROOT_Math_Util; 15 ; 16#include <string>; 17#include <sstream>; 18 ; 19#include <cmath>; 20#include <limits>; 21#include <numeric>; 22 ; 23 ; 24// This can be protected against by defining ROOT_Math_VecTypes; 25// This is only used for the R__HAS_VECCORE define; 26// and a single VecCore function in EvalLog; 27#ifndef ROOT_Math_VecTypes; 28#include ""Types.h""; 29#endif; 30 ; 31 ; 32// for defining unused variables in the interfaces; 33// and have still them in the documentation; 34#define MATH_UNUSED(var) (void)var; 35 ; 36 ; 37namespace ROOT {; 38 ; 39 namespace Math {; 40 ; 41 /**; 42 namespace defining Utility functions needed by mathcore; 43 */; 44 namespace Util {; 45 ; 46 /**; 47 Utility function for conversion to strings; 48 */; 49 template <class T>; 50 std::string ToString(const T &val); 51 {; 52 std::ostringstream buf;; 53 buf << val;; 54 ; 55 std::string ret = buf.str();; 56 return ret;; 57 }; 58 ; 59 /// safe evaluation of log(x) with a protections against negative or zero argument to the log; 60 /// smooth linear extrapolation below function values smaller than epsilon; 61 /// (better than a simple cut-off); 62 ; 63 template<class T>; 64 inline T EvalLog(T x) {; 65 static const T epsilon = T(2.0 * std::numeric_limits<double>::min());; 66#ifdef R__HAS_VECCORE; 67 T logval = vecCore::Blend<T>(x <= epsilon, x / epsilon + std::log(epsilon) - T(1.0), std::log(x));; 68#else; 69 T logval = x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Util_8h_source.html:81,Guid,Guide,81,doc/master/Util_8h_source.html,https://root.cern,https://root.cern/doc/master/Util_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/WrappedFunction.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. WrappedFunction.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 CERN *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 * *; 12 **********************************************************************/; 13 ; 14#ifndef ROOT_Math_WrappedFunction; 15#define ROOT_Math_WrappedFunction; 16 ; 17#include ""IFunction.h""; 18 ; 19 ; 20namespace ROOT {; 21namespace Math {; 22 ; 23 ; 24 ; 25 ; 26struct NullTypeFunc1D {};; 27 ; 28typedef double(*FreeFunctionPtr)(double);; 29 ; 30typedef double(*FreeMultiFunctionPtr)(const double*);; 31 ; 32/**; 33 Template class to wrap any C++ callable object which takes one argument; 34 i.e. implementing operator() (double x) in a One-dimensional function interface.; 35 It provides a ROOT::Math::IGenFunction-like signature; 36 ; 37 Note: If you want to wrap just the reference (to avoid copying) you need to use; 38 Func& or const Func & as template parameter. The former should be used when the; 39 operator() is not a const method of Func; 40 ; 41 @ingroup GenFunc; 42 ; 43 */; 44template< typename Func = FreeFunctionPtr >; 45class WrappedFunction : public IGenFunction {; 46 ; 47 ; 48 public:; 49 ; 50 /**; 51 construct from the pointer to the object and the member function; 52 */; 53 WrappedFunction( Func f ) :; 54 fFunc( f ); 55 { /* no op */ }; 56 ; 57 // use default copy constructor and assignment operator; 58 ; 59 /// clone (required by the interface); 60 WrappedFunction * Clone() const override {; 61 return new WrappedFunction(fFunc);; 62 }; 63 ; 64 // virtual ~WrappedFunction() { /**/ }; 65 ; 66private:; 67 ; 68 double DoEval (d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedFunction_8h_source.html:92,Guid,Guide,92,doc/master/WrappedFunction_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedFunction_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/Math/WrappedParamFunction.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. WrappedParamFunction.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Nov 23 10:38:32 2006; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2006 CERN *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 * *; 12 **********************************************************************/; 13 ; 14// Header file for class WrappedParamFunction; 15 ; 16#ifndef ROOT_Math_WrappedParamFunction; 17#define ROOT_Math_WrappedParamFunction; 18 ; 19#include ""Math/IParamFunction.h""; 20 ; 21//#include <iostream>; 22//#include <iterator>; 23 ; 24#include <vector>; 25 ; 26 ; 27namespace ROOT {; 28 ; 29 namespace Math {; 30 ; 31 ; 32typedef double( * FreeParamMultiFunctionPtr ) (const double *, const double * );; 33 ; 34/**; 35 WrappedParamFunction class to wrap any multi-dimensional function object; 36 implementing the operator()(const double * x, const double * p); 37 in an interface-like IParamFunction with a vector storing and caching internally the; 38 parameter values; 39 ; 40 @ingroup ParamFunc; 41 ; 42*/; 43template< typename FuncPtr = FreeParamMultiFunctionPtr >; 44class WrappedParamFunction : public IParamMultiFunction {; 45 ; 46public:; 47 ; 48 /**; 49 Constructor a wrapped function from a pointer to a callable object, the function dimension and number of parameters; 50 which are set to zero by default; 51 */; 52 WrappedParamFunction (FuncPtr func, unsigned int dim = 1, unsigned int npar = 0, double * par = nullptr) :; 53 fFunc(func),; 54 fDim(dim),; 55 fParams(std::vector<double>(npar) ); 56 {; 57 if (par) std::copy(par, par+npar, fParams.begin());; 58 }; 59 ; 60// /**; 61// Constructor a wrapped function from a non-const pointe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedParamFunction_8h_source.html:97,Guid,Guide,97,doc/master/WrappedParamFunction_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedParamFunction_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/TMath.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; TMath.h File Reference. #include ""TMathBase.h""; #include ""TError.h""; #include <algorithm>; #include <limits>; #include <cmath>; #include <cfloat>. Include dependency graph for TMath.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TMath::Limits< T >;  . Namespaces; namespace  TMath;  TMath. ;  . Functions; Double_t TMath::ACos (Double_t);  Returns the principal value of the arc cosine of x, expressed in radians. ;  ; Double_t TMath::ACosH (Double_t);  Returns the nonnegative area hyperbolic cosine of x. ;  ; Bool_t TMath::AreEqualAbs (Double_t af, Double_t bf, Double_t epsilon);  Comparing floating points. ;  ; Bool_t TMath::AreEqualRel (Double_t af, Double_t bf, Double_t relPrec);  Comparing floating points. ;  ; Double_t TMath::ASin (Double_t);  Returns the principal value of the arc sine of x, expressed in radians. ;  ; Double_t TMath::ASinH (Double_t);  Returns the area hyperbolic sine of x. ;  ; Double_t TMath::ATan (Double_t);  Returns the principal value of the arc tangent of x, expressed in radians. ;  ; Double_t TMath::ATan2 (Double_t y, Double_t x);  Returns the principal value of the arc tangent of y/x, expressed in radians. ;  ; Double_t TMath::ATanH (Double_t);  Returns the area hyperbolic tangent of x. ;  ; Double_t TMath::BesselI (Int_t n, Double_t x);  Computes the Integer Order Modified Bessel function I_n(x) for n=0,1,2,... and any real x. ;  ; Double_t TMath::BesselI0 (Double_t x);  Integer order modified Bessel function K_n(x) ;  ; Double_t TMath::BesselI1 (Double_t x);  Modified Bessel function K_0(x) ;  ; Double_t TMath::BesselJ0 (Double_t x);  Modified Bessel function K_1(x) ;  ; Double_t TMath::BesselJ1 (Double_t x);  Bessel function J0(x) for any real x. ;  ; Double_t TMath::BesselK (Int_t n, Double_t x);  Integer order m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8h.html:80,Guid,Guide,80,doc/master/TMath_8h.html,https://root.cern,https://root.cern/doc/master/TMath_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/TMath.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMath.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: Rene Brun, Anna Kreshuk, Eddy Offermann, Fons Rademakers 29/07/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TMath; 13#define ROOT_TMath; 14 ; 15#include ""TMathBase.h""; 16 ; 17#include ""TError.h""; 18#include <algorithm>; 19#include <limits>; 20#include <cmath>; 21 ; 22////////////////////////////////////////////////////////////////////////////////; 23///; 24/// TMath; 25///; 26/// Encapsulate most frequently used Math functions.; 27/// NB. The basic functions Min, Max, Abs and Sign are defined; 28/// in TMathBase.; 29 ; 30namespace TMath {; 31 ; 32////////////////////////////////////////////////////////////////////////////////; 33// Fundamental constants; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/// \f$ \pi\f$; 37constexpr Double_t Pi(); 38{; 39 return 3.14159265358979323846;; 40}; 41 ; 42////////////////////////////////////////////////////////////////////////////////; 43/// \f$ 2\pi\f$; 44constexpr Double_t TwoPi(); 45{; 46 return 2.0 * Pi();; 47}; 48 ; 49////////////////////////////////////////////////////////////////////////////////; 50/// \f$ \frac{\pi}{2} \f$; 51constexpr Double_t PiOver2(); 52{; 53 return Pi() / 2.0;; 54}; 55 ; 56////////////////////////////////////////////////////////////////////////////////; 57/// \f$ \frac{\pi}{4} \f$; 58constexpr Double_t PiOver4(); 59{; 60 return Pi() / 4.0;; 61}; 62 ; 63////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8h_source.html:77,Guid,Guide,77,doc/master/TMath_8h_source.html,https://root.cern,https://root.cern/doc/master/TMath_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/TRandom.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TRandom.h File Reference. #include ""Math/TRandomEngine.h""; #include ""TNamed.h"". Include dependency graph for TRandom.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TRandom;  This is the base class for the ROOT Random number generators. More...;  . Variables; R__EXTERN TRandom * gRandom;  . Variable Documentation. ◆ gRandom. R__EXTERN TRandom* gRandom. Definition at line 62 of file TRandom.h. mathmathcoreincTRandom.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8h.html:82,Guid,Guide,82,doc/master/TRandom_8h.html,https://root.cern,https://root.cern/doc/master/TRandom_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/TRandom.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Rene Brun 15/12/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRandom; 13#define ROOT_TRandom; 14 ; 15#include ""Math/TRandomEngine.h""; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TRandom //; 20// //; 21// Simple prototype random number generator class (periodicity = 10**9) //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TNamed.h""; 26 ; 27class TRandom : public TNamed, public ROOT::Math::TRandomEngine {; 28 ; 29protected:; 30 UInt_t fSeed; //Random number generator seed; 31 ; 32public:; 33 TRandom(UInt_t seed=65539);; 34 ~TRandom() override;; 35 virtual Int_t Binomial(Int_t ntot, Double_t prob);; 36 virtual Double_t BreitWigner(Double_t mean=0, Double_t gamma=1);; 37 virtual void Circle(Double_t &x, Double_t &y, Double_t r);; 38 virtual Double_t Exp(Double_t tau);; 39 virtual Double_t Gaus(Double_t mean=0, Double_t sigma=1);; 40 virtual UInt_t GetSeed() const;; 41 virtual UInt_t Integer(UInt_t imax);; 42 virtual Double_t Landau(Double_t mean=0, Double_t sigma=1);; 43 virtual ULong64_t Poisson(Double_t mean);; 44 virtual Double_t PoissonD(Double_t mean);; 45 virtual void Rannor(Float_t &a, Float_t &b);; 46 virtual void Rannor(Double_t &a, Double_t &b);; 47 virtual void ReadRandom(const char *filename);; 48 virtual void SetSeed(ULong_t seed=0);; 49 Double_t Rndm() override;; 50 // keep for backwar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8h_source.html:79,Guid,Guide,79,doc/master/TRandom_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8h_source.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: math/mathcore/inc/TRandom1.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom1.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Rene Brun 04/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRandom1; 13#define ROOT_TRandom1; 14 ; 15 ; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TRandom1 //; 20// //; 21// Ranlux random number generator class (periodicity > 10**14) //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TRandom.h""; 26 ; 27class TRandom1 : public TRandom {; 28 ; 29protected:; 30 Int_t fNskip;; 31 Int_t fLuxury;; 32 Int_t fIlag;; 33 Int_t fJlag;; 34 Int_t fCount24;; 35 Float_t fFloatSeedTable[24];; 36 Float_t fCarry;; 37 const Int_t fIntModulus;; 38 static Int_t fgNumEngines;; 39 static Int_t fgMaxIndex;; 40 const UInt_t *fTheSeeds; //! Temporary array of seed values (transient); 41 const Double_t fMantissaBit24;; 42 const Double_t fMantissaBit12;; 43 ; 44public:; 45 TRandom1();; 46 TRandom1(UInt_t seed, Int_t lux = 3);; 47 TRandom1(Int_t rowIndex, Int_t colIndex, Int_t lux);; 48 ~TRandom1() override;; 49 /////////////////////////////////////////////////////////////////////////////; 50 /// Returns current luxury value.; 51 virtual Int_t GetLuxury() const {return fLuxury;}; 52 /////////////////////////////////////////////////////////////////////////////; 53 /// Returns the current seed (first element of the seed table); 54 /// \warning This is not the initial seed!; 55 UInt_t GetSeed() const override { return UInt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom1_8h_source.html:80,Guid,Guide,80,doc/master/TRandom1_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom1_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/TRandom2.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom2.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Rene Brun 04/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRandom2; 13#define ROOT_TRandom2; 14 ; 15 ; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TRandom2 //; 20// //; 21// random number generator class (periodicity > 10**26) //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TRandom.h""; 26 ; 27class TRandom2 : public TRandom {; 28 ; 29protected:; 30 UInt_t fSeed1; //Random number generator seed 1; 31 UInt_t fSeed2; //Random number generator seed 2; 32 ; 33public:; 34 TRandom2(UInt_t seed=1);; 35 ~TRandom2() override;; 36 Double_t Rndm( ) override;; 37 using TRandom::Rndm;; 38 void RndmArray(Int_t n, Float_t *array) override;; 39 void RndmArray(Int_t n, Double_t *array) override;; 40 void SetSeed(ULong_t seed=0) override;; 41 UInt_t GetSeed() const override;; 42 ; 43 ClassDefOverride(TRandom2, 1) // Random number generator with periodicity of 10**26; 44};; 45 ; 46R__EXTERN TRandom *gRandom;; 47 ; 48#endif; R__EXTERN#define R__EXTERNDefinition DllImport.h:26; ULong_tunsigned long ULong_tDefinition RtypesCore.h:55; Float_tfloat Float_tDefinition RtypesCore.h:57; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; gRandomR__EXTERN TRandom * gRandomDefinition TRandom2.h:46; TRandom.h; TRandom2Random number generator class based on the maximally quidistributed combined Tau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom2_8h_source.html:80,Guid,Guide,80,doc/master/TRandom2_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom2_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/TRandom3.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TRandom3.h File Reference. #include ""TRandom.h"". Include dependency graph for TRandom3.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TRandom3;  Random number generator class based on M. More...;  . Variables; R__EXTERN TRandom * gRandom;  . Variable Documentation. ◆ gRandom. R__EXTERN TRandom* gRandom. Definition at line 50 of file TRandom3.h. mathmathcoreincTRandom3.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom3_8h.html:83,Guid,Guide,83,doc/master/TRandom3_8h.html,https://root.cern,https://root.cern/doc/master/TRandom3_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/TRandom3.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom3.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Peter Malzacher 31/08/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRandom3; 13#define ROOT_TRandom3; 14 ; 15 ; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TRandom3 //; 20// //; 21// random number generator class: Mersenne Twister //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TRandom.h""; 26 ; 27class TRandom3 : public TRandom {; 28 ; 29private:; 30 UInt_t fMt[624];; 31 Int_t fCount624;; 32 ; 33public:; 34 TRandom3(UInt_t seed=4357);; 35 ~TRandom3() override;; 36 /// Return one element of the generator state used to generate the random numbers.; 37 /// Note that it is not the seed of the generator that was used in the SetSeed function and ; 38 /// the full state (624 numbers) is required to define the generator and have a reproducible output.; 39 UInt_t GetSeed() const override { return fMt[fCount624 % 624];}; 40 using TRandom::Rndm;; 41 Double_t Rndm( ) override;; 42 void RndmArray(Int_t n, Float_t *array) override;; 43 void RndmArray(Int_t n, Double_t *array) override;; 44 void SetSeed(ULong_t seed=0) override;; 45 virtual const UInt_t *GetState() const { return fMt; }; 46 ; 47 ClassDefOverride(TRandom3,2) //Random number generator: Mersenne Twister; 48};; 49 ; 50R__EXTERN TRandom *gRandom;; 51 ; 52#endif; R__EXTERN#define R__EXTERNDefinition DllImport.h:26; Int_tint Int_tDefinition Rtype",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom3_8h_source.html:80,Guid,Guide,80,doc/master/TRandom3_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom3_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/inc/TRandomGen.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs ; TRandomGen.h File Reference. #include ""TRandom.h""; #include <string>; #include ""Math/StdEngine.h""; #include ""Math/MixMaxEngine.h""; #include ""Math/RanluxppEngine.h"". Include dependency graph for TRandomGen.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TRandomGen< Engine >;  . Typedefs; typedef TRandomGen< ROOT::Math::MixMaxEngine< 240, 0 > > TRandomMixMax;  MIXMAX generator based on a state of N=240. ;  ; typedef TRandomGen< ROOT::Math::MixMaxEngine< 17, 0 > > TRandomMixMax17;  MIXMAX generator based on a state of N=17. ;  ; typedef TRandomGen< ROOT::Math::MixMaxEngine< 256, 2 > > TRandomMixMax256;  MIXMAX generator based on a state of N=256, based on the generator described in this paper: ;  ; typedef TRandomGen< ROOT::Math::StdEngine< std::mt19937_64 > > TRandomMT64;  Generator based on a the Mersenne-Twister generator with 64 bits, using the implementation provided by the standard library, std::mt19937_64 (see http://www.cplusplus.com/reference/random/mt19937_64/ ) ;  ; typedef TRandomGen< ROOT::Math::StdEngine< std::ranlux48 > > TRandomRanlux48;  Generator based on a the RanLux generator with 48 bits, using the implementation provided by the standard library, std::ranlux48 (see http://www.cplusplus.com/reference/random/ranlux48/ ) ;  ; typedef TRandomGen< ROOT::Math::RanluxppEngine2048 > TRandomRanluxpp;  . Typedef Documentation. ◆ TRandomRanluxpp. typedef TRandomGen<ROOT::Math::RanluxppEngine2048> TRandomRanluxpp. Definition at line 132 of file TRandomGen.h. mathmathcoreincTRandomGen.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandomGen_8h.html:85,Guid,Guide,85,doc/master/TRandomGen_8h.html,https://root.cern,https://root.cern/doc/master/TRandomGen_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/BinData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BinData.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: M. Borinsky; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class BinData; 12 ; 13#include ""Fit/BinData.h""; 14#include ""Math/Error.h""; 15 ; 16#include <cassert>; 17#include <cmath>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Fit; 22 {; 23 ; 24 BinData::BinData(unsigned int maxpoints, unsigned int dim,; 25 ErrorType err ) :; 26 FitData( maxpoints, dim ),; 27 fErrorType( err ),; 28 fDataPtr( nullptr ),; 29 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 30 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 31 {; 32 InitializeErrors();; 33 InitDataVector( );; 34 }; 35 ; 36 ; 37 /**; 38 constructor from option and default range; 39 */; 40 BinData::BinData (const DataOptions & opt, unsigned int maxpoints,; 41 unsigned int dim, ErrorType err ) :; 42 FitData( opt, maxpoints, dim ),; 43 fErrorType( err ),; 44 fDataPtr( nullptr ),; 45 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 46 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 47 {; 48 InitializeErrors();; 49 InitDataVector( );; 50 }; 51 ; 52 /**; 53 constructor from options and range; 54 efault is 1D and value errors; 55 */; 56 BinData::BinData (const DataOptions & opt, const DataRange & range,; 57 unsigned int maxpoints, unsigned int dim, ErrorType err ) :; 58 FitData( opt, range, maxpoints, dim ),; 59 fErrorType( err ),; 60 fDataPtr( nullptr ),; 61 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 62 fpTmpCoordErrorVector( nullptr ), fpTmpBinEd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:81,Guid,Guide,81,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/BrentMinimizer1D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BrentMinimizer1D.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: David Gonzalez Maline 2/2008; 3 /**********************************************************************; 4 * *; 5 * Copyright (c) 2006 CERN *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 * *; 11 **********************************************************************/; 12 ; 13// Header file for class BrentMinimizer1D; 14//; 15// Created by: Maline at Mon Feb 4 09:32:36 2008; 16//; 17//; 18 ; 19#include ""Math/BrentMinimizer1D.h""; 20#include ""Math/BrentMethods.h""; 21#include ""Math/IFunction.h""; 22#include ""Math/IFunctionfwd.h""; 23 ; 24#include ""Math/Error.h""; 25 ; 26namespace ROOT {; 27namespace Math {; 28 ; 29static int gDefaultNpx = 100; // default nunmber of points used in the grid to bracked the minimum; 30static int gDefaultNSearch = 10; // number of time the iteration (bracketing -Brent ) is repeted; 31 ; 32 ; 33 BrentMinimizer1D::BrentMinimizer1D():; 34 fFunction(nullptr),; 35 fLogScan(false), fNIter(0),; 36 fNpx(0), fStatus(-1),; 37 fXMin(0), fXMax(0), fXMinimum(0); 38{; 39// Default Constructor.; 40 fNpx = gDefaultNpx;; 41}; 42 ; 43void BrentMinimizer1D::SetDefaultNpx(int n) { gDefaultNpx = n; }; 44 ; 45void BrentMinimizer1D::SetDefaultNSearch(int n) { gDefaultNSearch = n; }; 46 ; 47 ; 48void BrentMinimizer1D::SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); 49{; 50// Sets function to be minimized.; 51 ; 52 fFunction = &f;; 53 fStatus = -1; // reset the status; 54 ; 55 if (xlow >= xup); 56 {; 57 double tmp = xlow;; 58 xlow = xup;; 59 xup = tmp;; 60 }; 61 fXMin = xlow;; 62 fXMax = xup;; 63}; 64 ; 65 ; 66 ; 67double BrentMinimizer1D::FValMinimum() const; 68{ return (*fFunction)(fXMinimum); }; 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BrentMinimizer1D_8cxx_source.html:90,Guid,Guide,90,doc/master/BrentMinimizer1D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BrentMinimizer1D_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/BrentRootFinder.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BrentRootFinder.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: David Gonzalez Maline 01/2008; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2006 CERN *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 * *; 12 **********************************************************************/; 13 ; 14#include ""Math/BrentRootFinder.h""; 15#include ""Math/BrentMethods.h""; 16#include ""Math/IFunctionfwd.h""; 17#include <cmath>; 18 ; 19#include ""Math/Error.h""; 20 ; 21namespace ROOT {; 22namespace Math {; 23 ; 24 ; 25static int gDefaultNpx = 100; // default nunmber of points used in the grid to bracked the root; 26static int gDefaultNSearch = 10; // number of time the iteration (bracketing -Brent ) is repeted; 27 ; 28 BrentRootFinder::BrentRootFinder() : fFunction(nullptr),; 29 fLogScan(false), fNIter(0),; 30 fNpx(0), fStatus(-1),; 31 fXMin(0), fXMax(0), fRoot(0); 32{; 33 // default constructor (number of points used to bracket value is set to 100); 34 fNpx = gDefaultNpx;; 35}; 36 ; 37void BrentRootFinder::SetDefaultNpx(int n) { gDefaultNpx = n; }; 38 ; 39void BrentRootFinder::SetDefaultNSearch(int n) { gDefaultNSearch = n; }; 40 ; 41 ; 42bool BrentRootFinder::SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); 43{; 44// Set function to solve and the interval in where to look for the root.; 45 ; 46 fFunction = &f;; 47 // invalid previous status; 48 fStatus = -1;; 49 ; 50 if (xlow >= xup); 51 {; 52 double tmp = xlow;; 53 xlow = xup;; 54 xup = tmp;; 55 }; 56 fXMin = xlow;; 57 fXMax = xup;; 58 ; 59 return true;; 60}; 61 ; 62const char* BrentRootFinder::Name() const; 63{ return ""BrentRootFinder""; }; 64 ; 65 ; 66bool BrentRootFinder::S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BrentRootFinder_8cxx_source.html:89,Guid,Guide,89,doc/master/BrentRootFinder_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BrentRootFinder_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/DataRange.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataRange.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:02 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class DataRange; 12 ; 13#include ""Fit/DataRange.h""; 14#include ""Math/Error.h""; 15 ; 16#include <algorithm>; 17#include <limits>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Fit {; 22 ; 23DataRange::DataRange(double xmin, double xmax) :; 24 fRanges( std::vector<RangeSet> (1) ); 25{; 26 // construct a range for [xmin, xmax]; 27 if (xmin < xmax) {; 28 RangeSet rx(1);; 29 rx[0] = std::make_pair(xmin, xmax);; 30 fRanges[0] = rx;; 31 }; 32}; 33 ; 34 ; 35DataRange::DataRange(double xmin, double xmax, double ymin, double ymax) :; 36 fRanges( std::vector<RangeSet> (2) ); 37{; 38 // construct a range for [xmin, xmax] , [ymin, ymax]; 39 if (xmin < xmax) {; 40 RangeSet rx(1);; 41 rx[0] = std::make_pair(xmin, xmax);; 42 fRanges[0] = rx;; 43 }; 44 ; 45 if (ymin < ymax) {; 46 RangeSet ry(1);; 47 ry[0] = std::make_pair(ymin, ymax);; 48 fRanges[1] = ry;; 49 }; 50}; 51 ; 52DataRange::DataRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax) :; 53 fRanges( std::vector<RangeSet> (3) ); 54{; 55 // construct a range for [xmin, xmax] , [ymin, ymax] , [zmin, zmax]; 56 if (xmin < xmax) {; 57 RangeSet rx(1);; 58 rx[0] = std::make_pair(xmin, xmax);; 59 fRanges[0] = rx;; 60 }; 61 if (ymin < ymax) {; 62 RangeSet ry(1);; 63 ry[0] = std::make_pair(ymin, ymax);; 64 fRanges[1] = ry;; 65 }; 66 if (zmin < zmax) {; 67 RangeSet rz(1);; 68 rz[0] = std::make_pair(zmin, zmax);; 69 fRanges[2] = rz;; 70 }; 71}; 72 ; 73bool lessRange( const std::pair<double,doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataRange_8cxx_source.html:83,Guid,Guide,83,doc/master/DataRange_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataRange_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/FitConfig.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FitConfig.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Sep 21 16:21:29 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class FitConfig; 12 ; 13#include ""Fit/FitConfig.h""; 14 ; 15#include ""Fit/FitResult.h""; 16 ; 17#include ""Math/IParamFunction.h""; 18#include ""Math/Util.h""; 19 ; 20#include ""Math/Minimizer.h""; 21#include ""Math/Factory.h""; 22 ; 23#include <cmath>; 24 ; 25#include <string>; 26#include <sstream>; 27 ; 28#include ""Math/Error.h""; 29 ; 30//#define DEBUG; 31#ifdef DEBUG; 32#endif; 33 ; 34namespace ROOT {; 35 ; 36namespace Fit {; 37 ; 38 ; 39 ; 40FitConfig::FitConfig(unsigned int npar) :; 41 fNormErrors(false),; 42 fParabErrors(false), // ensure that in any case correct parabolic errors are estimated; 43 fMinosErrors(false), // do full Minos error analysis for all parameters; 44 fUpdateAfterFit(true), // update after fit; 45 fWeightCorr(false),; 46 fSettings(std::vector<ParameterSettings>(npar) ); 47{; 48 // constructor implementation; 49}; 50 ; 51 ; 52FitConfig::~FitConfig(); 53{; 54 // destructor implementation. No Operations; 55}; 56 ; 57FitConfig::FitConfig(const FitConfig &rhs) {; 58 // Implementation of copy constructor; 59 (*this) = rhs;; 60}; 61 ; 62FitConfig & FitConfig::operator = (const FitConfig &rhs) {; 63 // Implementation of assignment operator.; 64 if (this == &rhs) return *this; // time saving self-test; 65 ; 66 fNormErrors = rhs.fNormErrors;; 67 fParabErrors = rhs.fParabErrors;; 68 fMinosErrors = rhs.fMinosErrors;; 69 fUpdateAfterFit = rhs.fUpdateAfterFit;; 70 fWeightCorr = rhs.fWeightCorr;; 71 ; 72 fSettings = rhs.fSettings;; 73 fMinosParam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8cxx_source.html:83,Guid,Guide,83,doc/master/FitConfig_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/FitResult.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FitResult.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:34 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class FitResult; 12 ; 13#include ""Fit/FitResult.h""; 14 ; 15#include ""Fit/FitConfig.h""; 16 ; 17#include ""Fit/BinData.h""; 18 ; 19//#include ""Fit/Chi2FCN.h""; 20 ; 21#include ""Math/Minimizer.h""; 22 ; 23#include ""Math/IParamFunction.h""; 24#include ""Math/OneDimFunctionAdapter.h""; 25 ; 26#include ""Math/ProbFuncMathCore.h""; 27#include ""Math/QuantFuncMathCore.h""; 28 ; 29#include ""TMath.h""; 30#include ""Math/RichardsonDerivator.h""; 31#include ""Math/Error.h""; 32 ; 33#include <cassert>; 34#include <cmath>; 35#include <iostream>; 36#include <iomanip>; 37 ; 38namespace ROOT {; 39 ; 40 namespace Fit {; 41 ; 42 ; 43const int gInitialResultStatus = -99; // use this special convention to flag it when printing result; 44 ; 45FitResult::FitResult() :; 46 fValid(false), fNormalized(false), fNFree(0), fNdf(0), fNCalls(0),; 47 fStatus(-1), fCovStatus(0), fVal(0), fEdm(-1), fChi2(-1); 48{; 49 // Default constructor implementation.; 50}; 51 ; 52FitResult::FitResult(const FitConfig & fconfig) :; 53 fValid(false),; 54 fNormalized(false),; 55 fNFree(0),; 56 fNdf(0),; 57 fNCalls(0),; 58 fStatus(gInitialResultStatus),; 59 fCovStatus(0),; 60 fVal(0),; 61 fEdm(-1),; 62 fChi2(-1),; 63 fFitFunc(nullptr),; 64 fParams(std::vector<double>( fconfig.NPar() ) ),; 65 fErrors(std::vector<double>( fconfig.NPar() ) ),; 66 fParNames(std::vector<std::string> ( fconfig.NPar() ) ); 67{; 68 // create a Fit result from a fit config (i.e. with initial parameter values; 69 // and errors equal to step",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8cxx_source.html:83,Guid,Guide,83,doc/master/FitResult_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/FitUtil.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; FitUtil.cxx File Reference. #include ""Fit/FitUtil.h""; #include ""Fit/BinData.h""; #include ""Fit/UnBinData.h""; #include ""Math/IFunctionfwd.h""; #include ""Math/IParamFunction.h""; #include ""Math/Integrator.h""; #include ""Math/IntegratorMultiDim.h""; #include ""Math/WrappedFunction.h""; #include ""Math/OneDimFunctionAdapter.h""; #include ""Math/RichardsonDerivator.h""; #include ""Math/Error.h""; #include ""Math/Util.h""; #include <limits>; #include <cmath>; #include <cassert>; #include <algorithm>; #include <numeric>; #include ""TROOT.h"". Include dependency graph for FitUtil.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Fit::FitUtil::ParamDerivFunc< GradFunc >;  ; class  ROOT::Fit::FitUtil::SimpleGradientCalculator;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  ; namespace  ROOT::Fit::FitUtil;  namespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ;  . Functions; template<class GFunc > ; void ROOT::Fit::FitUtil::CalculateGradientIntegral (const GFunc &gfunc, const double *x1, const double *x2, const double *p, double *g);  ; bool ROOT::Fit::FitUtil::CheckInfNaNValue (double &rval);  ; double ROOT::Fit::FitUtil::CorrectValue (double rval);  . mathmathcoresrcFitUtil.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitUtil_8cxx.html:84,Guid,Guide,84,doc/master/FitUtil_8cxx.html,https://root.cern,https://root.cern/doc/master/FitUtil_8cxx.html,3,"['Guid', 'Simpl']","['Guide', 'SimpleGradientCalculator']"
Usability,". ROOT: math/mathcore/src/Fitter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Fitter.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Mon Sep 4 17:00:10 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class Fitter; 12 ; 13 ; 14#include ""Fit/Fitter.h""; 15#include ""Fit/Chi2FCN.h""; 16#include ""Fit/PoissonLikelihoodFCN.h""; 17#include ""Fit/LogLikelihoodFCN.h""; 18#include ""Math/Minimizer.h""; 19#include ""Math/MinimizerOptions.h""; 20#include ""Math/FitMethodFunction.h""; 21#include ""Fit/BasicFCN.h""; 22#include ""Fit/BinData.h""; 23#include ""Fit/UnBinData.h""; 24#include ""Fit/FcnAdapter.h""; 25#include ""Fit/FitConfig.h""; 26#include ""Fit/FitResult.h""; 27#include ""Math/Error.h""; 28 ; 29#include <memory>; 30 ; 31#include ""Math/IParamFunction.h""; 32 ; 33#include ""Math/MultiDimParamFunctionAdapter.h""; 34 ; 35// #include ""TMatrixDSym.h""; 36// for debugging; 37//#include ""TMatrixD.h""; 38// #include <iomanip>; 39 ; 40namespace ROOT {; 41 ; 42 namespace Fit {; 43 ; 44// use a static variable to get default minimizer options for error def; 45// to see if user has changed it later on. If it has not been changed we set; 46// for the likelihood method an error def of 0.5; 47// t.b.d : multiply likelihood by 2 so have same error def definition as chi2; 48 double gDefaultErrorDef = ROOT::Math::MinimizerOptions::DefaultErrorDef();; 49 ; 50 ; 51Fitter::Fitter(const std::shared_ptr<FitResult> & result) :; 52 fResult(result); 53{; 54 if (result->fFitFunc) SetFunction(*fResult->fFitFunc); // this will create also the configuration; 55 if (result->fObjFunc) fObjFunction = fResult->fObjFunc;; 56 if (result->fFitData) fData = fResult->fFitData;; 57}; 58 ; 59void Fitter::SetFunction(const I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8cxx_source.html:80,Guid,Guide,80,doc/master/Fitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/GenAlgoOptions.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GenAlgoOptions.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Nov 2010; 3/**********************************************************************; 4 * *; 5 * Copyright (c) 2010 LCG ROOT Math Team, CERN/PH-SFT *; 6 * *; 7 * *; 8 **********************************************************************/; 9 ; 10// implementation file for static methods of GenAlgoOptions; 11// this file contains also the pointer to the static std::map<algorithm name, options>; 12 ; 13#include ""Math/GenAlgoOptions.h""; 14#include <cassert>; 15 ; 16// for toupper; 17#include <algorithm>; 18#include <functional>; 19#include <cctype> // need to use c version of tolower defined here; 20#include <string>; 21 ; 22namespace ROOT {; 23namespace Math {; 24 ; 25typedef std::map<std::string, ROOT::Math::GenAlgoOptions > OptionsMap;; 26 ; 27namespace GenAlgoOptUtil {; 28 ; 29 // map with the generic options for all ROOT::Math numerical algorithm; 30 static OptionsMap gAlgoOptions;; 31 ; 32 ; 33 IOptions * DoFindDefault(std::string & algoname, OptionsMap & gOpts) {; 34 // internal function to retrieve the; 35 // default extra options for the given algorithm type; 36 // return zero if not found; 37 // store always name in upper case; 38 std::transform(algoname.begin(), algoname.end(), algoname.begin(), (int(*)(int)) toupper );; 39 ; 40 OptionsMap::iterator pos = gOpts.find(algoname);; 41 if (pos != gOpts.end() ) {; 42 return &(pos->second);; 43 }; 44 return nullptr;; 45 }; 46}; 47 ; 48 IOptions * GenAlgoOptions::FindDefault(const char * algo) {; 49 // find default options - return 0 if not found; 50 std::string algoname(algo);; 51 OptionsMap & gOpts = GenAlgoOptUtil::gAlgoOptions;; 52 return GenAlgoOptUtil::DoFindDefault(algoname, gOpts);; 53 }; 54 ; 55 IOptions & GenAlgoOptions::Default(const char * algo) {; 56 // create def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenAlgoOptions_8cxx_source.html:88,Guid,Guide,88,doc/master/GenAlgoOptions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GenAlgoOptions_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/GoFTest.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GoFTest.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: Bartolomeu Rabacal 05/2010; 3/**********************************************************************; 4 * *; 5 * Copyright (c) 2006 , LCG ROOT MathLib Team *; 6 * *; 7 * *; 8 **********************************************************************/; 9// implementation file for GoFTest; 10 ; 11 ; 12#include <algorithm>; 13#include <functional>; 14#include <iostream>; 15#include <map>; 16#include <memory>; 17#include <numeric>; 18#include <cstring>; 19#include <cassert>; 20 ; 21#include ""Math/Error.h""; 22#include ""Math/Math.h""; 23#include ""Math/IFunction.h""; 24#include ""Math/IFunctionfwd.h""; 25#include ""Math/Integrator.h""; 26#include ""Math/ProbFuncMathCore.h""; 27#include ""Math/WrappedFunction.h""; 28 ; 29#include ""Math/GoFTest.h""; 30 ; 31#include ""Fit/BinData.h""; 32 ; 33#include ""TStopwatch.h""; 34 ; 35/* Note: The references mentioned here are stated in GoFTest.h */; 36 ; 37namespace ROOT {; 38namespace Math {; 39 ; 40 struct CDFWrapper : public IGenFunction {; 41 // wrapper around a cdf function to re-scale for the range; 42 Double_t fXmin; // lower range for x; 43 Double_t fXmax; // lower range for x; 44 Double_t fNorm; // normalization; 45 const IGenFunction* fCDF; // cdf pointer (owned by the class); 46 ; 47 ; 48 ~CDFWrapper() override { if (fCDF) delete fCDF; }; 49 ; 50 CDFWrapper(const IGenFunction& cdf, Double_t xmin=0, Double_t xmax=-1) :; 51 fCDF(cdf.Clone()); 52 {; 53 if (xmin >= xmax) {; 54 fNorm = 1;; 55 fXmin = -std::numeric_limits<double>::infinity();; 56 fXmax = std::numeric_limits<double>::infinity();; 57 }; 58 else {; 59 fNorm = cdf(xmax) - cdf(xmin);; 60 fXmin = xmin;; 61 fXmax = xmax;; 62 }; 63 }; 64 ; 65 Double_t DoEval(Double_t x) const override {; 66 if (x <= fXmin) return 0;; 67 if (x >= fXmax) return 1.0;; 68 return (*fCDF)(x)/f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GoFTest_8cxx_source.html:81,Guid,Guide,81,doc/master/GoFTest_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GoFTest_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/Minimizer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Minimizer.cxx. Go to the documentation of this file. 1/*; 2 * Copyright (c) 2023, CERN; 3 */; 4 ; 5#include <Math/Minimizer.h>; 6 ; 7#include <Math/Error.h>; 8#include <Math/Util.h>; 9 ; 10namespace ROOT {; 11namespace Math {; 12 ; 13/** set initial second derivatives; 14 */; 15bool Minimizer::SetCovarianceDiag(std::span<const double> g2, unsigned int n); 16{; 17 MATH_UNUSED(g2);; 18 MATH_UNUSED(n);; 19 return false;; 20}; 21 ; 22/** set initial values for covariance/error matrix; 23 The covariance matrix must be provided in compressed form (row-major ordered upper traingular part); 24*/; 25bool Minimizer::SetCovariance(std::span<const double> cov, unsigned int nrow); 26{; 27 MATH_UNUSED(cov);; 28 MATH_UNUSED(nrow);; 29 return false;; 30}; 31 ; 32/// set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited; 33/// variable; 34bool Minimizer::SetLimitedVariable(unsigned int ivar, const std::string &name, double val, double step, double lower,; 35 double upper); 36{; 37 MATH_WARN_MSG(""Minimizer::SetLimitedVariable"", ""Setting of limited variable not implemented - set as unlimited"");; 38 MATH_UNUSED(lower);; 39 MATH_UNUSED(upper);; 40 return SetVariable(ivar, name, val, step);; 41}; 42 ; 43/// set a new fixed variable (override if minimizer supports them ); 44bool Minimizer::SetFixedVariable(unsigned int ivar, const std::string &name, double val); 45{; 46 MATH_ERROR_MSG(""Minimizer::SetFixedVariable"", ""Setting of fixed variable not implemented"");; 47 MATH_UNUSED(ivar);; 48 MATH_UNUSED(name);; 49 MATH_UNUSED(val);; 50 return false;; 51}; 52/// set the value of an already existing variable; 53bool Minimizer::SetVariableValue(unsigned int ivar, double value); 54{; 55 MATH_ERROR_MSG(""Minimizer::SetVariableValue"", ""Set of a variable value not implemented"");; 56 MATH_UNUSED(ivar);; 57 MATH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:83,Guid,Guide,83,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/MinimizerOptions.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MinimizerOptions.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Aug 15 2008; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2008 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#include ""Math/MinimizerOptions.h""; 12 ; 13#include ""Math/GenAlgoOptions.h""; 14 ; 15// case of using ROOT plug-in manager; 16#ifndef MATH_NO_PLUGIN_MANAGER; 17#include ""TEnv.h""; 18#include ""TVirtualRWMutex.h""; 19#endif; 20 ; 21 ; 22#include <iomanip>; 23 ; 24namespace ROOT {; 25 ; 26 ; 27namespace Math {; 28 ; 29 namespace Minim {; 30 static std::string gDefaultMinimizer; // take from /etc/system.rootrc in ROOT Fitter; 31 static std::string gDefaultMinimAlgo = ""Migrad"";; 32 static double gDefaultErrorDef = 1.;; 33 static double gDefaultTolerance = 1.E-2;; 34 static double gDefaultPrecision = -1; // value <= 0 means left to minimizer; 35 static int gDefaultMaxCalls = 0; // 0 means leave default values Deaf; 36 static int gDefaultMaxIter = 0;; 37 static int gDefaultStrategy = 1;; 38 static int gDefaultPrintLevel = 0;; 39 static IOptions * gDefaultExtraOptions = nullptr; // pointer to default extra options; 40 }; 41 ; 42 ; 43void MinimizerOptions::SetDefaultMinimizer(const char * type, const char * algo) {; 44 // set the default minimizer type and algorithm; 45 if (type) Minim::gDefaultMinimizer = std::string(type);; 46 if (algo) Minim::gDefaultMinimAlgo = std::string(algo);; 47 if (Minim::gDefaultMinimAlgo.empty() && ( Minim::gDefaultMinimizer == ""Minuit"" ||; 48 Minim::gDefaultMinimizer == ""Minuit2"") ); 49 Minim::gDefaultMinimAlgo = ""Migrad"";; 50}; 51void MinimizerOptions::SetDefaultErrorDef(double up) {; 52 // set the default error definition; 53 Minim::gDefaultErrorDef ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimizerOptions_8cxx_source.html:90,Guid,Guide,90,doc/master/MinimizerOptions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MinimizerOptions_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/ParameterSettings.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ParameterSettings.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Sep 21 16:21:48 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class ParameterSettings; 12 ; 13#include <Fit/ParameterSettings.h>; 14 ; 15#include <Math/Error.h>; 16 ; 17namespace ROOT {; 18 ; 19namespace Fit {; 20 ; 21/// set a double side limit,; 22/// if low == up the parameter is fixed if low > up the limits are removed; 23/// The current parameter value should be within the given limits [low,up].; 24/// If the value is outside the limits, then a new parameter value is set to = (up+low)/2; 25void ParameterSettings::SetLimits(double low, double up); 26{; 27 ; 28 if (low > up) {; 29 RemoveLimits();; 30 return;; 31 }; 32 if (low == up && low == fValue) {; 33 Fix();; 34 return;; 35 }; 36 if (low > fValue || up < fValue) {; 37 MATH_INFO_MSG(""ParameterSettings"",; 38 ""lower/upper bounds outside current parameter value. The value will be set to (low+up)/2 "");; 39 fValue = 0.5 * (up + low);; 40 }; 41 fLowerLimit = low;; 42 fUpperLimit = up;; 43 fHasLowerLimit = true;; 44 fHasUpperLimit = true;; 45}; 46 ; 47} // end namespace Fit; 48 ; 49} // end namespace ROOT; Error.h; MATH_INFO_MSG#define MATH_INFO_MSG(loc, str)Pre-processor macro to report messages which can be configured to use ROOT error or simply an std::io...Definition Error.h:77; ParameterSettings.h; ROOT::Fit::ParameterSettings::RemoveLimitsvoid RemoveLimits()remove all limitDefinition ParameterSettings.h:140; ROOT::Fit::ParameterSettings::fLowerLimitdouble fLowerLimitlower parameter limitDefinition ParameterSettings.h:152; ROOT::Fit::Param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ParameterSettings_8cxx_source.html:91,Guid,Guide,91,doc/master/ParameterSettings_8cxx_source.html,https://root.cern,https://root.cern/doc/master/ParameterSettings_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/ProbFuncMathCore.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ProbFuncMathCore.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta, A. Zsenei 06/2005; 3 ; 4 ; 5 ; 6#include ""Math/Math.h""; 7#include ""Math/Error.h""; 8#include ""Math/ProbFuncMathCore.h""; 9#include ""Math/SpecFuncMathCore.h""; 10#include <cstdio>; 11#include <limits>; 12 ; 13namespace ROOT {; 14namespace Math {; 15 ; 16 ; 17 ; 18 static const double kSqrt2 = 1.41421356237309515; // sqrt(2.); 19 ; 20 double beta_cdf_c(double x, double a, double b); 21 {; 22 // use the fact that I(x,a,b) = 1. - I(1-x,b,a); 23 return ROOT::Math::inc_beta(1-x, b, a);; 24 }; 25 ; 26 ; 27 double beta_cdf(double x, double a, double b ); 28 {; 29 return ROOT::Math::inc_beta(x, a, b);; 30 }; 31 ; 32 ; 33 double breitwigner_cdf_c(double x, double gamma, double x0); 34 {; 35 return 0.5 - std::atan(2.0 * (x-x0) / gamma) / M_PI;; 36 }; 37 ; 38 ; 39 double breitwigner_cdf(double x, double gamma, double x0); 40 {; 41 return 0.5 + std::atan(2.0 * (x-x0) / gamma) / M_PI;; 42 }; 43 ; 44 ; 45 double cauchy_cdf_c(double x, double b, double x0); 46 {; 47 return 0.5 - std::atan( (x-x0) / b) / M_PI;; 48 }; 49 ; 50 ; 51 double cauchy_cdf(double x, double b, double x0); 52 {; 53 return 0.5 + std::atan( (x-x0) / b) / M_PI;; 54 }; 55 ; 56 ; 57 double chisquared_cdf_c(double x, double r, double x0); 58 {; 59 return ROOT::Math::inc_gamma_c ( 0.5 * r , 0.5* (x-x0) );; 60 }; 61 ; 62 ; 63 double chisquared_cdf(double x, double r, double x0); 64 {; 65 return ROOT::Math::inc_gamma ( 0.5 * r , 0.5* (x-x0) );; 66 }; 67 ; 68 ; 69 double crystalball_cdf(double x, double alpha, double n, double sigma, double mean ); 70 {; 71 if (n <= 1.) {; 72 MATH_ERROR_MSG(""crystalball_cdf"",""CrystalBall cdf not defined for n <=1"");; 73 return std::numeric_limits<double>::quiet_NaN();; 74 }; 75 ; 76 double abs_alpha = std::abs(alpha);; 77 double C = n/abs_alp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ProbFuncMathCore_8cxx_source.html:90,Guid,Guide,90,doc/master/ProbFuncMathCore_8cxx_source.html,https://root.cern,https://root.cern/doc/master/ProbFuncMathCore_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/SparseData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SparseData.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: David Gonzalez Maline Wed Aug 28 15:33:03 2009; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class BinData; 12 ; 13#include <iostream>; 14#include <iterator>; 15#include <algorithm>; 16 ; 17#include <vector>; 18#include <list>; 19 ; 20#include <stdexcept>; 21 ; 22#include <cmath>; 23#include <limits>; 24 ; 25#include ""Fit/BinData.h""; 26#include ""Fit/SparseData.h""; 27 ; 28using std::cout, std::endl, std::vector, std::list, std::ostream, std::ostream_iterator;; 29 ; 30namespace ROOT {; 31 ; 32 namespace Fit {; 33 ; 34 //This class is a helper. It represents a bin in N; 35 //dimensions. The change in the name is to avoid name collision.; 36 class Box; 37 {; 38 public:; 39 // Creates a Box with limits specified by the vectors and; 40 // content=value and error=error; 41 Box(const vector<double>& min, const vector<double>& max,; 42 const double value = 0.0, const double error = 1.0):; 43 fMin(min), fMax(max), fVal(value), fError(error); 44 { }; 45 ; 46 // Compares to Boxes to see if they are equal in all its; 47 // variables. This is to be used by the std::find algorithm; 48 bool operator==(const Box& b); 49 { return (fMin == b.fMin) && (fMax == b.fMax); 50 && (fVal == b.fVal) && (fError == b.fError); }; 51 ; 52 // Get the list of minimum coordinates; 53 const vector<double>& GetMin() const { return fMin; }; 54 // Get the list of maximum coordinates; 55 const vector<double>& GetMax() const { return fMax; }; 56 // Get the value of the Box; 57 double GetVal() const { return fVal; }; 58 // Get the error of the Box; 59 double GetError",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SparseData_8cxx_source.html:84,Guid,Guide,84,doc/master/SparseData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SparseData_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/SpecFuncCephes.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SpecFuncCephes.cxx. Go to the documentation of this file. 1//; 2//; 3// gamma and related functions from Cephes library; 4// see: http://www.netlib.org/cephes; 5//; 6// Copyright 1985, 1987, 2000 by Stephen L. Moshier; 7//; 8//; 9 ; 10#include ""SpecFuncCephes.h""; 11#include ""Math/Math.h""; 12 ; 13 ; 14#include <cmath>; 15 ; 16#include <limits>; 17 ; 18 ; 19 ; 20namespace ROOT {; 21namespace Math {; 22 ; 23namespace Cephes {; 24 ; 25 ; 26static double kBig = 4.503599627370496e15;; 27static double kBiginv = 2.22044604925031308085e-16;; 28 ; 29/* log( sqrt( 2*pi ) ) */; 30static double LS2PI = 0.91893853320467274178;; 31 ; 32 ; 33// incomplete gamma function (complement integral); 34// igamc(a,x) = 1 - igam(a,x); 35//; 36// inf.; 37// -; 38// 1 | | -t a-1; 39// = ----- | e t dt.; 40// - | |; 41// | (a) -; 42// x; 43//; 44//; 45 ; 46// In this implementation both arguments must be positive.; 47// The integral is evaluated by either a power series or; 48// continued fraction expansion, depending on the relative; 49// values of a and x.; 50 ; 51double igamc( double a, double x ); 52{; 53 ; 54 double ans, ax, c, yc, r, t, y, z;; 55 double pk, pkm1, pkm2, qk, qkm1, qkm2;; 56 ; 57 // LM: for negative values returns 0.0; 58 // This is correct if a is a negative integer since Gamma(-n) = +/- inf; 59 if (a <= 0) return 0.0;; 60 ; 61 if (x <= 0) return 1.0;; 62 ; 63 if( (x < 1.0) || (x < a) ); 64 return( 1.0 - igam(a,x) );; 65 ; 66 ax = a * std::log(x) - x - lgam(a);; 67 if( ax < -kMAXLOG ); 68 return( 0.0 );; 69 ; 70 ax = std::exp(ax);; 71 ; 72/* continued fraction */; 73 y = 1.0 - a;; 74 z = x + y + 1.0;; 75 c = 0.0;; 76 pkm2 = 1.0;; 77 qkm2 = x;; 78 pkm1 = x + 1.0;; 79 qkm1 = z * x;; 80 ans = pkm1/qkm1;; 81 ; 82 do; 83 {; 84 c += 1.0;; 85 y += 1.0;; 86 z += 2.0;; 87 yc = y * c;; 88 pk = pkm1 * z - pkm2 * yc;; 89 qk = qkm1 * z - qkm2 * yc;; 9",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SpecFuncCephes_8cxx_source.html:88,Guid,Guide,88,doc/master/SpecFuncCephes_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SpecFuncCephes_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/SpecFuncMathCore.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros ; SpecFuncMathCore.cxx File Reference. #include ""SpecFuncCephes.h""; #include <cmath>; #include <limits>. Include dependency graph for SpecFuncMathCore.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Math;  . Macros; #define PI   3.14159265358979323846264338328 /* pi */;  ; #define USE_CEPHES;  . Functions; Special Functions from MathCore; double ROOT::Math::beta (double x, double y);  Calculates the beta function. ;  ; double ROOT::Math::cosint (double x);  Calculates the real part of the cosine integral Re(Ci). ;  ; double ROOT::Math::erf (double x);  Error function encountered in integrating the normal distribution. ;  ; double ROOT::Math::erfc (double x);  Complementary error function. ;  ; double ROOT::Math::inc_beta (double x, double a, double b);  Calculates the normalized (regularized) incomplete beta function. ;  ; double ROOT::Math::inc_gamma (double a, double x);  Calculates the normalized (regularized) lower incomplete gamma function (lower integral) ;  ; double ROOT::Math::inc_gamma_c (double a, double x);  Calculates the normalized (regularized) upper incomplete gamma function (upper integral) ;  ; double ROOT::Math::lgamma (double x);  Calculates the logarithm of the gamma function. ;  ; double ROOT::Math::sinint (double x);  Calculates the sine integral. ;  ; double ROOT::Math::tgamma (double x);  The gamma function is defined to be the extension of the factorial to real numbers. ;  . Macro Definition Documentation. ◆ PI. #define PI   3.14159265358979323846264338328 /* pi */. Definition at line 23 of file SpecFuncMathCore.cxx. ◆ USE_CEPHES. #d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SpecFuncMathCore_8cxx.html:93,Guid,Guide,93,doc/master/SpecFuncMathCore_8cxx.html,https://root.cern,https://root.cern/doc/master/SpecFuncMathCore_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/SpecFuncMathCore.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SpecFuncMathCore.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: Andras Zsenei & Lorenzo Moneta 06/2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#if defined(__sun) || defined(__sgi) || defined(_WIN32) || defined(_AIX); 12#define NOT_HAVE_TGAMMA; 13#endif; 14 ; 15 ; 16#include ""SpecFuncCephes.h""; 17 ; 18 ; 19#include <cmath>; 20#include <limits>; 21 ; 22#ifndef PI; 23#define PI 3.14159265358979323846264338328 /* pi */; 24#endif; 25 ; 26// use cephes for functions which are also in C99; 27#define USE_CEPHES; 28 ; 29// platforms not implemening C99; 30// #if defined(__sun) || defined(__sgi) || defined(_WIN32) || defined(_AIX); 31// #define USE_CEPHES; 32// #endif; 33 ; 34 ; 35namespace ROOT {; 36namespace Math {; 37 ; 38 ; 39 ; 40 ; 41 ; 42// (26.x.21.2) complementary error function; 43 ; 44double erfc(double x) {; 45 ; 46 ; 47#ifdef USE_CEPHES; 48 // use cephes implementation; 49 return ROOT::Math::Cephes::erfc(x);; 50#else; 51 return ::erfc(x);; 52#endif; 53 ; 54}; 55 ; 56 ; 57// (26.x.21.1) error function; 58 ; 59double erf(double x) {; 60 ; 61 ; 62#ifdef USE_CEPHES; 63 return ROOT::Math::Cephes::erf(x);; 64#else; 65 return ::erf(x);; 66#endif; 67 ; 68 ; 69}; 70 ; 71 ; 72 ; 73 ; 74double lgamma(double z) {; 75 ; 76#ifdef USE_CEPHES; 77 return ROOT::Math::Cephes::lgam(z);; 78#else; 79 return ::lgamma(z);; 80#endif; 81 ; 82}; 83 ; 84 ; 85 ; 86 ; 87// (26.x.18) gamma function; 88 ; 89double tgamma(double x) {; 90 ; 91#ifdef USE_CEPHES; 92 return ROOT::Math::Cephes::gamma(x);; 93#else; 94 return ::tgamma(x);; 95#endif; 96 ; 97}; 98 ; 99double inc_gamma( double a, double x) {; 100 return ROOT::Math::Cephes::iga",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SpecFuncMathCore_8cxx_source.html:90,Guid,Guide,90,doc/master/SpecFuncMathCore_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SpecFuncMathCore_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/TMath.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMath.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: Rene Brun, Anna Kreshuk, Eddy Offermann, Fons Rademakers 29/07/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12////////////////////////////////////////////////////////////////////////////////; 13// TMath; 14//; 15// Encapsulate math routines.; 16 ; 17#include ""TMath.h""; 18#include ""TError.h""; 19#include <cmath>; 20#include <cstring>; 21#include <algorithm>; 22#include <iostream>; 23#include ""TString.h""; 24 ; 25#include <Math/SpecFuncMathCore.h>; 26#include <Math/PdfFuncMathCore.h>; 27#include <Math/ProbFuncMathCore.h>; 28 ; 29//const Double_t; 30// TMath::Pi = 3.14159265358979323846,; 31// TMath::E = 2.7182818284590452354;; 32 ; 33 ; 34// Without this macro the THtml doc for TMath can not be generated; 35#if !defined(R__SOLARIS) && !defined(R__ACC) && !defined(R__FBSD); 36NamespaceImp(TMath); 37#endif; 38 ; 39namespace TMath {; 40 ; 41 Double_t GamCf(Double_t a,Double_t x);; 42 Double_t GamSer(Double_t a,Double_t x);; 43 Double_t VavilovDenEval(Double_t rlam, Double_t *AC, Double_t *HC, Int_t itype);; 44 void VavilovSet(Double_t rkappa, Double_t beta2, Bool_t mode, Double_t *WCM, Double_t *AC, Double_t *HC, Int_t &itype, Int_t &npt);; 45 ; 46}; 47 ; 48////////////////////////////////////////////////////////////////////////////////; 49/// Returns `sqrt(x*x + y*y)`; 50 ; 51Long_t TMath::Hypot(Long_t x, Long_t y); 52{; 53 return (Long_t) (hypot((Double_t)x, (Double_t)y) + 0.5);; 54}; 55 ; 56///////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:79,Guid,Guide,79,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/TRandom.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Rene Brun, Lorenzo Moneta 15/12/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13 ; 14\class TRandom; 15 ; 16@ingroup Random; 17 ; 18This is the base class for the ROOT Random number generators.; 19This class defines the ROOT Random number interface and it should not be instantiated directly but used via its derived; 20classes. The generator provided in TRandom itself is a LCG (Linear Congruential Generator), the <a; 21href=""https://www.gnu.org/software/gsl/manual/html_node/Unix-random-number-generators.html"">BSD `rand` generator</a>,; 22that it should not be used because its period is only 2**31, i.e. approximately 2 billion events, that can be generated; 23in just few seconds.; 24 ; 25To generate random numbers, one should use one of the derived classes, which are:; 26- TRandom3: it is based on the ""Mersenne Twister generator"",; 27it is fast and a very long period of about \f$10^{6000}\f$. However it fails some of the most stringent tests of the; 28<a href=""http://simul.iro.umontreal.ca/testu01/tu01.html"">TestU01 suite</a>.; 29In addition this generator provide only numbers with 32 random bits, which might be not sufficient for some application; 30based on double or extended precision. This generator is however used in ROOT used to instantiate the global pointer to; 31the ROOT generator, *gRandom*.; 32- ::TRandomRanluxpp : New implementation of the Ranlux generator algorithm based on a fast modular multiplic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8cxx_source.html:81,Guid,Guide,81,doc/master/TRandom_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/TRandom3.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom3.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Peter Malzacher 31/08/99; 3 ; 4/**; 5 ; 6\class TRandom3; 7 ; 8Random number generator class based on; 9 M. Matsumoto and T. Nishimura,; 10 Mersenne Twister: A 623-diminsionally equidistributed; 11 uniform pseudorandom number generator; 12 ACM Transactions on Modeling and Computer Simulation,; 13 Vol. 8, No. 1, January 1998, pp 3--30.; 14 ; 15For more information see the Mersenne Twister homepage; 16 [http://www.math.keio.ac.jp/~matumoto/emt.html]; 17 ; 18Advantage:; 19 ; 20- large period 2**19937 -1; 21- relatively fast (slightly slower than TRandom2 but much faster than TRandom1); 22 ; 23Drawback:; 24- a relative large internal state of 624 integers ; 25- generate only 32 random bits ; 26- not passing all the random generator tests. It fails some tests in TestU01; 27 (see [http://simul.iro.umontreal.ca/testu01/tu01.html]); 28 ; 29An altenativly excellent generator passing all tests of TestU01, having 61 random bits and ; 30fast as Mersenne and Twister is MIXMAX (TRandomMixMax). ; 31 ; 32@ingroup Random; 33 ; 34*/; 35 ; 36//////////////////////////////////////////////////////////////////////; 37// Aug.99 ROOT implementation based on CLHEP by P.Malzacher; 38//; 39// the original code contains the following copyright notice:; 40/* This library is free software; you can redistribute it and/or */; 41/* modify it under the terms of the GNU Library General Public */; 42/* License as published by the Free Software Foundation; either */; 43/* version 2 of the License, or (at your option) any later */; 44/* version. */; 45/* This library is distributed in the hope that it will be useful, */; 46/* but WITHOUT ANY WARRANTY; without even the implied warranty of */; 47/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. */; 48/* See the GNU Library Genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom3_8cxx_source.html:82,Guid,Guide,82,doc/master/TRandom3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom3_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathcore/src/UnBinData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. UnBinData.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:10:03 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class UnBinData; 12 ; 13#include ""Fit/UnBinData.h""; 14#include ""Math/Error.h""; 15 ; 16#include <cassert>; 17#include <cmath>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Fit {; 22 ; 23/// copy constructor; 24UnBinData::UnBinData(const UnBinData & rhs) :; 25 FitData(rhs),; 26 fWeighted(rhs.fWeighted); 27{}; 28 ; 29///assignment operator; 30UnBinData & UnBinData::operator= ( const UnBinData & rhs ); 31{; 32 FitData::operator=( rhs );; 33 fWeighted = rhs.fWeighted;; 34 return *this;; 35}; 36 ; 37 ; 38 } // end namespace Fit; 39 ; 40} // end namespace ROOT; 41 ; Error.h; UnBinData.h; ROOT::Fit::FitDataBase class for all the fit data types: Stores the coordinates and the DataOptions.Definition FitData.h:56; ROOT::Fit::FitData::operator=FitData & operator=(const FitData &rhs)Definition FitData.cxx:218; ROOT::Fit::UnBinDataClass describing the un-binned data sets (just x coordinates values) of any dimensions.Definition UnBinData.h:46; ROOT::Fit::UnBinData::operator=UnBinData & operator=(const UnBinData &)assignment operatorDefinition UnBinData.cxx:30; ROOT::Fit::UnBinData::fWeightedbool fWeightedDefinition UnBinData.h:293; ROOT::Fit::UnBinData::UnBinDataUnBinData(unsigned int maxpoints=0, unsigned int dim=1, bool isWeighted=false)constructor from dimension of point and max number of points (to pre-allocate vector)Definition UnBinData.h:54; HFit::FitTFitResultPtr Fit(FitObject *h1, TF1 *f1, Foption_t &option, const ROOT::Math::MinimizerOptions &moption, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/UnBinData_8cxx_source.html:83,Guid,Guide,83,doc/master/UnBinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/UnBinData_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/inc/Math/GSLFunctionAdapter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLFunctionAdapter.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLFunctionAdapter; 26//; 27// Generic adapter for gsl_function signature; 28// usable for any c++ class which defines operator( ); 29//; 30// Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; 31//; 32// Last update: Fri Nov 12 16:58:51 2004; 33//; 34#ifndef ROOT_Math_GSLFunctionAdapter; 35#define ROOT_Math_GSLFunctionAdapter; 36 ; 37 ; 38namespace ROOT {; 39namespace Math {; 40 ; 41 /**; 42 Function pointer corresponding to gsl_function signature; 43 */; 44 ; 45 typedef double ( * GSLFuncPointer ) ( double, void *);; 46 ; 47 ; 48 /**; 49 Class for adapting any C++ functor class to C function pointers used by GSL.; 50 The ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLFunctionAdapter_8h_source.html:95,Guid,Guide,95,doc/master/GSLFunctionAdapter_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLFunctionAdapter_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/inc/Math/GSLMultiRootFinder.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiRootFinder.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta 03/2011; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLMultiRootFinder; 26//; 27 ; 28#ifndef ROOT_Math_GSLMultiRootFinder; 29#define ROOT_Math_GSLMultiRootFinder; 30 ; 31 ; 32 ; 33#include ""Math/IFunction.h""; 34 ; 35#include ""Math/WrappedFunction.h""; 36 ; 37#include <vector>; 38#include <utility>; 39#include <iostream>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44 ; 45 class GSLMultiRootBaseSolver;; 46 ; 47 /** @defgroup MultiRoot Multidimensional ROOT finding; 48 Classes for finding the roots of a multi-dimensional system.; 49 @ingroup NumAlgo; 50 */; 51 ; 52 /**; 53 Class for Multidimensional root finding algorithms bassed on GSL. This class is used to solve a; 54 non-linear system",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFinder_8h_source.html:95,Guid,Guide,95,doc/master/GSLMultiRootFinder_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFinder_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/inc/Math/GSLRandom.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLRandom.h. Go to the documentation of this file. 1#ifndef ROOT_Math_GSLRandom; 2#define ROOT_Math_GSLRandom; 3 ; 4#include ""Math/Random.h""; 5#include ""Math/GSLRndmEngines.h""; 6 ; 7namespace ROOT {; 8namespace Math {; 9 ; 10 ; 11 typedef Random<ROOT::Math::GSLRngMT> RandomMT;; 12 typedef Random<ROOT::Math::GSLRngTaus> RandomTaus;; 13 typedef Random<ROOT::Math::GSLRngRanLux> RandomRanLux;; 14 typedef Random<ROOT::Math::GSLRngGFSR4> RandomGFSR4;; 15 ; 16 ; 17} // namespace Math; 18} // namespace ROOT; 19 ; 20#endif; GSLRndmEngines.h; Random.h; ROOT::Math::RandomDocumentation for the Random class.Definition Random.h:43; MathNamespace for new Math classes and functions.; ROOT::Math::RandomMTRandom< ROOT::Math::GSLRngMT > RandomMTDefinition GSLRandom.h:11; ROOT::Math::RandomRanLuxRandom< ROOT::Math::GSLRngRanLux > RandomRanLuxDefinition GSLRandom.h:13; ROOT::Math::RandomGFSR4Random< ROOT::Math::GSLRngGFSR4 > RandomGFSR4Definition GSLRandom.h:14; ROOT::Math::RandomTausRandom< ROOT::Math::GSLRngTaus > RandomTausDefinition GSLRandom.h:12; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. mathmathmoreincMathGSLRandom.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLRandom_8h_source.html:86,Guid,Guide,86,doc/master/GSLRandom_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLRandom_8h_source.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/inc/Math/GSLRndmEngines.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLRndmEngines.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLRandom; 26//; 27// Created by: moneta at Sun Nov 21 16:26:03 2004; 28//; 29// Last update: Sun Nov 21 16:26:03 2004; 30//; 31#ifndef ROOT_Math_GSLRndmEngines; 32#define ROOT_Math_GSLRndmEngines; 33 ; 34#include <string>; 35#include <vector>; 36 ; 37 ; 38namespace ROOT {; 39namespace Math {; 40 ; 41 ; 42 class GSLRngWrapper;; 43 class GSLMCIntegrator;; 44 ; 45 //_________________________________________________________________; 46 /**; 47 GSLRandomEngine; 48 Base class for all GSL random engines,; 49 normally user instantiate the derived classes; 50 which creates internally the generator.; 51 ; 52 The main GSL generators (see; 53 <A HR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLRndmEngines_8h_source.html:91,Guid,Guide,91,doc/master/GSLRndmEngines_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLRndmEngines_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/inc/Math/PdfFuncMathMore.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PdfFuncMathMore.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25 ; 26#ifndef ROOT_Math_PdfFuncMathMore; 27#define ROOT_Math_PdfFuncMathMore; 28 ; 29namespace ROOT {; 30 namespace Math {; 31 ; 32 ; 33 /**; 34 ; 35 Probability density function of the non central \f$\chi^2\f$ distribution with \f$r\f$; 36 degrees of freedom and the noon-central parameter \f$\lambda\f$; 37 ; 38 \f[ p_r(x) = \frac{1}{\Gamma(r/2) 2^{r/2}} x^{r/2-1} e^{-x/2} \f]; 39 ; 40 for \f$x \geq 0\f$.; 41 For detailed description see; 42 <A HREF=""http://mathworld.wolfram.com/NoncentralChi-SquaredDistribution.html"">; 43 Mathworld</A>.; 44 ; 45 @ingroup PdfFunc; 46 ; 47 */; 48 ; 49 double noncentral_chisquared_pdf(double x, double r, double lambda);; 50 ; 51",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PdfFuncMathMore_8h_source.html:92,Guid,Guide,92,doc/master/PdfFuncMathMore_8h_source.html,https://root.cern,https://root.cern/doc/master/PdfFuncMathMore_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/inc/Math/QuasiRandom.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. QuasiRandom.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLRandom; 26//; 27// Created by: moneta at Sun Nov 21 16:26:03 2004; 28//; 29// Last update: Sun Nov 21 16:26:03 2004; 30//; 31#ifndef ROOT_Math_QuasiRandom; 32#define ROOT_Math_QuasiRandom; 33 ; 34#include <string>; 35 ; 36/**; 37 @defgroup QuasiRandom QuasiRandom number generators and distributions; 38 Classes for generating QuasiRandom numbers and based on GSL ; 39 @ingroup Random; 40 @ingroup MathMore; 41*/; 42 ; 43 ; 44 ; 45namespace ROOT {; 46namespace Math {; 47 ; 48 ; 49//_____________________________________________________________________________________; 50/**; 51 User class for MathMore random numbers template on the Engine type.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/QuasiRandom_8h_source.html:88,Guid,Guide,88,doc/master/QuasiRandom_8h_source.html,https://root.cern,https://root.cern/doc/master/QuasiRandom_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/src/GSLFunctionWrapper.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLFunctionWrapper.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLFunctionWrapper; 32#define ROOT_Math_GSLFunctionWrapper; 33 ; 34#include ""gsl/gsl_math.h""; 35 ; 36#include ""Math/GSLFunctionAdapter.h""; 37 ; 38#include <cassert>; 39 ; 40namespace ROOT {; 41namespace Math {; 42 ; 43 ; 44 ; 45typedef double ( * GSLFuncPointer ) ( double, void *);; 46typedef void ( * GSLFdfPointer ) ( double, void *, double *, double *);; 47 ; 48 ; 49/**; 50 Wrapper class to the gsl_function C structure.; 51 This class to fill the GSL C structure gsl_function with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLFunctionWrapper_8h_source.html:90,Guid,Guide,90,doc/master/GSLFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLFunctionWrapper_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/src/GSLMCIntegrationWorkspace.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; GSLMCIntegrationWorkspace.h File Reference. #include ""gsl/gsl_math.h""; #include ""gsl/gsl_monte.h""; #include ""gsl/gsl_monte_vegas.h""; #include ""gsl/gsl_monte_miser.h""; #include ""gsl/gsl_monte_plain.h""; #include ""Math/MCParameters.h""; #include ""Math/MCIntegrationTypes.h"". Include dependency graph for GSLMCIntegrationWorkspace.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Math::GSLMCIntegrationWorkspace;  ; class  ROOT::Math::GSLMiserIntegrationWorkspace;  Workspace for MISER. More...;  ; class  ROOT::Math::GSLPlainIntegrationWorkspace;  ; class  ROOT::Math::GSLVegasIntegrationWorkspace;  workspace for VEGAS More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Math;  . mathmathmoresrcGSLMCIntegrationWorkspace.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMCIntegrationWorkspace_8h.html:100,Guid,Guide,100,doc/master/GSLMCIntegrationWorkspace_8h.html,https://root.cern,https://root.cern/doc/master/GSLMCIntegrationWorkspace_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/src/GSLMultiFitFunctionWrapper.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiFitFunctionWrapper.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta Dec 2006; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLMultiMinFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLMultiFitFunctionWrapper; 32#define ROOT_Math_GSLMultiFitFunctionWrapper; 33 ; 34#include ""gsl/gsl_multifit.h""; 35 ; 36#include ""GSLMultiFitFunctionAdapter.h""; 37 ; 38 ; 39#include <cassert>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44 ; 45 ; 46 typedef double ( * GSLMultiFitFPointer ) ( const gsl_vector *, void *, gsl_vector *);; 47 typedef void ( * GSLMultiFitDfPointer ) ( const gsl_vector *, void *, gsl_matrix *);; 48 typedef void ( * GSLMultiFitFdfPoint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiFitFunctionWrapper_8h_source.html:98,Guid,Guide,98,doc/master/GSLMultiFitFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiFitFunctionWrapper_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/src/GSLMultiMinFunctionWrapper.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiMinFunctionWrapper.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, 12/2006; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLMultiMinFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLMultiMinFunctionWrapper; 32#define ROOT_Math_GSLMultiMinFunctionWrapper; 33 ; 34#include ""gsl/gsl_multimin.h""; 35 ; 36#include ""GSLMultiMinFunctionAdapter.h""; 37 ; 38 ; 39#include <cassert>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44 ; 45 ; 46 typedef double ( * GSLMultiMinFuncPointer ) ( const gsl_vector *, void *);; 47 typedef void ( * GSLMultiMinDfPointer ) ( const gsl_vector *, void *, gsl_vector *);; 48 typedef void ( * GSLMultiMinFdfPointer ) ( cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiMinFunctionWrapper_8h_source.html:98,Guid,Guide,98,doc/master/GSLMultiMinFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiMinFunctionWrapper_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/src/GSLMultiRootFinder.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiRootFinder.cxx. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Implementation file for class GSLMultiRootFinder; 26//; 27// Created by: moneta at Sun Nov 14 11:27:11 2004; 28//; 29// Last update: Sun Nov 14 11:27:11 2004; 30//; 31 ; 32#include ""Math/IFunction.h""; 33#include ""Math/GSLMultiRootFinder.h""; 34#include ""GSLMultiRootSolver.h""; 35#include ""Math/Error.h""; 36 ; 37#include ""gsl/gsl_multiroots.h""; 38#include ""gsl/gsl_errno.h""; 39#include <cmath>; 40#include <iomanip>; 41 ; 42#include <algorithm>; 43#include <functional>; 44#include <cctype> // need to use c version of tolower defined here; 45 ; 46 ; 47namespace ROOT {; 48namespace Math {; 49 ; 50 // default values; 51 ; 52 int gDefaultMaxIter = 100;; 53 doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFinder_8cxx_source.html:92,Guid,Guide,92,doc/master/GSLMultiRootFinder_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFinder_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/src/GSLMultiRootFunctionWrapper.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiRootFunctionWrapper.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta Dec 2006; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLMultiRootFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLMultiRootFunctionWrapper; 32#define ROOT_Math_GSLMultiRootFunctionWrapper; 33 ; 34#include ""gsl/gsl_multiroots.h""; 35 ; 36#include ""GSLMultiRootFunctionAdapter.h""; 37 ; 38 ; 39#include <cassert>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44 ; 45 ; 46// can re-use same type for multi-fit; 47 ; 48 typedef double ( * GSLMultiRootFPointer ) ( const gsl_vector *, void *, gsl_vector *);; 49 typedef void ( * GSLMultiRootDfPointer ) ( const gsl_vector *, void *,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFunctionWrapper_8h_source.html:99,Guid,Guide,99,doc/master/GSLMultiRootFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFunctionWrapper_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/mathmore/src/Vavilov.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vavilov.cxx. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: B. List 29.4.2010; 3 ; 4 ; 5 /**********************************************************************; 6 * *; 7 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 8 * *; 9 * This library is free software; you can redistribute it and/or *; 10 * modify it under the terms of the GNU General Public License *; 11 * as published by the Free Software Foundation; either version 2 *; 12 * of the License, or (at your option) any later version. *; 13 * *; 14 * This library is distributed in the hope that it will be useful, *; 15 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 16 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 17 * General Public License for more details. *; 18 * *; 19 * You should have received a copy of the GNU General Public License *; 20 * along with this library (see file COPYING); if not, write *; 21 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 22 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 23 * *; 24 **********************************************************************/; 25 ; 26// Implementation file for class Vavilov; 27//; 28// Created by: blist at Thu Apr 29 11:19:00 2010; 29//; 30// Last update: Thu Apr 29 11:19:00 2010; 31//; 32 ; 33 ; 34#include ""Math/Vavilov.h""; 35#include ""Math/VavilovAccurate.h""; 36#include ""Math/SpecFuncMathCore.h""; 37#include ""Math/SpecFuncMathMore.h""; 38 ; 39#include <cmath>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44static const double eu = 0.577215664901532860606; // Euler's constant; 45 ; 46Vavilov::Vavilov(); 47{; 48}; 49 ; 50Vavilov::~Vavilov(); 51{; 52 // destructor (clean up resources); 53}; 54 ; 55 ; 56double Vavilov::Mode() const {; 57 double x = -4.22784335098467134e-01-std::log(GetKappa())-GetBeta2();; 58 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vavilov_8cxx_source.html:81,Guid,Guide,81,doc/master/Vavilov_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Vavilov_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/matrix/inc/TMatrixDBasefwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TMatrixDBasefwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TMatrixDBasefwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TMatrixTBase< Double_t > TMatrixDBase;  . Typedef Documentation. ◆ TMatrixDBase. typedef TMatrixTBase<Double_t> TMatrixDBase. Definition at line 26 of file TMatrixDBasefwd.h. mathmatrixincTMatrixDBasefwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixDBasefwd_8h.html:88,Guid,Guide,88,doc/master/TMatrixDBasefwd_8h.html,https://root.cern,https://root.cern/doc/master/TMatrixDBasefwd_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/matrix/inc/TMatrixDSymfwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TMatrixDSymfwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TMatrixDSymfwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TMatrixTSym< Double_t > TMatrixDSym;  . Typedef Documentation. ◆ TMatrixDSym. typedef TMatrixTSym<Double_t> TMatrixDSym. Definition at line 23 of file TMatrixDSymfwd.h. mathmatrixincTMatrixDSymfwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixDSymfwd_8h.html:87,Guid,Guide,87,doc/master/TMatrixDSymfwd_8h.html,https://root.cern,https://root.cern/doc/master/TMatrixDSymfwd_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/matrix/inc/TMatrixFBasefwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TMatrixFBasefwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TMatrixFBasefwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TMatrixTBase< Float_t > TMatrixFBase;  . Typedef Documentation. ◆ TMatrixFBase. typedef TMatrixTBase<Float_t> TMatrixFBase. Definition at line 26 of file TMatrixFBasefwd.h. mathmatrixincTMatrixFBasefwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixFBasefwd_8h.html:88,Guid,Guide,88,doc/master/TMatrixFBasefwd_8h.html,https://root.cern,https://root.cern/doc/master/TMatrixFBasefwd_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/matrix/inc/TVectorDfwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TVectorDfwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TVectorDfwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TVectorT< Double_t > TVectorD;  . Typedef Documentation. ◆ TVectorD. typedef TVectorT<Double_t> TVectorD. Definition at line 23 of file TVectorDfwd.h. mathmatrixincTVectorDfwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVectorDfwd_8h.html:84,Guid,Guide,84,doc/master/TVectorDfwd_8h.html,https://root.cern,https://root.cern/doc/master/TVectorDfwd_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/matrix/inc/TVectorFfwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TVectorFfwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TVectorFfwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TVectorT< Float_t > TVectorF;  . Typedef Documentation. ◆ TVectorF. typedef TVectorT<Float_t> TVectorF. Definition at line 23 of file TVectorFfwd.h. mathmatrixincTVectorFfwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVectorFfwd_8h.html:84,Guid,Guide,84,doc/master/TVectorFfwd_8h.html,https://root.cern,https://root.cern/doc/master/TVectorFfwd_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/matrix/src/TMatrixT.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMatrixT.cxx. Go to the documentation of this file. 1// @(#)root/matrix:$Id$; 2// Authors: Fons Rademakers, Eddy Offermann Nov 2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TMatrixT; 13 \ingroup Matrix; 14 ; 15TMatrixT; 16 ; 17Template class of a general matrix in the linear algebra package; 18 ; 19See the \ref Matrix page for the documentation of the linear algebra package; 20 ; 21*/; 22 ; 23#include <typeinfo>; 24 ; 25#include ""TMatrixT.h""; 26#include ""TBuffer.h""; 27#include ""TMatrixTSym.h""; 28#include ""TMatrixTLazy.h""; 29#include ""TMatrixTCramerInv.h""; 30#include ""TDecompLU.h""; 31#include ""TMatrixDEigen.h""; 32#include ""TMath.h""; 33 ; 34templateClassImp(TMatrixT);; 35 ; 36////////////////////////////////////////////////////////////////////////////////; 37/// Constructor for (nrows x ncols) matrix; 38 ; 39template <class Element>; 40TMatrixT<Element>::TMatrixT(Int_t nrows, Int_t ncols); 41{; 42 Allocate(nrows, ncols, 0, 0, 1);; 43}; 44 ; 45////////////////////////////////////////////////////////////////////////////////; 46/// Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix; 47 ; 48template <class Element>; 49TMatrixT<Element>::TMatrixT(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); 50{; 51 Allocate(row_upb - row_lwb + 1, col_upb - col_lwb + 1, row_lwb, col_lwb, 1);; 52}; 53 ; 54////////////////////////////////////////////////////////////////////////////////; 55/// option=""F"": array elements contains the matrix stored column-wise; 56/// like in Fortran, so a[i,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixT_8cxx_source.html:80,Guid,Guide,80,doc/master/TMatrixT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMatrixT_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/minuit/inc/TMinuit.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TMinuit.h File Reference. #include ""TNamed.h""; #include ""TMethodCall.h"". Include dependency graph for TMinuit.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMinuit;  . Variables; R__EXTERN TMinuit * gMinuit;  . Variable Documentation. ◆ gMinuit. R__EXTERN TMinuit* gMinuit. Definition at line 271 of file TMinuit.h. mathminuitincTMinuit.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h.html:80,Guid,Guide,80,doc/master/TMinuit_8h.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: math/minuit/inc/TMinuit.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMinuit.h. Go to the documentation of this file. 1// @(#)root/minuit:$Id$; 2// Author: Rene Brun, Frederick James 12/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// TMinuit //; 15// //; 16// The MINUIT minimisation package (base class) //; 17// //; 18//////////////////////////////////////////////////////////////////////////; 19 ; 20#ifndef ROOT_TMinuit; 21#define ROOT_TMinuit; 22 ; 23#include ""TNamed.h""; 24 ; 25#include ""TMethodCall.h""; 26 ; 27class TMinuit : public TNamed {; 28 ; 29private:; 30 TMinuit(const TMinuit &m);; 31 TMinuit& operator=(const TMinuit &m); // Not implemented; 32 ; 33// should become private....; 34public:; 35 enum{kMAXWARN=100};; 36 ; 37 Int_t fNpfix; //Number of fixed parameters; 38 Int_t fEmpty; //Initialization flag (1 = Minuit initialized); 39 Int_t fMaxpar; //Maximum number of parameters; 40 Int_t fMaxint; //Maximum number of internal parameters; 41 Int_t fNpar; //Number of free parameters (total number of pars = fNpar + fNfix); 42 Int_t fMaxext; //Maximum number of external parameters; 43 Int_t fMaxIterations; //Maximum number of iterations; 44 Int_t fMaxpar5; // fMaxpar*(fMaxpar+1)/2; 45 Int_t fMaxcpt;; 46 Int_t fMaxpar2; // fMaxpar*fMaxpar; 47 Int_t fMaxpar1; // fMaxpar*(fMaxpar+1); 48 ; 49 Double_t fAmin; //Minimum value found for FCN; 50 Double_t fUp; //FCN+-UP defines errors (for chisquare fits UP=1); 51 Double_t fEDM; //Estimated vertical distance to the minimum; 52 Double_t fFval3;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h_source.html:77,Guid,Guide,77,doc/master/TMinuit_8h_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/minuit/src/TMinuit.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMinuit.cxx. Go to the documentation of this file. 1// @(#)root/minuit:$Id$; 2// Author: Rene Brun, Frederick James 12/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13/*! \class TMinuit; 14\see Minuit2 for a newer version of this package; 15\ingroup MinuitOld; 16 ; 17Implementation in C++ of the Minuit package written by Fred James.; 18This is a straightforward conversion of the original Fortran version.; 19 ; 20The main changes are:; 21 ; 22 - The variables in the various Minuit labelled common blocks; 23 have been changed to the TMinuit class data members.; 24 ; 25 - The internal arrays with a maximum dimension depending on the; 26 maximum number of parameters are now data members arrays with; 27 a dynamic dimension such that one can fit very large problems; 28 by simply initialising the TMinuit constructor with the maximum; 29 number of parameters.; 30 ; 31 - The include file Minuit.h has been commented as much as possible; 32 using existing comments in the code or the printed documentation; 33 ; 34 - The original Minuit subroutines are now member functions.; 35 ; 36 - Constructors and destructor have been added.; 37 ; 38 - Instead of passing the FCN function in the argument; 39 list, the addresses of this function is stored as pointer; 40 in the data members of the class. This is by far more elegant; 41 and flexible in an interactive environment.; 42 The member function SetFCN can be used to define this pointer.; 43 ; 44 - The ROOT static function Printf is provided to replace all; 45 format sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:79,Guid,Guide,79,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/rtools/src/RMinimizer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RMinimizer.cxx. Go to the documentation of this file. 1 ; 2#include ""TRInterface.h""; 3#include ""Math/RMinimizer.h""; 4#include ""Math/IFunction.h""; 5#include <TVectorD.h>; 6#include ""Math/BasicMinimizer.h""; 7 ; 8namespace ROOT {; 9 namespace Math{; 10 ; 11 /// function wrapper for the function to be minimized; 12 const ROOT::Math::IMultiGenFunction *gFunction;; 13 /// function wrapper for the gradient of the function to be minimized; 14 const ROOT::Math::IMultiGradFunction *gGradFunction;; 15 /// integer for the number of function calls; 16 int gNCalls = 0; ; 17 ; 18 ///function to return the function values at point x; 19 double minfunction(const std::vector<double> & x){; 20 gNCalls++;; 21 //return (*gFunction)(x.GetMatrixArray());; 22 return (*gFunction)(x.data());; 23 }; 24 ///function to return the gradient values at point y; 25 TVectorD mingradfunction(TVectorD y){; 26 unsigned int size = y.GetNoElements();; 27 const double * yy = y.GetMatrixArray();; 28 double z[size];; 29 gGradFunction->Gradient(yy,z);; 30 TVectorD zz(size,z);; 31 return zz;; 32 }; 33 ; 34 /*Default constructor with option for the method of minimization, can be any of the following:; 35 *; 36 *""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"", ""Brent"" (Brent only for 1D minimization); 37 */; 38 RMinimizer::RMinimizer(Option_t *method){; 39 fMethod=method;; 40 if (fMethod.empty() || fMethod==""Migrad"") fMethod=""BFGS""; ; 41 }; 42 ; 43 ///returns number of function calls; 44 unsigned int RMinimizer::NCalls() const { return gNCalls; }; 45 ; 46 ///function for finding the minimum; 47 bool RMinimizer::Minimize() {; 48 ; 49 //Set the functions; 50 (gFunction)= ObjFunction();; 51 (gGradFunction) = GradObjFunction();; 52 ; 53 gNCalls = 0; ; 54 ; 55 //pass functions and variables to R; 56 ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; 57 ; 58 r[""minfunction""] = ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RMinimizer_8cxx_source.html:82,Guid,Guide,82,doc/master/RMinimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RMinimizer_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/BinaryOperators.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BinaryOperators.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_BinaryOperators; 5#define ROOT_Math_BinaryOperators; 6//======================================================; 7//; 8// ATTENTION: This file was automatically generated,; 9// do not edit!; 10//; 11// author: Thorsten Glebe; 12// HERA-B Collaboration; 13// Max-Planck-Institut fuer Kernphysik; 14// Saupfercheckweg 1; 15// 69117 Heidelberg; 16// Germany; 17// E-mail: T.Glebe@mpi-hd.mpg.de; 18//; 19//======================================================; 20 ; 21#include ""Math/BinaryOpPolicy.h""; 22#include ""Math/Expression.h""; 23 ; 24namespace ROOT {; 25 ; 26 namespace Math {; 27 ; 28 ; 29 ; 30template <class T, unsigned int D> class SVector;; 31template <class T, unsigned int D1, unsigned int D2, class R> class SMatrix;; 32 ; 33 ; 34//==============================================================================; 35// AddOp; 36//==============================================================================; 37/**; 38 Addition Operation Class; 39 ; 40 @ingroup Expression; 41 */; 42template <class T>; 43class AddOp {; 44public:; 45 static inline T apply(const T& lhs, const T& rhs) {; 46 return lhs + rhs;; 47 }; 48};; 49 ; 50 ; 51/**; 52 Addition of two vectors v3 = v1+v2; 53 returning a vector expression; 54 ; 55 @ingroup VectFunction; 56*/; 57//==============================================================================; 58// operator+ (SVector, binary); 59//==============================================================================; 60template < class T, unsigned int D>; 61inline VecExpr<BinaryOp<AddOp<T>, SVector<T,D>, SVector<T,D>, T>, T, D>; 62 operator+(const SVector<T,D>& lhs, const SVector<T,D>& rhs) {; 63 typedef BinaryOp<AddOp<T>, SVector<T,D>, SVector<T,D>, T> AddOpBinOp;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinaryOperators_8h_source.html:91,Guid,Guide,91,doc/master/BinaryOperators_8h_source.html,https://root.cern,https://root.cern/doc/master/BinaryOperators_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/Dfactir.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Dfactir.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_Dfactir; 5#define ROOT_Math_Dfactir; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 02. Apr 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Determinant of a square matrix, needed for Dfinv(); 23// Code was taken from CERNLIB::kernlib dfact function, translated; 24// from FORTRAN to C++ and optimized.; 25//; 26// changes:; 27// 02 Apr 2001 (TG) creation; 28//; 29// ********************************************************************; 30 ; 31#include <cmath>; 32 ; 33namespace ROOT {; 34 ; 35 namespace Math {; 36 ; 37 ; 38/** Dfactir.; 39 Function to compute the determinant from a square matrix, Det(A) of; 40 dimension idim and order n. A working area ir is returned which is; 41 needed by the Dfinv routine.; 42 ; 43 @author T. Glebe; 44*/; 45template <class Matrix, unsigned int n, unsigned int idim>; 46bool Dfactir(Matrix& rhs, typename Matrix::value_type& det, unsigned int* ir); 47 // int *n, float *a, int *idim, int *ir, int *ifail, float *det, int *jfail); 48{; 49 ; 50#ifdef XXX; 51 if (idim < n || n <= 0) {; 52 return false;; 53 }; 54#endif; 55 ; 56 ; 57 /* Initialized data */; 58 typename Matrix::value_type* a = rhs.Array();; 59 ; 60 /* Local variables */; 61 unsigned int nxch, i, j, k, l;; 62 typename Matrix::value_type p, q, tf;; 63 ; 64 /* Parameter adjustments */; 65 a -= idim + 1;; 66 --ir;; 67 ; 68 /* Function Body */; 69 ; 70 // fact.inc; 71 nxch = 0;; 72 det = 1.;; 73 for (j = 1; j <= n; ++j) {; 74 const unsigned int j",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Dfactir_8h_source.html:83,Guid,Guide,83,doc/master/Dfactir_8h_source.html,https://root.cern,https://root.cern/doc/master/Dfactir_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/Dfinv.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Dfinv.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_Dfinv; 5#define ROOT_Math_Dfinv; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 03. Apr 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Matrix inversion; 23// Code was taken from CERNLIB::kernlib dfinv function, translated; 24// from FORTRAN to C++ and optimized.; 25//; 26// changes:; 27// 03 Apr 2001 (TG) creation; 28//; 29// ********************************************************************; 30 ; 31 ; 32namespace ROOT {; 33 ; 34 namespace Math {; 35 ; 36 ; 37 ; 38 ; 39/** Dfinv.; 40 Function to compute the inverse of a square matrix (\f$A^{-1}\f$) of; 41 dimension \f$idim\f$ and order \f$n\f$. The routine Dfactir must be called; 42 before Dfinv!; 43 ; 44 @author T. Glebe; 45*/; 46template <class Matrix, unsigned int n, unsigned int idim>; 47bool Dfinv(Matrix& rhs, unsigned int* ir) {; 48#ifdef XXX; 49 if (idim < n || n <= 0 || n==1) {; 50 return false;; 51 }; 52#endif; 53 ; 54 typename Matrix::value_type* a = rhs.Array();; 55 ; 56 /* Local variables */; 57 unsigned int nxch, i, j, k, m, ij;; 58 unsigned int im2, nm1, nmi;; 59 typename Matrix::value_type s31, s34, ti;; 60 ; 61 /* Parameter adjustments */; 62 a -= idim + 1;; 63 --ir;; 64 ; 65 /* Function Body */; 66 ; 67 /* finv.inc */; 68 ; 69 a[idim + 2] = -a[(idim << 1) + 2] * (a[idim + 1] * a[idim + 2]);; 70 a[(idim << 1) + 1] = -a[(idim << 1) + 1];; 71 ; 72 if (n != 2) {; 73 for (i = 3; i <= n; ++i) {; 74 const unsigned int ii = i * idim;; 75 const unsigned int iii = i + ii;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Dfinv_8h_source.html:81,Guid,Guide,81,doc/master/Dfinv_8h_source.html,https://root.cern,https://root.cern/doc/master/Dfinv_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/Expression.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Expression.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_Expression; 5#define ROOT_Math_Expression; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 19. Mar 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Expression Template Elements for SVector; 23//; 24// changes:; 25// 19 Mar 2001 (TG) creation; 26// 20 Mar 2001 (TG) added rows(), cols() to Expr; 27// 21 Mar 2001 (TG) added Expr::value_type; 28// 11 Apr 2001 (TG) rows(), cols() replaced by rows, cols; 29// 10 Okt 2001 (TG) added print() and operator<<() for Expr class; 30//; 31// ********************************************************************; 32 ; 33/**; 34\defgroup Expression Expression Template Classes; 35\ingroup SMatrixGroup; 36*/; 37 ; 38//==============================================================================; 39// Expr: class representing SVector expressions; 40//=============================================================================; 41 ; 42// modified BinaryOp with two extension BinaryOpCopyL and BinaryOpCopyR to store the; 43// object in BinaryOp by value and not reference. When used with constant BinaryOp reference give problems; 44// on some compilers (like Windows) where a temporary Constant object is ccreated and then destructed; 45 ; 46 ; 47#include <iomanip>; 48#include <iostream>; 49 ; 50namespace ROOT {; 51 ; 52 namespace Math {; 53 ; 54 ; 55 ; 56// template <class T, unsigned int D, unsigned int D2> class MatRepStd;; 57 ; 58/**; 59 Expression wrapper class for Vector objects; 60 ; 61 @ingro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Expression_8h_source.html:86,Guid,Guide,86,doc/master/Expression_8h_source.html,https://root.cern,https://root.cern/doc/master/Expression_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/Functions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_Functions; 5#define ROOT_Math_Functions; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 16. Mar 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Functions which are not applied like a unary operator; 23//; 24// changes:; 25// 16 Mar 2001 (TG) creation; 26// 03 Apr 2001 (TG) minimum added, doc++ comments added; 27// 07 Apr 2001 (TG) Lmag2, Lmag added; 28// 19 Apr 2001 (TG) added #include <cmath>; 29// 24 Apr 2001 (TG) added sign(); 30// 26 Jul 2001 (TG) round() added; 31// 27 Sep 2001 (TG) added Expr declaration; 32//; 33// ********************************************************************; 34#include <cmath>; 35 ; 36#include ""Math/Expression.h""; 37 ; 38/**; 39\defgroup TempFunction Generic Template Functions; 40\ingroup SMatrixGroup; 41 ; 42 These functions apply for any type T, such as a scalar, a vector or a matrix.; 43*/; 44 ; 45/**; 46\defgroup VectFunction Vector Template Functions; 47\ingroup SMatrixGroup; 48 ; 49These functions apply to SVector types (and also to Vector expressions) and can; 50return a vector expression or; 51a scalar, like in the Dot product, or a matrix, like in the Tensor product; 52*/; 53 ; 54 ; 55namespace ROOT {; 56 ; 57 namespace Math {; 58 ; 59 ; 60 ; 61template <class T, unsigned int D> class SVector;; 62 ; 63 ; 64/** square; 65 Template function to compute \f$x\cdot x \f$, for any type T returning a type T; 66 ; 67 @ingroup TempFunction; 68 @author T. Glebe; 69*/; 70//======================",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/math_2smatrix_2inc_2Math_2Functions_8h_source.html:85,Guid,Guide,85,doc/master/math_2smatrix_2inc_2Math_2Functions_8h_source.html,https://root.cern,https://root.cern/doc/master/math_2smatrix_2inc_2Math_2Functions_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/MatrixFunctions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MatrixFunctions.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_MatrixFunctions; 5#define ROOT_Math_MatrixFunctions; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 20. Mar 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Functions/Operators special to Matrix; 23//; 24// changes:; 25// 20 Mar 2001 (TG) creation; 26// 20 Mar 2001 (TG) Added Matrix * Vector multiplication; 27// 21 Mar 2001 (TG) Added transpose, product; 28// 11 Apr 2001 (TG) transpose() speed improvement by removing rows(), cols(); 29// through static members of Matrix and Expr class; 30//; 31// ********************************************************************; 32 ; 33 ; 34/**; 35\defgroup MatrixFunctions Matrix Template Functions; 36\ingroup SMatrixGroup; 37 ; 38These function apply to matrices (and also Matrix expression) and can return a; 39matrix expression of a particular defined type, like in the matrix multiplication or; 40a vector, like in the matrix-vector product or a scalar like in the Similarity; 41vector-matrix product.; 42 ; 43*/; 44 ; 45#include ""Math/BinaryOpPolicy.h""; 46#include ""Math/Expression.h""; 47#include ""Math/HelperOps.h""; 48#include ""Math/CholeskyDecomp.h""; 49 ; 50namespace ROOT {; 51 ; 52 namespace Math {; 53 ; 54 template <class T, unsigned int D>; 55 class SVector;; 56 ; 57#ifdef XXX; 58//==============================================================================; 59// SMatrix * SVector; 60//==============================================================================; 61templat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MatrixFunctions_8h_source.html:91,Guid,Guide,91,doc/master/MatrixFunctions_8h_source.html,https://root.cern,https://root.cern/doc/master/MatrixFunctions_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/SMatrix.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SMatrix.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Author: T. Glebe, L. Moneta, J. Palacios 2005; 3 ; 4#ifndef ROOT_Math_SMatrix; 5#define ROOT_Math_SMatrix; 6 ; 7/*********************************************************************************; 8//; 9// source:; 10//; 11// type: source code; 12//; 13// created: 20. Mar 2001; 14//; 15// author: Thorsten Glebe; 16// HERA-B Collaboration; 17// Max-Planck-Institut fuer Kernphysik; 18// Saupfercheckweg 1; 19// 69117 Heidelberg; 20// Germany; 21// E-mail: T.Glebe@mpi-hd.mpg.de; 22//; 23// Description: A fixed size two dimensional Matrix class; 24//; 25// changes:; 26// 20 Mar 2001 (TG) creation; 27// 21 Mar 2001 (TG) added operators +=, -=, *=, /=; 28// 26 Mar 2001 (TG) place_in_row(), place_in_col() added; 29// 02 Apr 2001 (TG) non-const Array() added; 30// 03 Apr 2001 (TG) invert() added; 31// 07 Apr 2001 (TG) CTOR from SVertex (dyadic product) added; 32// 09 Apr 2001 (TG) CTOR from array added; 33// 11 Apr 2001 (TG) rows(), cols(), size() replaced by rows, cols, size; 34// 25 Mai 2001 (TG) row(), col() added; 35// 04 Sep 2001 (TG) moved inlined functions to .icc file; 36// 11 Jan 2002 (TG) added operator==(), operator!=(); 37// 14 Jan 2002 (TG) added more operator==(), operator!=(), operator>(), operator<(); 38//; 39***************************************************************************/; 40// for platform specific configurations; 41 ; 42#include ""Math/MConfig.h""; 43 ; 44#include <iosfwd>; 45 ; 46 ; 47/**; 48\defgroup SMatrixSVector Matrix and Vector classes; 49\ingroup SMatrixGroup; 50 ; 51Classes representing Matrices and Vectors of arbitrary type and dimension.; 52For a detailed description and usage examples see:; 53 ; 54 - \ref SVectorDoc; 55 - \ref SMatrixDoc; 56 - \ref MatVecFunctions; 57 ; 58*/; 59 ; 60 ; 61#include ""Math/Expression.h""; 62#includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SMatrix_8h_source.html:83,Guid,Guide,83,doc/master/SMatrix_8h_source.html,https://root.cern,https://root.cern/doc/master/SMatrix_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/SMatrixDfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SMatrixDfwd.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_SMatrixDfwd; 5#define ROOT_Math_SMatrixDfwd; 6 ; 7namespace ROOT {; 8 ; 9namespace Math{; 10 ; 11 template <class T, unsigned int D1, unsigned int D2, class R> class SMatrix;; 12 ; 13 template <class T, unsigned int D1, unsigned int D2> class MatRepStd;; 14 template <class T, unsigned int D> class MatRepSym;; 15 ; 16 typedef SMatrix<double,2,2,MatRepStd<double,2,2> > SMatrix2D;; 17 typedef SMatrix<double,3,3,MatRepStd<double,3,3> > SMatrix3D;; 18 typedef SMatrix<double,4,4,MatRepStd<double,4,4> > SMatrix4D;; 19 typedef SMatrix<double,5,5,MatRepStd<double,5,5> > SMatrix5D;; 20 typedef SMatrix<double,6,6,MatRepStd<double,6,6> > SMatrix6D;; 21 typedef SMatrix<double,7,7,MatRepStd<double,7,7> > SMatrix7D;; 22 ; 23 ; 24 typedef SMatrix<double,2,2,MatRepSym<double,2> > SMatrixSym2D;; 25 typedef SMatrix<double,3,3,MatRepSym<double,3> > SMatrixSym3D;; 26 typedef SMatrix<double,4,4,MatRepSym<double,4> > SMatrixSym4D;; 27 typedef SMatrix<double,5,5,MatRepSym<double,5> > SMatrixSym5D;; 28 typedef SMatrix<double,6,6,MatRepSym<double,6> > SMatrixSym6D;; 29 typedef SMatrix<double,7,7,MatRepSym<double,7> > SMatrixSym7D;; 30 ; 31} // namespace Math; 32 ; 33} // namespace ROOT; 34 ; 35 ; 36#endif; ROOT::Math::SMatrixSMatrix: a generic fixed size D1 x D2 Matrix class.Definition SMatrix.h:101; MathNamespace for new Math classes and functions.; ROOT::Math::SMatrix5DSMatrix< double, 5, 5, MatRepStd< double, 5, 5 > > SMatrix5DDefinition SMatrixDfwd.h:19; ROOT::Math::SMatrix2DSMatrix< double, 2, 2, MatRepStd< double, 2, 2 > > SMatrix2DDefinition SMatrixDfwd.h:16; ROOT::Math::SMatrixSym6DSMatrix< double, 6, 6, MatRepSym< double, 6 > > SMatrixSym6DDefinition SMatrixDfwd.h:28; ROOT::Math::SMatrix4DSMatrix< double, 4, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SMatrixDfwd_8h_source.html:87,Guid,Guide,87,doc/master/SMatrixDfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/SMatrixDfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/SMatrixFfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SMatrixFfwd.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_SMatrixFfwd; 5#define ROOT_Math_SMatrixFfwd; 6 ; 7namespace ROOT {; 8 ; 9namespace Math{; 10 ; 11 template <class T, unsigned int D1, unsigned int D2, class R> class SMatrix;; 12 ; 13 template <class T, unsigned int D1, unsigned int D2> class MatRepStd;; 14 template <class T, unsigned int D> class MatRepSym;; 15 ; 16 typedef SMatrix<float,2,2,MatRepStd<float,2,2> > SMatrix2F;; 17 typedef SMatrix<float,3,3,MatRepStd<float,3,3> > SMatrix3F;; 18 typedef SMatrix<float,4,4,MatRepStd<float,4,4> > SMatrix4F;; 19 typedef SMatrix<float,5,5,MatRepStd<float,5,5> > SMatrix5F;; 20 typedef SMatrix<float,6,6,MatRepStd<float,6,6> > SMatrix6F;; 21 typedef SMatrix<float,7,7,MatRepStd<float,7,7> > SMatrix7F;; 22 ; 23 typedef SMatrix<float,2,2,MatRepSym<float,2> > SMatrixSym2F;; 24 typedef SMatrix<float,3,3,MatRepSym<float,3> > SMatrixSym3F;; 25 typedef SMatrix<float,4,4,MatRepSym<float,4> > SMatrixSym4F;; 26 typedef SMatrix<float,5,5,MatRepSym<float,5> > SMatrixSym5F;; 27 typedef SMatrix<float,6,6,MatRepSym<float,6> > SMatrixSym6F;; 28 typedef SMatrix<float,7,7,MatRepSym<float,7> > SMatrixSym7F;; 29 ; 30 ; 31} // namespace Math; 32 ; 33} // namespace ROOT; 34 ; 35#endif; ROOT::Math::SMatrixSMatrix: a generic fixed size D1 x D2 Matrix class.Definition SMatrix.h:101; MathNamespace for new Math classes and functions.; ROOT::Math::SMatrixSym6FSMatrix< float, 6, 6, MatRepSym< float, 6 > > SMatrixSym6FDefinition SMatrixFfwd.h:27; ROOT::Math::SMatrix7FSMatrix< float, 7, 7, MatRepStd< float, 7, 7 > > SMatrix7FDefinition SMatrixFfwd.h:21; ROOT::Math::SMatrixSym5FSMatrix< float, 5, 5, MatRepSym< float, 5 > > SMatrixSym5FDefinition SMatrixFfwd.h:26; ROOT::Math::SMatrix6FSMatrix< float, 6, 6, MatRepStd< float, 6, 6 > > SMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SMatrixFfwd_8h_source.html:87,Guid,Guide,87,doc/master/SMatrixFfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/SMatrixFfwd_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/SVector.icc Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SVector.icc. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_SVector_icc; 5#define ROOT_Math_SVector_icc; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 21. Mar 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: A fixed size Vector class; 23//; 24// changes:; 25// 21 Mar 2001 (TG) creation; 26// 26 Mar 2001 (TG) added place_at(); 27// 06 Apr 2001 (TG) CTORS added; 28// 07 Apr 2001 (TG) CTORS added; 29// 22 Aug 2001 (TG) CTOR(T*,len) added; 30// 14 Jan 2002 (TG) added operator==(), operator!=(), operator>(), operator<(); 31//; 32// ********************************************************************; 33 ; 34#ifndef ROOT_Math_SVector; 35#error ""Do not use SVector.icc directly. #include \""Math/SVector.h\"" instead.""; 36#endif // ROOT_Math_SVector; 37 ; 38#include <iostream>; 39#include <assert.h>; 40#include <algorithm>; 41 ; 42#include ""Math/StaticCheck.h""; 43 ; 44namespace ROOT {; 45 ; 46namespace Math {; 47 ; 48 ; 49//==============================================================================; 50// Constructors; 51//==============================================================================; 52template <class T, unsigned int D>; 53SVector<T,D>::SVector() {; 54 for(unsigned int i=0; i<D; ++i); 55 fArray[i] = 0;; 56}; 57 ; 58template <class T, unsigned int D>; 59template <class A>; 60SVector<T,D>::SVector(const VecExpr<A,T,D>& rhs) {; 61 operator=(rhs);; 62}; 63 ; 64template <class T, unsigned int D>; 65SVector<T,D>::SVector(const SVector<T,D>& rhs) {; 66 for(unsigned int i=0; i<D; ++",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SVector_8icc_source.html:85,Guid,Guide,85,doc/master/SVector_8icc_source.html,https://root.cern,https://root.cern/doc/master/SVector_8icc_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/smatrix/inc/Math/UnaryOperators.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. UnaryOperators.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_UnaryOperators; 5#define ROOT_Math_UnaryOperators; 6//======================================================; 7//; 8// ATTENTION: This file was automatically generated,; 9// do not edit!; 10//; 11// author: Thorsten Glebe; 12// HERA-B Collaboration; 13// Max-Planck-Institut fuer Kernphysik; 14// Saupfercheckweg 1; 15// 69117 Heidelberg; 16// Germany; 17// E-mail: T.Glebe@mpi-hd.mpg.de; 18//; 19//======================================================; 20 ; 21#include <cmath>; 22 ; 23#include ""Math/Expression.h""; 24 ; 25namespace ROOT {; 26 ; 27 namespace Math {; 28 ; 29 ; 30 ; 31template <class T, unsigned int D> class SVector;; 32template <class T, unsigned int D1, unsigned int D2, class R> class SMatrix;; 33 ; 34 ; 35/**; 36 Unary Minus Operation Class; 37 ; 38 @ingroup Expression; 39 */; 40//==============================================================================; 41// Minus; 42//==============================================================================; 43template <class T>; 44class Minus {; 45public:; 46 static inline T apply(const T& rhs) {; 47 return -(rhs);; 48 }; 49};; 50 ; 51//==============================================================================; 52// operator- (Expr, unary); 53//==============================================================================; 54template <class A, class T, unsigned int D>; 55inline VecExpr<UnaryOp<Minus<T>, VecExpr<A,T,D>, T>, T, D>; 56 operator-(const VecExpr<A,T,D>& rhs) {; 57 typedef UnaryOp<Minus<T>, VecExpr<A,T,D>, T> MinusUnaryOp;; 58 ; 59 return VecExpr<MinusUnaryOp,T,D>(MinusUnaryOp(Minus<T>(),rhs));; 60}; 61 ; 62 ; 63/**; 64 Unary - operator v2 = -v1 .; 65 returning a vector expression; 66 ; 67 @ingroup VectFunction; 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/UnaryOperators_8h_source.html:90,Guid,Guide,90,doc/master/UnaryOperators_8h_source.html,https://root.cern,https://root.cern/doc/master/UnaryOperators_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/unuran/inc/TUnuran.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnuran.h. Go to the documentation of this file. 1// @(#)root/unuran:$Id$; 2// Author: L. Moneta Tue Sep 26 16:25:09 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class TUnuran; 12 ; 13#ifndef ROOT_TUnuran; 14#define ROOT_TUnuran; 15 ; 16#include <string>; 17 ; 18#include ""TUnuranBaseDist.h""; 19 ; 20 ; 21class TUnuranContDist;; 22class TUnuranDiscrDist;; 23class TUnuranMultiContDist;; 24class TUnuranEmpDist;; 25 ; 26#include <memory>; 27 ; 28 ; 29/**; 30 ; 31 \class TUnuran; 32 \ingroup Unuran; 33 ; 34 TUnuran class.; 35 Interface to the UNU.RAN package for generating non uniform random; 36 numbers. This class wraps the UNU.RAN calls in C++ methods.; 37 It provides methods for initializing Unuran and then to sample the; 38 desired distribution.; 39 It provides support for initializing UNU.RAN in these following way (various signatures; 40 for TUnuran::Init); 41 - with string API via TUnuran::Init passing the distribution type and the method; 42 - using a one-dimensional distribution object defined by TUnuranContDist; 43 - using a multi-dimensional distribution object defined by TUnuranMultiContDist; 44 - using a discrete one-dimensional distribution object defined by TUnuranDiscrDist; 45 - using an empirical distribution defined by TUnuranEmpDist; 46 - using pre-defined distributions. Presently only support for Poisson (TUnuran::InitPoisson); 47 and Binomial (TUnuran::InitBinomial) are provided. Other distributions can however be generated; 48 using the previous methods (in particular via the string API); 49 ; 50 The sampling is provided via these methods:; 51 - TUnuran::Sample() returns a double for all one-dimensional distrib",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnuran_8h_source.html:77,Guid,Guide,77,doc/master/TUnuran_8h_source.html,https://root.cern,https://root.cern/doc/master/TUnuran_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/unuran/src/TUnuran.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnuran.cxx. Go to the documentation of this file. 1// @(#)root/unuran:$Id$; 2// Authors: L. Moneta, J. Leydold Tue Sep 26 16:25:09 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class TUnuran; 12 ; 13#include ""TUnuran.h""; 14 ; 15#include ""TUnuranContDist.h""; 16#include ""TUnuranMultiContDist.h""; 17#include ""TUnuranDiscrDist.h""; 18#include ""TUnuranEmpDist.h""; 19 ; 20#include ""UnuranRng.h""; 21#include ""UnuranDistrAdapter.h""; 22 ; 23#include ""TRandom.h""; 24 ; 25#include <cassert>; 26 ; 27#include <unuran.h>; 28 ; 29#include ""TError.h""; 30 ; 31 ; 32TUnuran::TUnuran(TRandom * r, unsigned int debugLevel) :; 33 fGen(nullptr),; 34 fUdistr(nullptr),; 35 fUrng(nullptr),; 36 fRng(r); 37{; 38 // constructor implementation with a ROOT random generator; 39 // if no generator is given the ROOT default is used; 40 if (fRng == nullptr) fRng = gRandom;; 41 // set debug level at global level; 42 // (should be in a static initialization function of the library ? ); 43 if ( debugLevel > 1); 44 unur_set_default_debug(UNUR_DEBUG_ALL);; 45 else if (debugLevel == 1); 46 unur_set_default_debug(UNUR_DEBUG_INIT);; 47 else; 48 unur_set_default_debug(UNUR_DEBUG_OFF);; 49 ; 50}; 51 ; 52 ; 53TUnuran::~TUnuran(); 54{; 55 // Destructor implementation; 56 if (fGen != nullptr) unur_free(fGen);; 57 if (fUrng != nullptr) unur_urng_free(fUrng);; 58 // we can delete now the distribution object; 59 if (fUdistr != nullptr) unur_distr_free(fUdistr);; 60}; 61 ; 62bool TUnuran::Init(const std::string & dist, const std::string & method); 63{; 64 // initialize with a string; 65 std::string s = dist + "" & "" + method;; 66 fGen = unur_str2gen(s.c_str() );; 67 if (fGen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnuran_8cxx_source.html:79,Guid,Guide,79,doc/master/TUnuran_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnuran_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/vecops/inc/ROOT/RVec.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RVec.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Enric Tejedor, Danilo Piparo CERN 04/2021; 2// Implementation adapted from from llvm::SmallVector.; 3// See /math/vecops/ARCHITECTURE.md for more information.; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_RVEC; 14#define ROOT_RVEC; 15 ; 16#if __cplusplus > 201402L; 17#define R__RVEC_NODISCARD [[nodiscard]]; 18#else; 19#define R__RVEC_NODISCARD; 20#endif; 21 ; 22#ifdef _WIN32; 23 #ifndef M_PI; 24 #ifndef _USE_MATH_DEFINES; 25 #define _USE_MATH_DEFINES; 26 #endif; 27 #include <math.h>; 28 #undef _USE_MATH_DEFINES; 29 #endif; 30 #define _VECOPS_USE_EXTERN_TEMPLATES false; 31#else; 32 #define _VECOPS_USE_EXTERN_TEMPLATES true; 33#endif; 34 ; 35#include <Rtypes.h> // R__CLING_PTRCHECK; 36#include <TError.h> // R__ASSERT; 37 ; 38#include <algorithm>; 39#include <cmath>; 40#include <cstring>; 41#include <limits> // for numeric_limits; 42#include <memory> // uninitialized_value_construct; 43#include <new>; 44#include <numeric> // for inner_product; 45#include <sstream>; 46#include <stdexcept>; 47#include <string>; 48#include <tuple>; 49#include <type_traits>; 50#include <utility>; 51#include <vector>; 52 ; 53#ifdef R__HAS_VDT; 54#include <vdt/vdtMath.h>; 55#endif; 56 ; 57 ; 58namespace ROOT {; 59 ; 60namespace VecOps {; 61template<typename T>; 62class RVec;; 63}; 64 ; 65namespace Internal {; 66namespace VecOps {; 67 ; 68template<typename T>; 69using RVec = ROOT::VecOps::RVec<T>;; 70 ; 71// clang-format off; 72template <typena",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVec_8hxx_source.html:81,Guid,Guide,81,doc/master/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RVec_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: math/vecops/inc/ROOT/RVec.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RVec.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Enric Tejedor, Danilo Piparo CERN 04/2021; 2// Implementation adapted from from llvm::SmallVector.; 3// See /math/vecops/ARCHITECTURE.md for more information.; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_RVEC; 14#define ROOT_RVEC; 15 ; 16#if __cplusplus > 201402L; 17#define R__RVEC_NODISCARD [[nodiscard]]; 18#else; 19#define R__RVEC_NODISCARD; 20#endif; 21 ; 22#ifdef _WIN32; 23 #ifndef M_PI; 24 #ifndef _USE_MATH_DEFINES; 25 #define _USE_MATH_DEFINES; 26 #endif; 27 #include <math.h>; 28 #undef _USE_MATH_DEFINES; 29 #endif; 30 #define _VECOPS_USE_EXTERN_TEMPLATES false; 31#else; 32 #define _VECOPS_USE_EXTERN_TEMPLATES true; 33#endif; 34 ; 35#include <Rtypes.h> // R__CLING_PTRCHECK; 36#include <TError.h> // R__ASSERT; 37 ; 38#include <algorithm>; 39#include <cmath>; 40#include <cstring>; 41#include <limits> // for numeric_limits; 42#include <memory> // uninitialized_value_construct; 43#include <new>; 44#include <numeric> // for inner_product; 45#include <sstream>; 46#include <stdexcept>; 47#include <string>; 48#include <tuple>; 49#include <type_traits>; 50#include <utility>; 51#include <vector>; 52 ; 53#ifdef R__HAS_VDT; 54#include <vdt/vdtMath.h>; 55#endif; 56 ; 57 ; 58namespace ROOT {; 59 ; 60namespace VecOps {; 61template<typename T>; 62class RVec;; 63}; 64 ; 65namespace Internal {; 66namespace VecOps {; 67 ; 68template<typename T>; 69using RVec = ROOT::VecOps::RVec<T>;; 70 ; 71// clang-format off; 72template <typenam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RVec_8hxx_source.html:80,Guid,Guide,80,doc/v632/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RVec_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: net/auth/src/rsalib.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; rsalib.cxx File Reference. #include <stdio.h>; #include <string.h>; #include <ctype.h>; #include <stdlib.h>; #include <errno.h>; #include ""rsaaux.h""; #include ""rsalib.h"". Include dependency graph for rsalib.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; void num_init ();  ; void rsa_assign (rsa_NUMBER *d, rsa_NUMBER *s);  ; int rsa_cmp (rsa_NUMBER *c1, rsa_NUMBER *c2);  ; int rsa_decode (char *bufin, int lin, rsa_NUMBER n, rsa_NUMBER e);  ; int rsa_encode (char *bufin, int lin, rsa_NUMBER n, rsa_NUMBER e);  ; int rsa_encode_size (rsa_NUMBER n);  ; rsa_NUMBER rsa_genprim (int len, int prob);  ; int rsa_genrsa (rsa_NUMBER p1, rsa_NUMBER p2, rsa_NUMBER *n, rsa_NUMBER *e, rsa_NUMBER *d);  ; int rsa_num_fget (rsa_NUMBER *n, FILE *f);  ; int rsa_num_fput (rsa_NUMBER *n, FILE *f);  ; int rsa_num_sget (rsa_NUMBER *n, char *s);  ; int rsa_num_sput (rsa_NUMBER *n, char *s, int l);  . Variables; static int g_clear_siz;  ; static int g_enc_siz;  ; static rsa_NUMBER gbits [9];  ; static const char * gHEX =""0123456789ABCDEF"";  ; static const char * ghex =""0123456789abcdef"";  ; static int ginit = 0;  ; static rsa_NUMBER gint16 [16];  ; int gLog = 0;  ; int kMAXT = 100;  . Function Documentation. ◆ num_init(). void num_init ; (; ). Definition at line 258 of file rsalib.cxx. ◆ rsa_assign(). void rsa_assign ; (; rsa_NUMBER * ; d, . rsa_NUMBER * ; s . ). Definition at line 487 of file rsalib.cxx. ◆ rsa_cmp(). int rsa_cmp ; (; rsa_NUMBER * ; c1, . rsa_NUMBER * ; c2 . ). Definition at line 476 of file rsalib.cxx. ◆ rsa_decode(). int rsa_decode ; (; char * ; bufin, . int ; lin, . rsa_NUMBER ; n, . rsa_NUMBER ; e . ). Definition at line 177 of file rsalib.cxx. ◆ rsa_encode(). int rsa_encode ; (; char * ; bufin, . int ; lin, . rsa_NUMBER ; n, . rsa_NUMBER ; e . ). Definition at line 13",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rsalib_8cxx.html:78,Guid,Guide,78,doc/master/rsalib_8cxx.html,https://root.cern,https://root.cern/doc/master/rsalib_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: net/auth/src/rsalib.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rsalib.cxx. Go to the documentation of this file. 1/* @(#)root/auth:$Id$ */; 2/* Author: Martin Nicolay 22/11/1988 */; 3 ; 4/******************************************************************************; 5Copyright (C) 2006 Martin Nicolay <m.nicolay@osm-gmbh.de>; 6 ; 7This library is free software; you can redistribute it and/or; 8modify it under the terms of the GNU Lesser General Public; 9License as published by the Free Software Foundation; either; 10version 2.1 of the License, or (at your option) any later; 11version.; 12 ; 13This library is distributed in the hope that it will be useful,; 14but WITHOUT ANY WARRANTY; without even the implied warranty of; 15MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; 16GNU Lesser General Public License for more details.; 17 ; 18You should have received a copy of the GNU Lesser General Public; 19License along with this library; if not, write to the Free; 20Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,; 21MA 02110-1301 USA; 22******************************************************************************/; 23 ; 24/*******************************************************************************; 25* *; 26* Simple RSA public key code. *; 27* Adaptation in library for ROOT by G. Ganis, July 2003 *; 28* (gerardo.ganis@cern.ch) *; 29* *; 30*******************************************************************************/; 31 ; 32#include <stdio.h>; 33#include <string.h>; 34#include <ctype.h>; 35#include <stdlib.h>; 36#include <errno.h>; 37 ; 38#include ""rsaaux.h""; 39#include ""rsalib.h""; 40 ; 41static int g_clear_siz; /* clear-text blocksize */; 42static int g_enc_siz; /* encoded blocksize */; 43 /* g_clear_siz < g_enc_siz */; 44 ; 45int gLog = 0;; 46int kMAXT = 100;; 47 ; 48rsa_NUMBER rsa_genprim(int len, int prob); 49{; 50 rsa_NUMBER a_three,a_four;; 51 rsa_NUMBER prim;; 52 int i;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rsalib_8cxx_source.html:75,Guid,Guide,75,doc/master/rsalib_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rsalib_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: net/http/civetweb/civetweb.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Typedefs |; Enumerations |; Functions |; Variables ; civetweb.c File Reference. #include ""civetweb.h""; #include <errno.h>; #include <fcntl.h>; #include <signal.h>; #include <stdlib.h>; #include <sys/stat.h>; #include <sys/types.h>; #include <stdint.h>; #include <inttypes.h>; #include <arpa/inet.h>; #include <ctype.h>; #include <dirent.h>; #include <grp.h>; #include <limits.h>; #include <netdb.h>; #include <netinet/in.h>; #include <netinet/tcp.h>; #include <pthread.h>; #include <pwd.h>; #include <stdarg.h>; #include <stddef.h>; #include <stdio.h>; #include <string.h>; #include <sys/poll.h>; #include <sys/socket.h>; #include <sys/time.h>; #include <sys/utsname.h>; #include <sys/wait.h>; #include <time.h>; #include <unistd.h>; #include <dlfcn.h>; #include ""md5.inl""; #include ""openssl_dl.inl""; #include ""response.inl""; #include ""handle_form.inl"". Include dependency graph for civetweb.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ah;  ; struct  cgi_environment;  ; struct  de;  ; struct  dir_scan_data;  ; struct  mg_connection;  ; struct  mg_context;  ; struct  mg_domain_context;  ; struct  mg_file;  ; struct  mg_file_access;  ; struct  mg_file_stat;  ; struct  mg_handler_info;  ; struct  mg_http_method_info;  ; struct  mg_workerTLS;  ; struct  process_control_data;  ; struct  read_auth_file_struct;  ; struct  socket;  ; union  usa;  ; struct  vec;  ; struct  websocket_client_thread_data;  . Macros; #define __STDC_FORMAT_MACROS   /* <inttypes.h> wants this for C++ */;  ; #define __STDC_LIMIT_MACROS   /* C++ wants that for INT64_MAX */;  ; #define _DARWIN_UNLIMITED_SELECT;  ; #define _FILE_OFFSET_BITS   64 /* Use 64-bit file offsets by default */;  ; #define _GNU_SOURCE   /* for setgroups(), pthread_setname_np() */;  ; #define _LARGEFILE_SOURCE   /* For fseeko(), ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c.html:83,Guid,Guide,83,doc/master/civetweb_8c.html,https://root.cern,https://root.cern/doc/master/civetweb_8c.html,1,['Guid'],['Guide']
Usability,". ROOT: net/http/civetweb/civetweb.c Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. civetweb.c. Go to the documentation of this file. 1/* Copyright (c) 2013-2021 the Civetweb developers; 2 * Copyright (c) 2004-2013 Sergey Lyubka; 3 *; 4 * Permission is hereby granted, free of charge, to any person obtaining a copy; 5 * of this software and associated documentation files (the ""Software""), to deal; 6 * in the Software without restriction, including without limitation the rights; 7 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; 8 * copies of the Software, and to permit persons to whom the Software is; 9 * furnished to do so, subject to the following conditions:; 10 *; 11 * The above copyright notice and this permission notice shall be included in; 12 * all copies or substantial portions of the Software.; 13 *; 14 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; 15 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; 16 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; 17 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; 18 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; 19 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; 20 * THE SOFTWARE.; 21 */; 22 ; 23#if defined(__GNUC__) || defined(__MINGW32__); 24#define GCC_VERSION \; 25 (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__); 26#if GCC_VERSION >= 40500; 27/* gcc diagnostic pragmas available */; 28#define GCC_DIAGNOSTIC; 29#endif; 30#endif; 31 ; 32#if defined(GCC_DIAGNOSTIC); 33/* Disable unused macros warnings - not all defines are required; 34 * for all systems and all compilers. */; 35#pragma GCC diagnostic ignored ""-Wunused-macros""; 36/* A padding warning is just plain useless */; 37#pragma GCC diagnostic ignored ""-Wpadded""; 38#endif; 39 ; 40#if defined(__clang__",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:80,Guid,Guide,80,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['Guid'],['Guide']
Usability,". ROOT: net/http/civetweb/civetweb.c Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. civetweb.c. Go to the documentation of this file. 1/* Copyright (c) 2013-2021 the Civetweb developers; 2 * Copyright (c) 2004-2013 Sergey Lyubka; 3 *; 4 * Permission is hereby granted, free of charge, to any person obtaining a copy; 5 * of this software and associated documentation files (the ""Software""), to deal; 6 * in the Software without restriction, including without limitation the rights; 7 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; 8 * copies of the Software, and to permit persons to whom the Software is; 9 * furnished to do so, subject to the following conditions:; 10 *; 11 * The above copyright notice and this permission notice shall be included in; 12 * all copies or substantial portions of the Software.; 13 *; 14 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; 15 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; 16 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; 17 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; 18 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; 19 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; 20 * THE SOFTWARE.; 21 */; 22 ; 23#if defined(__GNUC__) || defined(__MINGW32__); 24#define GCC_VERSION \; 25 (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__); 26#if GCC_VERSION >= 40500; 27/* gcc diagnostic pragmas available */; 28#define GCC_DIAGNOSTIC; 29#endif; 30#endif; 31 ; 32#if defined(GCC_DIAGNOSTIC); 33/* Disable unused macros warnings - not all defines are required; 34 * for all systems and all compilers. */; 35#pragma GCC diagnostic ignored ""-Wunused-macros""; 36/* A padding warning is just plain useless */; 37#pragma GCC diagnostic ignored ""-Wpadded""; 38#endif; 39 ; 40#if defined(__clang__)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:79,Guid,Guide,79,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['Guid'],['Guide']
Usability,". ROOT: net/http/civetweb/md5.inl File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Typedefs |; Functions ; md5.inl File Reference. #include <stdint.h>; #include <string.h>. Include dependency graph for md5.inl:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  md5_state_s;  . Macros; #define BYTE_ORDER   (0);  ; #define F(x, y, z)   (((x) & (y)) | (~(x) & (z)));  ; #define G(x, y, z)   (((x) & (z)) | ((y) & ~(z)));  ; #define H(x, y, z)   ((x) ^ (y) ^ (z));  ; #define I(x, y, z)   ((y) ^ ((x) | ~(z)));  ; #define md5_INCLUDED;  ; #define ROTATE_LEFT(x, n)   (((x) << (n)) | ((x) >> (32 - (n))));  ; #define SET(a, b, c, d, k, s, Ti);  ; #define SET(a, b, c, d, k, s, Ti);  ; #define SET(a, b, c, d, k, s, Ti);  ; #define SET(a, b, c, d, k, s, Ti);  ; #define T1   /* 0xd76aa478 */ (T_MASK ^ 0x28955b87);  ; #define T10   /* 0x8b44f7af */ (T_MASK ^ 0x74bb0850);  ; #define T11   /* 0xffff5bb1 */ (T_MASK ^ 0x0000a44e);  ; #define T12   /* 0x895cd7be */ (T_MASK ^ 0x76a32841);  ; #define T13   (0x6b901122);  ; #define T14   /* 0xfd987193 */ (T_MASK ^ 0x02678e6c);  ; #define T15   /* 0xa679438e */ (T_MASK ^ 0x5986bc71);  ; #define T16   (0x49b40821);  ; #define T17   /* 0xf61e2562 */ (T_MASK ^ 0x09e1da9d);  ; #define T18   /* 0xc040b340 */ (T_MASK ^ 0x3fbf4cbf);  ; #define T19   (0x265e5a51);  ; #define T2   /* 0xe8c7b756 */ (T_MASK ^ 0x173848a9);  ; #define T20   /* 0xe9b6c7aa */ (T_MASK ^ 0x16493855);  ; #define T21   /* 0xd62f105d */ (T_MASK ^ 0x29d0efa2);  ; #define T22   (0x02441453);  ; #define T23   /* 0xd8a1e681 */ (T_MASK ^ 0x275e197e);  ; #define T24   /* 0xe7d3fbc8 */ (T_MASK ^ 0x182c0437);  ; #define T25   (0x21e1cde6);  ; #define T26   /* 0xc33707d6 */ (T_MASK ^ 0x3cc8f829);  ; #define T27   ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/md5_8inl.html:80,Guid,Guide,80,doc/master/md5_8inl.html,https://root.cern,https://root.cern/doc/master/md5_8inl.html,1,['Guid'],['Guide']
Usability,". ROOT: net/http/civetweb/md5.inl Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. md5.inl. Go to the documentation of this file. 1/*; 2 * This an amalgamation of md5.c and md5.h into a single file; 3 * with all static declaration to reduce linker conflicts; 4 * in Civetweb.; 5 *; 6 * The MD5_STATIC declaration was added to facilitate static; 7 * inclusion.; 8 * No Face Press, LLC; 9 */; 10 ; 11/* $Id: md5.h,v 1.4 2002/04/13 19:20:28 lpd Exp $ */; 12/*; 13 Independent implementation of MD5 (RFC 1321).; 14 ; 15 This code implements the MD5 Algorithm defined in RFC 1321, whose; 16 text is available at; 17 http://www.ietf.org/rfc/rfc1321.txt; 18 The code is derived from the text of the RFC, including the test suite; 19 (section A.5) but excluding the rest of Appendix A. It does not include; 20 any code or documentation that is identified in the RFC as being; 21 copyrighted.; 22 ; 23 The original and principal author of md5.h is L. Peter Deutsch; 24 <ghost@aladdin.com>. Other authors are noted in the change history; 25 that follows (in reverse chronological order):; 26 ; 27 2002-04-13 lpd Removed support for non-ANSI compilers; removed; 28 references to Ghostscript; clarified derivation from RFC 1321;; 29 now handles byte order either statically or dynamically.; 30 1999-11-04 lpd Edited comments slightly for automatic TOC extraction.; 31 1999-10-18 lpd Fixed typo in header comment (ansi2knr rather than md5);; 32 added conditionalization for C++ compilation from Martin; 33 Purschke <purschke@bnl.gov>.; 34 1999-05-03 lpd Original version.; 35 */; 36 ; 37#if !defined(md5_INCLUDED); 38#define md5_INCLUDED; 39 ; 40/*; 41 * This package supports both compile-time and run-time determination of CPU; 42 * byte order. If ARCH_IS_BIG_ENDIAN is defined as 0, the code will be; 43 * compiled to run only on little-endian CPUs; if ARCH_IS_BIG_ENDIAN is; 44 * defined as non-zero, the code will be compiled to run only on big-endian; 45 * CPUs; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/md5_8inl_source.html:77,Guid,Guide,77,doc/master/md5_8inl_source.html,https://root.cern,https://root.cern/doc/master/md5_8inl_source.html,1,['Guid'],['Guide']
Usability,". ROOT: net/http/civetweb/sha1.inl File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Functions ; sha1.inl File Reference. #include <stdint.h>; #include <string.h>. Include dependency graph for sha1.inl:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; union  CHAR64LONG16;  ; struct  SHA_CTX;  . Macros; #define blk(block, i);  ; #define R0(v, w, x, y, z, i);  ; #define R1(v, w, x, y, z, i);  ; #define R2(v, w, x, y, z, i);  ; #define R3(v, w, x, y, z, i);  ; #define R4(v, w, x, y, z, i);  ; #define rol(value, bits)   (((value) << (bits)) | ((value) >> (32 - (bits))));  ; #define SHA1_DIGEST_SIZE   20;  . Functions; static uint32_t blk0 (CHAR64LONG16 *block, int i);  ; SHA_API void SHA1_Final (unsigned char *digest, SHA_CTX *context);  ; SHA_API void SHA1_Init (SHA_CTX *context);  ; static void SHA1_Transform (uint32_t state[5], const uint8_t buffer[64]);  ; SHA_API void SHA1_Update (SHA_CTX *context, const uint8_t *data, const uint32_t len);  . Macro Definition Documentation. ◆ blk. #define blk; (;  ; block, .  ; i . ). Value: ((block)->l[(i)&15] = \; rol((block)->l[((i) + 13) & 15] ^ (block)->l[((i) + 8) & 15] \; ^ (block)->l[((i) + 2) & 15] ^ (block)->l[(i)&15], \; 1)); lTLine lDefinition textangle.C:4. Definition at line 124 of file sha1.inl. ◆ R0. #define R0; (;  ; v, .  ; w, .  ; x, .  ; y, .  ; z, .  ; i . ). Value: z += ((w & (x ^ y)) ^ y) + blk0(block, i) + 0x5A827999 + rol(v, 5); \; w = rol(w, 30);; blk0#define blk0(i)Definition RSha256.hxx:93; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; v@ vDefinition rootcling_impl.cxx:3699; rol#define rol(value, bits)Definition sha1.inl:100. Definition at line 131 of file sha1.inl. ◆ R1. #define R1; (;  ; v, .  ; w, .  ; x, .  ; y, .  ; z, .  ; i . ). Value: z += ((w & (x ^ y)) ^ y) + blk(block, i) + 0x5A827999 + rol(v, 5); \; w ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/sha1_8inl.html:81,Guid,Guide,81,doc/master/sha1_8inl.html,https://root.cern,https://root.cern/doc/master/sha1_8inl.html,1,['Guid'],['Guide']
Usability,". ROOT: net/http/inc/THttpServer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THttpServer.h. Go to the documentation of this file. 1// $Id$; 2// Author: Sergey Linev 21/12/2013; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_THttpServer; 13#define ROOT_THttpServer; 14 ; 15#include ""TNamed.h""; 16#include ""TList.h""; 17#include ""THttpCallArg.h""; 18 ; 19#include <mutex>; 20#include <map>; 21#include <string>; 22#include <memory>; 23#include <queue>; 24#include <thread>; 25#include <vector>; 26 ; 27class THttpEngine;; 28class THttpTimer;; 29class TRootSniffer;; 30 ; 31class THttpServer : public TNamed {; 32 ; 33protected:; 34 TList fEngines; ///<! engines which runs http server; 35 std::unique_ptr<THttpTimer> fTimer; ///<! timer used to access main thread; 36 std::unique_ptr<TRootSniffer> fSniffer; ///<! sniffer provides access to ROOT objects hierarchy; 37 Bool_t fTerminated{kFALSE}; ///<! termination flag, disables all requests processing; 38 Long_t fMainThrdId{0}; ///<! id of the thread for processing requests; 39 Long_t fProcessingThrdId{0}; ///<! id of the thread where events are recently processing; 40 Bool_t fOwnThread{kFALSE}; ///<! true when specialized thread allocated for processing requests; 41 std::thread fThrd; ///<! own thread; 42 Bool_t fWSOnly{kFALSE}; ///<! when true, handle only websockets / longpoll engine; 43 ; 44 TString fJSROOTSYS; ///<! location of local JSROOT files; 45 TString fTopName{""ROOT""}; ///<! name of top folder, default - ""ROOT""; 46 TString fJSROOT; ///<! location of external JSROOT files; 47 ; 48 std::map<std::string, std::string> fLocations; //",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THttpServer_8h_source.html:78,Guid,Guide,78,doc/master/THttpServer_8h_source.html,https://root.cern,https://root.cern/doc/master/THttpServer_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: net/http/src/THttpServer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THttpServer.cxx. Go to the documentation of this file. 1// $Id$; 2// Author: Sergey Linev 21/12/2013; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""THttpServer.h""; 13 ; 14#include ""TThread.h""; 15#include ""TTimer.h""; 16#include ""TSystem.h""; 17#include ""TROOT.h""; 18#include ""TUrl.h""; 19#include ""TEnv.h""; 20#include ""TError.h""; 21#include ""TClass.h""; 22#include ""RConfigure.h""; 23#include ""TRegexp.h""; 24#include ""TObjArray.h""; 25 ; 26#include ""THttpEngine.h""; 27#include ""THttpLongPollEngine.h""; 28#include ""THttpWSHandler.h""; 29#include ""TRootSniffer.h""; 30#include ""TRootSnifferStore.h""; 31#include ""TCivetweb.h""; 32#include ""TFastCgi.h""; 33 ; 34#include <chrono>; 35#include <cstdlib>; 36#include <cstring>; 37#include <fstream>; 38#include <memory>; 39#include <string>; 40#include <thread>; 41 ; 42class THttpTimer : public TTimer {; 43 Long_t fNormalTmout{0};; 44 Bool_t fSlow{kFALSE};; 45 Int_t fSlowCnt{0};; 46 ; 47public:; 48 THttpServer &fServer; ///!< server processing requests; 49 ; 50 /// constructor; 51 THttpTimer(Long_t milliSec, Bool_t mode, THttpServer &serv) : TTimer(milliSec, mode), fNormalTmout(milliSec), fServer(serv) {}; 52 ; 53 void SetSlow(Bool_t flag); 54 {; 55 fSlow = flag;; 56 fSlowCnt = 0;; 57 Long_t ms = fNormalTmout;; 58 if (fSlow) {; 59 if (ms < 100); 60 ms = 500;; 61 else if (ms < 500); 62 ms = 3000;; 63 else; 64 ms = 10000;; 65 }; 66 ; 67 SetTime(ms);; 68 }; 69 Bool_t IsSlow() const { return fSlow; }; 70 ; 71 /// timeout handler; 72 /// used to process http requests in main ROOT ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THttpServer_8cxx_source.html:80,Guid,Guide,80,doc/master/THttpServer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THttpServer_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: object Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. object Class Reference. Inheritance diagram for object:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this class was generated from the following file:; geom/gdml/ROOTwriter.py. object. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classobject.html:62,Guid,Guide,62,doc/master/classobject.html,https://root.cern,https://root.cern/doc/master/classobject.html,2,['Guid'],['Guide']
Usability,". ROOT: roofit/roofit/src/RooLagrangianMorphFunc.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; RooLagrangianMorphFunc.cxx File Reference. #include ""Riostream.h""; #include ""RooAbsCollection.h""; #include ""RooArgList.h""; #include ""RooArgProxy.h""; #include ""RooArgSet.h""; #include ""RooBinning.h""; #include ""RooDataHist.h""; #include ""RooFormulaVar.h""; #include ""RooHistFunc.h""; #include ""RooLagrangianMorphFunc.h""; #include ""RooLinearCombination.h""; #include ""RooParamHistFunc.h""; #include ""RooProduct.h""; #include ""RooRealVar.h""; #include ""RooWorkspace.h""; #include ""RooFactoryWSTool.h""; #include ""ROOT/StringUtils.hxx""; #include ""TFile.h""; #include ""TFolder.h""; #include ""TH1.h""; #include ""TMap.h""; #include ""TParameter.h""; #include ""TRandom3.h""; #include <algorithm>; #include <array>; #include <cmath>; #include <cstddef>; #include <iostream>; #include <limits>; #include <map>; #include <memory>; #include <sstream>; #include <stdexcept>; #include <type_traits>; #include <typeinfo>; #include ""TDecompLU.h"". Include dependency graph for RooLagrangianMorphFunc.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  RooLagrangianMorphFunc::CacheElem;  ; struct  is_specialization< Test, Ref >;  ; struct  is_specialization< Ref< Args... >, Ref >;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define NaN   std::numeric_limits<double>::quiet_NaN();  . Typedefs; typedef TMatrixD Matrix;  . Functions; Matrix diagMatrix (size_t n);  create a new diagonal matrix of size n ;  ; double invertMatrix (const Matrix &matrix, Matrix &inverse);  ; TMatrixD makeRootMatrix (const Matrix &in);  convert a matrix into a TMatrixD ;  ; Matrix makeSuperMatrix (const TMatrixD &in)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooLagrangianMorphFunc_8cxx.html:99,Guid,Guide,99,doc/master/RooLagrangianMorphFunc_8cxx.html,https://root.cern,https://root.cern/doc/master/RooLagrangianMorphFunc_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofit/src/RooLagrangianMorphFunc.cxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; RooLagrangianMorphFunc.cxx File Reference. #include ""Riostream.h""; #include ""RooAbsCollection.h""; #include ""RooArgList.h""; #include ""RooArgProxy.h""; #include ""RooArgSet.h""; #include ""RooBinning.h""; #include ""RooDataHist.h""; #include ""RooFormulaVar.h""; #include ""RooHistFunc.h""; #include ""RooLagrangianMorphFunc.h""; #include ""RooLinearCombination.h""; #include ""RooParamHistFunc.h""; #include ""RooProduct.h""; #include ""RooRealVar.h""; #include ""RooWorkspace.h""; #include ""RooFactoryWSTool.h""; #include ""ROOT/StringUtils.hxx""; #include ""TFile.h""; #include ""TFolder.h""; #include ""TH1.h""; #include ""TMap.h""; #include ""TParameter.h""; #include ""TRandom3.h""; #include <algorithm>; #include <array>; #include <cmath>; #include <cstddef>; #include <iostream>; #include <limits>; #include <map>; #include <memory>; #include <sstream>; #include <stdexcept>; #include <type_traits>; #include <typeinfo>; #include ""TDecompLU.h"". Include dependency graph for RooLagrangianMorphFunc.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  RooLagrangianMorphFunc::CacheElem;  ; struct  is_specialization< Test, Ref >;  ; struct  is_specialization< Ref< Args... >, Ref >;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define NaN   std::numeric_limits<double>::quiet_NaN();  . Typedefs; typedef TMatrixD Matrix;  . Functions; Matrix diagMatrix (size_t n);  create a new diagonal matrix of size n ;  ; double invertMatrix (const Matrix &matrix, Matrix &inverse);  ; TMatrixD makeRootMatrix (const Matrix &in);  convert a matrix into a TMatrixD ;  ; Matrix makeSuperMatrix (const TMatrixD &in);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RooLagrangianMorphFunc_8cxx.html:98,Guid,Guide,98,doc/v632/RooLagrangianMorphFunc_8cxx.html,https://root.cern,https://root.cern/doc/v632/RooLagrangianMorphFunc_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofitcore/inc/RooAbsArg.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; RooAbsArg.h File Reference. #include <RooAbsCache.h>; #include <RooFit/Config.h>; #include <RooFit/Detail/NormalizationHelpers.h>; #include <RooLinkedListIter.h>; #include <RooNameReg.h>; #include <RooPrintable.h>; #include <RooSTLRefCountList.h>; #include <RooStringView.h>; #include <TNamed.h>; #include <TObjArray.h>; #include <TRefArray.h>; #include <ROOT/RConfig.hxx>; #include <deque>; #include <iostream>; #include <map>; #include <memory>; #include <set>; #include <stack>; #include <string>; #include <unordered_map>. Include dependency graph for RooAbsArg.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  RooAbsArg::ProxyListCache;  ; class  RooAbsArg;  Common abstract base class for objects that represent a value and a ""shape"" in RooFit. More...;  ; class  RooRefArray;  . Namespaces; namespace  RooFit;  The namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or other types of arguments). ;  ; namespace  RooFit::Detail;  . Typedefs; using RooListProxy = RooCollectionProxy< RooArgList >;  ; using RooSetProxy = RooCollectionProxy< RooArgSet >;  . Functions; std::ostream & operator<< (std::ostream &os, const RooAbsArg &arg);  Ostream operator. ;  ; std::istream & operator>> (std::istream &is, RooAbsArg &arg);  Istream operator. ;  . Typedef Documentation. ◆ RooListProxy. using RooListProxy = RooCollectionProxy<RooArgList>. Definition at line 55 of file RooAbsArg.h. ◆ RooSetProxy. using RooSetProxy = RooCollectionProxy<RooArgSet>. Definition at line 54 of file RooAbsArg.h. Function Documentation. ◆ operator<<(). std::ostream & operator<<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsArg_8h.html:88,Guid,Guide,88,doc/master/RooAbsArg_8h.html,https://root.cern,https://root.cern/doc/master/RooAbsArg_8h.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofitcore/inc/RooAbsPdf.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsPdf.h. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * File: $Id: RooAbsPdf.h,v 1.90 2007/07/21 21:32:52 wouter Exp $; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16#ifndef ROO_ABS_PDF; 17#define ROO_ABS_PDF; 18 ; 19#include <RooAbsReal.h>; 20#include <RooDataHist.h>; 21#include <RooDataSet.h>; 22#include <RooFit/UniqueId.h>; 23#include <RooGlobalFunc.h>; 24#include <RooObjCacheManager.h>; 25 ; 26class RooArgSet ;; 27class RooAbsGenContext ;; 28class RooFitResult ;; 29class RooExtendPdf ;; 30class RooCategory ;; 31class TPaveText;; 32class TH1F;; 33class TH2F;; 34class TList ;; 35class RooMinimizer ;; 36class RooNumGenConfig ;; 37class RooRealIntegral ;; 38 ; 39 ; 40class RooAbsPdf : public RooAbsReal {; 41public:; 42 ; 43 // Constructors, assignment etc; 44 RooAbsPdf() ;; 45 RooAbsPdf(const char *name, const char *title=nullptr) ;; 46 RooAbsPdf(const char *name, const char *title, double minVal, double maxVal) ;; 47 // RooAbsPdf(const RooAbsPdf& other, const char* name=nullptr);; 48 ~RooAbsPdf() override;; 49 ; 50 // Toy MC generation; 51 ; 52 ////////////////////////////////////////////////////////////////////////////////; 53 /// See RooAbsPdf::generate(const RooArgSet&,const RooCmdArg&,c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:85,Guid,Guide,85,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofitcore/inc/RooAbsReal.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsReal.h. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * File: $Id: RooAbsReal.h,v 1.75 2007/07/13 21:50:24 wouter Exp $; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16#ifndef ROO_ABS_REAL; 17#define ROO_ABS_REAL; 18 ; 19#include ""RooAbsArg.h""; 20#include ""RooArgList.h""; 21#include ""RooArgSet.h""; 22#include ""RooCmdArg.h""; 23#include ""RooCurve.h""; 24#include ""RooFit/Detail/CodeSquashContext.h""; 25#include ""RooFit/EvalContext.h""; 26#include ""RooGlobalFunc.h""; 27 ; 28#include <ROOT/RSpan.hxx>; 29 ; 30class RooDataSet ;; 31class RooPlot;; 32class RooRealVar;; 33class RooAbsFunc;; 34class RooAbsCategoryLValue ;; 35class RooLinkedList ;; 36class RooNumIntConfig ;; 37class RooDataHist ;; 38class RooFunctor ;; 39class RooFitResult ;; 40class RooAbsMoment ;; 41class RooDerivative ;; 42class RooVectorDataStore ;; 43struct TreeReadBuffer; /// A space to attach TBranches; 44namespace RooBatchCompute {; 45struct RunContext;; 46}; 47 ; 48class TH1;; 49class TH1F;; 50class TH2F;; 51class TH3F;; 52 ; 53#include <iostream>; 54#include <list>; 55#include <map>; 56#include <string>; 57#include <sstream>; 58 ; 59class RooAbsReal : public RooAbsArg {; 60public:; 61 using value_type = double;; 62 ; 63 /// A RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:86,Guid,Guide,86,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofitcore/inc/RooArgSet.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooArgSet.h. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * File: $Id: RooArgSet.h,v 1.45 2007/08/09 19:55:47 wouter Exp $; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16#ifndef ROO_ARG_SET; 17#define ROO_ARG_SET; 18 ; 19#include ""RooAbsCollection.h""; 20 ; 21class RooAbsArg ;; 22class RooArgList ;; 23 ; 24class RooArgSet : public RooAbsCollection {; 25public:; 26 ; 27 // Constructors, assignment etc.; 28 RooArgSet();; 29 ; 30 /// Construct a (non-owning) RooArgSet from one or more; 31 /// RooFit objects. The set will not own its contents.; 32 /// \tparam Ts Parameter pack of objects that derive from RooAbsArg or RooFit collections; or a name.; 33 /// \param arg A RooFit object.; 34 /// Note that you can also pass a `double` as first argument; 35 /// when constructing a RooArgSet, and another templated; 36 /// constructor will be used where a RooConstVar is implicitly; 37 /// created from the `double` value.; 38 /// \param moreArgsOrName Arbitrary number of; 39 /// - Further RooFit objects that derive from RooAbsArg; 40 /// - RooFit collections of such objects; 41 /// - `double`s from which a RooConstVar is implicitly created via `RooFit::RooConst`.; 42 /// - A name for the set. Given multiple na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooArgSet_8h_source.html:85,Guid,Guide,85,doc/master/RooArgSet_8h_source.html,https://root.cern,https://root.cern/doc/master/RooArgSet_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofitcore/inc/RooFit/Detail/MathFuncs.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MathFuncs.h. Go to the documentation of this file. 1/*; 2 * Project: RooFit; 3 * Authors:; 4 * Jonas Rembser, CERN 2024; 5 * Garima Singh, CERN 2023; 6 *; 7 * Copyright (c) 2024, CERN; 8 *; 9 * Redistribution and use in source and binary forms,; 10 * with or without modification, are permitted according to the terms; 11 * listed in LICENSE (http://roofit.sourceforge.net/license.txt); 12 */; 13 ; 14#ifndef RooFit_Detail_MathFuncs_h; 15#define RooFit_Detail_MathFuncs_h; 16 ; 17#include <TMath.h>; 18#include <Math/PdfFuncMathCore.h>; 19#include <Math/ProbFuncMathCore.h>; 20 ; 21#include <cmath>; 22 ; 23namespace RooFit {; 24 ; 25namespace Detail {; 26 ; 27namespace MathFuncs {; 28 ; 29/// Calculates the binomial coefficient n over k.; 30/// Equivalent to TMath::Binomial, but inlined.; 31inline double binomial(int n, int k); 32{; 33 if (n < 0 || k < 0 || n < k); 34 return TMath::SignalingNaN();; 35 if (k == 0 || n == k); 36 return 1;; 37 ; 38 int k1 = std::min(k, n - k);; 39 int k2 = n - k1;; 40 double fact = k2 + 1;; 41 for (double i = k1; i > 1.; --i) {; 42 fact *= (k2 + i) / i;; 43 }; 44 return fact;; 45}; 46 ; 47/// The caller needs to make sure that there is at least one coefficient.; 48inline double bernstein(double x, double xmin, double xmax, double *coefs, int nCoefs); 49{; 50 double xScaled = (x - xmin) / (xmax - xmin); // rescale to [0,1]; 51 int degree = nCoefs - 1; // n+1 polys of degree n; 52 ; 53 // in case list of arguments passed is empty; 54 if (degree < 0) {; 55 return TMath::SignalingNaN();; 56 } else if (degree == 0) {; 57 return coefs[0];; 58 } else if (degree == 1) {; 59 ; 60 double a0 = coefs[0]; // c0; 61 double a1 = coefs[1] - a0; // c1 - c0; 62 return a1 * xScaled + a0;; 63 ; 64 } else if (degree == 2) {; 65 ; 66 double a0 = coefs[0]; // c0; 67 double a1 = 2 * (coefs[1] - a0); // 2 * (c1 - c0); 68",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MathFuncs_8h_source.html:99,Guid,Guide,99,doc/master/MathFuncs_8h_source.html,https://root.cern,https://root.cern/doc/master/MathFuncs_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofitcore/src/RooAbsPdf.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsPdf.cxx. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * @(#)root/roofitcore:$Id$; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16 ; 17//////////////////////////////////////////////////////////////////////////////; 18/** \class RooAbsPdf; 19 \ingroup Roofitcore; 20 \brief Abstract interface for all probability density functions.; 21 ; 22## RooAbsPdf, the base class of all PDFs; 23 ; 24RooAbsPdf is the base class for all probability density; 25functions (PDFs). The class provides hybrid analytical/numerical; 26normalization for its implementations, error tracing, and a Monte Carlo; 27generator interface.; 28 ; 29### A Minimal PDF Implementation; 30 ; 31A minimal implementation of a PDF class derived from RooAbsPdf; 32should override the `evaluate()` function. This function should; 33return the PDF's value (which does not need to be normalised).; 34 ; 35 ; 36#### Normalization/Integration; 37 ; 38Although the normalization of a PDF is an integral part of a; 39probability density function, normalization is treated separately; 40in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; 41PDF: it can be a building block for a more complex composite PDF; 42if any of its variables are f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:87,Guid,Guide,87,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofitcore/src/RooAbsReal.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsReal.cxx. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * @(#)root/roofitcore:$Id$; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16 ; 17//////////////////////////////////////////////////////////////////////////////; 18 ; 19/** \class RooAbsReal; 20 ; 21 Abstract base class for objects that represent a; 22 real value and implements functionality common to all real-valued objects; 23 such as the ability to plot them, to construct integrals of them, the; 24 ability to advertise (partial) analytical integrals etc.; 25 ; 26 Implementation of RooAbsReal may be derived, thus no interface; 27 is provided to modify the contents.; 28 ; 29 \ingroup Roofitcore; 30*/; 31 ; 32#include ""RooAbsReal.h""; 33 ; 34#include ""FitHelpers.h""; 35#include ""RooAbsCategoryLValue.h""; 36#include ""RooAbsData.h""; 37#include ""RooAddPdf.h""; 38#include ""RooAddition.h""; 39#include ""RooArgList.h""; 40#include ""RooArgProxy.h""; 41#include ""RooArgSet.h""; 42#include ""RooBinning.h""; 43#include ""RooBrentRootFinder.h""; 44#include ""RooCachedReal.h""; 45#include ""RooCategory.h""; 46#include ""RooCmdConfig.h""; 47#include ""RooConstVar.h""; 48#include ""RooCurve.h""; 49#include ""RooCustomizer.h""; 50#include ""RooDataHist.h""; 51#include ""RooDataS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:88,Guid,Guide,88,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Typedefs |; Enumerations |; Functions |; Variables ; RooAdaptiveGaussKronrodIntegrator1D.cxx File Reference. #include <cassert>; #include <cstdlib>; #include ""TClass.h""; #include ""Riostream.h""; #include ""RooAdaptiveGaussKronrodIntegrator1D.h""; #include ""RooArgSet.h""; #include ""RooRealVar.h""; #include ""RooNumber.h""; #include ""RooNumIntFactory.h""; #include ""TMath.h""; #include ""RooMsgService.h"". Include dependency graph for RooAdaptiveGaussKronrodIntegrator1D.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  extrapolation_table;  ; struct  gsl_function_struct;  ; struct  gsl_integration_workspace;  ; struct  il_params;  ; struct  iu_params;  . Macros; #define GSL_COERCE_DBL(x)   (gsl_coerce_double(x));  ; #define GSL_DBL_EPSILON   2.2204460492503131e-16;  ; #define GSL_DBL_MAX   1.7976931348623157e+308;  ; #define GSL_DBL_MIN   2.2250738585072014e-308;  ; #define GSL_EBADTOL   13 /* user specified an invalid tolerance */;  ; #define GSL_EDIVERGE   6;  ; #define GSL_EDOM   1 /* input domain error, e.g sqrt(-1) */;  ; #define GSL_EFAILED   5;  ; #define GSL_EINVAL   2;  ; #define GSL_EMAXITER   3;  ; #define GSL_ENOMEM   8 /* malloc failed */;  ; #define GSL_EROUND   7;  ; #define GSL_ERROR(a, b)   oocoutE(nullptr,Integration) << ""RooAdaptiveGaussKronrodIntegrator1D::integral() ERROR: "" << a << endl ; return b ;;  ; #define GSL_ERROR_VAL(reason, gsl_errno, value)   return value ;;  ; #define GSL_ESING   4;  ; #define GSL_ETOL   14 /* failed to reach the specified tolerance */;  ; #define GSL_FN_EVAL(F, x)   (*((F)->function))(x,(F)->params);  ; #define GSL_MAX(a, b)   ((a) > (b) ? (a) : (b));  ; #define GSL_SUCCESS   0;  . Typedefs; typedef struct gsl_function_struct gsl_function;  ; typedef void gsl_integration_rule(const gsl_fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAdaptiveGaussKronrodIntegrator1D_8cxx.html:116,Guid,Guide,116,doc/master/RooAdaptiveGaussKronrodIntegrator1D_8cxx.html,https://root.cern,https://root.cern/doc/master/RooAdaptiveGaussKronrodIntegrator1D_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: socket Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; socket Struct Reference. . Definition at line 1893 of file civetweb.c. Public Attributes; unsigned char in_use;  ; unsigned char is_ssl;  ; union usa lsa;  ; union usa rsa;  ; SOCKET sock;  ; unsigned char ssl_redir;  . Member Data Documentation. ◆ in_use. unsigned char socket::in_use. Definition at line 1900 of file civetweb.c. ◆ is_ssl. unsigned char socket::is_ssl. Definition at line 1897 of file civetweb.c. ◆ lsa. union usa socket::lsa. Definition at line 1895 of file civetweb.c. ◆ rsa. union usa socket::rsa. Definition at line 1896 of file civetweb.c. ◆ sock. SOCKET socket::sock. Definition at line 1894 of file civetweb.c. ◆ ssl_redir. unsigned char socket::ssl_redir. Definition at line 1898 of file civetweb.c. Collaboration diagram for socket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; net/http/civetweb/civetweb.c. socket. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structsocket.html:63,Guid,Guide,63,doc/master/structsocket.html,https://root.cern,https://root.cern/doc/master/structsocket.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/pymva/src/PyMethodBase.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PyMethodBase.cxx. Go to the documentation of this file. 1// @(#)root/tmva/pymva $Id$; 2// Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015, Stefan Wunsch 2017; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : PyMethodBase *; 8 * *; 9 * Description: *; 10 * Virtual base class for all MVA method based on python *; 11 * *; 12 **********************************************************************************/; 13 ; 14#include <Python.h> // Needs to be included first to avoid redefinition of _POSIX_C_SOURCE; 15#include <TMVA/PyMethodBase.h>; 16 ; 17#include ""TMVA/DataSet.h""; 18#include ""TMVA/DataSetInfo.h""; 19#include ""TMVA/MsgLogger.h""; 20#include ""TMVA/Results.h""; 21#include ""TMVA/Timer.h""; 22#include ""TMVA/Tools.h""; 23 ; 24#include ""TSystem.h""; 25 ; 26#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; 27#include <numpy/arrayobject.h>; 28 ; 29using namespace TMVA;; 30 ; 31namespace TMVA {; 32namespace Internal {; 33class PyGILRAII {; 34 PyGILState_STATE m_GILState;; 35 ; 36public:; 37 PyGILRAII() : m_GILState(PyGILState_Ensure()) {}; 38 ~PyGILRAII() { PyGILState_Release(m_GILState); }; 39};; 40} // namespace Internal; 41 ; 42/// get current Python executable used by ROOT; 43TString Python_Executable() {; 44 TString python_version = gSystem->GetFromPipe(""root-config --python-version"");; 45 if (python_version.IsNull()) {; 46 TMVA::gTools().Log() << kFATAL << ""Can't find a valid Python version used to build ROOT"" << Endl;; 47 return nullptr;; 48 }; 49#ifdef _MSC_VER; 50 // on Windows there is a space before the version and the executable is python.exe; 51 // for both versions of Python; 52 python_version.ReplaceAll("" "", """");; 53 if (python_version[0] == '2' || python_version[0] == ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PyMethodBase_8cxx_source.html:83,Guid,Guide,83,doc/master/PyMethodBase_8cxx_source.html,https://root.cern,https://root.cern/doc/master/PyMethodBase_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/sofie/src/Prototype.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Prototype.cxx File Reference. #include <memory>; #include ""TMVA/RModel.hxx""; #include ""TMVA/RModelParser_ONNX.hxx""; #include <cctype>; #include <algorithm>. Include dependency graph for Prototype.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; int main ();  . Function Documentation. ◆ main(). int main ; (; ). Definition at line 12 of file Prototype.cxx. tmvasofiesrcPrototype.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Prototype_8cxx.html:83,Guid,Guide,83,doc/master/Prototype_8cxx.html,https://root.cern,https://root.cern/doc/master/Prototype_8cxx.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/sofie/src/Prototype.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Prototype.cxx. Go to the documentation of this file. 1#include <memory>; 2 ; 3#include ""TMVA/RModel.hxx""; 4#include ""TMVA/RModelParser_ONNX.hxx""; 5 ; 6#include <cctype>; 7#include <algorithm>; 8 ; 9 ; 10using namespace TMVA::Experimental::SOFIE;; 11 ; 12int main(){; 13 ; 14 ; 15 RModelParser_ONNX parser;; 16 RModel model = parser.Parse(""./Linear_64.onnx"");; 17 RModel model2 = std::move(model);; 18 model2.PrintRequiredInputTensors();; 19 model2.PrintInitializedTensors();; 20 model2.HeadInitializedTensors(""18bias"");; 21 model2.HeadInitializedTensors(""0weight"");; 22 ; 23 std::cout << ""==="" << std::endl;; 24 ; 25 model2.Generate();; 26 //model2.PrintGenerated();; 27 //model2.Initialize();; 28 model2.PrintInitializedTensors();; 29 model2.HeadInitializedTensors(""6bias"", 100);; 30 ; 31 ; 32 std::cout << ""==="" << std::endl;; 33 ; 34 ; 35 ; 36 //model2.PrintGenerated();; 37 model2.OutputGenerated();; 38 //model2.PrintIntermediateTensors();; 39/*; 40 std::cout << ""==="" << std::endl;; 41 ; 42 RModel model3;; 43 model3.AddInputTensorInfo(""1"", ETensorType::FLOAT, {1,2,3,4});; 44 //auto op = std::make_unique<ROperator_Transpose<float>>({3,2,1,0}, ""1"", ""2"");; 45 std::unique_ptr<ROperator>op ( new ROperator_Transpose<float>({3,2,1,0}, ""1"", ""2"")) ;; 46 model3.AddOperator(std::move(op));; 47 //op->Initialize(model3);; 48 //std::cout << (op->Generate(""1""));; 49 ; 50 model3.AddInputTensorInfo(""3"", ETensorType::FLOAT, {2,3});; 51 model3.AddInputTensorInfo(""4"", ETensorType::FLOAT, {3,2});; 52 std::unique_ptr<ROperator> op2 (new ROperator_Gemm<float> (1.0, 1.0, 0, 0, ""3"", ""4"", ""5""));; 53 model3.AddOperator(std::move(op2));; 54 std::unique_ptr<ROperator> op3 (new ROperator_Relu<float> (""5"", ""6""));; 55 model3.AddOperator(std::move(op3));; 56 //op2->Initialize(model3);; 57 //std::cout << (op2->Generate(""2""));; 58 ; 59 model3.Generate();; 60 model3.PrintGenerated()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Prototype_8cxx_source.html:80,Guid,Guide,80,doc/master/Prototype_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Prototype_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. CudaMatrix.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 13/07/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12///////////////////////////////////////////////////////////////////////; 13// Contains the TCudaMatrix class for the representation of matrices //; 14// on CUDA devices as well as the TCudaDeviceReference class which //; 15// is a helper class to emulate lvalue references to floating point //; 16// values on the device. //; 17///////////////////////////////////////////////////////////////////////; 18 ; 19#ifndef TMVA_DNN_ARCHITECTURES_CUDA_CUDAMATRIX; 20#define TMVA_DNN_ARCHITECTURES_CUDA_CUDAMATRIX; 21 ; 22// in case we compile C++ code with std-17 and cuda with lower standard; 23// use experimental string_view, otherwise keep as is; 24#include ""RConfigure.h""; 25 ; 26#include ""cuda.h""; 27#include ""cuda_runtime.h""; 28#include ""cublas_v2.h""; 29#include ""curand_kernel.h""; 30 ; 31#include ""TMatrixT.h""; 32#include ""CudaBuffers.h""; 33 ; 34#define CUDACHECK(ans) {cudaError((ans), __FILE__, __LINE__); }; 35 ; 36namespace TMVA {; 37namespace DNN {; 38 ; 39/** Function to check cuda return code. Taken from; 40 * http://stackoverflow.com/questions/14038589/; 41 */; 42inline void cudaError(cudaError_t code, const char *file, int line, bool abort=true);; 43 ; 44//____________________________________________________________________________; 45//; 46// Cuda Device Reference; 47//__________________________________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaMatrix_8h_source.html:106,Guid,Guide,106,doc/master/CudaMatrix_8h_source.html,https://root.cern,https://root.cern/doc/master/CudaMatrix_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaTensor.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. CudaTensor.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 13/07/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12///////////////////////////////////////////////////////////////////////; 13// Contains the TCudaMatrix class for the representation of matrices //; 14// on CUDA devices as well as the TCudaDeviceReference class which //; 15// is a helper class to emulate lvalue references to floating point //; 16// values on the device. //; 17///////////////////////////////////////////////////////////////////////; 18 ; 19#ifndef TMVA_DNN_ARCHITECTURES_CUDA_CUDATENSOR; 20#define TMVA_DNN_ARCHITECTURES_CUDA_CUDATENSOR; 21 ; 22 ; 23#include <vector>; 24#include <cstring>; 25#include <cassert>; 26#include <iostream>; 27 ; 28#include ""CudaMatrix.h""; 29#include ""TMatrixT.h""; 30#include ""CudaBuffers.h""; 31 ; 32//#include ""TMVA/RTensor.hxx""; 33 ; 34#ifdef R__HAS_CUDNN; 35#include ""cudnn.h""; 36#define CUDNNCHECK(ans) {cudnnError((ans), __FILE__, __LINE__); }; 37#endif; 38 ; 39namespace TMVA {; 40 ; 41 ; 42 ; 43#ifndef TMVA_RTENSOR; 44 ; 45namespace Experimental {; 46/// Memory layout type (copy from RTensor.hxx); 47enum class MemoryLayout : uint8_t {; 48 RowMajor = 0x01,; 49 ColumnMajor = 0x02; 50};; 51}; 52#endif; 53 ; 54namespace DNN {; 55 ; 56using MemoryLayout = TMVA::Experimental::MemoryLayout;; 57 ; 58#ifdef R__HAS_CUDNN; 59/**; 60 * Function to handle the status output of cuDNN function calls. See also; 61 * CUDACHECK in CudaMatrix.h.; 62 */; 63inli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaTensor_8h_source.html:106,Guid,Guide,106,doc/master/CudaTensor_8h_source.html,https://root.cern,https://root.cern/doc/master/CudaTensor_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DNN/DataLoader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataLoader.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 08/08/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/////////////////////////////////////////////////////////////////////; 13// Generic data loader for neural network input data. Provides a //; 14// high level abstraction for the transfer of training data to the //; 15// device. //; 16/////////////////////////////////////////////////////////////////////; 17 ; 18#ifndef TMVA_DNN_DATALOADER; 19#define TMVA_DNN_DATALOADER; 20 ; 21#include ""TMatrix.h""; 22#include ""TMVA/Event.h""; 23 ; 24#include <algorithm>; 25#include <random>; 26#include <vector>; 27#include <utility>; 28 ; 29namespace TMVA {; 30 ; 31class DataSetInfo;; 32 ; 33namespace DNN {; 34 ; 35//; 36// Input Data Types; 37//______________________________________________________________________________; 38using MatrixInput_t = std::tuple<const TMatrixT<Double_t> &, const TMatrixT<Double_t> &, const TMatrixT<Double_t> &>;; 39using TMVAInput_t =; 40 std::tuple<const std::vector<Event *> &, const DataSetInfo &>;; 41 ; 42using IndexIterator_t = typename std::vector<size_t>::iterator;; 43 ; 44/** TBatch; 45 *; 46 * Class representing training batches consisting of a matrix of input data; 47 * and a matrix of output data. The input and output data can be accessed using; 48 * the GetInput() and GetOutput() member functions.; 49 *; 50 * \tparam AArchitecture The underlying architecture.; 51 */; 52//_________________________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DNN_2DataLoader_8h_source.html:87,Guid,Guide,87,doc/master/DNN_2DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DNN_2DataLoader_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DNN/Functions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 20/06/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/////////////////////////////////////////////////////////////////////; 13// Contains function enums for activation and output functions, as //; 14// well as generic evaluation functions, that delegate the call to //; 15// the corresponding evaluation kernel. //; 16/////////////////////////////////////////////////////////////////////; 17 ; 18#ifndef TMVA_DNN_FUNCTIONS; 19#define TMVA_DNN_FUNCTIONS; 20 ; 21namespace TMVA; 22{; 23namespace DNN; 24{; 25//______________________________________________________________________________; 26//; 27// Enum Definitions; 28//______________________________________________________________________________; 29 ; 30/*! Enum that represents layer activation functions. */; 31enum class EActivationFunction; 32{; 33 kIdentity = 0,; 34 kRelu = 1,; 35 kSigmoid = 2,; 36 kTanh = 3,; 37 kSymmRelu = 4,; 38 kSoftSign = 5,; 39 kGauss = 6,; 40 kFastTanh = 7; 41 ; 42};; 43 ; 44/*! Enum that represents output functions */; 45enum class EOutputFunction; 46{; 47 kIdentity = 'I',; 48 kSigmoid = 'S',; 49 kSoftmax = 'M'; 50};; 51 ; 52/*! Enum that represents objective functions for the net, i.e. functions; 53* that take the output from the last layer in the net together with the; 54* truths and return the objective function values that is to be minimized; 55* in the training process. */; 56enum class ELossFunction; 57{; 58 kCrossEntropy = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2DNN_2Functions_8h_source.html:86,Guid,Guide,86,doc/master/tmva_2tmva_2inc_2TMVA_2DNN_2Functions_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2DNN_2Functions_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DNN/GeneralLayer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GeneralLayer.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Vladimir Ilievski; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : TGeneralLayer *; 8 * *; 9 * *; 10 * Description: *; 11 * General Deep Neural Network Layer *; 12 * *; 13 * Authors (alphabetical): *; 14 * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; 15 * *; 16 * Copyright (c) 2005-2015: *; 17 * CERN, Switzerland *; 18 * U. of Victoria, Canada *; 19 * MPI-K Heidelberg, Germany *; 20 * U. of Bonn, Germany *; 21 * *; 22 * Redistribution and use in source and binary forms, with or without *; 23 * modification, are permitted according to the terms listed in LICENSE *; 24 * (see tmva/doc/LICENSE) *; 25 **********************************************************************************/; 26 ; 27#ifndef TMVA_DNN_GENERALLAYER; 28#define TMVA_DNN_GENERALLAYER; 29 ; 30#include <sstream>; 31#include <limits>; 32#include <vector>; 33#include <string>; 34 ; 35// for xml; 36#include ""TMVA/Tools.h""; 37#include ""TError.h"" // for R__ASSERT; 38 ; 39#include ""TMVA/DNN/Functions.h""; 40 ; 41namespace TMVA {; 42namespace DNN {; 43 ; 44/** \class VGeneralLayer; 45 Generic General Layer class.; 46 ; 47 This class represents the general class for all layers in the Deep Learning; 48 Module.; 49 */; 50template <typename Architecture_t>; 51class VGeneralLayer {; 52 ; 53 using Tensor_t = typename Architecture_t::Tensor_t;; 54 using Matrix_t = typename Architecture_t::Matrix_t;; 55 using Scalar_t = typename Architecture_t::Scalar_t;; 56 ; 57 ; 58protected:; 59 size_t fBatchSize; ///< Batch size used for training and evaluation; 60 ; 61 size_t fInputDepth; ///< The depth of the previous ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GeneralLayer_8h_source.html:89,Guid,Guide,89,doc/master/GeneralLayer_8h_source.html,https://root.cern,https://root.cern/doc/master/GeneralLayer_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TensorDataLoader.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Vladimir Ilievski; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : TTensorDataLoader *; 8 * *; 9 * *; 10 * Description: *; 11 * Tensor Data Loader Class *; 12 * *; 13 * Authors (alphabetical): *; 14 * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; 15 * *; 16 * Copyright (c) 2005-2015: *; 17 * CERN, Switzerland *; 18 * U. of Victoria, Canada *; 19 * MPI-K Heidelberg, Germany *; 20 * U. of Bonn, Germany *; 21 * *; 22 * Redistribution and use in source and binary forms, with or without *; 23 * modification, are permitted according to the terms listed in LICENSE *; 24 * (see tmva/doc/LICENSE) *; 25 **********************************************************************************/; 26 ; 27#ifndef TMVA_DNN_TENSORDATALOADER; 28#define TMVA_DNN_TENSORDATALOADER; 29 ; 30#include ""TMatrix.h""; 31#include ""TMVA/Event.h""; 32#include <algorithm>; 33#include <vector>; 34#include <utility>; 35 ; 36namespace TMVA {; 37 class DataSetInfo;; 38namespace DNN {; 39 ; 40//; 41// Input Data Types; 42//______________________________________________________________________________; 43using TensorInput =; 44 std::tuple<const std::vector<TMatrixT<Double_t>> &, const TMatrixT<Double_t> &, const TMatrixT<Double_t> &>;; 45 ; 46using TMVAInput_t = std::tuple<const std::vector<Event *> &, const DataSetInfo &>;; 47using IndexIterator_t = typename std::vector<size_t>::iterator;; 48 ; 49/** TTensorBatch; 50 *; 51 * Class representing training batches consisting of a vector of matrices as input data; 52 * and a matrix of output data. The input and output data can be accessed using; 53 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TensorDataLoader_8h_source.html:93,Guid,Guide,93,doc/master/TensorDataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/TensorDataLoader_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DataLoader.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; DataLoader.h File Reference. #include <vector>; #include ""TCut.h""; #include ""TMVA/Configurable.h""; #include ""TMVA/Types.h""; #include ""TMVA/DataSet.h"". Include dependency graph for DataLoader.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::DataLoader;  . Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; void TMVA::DataLoaderCopy (TMVA::DataLoader *des, TMVA::DataLoader *src);  . tmvatmvaincTMVADataLoader.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h.html:86,Guid,Guide,86,doc/master/DataLoader_8h.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DataLoader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataLoader.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag, Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; 3//NOTE: Based on TMVA::Factory; 4 ; 5/**********************************************************************************; 6 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 7 * Package: TMVA *; 8 * Class : DataLoader *; 9 * *; 10 * *; 11 * Description: *; 12 * This is a class to load datasets into every booked method *; 13 * *; 14 * Authors (alphabetical): *; 15 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 16 * Omar Zapata <andresete.chaos@gmail.com> - ITM/UdeA, Colombia *; 17 * Sergei Gleyzer<sergei.gleyzer@cern.ch> - CERN, Switzerland *; 18 * *; 19 * Copyright (c) 2005-2011: *; 20 * CERN, Switzerland *; 21 * ITM/UdeA, Colombia *; 22 * *; 23 * Redistribution and use in source and binary forms, with or without *; 24 * modification, are permitted according to the terms listed in LICENSE *; 25 * (see tmva/doc/LICENSE) *; 26 **********************************************************************************/; 27 ; 28#ifndef ROOT_TMVA_DataLoader; 29#define ROOT_TMVA_DataLoader; 30 ; 31#include <vector>; 32#include ""TCut.h""; 33 ; 34#include ""TMVA/Configurable.h""; 35#include ""TMVA/Types.h""; 36#include ""TMVA/DataSet.h""; 37 ; 38class TFile;; 39class TTree;; 40class TH2;; 41 ; 42namespace TMVA {; 43 ; 44 class CvSplit;; 45 class DataInputHandler;; 46 class DataSetInfo;; 47 class DataSetManager;; 48 class VariableTransformBase;; 49 ; 50 class DataLoader : public Configurable {; 51 public:; 52 ; 53 DataLoader(TString thedlName=""default"");; 54 ; 55 // default destructor; 56 virtual ~DataLoader();; 57 ; 58 ; 59 // add events to training and testing trees; 60 void Ad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:83,Guid,Guide,83,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/DataSetFactory.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataSetFactory.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Helge Voss; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : DataSetFactory *; 8 * *; 9 * *; 10 * Description: *; 11 * Contains all the data information *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 16 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 17 * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; 18 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 19 * *; 20 * Copyright (c) 2006: *; 21 * CERN, Switzerland *; 22 * MPI-K Heidelberg, Germany *; 23 * *; 24 * Redistribution and use in source and binary forms, with or without *; 25 * modification, are permitted according to the terms listed in LICENSE *; 26 * (see tmva/doc/LICENSE) *; 27 **********************************************************************************/; 28 ; 29#ifndef ROOT_TMVA_DataSetFactory; 30#define ROOT_TMVA_DataSetFactory; 31 ; 32//////////////////////////////////////////////////////////////////////////; 33// //; 34// DataSetFactory //; 35// //; 36// Class that contains all the data information //; 37// //; 38//////////////////////////////////////////////////////////////////////////; 39 ; 40#include <vector>; 41#include <map>; 42 ; 43#include ""TString.h""; 44#include ""TTree.h""; 45#include ""TCut.h""; 46#include ""TTreeFormula.h""; 47#include ""TMatrixDfwd.h""; 48#include ""TPrincipal.h""; 49#include ""TRandom3.h""; 50 ; 51#include ""TMVA/Types.h""; 52#include ""TMVA/VariableIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8h_source.html:87,Guid,Guide,87,doc/master/DataSetFactory_8h_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/Factory.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; Factory.h File Reference. #include <vector>; #include <map>; #include ""TCut.h""; #include ""TMVA/Configurable.h""; #include ""TMVA/Types.h""; #include ""TMVA/DataSet.h"". Include dependency graph for Factory.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::Factory;  This is the main MVA steering class. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . tmvatmvaincTMVAFactory.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h.html:83,Guid,Guide,83,doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/Factory.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Factory.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; 3// Updated by: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; 4 ; 5/**********************************************************************************; 6 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 7 * Package: TMVA *; 8 * Class : Factory *; 9 * *; 10 * *; 11 * Description: *; 12 * This is the main MVA steering class: it creates (books) all MVA methods, *; 13 * and guides them through the training, testing and evaluation phases. *; 14 * *; 15 * Authors (alphabetical): *; 16 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 17 * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; 18 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 19 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 20 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 21 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 22 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 23 * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; 24 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 25 * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; 26 * *; 27 * Copyright (c) 2005-2011: *; 28 * CERN, Switzerland *; 29 * U. of Victoria, Canada *; 30 * MPI-K Heidelberg, Germany *; 31 * U. of Bonn, Germany *; 32 * UdeA/ITM, Colombia *; 33 * U. of Florida, USA *; 34 * *; 35 * Redistribution and use in source and binary forms, with or without *; 36 * modification, are permitted according to the terms listed in LICENSE *; 37 * (see tmva/doc/LICENSE) *; 38 **********************************************************************************/; 39 ; 40#ifndef ROOT_T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html:80,Guid,Guide,80,doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,2,"['Guid', 'guid']","['Guide', 'guides']"
Usability,". ROOT: tmva/tmva/inc/TMVA/MethodBase.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodBase.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : MethodBase *; 8 * *; 9 * *; 10 * Description: *; 11 * Virtual base class for all MVA method *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 17 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 18 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 19 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 20 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 21 * *; 22 * Copyright (c) 2005-2011: *; 23 * CERN, Switzerland *; 24 * U. of Victoria, Canada *; 25 * MPI-K Heidelberg, Germany *; 26 * U. of Bonn, Germany *; 27 * *; 28 * Redistribution and use in source and binary forms, with or without *; 29 * modification, are permitted according to the terms listed in LICENSE *; 30 * (see tmva/doc/LICENSE) *; 31 **********************************************************************************/; 32 ; 33#ifndef ROOT_TMVA_MethodBase; 34#define ROOT_TMVA_MethodBase; 35 ; 36//////////////////////////////////////////////////////////////////////////; 37// //; 38// MethodBase //; 39// //; 40// Virtual base class for all TMVA method //; 41// //; 42//////////////////////////////////////////////////////////////////////////; 43 ; 44#include <iosfwd>; 45#include <vector>; 46#include <map>; 47#include ""assert.h""; 48 ; 49#include """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:83,Guid,Guide,83,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/MethodCuts.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; MethodCuts.h File Reference. #include <vector>; #include ""TMVA/MethodBase.h""; #include ""TMVA/BinarySearchTree.h""; #include ""TMVA/PDF.h""; #include ""TMatrixDfwd.h""; #include ""IFitterTarget.h"". Include dependency graph for MethodCuts.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::MethodCuts;  Multivariate optimisation of signal efficiency for given background efficiency, applying rectangular minimum and maximum requirements. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . tmvatmvaincTMVAMethodCuts.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h.html:86,Guid,Guide,86,doc/master/MethodCuts_8h.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/MethodCuts.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodCuts.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Helge Voss, Kai Voss; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : MethodCuts *; 8 * *; 9 * *; 10 * Description: *; 11 * Multivariate optimisation of signal efficiency for given background *; 12 * efficiency, using rectangular minimum and maximum requirements on *; 13 * input variables *; 14 * *; 15 * Authors (alphabetical): *; 16 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 17 * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; 18 * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; 19 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 20 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 21 * *; 22 * Copyright (c) 2005: *; 23 * CERN, Switzerland *; 24 * U. of Victoria, Canada *; 25 * MPI-K Heidelberg, Germany *; 26 * LAPP, Annecy, France *; 27 * *; 28 * Redistribution and use in source and binary forms, with or without *; 29 * modification, are permitted according to the terms listed in LICENSE *; 30 * (see tmva/doc/LICENSE) *; 31 **********************************************************************************/; 32 ; 33#ifndef ROOT_TMVA_MethodCuts; 34#define ROOT_TMVA_MethodCuts; 35 ; 36//////////////////////////////////////////////////////////////////////////; 37// //; 38// MethodCuts //; 39// //; 40// Multivariate optimisation of signal efficiency for given background //; 41// efficiency, using rectangular minimum and maximum requirements on //; 42// input variables //; 43// //; 44//////////////////////////////////////////////////////////////////////////; 45 ; 46#i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h_source.html:83,Guid,Guide,83,doc/master/MethodCuts_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/MsgLogger.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MsgLogger.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Attila Krasznahorkay, Andreas Hoecker, Joerg Stelzer, Eckhard von Toerne; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : MsgLogger *; 8 * *; 9 * *; 10 * Description: *; 11 * TMVA output logger class producing nicely formatted log messages *; 12 * *; 13 * Author: *; 14 * Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch> - CERN, Switzerland *; 15 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; 17 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 18 * *; 19 * Copyright (c) 2005-2011: *; 20 * CERN, Switzerland *; 21 * U. of Victoria, Canada *; 22 * MPI-K Heidelberg, Germany *; 23 * U. of Bonn, Germany *; 24 * *; 25 * Redistribution and use in source and binary forms, with or without *; 26 * modification, are permitted according to the terms listed in LICENSE *; 27 * (see tmva/doc/LICENSE) *; 28 **********************************************************************************/; 29 ; 30#ifndef ROOT_TMVA_MsgLogger; 31#define ROOT_TMVA_MsgLogger; 32 ; 33//////////////////////////////////////////////////////////////////////////; 34// //; 35// MsgLogger //; 36// //; 37// ostringstream derivative to redirect and format output //; 38// //; 39//////////////////////////////////////////////////////////////////////////; 40 ; 41// STL include(s):; 42#include <string>; 43#include <sstream>; 44#include <iostream>; 45#include <map>; 46#include <atomic>; 47 ; 48// ROOT include(s); 49#include ""TObject.h""; 50 ; 51#include ""TMVA/Types.h""; 52 ; 53// Local include(s):; 54 ; 55namespace TMVA {; 56 ; 57 class MsgLogger : public std::ostri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MsgLogger_8h_source.html:82,Guid,Guide,82,doc/master/MsgLogger_8h_source.html,https://root.cern,https://root.cern/doc/master/MsgLogger_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/NeuralNet.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NeuralNet.h. Go to the documentation of this file. 1/**; 2 * @file TMVA/NeuralNet.h; 3 * @author Peter Speckmayer; 4 * @version 1.0; 5 *; 6 * @section LICENSE; 7 *; 8 *; 9 * @section Neural net implementation; 10 *; 11 * An implementation of a neural net for TMVA. This neural net uses multithreading; 12 *; 13 */; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// NeuralNet //; 19// //; 20// A neural net implementation //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#ifndef TMVA_NEURAL_NET; 25#define TMVA_NEURAL_NET; 26#pragma once; 27 ; 28#include <vector>; 29#include <iostream>; 30#include <algorithm>; 31#include <iterator>; 32#include <functional>; 33#include <tuple>; 34#include <cmath>; 35#include <cassert>; 36#include <random>; 37#include <thread>; 38#include <future>; 39#include <type_traits>; 40#include <string>; 41#include <utility>; 42 ; 43#include ""Pattern.h""; 44#include ""Monitoring.h""; 45 ; 46#include ""TApplication.h""; 47#include ""Timer.h""; 48 ; 49#include ""TH1F.h""; 50#include ""TH2F.h""; 51 ; 52#include <fenv.h> // turn on or off exceptions for NaN and other numeric exceptions; 53 ; 54 ; 55namespace TMVA; 56{; 57 ; 58 class IPythonInteractive;; 59 ; 60 namespace DNN; 61 {; 62 ; 63 // double gaussDoubl (edouble mean, double sigma);; 64 ; 65 ; 66 ; 67 double gaussDouble (double mean, double sigma);; 68 double uniformDouble (double minValue, double maxValue);; 69 int randomInt (int maxValue);; 70 ; 71 ; 72 ; 73 ; 74 class MeanVariance; 75 {; 76 public:; 77 MeanVariance(); 78 : m_n(0); 79 , m_sumWeights(0); 80 , m_mean(0); 81 , m_squared(0); 82 {}; 83 ; 84 inline void clear(); 85 {; 86 m_n = 0;; 87 m_sumWeights = 0;; 88 m_mean = 0;; 89 m_squared = 0;; 90 }; 91 ; 92 template <typename T>; 93 inline void add(T value, double weight = 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:82,Guid,Guide,82,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/NeuralNet.icc Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NeuralNet.icc. Go to the documentation of this file. 1#ifndef TMVA_NEURAL_NET_I; 2#define TMVA_NEURAL_NET_I; 3 ; 4#ifndef TMVA_NEURAL_NET; 5#error ""Do not use NeuralNet.icc directly. #include \""NeuralNet.h\"" instead.""; 6#endif // TMVA_NEURAL_NET; 7#pragma once; 8#ifndef _MSC_VER; 9#pragma GCC diagnostic ignored ""-Wunused-variable""; 10#endif; 11 ; 12#include ""Math/Util.h""; 13 ; 14#include ""TMVA/Pattern.h""; 15#include ""TMVA/MethodBase.h""; 16 ; 17#include <tuple>; 18#include <future>; 19#include <random>; 20 ; 21namespace TMVA; 22{; 23 namespace DNN; 24 {; 25 ; 26 ; 27 ; 28 ; 29 ; 30 ; 31 ; 32 ; 33 template <typename T>; 34 T uniformFromTo (T from, T to); 35 {; 36 return from + (rand ()* (to - from)/RAND_MAX);; 37 }; 38 ; 39 ; 40 ; 41 template <typename Container, typename T>; 42 void uniformDouble (Container& container, T maxValue); 43 {; 44 for (auto it = begin (container), itEnd = end (container); it != itEnd; ++it); 45 {; 46// (*it) = uniformFromTo (-1.0*maxValue, 1.0*maxValue);; 47 (*it) = TMVA::DNN::uniformFromTo (-1.0*maxValue, 1.0*maxValue);; 48 }; 49 }; 50 ; 51 ; 52 extern std::shared_ptr<std::function<double(double)>> ZeroFnc;; 53 ; 54 ; 55 extern std::shared_ptr<std::function<double(double)>> Sigmoid;; 56 extern std::shared_ptr<std::function<double(double)>> InvSigmoid;; 57 ; 58 extern std::shared_ptr<std::function<double(double)>> Tanh;; 59 extern std::shared_ptr<std::function<double(double)>> InvTanh;; 60 ; 61 extern std::shared_ptr<std::function<double(double)>> Linear;; 62 extern std::shared_ptr<std::function<double(double)>> InvLinear;; 63 ; 64 extern std::shared_ptr<std::function<double(double)>> SymmReLU;; 65 extern std::shared_ptr<std::function<double(double)>> InvSymmReLU;; 66 ; 67 extern std::shared_ptr<std::function<double(double)>> ReLU;; 68 extern std::shared_ptr<std::function<double(double)>> InvReLU;; 69 ; 70 ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:84,Guid,Guide,84,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/Reader.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; Reader.h File Reference. #include ""TMVA/Configurable.h""; #include ""TMVA/Types.h""; #include ""TMVA/DataSetInfo.h""; #include ""TMVA/DataInputHandler.h""; #include ""TMVA/DataSetManager.h""; #include <vector>; #include <map>; #include <stdexcept>; #include <string>. Include dependency graph for Reader.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::Reader;  The Reader class serves to use the MVAs in a specific analysis context. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . tmvatmvaincTMVAReader.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8h.html:82,Guid,Guide,82,doc/master/Reader_8h.html,https://root.cern,https://root.cern/doc/master/Reader_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/Reader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Reader.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Reader *; 8 * *; 9 * *; 10 * Description: *; 11 * Reader class to be used in the user application to interpret the trained *; 12 * MVAs in an analysis context *; 13 * *; 14 * Authors (alphabetical order): *; 15 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 16 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 17 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 18 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 19 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 20 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 21 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 22 * *; 23 * Copyright (c) 2005-2011: *; 24 * CERN, Switzerland *; 25 * U. of Victoria, Canada *; 26 * MPI-K Heidelberg, Germany *; 27 * U. of Bonn, Germany *; 28 * *; 29 * Redistribution and use in source and binary forms, with or without *; 30 * modification, are permitted according to the terms listed in LICENSE *; 31 * (see tmva/doc/LICENSE) *; 32 **********************************************************************************/; 33 ; 34#ifndef ROOT_TMVA_Reader; 35#define ROOT_TMVA_Reader; 36 ; 37//////////////////////////////////////////////////////////////////////////; 38// //; 39// Reader //; 40// //; 41// Reader class to be used in the user application to interpret the //; 42// trained MVAs in an analysis context //; 43// //; 44/////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8h_source.html:79,Guid,Guide,79,doc/master/Reader_8h_source.html,https://root.cern,https://root.cern/doc/master/Reader_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/Tools.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; Tools.h File Reference. #include <vector>; #include <string>; #include <sstream>; #include <iostream>; #include <atomic>; #include ""TXMLEngine.h""; #include ""TMatrixDSymfwd.h""; #include ""TMatrixDfwd.h""; #include ""TVectorDfwd.h""; #include ""TMVA/Types.h""; #include ""TMVA/VariableTransformBase.h""; #include ""TString.h""; #include ""TMVA/MsgLogger.h"". Include dependency graph for Tools.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::RandomGenerator< TRandomLike, UIntType, max_val >;  ; class  TMVA::Tools;  Global auxiliary applications and data treatment routines. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; Tools & TMVA::gTools ();  . tmvatmvaincTMVATools.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8h.html:81,Guid,Guide,81,doc/master/Tools_8h.html,https://root.cern,https://root.cern/doc/master/Tools_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/inc/TMVA/Types.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Types.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Types *; 8 * *; 9 * *; 10 * Description: *; 11 * GLobal types (singleton class) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 17 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 18 * *; 19 * Copyright (c) 2005: *; 20 * CERN, Switzerland *; 21 * U. of Victoria, Canada *; 22 * MPI-K Heidelberg, Germany *; 23 * *; 24 * Redistribution and use in source and binary forms, with or without *; 25 * modification, are permitted according to the terms listed in LICENSE *; 26 * (http://mva.sourceforge.net/license.txt) *; 27 **********************************************************************************/; 28 ; 29#ifndef ROOT_TMVA_Types; 30#define ROOT_TMVA_Types; 31 ; 32//////////////////////////////////////////////////////////////////////////; 33// //; 34// Types //; 35// //; 36// Singleton class for Global types used by TMVA //; 37// //; 38//////////////////////////////////////////////////////////////////////////; 39 ; 40#include <map>; 41#include <atomic>; 42 ; 43#include ""RtypesCore.h""; 44 ; 45#include ""TString.h""; 46 ; 47namespace TMVA {; 48 ; 49 typedef UInt_t TMVAVersion_t;; 50 ; 51 class MsgLogger;; 52 ; 53 // message types for MsgLogger; 54 // define outside of Types class to facilite access; 55 enum EMsgType {; 56 kDEBUG = 1,; 57 kVERBOSE = 2,; 58 kINFO = 3,; 59 kWARNING = 4,; 60 kERROR = 5,; 61 kFATAL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html:78,Guid,Guide,78,doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. CudaMatrix.cu. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 13/07/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/////////////////////////////////////////////; 13// Implementation of the TCudaMatrix class. //; 14/////////////////////////////////////////////; 15 ; 16#include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h""; 17#include ""TMVA/DNN/Architectures/Cuda/Device.h""; 18 ; 19#include <iostream>; 20 ; 21namespace TMVA {; 22namespace DNN {; 23 ; 24 ; 25//____________________________________________________________________________; 26__global__ void CurandInitializationKernel(unsigned long long seed,; 27 curandState_t *state); 28{; 29 int i = blockDim.y * blockIdx.y + threadIdx.y;; 30 int j = blockDim.x * blockIdx.x + threadIdx.x;; 31 int tid = i * gridDim.x + j;; 32 curand_init(seed + tid, 0, tid, state + tid);; 33}; 34 ; 35// Static members.; 36//____________________________________________________________________________; 37template<typename AFloat>; 38size_t TCudaMatrix<AFloat>::fInstances = 0;; 39template<typename AFloat>; 40cublasHandle_t TCudaMatrix<AFloat>::fCublasHandle = nullptr;; 41template<typename AFloat>; 42AFloat * TCudaMatrix<AFloat>::fDeviceReturn = nullptr;; 43template<typename AFloat>; 44AFloat * TCudaMatrix<AFloat>::fOnes = nullptr;; 45template<typename AFloat>; 46curandState_t * TCudaMatrix<AFloat>::fCurandStates = nullptr;; 47template<typename AFloat>; 48size_t TCudaMatrix<AFloat>::fNCurandStates = 0;; 49template<typename AFlo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaMatrix_8cu_source.html:102,Guid,Guide,102,doc/master/CudaMatrix_8cu_source.html,https://root.cern,https://root.cern/doc/master/CudaMatrix_8cu_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/DataLoader.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataLoader.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Omar Zapata; 3// Mentors: Lorenzo Moneta, Sergei Gleyzer; 4//NOTE: Based on TMVA::Factory; 5 ; 6/**********************************************************************************; 7 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 8 * Package: TMVA *; 9 * Class : DataLoader *; 10 * *; 11 * *; 12 * Description: *; 13 * This is a class to load datasets into every booked method *; 14 * *; 15 * Authors (alphabetical): *; 16 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 17 * Omar Zapata <Omar.Zapata@cern.ch> - ITM/UdeA, Colombia *; 18 * Sergei Gleyzer<sergei.gleyzer@cern.ch> - CERN, Switzerland *; 19 * *; 20 * Copyright (c) 2005-2015: *; 21 * CERN, Switzerland *; 22 * ITM/UdeA, Colombia *; 23 * *; 24 * Redistribution and use in source and binary forms, with or without *; 25 * modification, are permitted according to the terms listed in LICENSE *; 26 * (see tmva/doc/LICENSE) *; 27 **********************************************************************************/; 28 ; 29 ; 30/*! \class TMVA::DataLoader; 31\ingroup TMVA; 32 ; 33*/; 34 ; 35#include ""TTree.h""; 36#include ""TH2.h""; 37#include ""TMatrixD.h""; 38 ; 39#include ""TMVA/DataLoader.h""; 40#include ""TMVA/Config.h""; 41#include ""TMVA/CvSplit.h""; 42#include ""TMVA/Tools.h""; 43#include ""TMVA/IMethod.h""; 44#include ""TMVA/MethodBase.h""; 45#include ""TMVA/DataInputHandler.h""; 46#include ""TMVA/DataSetManager.h""; 47#include ""TMVA/DataSetInfo.h""; 48#include ""TMVA/MethodBoost.h""; 49#include ""TMVA/MethodCategory.h""; 50 ; 51#include ""TMVA/VariableInfo.h""; 52#include ""TMVA/VariableIdentityTransform.h""; 53#include ""TMVA/VariableDecorrTransform.h""; 54#include ""TMVA/VariablePCATransform.h""; 55#include ""TMVA/VariableGaussTransform.h""; 56#include ""TMVA/VariableNormalizeTransfor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:80,Guid,Guide,80,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/DataSetFactory.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataSetFactory.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Helge Voss; 3 ; 4/*****************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : DataSetFactory *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU, USA *; 17 * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; 18 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 19 * *; 20 * Copyright (c) 2009: *; 21 * CERN, Switzerland *; 22 * MPI-K Heidelberg, Germany *; 23 * U. of Bonn, Germany *; 24 * Redistribution and use in source and binary forms, with or without *; 25 * modification, are permitted according to the terms listed in LICENSE *; 26 * (see tmva/doc/LICENSE) *; 27 *****************************************************************************/; 28 ; 29/*! \class TMVA::DataSetFactory; 30\ingroup TMVA; 31 ; 32Class that contains all the data information; 33 ; 34*/; 35 ; 36#include <assert.h>; 37 ; 38#include <map>; 39#include <vector>; 40#include <iomanip>; 41#include <iostream>; 42 ; 43#include <algorithm>; 44#include <functional>; 45#include <numeric>; 46#include <random>; 47 ; 48#include ""TMVA/DataSetFactory.h""; 49 ; 50#include ""TEventList.h""; 51#include ""TFile.h""; 52#include ""TRandom3.h""; 53#include ""TMatrixF.h""; 54#include ""TVectorF.h""; 55#include ""TMath.h""; 56#include ""TTree.h""; 57#include ""TBranch.h""; 58 ; 59#include ""TMVA/MsgLogger.h""; 60#inclu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:84,Guid,Guide,84,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/Factory.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros |; Functions |; Variables ; Factory.cxx File Reference. #include ""TMVA/Factory.h""; #include ""TMVA/ClassifierFactory.h""; #include ""TMVA/Config.h""; #include ""TMVA/Configurable.h""; #include ""TMVA/Tools.h""; #include ""TMVA/Ranking.h""; #include ""TMVA/DataSet.h""; #include ""TMVA/IMethod.h""; #include ""TMVA/MethodBase.h""; #include ""TMVA/DataInputHandler.h""; #include ""TMVA/DataSetManager.h""; #include ""TMVA/DataSetInfo.h""; #include ""TMVA/DataLoader.h""; #include ""TMVA/MethodBoost.h""; #include ""TMVA/MethodCategory.h""; #include ""TMVA/ROCCalc.h""; #include ""TMVA/ROCCurve.h""; #include ""TMVA/MsgLogger.h""; #include ""TMVA/VariableInfo.h""; #include ""TMVA/VariableTransform.h""; #include ""TMVA/Results.h""; #include ""TMVA/ResultsClassification.h""; #include ""TMVA/ResultsRegression.h""; #include ""TMVA/ResultsMulticlass.h""; #include <list>; #include <bitset>; #include <set>; #include ""TMVA/Types.h""; #include ""TROOT.h""; #include ""TFile.h""; #include ""TLeaf.h""; #include ""TEventList.h""; #include ""TH2.h""; #include ""TGraph.h""; #include ""TStyle.h""; #include ""TMatrixF.h""; #include ""TMatrixDSym.h""; #include ""TMultiGraph.h""; #include ""TPrincipal.h""; #include ""TMath.h""; #include ""TSystem.h""; #include ""TCanvas.h"". Include dependency graph for Factory.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define READXML   kTRUE;  ; #define VIBITS   32;  . Functions; static uint64_t sum (uint64_t i);  . Variables; const Int_t MinNoTrainingEvents = 10;  . Macro Definition Documentation. ◆ READXML. #define READXML   kTRUE. Definition at line 100 of file Factory.cxx. ◆ VIBITS. #define VIBITS   32. Definition at line 103 of file Fact",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx.html:80,Guid,Guide,80,doc/master/tmva_2tmva_2src_2Factory_8cxx.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/Factory.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Factory.cxx. Go to the documentation of this file. 1// @(#)Root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; 3// Updated by: Omar Zapata, Kim Albertsson; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Factory *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors : *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; 16 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 17 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 18 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 19 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 20 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 21 * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; 22 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 23 * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; 24 * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; 25 * *; 26 * Copyright (c) 2005-2015: *; 27 * CERN, Switzerland *; 28 * U. of Victoria, Canada *; 29 * MPI-K Heidelberg, Germany *; 30 * U. of Bonn, Germany *; 31 * UdeA/ITM, Colombia *; 32 * U. of Florida, USA *; 33 * *; 34 * Redistribution and use in source and binary forms, with or without *; 35 * modification, are permitted according to the terms listed in LICENSE *; 36 * (see tmva/doc/LICENSE) *; 37 **********************************************************************************/; 38 ; 39/*! \class TMVA::Factory; 40\ingroup TMVA; 41 ; 42This is the main MVA steering class.; 43It cr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:77,Guid,Guide,77,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/MethodCuts.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodCuts.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Eckhard von Toerne, Helge Voss, Kai Voss; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; 6 * Package: TMVA *; 7 * Class : TMVA::MethodCuts *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; 16 * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; 17 * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; 18 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 19 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 20 * *; 21 * Copyright (c) 2005: *; 22 * CERN, Switzerland *; 23 * U. of Victoria, Canada *; 24 * MPI-K Heidelberg, Germany *; 25 * *; 26 * Redistribution and use in source and binary forms, with or without *; 27 * modification, are permitted according to the terms listed in LICENSE *; 28 * (see tmva/doc/LICENSE) *; 29 **********************************************************************************/; 30 ; 31/*! \class TMVA::MethodCuts; 32\ingroup TMVA; 33 ; 34 Multivariate optimisation of signal efficiency for given background; 35 efficiency, applying rectangular minimum and maximum requirements.; 36 ; 37 Also implemented is a ""decorrelate/diagonalized cuts approach"",; 38 which improves over the uncorrelated cuts approach by; 39 transforming linearly the input variables into a diagonal space,; 40 using the square-root of the covariance matrix.; 41 ; 42 Other optimisation criteria, such as maximising the si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:80,Guid,Guide,80,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/MethodDL.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodDL.cxx. Go to the documentation of this file. 1// @(#)root/tmva/tmva/cnn:$Id$Ndl; 2// Authors: Vladimir Ilievski, Lorenzo Moneta, Saurav Shekhar, Ravi Kiran; 3/**********************************************************************************; 4 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 5 * Package: TMVA *; 6 * Class : MethodDL *; 7 * *; 8 * *; 9 * Description: *; 10 * Deep Neural Network Method *; 11 * *; 12 * Authors (alphabetical): *; 13 * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; 14 * Saurav Shekhar <sauravshekhar01@gmail.com> - ETH Zurich, Switzerland *; 15 * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; 16 * *; 17 * Copyright (c) 2005-2015: *; 18 * CERN, Switzerland *; 19 * U. of Victoria, Canada *; 20 * MPI-K Heidelberg, Germany *; 21 * U. of Bonn, Germany *; 22 * *; 23 * Redistribution and use in source and binary forms, with or without *; 24 * modification, are permitted according to the terms listed in LICENSE *; 25 * (see tmva/doc/LICENSE) *; 26 **********************************************************************************/; 27 ; 28#include ""TFormula.h""; 29#include ""TString.h""; 30#include ""TMath.h""; 31#include ""TObjString.h""; 32 ; 33#include ""TMVA/Tools.h""; 34#include ""TMVA/Configurable.h""; 35#include ""TMVA/IMethod.h""; 36#include ""TMVA/ClassifierFactory.h""; 37#include ""TMVA/MethodDL.h""; 38#include ""TMVA/Types.h""; 39#include ""TMVA/DNN/TensorDataLoader.h""; 40#include ""TMVA/DNN/Functions.h""; 41#include ""TMVA/DNN/DLMinimizers.h""; 42#include ""TMVA/DNN/SGD.h""; 43#include ""TMVA/DNN/Adam.h""; 44#include ""TMVA/DNN/Adagrad.h""; 45#include ""TMVA/DNN/RMSProp.h""; 46#include ""TMVA/DNN/Adadelta.h""; 47#include ""TMVA/Timer.h""; 48 ; 49#ifdef R__HAS_TMVAGPU; 50#include ""TMVA/DNN/Architectures/Cuda.h""; 51#ifdef R__HAS_CUDNN; 52#include ""TMVA/DNN/Architectures/TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:78,Guid,Guide,78,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/MethodDNN.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodDNN.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Peter Speckmayer; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : MethodDNN *; 8 * *; 9 * *; 10 * Description: *; 11 * A neural network implementation *; 12 * *; 13 * Authors (alphabetical): *; 14 * Simon Pfreundschuh <s.pfreundschuh@gmail.com> - CERN, Switzerland *; 15 * Peter Speckmayer <peter.speckmayer@gmx.ch> - CERN, Switzerland *; 16 * *; 17 * Copyright (c) 2005-2015: *; 18 * CERN, Switzerland *; 19 * U. of Victoria, Canada *; 20 * MPI-K Heidelberg, Germany *; 21 * U. of Bonn, Germany *; 22 * *; 23 * Redistribution and use in source and binary forms, with or without *; 24 * modification, are permitted according to the terms listed in LICENSE *; 25 * (see tmva/doc/LICENSE) *; 26 **********************************************************************************/; 27 ; 28/*! \class TMVA::MethodDNN; 29\ingroup TMVA; 30Deep Neural Network Implementation.; 31*/; 32 ; 33#include ""TMVA/MethodDNN.h""; 34 ; 35#include ""TString.h""; 36#include ""TFormula.h""; 37#include ""TObjString.h""; 38 ; 39#include ""TMVA/ClassifierFactory.h""; 40#include ""TMVA/Configurable.h""; 41#include ""TMVA/IMethod.h""; 42#include ""TMVA/MsgLogger.h""; 43#include ""TMVA/MethodBase.h""; 44#include ""TMVA/Timer.h""; 45#include ""TMVA/Types.h""; 46#include ""TMVA/Tools.h""; 47#include ""TMVA/Config.h""; 48#include ""TMVA/Ranking.h""; 49 ; 50#include ""TMVA/DNN/Net.h""; 51#include ""TMVA/DNN/Architectures/Reference.h""; 52 ; 53#include ""TMVA/NeuralNet.h""; 54#include ""TMVA/Monitoring.h""; 55 ; 56#ifdef R__HAS_TMVACPU; 57#include ""TMVA/DNN/Architectures/Cpu.h""; 58#endif; 59#ifdef R__HAS_TMVAGPU; 60#include ""TMVA/DNN/Architectures/Cuda.h""; 61#endif; 62 ; 63#includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:79,Guid,Guide,79,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/NeuralNet.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NeuralNet.cxx. Go to the documentation of this file. 1 ; 2 ; 3#include ""TMVA/NeuralNet.h""; 4 ; 5#include ""TMVA/MethodDNN.h""; 6 ; 7namespace TMVA; 8{; 9 namespace DNN; 10 {; 11 ; 12 std::shared_ptr<std::function<double(double)>> Gauss = std::make_shared<std::function<double(double)>> ([](double value){ const double s = 6.0; return exp (-std::pow(value*s,2.0)); });; 13 std::shared_ptr<std::function<double(double)>> GaussComplement = std::make_shared<std::function<double(double)>> ([](double value){ const double s = 6.0; return 1.0 - exp (-std::pow(value*s,2.0)); });; 14 std::shared_ptr<std::function<double(double)>> InvGauss = std::make_shared<std::function<double(double)>> ([](double value){ const double s = 6.0; return -2.0 * value * s*s * (*Gauss.get ()) (value); });; 15 std::shared_ptr<std::function<double(double)>> InvGaussComplement = std::make_shared<std::function<double(double)>> ([](double value){ const double s = 6.0; return +2.0 * value * s*s * (*GaussComplement.get ()) (value); });; 16 std::shared_ptr<std::function<double(double)>> InvLinear = std::make_shared<std::function<double(double)>> ([](double /*value*/){ return 1.0; });; 17 std::shared_ptr<std::function<double(double)>> InvReLU = std::make_shared<std::function<double(double)>> ([](double value){ const double margin = 0.0; return value > margin ? 1.0 : 0; });; 18 std::shared_ptr<std::function<double(double)>> InvSigmoid = std::make_shared<std::function<double(double)>> ([](double value){ double s = (*Sigmoid.get ()) (value); return s*(1.0-s); });; 19 std::shared_ptr<std::function<double(double)>> InvSoftPlus = std::make_shared<std::function<double(double)>> ([](double value){ return 1.0 / (1.0 + std::exp (-value)); });; 20 std::shared_ptr<std::function<double(double)>> InvSoftSign = std::make_shared<std::function<double(double)>> ([](double value){ return std::pow ((1.0 -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8cxx_source.html:79,Guid,Guide,79,doc/master/NeuralNet_8cxx_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/Reader.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Reader.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne, Jan Therhaag; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Reader *; 8 * *; 9 * *; 10 * Description: *; 11 * Reader class to be used in the user application to interpret the trained *; 12 * MVAs in an analysis context *; 13 * *; 14 * Authors (alphabetical order): *; 15 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 16 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 17 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 18 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 19 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 20 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 21 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 22 * *; 23 * Copyright (c) 2005-2011: *; 24 * CERN, Switzerland *; 25 * U. of Victoria, Canada *; 26 * MPI-K Heidelberg, Germany *; 27 * U. of Bonn, Germany *; 28 * *; 29 * Redistribution and use in source and binary forms, with or without *; 30 * modification, are permitted according to the terms listed in LICENSE *; 31 * (see tmva/doc/LICENSE) *; 32 **********************************************************************************/; 33 ; 34/*! \class TMVA::Reader; 35\ingroup TMVA; 36 ; 37 The Reader class serves to use the MVAs in a specific analysis context.; 38 Within an event loop, a vector is filled that corresponds to the variables; 39 that were used to train the MVA(s) during the training stage. This vector; 40 is transfered to the Reader, who takes care of interpreting the weight; 41 file of the MVA of choice, an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:76,Guid,Guide,76,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/Tools.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Tools.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Tools *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 16 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 17 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 18 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 19 * *; 20 * Copyright (c) 2005-2011: *; 21 * CERN, Switzerland *; 22 * U. of Victoria, Canada *; 23 * MPI-K Heidelberg, Germany *; 24 * U. of Bonn, Germany *; 25 * *; 26 * Redistribution and use in source and binary forms, with or without *; 27 * modification, are permitted according to the terms listed in LICENSE *; 28 * (see tmva/doc/LICENSE) *; 29 **********************************************************************************/; 30 ; 31/*! \class TMVA::Tools; 32\ingroup TMVA; 33Global auxiliary applications and data treatment routines.; 34*/; 35 ; 36#include ""TMVA/Tools.h""; 37 ; 38#include ""TMVA/Config.h""; 39#include ""TMVA/Event.h""; 40#include ""TMVA/Version.h""; 41#include ""TMVA/PDF.h""; 42#include ""TMVA/MsgLogger.h""; 43#include ""TMVA/Types.h""; 44 ; 45#include ""TObjString.h""; 46#include ""TMath.h""; 47#include ""TString.h""; 48#include ""TTree.h""; 49#include ""TLeaf.h""; 50#include ""TH1.h""; 51#include ""TH2.h""; 52#include ""TList.h""; 53#include ""TSpline.h""; 54#include ""TVector.h""; 55#include ""TMatrixD.h""; 56#include ""TMatrixDSymE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:75,Guid,Guide,75,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmva/src/VariableTransform.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. VariableTransform.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Omar Zapata; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : VariableTransformBase *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 17 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 18 * *; 19 * Copyright (c) 2005: *; 20 * CERN, Switzerland *; 21 * MPI-K Heidelberg, Germany *; 22 * *; 23 * Redistribution and use in source and binary forms, with or without *; 24 * modification, are permitted according to the terms listed in LICENSE *; 25 * (see tmva/doc/LICENSE) *; 26 **********************************************************************************/; 27 ; 28#include ""TMVA/VariableTransformBase.h""; 29#include ""TMVA/VariableIdentityTransform.h""; 30#include ""TMVA/VariableDecorrTransform.h""; 31#include ""TMVA/VariableInfo.h""; 32#include ""TMVA/VariablePCATransform.h""; 33#include ""TMVA/VariableGaussTransform.h""; 34#include ""TMVA/VariableNormalizeTransform.h""; 35 ; 36#include ""TMVA/Config.h""; 37#include ""TMVA/DataSetInfo.h""; 38#include ""TMVA/MsgLogger.h""; 39#include ""TMVA/Ranking.h""; 40#include ""TMVA/Tools.h""; 41#include ""TMVA/Types.h""; 42#include ""TMVA/Version.h""; 43#include ""TMVA/TransformationHandler.h""; 44 ; 45#include ""THashTable.h""; 46#include ""TList.h""; 47#include ""TObjString.h""; 48 ; 49#include <algorithm>; 50#include <cass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:87,Guid,Guide,87,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmvagui/inc/TMVA/BDT.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BDT.h. Go to the documentation of this file. 1#ifndef BDT__HH; 2#define BDT__HH; 3 ; 4#include <vector>; 5 ; 6#include ""tmvaglob.h""; 7 ; 8#include ""RQ_OBJECT.h""; 9 ; 10#include ""TStyle.h""; 11#include ""TPad.h""; 12#include ""TCanvas.h""; 13#include ""TColor.h""; 14#include ""TPaveText.h""; 15#include ""TControlBar.h""; 16 ; 17#include ""TGWindow.h""; 18#include ""TGButton.h""; 19#include ""TGLabel.h""; 20#include ""TGNumberEntry.h""; 21 ; 22#include ""TMVA/DecisionTree.h""; 23#include ""TMVA/Tools.h""; 24#include ""TXMLEngine.h""; 25 ; 26// Uncomment this only if the link problem is solved. The include statement tends; 27// to use the ROOT classes rather than the local TMVA release; 28// #include ""TMVA/DecisionTree.h""; 29// #include ""TMVA/DecisionTreeNode.h""; 30namespace TMVA{; 31 ; 32 // this macro displays a decision tree read in from the weight file; 33 ; 34 ; 35 inline Int_t getSigColorF () {return TColor::GetColor( ""#0000FF"" );} // Pure Signal; 36 inline Int_t getBkgColorF () {return TColor::GetColor( ""#FF0000"" );} // Pure Backgr.; 37 inline Int_t getIntColorF () {return TColor::GetColor( ""#33aa77"" );} // novel green; 38 ; 39 ; 40 inline Int_t getSigColorT () {return 10;}; 41 inline Int_t getBkgColorT () {return 10;}; 42 inline Int_t getIntColorT () {return 10;}; 43 ; 44 ; 45 ; 46 class StatDialogBDT {; 47 ; 48 RQ_OBJECT(""StatDialogBDT""); 49 ; 50 public:; 51 ; 52 StatDialogBDT(TString dataset, const TGWindow* p, TString wfile,; 53 TString methName = ""BDT"", Int_t itree = 0 );; 54 virtual ~StatDialogBDT() {; 55 TMVA::DecisionTreeNode::SetIsTraining(false);; 56 fThis = nullptr;; 57 fMain->CloseWindow();; 58 fMain->Cleanup();; 59 if(gROOT->GetListOfCanvases()->FindObject(fCanvas)); 60 delete fCanvas;; 61 }; 62 ; 63 // draw method; 64 void DrawTree(Int_t itree );; 65 ; 66 void RaiseDialog() { if (fMain) { fMain->RaiseWindow(); fMain->Layout(); fMain->MapWindow();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BDT_8h_source.html:79,Guid,Guide,79,doc/master/BDT_8h_source.html,https://root.cern,https://root.cern/doc/master/BDT_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tmva/tmvagui/inc/TMVA/TMVAGui.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; TMVAGui.h File Reference. #include ""TList.h""; #include ""TKey.h""; #include ""TString.h""; #include ""TControlBar.h""; #include ""tmvaglob.h"". Include dependency graph for TMVAGui.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TMVA::TMVAGUI;  . Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; void TMVA::ActionButton (TControlBar *cbar, const TString &title, const TString &macro, const TString &comment, const TString &buttonType, TString requiredKey="""");  ; TList * TMVA::GetKeyList (const TString &pattern);  ; void TMVA::TMVAGui (const char *fName=""TMVA.root"", TString dataset="""");  . tmvatmvaguiincTMVATMVAGui.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAGui_8h.html:86,Guid,Guide,86,doc/master/TMVAGui_8h.html,https://root.cern,https://root.cern/doc/master/TMVAGui_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/tmvagui/inc/TMVA/TMVAMultiClassGui.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions ; TMVAMultiClassGui.h File Reference. #include ""TList.h""; #include ""TKey.h""; #include ""TString.h""; #include ""TControlBar.h""; #include ""tmvaglob.h"". Include dependency graph for TMVAMultiClassGui.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; void TMVA::MultiClassActionButton (TControlBar *cbar, const TString &title, const TString &macro, const TString &comment, const TString &buttonType, TString requiredKey="""");  ; TList * TMVA::MultiClassGetKeyList (const TString &pattern);  ; void TMVA::TMVAMultiClassGui (const char *fName=""TMVAMulticlass.root"", TString dataset="""");  . tmvatmvaguiincTMVATMVAMultiClassGui.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultiClassGui_8h.html:96,Guid,Guide,96,doc/master/TMVAMultiClassGui_8h.html,https://root.cern,https://root.cern/doc/master/TMVAMultiClassGui_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/tmvagui/inc/TMVA/TMVARegGui.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions ; TMVARegGui.h File Reference. #include ""TString.h""; #include ""TControlBar.h""; #include ""tmvaglob.h"". Include dependency graph for TMVARegGui.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; void TMVA::RegGuiActionButton (TControlBar *cbar, const TString &title, const TString &macro, const TString &comment, const TString &buttonType, TString requiredKey="""");  ; TList * TMVA::RegGuiGetKeyList (const TString &pattern);  ; void TMVA::TMVARegGui (const char *fName=""TMVAReg.root"", TString dataset="""");  . tmvatmvaguiincTMVATMVARegGui.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegGui_8h.html:89,Guid,Guide,89,doc/master/TMVARegGui_8h.html,https://root.cern,https://root.cern/doc/master/TMVARegGui_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tmva/tmvagui/src/efficienciesMulticlass.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions |; Variables ; efficienciesMulticlass.cxx File Reference. #include ""TMVA/efficienciesMulticlass.h""; #include ""TMVA/Config.h""; #include ""TMVA/tmvaglob.h""; #include ""TControlBar.h""; #include ""TFile.h""; #include ""TGraph.h""; #include ""TH2F.h""; #include ""TIterator.h""; #include ""TKey.h""; #include ""TROOT.h""; #include <iostream>. Include dependency graph for efficienciesMulticlass.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  EfficiencyPlotWrapper;  Note: This file assumes a certain structure on the input file. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . Typedefs; using classcanvasmap_t = std::map< TString, EfficiencyPlotWrapper * >;  ; using roccurvelist_t = std::vector< std::tuple< TString, TString, TGraph * > >;  . Functions; std::vector< TString > TMVA::getclassnames (TString dataset, TString fin);  ; roccurvelist_t TMVA::getRocCurves (TDirectory *binDir, TString methodPrefix, TString graphNameRef);  ; void TMVA::plotEfficienciesMulticlass (roccurvelist_t rocCurves, classcanvasmap_t classCanvasMap);  . Variables; const char * BUTTON_TYPE = ""button"";  . Typedef Documentation. ◆ classcanvasmap_t. using classcanvasmap_t = std::map<TString, EfficiencyPlotWrapper *>. Definition at line 116 of file efficienciesMulticlass.cxx. ◆ roccurvelist_t. using roccurvelist_t = std::vector<std::tuple<TString, TString, TGraph *> >. Definition at line 117 of file efficienciesMulticlass.cxx. Variable Documentation. ◆ BUTTON_TYPE. const char* BUTTON_TYPE = ""button"". Definition at line 120 of file efficienciesMulticlass.cxx. tmvatmvaguisrcefficienciesMulticlass.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/efficienciesMulticlass_8cxx.html:98,Guid,Guide,98,doc/master/efficienciesMulticlass_8cxx.html,https://root.cern,https://root.cern/doc/master/efficienciesMulticlass_8cxx.html,2,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RArrowDS.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RArrowDS.hxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#ifndef ROOT_RARROWTDS; 10#define ROOT_RARROWTDS; 11 ; 12#include ""ROOT/RDataFrame.hxx""; 13#include ""ROOT/RDataSource.hxx""; 14 ; 15#include <memory>; 16 ; 17namespace arrow {; 18class Table;; 19}; 20 ; 21namespace ROOT {; 22namespace Internal {; 23namespace RDF {; 24class TValueGetter;; 25} // namespace RDF; 26} // namespace Internal; 27 ; 28namespace RDF {; 29 ; 30class RArrowDS final : public RDataSource {; 31private:; 32 std::shared_ptr<arrow::Table> fTable;; 33 std::vector<std::pair<ULong64_t, ULong64_t>> fEntryRanges;; 34 std::vector<std::string> fColumnNames;; 35 size_t fNSlots = 0U;; 36 ; 37 std::vector<std::pair<size_t, size_t>> fGetterIndex; // (columnId, visitorId); 38 std::vector<std::unique_ptr<ROOT::Internal::RDF::TValueGetter>> fValueGetters; // Visitors to be used to track and get entries. One per column.; 39 std::vector<void *> GetColumnReadersImpl(std::string_view name, const std::type_info &type) final;; 40 ; 41public:; 42 RArrowDS(std::shared_ptr<arrow::Table> table, std::vector<std::string> const &columns);; 43 ~RArrowDS();; 44 const std::vector<std::string> &GetColumnNames() const final;; 45 std::vector<std::pair<ULong64_t, ULong64_t>> GetEntryRanges() final;; 46 std::string GetTypeName(std::string_view colName) const final;; 47 bool HasColumn(std::string_view colName) const final;; 48 bool SetEntry(unsigned int slot, ULong64_t entry) final;; 49 void InitSlot(unsigned int slot, ULong64_t fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RArrowDS_8hxx_source.html:88,Guid,Guide,88,doc/master/RArrowDS_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RArrowDS_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ActionHelpers.hxx File ReferenceDataframe. #include ""Compression.h""; #include <string_view>; #include ""ROOT/RVec.hxx""; #include ""ROOT/TBufferMerger.hxx""; #include ""ROOT/RDF/RCutFlowReport.hxx""; #include ""ROOT/RDF/RSampleInfo.hxx""; #include ""ROOT/RDF/Utils.hxx""; #include ""ROOT/RSnapshotOptions.hxx""; #include ""ROOT/TypeTraits.hxx""; #include ""ROOT/RDF/RDisplay.hxx""; #include ""RtypesCore.h""; #include ""TBranch.h""; #include ""TClassEdit.h""; #include ""TClassRef.h""; #include ""TDirectory.h""; #include ""TError.h""; #include ""TFile.h""; #include ""TH1.h""; #include ""TGraph.h""; #include ""TGraphAsymmErrors.h""; #include ""TLeaf.h""; #include ""TObject.h""; #include ""TTree.h""; #include ""TTreeReader.h""; #include ""TStatistic.h""; #include ""ROOT/RDF/RActionImpl.hxx""; #include ""ROOT/RDF/RMergeableValue.hxx""; #include <algorithm>; #include <functional>; #include <limits>; #include <memory>; #include <stdexcept>; #include <string>; #include <type_traits>; #include <utility>; #include <vector>; #include <iomanip>; #include <numeric>. Include dependency graph for ActionHelpers.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Detailed Description; AuthorEnrico Guiraud, CERN . Danilo Piparo, CERN ; Date2016-12 ; AuthorVincenzo Eduardo Padulano ; Date2020-06 ; Definition in file ActionHelpers.hxx. treedataframeincROOTRDFActionHelpers.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ActionHelpers_8hxx.html:100,Guid,Guide,100,doc/master/ActionHelpers_8hxx.html,https://root.cern,https://root.cern/doc/master/ActionHelpers_8hxx.html,2,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDF/HistoModels.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. HistoModels.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 09/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDFHISTOMODELS; 12#define ROOT_RDFHISTOMODELS; 13 ; 14#include <TString.h>; 15#include <memory>; 16 ; 17class TH1D;; 18class TH2D;; 19class TH3D;; 20template <typename T>; 21class THnT;; 22using THnD = THnT<double>;; 23class TProfile;; 24class TProfile2D;; 25 ; 26namespace ROOT {; 27 ; 28namespace RDF {; 29 ; 30struct TH1DModel {; 31 TString fName;; 32 TString fTitle;; 33 int fNbinsX = 128;; 34 double fXLow = 0.;; 35 double fXUp = 64.;; 36 std::vector<double> fBinXEdges;; 37 ; 38 TH1DModel() = default;; 39 TH1DModel(const TH1DModel &) = default;; 40 ~TH1DModel();; 41 TH1DModel(const ::TH1D &h);; 42 TH1DModel(const char *name, const char *title, int nbinsx, double xlow, double xup);; 43 TH1DModel(const char *name, const char *title, int nbinsx, const float *xbins);; 44 TH1DModel(const char *name, const char *title, int nbinsx, const double *xbins);; 45 std::shared_ptr<::TH1D> GetHistogram() const;; 46};; 47 ; 48struct TH2DModel {; 49 TString fName;; 50 TString fTitle;; 51 int fNbinsX = 128;; 52 double fXLow = 0.;; 53 double fXUp = 64.;; 54 int fNbinsY = 128;; 55 double fYLow = 0.;; 56 double fYUp = 64.;; 57 std::vector<double> fBinXEdges;; 58 std::vector<double> fBinYEdges;; 59 ; 60 TH2DModel() = default;; 61 TH2DModel(const TH2DModel &) = default;; 62 ~TH2DModel();; 63 TH2DModel(const ::TH2D &h);; 64 TH2DModel(const char *name,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HistoModels_8hxx_source.html:95,Guid,Guide,95,doc/master/HistoModels_8hxx_source.html,https://root.cern,https://root.cern/doc/master/HistoModels_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. InterfaceUtils.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 02/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_TINTERFACE_UTILS; 12#define ROOT_RDF_TINTERFACE_UTILS; 13 ; 14#include ""RColumnRegister.hxx""; 15#include <ROOT/RDF/RAction.hxx>; 16#include <ROOT/RDF/ActionHelpers.hxx> // for BuildAction; 17#include <ROOT/RDF/RColumnRegister.hxx>; 18#include <ROOT/RDF/RDefine.hxx>; 19#include <ROOT/RDF/RDefinePerSample.hxx>; 20#include <ROOT/RDF/RFilter.hxx>; 21#include <ROOT/RDF/Utils.hxx>; 22#include <ROOT/RDF/RJittedAction.hxx>; 23#include <ROOT/RDF/RJittedDefine.hxx>; 24#include <ROOT/RDF/RJittedFilter.hxx>; 25#include <ROOT/RDF/RJittedVariation.hxx>; 26#include <ROOT/RDF/RLoopManager.hxx>; 27#include <string_view>; 28#include <ROOT/RDF/RVariation.hxx>; 29#include <ROOT/TypeTraits.hxx>; 30#include <TError.h> // gErrorIgnoreLevel; 31#include <TH1.h>; 32#include <TROOT.h> // IsImplicitMTEnabled; 33 ; 34#include <deque>; 35#include <functional>; 36#include <map>; 37#include <memory>; 38#include <string>; 39#include <type_traits>; 40#include <typeinfo>; 41#include <vector>; 42#include <unordered_map>; 43 ; 44class TObjArray;; 45class TTree;; 46namespace ROOT {; 47namespace Detail {; 48namespace RDF {; 49class RNodeBase;; 50}; 51}; 52namespace RDF {; 53template <typename T>; 54class RResultPtr;; 55template<typename T, typename V>; 56class RInterface;; 57using RNode = RInterface<::ROOT::Detail::RDF::RNodeBase, void>;; 58class RDataSour",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/InterfaceUtils_8hxx_source.html:98,Guid,Guide,98,doc/master/InterfaceUtils_8hxx_source.html,https://root.cern,https://root.cern/doc/master/InterfaceUtils_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDF/RActionImpl.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RActionImpl.hxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#ifndef ROOT_RDF_DETAIL_RACTIONIMPL; 10#define ROOT_RDF_DETAIL_RACTIONIMPL; 11 ; 12#include <ROOT/RDF/RSampleInfo.hxx> // SampleCallback_t; 13 ; 14#include <memory> // std::unique_ptr; 15#include <stdexcept> // std::logic_error; 16#include <utility> // std::declval; 17 ; 18namespace ROOT {; 19namespace Detail {; 20namespace RDF {; 21 ; 22class RMergeableValueBase;; 23 ; 24/// Base class for action helpers, see RInterface::Book() for more information.; 25template <typename Helper>; 26class R__CLING_PTRCHECK(off) RActionImpl {; 27public:; 28 virtual ~RActionImpl() = default;; 29 // call Helper::FinalizeTask if present, do nothing otherwise; 30 template <typename T = Helper>; 31 auto CallFinalizeTask(unsigned int slot) -> decltype(std::declval<T>().FinalizeTask(slot)); 32 {; 33 static_cast<Helper *>(this)->FinalizeTask(slot);; 34 }; 35 ; 36 template <typename... Args>; 37 void CallFinalizeTask(unsigned int, Args...) {}; 38 ; 39 template <typename H = Helper>; 40 auto CallPartialUpdate(unsigned int slot) -> decltype(std::declval<H>().PartialUpdate(slot), (void *)(nullptr)); 41 {; 42 return &static_cast<Helper *>(this)->PartialUpdate(slot);; 43 }; 44 ; 45 template <typename... Args>; 46 [[noreturn]] void *CallPartialUpdate(...); 47 {; 48 throw std::logic_error(""This action does not support callbacks!"");; 49 }; 50 ; 51 template <typename T = Helper>; 52 auto CallMakeNew(void *typeErasedResSharedPtr) -> decl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RActionImpl_8hxx_source.html:95,Guid,Guide,95,doc/master/RActionImpl_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RActionImpl_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDF/RDatasetSpec.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDatasetSpec.hxx. Go to the documentation of this file. 1// Author: Vincenzo Eduardo Padulano CERN/UPV, Ivan Kabadzhov CERN 06/2022; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_RDATASETSPEC; 12#define ROOT_RDF_RDATASETSPEC; 13 ; 14#include <limits>; 15#include <string>; 16#include <utility> // std::pair; 17#include <vector>; 18 ; 19#include <ROOT/RDF/RSample.hxx>; 20#include <ROOT/RFriendInfo.hxx>; 21#include <RtypesCore.h> // Long64_t; 22 ; 23namespace ROOT {; 24namespace Detail {; 25namespace RDF {; 26class RLoopManager;; 27}; 28} // namespace Detail; 29namespace RDF {; 30namespace Experimental {; 31 ; 32// clang-format off; 33/**; 34\class ROOT::RDF::Experimental::RDatasetSpec; 35\ingroup dataframe; 36\brief The dataset specification for RDataFrame.; 37 ; 38This class allows users to create the dataset specification for RDataFrame ; 39to which they add samples (using the RSample class object) with tree names and file names, ; 40and, optionally, the metadata information (using the RMetaData class objects). ; 41Adding global friend trees and/or setting the range of events to be processed; 42are also available.; 43 ; 44Note, there exists yet another method to build RDataFrame from the dataset information using the JSON file format: \ref FromSpec(const std::string &jsonFile) ""FromSpec()"". ; 45*/; 46 ; 47class RDatasetSpec {; 48 // clang-format on ; 49 friend class ::ROOT::Detail::RDF::RLoopManager; // for MoveOutSamples; 50 ; 51public:; 52 struct REntryRange {; 53 Long64_t fB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDatasetSpec_8hxx_source.html:96,Guid,Guide,96,doc/master/RDatasetSpec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDatasetSpec_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDF/RInterface.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RInterface.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 03/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_TINTERFACE; 12#define ROOT_RDF_TINTERFACE; 13 ; 14#include ""ROOT/RDataSource.hxx""; 15#include ""ROOT/RDF/ActionHelpers.hxx""; 16#include ""ROOT/RDF/HistoModels.hxx""; 17#include ""ROOT/RDF/InterfaceUtils.hxx""; 18#include ""ROOT/RDF/RColumnRegister.hxx""; 19#include ""ROOT/RDF/RDefaultValueFor.hxx""; 20#include ""ROOT/RDF/RDefine.hxx""; 21#include ""ROOT/RDF/RDefinePerSample.hxx""; 22#include ""ROOT/RDF/RFilter.hxx""; 23#include ""ROOT/RDF/RInterfaceBase.hxx""; 24#include ""ROOT/RDF/RVariation.hxx""; 25#include ""ROOT/RDF/RLazyDSImpl.hxx""; 26#include ""ROOT/RDF/RLoopManager.hxx""; 27#include ""ROOT/RDF/RRange.hxx""; 28#include ""ROOT/RDF/RFilterWithMissingValues.hxx""; 29#include ""ROOT/RDF/Utils.hxx""; 30#include ""ROOT/RDF/RDFDescription.hxx""; 31#include ""ROOT/RDF/RVariationsDescription.hxx""; 32#include ""ROOT/RResultPtr.hxx""; 33#include ""ROOT/RSnapshotOptions.hxx""; 34#include <string_view>; 35#include ""ROOT/RVec.hxx""; 36#include ""ROOT/TypeTraits.hxx""; 37#include ""RtypesCore.h"" // for ULong64_t; 38#include ""TDirectory.h""; 39#include ""TH1.h"" // For Histo actions; 40#include ""TH2.h"" // For Histo actions; 41#include ""TH3.h"" // For Histo actions; 42#include ""THn.h""; 43#include ""TProfile.h""; 44#include ""TProfile2D.h""; 45#include ""TStatistic.h""; 46 ; 47#include <algorithm>; 48#include <cstddef>; 49#include <initializer_list>; 50#include <iterator> // std::back",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:94,Guid,Guide,94,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDF/RResultMap.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RResultMap.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, CERN 11/2021; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_RRESULTMAP; 12#define ROOT_RDF_RRESULTMAP; 13 ; 14#include ""ROOT/RDF/RActionBase.hxx""; 15#include ""ROOT/RDF/RLoopManager.hxx""; 16#include ""ROOT/RDF/RMergeableValue.hxx""; 17#include ""ROOT/RDF/Utils.hxx"" // Union; 18 ; 19#include <memory>; 20#include <stdexcept>; 21#include <string>; 22#include <unordered_map>; 23#include <vector>; 24 ; 25namespace ROOT {; 26 ; 27namespace RDF {; 28 ; 29namespace Experimental {; 30// fwd decl for MakeResultMap; 31template <typename T>; 32class RResultMap;; 33} // namespace Experimental; 34} // namespace RDF; 35 ; 36namespace Detail {; 37namespace RDF {; 38template <typename T>; 39std::unique_ptr<RMergeableVariations<T>> GetMergeableValue(ROOT::RDF::Experimental::RResultMap<T> &rmap);; 40} // namespace RDF; 41} // namespace Detail; 42 ; 43namespace Internal {; 44namespace RDF {; 45template <typename T>; 46ROOT::RDF::Experimental::RResultMap<T>; 47MakeResultMap(std::shared_ptr<T> nominalResult, std::vector<std::shared_ptr<T>> &&variedResults,; 48 std::vector<std::string> &&keys, RLoopManager &lm,; 49 std::shared_ptr<ROOT::Internal::RDF::RActionBase> nominalAction,; 50 std::shared_ptr<ROOT::Internal::RDF::RActionBase> variedAction); 51{; 52 return ROOT::RDF::Experimental::RResultMap<T>(std::move(nominalResult), std::move(variedResults), std::move(keys),; 53 lm, std::move(nominalAction), std::move(variedAction))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RResultMap_8hxx_source.html:94,Guid,Guide,94,doc/master/RResultMap_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RResultMap_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDF/RSampleInfo.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RSampleInfo.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, 2021; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_RSAMPLEINFO; 12#define ROOT_RDF_RSAMPLEINFO; 13 ; 14#include <ROOT/RDF/RSample.hxx>; 15#include <string_view>; 16#include <Rtypes.h>; 17 ; 18#include <functional>; 19#include <stdexcept>; 20#include <string>; 21 ; 22#include <tuple>; 23 ; 24namespace ROOT {; 25namespace RDF {; 26 ; 27/// This type represents a sample identifier, to be used in conjunction with RDataFrame features such as; 28/// \ref ROOT::RDF::RInterface< Proxied, DS_t >::DefinePerSample ""DefinePerSample()"" and per-sample callbacks.; 29///; 30/// When the input data comes from a TTree, the string representation of RSampleInfo (which is returned by AsString(); 31/// and that can be queried e.g. with Contains()) is of the form ""<filename>/<treename>"".; 32///; 33/// In multi-thread runs, different tasks might process different entry ranges of the same sample,; 34/// so RSampleInfo also provides methods to inspect which part of a sample is being taken into consideration.; 35class RSampleInfo {; 36 std::string fID;; 37 std::pair<ULong64_t, ULong64_t> fEntryRange;; 38 ; 39 const ROOT::RDF::Experimental::RSample *fSample = nullptr; // non-owning; 40 ; 41 void ThrowIfNoSample() const; 42 {; 43 if (fSample == nullptr) {; 44 const auto msg = ""RSampleInfo: sample data was requested but no samples are available."";; 45 throw std::logic_error(msg);; 46 }; 47 }; 48 ; 49public:; 50 RSampleInfo(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSampleInfo_8hxx_source.html:95,Guid,Guide,95,doc/master/RSampleInfo_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RSampleInfo_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDFHelpers.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; RDFHelpers.hxx File Reference. #include <ROOT/RDF/GraphUtils.hxx>; #include <ROOT/RDF/RActionBase.hxx>; #include <ROOT/RDF/RResultMap.hxx>; #include <ROOT/RResultHandle.hxx>; #include <ROOT/TypeTraits.hxx>; #include <array>; #include <chrono>; #include <fstream>; #include <functional>; #include <map>; #include <memory>; #include <mutex>; #include <type_traits>; #include <utility>; #include <vector>. Include dependency graph for RDFHelpers.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::RDF::Experimental::ProgressHelper;  RDF progress helper. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  ; namespace  ROOT::Internal::RDF;  ; namespace  ROOT::RDF;  ; namespace  ROOT::RDF::Experimental;  . Typedefs; using ROOT::RDF::Experimental::SnapshotPtr_t = ROOT::RDF::RResultPtr< ROOT::RDF::RInterface< ROOT::Detail::RDF::RLoopManager, void > >;  . Functions; void ROOT::RDF::Experimental::AddProgressBar (ROOT::RDataFrame df);  Add ProgressBar to an RDataFrame. ;  ; void ROOT::RDF::Experimental::AddProgressBar (ROOT::RDF::RNode df);  Add ProgressBar to a ROOT::RDF::RNode. ;  ; template<typename NodeType > ; RNode ROOT::RDF::AsRNode (NodeType node);  Cast a RDataFrame node to the common type ROOT::RDF::RNode. ;  ; template<typename F , typename Args = typename ROOT::TypeTraits::CallableTraits<std::decay_t<F>>::arg_types_nodecay, typename Ret = typename ROOT::TypeTraits::CallableTraits<std::decay_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8hxx.html:93,Guid,Guide,93,doc/master/RDFHelpers_8hxx.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8hxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDFHelpers.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDFHelpers.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 02/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11// This header contains helper free functions that slim down RDataFrame's programming model; 12 ; 13#ifndef ROOT_RDF_HELPERS; 14#define ROOT_RDF_HELPERS; 15 ; 16#include <ROOT/RDF/GraphUtils.hxx>; 17#include <ROOT/RDF/RActionBase.hxx>; 18#include <ROOT/RDF/RResultMap.hxx>; 19#include <ROOT/RResultHandle.hxx> // users of RunGraphs might rely on this transitive include; 20#include <ROOT/TypeTraits.hxx>; 21 ; 22#include <array>; 23#include <chrono>; 24#include <fstream>; 25#include <functional>; 26#include <map>; 27#include <memory>; 28#include <mutex>; 29#include <type_traits>; 30#include <utility> // std::index_sequence; 31#include <vector>; 32 ; 33namespace ROOT {; 34namespace Internal {; 35namespace RDF {; 36template <typename... ArgTypes, typename F>; 37std::function<bool(ArgTypes...)> NotHelper(ROOT::TypeTraits::TypeList<ArgTypes...>, F &&f); 38{; 39 return std::function<bool(ArgTypes...)>([=](ArgTypes... args) mutable { return !f(args...); });; 40}; 41 ; 42template <typename... ArgTypes, typename Ret, typename... Args>; 43std::function<bool(ArgTypes...)> NotHelper(ROOT::TypeTraits::TypeList<ArgTypes...>, Ret (*f)(Args...)); 44{; 45 return std::function<bool(ArgTypes...)>([=](ArgTypes... args) mutable { return !f(args...); });; 46}; 47 ; 48template <typename I, typename T, typename F>; 49class PassAsVecHelper;; 50 ; 51template <std::size_t... ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8hxx_source.html:90,Guid,Guide,90,doc/master/RDFHelpers_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDataFrame.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RDataFrame.hxx File Reference. #include ""TROOT.h""; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RInterface.hxx""; #include ""ROOT/RDF/Utils.hxx""; #include <string_view>; #include ""RtypesCore.h""; #include <initializer_list>; #include <memory>; #include <string>; #include <vector>. Include dependency graph for RDataFrame.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::RDataFrame;  ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::RDF;  ; namespace  ROOT::RDF::Experimental;  . Functions; ROOT::RDataFrame ROOT::RDF::Experimental::FromSpec (const std::string &jsonFile);  Factory method to create an RDataFrame from a JSON specification file. ;  . treedataframeincROOTRDataFrame.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8hxx.html:93,Guid,Guide,93,doc/master/RDataFrame_8hxx.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8hxx.html,2,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RDataFrame.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDataFrame.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 12/2016; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11/**; 12 \defgroup dataframe Dataframe; 13ROOT's RDataFrame allows to analyse data stored in TTrees with a high level interface.; 14*/; 15 ; 16#ifndef ROOT_RDATAFRAME; 17#define ROOT_RDATAFRAME; 18 ; 19#include ""TROOT.h"" // To allow ROOT::EnableImplicitMT without including ROOT.h; 20#include ""ROOT/RDF/RDatasetSpec.hxx""; 21#include ""ROOT/RDF/RInterface.hxx""; 22#include ""ROOT/RDF/Utils.hxx""; 23#include <string_view>; 24#include ""RtypesCore.h""; 25 ; 26#include <initializer_list>; 27#include <memory>; 28#include <string>; 29#include <vector>; 30 ; 31class TDirectory;; 32class TTree;; 33 ; 34namespace ROOT {; 35namespace RDF {; 36class RDataSource;; 37}; 38 ; 39namespace RDFDetail = ROOT::Detail::RDF;; 40 ; 41class RDataFrame : public ROOT::RDF::RInterface<RDFDetail::RLoopManager> {; 42public:; 43 using ColumnNames_t = ROOT::RDF::ColumnNames_t;; 44 RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});; 45 RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,; 46 const ColumnNames_t &defaultColumns = {});; 47 RDataFrame(std::string_view treename, std::initializer_list<std::string> filenames,; 48 const ColumnNames_t &defaultColumns = {}):; 49 RDataFrame(treename, std::vector<std::string>(filenames), defaultColumns) {}; 50 RDataFrame(std::string_view treeName, ::TDirector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8hxx_source.html:90,Guid,Guide,90,doc/master/RDataFrame_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RNTupleDS.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RNTupleDS.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDataSource.hxx>; #include <ROOT/RNTupleUtil.hxx>; #include <string_view>; #include <condition_variable>; #include <cstdint>; #include <memory>; #include <mutex>; #include <string>; #include <thread>; #include <vector>; #include <unordered_map>. Include dependency graph for RNTupleDS.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Experimental::RNTupleDS::REntryRangeDS;  The PrepareNextRanges() method populates the fNextRanges list with REntryRangeDS records. More...;  ; struct  ROOT::Experimental::RNTupleDS::RFieldInfo;  Holds useful information about fields added to the RNTupleDS. More...;  ; class  ROOT::Experimental::RNTupleDS;  The RDataSource implementation for RNTuple. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  ; namespace  ROOT::RDF;  ; namespace  ROOT::RDF::Experimental;  . Functions; RDataFrame ROOT::RDF::Experimental::FromRNTuple (ROOT::RNTuple *ntuple);  ; RDataFrame ROOT::RDF::Experimental::FromRNTuple (std::string_view ntupleName, const std::vector< std::string > &fileNames);  ; RDataFrame ROOT::RDF::Experimental::FromRNTuple (std::string_view ntupleName, std::string_view fileName);  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h . Enrico Guiraud enric.nosp@m.o.gu.nosp@m.iraud.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleDS_8hxx.html:92,Guid,Guide,92,doc/master/RNTupleDS_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleDS_8hxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RResultPtr.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RResultPtr.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 03/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RRESULTPTR; 12#define ROOT_RRESULTPTR; 13 ; 14#include ""ROOT/RDF/RActionBase.hxx""; 15#include ""RtypesCore.h""; 16#include ""ROOT/RDF/RLoopManager.hxx""; 17#include ""ROOT/TypeTraits.hxx""; 18#include ""TError.h"" // Warning; 19 ; 20#include <memory>; 21#include <functional>; 22#include <type_traits> // std::is_constructible; 23 ; 24namespace ROOT {; 25namespace RDF {; 26template <typename T>; 27class RResultPtr;; 28 ; 29namespace Experimental {; 30template <typename T>; 31class RResultMap;; 32 ; 33template <typename T>; 34RResultMap<T> VariationsFor(RResultPtr<T> resPtr);; 35} // namespace Experimental; 36 ; 37template <typename Proxied, typename DataSource>; 38class RInterface;; 39} // namespace RDF; 40 ; 41namespace Internal {; 42namespace RDF {; 43class GraphCreatorHelper;; 44/**; 45 * \brief Creates a new RResultPtr with a cloned action.; 46 *; 47 * \tparam T The type of the result held by the RResultPtr.; 48 * \param inptr The pointer.; 49 * \return A new pointer with a cloned action.; 50 */; 51template <typename T>; 52ROOT::RDF::RResultPtr<T> CloneResultAndAction(const ROOT::RDF::RResultPtr<T> &inptr); 53{; 54 // We call the copy constructor, to copy also the metadata of certain; 55 // result types, e.g. a for a TH1D we have to create a new histogram with; 56 // the same binning and axis limits.; 57 std::shared_ptr<T> copiedResult{new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RResultPtr_8hxx_source.html:90,Guid,Guide,90,doc/master/RResultPtr_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RResultPtr_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/RSnapshotOptions.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RSnapshotOptions.hxx. Go to the documentation of this file. 1// Author: Guilherme Amadio, Enrico Guiraud, Danilo Piparo CERN 2/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RSNAPSHOTOPTIONS; 12#define ROOT_RSNAPSHOTOPTIONS; 13 ; 14#include <Compression.h>; 15#include <string_view>; 16#include <string>; 17 ; 18namespace ROOT {; 19 ; 20namespace RDF {; 21/// A collection of options to steer the creation of the dataset on file; 22struct RSnapshotOptions {; 23 using ECAlgo = ROOT::RCompressionSetting::EAlgorithm::EValues;; 24 RSnapshotOptions() = default;; 25 RSnapshotOptions(const RSnapshotOptions &) = default;; 26 RSnapshotOptions(RSnapshotOptions &&) = default;; 27 RSnapshotOptions(std::string_view mode, ECAlgo comprAlgo, int comprLevel, int autoFlush, int splitLevel, bool lazy,; 28 bool overwriteIfExists = false, bool vector2RVec = true); 29 : fMode(mode),; 30 fCompressionAlgorithm(comprAlgo),; 31 fCompressionLevel{comprLevel},; 32 fAutoFlush(autoFlush),; 33 fSplitLevel(splitLevel),; 34 fLazy(lazy),; 35 fOverwriteIfExists(overwriteIfExists),; 36 fVector2RVec(vector2RVec); 37 {; 38 }; 39 std::string fMode = ""RECREATE""; ///< Mode of creation of output file; 40 ECAlgo fCompressionAlgorithm =; 41 ROOT::RCompressionSetting::EAlgorithm::kZLIB; ///< Compression algorithm of output file; 42 int fCompressionLevel = 1; ///< Compression level of output file; 43 int fAutoFlush = 0; ///< AutoFlush value for output tree; 44 int fSplitLevel = 99; ///< Split level of output tree; 45 bool fL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSnapshotOptions_8hxx_source.html:96,Guid,Guide,96,doc/master/RSnapshotOptions_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RSnapshotOptions_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/TDataFrame.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDataFrame.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 05/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_TDATAFRAME; 12#define ROOT_TDATAFRAME; 13#include ""RDataFrame.hxx""; 14namespace ROOT {; 15 ; 16using TDataFrame = ROOT::RDataFrame;; 17 ; 18} // End NS ROOT; 19 ; 20#warning The TDataFrame.hxx header has been replaced by RDataFrame.hxx; 21 ; 22#endif; RDataFrame.hxx; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. treedataframeincROOTTDataFrame.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDataFrame_8hxx_source.html:90,Guid,Guide,90,doc/master/TDataFrame_8hxx_source.html,https://root.cern,https://root.cern/doc/master/TDataFrame_8hxx_source.html,2,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/inc/ROOT/TDataFrame.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TDataFrame.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 05/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_TDATAFRAME; 12#define ROOT_TDATAFRAME; 13#include ""RDataFrame.hxx""; 14namespace ROOT {; 15 ; 16using TDataFrame = ROOT::RDataFrame;; 17 ; 18} // End NS ROOT; 19 ; 20#warning The TDataFrame.hxx header has been replaced by RDataFrame.hxx; 21 ; 22#endif; RDataFrame.hxx; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. treedataframeincROOTTDataFrame.hxx. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:09:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TDataFrame_8hxx_source.html:89,Guid,Guide,89,doc/v632/TDataFrame_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/TDataFrame_8hxx_source.html,2,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/src/RCsvDS.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RCsvDS.cxx. Go to the documentation of this file. 1// Author: Enric Tejedor CERN 10/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11// clang-format off; 12/** \class ROOT::RDF::RCsvDS; 13 \ingroup dataframe; 14 \brief RDataFrame data source class for reading CSV files.; 15 ; 16The RCsvDS class implements a CSV file reader for RDataFrame.; 17 ; 18A RDataFrame that reads from a CSV file can be constructed using the factory method; 19ROOT::RDF::FromCSV, which accepts five parameters:; 201. Path to the CSV file.; 212. Boolean that specifies whether the first row of the CSV file contains headers or; 22not (optional, default `true`). If `false`, header names will be automatically generated as Col0, Col1, ..., ColN.; 233. Delimiter (optional, default ',').; 244. Chunk size (optional, default is -1 to read all) - number of lines to read at a time; 255. Column Types (optional, default is an empty map). A map with column names as keys and their type; 26(expressed as a single character, see below) as values.; 27 ; 28The type of columns that do not appear in the map is inferred from the data.; 29The supported types are:; 30- Integer: stored as a 64-bit long long int; can be specified in the column types map with 'L'.; 31- Floating point number: stored with double precision; specified with 'D'.; 32- Boolean: matches the literals `true` and `false`; specified with 'O'.; 33- String: stored as an std::string, matches anything that does not fall into any of the; 34previous types; specified with 'T'.; 35 ; 36These are som",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RCsvDS_8cxx_source.html:81,Guid,Guide,81,doc/master/RCsvDS_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RCsvDS_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/src/RDFHelpers.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDFHelpers.cxx. Go to the documentation of this file. 1// Author: Stefan Wunsch, Enrico Guiraud CERN 09/2020; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""ROOT/RDFHelpers.hxx""; 12#include ""TROOT.h"" // IsImplicitMTEnabled; 13#include ""TError.h"" // Warning; 14#include ""TStopwatch.h""; 15#include ""RConfigure.h"" // R__USE_IMT; 16#include ""ROOT/RLogger.hxx""; 17#include ""ROOT/RDF/RLoopManager.hxx"" // for RLoopManager; 18#include ""ROOT/RDF/Utils.hxx""; 19#include ""ROOT/RResultHandle.hxx"" // for RResultHandle, RunGraphs; 20#ifdef R__USE_IMT; 21#include ""ROOT/TThreadExecutor.hxx""; 22#endif // R__USE_IMT; 23 ; 24#include <algorithm>; 25#include <iostream>; 26#include <set>; 27#include <cstdio>; 28 ; 29// TODO, this function should be part of core libraries; 30#include <numeric>; 31#if (!defined(_WIN32)) && (!defined(_WIN64)); 32#include <unistd.h>; 33#endif; 34 ; 35#if defined(_WIN32) || defined(_WIN64); 36#define WIN32_LEAN_AND_MEAN; 37#define VC_EXTRALEAN; 38#include <io.h>; 39#include <Windows.h>; 40#else; 41#include <sys/ioctl.h>; 42#endif; 43 ; 44// Get terminal size for progress bar; 45int get_tty_size(); 46{; 47#if defined(_WIN32) || defined(_WIN64); 48 if (!_isatty(_fileno(stdout))); 49 return 0;; 50 int width = 0;; 51 CONSOLE_SCREEN_BUFFER_INFO csbi;; 52 if (GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi)); 53 width = (int)(csbi.srWindow.Right - csbi.srWindow.Left + 1);; 54 return width;; 55#else; 56 int width = 0;; 57 struct winsize w;; 58 ioctl(fileno(stdout), TIOCGWINSZ, &w)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8cxx_source.html:85,Guid,Guide,85,doc/master/RDFHelpers_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/src/RDFUtils.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDFUtils.cxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 03/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""RConfigure.h"" // R__USE_IMT; 12#include ""ROOT/RDataSource.hxx""; 13#include ""ROOT/RDF/RDefineBase.hxx""; 14#include ""ROOT/RDF/RLoopManager.hxx""; 15#include ""ROOT/RDF/Utils.hxx""; 16#include ""ROOT/RLogger.hxx""; 17#include ""RtypesCore.h""; 18#include ""TBranch.h""; 19#include ""TBranchElement.h""; 20#include ""TClass.h""; 21#include ""TClassEdit.h""; 22#include ""TClassRef.h""; 23#include ""TError.h"" // Info; 24#include ""TInterpreter.h""; 25#include ""TLeaf.h""; 26#include ""TROOT.h"" // IsImplicitMTEnabled, GetThreadPoolSize; 27#include ""TTree.h""; 28 ; 29#include <stdexcept>; 30#include <string>; 31#include <cstring>; 32#include <typeinfo>; 33 ; 34using namespace ROOT::Detail::RDF;; 35using namespace ROOT::RDF;; 36 ; 37ROOT::Experimental::RLogChannel &ROOT::Detail::RDF::RDFLogChannel(); 38{; 39 static ROOT::Experimental::RLogChannel c(""ROOT.RDF"");; 40 return c;; 41}; 42 ; 43namespace {; 44using TypeInfoRef = std::reference_wrapper<const std::type_info>;; 45struct TypeInfoRefHash {; 46 std::size_t operator()(TypeInfoRef id) const { return id.get().hash_code(); }; 47};; 48 ; 49struct TypeInfoRefEqualComp {; 50 bool operator()(TypeInfoRef left, TypeInfoRef right) const { return left.get() == right.get(); }; 51};; 52} // namespace; 53 ; 54namespace ROOT {; 55namespace Internal {; 56namespace RDF {; 57 ; 58/// Return the type_info associated to a name. If the association",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFUtils_8cxx_source.html:83,Guid,Guide,83,doc/master/RDFUtils_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDFUtils_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/src/RDataFrame.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDataFrame.cxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 12/2016; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""ROOT/InternalTreeUtils.hxx""; 12#include ""ROOT/RDataFrame.hxx""; 13#include ""ROOT/RDataSource.hxx""; 14#include ""ROOT/RDF/RDatasetSpec.hxx""; 15#include ""ROOT/RDF/RInterface.hxx""; 16#include ""ROOT/RDF/RLoopManager.hxx""; 17#include ""ROOT/RDF/Utils.hxx""; 18#include <string_view>; 19#include ""TChain.h""; 20#include ""TDirectory.h""; 21#include ""RtypesCore.h"" // for ULong64_t; 22#include ""TTree.h""; 23 ; 24#include <fstream> // std::ifstream; 25#include <nlohmann/json.hpp> // nlohmann::json::parse; 26#include <memory> // for make_shared, allocator, shared_ptr; 27#include <ostream> // ostringstream; 28#include <stdexcept>; 29#include <string>; 30#include <vector>; 31 ; 32// clang-format off; 33/**; 34* \class ROOT::RDataFrame; 35* \ingroup dataframe; 36* \brief ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python.; 37 ; 38In addition, multi-threading and other low-level optimisations allow users to exploit all the resources available; 39on their machines completely transparently.<br>; 40Skip to the [class reference](#reference) or keep reading for the user guide.; 41 ; 42In a nutshell:; 43~~~{.cpp}; 44ROOT::EnableImplicitMT(); // Tell ROOT you want to go parallel; 45ROOT::RDataFrame d(""myTree"", ""file_*.root""); // Interface to TTree and TChain; 46auto myHisto = d.Histo1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:85,Guid,Guide,85,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/src/RDataFrame.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RDataFrame.cxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 12/2016; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""ROOT/InternalTreeUtils.hxx""; 12#include ""ROOT/RDataFrame.hxx""; 13#include ""ROOT/RDataSource.hxx""; 14#include ""ROOT/RDF/RDatasetSpec.hxx""; 15#include ""ROOT/RDF/RInterface.hxx""; 16#include ""ROOT/RDF/RLoopManager.hxx""; 17#include ""ROOT/RDF/Utils.hxx""; 18#include <string_view>; 19#include ""TChain.h""; 20#include ""TDirectory.h""; 21#include ""RtypesCore.h"" // for ULong64_t; 22#include ""TTree.h""; 23 ; 24#include <fstream> // std::ifstream; 25#include <nlohmann/json.hpp> // nlohmann::json::parse; 26#include <memory> // for make_shared, allocator, shared_ptr; 27#include <ostream> // ostringstream; 28#include <stdexcept>; 29#include <string>; 30#include <vector>; 31 ; 32// clang-format off; 33/**; 34* \class ROOT::RDataFrame; 35* \ingroup dataframe; 36* \brief ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python.; 37 ; 38In addition, multi-threading and other low-level optimisations allow users to exploit all the resources available; 39on their machines completely transparently.<br>; 40Skip to the [class reference](#reference) or keep reading for the user guide.; 41 ; 42In a nutshell:; 43~~~{.cpp}; 44ROOT::EnableImplicitMT(); // Tell ROOT you want to go parallel; 45ROOT::RDataFrame d(""myTree"", ""file_*.root""); // Interface to TTree and TChain; 46auto myHisto = d.Histo1D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:84,Guid,Guide,84,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/dataframe/src/RSqliteDS.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RSqliteDS.cxx. Go to the documentation of this file. 1// Author: Jakob Blomer CERN 07/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include <ROOT/RSqliteDS.hxx>; 12#include <ROOT/RRawFile.hxx>; 13 ; 14#include ""TError.h""; 15#include ""TRandom.h""; 16#include ""TSystem.h""; 17 ; 18#include <algorithm>; 19#include <cctype>; 20#include <cerrno>; 21#include <cstring> // for memcpy; 22#include <ctime>; 23#include <memory> // for placement new; 24#include <stdexcept>; 25#include <utility>; 26 ; 27#include <sqlite3.h>; 28 ; 29namespace {; 30 ; 31// In order to provide direct access to remote sqlite files through HTTP and HTTPS, this datasource provides a custom; 32// ""SQlite VFS module"" that uses Davix for data access. The SQlite VFS modules are roughly what TSystem is; 33// for ROOT -- an abstraction of the operating system interface.; 34//; 35// SQlite allows for registering custom VFS modules, which are a set of C callback functions that SQlite invokes when; 36// it needs to read from a file, write to a file, etc. More information is available under https://sqlite.org/vfs.html; 37//; 38// In the context of a data source, SQlite will only ever call reading functions from the VFS module, the sqlite; 39// files are not modified. Therefore, only a subset of the callback functions provide a non-trivial implementation.; 40// The custom VFS module uses a RRawFile for the byte access, thereby it can access local and remote files.; 41 ; 42////////////////////////////////////////////////////////////////////////////;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSqliteDS_8cxx_source.html:84,Guid,Guide,84,doc/master/RSqliteDS_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RSqliteDS_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RField.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RField.hxx. Go to the documentation of this file. 1/// \file ROOT/RField.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2018-10-09; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RField; 17#define ROOT7_RField; 18 ; 19#include <ROOT/RError.hxx>; 20#include <ROOT/RFieldBase.hxx>; 21#include <ROOT/RNTupleSerialize.hxx>; 22#include <ROOT/RNTupleUtil.hxx>; 23#include <ROOT/RSpan.hxx>; 24#include <string_view>; 25#include <ROOT/TypeTraits.hxx>; 26 ; 27#include <TGenericClassInfo.h>; 28 ; 29#include <algorithm>; 30#include <array>; 31#include <cstddef>; 32#include <iostream>; 33#include <memory>; 34#include <string>; 35#include <type_traits>; 36#include <typeinfo>; 37#include <vector>; 38 ; 39class TClass;; 40class TEnum;; 41class TObject;; 42class TVirtualStreamerInfo;; 43 ; 44namespace ROOT {; 45 ; 46class TSchemaRule;; 47 ; 48namespace Experimental {; 49 ; 50class REntry;; 51 ; 52namespace Detail {; 53class RFieldVisitor;; 54} // namespace Detail; 55 ; 56/// The container field for an ntuple model, which itself has no physical representation.; 57/// Therefore, the zero field must not be connected to a page source or sink.; 58class RFieldZero final : public RFieldBase {; 59protected:; 60 std::unique_ptr<RFieldBase> CloneImpl(std::string_view newName) const final;; 61 void ConstructValue(void *) const final {};",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RField_8hxx_source.html:86,Guid,Guide,86,doc/master/RField_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RField_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTuple.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RNTuple.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <Rtypes.h>; #include <cstdint>. Include dependency graph for RNTuple.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::RNTuple;  Representation of an RNTuple data set in a ROOT file. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  . Functions; RNTuple ROOT::Experimental::Internal::CreateAnchor (std::uint16_t versionEpoch, std::uint16_t versionMajor, std::uint16_t versionMinor, std::uint16_t versionPatch, std::uint64_t seekHeader, std::uint64_t nbytesHeader, std::uint64_t lenHeader, std::uint64_t seekFooter, std::uint64_t nbytesFooter, std::uint64_t lenFooter, std::uint64_t maxKeySize);  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h ; Date2023-09-19 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition in file RNTuple.hxx. treentuplev7incROOTRNTuple.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTuple_8hxx.html:90,Guid,Guide,90,doc/master/RNTuple_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTuple_8hxx.html,3,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTuple.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTuple.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTuple.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2023-09-19; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTuple; 17#define ROOT7_RNTuple; 18 ; 19#include <Rtypes.h>; 20 ; 21#include <cstdint>; 22 ; 23class TCollection;; 24class TFile;; 25class TFileMergeInfo;; 26 ; 27namespace ROOT {; 28 ; 29class RNTuple;; 30 ; 31namespace Experimental {; 32namespace Internal {; 33class RNTupleFileWriter;; 34class RPageSourceFile;; 35 ; 36RNTuple CreateAnchor(std::uint16_t versionEpoch, std::uint16_t versionMajor, std::uint16_t versionMinor,; 37 std::uint16_t versionPatch, std::uint64_t seekHeader, std::uint64_t nbytesHeader,; 38 std::uint64_t lenHeader, std::uint64_t seekFooter, std::uint64_t nbytesFooter,; 39 std::uint64_t lenFooter, std::uint64_t maxKeySize);; 40 ; 41} // namespace Internal; 42} // namespace Experimental; 43 ; 44// clang-format off; 45/**; 46\class ROOT::RNTuple; 47\ingroup NTuple; 48\brief Representation of an RNTuple data set in a ROOT file; 49 ; 50The class points to the header and footer keys, which in turn have the references to the pages (via page lists).; 51Only the RNTuple key will be listed in the list of keys. Like TBaskets, the pages are ""invisible"" keys.; 52Byte offset references in the RNTuple header and footer r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTuple_8hxx_source.html:87,Guid,Guide,87,doc/master/RNTuple_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTuple_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RNTupleModel.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/REntry.hxx>; #include <ROOT/RError.hxx>; #include <ROOT/RField.hxx>; #include <ROOT/RNTupleUtil.hxx>; #include <string_view>; #include <cstdint>; #include <functional>; #include <memory>; #include <string>; #include <unordered_map>; #include <unordered_set>; #include <utility>. Include dependency graph for RNTupleModel.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Experimental::RNTupleModel::NameWithDescription_t;  A wrapper over a field name and an optional description; used in AddField() and RUpdater::AddField() More...;  ; class  ROOT::Experimental::RNTupleModel;  The RNTupleModel encapulates the schema of an ntuple. More...;  ; class  ROOT::Experimental::Internal::RNTupleModelChangeset;  The incremental changes to a RNTupleModel More...;  ; class  ROOT::Experimental::Internal::RProjectedFields;  The projected fields of a RNTupleModel More...;  ; class  ROOT::Experimental::RNTupleModel::RUpdater;  A model is usually immutable after passing it to an RNTupleWriter. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  . Functions; RFieldZero & ROOT::Experimental::Internal::GetFieldZeroOfModel (RNTupleModel &model);  ; RProjectedFields & ROOT::Experimental::Internal::GetProjectedFieldsOfModel (RNTupleModel &model);  . Detailed Description; AuthorJakob Blomer jb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleModel_8hxx.html:95,Guid,Guide,95,doc/master/RNTupleModel_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleModel_8hxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleModel.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleModel.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2018-10-04; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTupleModel; 17#define ROOT7_RNTupleModel; 18 ; 19#include <ROOT/REntry.hxx>; 20#include <ROOT/RError.hxx>; 21#include <ROOT/RField.hxx>; 22#include <ROOT/RNTupleUtil.hxx>; 23#include <string_view>; 24 ; 25#include <cstdint>; 26#include <functional>; 27#include <memory>; 28#include <string>; 29#include <unordered_map>; 30#include <unordered_set>; 31#include <utility>; 32 ; 33namespace ROOT {; 34namespace Experimental {; 35 ; 36class RNTupleModel;; 37class RNTupleWriter;; 38class RNTupleWriteOptions;; 39 ; 40namespace Internal {; 41class RProjectedFields;; 42 ; 43RFieldZero &GetFieldZeroOfModel(RNTupleModel &model);; 44RProjectedFields &GetProjectedFieldsOfModel(RNTupleModel &model);; 45 ; 46// clang-format off; 47/**; 48\class ROOT::Experimental::Internal::RProjectedFields; 49\ingroup NTuple; 50\brief The projected fields of a `RNTupleModel`; 51 ; 52Projected fields are fields whose columns are reused from existing fields. Projected fields are not attached; 53to the models zero field. Only the real source fields are written to, projected fields are stored as meta-data; 54(header) information only. Only top-level",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleModel_8hxx_source.html:92,Guid,Guide,92,doc/master/RNTupleModel_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleModel_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleReader.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Enumerations ; RNTupleReader.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/RConfig.hxx>; #include <ROOT/RError.hxx>; #include <ROOT/RNTupleDescriptor.hxx>; #include <ROOT/RNTupleMetrics.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleReadOptions.hxx>; #include <ROOT/RNTupleUtil.hxx>; #include <ROOT/RNTupleView.hxx>; #include <ROOT/RPageStorage.hxx>; #include <ROOT/RSpan.hxx>; #include <iostream>; #include <iterator>; #include <memory>; #include <string>; #include <string_view>. Include dependency graph for RNTupleReader.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Experimental::RNTupleReader::RIterator;  ; class  ROOT::Experimental::RNTupleReader;  An RNTuple that is used to read data from storage. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  . Enumerations; enum class  ROOT::Experimental::ENTupleInfo { ROOT::Experimental::kSummary; , ROOT::Experimental::kStorageDetails; , ROOT::Experimental::kMetrics; };  Listing of the different options that can be printed by RNTupleReader::GetInfo() More...;  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h ; Date2024-02-20 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition in file RNTupleReader.hxx. treentuplev7incROOTRNTupleReader.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleReader_8hxx.html:96,Guid,Guide,96,doc/master/RNTupleReader_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleReader_8hxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleReader.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleReader.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleReader.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2024-02-20; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTupleReader; 17#define ROOT7_RNTupleReader; 18 ; 19#include <ROOT/RConfig.hxx> // for R__unlikely; 20#include <ROOT/RError.hxx>; 21#include <ROOT/RNTupleDescriptor.hxx>; 22#include <ROOT/RNTupleMetrics.hxx>; 23#include <ROOT/RNTupleModel.hxx>; 24#include <ROOT/RNTupleReadOptions.hxx>; 25#include <ROOT/RNTupleUtil.hxx>; 26#include <ROOT/RNTupleView.hxx>; 27#include <ROOT/RPageStorage.hxx>; 28#include <ROOT/RSpan.hxx>; 29 ; 30#include <iostream>; 31#include <iterator>; 32#include <memory>; 33#include <string>; 34#include <string_view>; 35 ; 36namespace ROOT {; 37class RNTuple;; 38 ; 39namespace Experimental {; 40class REntry;; 41 ; 42/// Listing of the different options that can be printed by RNTupleReader::GetInfo(); 43enum class ENTupleInfo {; 44 kSummary, // The ntuple name, description, number of entries; 45 kStorageDetails, // size on storage, page sizes, compression factor, etc.; 46 kMetrics, // internals performance counters, requires that EnableMetrics() was called; 47};; 48 ; 49// clang-format off; 50/**; 51\class ROOT::Experimental::RNTupleReader; 52\ingroup NTuple; 53\brief An RNTuple that is used t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleReader_8hxx_source.html:93,Guid,Guide,93,doc/master/RNTupleReader_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleReader_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleUtil.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleUtil.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleUtil.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2018-10-04; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTupleUtil; 17#define ROOT7_RNTupleUtil; 18 ; 19#include <cstdint>; 20 ; 21#include <string>; 22#include <variant>; 23 ; 24#include <ROOT/RLogger.hxx>; 25#include <ROOT/RNTupleReadOptions.hxx>; 26 ; 27namespace ROOT {; 28 ; 29/// Helper types to present an offset column as array of collection sizes.; 30/// See RField<RNTupleCardinality<SizeT>> for details.; 31template <typename SizeT>; 32struct RNTupleCardinality {; 33 static_assert(std::is_same_v<SizeT, std::uint32_t> || std::is_same_v<SizeT, std::uint64_t>,; 34 ""RNTupleCardinality is only supported with std::uint32_t or std::uint64_t template parameters"");; 35 ; 36 using ValueType = SizeT;; 37 ; 38 RNTupleCardinality() : fValue(0) {}; 39 explicit constexpr RNTupleCardinality(ValueType value) : fValue(value) {}; 40 RNTupleCardinality &operator=(const ValueType value); 41 {; 42 fValue = value;; 43 return *this;; 44 }; 45 operator ValueType() const { return fValue; }; 46 ; 47 ValueType fValue;; 48};; 49 ; 50namespace Experimental {; 51 ; 52class RLogChannel;; 53/// Log channel for RNTuple diagnostics.; 54RLogChannel &NTupleLog();; 55 ; 56// clang-format off; 57/**; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleUtil_8hxx_source.html:91,Guid,Guide,91,doc/master/RNTupleUtil_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleUtil_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RNTupleWriter.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/RConfig.hxx>; #include <ROOT/REntry.hxx>; #include <ROOT/RError.hxx>; #include <ROOT/RNTupleFillContext.hxx>; #include <ROOT/RNTupleFillStatus.hxx>; #include <ROOT/RNTupleMetrics.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleUtil.hxx>; #include <ROOT/RPageStorage.hxx>; #include <cstddef>; #include <cstdint>; #include <memory>; #include <string_view>; #include <utility>. Include dependency graph for RNTupleWriter.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Experimental::RNTupleWriter;  An RNTuple that gets filled with entries (data) and writes them to storage. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  . Functions; std::unique_ptr< RNTupleWriter > ROOT::Experimental::Internal::CreateRNTupleWriter (std::unique_ptr< RNTupleModel > model, std::unique_ptr< Internal::RPageSink > sink);  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h ; Date2024-02-20 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition in file RNTupleWriter.hxx. treentuplev7incROOTRNTupleWriter.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8hxx.html:96,Guid,Guide,96,doc/master/RNTupleWriter_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8hxx.html,3,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleWriter.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleWriter.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2024-02-20; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTupleWriter; 17#define ROOT7_RNTupleWriter; 18 ; 19#include <ROOT/RConfig.hxx> // for R__unlikely; 20#include <ROOT/REntry.hxx>; 21#include <ROOT/RError.hxx>; 22#include <ROOT/RNTupleFillContext.hxx>; 23#include <ROOT/RNTupleFillStatus.hxx>; 24#include <ROOT/RNTupleMetrics.hxx>; 25#include <ROOT/RNTupleModel.hxx>; 26#include <ROOT/RNTupleUtil.hxx>; 27#include <ROOT/RPageStorage.hxx>; 28 ; 29#include <cstddef>; 30#include <cstdint>; 31#include <memory>; 32#include <string_view>; 33#include <utility>; 34 ; 35class TFile;; 36 ; 37namespace ROOT {; 38namespace Experimental {; 39 ; 40class RNTupleWriteOptions;; 41 ; 42namespace Internal {; 43// Non-public factory method for an RNTuple writer that uses an already constructed page sink; 44std::unique_ptr<RNTupleWriter>; 45CreateRNTupleWriter(std::unique_ptr<RNTupleModel> model, std::unique_ptr<Internal::RPageSink> sink);; 46} // namespace Internal; 47 ; 48// clang-format off; 49/**; 50\class ROOT::Experimental::RNTupleWriter; 51\ingroup NTuple; 52\brief An RNTuple that gets filled with entries (data) and writes them to storage; 53 ; 54An output ntuple can be filled",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8hxx_source.html:93,Guid,Guide,93,doc/master/RNTupleWriter_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/inc/ROOT/RPageStorageFile.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; RPageStorageFile.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/RMiniFile.hxx>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleSerialize.hxx>; #include <ROOT/RNTupleZip.hxx>; #include <ROOT/RPageStorage.hxx>; #include <ROOT/RRawFile.hxx>; #include <string_view>; #include <array>; #include <cstdio>; #include <memory>; #include <optional>; #include <string>; #include <utility>. Include dependency graph for RPageStorageFile.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Experimental::Internal::RPageSinkFile::CommitBatch;  ; class  ROOT::Experimental::Internal::RPageSinkFile;  Storage provider that write ntuple pages into a file. More...;  ; class  ROOT::Experimental::Internal::RPageSourceFile;  Storage provider that reads ntuple pages from a file. More...;  ; struct  ROOT::Experimental::Internal::RPageSourceFile::RStructureBuffer;  Holds the uncompressed header and footer. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  ; namespace  ROOT::Internal;  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h ; Date2019-11-21 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition in file RPageStorageFile.hxx. treentuplev7incROOTRPageStorageFile.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RPageStorageFile_8hxx.html:99,Guid,Guide,99,doc/master/RPageStorageFile_8hxx.html,https://root.cern,https://root.cern/doc/master/RPageStorageFile_8hxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/ntuple/v7/src/RNTupleModel.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleModel.cxx. Go to the documentation of this file. 1/// \file RNTupleModel.cxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2018-10-15; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include <ROOT/RError.hxx>; 17#include <ROOT/RField.hxx>; 18#include <ROOT/RNTupleModel.hxx>; 19#include <ROOT/RNTupleWriter.hxx>; 20#include <ROOT/StringUtils.hxx>; 21 ; 22#include <atomic>; 23#include <cstdlib>; 24#include <memory>; 25#include <utility>; 26 ; 27namespace {; 28std::uint64_t GetNewModelId(); 29{; 30 static std::atomic<std::uint64_t> gLastModelId = 0;; 31 return ++gLastModelId;; 32}; 33} // anonymous namespace; 34 ; 35ROOT::Experimental::RFieldZero &; 36ROOT::Experimental::Internal::GetFieldZeroOfModel(ROOT::Experimental::RNTupleModel &model); 37{; 38 return *model.fFieldZero;; 39}; 40 ; 41ROOT::Experimental::Internal::RProjectedFields &; 42ROOT::Experimental::Internal::GetProjectedFieldsOfModel(ROOT::Experimental::RNTupleModel &model); 43{; 44 return *model.fProjectedFields;; 45}; 46 ; 47//------------------------------------------------------------------------------; 48 ; 49ROOT::Experimental::RResult<void>; 50ROOT::Experimental::Internal::RProjectedFields::EnsureValidMapping(const RFieldBase *target, const FieldMap_t &fieldMap); 51{; 52 auto source = fieldMap.at(target);; 53 const bool hasCompatibleStructure =; 54 (so",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleModel_8cxx_source.html:87,Guid,Guide,87,doc/master/RNTupleModel_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleModel_8cxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/src/RNTupleReader.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleReader.cxx. Go to the documentation of this file. 1/// \file RNTupleReader.cxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2024-02-20; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include <ROOT/RNTupleReader.hxx>; 17 ; 18#include <ROOT/RField.hxx>; 19#include <ROOT/RFieldVisitor.hxx>; 20#include <ROOT/RNTupleImtTaskScheduler.hxx>; 21#include <ROOT/RNTuple.hxx>; 22#include <ROOT/RNTupleModel.hxx>; 23#include <ROOT/RPageSourceFriends.hxx>; 24#include <ROOT/RPageStorageFile.hxx>; 25 ; 26#include <TROOT.h>; 27 ; 28void ROOT::Experimental::RNTupleReader::ConnectModel(RNTupleModel &model); 29{; 30 auto &fieldZero = Internal::GetFieldZeroOfModel(model);; 31 // We must not use the descriptor guard to prevent recursive locking in field.ConnectPageSource; 32 DescriptorId_t fieldZeroId = fSource->GetSharedDescriptorGuard()->GetFieldZeroId();; 33 fieldZero.SetOnDiskId(fieldZeroId);; 34 // Iterate only over fieldZero's direct subfields; their descendants are recursively handled in; 35 // RFieldBase::ConnectPageSource; 36 for (auto &field : fieldZero.GetSubFields()) {; 37 // If the model has been created from the descriptor, the on-disk IDs are already set.; 38 // User-provided models instead need to find their corresponding IDs in the descriptor.; 39 if (field->GetOnDiskId() == kInvalidDescriptorId) {; 40 field->SetOnDisk",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleReader_8cxx_source.html:88,Guid,Guide,88,doc/master/RNTupleReader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleReader_8cxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntuple/v7/src/RNTupleWriter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleWriter.cxx. Go to the documentation of this file. 1/// \file RNTupleReader.cxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2024-02-20; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include <ROOT/RNTupleWriter.hxx>; 17 ; 18#include <ROOT/RLogger.hxx>; 19#include <ROOT/RNTupleImtTaskScheduler.hxx>; 20#include <ROOT/RNTupleFillContext.hxx>; 21#include <ROOT/RNTupleMetrics.hxx>; 22#include <ROOT/RNTupleModel.hxx>; 23#include <ROOT/RNTupleWriteOptions.hxx>; 24#include <ROOT/RPageSinkBuf.hxx>; 25#include <ROOT/RPageStorage.hxx>; 26#include <ROOT/RPageStorageFile.hxx>; 27 ; 28#include <TROOT.h>; 29 ; 30#include <utility>; 31 ; 32ROOT::Experimental::RNTupleWriter::RNTupleWriter(std::unique_ptr<ROOT::Experimental::RNTupleModel> model,; 33 std::unique_ptr<ROOT::Experimental::Internal::RPageSink> sink); 34 : fFillContext(std::move(model), std::move(sink)), fMetrics(""RNTupleWriter""); 35{; 36#ifdef R__USE_IMT; 37 if (IsImplicitMTEnabled() &&; 38 fFillContext.fSink->GetWriteOptions().GetUseImplicitMT() == RNTupleWriteOptions::EImplicitMT::kDefault) {; 39 fZipTasks = std::make_unique<Internal::RNTupleImtTaskScheduler>();; 40 fFillContext.fSink->SetTaskScheduler(fZipTasks.get());; 41 }; 42#endif; 43 // Observe directly the sink's metrics to avoid an additional prefix from the fill context.; 44 fMetrics.ObserveMetrics(fFillCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8cxx_source.html:88,Guid,Guide,88,doc/master/RNTupleWriter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8cxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; RNTupleImporter.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/REntry.hxx>; #include <ROOT/RError.hxx>; #include <ROOT/RField.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriteOptions.hxx>; #include <ROOT/RNTupleWriter.hxx>; #include <string_view>; #include <TFile.h>; #include <TTree.h>; #include <cstdlib>; #include <functional>; #include <map>; #include <memory>; #include <vector>. Include dependency graph for RNTupleImporter.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Experimental::RNTupleImporter::RCStringTransformation;  Transform a NULL terminated C string branch into an std::string field. More...;  ; struct  ROOT::Experimental::RNTupleImporter::RImportBranch;  ; struct  ROOT::Experimental::RNTupleImporter::RImportField;  ; struct  ROOT::Experimental::RNTupleImporter::RImportGuard;  When the schema is set up and the import started, it needs to be reset before the next Import() call can start. More...;  ; struct  ROOT::Experimental::RNTupleImporter::RImportLeafCountCollection;  Leaf count arrays require special treatment. More...;  ; struct  ROOT::Experimental::RNTupleImporter::RImportTransformation;  Base class to perform data transformations from TTree branches to RNTuple fields if necessary. More...;  ; class  ROOT::Experimental::RNTupleImporter;  Converts a TTree into an RNTuple. More...;  ; class  ROOT::Experimental::RNTupleImporter::RProgressCallback;  Used to report every ~100 MB (compressed), and at the end about the status of the import. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleImporter_8hxx.html:102,Guid,Guide,102,doc/master/RNTupleImporter_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleImporter_8hxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleImporter.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleImporter.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2022-11-22; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTuplerImporter; 17#define ROOT7_RNTuplerImporter; 18 ; 19#include <ROOT/REntry.hxx>; 20#include <ROOT/RError.hxx>; 21#include <ROOT/RField.hxx>; 22#include <ROOT/RNTupleModel.hxx>; 23#include <ROOT/RNTupleWriteOptions.hxx>; 24#include <ROOT/RNTupleWriter.hxx>; 25#include <string_view>; 26 ; 27#include <TFile.h>; 28#include <TTree.h>; 29 ; 30#include <cstdlib>; 31#include <functional>; 32#include <map>; 33#include <memory>; 34#include <vector>; 35 ; 36class TLeaf;; 37 ; 38namespace ROOT {; 39namespace Experimental {; 40 ; 41// clang-format off; 42/**; 43\class ROOT::Experimental::RNTupleImporter; 44\ingroup NTuple; 45\brief Converts a TTree into an RNTuple; 46 ; 47Example usage (see the ntpl008_import.C tutorial for a full example):; 48 ; 49~~~ {.cpp}; 50#include <ROOT/RNTupleImporter.hxx>; 51using ROOT::Experimental::RNTupleImporter;; 52 ; 53auto importer = RNTupleImporter::Create(""data.root"", ""TreeName"", ""output.root"");; 54// As required: importer->SetNTupleName(), importer->SetWriteOptions(), ...; 55importer->Import();; 56~~~; 57 ; 58The output file is created if it does not exist, otherwise the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleImporter_8hxx_source.html:99,Guid,Guide,99,doc/master/RNTupleImporter_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleImporter_8hxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/ntupleutil/v7/src/RNTupleImporter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleImporter.cxx. Go to the documentation of this file. 1/// \file RNTupleImporter.cxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2022-11-22; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include <ROOT/RError.hxx>; 17#include <ROOT/RField.hxx>; 18#include <ROOT/RNTupleImporter.hxx>; 19#include <ROOT/RNTupleUtil.hxx>; 20#include <ROOT/RNTupleWriteOptions.hxx>; 21#include <ROOT/RNTupleWriter.hxx>; 22#include <ROOT/RPageSinkBuf.hxx>; 23#include <ROOT/RPageStorage.hxx>; 24#include <ROOT/RPageStorageFile.hxx>; 25#include <string_view>; 26 ; 27#include <TBranch.h>; 28#include <TChain.h>; 29#include <TClass.h>; 30#include <TDataType.h>; 31#include <TLeaf.h>; 32#include <TLeafC.h>; 33#include <TLeafElement.h>; 34#include <TLeafObject.h>; 35 ; 36#include <cassert>; 37#include <cstdint>; 38#include <cstring>; 39#include <iostream>; 40#include <utility>; 41 ; 42namespace {; 43 ; 44class RDefaultProgressCallback : public ROOT::Experimental::RNTupleImporter::RProgressCallback {; 45private:; 46 static constexpr std::uint64_t gUpdateFrequencyBytes = 100 * 1000 * 1000; // report every 100 MB; 47 std::uint64_t fNbytesNext = gUpdateFrequencyBytes;; 48 ; 49public:; 50 ~RDefaultProgressCallback() override {}; 51 void Call(std::uint64_t nbytesWritten, std::uint64_t neventsWritten) final; 52 {; 53 // Report if more than 100 MB (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleImporter_8cxx_source.html:94,Guid,Guide,94,doc/master/RNTupleImporter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleImporter_8cxx_source.html,2,"['Feedback', 'Guid']","['Feedback', 'Guide']"
Usability,". ROOT: tree/tree/doc/macros/entrylist_figure1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; entrylist_figure1.C File Reference. Functions; pt Draw ();  ; c Range (0, 0, 1, 1);  ; pt SetBorderSize (1);  ; c SetBorderSize (2);  ; arrow SetFillColor (1);  ; pt SetFillColor (kWhite);  ; arrow SetFillStyle (1001);  ; c SetFrameFillColor (0);  ; pt SetTextColor (4);  ; pt SetTextFont (42);  . Variables; TArrow * arrow = new TArrow(0.277202,0.356757,0.418605,0.505435,0.05,"">"");  ; TPaveText * pt = new TPaveText(0.00518135,0.810811,0.507772,0.989189,""br"");  ; TText * text = pt->AddText(""TEntryList for a TTree"");  . Function Documentation. ◆ Draw(). pt Draw ; (; ). ◆ Range(). c Range ; (; 0 ; , . 0 ; , . 1 ; , . 1 ;  . ). ◆ SetBorderSize() [1/2]. pt SetBorderSize ; (; 1 ; ). ◆ SetBorderSize() [2/2]. c SetBorderSize ; (; 2 ; ). ◆ SetFillColor() [1/2]. arrow SetFillColor ; (; 1 ; ). ◆ SetFillColor() [2/2]. pt SetFillColor ; (; kWhite ; ). ◆ SetFillStyle(). arrow SetFillStyle ; (; 1001 ; ). ◆ SetFrameFillColor(). c SetFrameFillColor ; (; 0 ; ). ◆ SetTextColor(). pt SetTextColor ; (; 4 ; ). ◆ SetTextFont(). pt SetTextFont ; (; 42 ; ). Variable Documentation. ◆ arrow. TArrow* arrow = new TArrow(0.277202,0.356757,0.418605,0.505435,0.05,"">""). Definition at line 41 of file entrylist_figure1.C. ◆ pt. pt = new TPaveText(0.00518135,0.810811,0.507772,0.989189,""br""). Definition at line 7 of file entrylist_figure1.C. ◆ text. text = pt->AddText(""TEntryList for a TTree""). Definition at line 10 of file entrylist_figure1.C. treetreedocmacrosentrylist_figure1.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/entrylist__figure1_8C.html:95,Guid,Guide,95,doc/master/entrylist__figure1_8C.html,https://root.cern,https://root.cern/doc/master/entrylist__figure1_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tree/tree/doc/macros/entrylist_figure1.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. entrylist_figure1.C. Go to the documentation of this file. 1{; 2 TCanvas *c = new TCanvas(""c"", ""c"",213,172,460,253);; 3 c->Range(0,0,1,1);; 4 c->SetBorderSize(2);; 5 c->SetFrameFillColor(0);; 6 ; 7 TPaveText *pt = new TPaveText(0.00518135,0.810811,0.507772,0.989189,""br"");; 8 pt->SetFillColor(kWhite);; 9 pt->SetTextColor(4);; 10 TText *text = pt->AddText(""TEntryList for a TTree"");; 11 pt->Draw();; 12 ; 13 pt = new TPaveText(0.0387597,0.483696,0.307494,0.657609,""br"");; 14 pt->SetFillColor(kWhite);; 15 text = pt->AddText(""TEntryList"");; 16 pt->Draw();; 17 ; 18 pt = new TPaveText(0.0363636,0.107527,0.306494,0.489247,""br"");; 19 pt->SetFillColor(kWhite);; 20 pt->SetTextFont(42);; 21 text = pt->AddText(""fBlocks"");; 22 text = pt->AddText(""fLists = 0"");; 23 pt->Draw();; 24 ; 25 pt = new TPaveText(0.338501,0.23913,0.627907,0.375,""br"");; 26 pt->SetBorderSize(1);; 27 pt->SetFillColor(kWhite);; 28 text = pt->AddText(""Info on entries 0-63999"");; 29 pt->Draw();; 30 ; 31 pt = new TPaveText(0.643411,0.23913,0.989664,0.375,""br"");; 32 pt->SetBorderSize(1);; 33 pt->SetFillColor(kWhite);; 34 text = pt->AddText(""entries 64000-127999"");; 35 pt->Draw();; 36 ; 37 pt = new TPaveText(0.423773,0.423913,0.870801,0.576087,""br"");; 38 pt->SetFillColor(kWhite);; 39 text = pt->AddText(""TObjArray of TEntryListBlock objects"");; 40 pt->Draw();; 41 TArrow *arrow = new TArrow(0.277202,0.356757,0.418605,0.505435,0.05,"">"");; 42 arrow->SetFillColor(1);; 43 arrow->SetFillStyle(1001);; 44 arrow->Draw();; 45}; c#define c(i)Definition RSha256.hxx:101; kWhite@ kWhiteDefinition Rtypes.h:65; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/entrylist__figure1_8C_source.html:92,Guid,Guide,92,doc/master/entrylist__figure1_8C_source.html,https://root.cern,https://root.cern/doc/master/entrylist__figure1_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/doc/macros/entrylistblock_figure1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; entrylistblock_figure1.C File Reference. Functions; pt Draw ();  ; c Range (0, 0, 1, 1);  ; pt SetBorderSize (0);  ; c SetBorderSize (2);  ; arrow SetFillColor (1);  ; pt SetFillColor (kWhite);  ; arrow SetFillStyle (1001);  ; c SetFrameFillColor (0);  ; pt SetTextAlign (12);  ; text SetTextAngle (-15);  ; pt SetTextColor (4);  ; pt SetTextSize (0.048583);  . Variables; TArrow * arrow = new TArrow(0.225552,0.572271,0.35489,0.283186,0.03,""|>"");  ; TLine * line = new TLine(0.35,0.5,0.95,0.5);  ; TPaveText * pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");  ; TText * text = pt->AddText(""TEntryListBlock"");  . Function Documentation. ◆ Draw(). pt Draw ; (; ). ◆ Range(). c Range ; (; 0 ; , . 0 ; , . 1 ; , . 1 ;  . ). ◆ SetBorderSize() [1/2]. pt SetBorderSize ; (; 0 ; ). ◆ SetBorderSize() [2/2]. c SetBorderSize ; (; 2 ; ). ◆ SetFillColor() [1/2]. arrow SetFillColor ; (; 1 ; ). ◆ SetFillColor() [2/2]. pt SetFillColor ; (; kWhite ; ). ◆ SetFillStyle(). arrow SetFillStyle ; (; 1001 ; ). ◆ SetFrameFillColor(). c SetFrameFillColor ; (; 0 ; ). ◆ SetTextAlign(). pt SetTextAlign ; (; 12 ; ). ◆ SetTextAngle(). text SetTextAngle ; (; - ; 15). ◆ SetTextColor(). pt SetTextColor ; (; 4 ; ). ◆ SetTextSize(). pt SetTextSize ; (; 0. ; 048583). Variable Documentation. ◆ arrow. arrow = new TArrow(0.225552,0.572271,0.35489,0.283186,0.03,""|>""). Definition at line 227 of file entrylistblock_figure1.C. ◆ line. line = new TLine(0.35,0.5,0.95,0.5). Definition at line 235 of file entrylistblock_figure1.C. ◆ pt. pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br""). Definition at line 7 of file entrylistblock_figure1.C. ◆ text. text = pt->AddText(""TEntryListBlock""). Definition at line 9 of file entrylistblock_figure1.C. treetreedocmacrosentrylistblock_figure1.C. ROOT master - Reference Guide Generated on ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/entrylistblock__figure1_8C.html:100,Guid,Guide,100,doc/master/entrylistblock__figure1_8C.html,https://root.cern,https://root.cern/doc/master/entrylistblock__figure1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/doc/macros/entrylistblock_figure1.C File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; entrylistblock_figure1.C File Reference. Functions; pt Draw ();  ; c Range (0, 0, 1, 1);  ; pt SetBorderSize (0);  ; c SetBorderSize (2);  ; arrow SetFillColor (1);  ; pt SetFillColor (kWhite);  ; arrow SetFillStyle (1001);  ; c SetFrameFillColor (0);  ; pt SetTextAlign (12);  ; text SetTextAngle (-15);  ; pt SetTextColor (4);  ; pt SetTextSize (0.048583);  . Variables; TArrow * arrow = new TArrow(0.225552,0.572271,0.35489,0.283186,0.03,""|>"");  ; TLine * line = new TLine(0.35,0.5,0.95,0.5);  ; TPaveText * pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");  ; TText * text = pt->AddText(""TEntryListBlock"");  . Function Documentation. ◆ Draw(). pt Draw ; (; ). ◆ Range(). c Range ; (; 0 ; , . 0 ; , . 1 ; , . 1 ;  . ). ◆ SetBorderSize() [1/2]. pt SetBorderSize ; (; 0 ; ). ◆ SetBorderSize() [2/2]. c SetBorderSize ; (; 2 ; ). ◆ SetFillColor() [1/2]. arrow SetFillColor ; (; 1 ; ). ◆ SetFillColor() [2/2]. pt SetFillColor ; (; kWhite ; ). ◆ SetFillStyle(). arrow SetFillStyle ; (; 1001 ; ). ◆ SetFrameFillColor(). c SetFrameFillColor ; (; 0 ; ). ◆ SetTextAlign(). pt SetTextAlign ; (; 12 ; ). ◆ SetTextAngle(). text SetTextAngle ; (; - ; 15). ◆ SetTextColor(). pt SetTextColor ; (; 4 ; ). ◆ SetTextSize(). pt SetTextSize ; (; 0. ; 048583). Variable Documentation. ◆ arrow. arrow = new TArrow(0.225552,0.572271,0.35489,0.283186,0.03,""|>""). Definition at line 227 of file entrylistblock_figure1.C. ◆ line. line = new TLine(0.35,0.5,0.95,0.5). Definition at line 235 of file entrylistblock_figure1.C. ◆ pt. pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br""). Definition at line 7 of file entrylistblock_figure1.C. ◆ text. text = pt->AddText(""TEntryListBlock""). Definition at line 9 of file entrylistblock_figure1.C. treetreedocmacrosentrylistblock_figure1.C. ROOT v6-32 - Reference Guide Generated on Fr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/entrylistblock__figure1_8C.html:99,Guid,Guide,99,doc/v632/entrylistblock__figure1_8C.html,https://root.cern,https://root.cern/doc/v632/entrylistblock__figure1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/doc/macros/entrylistblock_figure1.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. entrylistblock_figure1.C. Go to the documentation of this file. 1{; 2 TCanvas *c = new TCanvas(""c"", ""c"",49,123,752,435);; 3 c->Range(0,0,1,1);; 4 c->SetBorderSize(2);; 5 c->SetFrameFillColor(0);; 6 ; 7 TPaveText *pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");; 8 pt->SetFillColor(kWhite);; 9 TText *text = pt->AddText(""TEntryListBlock"");; 10 pt->Draw();; 11 ; 12 pt = new TPaveText(0.00313972,0.827988,0.675039,0.994169,""br"");; 13 pt->SetFillColor(kWhite);; 14 pt->SetTextColor(4);; 15 text = pt->AddText(""Indices representation in a TEntryListBlock"");; 16 pt->Draw();; 17 ; 18 pt = new TPaveText(0.00410678,0.412955,0.221766,0.651822,""br"");; 19 pt->SetFillColor(kWhite);; 20 pt->SetTextAlign(12);; 21 pt->SetTextSize(0.048583);; 22 text = pt->AddText(""UShort_t* fIndices"");; 23 text = pt->AddText(""Int_t fType"");; 24 pt->Draw();; 25 ; 26 pt = new TPaveText(0.324961,0.708455,0.959184,0.804665,""br"");; 27 pt->SetFillColor(kWhite);; 28 text = pt->AddText(""Suppose,that this block stores entries"");; 29 text = pt->AddText(""0, 2, 4, 10, 11, 12"");; 30 pt->Draw();; 31 ; 32 pt = new TPaveText(0.232227,0.541176,0.333333,0.641176,""br"");; 33 pt->SetBorderSize(0);; 34 pt->SetFillColor(kWhite);; 35 text = pt->AddText(""fType=0"");; 36 text->SetTextAngle(-15);; 37 pt->Draw();; 38 ; 39 pt = new TPaveText(0.355114,0.189066,0.457386,0.255125,""br"");; 40 pt->SetBorderSize(0);; 41 pt->SetFillColor(kWhite);; 42 text = pt->AddText(""fIndices[0]"");; 43 pt->Draw();; 44 ; 45 pt = new TPaveText(0.521193,0.38484,0.77708,0.48105,""br"");; 46 pt->SetBorderSize(0);; 47 pt->SetFillColor(kWhite);; 48 text = pt->AddText(""fIndices[0]"");; 49 pt->Draw();; 50 ; 51 pt = new TPaveText(0.355619,0.239726,0.458037,0.305936,""br"");; 52 pt->SetBorderSize(0);; 53 pt->SetFillColor(kWhite);; 54 pt->SetTextSize(0.0342466);; 55 text = pt->AddText(""0"");; 56 pt->Draw();; 57 ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/entrylistblock__figure1_8C_source.html:97,Guid,Guide,97,doc/master/entrylistblock__figure1_8C_source.html,https://root.cern,https://root.cern/doc/master/entrylistblock__figure1_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/ROOT/TIOFeatures.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TIOFeatures.hxx. Go to the documentation of this file. 1// Author: Brian Bockelman UNL 09/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_TIO_FEATURES; 12#define ROOT_TIO_FEATURES; 13 ; 14#include ""Rtypes.h""; 15 ; 16class TBasket;; 17class TBranch;; 18class TTree;; 19 ; 20// keep it here to have a note that was removed; 21// #ifndef R__LESS_INCLUDES; 22// #include ""TBasket.h""; 23// #include <memory>; 24// #include <sstream>; 25// #include <initializer_list>; 26// #include <typeinfo>; 27// #include <type_traits> // is_same, enable_if; 28// #endif; 29 ; 30namespace ROOT {; 31 ; 32 ; 33// These are the known, supported, and enabled-by-default features for ROOT IO.; 34//; 35// Note that the `kSupported` members for EIOFeatures, Experimental::EIOFeatures, and; 36// Experiment::EIOUnsupportedFeatures should have no intersection and a union of equal; 37// to BITS(kIOFeatureCount).; 38//; 39enum class EIOFeatures {; 40 kSupported = 0 // Union of all known, supported, and enabled-by-default features (currently none).; 41};; 42 ; 43 ; 44namespace Experimental {; 45 ; 46// These are the known and supported ""experimental"" features, not enabled by default.; 47// When these are enabled by default, they will move to `ROOT::EIOFeatures`.; 48//; 49// Note that these all show up in TBasket::EIOBits, but it is desired to have the enum be at; 50// the ""ROOT-IO-wide"" level and not restricted to TBasket -- even if all the currently-foreseen; 51// usage of this mechanism somehow involves baskets currently.; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TIOFeatures_8hxx_source.html:86,Guid,Guide,86,doc/master/TIOFeatures_8hxx_source.html,https://root.cern,https://root.cern/doc/master/TIOFeatures_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/ROOT/TIOFeatures.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TIOFeatures.hxx. Go to the documentation of this file. 1// Author: Brian Bockelman UNL 09/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_TIO_FEATURES; 12#define ROOT_TIO_FEATURES; 13 ; 14#include ""Rtypes.h""; 15 ; 16class TBasket;; 17class TBranch;; 18class TTree;; 19 ; 20// keep it here to have a note that was removed; 21// #ifndef R__LESS_INCLUDES; 22// #include ""TBasket.h""; 23// #include <memory>; 24// #include <sstream>; 25// #include <initializer_list>; 26// #include <typeinfo>; 27// #include <type_traits> // is_same, enable_if; 28// #endif; 29 ; 30namespace ROOT {; 31 ; 32 ; 33// These are the known, supported, and enabled-by-default features for ROOT IO.; 34//; 35// Note that the `kSupported` members for EIOFeatures, Experimental::EIOFeatures, and; 36// Experiment::EIOUnsupportedFeatures should have no intersection and a union of equal; 37// to BITS(kIOFeatureCount).; 38//; 39enum class EIOFeatures {; 40 kSupported = 0 // Union of all known, supported, and enabled-by-default features (currently none).; 41};; 42 ; 43 ; 44namespace Experimental {; 45 ; 46// These are the known and supported ""experimental"" features, not enabled by default.; 47// When these are enabled by default, they will move to `ROOT::EIOFeatures`.; 48//; 49// Note that these all show up in TBasket::EIOBits, but it is desired to have the enum be at; 50// the ""ROOT-IO-wide"" level and not restricted to TBasket -- even if all the currently-foreseen; 51// usage of this mechanism somehow involves baskets currently.; 52",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TIOFeatures_8hxx_source.html:85,Guid,Guide,85,doc/v632/TIOFeatures_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/TIOFeatures_8hxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TBranch.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranch.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBranch; 13#define ROOT_TBranch; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBranch //; 19// //; 20// A TTree object is a list of TBranchs. //; 21// A TBranch describes the branch data structure and supports : //; 22// the list of TBaskets (branch buffers) associated to this branch. //; 23// the list of TLeaves (branch description) //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TNamed.h""; 27#include ""TAttFill.h""; 28#include ""TObjArray.h""; 29#include ""TBranchCacheInfo.h""; 30#include ""TDataType.h""; 31#include ""Compression.h""; 32#include ""ROOT/TIOFeatures.hxx""; 33 ; 34class TTree;; 35class TBasket;; 36class TBranchElement;; 37class TLeaf;; 38class TBrowser;; 39class TDirectory;; 40class TFile;; 41class TClonesArray;; 42class TTreeCloner;; 43class TTreeCache;; 44 ; 45namespace ROOT {; 46namespace Experimental {; 47namespace Internal {; 48class TBulkBranchRead;; 49}; 50}; 51namespace Internal {; 52class TBranchIMTHelper; ///< A helper class for managing IMT work during TTree:Fill operations.; 53}; 54}; 55 ; 56const Int_t kDoNotProcess = BIT(10); // Active bit for branches; 57const Int_t kIsClone = BIT(11); // to indicate a TBranchClones; 58const Int_t kBranchObject = BIT(12); // branch is a TObject*; 59const Int_t kBranchAny = BIT(17); // branch is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8h_source.html:75,Guid,Guide,75,doc/master/TBranch_8h_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TBranchElement.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranchElement.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 14/01/2001; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBranchElement; 13#define ROOT_TBranchElement; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBranchElement //; 19// //; 20// A Branch for the case of an object. //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23 ; 24#include ""TBranch.h""; 25 ; 26#include ""TClassRef.h""; 27 ; 28#include ""TTree.h""; 29 ; 30class TFolder;; 31class TStreamerInfo;; 32class TVirtualCollectionProxy;; 33class TVirtualCollectionIterators;; 34class TVirtualCollectionPtrIterators;; 35class TVirtualArray;; 36 ; 37#include ""TStreamerInfoActions.h""; 38 ; 39class TBranchElement : public TBranch {; 40 ; 41// Friends; 42 friend class TTreeCloner;; 43 friend class TLeafElement;; 44 ; 45/// Types; 46protected:; 47 enum EStatusBits {; 48 kBranchFolder = BIT(14),; 49 kDeleteObject = BIT(16), ///< We are the owner of fObject.; 50 kCache = BIT(18), ///< Need to pushd/pop fOnfileObject.; 51 kOwnOnfileObj = BIT(19), ///< We are the owner of fOnfileObject.; 52 kAddressSet = BIT(20), ///< The addressing set have been called for this branch; 53 kMakeClass = BIT(21), ///< This branch has been switched to using the MakeClass Mode; 54 kDecomposedObj = BIT(21) ///< More explicit alias for kMakeClass.; 55 };; 56 ; 57 ; 58// Data Members; 59protected:; 60 TString fClassName; ///< Class name of r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8h_source.html:82,Guid,Guide,82,doc/master/TBranchElement_8h_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TChain.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TChain.h File Reference. #include ""TTree.h"". Include dependency graph for TChain.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TChain;  A chain is a collection of files containing TTree objects. More...;  . treetreeincTChain.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8h.html:77,Guid,Guide,77,doc/master/TChain_8h.html,https://root.cern,https://root.cern/doc/master/TChain_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TChain.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TChain.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 03/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TChain; 13#define ROOT_TChain; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TChain //; 19// //; 20// A chain of TTrees. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TTree.h""; 25 ; 26class TFile;; 27class TBrowser;; 28class TCut;; 29class TEntryList;; 30class TEventList;; 31class TCollection;; 32 ; 33class TChain : public TTree {; 34 ; 35protected:; 36 Int_t fTreeOffsetLen; ///< Current size of fTreeOffset array; 37 Int_t fNtrees; ///< Number of trees; 38 Int_t fTreeNumber; ///<! Current Tree number in fTreeOffset table; 39 Long64_t *fTreeOffset; ///<[fTreeOffsetLen] Array of variables; 40 bool fCanDeleteRefs; ///<! If true, TProcessIDs are deleted when closing a file; 41 TTree *fTree; ///<! Pointer to current tree (Note: We do *not* own this tree.); 42 TFile *fFile; ///<! Pointer to current file (We own the file).; 43 TObjArray *fFiles; ///< -> List of file names containing the trees (TChainElement, owned); 44 TList *fStatus; ///< -> List of active/inactive branches (TChainElement, owned); 45 TChain *fProofChain; ///<! chain proxy when going to be processed by PROOF; 46 bool fGlobalRegistration; ///<! if true, bypass use of global lists; 47 ; 48private:; 49 TChain(const TChain&); // not implemented; 50 TChain& operator=(const TChain&); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8h_source.html:74,Guid,Guide,74,doc/master/TChain_8h_source.html,https://root.cern,https://root.cern/doc/master/TChain_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TChainElement.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TChainElement.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 11/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TChainElement; 12#define ROOT_TChainElement; 13 ; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TChainElement //; 18// //; 19// Describes a component of a TChain. //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23 ; 24#include ""TNamed.h""; 25 ; 26class TBranch;; 27 ; 28class TChainElement : public TNamed {; 29 ; 30 /// TChainElement status bits; 31 enum EStatusBits {; 32 kHasBeenLookedUp = BIT(15); 33 };; 34 ; 35protected:; 36 Long64_t fEntries; ///< Number of entries in the tree of this chain element; 37 Int_t fNPackets; ///< Number of packets; 38 Int_t fPacketSize; ///< Number of events in one packet for parallel root; 39 Int_t fStatus; ///< branch status when used as a branch; 40 void *fBaddress; ///<! branch address when used as a branch; 41 TString fBaddressClassName; ///<! Name of the class pointed to by fBaddress; 42 UInt_t fBaddressType; ///<! Type of the value pointed to by fBaddress; 43 bool fBaddressIsPtr : 1; ///<! True if the address is a pointer to an address; 44 bool fDecomposedObj : 1; ///<! True if the address needs the branch in MakeClass/DecomposedObj mode.; 45 bool fCheckedType : 1; ///<! True if the branch type and the address type have been checked.; 46 char *fPackets; ///<! Packet descriptor string; 47 TBranch **fBranchPtr; //",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChainElement_8h_source.html:81,Guid,Guide,81,doc/master/TChainElement_8h_source.html,https://root.cern,https://root.cern/doc/master/TChainElement_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TCut.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCut.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 14/04/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TCut; 13#define ROOT_TCut; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TCut //; 18// //; 19// A specialized string object used in TTree selections. //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TNamed.h""; 24 ; 25class TCut : public TNamed {; 26private:; 27 // Prevent meaningless operator (which otherwise can be reached via; 28 // the conversion to 'const char*'; 29 bool operator<(const TCut &rhs); // Intentional left unimplemented; 30 bool operator<=(const TCut &rhs); // Intentional left unimplemented; 31 bool operator>(const TCut &rhs); // Intentional left unimplemented; 32 bool operator>=(const TCut &rhs); // Intentional left unimplemented; 33public:; 34 TCut();; 35 TCut(const char *title);; 36 TCut(const char *name, const char *title);; 37 TCut(const TCut &cut);; 38 ~TCut() override;; 39 ; 40 // Assignment; 41 TCut& operator=(const char *rhs);; 42 TCut& operator=(const TCut &rhs);; 43 TCut& operator+=(const char *rhs);; 44 TCut& operator+=(const TCut &rhs);; 45 TCut& operator*=(const char *rhs);; 46 TCut& operator*=(const TCut &rhs);; 47 ; 48 // Comparison; 49 bool operator==(const char *rhs) const;; 50 bool operator==(const TCut &rhs) const;; 51 bool operator!=(const char *rhs) const;; 52 bool operator!=(const TCut &rhs) const;; 53 ; 54 frie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCut_8h_source.html:72,Guid,Guide,72,doc/master/TCut_8h_source.html,https://root.cern,https://root.cern/doc/master/TCut_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TEntryList.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEntryList.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Anna Kreshuk 27/10/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TEntryList; 13#define ROOT_TEntryList; 14 ; 15#include ""TNamed.h""; 16 ; 17class TTree;; 18class TDirectory;; 19class TObjArray;; 20class TString;; 21 ; 22class TList;; 23class TCollection;; 24 ; 25class TEntryList: public TNamed; 26{; 27 private:; 28 TEntryList& operator=(const TEntryList&); // Not implemented; 29 ; 30 protected:; 31 TList *fLists; ///< a list of underlying entry lists for each tree of a chain; 32 TEntryList *fCurrent; ///<! currently filled entry list; 33 ; 34 Int_t fNBlocks; ///< number of TEntryListBlocks; 35 TObjArray *fBlocks; ///< blocks with indices of passing events (TEntryListBlocks); 36 Long64_t fN; ///< number of entries in the list; 37 Long64_t fEntriesToProcess; ///< used on proof to set the number of entries to process in a packet; 38 TString fTreeName; ///< name of the tree; 39 TString fFileName; ///< name of the file, where the tree is; 40 ULong_t fStringHash; ///<! Hash value of a string of treename and filename; 41 Int_t fTreeNumber; ///<! the index of the tree in the chain (used when the entry; 42 ///< list is used as input (TTree::SetEntryList()); 43 ; 44 Long64_t fLastIndexQueried; ///<! used to optimize GetEntry() function from a loop; 45 Long64_t fLastIndexReturned; ///<! used to optimize GetEntry() function from a loop; 46 bool fShift; ///<! true when some sub-lists don't correspond to trees; 47 ///< ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEntryList_8h_source.html:78,Guid,Guide,78,doc/master/TEntryList_8h_source.html,https://root.cern,https://root.cern/doc/master/TEntryList_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TEventList.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEventList.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 11/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TEventList; 13#define ROOT_TEventList; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TEventList //; 19// //; 20// A list of selected entries in a TTree. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TNamed.h""; 26 ; 27class TDirectory;; 28class TCollection;; 29 ; 30 ; 31class TEventList : public TNamed {; 32 ; 33protected:; 34 Int_t fN; ///< Number of elements in the list; 35 Int_t fSize; ///< Size of array; 36 Int_t fDelta; ///< Increment size; 37 bool fReapply; ///< If true, TTree::Draw will 'reapply' the original cut; 38 Long64_t *fList; ///<[fN]Array of elements; 39 TDirectory *fDirectory; ///<! Pointer to directory holding this tree; 40 ; 41public:; 42 TEventList();; 43 TEventList(const char *name, const char *title="""",Int_t initsize=0, Int_t delta = 0);; 44 TEventList(const TEventList &list);; 45 ~TEventList() override;; 46 virtual void Add(const TEventList *list);; 47 void Clear(Option_t *option="""") override {Reset(option);}; 48 virtual bool Contains(Long64_t entry);; 49 virtual bool ContainsRange(Long64_t entrymin, Long64_t entrymax);; 50 virtual void DirectoryAutoAdd(TDirectory *);; 51 virtual void Enter(Long64_t entry);; 52 TDirectory *GetDirectory() const {return fDirectory;}; 53 virtual Long64_t GetEntry(Int_t inde",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEventList_8h_source.html:78,Guid,Guide,78,doc/master/TEventList_8h_source.html,https://root.cern,https://root.cern/doc/master/TEventList_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TLeaf.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLeaf.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TLeaf; 13#define ROOT_TLeaf; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TLeaf //; 19// //; 20// A TTree object is a list of TBranch. //; 21// A TBranch object is a list of TLeaf. In most cases, the TBranch //; 22// will have one TLeaf. //; 23// A TLeaf describes the branch data types and holds the data. //; 24// //; 25// A few notes about the data held by the leaf. It can contain: //; 26// 1 a single object or primitive (e.g., one float), //; 27// 2 a fixed-number of objects (e.g., each entry has two floats). //; 28// The number of elements per entry is saved in `fLen`. //; 29// 3 a dynamic number of primitives. The number of objects in each //; 30// entry is saved in the `fLeafCount` branch. //; 31// //; 32// Note options (2) and (3) can combined - if fLeafCount says an entry //; 33// has 3 elements and fLen is 2, then there will be 6 objects in that //; 34// entry. //; 35// //; 36// Additionally, `fNdata` is transient and generated on read to //; 37// determine the necessary size of a buffer to hold event data; //; 38// depending on the call-site, it may be sized larger than the number //; 39// of elements //; 40// //; 41//////////////////////////////////////////////////////////////////////////; 42 ; 43 ; 44#include ""TNamed.h""; 45 ; 46#include <vector>; 47 ; 48#ifdef R__LESS_INCLUDES; 49class TBr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLeaf_8h_source.html:73,Guid,Guide,73,doc/master/TLeaf_8h_source.html,https://root.cern,https://root.cern/doc/master/TLeaf_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TNtuple.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNtuple.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 06/04/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TNtuple; 13#define ROOT_TNtuple; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TNtuple //; 19// //; 20// A simple tree with branches of floats. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TTree.h""; 25 ; 26class TBrowser;; 27 ; 28class TNtuple : public TTree {; 29 ; 30protected:; 31 Int_t fNvar; ///< Number of columns; 32 Float_t *fArgs; ///<! [fNvar] Array of variables; 33 ; 34 Int_t Fill() override;; 35 ; 36private:; 37 TNtuple(const TNtuple&) = delete;; 38 TNtuple& operator=(const TNtuple&) = delete;; 39 ; 40public:; 41 TNtuple();; 42 TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);; 43 ~TNtuple() override;; 44 ; 45 void Browse(TBrowser *b) override;; 46 TTree *CloneTree(Long64_t nentries = -1, Option_t* option = """") override;; 47 virtual Int_t Fill(const Float_t *x);; 48 Int_t Fill(Int_t x0) { return Fill((Float_t)x0); }; 49 Int_t Fill(Double_t x0) { return Fill((Float_t)x0); }; 50 virtual Int_t Fill(Float_t x0, Float_t x1=0, Float_t x2=0, Float_t x3=0,; 51 Float_t x4=0, Float_t x5=0, Float_t x6=0, Float_t x7=0,; 52 Float_t x8=0, Float_t x9=0, Float_t x10=0,; 53 Float_t x11=0, Float_t x12=0, Float_t x13=0,; 54 Float_t x14=0);; 55 virtual Int_t GetNvar() const { return fNvar; }; 56 Float_t *GetA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8h_source.html:75,Guid,Guide,75,doc/master/TNtuple_8h_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8h_source.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tree/tree/inc/TSelector.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSelector.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 05/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TSelector; 13#define ROOT_TSelector; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TSelector //; 19// //; 20// A utility class for Trees selections. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TObject.h""; 26#include ""TString.h""; 27#include ""TSelectorList.h""; 28 ; 29class TTree;; 30 ; 31class TSelector : public TObject {; 32 ; 33public:; 34 enum EAbort { kContinue, kAbortProcess, kAbortFile };; 35 ; 36protected:; 37 Long64_t fStatus; ///< Selector status; 38 EAbort fAbort; ///< Abort status; 39 TString fOption; ///< Option given to TTree::Process; 40 TObject *fObject; ///<! Current object if processing object (vs. TTree); 41 TList *fInput; ///< List of objects available during processing; 42 TSelectorList *fOutput; ///<! List of objects created during processing; 43 ; 44private:; 45 TSelector(const TSelector&); // not implemented; 46 TSelector& operator=(const TSelector&); // not implemented; 47 ; 48public:; 49 TSelector();; 50 ~TSelector() override;; 51 ; 52 virtual int Version() const { return 0; }; 53 virtual void Init(TTree *) { }; 54 virtual void Begin(TTree *) { }; 55 virtual void SlaveBegin(TTree *) { }; 56 bool Notify() override { return true; }; 57 const char *GetOption() const override { return fOption.Data(); }; 58 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSelector_8h_source.html:77,Guid,Guide,77,doc/master/TSelector_8h_source.html,https://root.cern,https://root.cern/doc/master/TSelector_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TTree.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TTree.h File Reference. #include ""Compression.h""; #include ""ROOT/TIOFeatures.hxx""; #include ""TArrayD.h""; #include ""TArrayI.h""; #include ""TAttFill.h""; #include ""TAttLine.h""; #include ""TAttMarker.h""; #include ""TClass.h""; #include ""TDataType.h""; #include ""TDirectory.h""; #include ""TObjArray.h""; #include ""TVirtualTreePlayer.h""; #include ""TBranch.h""; #include ""TList.h""; #include <array>; #include <atomic>; #include <vector>; #include <utility>. Include dependency graph for TTree.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TTree::TClusterIterator;  Helper class to iterate over cluster of baskets. More...;  ; class  TTree::TFriendLock;  Helper class to prevent infinite recursion in the usage of TTree Friends. More...;  ; class  TTree;  A TTree represents a columnar dataset. More...;  ; class  TTreeFriendLeafIter;  Iterator on all the leaves in a TTree and its friend. More...;  . treetreeincTTree.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8h.html:76,Guid,Guide,76,doc/master/TTree_8h.html,https://root.cern,https://root.cern/doc/master/TTree_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TTree.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTree.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TTree; 13#define ROOT_TTree; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TTree //; 18// //; 19// A TTree object is a list of TBranch. //; 20// To Create a TTree object one must: //; 21// - Create the TTree header via the TTree constructor //; 22// - Call the TBranch constructor for every branch. //; 23// //; 24// To Fill this object, use member function Fill with no parameters. //; 25// The Fill function loops on all defined TBranch. //; 26// //; 27//////////////////////////////////////////////////////////////////////////; 28 ; 29#include ""Compression.h""; 30#include ""ROOT/TIOFeatures.hxx""; 31#include ""TArrayD.h""; 32#include ""TArrayI.h""; 33#include ""TAttFill.h""; 34#include ""TAttLine.h""; 35#include ""TAttMarker.h""; 36#include ""TClass.h""; 37#include ""TDataType.h""; 38#include ""TDirectory.h""; 39#include ""TObjArray.h""; 40#include ""TVirtualTreePlayer.h""; 41 ; 42#ifdef R__LESS_INCLUDES; 43class TBranch;; 44class TList;; 45#else; 46#include ""TBranch.h""; 47// #include ""TBuffer.h""; 48#include ""TList.h""; 49#endif; 50 ; 51#include <array>; 52#include <atomic>; 53#include <vector>; 54#include <utility>; 55 ; 56class TBuffer;; 57class TBrowser;; 58class TFile;; 59class TLeaf;; 60class TH1;; 61class TTreeFormula;; 62class TPolyMarker;; 63class TEventList;; 64class TEntryList;; 65class TSQLResult;; 66class TSelector;; 67c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8h_source.html:73,Guid,Guide,73,doc/master/TTree_8h_source.html,https://root.cern,https://root.cern/doc/master/TTree_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/inc/TVirtualIndex.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualIndex.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 05/07/2004; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualIndex; 13#define ROOT_TVirtualIndex; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TVirtualIndex //; 19// //; 20// Abstract interface for Tree Index //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TNamed.h""; 26 ; 27class TTree;; 28class TTreeFormula;; 29 ; 30class TVirtualIndex : public TNamed {; 31 ; 32protected:; 33 TTree *fTree; //! pointer to Tree; 34 ; 35public:; 36 TVirtualIndex();; 37 ~TVirtualIndex() override;; 38 virtual void Append(const TVirtualIndex *,bool delaySort = false) = 0;; 39 virtual Long64_t GetEntryNumberFriend(const TTree * /*parent*/) = 0;; 40 virtual Long64_t GetEntryNumberWithIndex(Long64_t major, Long64_t minor) const = 0;; 41 virtual Long64_t GetEntryNumberWithBestIndex(Long64_t major, Long64_t minor) const = 0;; 42 virtual const char *GetMajorName() const = 0;; 43 virtual const char *GetMinorName() const = 0;; 44 virtual bool IsValidFor(const TTree *parent) = 0;; 45 virtual Long64_t GetN() const = 0;; 46 virtual TTree *GetTree() const {return fTree;}; 47 virtual void UpdateFormulaLeaves(const TTree *parent) = 0;; 48 virtual void SetTree(TTree *T) = 0;; 49 ; 50 ClassDefOverride(TVirtualIndex,1); //Abstract interface for Tree Index; 51};; 52 ; 53#endif; 54 ; Long64_tlong long Long64_tD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualIndex_8h_source.html:81,Guid,Guide,81,doc/master/TVirtualIndex_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualIndex_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TBranch.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranch.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TBranchCacheInfo.h""; 13 ; 14#include ""TBranch.h""; 15 ; 16#include ""Bytes.h""; 17#include ""Compression.h""; 18#include ""TBasket.h""; 19#include ""TBranchBrowsable.h""; 20#include ""TBrowser.h""; 21#include ""TBuffer.h""; 22#include ""TClass.h""; 23#include ""TBufferFile.h""; 24#include ""TClonesArray.h""; 25#include ""TFile.h""; 26#include ""TLeaf.h""; 27#include ""TLeafB.h""; 28#include ""TLeafC.h""; 29#include ""TLeafD.h""; 30#include ""TLeafD32.h""; 31#include ""TLeafF.h""; 32#include ""TLeafF16.h""; 33#include ""TLeafI.h""; 34#include ""TLeafL.h""; 35#include ""TLeafG.h""; 36#include ""TLeafO.h""; 37#include ""TLeafObject.h""; 38#include ""TLeafS.h""; 39#include ""TMessage.h""; 40#include ""TROOT.h""; 41#include ""TSystem.h""; 42#include ""TMath.h""; 43#include ""TTree.h""; 44#include ""TTreeCache.h""; 45#include ""TTreeCacheUnzip.h""; 46#include ""TVirtualMutex.h""; 47#include ""TVirtualPad.h""; 48#include ""TVirtualPerfStats.h""; 49#include ""strlcpy.h""; 50#include ""snprintf.h""; 51 ; 52#include ""TBranchIMTHelper.h""; 53 ; 54#include ""ROOT/TIOFeatures.hxx""; 55 ; 56#include <atomic>; 57#include <cstddef>; 58#include <cstring>; 59#include <cstdio>; 60 ; 61 ; 62Int_t TBranch::fgCount = 0;; 63 ; 64/** \class TBranch; 65\ingroup tree; 66 ; 67A TTree is a list of TBranches; 68 ; 69A TBranch supports:; 70 - The list of TLeaf describing this branch.; 71 - The list of TBasket (branch buffers).; 72 ; 73See TBranch struct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:77,Guid,Guide,77,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TBranchElement.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranchElement.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Authors Rene Brun , Philippe Canal, Markus Frank 14/01/2001; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TBranchElement; 13\ingroup tree; 14 ; 15A Branch for the case of an object.; 16*/; 17 ; 18#include ""TBranchElement.h""; 19 ; 20#include ""TBasket.h""; 21#include ""TBranchObject.h""; 22#include ""TBranchRef.h""; 23#include ""TBrowser.h""; 24#include ""TClass.h""; 25#include ""TClassEdit.h""; 26#include ""TClonesArray.h""; 27#include ""TDataMember.h""; 28#include ""TDataType.h""; 29#include ""TError.h""; 30#include ""TMath.h""; 31#include ""TFile.h""; 32#include ""TFolder.h""; 33#include ""TLeafElement.h""; 34#include ""TRealData.h""; 35#include ""TStreamerElement.h""; 36#include ""TStreamerInfo.h""; 37#include ""TTree.h""; 38#include ""TVirtualCollectionProxy.h""; 39#include ""TVirtualCollectionIterators.h""; 40#include ""TVirtualMutex.h""; 41#include ""TVirtualPad.h""; 42#include ""TBranchSTL.h""; 43#include ""TVirtualArray.h""; 44#include ""TBufferFile.h""; 45#include ""TInterpreter.h""; 46#include ""TROOT.h""; 47 ; 48#include ""TStreamerInfoActions.h""; 49#include ""TSchemaRuleSet.h""; 50 ; 51ClassImp(TBranchElement);; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54 ; 55namespace {; 56 void RemovePrefix(TString& str, const TString &prefix) {; 57 // -- Remove a prefix from a string.; 58 // -- Require a '.' after the prefix.; 59 if (prefix.Length() && prefix.Length() <= str.Length(); 60 && (str.Data()[prefix.Length()]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:84,Guid,Guide,84,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TChain.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TChain.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 03/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TChain; 13\ingroup tree; 14 ; 15A chain is a collection of files containing TTree objects.; 16When the chain is created, the first parameter is the default name; 17for the Tree to be processed later on.; 18 ; 19Enter a new element in the chain via the TChain::Add function.; 20Once a chain is defined, one can use the normal TTree functions; 21to Draw,Scan,etc.; 22 ; 23Use TChain::SetBranchStatus to activate one or more branches for all; 24the trees in the chain.; 25*/; 26 ; 27#include ""TChain.h""; 28#include ""ROOT/InternalTreeUtils.hxx""; 29 ; 30#include <iostream>; 31#include <cfloat>; 32#include <string>; 33 ; 34#include ""TBranch.h""; 35#include ""TBrowser.h""; 36#include ""TBuffer.h""; 37#include ""TChainElement.h""; 38#include ""TClass.h""; 39#include ""TColor.h""; 40#include ""TCut.h""; 41#include ""TError.h""; 42#include ""TFile.h""; 43#include ""TFileInfo.h""; 44#include ""TFriendElement.h""; 45#include ""TLeaf.h""; 46#include ""TList.h""; 47#include ""TObjString.h""; 48#include ""TPluginManager.h""; 49#include ""TROOT.h""; 50#include ""TRegexp.h""; 51#include ""TSelector.h""; 52#include ""TSystem.h""; 53#include ""TTree.h""; 54#include ""TTreeCache.h""; 55#include ""TUrl.h""; 56#include ""TVirtualIndex.h""; 57#include ""TEventList.h""; 58#include ""TEntryList.h""; 59#include ""TEntryListFromFile.h""; 60#include ""TFileStager.h""; 61#include ""TFilePrefetch.h""; 62#include ""TVirtualMutex.h""; 63#include",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:76,Guid,Guide,76,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TEntryList.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEntryList.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Anna Kreshuk 27/10/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TEntryList; 13\ingroup tree; 14 ; 15A List of entry numbers in a TTree or TChain. ; 16 ; 17Note: It is recommended to use approaches such as TTreeReader::SetEntryRange or ; 18ROOT::RDataFrame instead of TEntryList if possible.; 19 ; 20## Operations on entry lists; 21 ; 22- __Add__() - if the lists are for the same tree, adds all the entries of the second list; 23 to the first list. If the lists are for different trees, creates a TEntryList; 24 with 2 sublists for each TTree. If the lists are for TChains, merges the ones; 25 for the same trees and adds new sublists for the TTrees that were not included; 26 in the first TEntryList; 27- __Subtract__() - if the lists are for the same TTree, removes the entries of the second; 28 list from the first list. If the lists are for TChains, loops over all; 29 sub-lists; 30- __GetEntry(n)__ - returns the n-th entry number; 31- __Next__() - returns next entry number. Note, that this function is; 32 much faster than GetEntry, and it's called when GetEntry() is called; 33 for 2 or more indices in a row.; 34 ; 35## TTree::Draw() and TChain::Draw(); 36 ; 37Use option __entrylist__ to write the results of TTree::Draw and TChain::Draw into; 38an entry list. Example:; 39~~~ {.cpp}; 40 tree->Draw("">>elist"", ""x<0 && y>0"", ""entrylist"");; 41 TEntryList *elist = (TEntryList*)gDirectory->Get(""elist"");; 42~~~; 43## E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEntryList_8cxx_source.html:80,Guid,Guide,80,doc/master/TEntryList_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEntryList_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TEventList.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEventList.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 11/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TEventList; 13\ingroup tree; 14 ; 15\legacy{TEventList}; 16 ; 17A TEventList object is a list of selected events (entries) in a TTree.; 18 ; 19A TEventList is automatically generated by TTree::Draw: example; 20~~~ {.cpp}; 21 tree->Draw("">>elist1"",""x<0 && y> 0"");; 22~~~; 23In this example, a TEventList object named ""elist1"" will be; 24generated. (Previous contents are overwritten).; 25~~~ {.cpp}; 26 tree->Draw("">>+elist1"",""x<0 && y> 0"");; 27~~~; 28In this example, selected entries are added to the list.; 29 ; 30The TEventList object is added to the list of objects in the current; 31directory.; 32 ; 33Use TTree:SetEventList(TEventList *list) to inform TTree that you; 34want to use the list as input. The following code gets a pointer to; 35the TEventList object created in the above commands:; 36~~~ {.cpp}; 37 TEventList *list = (TEventList*)gDirectory->Get(""elist1"");; 38~~~; 39- Use function Enter to enter an element in the list; 40- The function Add may be used to merge two lists.; 41- The function Subtract may be used to subtract two lists.; 42- The function Reset may be used to reset a list.; 43- Use TEventList::Print(option) to print the contents.; 44 (option ""all"" prints all the list entries).; 45- Operators + and - correspond to functions Add and Subtract.; 46- A TEventList object can be saved on a file via the Write function.; 47*/; 48 ; 49",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEventList_8cxx_source.html:80,Guid,Guide,80,doc/master/TEventList_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEventList_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TLeaf.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLeaf.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TLeaf; 13\ingroup tree; 14 ; 15A TLeaf describes individual elements of a TBranch; 16See TBranch structure in TTree.; 17 ; 18A TTree object is a list of TBranch.; 19A TBranch object is a list of TLeaf. In most cases, the TBranch; 20will have one TLeaf.; 21A TLeaf describes the branch data types and holds the data.; 22 ; 23A few notes about the data held by the leaf. It can contain:; 24 1. a single object or primitive (e.g., one float),; 25 2. a fixed-number of objects (e.g., each entry has two floats).; 26 The number of elements per entry is saved in `fLen`.; 27 3. a dynamic number of primitives. The number of objects in each; 28 entry is saved in the `fLeafCount` branch.; 29 ; 30Note options (2) and (3) can combined - if fLeafCount says an entry; 31has 3 elements and fLen is 2, then there will be 6 objects in that; 32entry.; 33 ; 34Additionally, `fNdata` is transient and generated on read to; 35determine the necessary size of a buffer to hold event data;; 36depending on the call-site, it may be sized larger than the number; 37of elements; 38 ; 39*/; 40 ; 41#include ""TLeaf.h""; 42#include ""TBranch.h""; 43#include ""TBuffer.h""; 44#include ""TTree.h""; 45#include ""TVirtualPad.h""; 46#include ""TBrowser.h""; 47#include ""strlcpy.h""; 48 ; 49#include <cctype>; 50 ; 51ClassImp(TLeaf);; 52 ; 53/////////////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLeaf_8cxx_source.html:75,Guid,Guide,75,doc/master/TLeaf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLeaf_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TNtuple.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNtuple.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 06/04/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TNtuple.h""; 13#include ""TBuffer.h""; 14#include ""TTree.h""; 15#include ""TBranch.h""; 16#include ""TLeaf.h""; 17#include ""TBrowser.h""; 18#include ""TreeUtils.h""; 19#include ""strlcpy.h""; 20 ; 21#include <string>; 22 ; 23ClassImp(TNtuple);; 24 ; 25/** \class TNtuple; 26\ingroup tree; 27 ; 28A simple TTree restricted to a list of float variables only.; 29 ; 30Each variable goes to a separate branch.; 31 ; 32A Ntuple is created via; 33~~~ {.cpp}; 34 TNtuple(name,title,varlist,bufsize); 35~~~; 36It is filled via:; 37~~~ {.cpp}; 38 TNtuple::Fill(*x) or; 39 TNtuple::Fill(v1,v2,v3.....); 40~~~; 41*/; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// Default constructor for Ntuple.; 45 ; 46TNtuple::TNtuple(): TTree(); 47{; 48 fNvar = 0;; 49 fArgs = nullptr;; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Create an Ntuple.; 54///; 55/// The parameter varlist describes the list of the ntuple variables; 56/// separated by a colon:; 57///; 58/// Example: `x:y:z:energy`; 59///; 60/// For each variable in the list a separate branch is created.; 61///; 62/// NOTE:; 63/// - Use TTree to create branches with variables of different data types.; 64/// - Use TTree when the number of branches is large (> 100).; 65 ; 66TNtuple::TNtuple(const char *name, const char *title, const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8cxx_source.html:77,Guid,Guide,77,doc/master/TNtuple_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8cxx_source.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tree/tree/src/TSelector.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSelector.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 05/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TSelector; 13\ingroup tree; 14 ; 15A TSelector object is used by the TTree::Draw, TTree::Scan,; 16TTree::Process to navigate in a TTree and make selections.; 17It contains the following main methods:; 18 ; 19- void TSelector::Init(TTree *t). Called every time a new TTree is; 20 attached.; 21 ; 22- void TSelector::SlaveBegin(). Create e.g. histograms in this method.; 23 This method is called (with or without PROOF) before looping on the; 24 entries in the Tree. When using PROOF, this method is called on; 25 each worker node.; 26 ; 27- void TSelector::Begin(). Mostly for backward compatibility; use; 28 SlaveBegin() instead. Both methods are called before looping on the; 29 entries in the Tree. When using PROOF, Begin() is called on the; 30 client only.; 31 ; 32- bool TSelector::Notify(). This method is called at the first entry; 33 of a new file in a chain.; 34 ; 35- bool TSelector::Process(Long64_t entry). This method is called; 36 to process an entry. It is the user's responsibility to read; 37 the corresponding entry in memory (may be just a partial read).; 38 Once the entry is in memory one can apply a selection and if the; 39 entry is selected histograms can be filled. Processing stops; 40 when this function returns false. This function combines the; 41 next two functions in one, avoiding to have to maintain state; 42 in the class to communica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSelector_8cxx_source.html:79,Guid,Guide,79,doc/master/TSelector_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSelector_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TTree.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions |; Variables ; TTree.cxx File Reference. #include <ROOT/RConfig.hxx>; #include ""TTree.h""; #include ""ROOT/TIOFeatures.hxx""; #include ""TArrayC.h""; #include ""TBufferFile.h""; #include ""TBaseClass.h""; #include ""TBasket.h""; #include ""TBranchClones.h""; #include ""TBranchElement.h""; #include ""TBranchObject.h""; #include ""TBranchRef.h""; #include ""TBrowser.h""; #include ""TClass.h""; #include ""TClassEdit.h""; #include ""TClonesArray.h""; #include ""TCut.h""; #include ""TDataMember.h""; #include ""TDataType.h""; #include ""TDirectory.h""; #include ""TError.h""; #include ""TEntryList.h""; #include ""TEnv.h""; #include ""TEventList.h""; #include ""TFile.h""; #include ""TFolder.h""; #include ""TFriendElement.h""; #include ""TInterpreter.h""; #include ""TLeaf.h""; #include ""TLeafB.h""; #include ""TLeafC.h""; #include ""TLeafD.h""; #include ""TLeafElement.h""; #include ""TLeafF.h""; #include ""TLeafI.h""; #include ""TLeafL.h""; #include ""TLeafObject.h""; #include ""TLeafS.h""; #include ""TList.h""; #include ""TMath.h""; #include ""TMemFile.h""; #include ""TROOT.h""; #include ""TRealData.h""; #include ""TRegexp.h""; #include ""TRefTable.h""; #include ""TStreamerElement.h""; #include ""TStreamerInfo.h""; #include ""TStyle.h""; #include ""TSystem.h""; #include ""TTreeCloner.h""; #include ""TTreeCache.h""; #include ""TTreeCacheUnzip.h""; #include ""TVirtualCollectionProxy.h""; #include ""TEmulatedCollectionProxy.h""; #include ""TVirtualIndex.h""; #include ""TVirtualPerfStats.h""; #include ""TVirtualPad.h""; #include ""TBranchSTL.h""; #include ""TSchemaRuleSet.h""; #include ""TFileMergeInfo.h""; #include ""ROOT/StringConv.hxx""; #include ""TVirtualMutex.h""; #include ""strlcpy.h""; #include ""snprintf.h""; #include ""TBranchIMTHelper.h""; #include ""TNotifyLink.h""; #include <chrono>; #include <cstddef>; #include <iostream>; #include <fstream>; #include <sstream>; #include <string>; #include <cstdio>; #include <climits>; #include <algorithm>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx.html:78,Guid,Guide,78,doc/master/TTree_8cxx.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/tree/src/TTree.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTree.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11/**; 12 \defgroup tree Tree Library; 13 ; 14 In order to store columnar datasets, ROOT provides the TTree, TChain,; 15 TNtuple and TNtupleD classes.; 16 The TTree class represents a columnar dataset. Any C++ type can be stored in the; 17 columns. The TTree has allowed to store about **1 EB** of data coming from the LHC alone:; 18 it is demonstrated to scale and it's battle tested. It has been optimized during the years; 19 to reduce dataset sizes on disk and to deliver excellent runtime performance.; 20 It allows to access only part of the columns of the datasets, too.; 21 The TNtuple and TNtupleD classes are specialisations of the TTree class which can; 22 only hold single precision and double precision floating-point numbers respectively;; 23 The TChain is a collection of TTrees, which can be located also in different files.; 24 ; 25*/; 26 ; 27/** \class TTree; 28\ingroup tree; 29 ; 30A TTree represents a columnar dataset. Any C++ type can be stored in its columns.; 31 ; 32A TTree, often called in jargon *tree*, consists of a list of independent columns or *branches*,; 33represented by the TBranch class.; 34Behind each branch, buffers are allocated automatically by ROOT.; 35Such buffers are automatically written to disk or kept in memory until the size stored in the; 36attribute fMaxVirtualSize is reached.; 37Variables of one branch are written to the same buffer. A b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:75,Guid,Guide,75,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/treeplayer/inc/TTreePerfStats.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreePerfStats.h. Go to the documentation of this file. 1// @(#)root/treeplayer:$Id$; 2// Author: Rene Brun 29/10/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TTreePerfStats; 13#define ROOT_TTreePerfStats; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TTreePerfStats //; 18// //; 19// TTree I/O performance measurement //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23 ; 24#include ""TVirtualPerfStats.h""; 25#include ""TString.h""; 26#include <vector>; 27#include <unordered_map>; 28 ; 29class TBrowser;; 30class TFile;; 31class TTree;; 32class TStopwatch;; 33class TPaveText;; 34class TGraphErrors;; 35class TGaxis;; 36class TText;; 37 ; 38class TTreePerfStats : public TVirtualPerfStats {; 39 ; 40public:; 41 struct BasketInfo {; 42 UInt_t fUsed = {0}; ///< Number of times the basket was requested from the disk.; 43 UInt_t fLoaded = {0}; ///< Number of times the basket was put in the primary TTreeCache; 44 UInt_t fLoadedMiss = {0}; ///< Number of times the basket was put in the secondary cache; 45 UInt_t fMissed = {0}; ///< Number of times the basket was read directly from the file.; 46 };; 47 ; 48 using BasketList_t = std::vector<std::pair<TBranch*, std::vector<size_t>>>;; 49 ; 50protected:; 51 Int_t fTreeCacheSize; ///< TTreeCache buffer size; 52 Int_t fNleaves; ///< Number of leaves in the tree; 53 Int_t fReadCalls; ///< Number of read calls; 54 Int_t fReadaheadSize; ///< Read-ahead cache siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreePerfStats_8h_source.html:88,Guid,Guide,88,doc/master/TTreePerfStats_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreePerfStats_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/treeplayer/inc/TTreeReader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeReader.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Axel Naumann, 2010-08-02; 3// Author: Vincenzo Eduardo Padulano CERN 09/2024; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_TTreeReader; 14#define ROOT_TTreeReader; 15 ; 16 ; 17////////////////////////////////////////////////////////////////////////////; 18// //; 19// TTreeReader //; 20// //; 21// A simple interface for reading trees or chains. //; 22// //; 23// //; 24////////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TTree.h""; 27#include ""TTreeReaderUtils.h""; 28#include ""TNotifyLink.h""; 29 ; 30#include <deque>; 31#include <iterator>; 32#include <unordered_map>; 33#include <string>; 34 ; 35class TDictionary;; 36class TDirectory;; 37class TFileCollection;; 38 ; 39namespace ROOT {; 40namespace Internal {; 41 class TBranchProxyDirector;; 42 class TFriendProxy;; 43}; 44}; 45 ; 46class TTreeReader: public TObject {; 47public:; 48 ; 49 ///\class TTreeReader::Iterator_t; 50 /// Iterate through the entries of a TTree.; 51 ///; 52 /// This iterator drives the associated TTreeReader; its; 53 /// dereferencing (and actually even the iteration) will; 54 /// set the entry number represented by this iterator.; 55 /// It does not really represent a data element; it simply; 56 /// returns the entry number (or -1 once the end of the tree; 57 /// is reached).; 58 class Iterator_t {; 59 private:; 60 Long64_t fEntry; ///< Entry number of the tree referenced by this iterator; -1 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeReader_8h_source.html:85,Guid,Guide,85,doc/master/TTreeReader_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreeReader_8h_source.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tree/treeplayer/inc/TTreeReaderValue.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeReaderValue.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Axel Naumann, 2010-08-02; 3// Author: Vincenzo Eduardo Padulano CERN 09/2024; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_TTreeReaderValue; 14#define ROOT_TTreeReaderValue; 15 ; 16////////////////////////////////////////////////////////////////////////////; 17// //; 18// TTreeReaderValue //; 19// //; 20// A simple interface for reading data from trees or chains. //; 21// //; 22// //; 23////////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TString.h""; 26#include ""TDictionary.h""; 27#include ""TBranchProxy.h""; 28 ; 29#include <type_traits>; 30#include <vector>; 31#include <string>; 32 ; 33class TBranch;; 34class TBranchElement;; 35class TLeaf;; 36class TTreeReader;; 37 ; 38namespace ROOT {; 39namespace Internal {; 40 ; 41/** \class TTreeReaderValueBase; 42Base class of TTreeReaderValue.; 43*/; 44 ; 45 class TTreeReaderValueBase {; 46 public:; 47 ; 48 /// Status flags, 0 is good; 49 enum ESetupStatus {; 50 kSetupNotSetup = -7, ///< No initialization has happened yet.; 51 kSetupTreeDestructed = -8, ///< The TTreeReader has been destructed / not set.; 52 kSetupMakeClassModeMismatch = -9, ///< readers disagree on whether TTree::SetMakeBranch() should be on; 53 kSetupMissingCounterBranch = -6, ///< The array cannot find its counter branch: Array[CounterBranch]; 54 kSetupMissingBranch = -5, ///< The specified branch cannot be found.; 55 kSetupInternalError = -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeReaderValue_8h_source.html:90,Guid,Guide,90,doc/master/TTreeReaderValue_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreeReaderValue_8h_source.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tree/treeplayer/src/TTreePerfStats.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreePerfStats.cxx. Go to the documentation of this file. 1// @(#)root/treeplayer:$Id$; 2// Author: Rene Brun 29/10/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TTreePerfStats; 13 ; 14TTree I/O performance measurement. see example of use below.; 15 ; 16The function FileReadEvent is called from TFile::ReadBuffer.; 17For each call the following information is stored in fGraphIO; 18 - x[i] = Tree entry number; 19 - y[i] = 1e-6*(file position); 20 - ey[i] = 1e-9*number of bytes read; 21For each call the following information is stored in fGraphTime; 22 - x[i] = Tree entry number; 23 - y[i] = Time now; 24 - ey[i] = readtime, eg timenow - start; 25The TTreePerfStats object can be saved in a ROOT file in such a way that; 26its inspection can be done outside the job that generated it.; 27 ; 28Example of use:; 29~~~{.cpp}; 30{; 31 TFile *f = TFile::Open(""RelValMinBias-GEN-SIM-RECO.root"");; 32 T = (TTree*)f->Get(""Events"");; 33 Long64_t nentries = T->GetEntries();; 34 T->SetCacheSize(10000000);; 35 T->SetCacheEntryRange(0,nentries);; 36 T->AddBranchToCache(""*"");; 37//; 38 TTreePerfStats *ps= new TTreePerfStats(""ioperf"",T);; 39//; 40 for (Int_t i=0;i<nentries;i++) {; 41 T->GetEntry(i);; 42 }; 43 ps->SaveAs(""cmsperf.root"");; 44}; 45~~~; 46then, in a root interactive session, one can do:; 47~~~{.cpp}; 48 root > TFile f(""cmsperf.root"");; 49 root > ioperf->Draw();; 50 root > ioperf->Print();; 51~~~; 52The Draw or Print functions print the following information:; 53 - TreeCache = TTree cache size in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreePerfStats_8cxx_source.html:90,Guid,Guide,90,doc/master/TTreePerfStats_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreePerfStats_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/treeplayer/src/TTreePlayer.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions |; Variables ; TTreePlayer.cxx File Reference. #include ""TTreePlayer.h""; #include <cstring>; #include <cstdio>; #include <cstdlib>; #include <iostream>; #include <fstream>; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TSystem.h""; #include ""TFile.h""; #include ""TEnv.h""; #include ""TEventList.h""; #include ""TEntryList.h""; #include ""TBranchObject.h""; #include ""TBranchElement.h""; #include ""TStreamerInfo.h""; #include ""TStreamerElement.h""; #include ""TLeafObject.h""; #include ""TLeafF.h""; #include ""TLeafD.h""; #include ""TLeafC.h""; #include ""TLeafB.h""; #include ""TLeafI.h""; #include ""TLeafS.h""; #include ""TMath.h""; #include ""TH1.h""; #include ""TPolyMarker.h""; #include ""TPolyMarker3D.h""; #include ""TText.h""; #include ""TDirectory.h""; #include ""TClonesArray.h""; #include ""TClass.h""; #include ""TVirtualPad.h""; #include ""TProfile.h""; #include ""TProfile2D.h""; #include ""TTreeFormula.h""; #include ""TTreeFormulaManager.h""; #include ""TStyle.h""; #include ""Foption.h""; #include ""TTreeResult.h""; #include ""TTreeRow.h""; #include ""TPrincipal.h""; #include ""TChain.h""; #include ""TChainElement.h""; #include ""TF1.h""; #include ""TVirtualFitter.h""; #include ""THLimitsFinder.h""; #include ""TSelectorDraw.h""; #include ""TSelectorEntries.h""; #include ""TPluginManager.h""; #include ""TObjString.h""; #include ""TTreeProxyGenerator.h""; #include ""TTreeReaderGenerator.h""; #include ""TTreeIndex.h""; #include ""TChainIndex.h""; #include ""TRefProxy.h""; #include ""TRefArrayProxy.h""; #include ""TVirtualMonitoring.h""; #include ""TTreeCache.h""; #include ""TVirtualMutex.h""; #include ""ThreadLocalStorage.h""; #include ""strlcpy.h""; #include ""snprintf.h""; #include ""HFitInterface.h""; #include ""Fit/BinData.h""; #include ""Fit/UnBinData.h""; #include ""Math/MinimizerOptions.h"". Include dependency graph for TTreePlayer.cxx:. This browser is not able to show SVG: try Firefox, Chrome, S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreePlayer_8cxx.html:90,Guid,Guide,90,doc/master/TTreePlayer_8cxx.html,https://root.cern,https://root.cern/doc/master/TTreePlayer_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/treeplayer/src/TTreeProxyGenerator.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions ; TTreeProxyGenerator.cxx File Reference. #include ""TTreeProxyGenerator.h""; #include ""TFriendProxyDescriptor.h""; #include ""TBranchProxyDescriptor.h""; #include ""TBranchProxyClassDescriptor.h""; #include ""TList.h""; #include ""Varargs.h""; #include <cstdio>; #include ""TClass.h""; #include ""TClassEdit.h""; #include ""TClonesArray.h""; #include ""TError.h""; #include ""TROOT.h""; #include ""TObjString.h""; #include ""TTreeFormula.h""; #include ""TFormLeafInfo.h""; #include ""TBranchElement.h""; #include ""TChain.h""; #include ""TFile.h""; #include ""TFriendElement.h""; #include ""TLeaf.h""; #include ""TLeafC.h""; #include ""TTree.h""; #include ""TVirtualStreamerInfo.h""; #include ""TStreamerElement.h""; #include ""TSystem.h""; #include ""TLeafObject.h""; #include ""TVirtualCollectionProxy.h"". Include dependency graph for TTreeProxyGenerator.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Functions; void Debug (Int_t level, const char *fmt,...);  ; TString ROOT::Internal::GetArrayType (TStreamerElement *element, const char *subtype, TTreeProxyGenerator::EContainer container);  ; static bool ROOT::Internal::R__AddPragmaForClass (TTreeProxyGenerator *gen, const char *classname);  Add the ""pragma C++ class"" if needed and return true if it has been added or if it is known to not be needed. ;  ; static bool ROOT::Internal::R__AddPragmaForClass (TTreeProxyGenerator *gen, TClass *cl);  Add the ""pragma C++ class"" if needed and return true if it has been added or if it is known to not be needed. ;  . Function Documentation. ◆ Debug(). void Debug ; (; Int_t ; level, . const char * ; fmt, .  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeProxyGenerator_8cxx.html:98,Guid,Guide,98,doc/master/TTreeProxyGenerator_8cxx.html,https://root.cern,https://root.cern/doc/master/TTreeProxyGenerator_8cxx.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/treeplayer/src/TTreeProxyGenerator.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeProxyGenerator.cxx. Go to the documentation of this file. 1// @(#)root/treeplayer:$Id$; 2// Author: Philippe Canal 06/06/2004; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/*; 13 TODO:; 14 Have separate names for the wrapper classes in the cases of: [done]; 15 clones/non clones; 16 split/non split; 17 split levels; 18 ; 19 Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]; 20 ; 21 Have a solution for the return by references of abstract classes [not done]; 22 ; 23 Have object inside ClonesArray properly treated! [done]; 24 Why is there 2 TRef proxy classes? [done]; 25 ; 26 check why some inheritance are TObjProxy and not TPx_; 27 ; 28 Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!; 29 ; 30 When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(; 31 ; 32 CINT does not properly call the custom operators when doing return fNtrack.; 33 ; 34 CINT does not handle fMatrix[2][1] well.; 35 ; 36 The user's function in script.h are not exposed by ACLiC.; 37 ; 38 Review the method to avoid the useless refreshing of the generated file; 39 - for most efficiency it would require a different name for each tree; 40*/; 41 ; 42#include ""TTreeProxyGenerator.h""; 43 ; 44#include ""TFriendProxyDescriptor.h""; 45#include ""TBranchProxyDescriptor.h""; 46#include ""TBranchProxyClassDescriptor.h""; 47 ; 48#include ""TList.h""; 49#include ""Varargs.h""; 50#include <cstdio>; 51 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeProxyGenerator_8cxx_source.html:95,Guid,Guide,95,doc/master/TTreeProxyGenerator_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreeProxyGenerator_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/treeviewer/inc/TTreeViewer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeViewer.h. Go to the documentation of this file. 1// @(#)root/treeviewer:$Id$; 2//Author : Andrei Gheata 16/08/00; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TTreeViewer; 13#define ROOT_TTreeViewer; 14 ; 15////////////////////////////////////////////////////; 16// //; 17// TTreeViewer - A GUI oriented tree viewer //; 18// //; 19////////////////////////////////////////////////////; 20 ; 21#include ""TGFrame.h""; 22 ; 23#include ""TTree.h""; 24 ; 25class TTVLVContainer;; 26class TTVLVEntry;; 27class TTVSession;; 28class TGSelectBox;; 29class TBranch;; 30class TContextMenu;; 31class TList;; 32class TGPicture;; 33class TTimer;; 34class TGLayoutHints;; 35class TGMenuBar;; 36class TGPopupMenu;; 37class TGToolBar;; 38class TGLabel;; 39class TGCheckButton;; 40class TGComboBox;; 41class TGTextButton;; 42class TGTextEntry;; 43class TGDoubleVSlider;; 44class TGPictureButton;; 45class TGStatusBar;; 46class TGCanvas;; 47class TGListTree;; 48class TGListTreeItem;; 49class TGListView;; 50class TGHProgressBar;; 51class TGButton;; 52 ; 53 ; 54class TTreeViewer : public TGMainFrame {; 55 ; 56friend class TGClient;; 57friend class TGButton;; 58 ; 59public:; 60 /// Item types used as user data; 61 enum EListItemType {; 62 kLTNoType = 0,; 63 kLTPackType = BIT(0),; 64 kLTTreeType = BIT(1),; 65 kLTBranchType = BIT(2),; 66 kLTLeafType = BIT(3),; 67 kLTActionType = BIT(4),; 68 kLTDragType = BIT(5),; 69 kLTExpressionType = BIT(6),; 70 kLTCutType = BIT(7); 71 };; 72 ; 73private:; 74 ; 75///@{; 76 TTree *fTree; ///",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8h_source.html:85,Guid,Guide,85,doc/master/TTreeViewer_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8h_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tree/treeviewer/src/TTreeViewer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeViewer.cxx. Go to the documentation of this file. 1// @(#)root/treeviewer:$Id: c8e226dde2f9b6f39946bfe90cabcb778d63dc4f $; 2//Author : Andrei Gheata 16/08/00; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TTreeViewer; 13A graphic user interface designed to handle ROOT trees and to take advantage of; 14TTree class features.; 15 ; 16It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; 17in the same session.; 18 ; 19### The following capabilities are making the viewer a helpful tool for analysis:; 20 ; 21 - several trees may be opened in the same session;; 22 - branches and leaves can be easily browsed or scanned;; 23 - fast drawing of branch expressions by double-clicking;; 24 - new variables/selections easy to compose with the built-in editor;; 25 - histograms can be composed by dragging leaves or user-defined expressions; 26 to X, Y and Z axis items;; 27 - the tree entries to be processed can be selected with a double slider;; 28 - selections can be defined and activated by dragging them to the 'Cut' item;; 29 - all expressions can be aliased and aliases can be used in composing others;; 30 - input/output event lists easy to handle;; 31 - menu with histogram drawing options;; 32 - user commands may be executed within the viewer and the current command; 33 can be echoed;; 34 - current 'Draw' event loop is reflected by a progress bar and may be; 35 interrupted by the user;; 36 - all widgets have self-explaining tool tips and/or context menus;; 37 - expressions/leav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8cxx_source.html:87,Guid,Guide,87,doc/master/TTreeViewer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8cxx_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tutorials Directory Reference. Directory dependency graph for tutorials:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  cocoa;  ;  cont;  ;  dataframe;  ;  eve;  ;  eve7;  ;  fft;  ;  fit;  ;  fitsio;  ;  foam;  ;  geom;  ;  gl;  ;  graphics;  ;  graphs;  ;  gui;  ;  hist;  ;  histfactory;  ;  http;  ;  image;  ;  io;  ;  legacy;  ;  math;  ;  matrix;  ;  mc;  ;  multicore;  ;  net;  ;  physics;  ;  proof;  ;  pyroot;  ;  pythia;  ;  quadp;  ;  r;  ;  rcanvas;  ;  roofit;  ;  roostats;  ;  spectrum;  ;  splot;  ;  sql;  ;  tmva;  ;  tree;  ;  unfold;  ;  unuran;  ;  v7;  ;  vecops;  ;  webcanv;  ;  webgui;  ;  xml;  . Files;  .enableImplicitMTWrapper.py;  ;  .rootlogon.py;  ;  demos.C;  This macro shows a control bar to run some of the ROOT tutorials. ;  ;  demoshelp.C;  This macro shows help on running the Demos. ;  ;  hsimple.C;   This program creates : ;  ;  rootlogoff.C;  Example of rootlogoff.C. ;  ;  rootlogon.C;  Example of rootlogon.C. ;  . tutorials. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_d7ff98e99d8733492dd662d455f89a38.html:69,Guid,Guide,69,doc/master/dir_d7ff98e99d8733492dd662d455f89a38.html,https://root.cern,https://root.cern/doc/master/dir_d7ff98e99d8733492dd662d455f89a38.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. dataframe Directory Reference. Directory dependency graph for dataframe:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Files;  df000_simple.C;   Simple RDataFrame example in C++. ;  ;  df000_simple.py;   Simple RDataFrame example in Python. ;  ;  df001_introduction.C;   Basic RDataFrame usage. ;  ;  df001_introduction.py;   Basic usage of RDataFrame from python. ;  ;  df002_dataModel.C;   Show how to work with non-flat data models, e.g. ;  ;  df002_dataModel.py;   Show how to work with non-flat data models, e.g. ;  ;  df003_profiles.C;   Use TProfiles with RDataFrame. ;  ;  df003_profiles.py;   Use TProfiles with RDataFrame. ;  ;  df004_cutFlowReport.C;   Display cut/Filter efficiencies with RDataFrame. ;  ;  df004_cutFlowReport.py;   Display cut/Filter efficiencies with RDataFrame. ;  ;  df005_fillAnyObject.C;   Using the generic Fill action. ;  ;  df006_ranges.C;   Use Range to limit the amount of data processed. ;  ;  df006_ranges.py;   Use Range to limit the amount of data processed. ;  ;  df007_snapshot.C;   Write ROOT data with RDataFrame. ;  ;  df007_snapshot.py;   Write ROOT data with RDataFrame. ;  ;  df008_createDataSetFromScratch.C;   Create data from scratch with RDataFrame. ;  ;  df008_createDataSetFromScratch.py;   Create data from scratch with RDataFrame. ;  ;  df009_FromScratchVSTTree.C;   Compare creation of a ROOT dataset with RDataFrame and TTree. ;  ;  df010_trivialDataSource.C;   Use the ""trivial data source"", an example data source implementation. ;  ;  df010_trivialDataSource.py;   Use the ""trivial data source"", an example data source implementation. ;  ;  df012_DefinesAndFiltersAsStrings.C;   Use just-in-time-compiled Filters and Defines for quick prototyping. ;  ;  df012_DefinesAndFiltersAsStrings.py;   Use just-in-time-compiled Filters and Defines for quick prototyping. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_a1b0d055c02f6056ea201bfa3ee242a7.html:79,Guid,Guide,79,doc/master/dir_a1b0d055c02f6056ea201bfa3ee242a7.html,https://root.cern,https://root.cern/doc/master/dir_a1b0d055c02f6056ea201bfa3ee242a7.html,3,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/dataframe/df000_simple.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df000_simple.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Simple RDataFrame example in C++. ; This tutorial shows a minimal example of RDataFrame. It starts without input data, generates a new column x with random numbers, and finally draws a histogram for x.; ; void df000_simple(); {; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);; ; // Define a new column `x` that contains random numbers; auto rdf_x = rdf.Define(""x"", [](){ return gRandom->Rndm(); });; ; // Create a histogram from `x`; auto h = rdf_x.Histo1D(""x"");; ; // At the end of this function, the histogram pointed to by `h` will be deleted.; // Draw a copy of the histogram object instead:; h->DrawClone();; }; h#define h(i)Definition RSha256.hxx:106; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TRandom::RndmDouble_t Rndm() overrideMachine independent random number generator.Definition TRandom.cxx:559; df000_simpleDefinition df000_simple.py:1; ; DateSeptember 2021 ; AuthorEnric Tejedor (CERN) ; Definition in file df000_simple.C. tutorialsdataframedf000_simple.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df000__simple_8C.html:89,Guid,Guide,89,doc/master/df000__simple_8C.html,https://root.cern,https://root.cern/doc/master/df000__simple_8C.html,3,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/dataframe/df000_simple.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df000_simple.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Simple RDataFrame example in Python. ; This tutorial shows a minimal example of RDataFrame. It starts without input data, generates a new column x with random numbers, and finally draws a histogram for x.; ; import ROOT; ; # Create a data frame with 100 rows; rdf = ROOT.RDataFrame(100); ; # Define a new column `x` that contains random numbers; rdf_x = rdf.Define(""x"", ""gRandom->Rndm()""); ; # Create a histogram from `x` and draw it; h = rdf_x.Histo1D(""x""); h.Draw(); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; DateSeptember 2021 ; AuthorEnric Tejedor (CERN) ; Definition in file df000_simple.py. tutorialsdataframedf000_simple.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df000__simple_8py.html:90,Guid,Guide,90,doc/master/df000__simple_8py.html,https://root.cern,https://root.cern/doc/master/df000__simple_8py.html,3,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/dataframe/df001_introduction.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df001_introduction.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Basic RDataFrame usage. ; This tutorial illustrates the basic features of the RDataFrame class, a utility which allows to interact with data stored in TTrees following a functional-chain like approach.; ; // ## Preparation; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(10);; d.Define(""b1"", [](ULong64_t entry) -> double { return entry; }, {""rdfentry_""}); .Define(""b2"", [](ULong64_t entry) -> int { return entry * entry; }, {""rdfentry_""}); .Snapshot(treeName, fileName);; }; ; int df001_introduction(); {; ; // We prepare an input tree to run on; auto fileName = ""df001_introduction.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame, a class that; // allows us to interact with the data contained in the tree.; // We select a default column, a *branch* to adopt ROOT jargon, which will; // be looked at if none is specified by the user when dealing with filters; // and actions.; ROOT::RDataFrame d(treeName, fileName, {""b1""});; ; // ## Operations on the dataframe; // We now review some *actions* which can be performed on the data frame.; // Actions can be divided into instant actions (e. g. Foreach()) and lazy; // actions (e. g. Count()), depending on whether they trigger the event; // loop immediately or only when one of the results is accessed for the; // first time. Actions that return ""something"" either return their result; // wrapped in a RResultPtr or in a RDataFrame.; // But first of all, let us define our cut-flow with two lambda; // functions. We can use free functions too.; auto cutb1 = [](double b1) { return b1 < 5.; };; auto cutb1b2 = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df001__introduction_8C.html:95,Guid,Guide,95,doc/master/df001__introduction_8C.html,https://root.cern,https://root.cern/doc/master/df001__introduction_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df001_introduction.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df001_introduction.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Basic usage of RDataFrame from python. ; This tutorial illustrates the basic features of the RDataFrame class, a utility which allows to interact with data stored in TTrees following a functional-chain like approach.; ; import ROOT; ; def fill_tree(treeName, fileName):; """"""A simple helper function to fill a test tree: this makes the example stand-alone.""""""; df = ROOT.RDataFrame(10); df.Define(""b1"", ""static_cast<double>(rdfentry_)"")\; .Define(""b2"", ""static_cast<int>(rdfentry_ * rdfentry_)"").Snapshot(treeName, fileName); ; # We prepare an input tree to run on; fileName = ""df001_introduction_py.root""; treeName = ""myTree""; fill_tree(treeName, fileName); ; ; # We read the tree from the file and create a RDataFrame, a class that; # allows us to interact with the data contained in the tree.; d = ROOT.RDataFrame(treeName, fileName); ; # Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.; cutb1 = 'b1 < 5.'; cutb1b2 = 'b2 % 2 && b1 < 4.'; ; # `Count` action; # The `Count` allows to retrieve the number of the entries that passed the; # filters. Here we show how the automatic selection of the column kicks; #",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df001__introduction_8py.html:96,Guid,Guide,96,doc/master/df001__introduction_8py.html,https://root.cern,https://root.cern/doc/master/df001__introduction_8py.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df002_dataModel.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df002_dataModel.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how to work with non-flat data models, e.g. ; vectors of tracks.; This tutorial shows the possibility to use data models which are more complex than flat ntuples with RDataFrame.; ; using FourVector = ROOT::Math::XYZTVector;; using FourVectorVec = std::vector<FourVector>;; using FourVectorRVec = ROOT::VecOps::RVec<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *filename, const char *treeName); {; const double M = 0.13957; // set pi+ mass; TRandom3 R(1);; ; auto genTracks = [&](){; FourVectorVec tracks;; const auto nPart = R.Poisson(15);; tracks.reserve(nPart);; for (int j = 0; j < nPart; ++j) {; const auto px = R.Gaus(0, 10);; const auto py = R.Gaus(0, 10);; const auto pt = sqrt(px * px + py * py);; const auto eta = R.Uniform(-3, 3);; const auto phi = R.Uniform(0.0, 2 * TMath::Pi());; CylFourVector vcyl(pt, eta, phi);; // set energy; auto E = sqrt(vcyl.R() * vcyl.R() + M * M);; // fill track vector; tracks.emplace_back(vcyl.X(), vcyl.Y(), vcyl.Z(), E);; }; return tracks;; };; ; ROOT::RDataFrame d(64);; d.Define(""tracks"", genTracks).Snapshot<FourVectorVec>(treeName, filename, {""tracks""});; }; ; int df002_dataModel(); {; ; // We prepare an input tree to run on; auto fileName = ""df002_dataModel.root"";; auto treeName = ""myTree"";; fill_tree(fileName, treeName);; ; // We read the tree from the file and create a RDataFrame, a class that; // allows us to interact with the data contained in the tree.; ROOT::RDataFrame d(treeName, fileName, {""tracks""});; ; // ## Operating on branches which are collections of objects; // Here we deal with the simplest of the cuts: we decide to accept the event; // only if the num",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df002__dataModel_8C.html:92,Guid,Guide,92,doc/master/df002__dataModel_8C.html,https://root.cern,https://root.cern/doc/master/df002__dataModel_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df002_dataModel.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df002_dataModel.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how to work with non-flat data models, e.g. ; vectors of tracks.; This tutorial shows the possibility to use data models which are more complex than flat ntuples with RDataFrame.; ; import ROOT; ; # A simple helper function to fill a test tree: this makes the example stand-alone.; fill_tree_code = '''; using FourVector = ROOT::Math::XYZTVector;; using FourVectorVec = std::vector<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *filename, const char *treeName); {; const double M = 0.13957; // set pi+ mass; TRandom3 R(1);; ; auto genTracks = [&](){; FourVectorVec tracks;; const auto nPart = R.Poisson(15);; tracks.reserve(nPart);; for (int j = 0; j < nPart; ++j) {; const auto px = R.Gaus(0, 10);; const auto py = R.Gaus(0, 10);; const auto pt = sqrt(px * px + py * py);; const auto eta = R.Uniform(-3, 3);; const auto phi = R.Uniform(0.0, 2 * TMath::Pi());; CylFourVector vcyl(pt, eta, phi);; // set energy; auto E = sqrt(vcyl.R() * vcyl.R() + M * M);; // fill track vector; tracks.emplace_back(vcyl.X(), vcyl.Y(), vcyl.Z(), E);; }; return tracks;; };; ; ROOT::RDataFrame d(64);; d.Define(""tracks"", genTracks).Snapshot<FourVectorVec>(treeName, filename, {""tracks""});; }; '''; ; # We prepare an input tree to run on; fileName = ""df002_dataModel_py.root""; treeName = ""myTree""; ROOT.gInterpreter.Declare(fill_tree_code); ROOT.fill_tree(fileName, treeName); ; # We read the tree from the file and create a RDataFrame, a class that; # allows us to interact with the data contained in the tree.; d = ROOT.RDataFrame(treeName, fileName); ; # Operating on branches which are collections of objects; # Here we deal with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df002__dataModel_8py.html:93,Guid,Guide,93,doc/master/df002__dataModel_8py.html,https://root.cern,https://root.cern/doc/master/df002__dataModel_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df003_profiles.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df003_profiles.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use TProfiles with RDataFrame. ; This tutorial illustrates how to use TProfiles in combination with the RDataFrame. See the documentation of TProfile and TProfile2D to better understand the analogy of this code with the example one. ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(25000);; d.Define(""px"", []() { return gRandom->Gaus(); }); .Define(""py"", []() { return gRandom->Gaus(); }); .Define(""pz"", [](double px, double py) { return sqrt(px * px + py * py); }, {""px"", ""py""}); .Snapshot(treeName, fileName);; }; ; void df003_profiles(); {; // We prepare an input tree to run on; auto fileName = ""df003_profiles.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame.; ROOT::RDataFrame d(treeName, fileName);; ; // Create the profiles; auto hprof1d = d.Profile1D({""hprof1d"", ""Profile of py versus px"", 64, -4, 4}, ""px"", ""py"");; auto hprof2d =; d.Profile2D({""hprof2d"", ""Profile of pz versus px and py"", 40, -4, 4, 40, -4, 4, 0, 20}, ""px"", ""py"", ""pz"");; ; // And Draw; auto c1 = new TCanvas(""c1"", ""Profile histogram example"", 200, 10, 700, 500);; hprof1d->DrawClone();; auto c2 = new TCanvas(""c2"", ""Profile2D histogram example"", 200, 10, 700, 500);; hprof2d->DrawClone(""BOX"");; }; d#define d(i)Definition RSha256.hxx:102; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df003__profiles_8C.html:91,Guid,Guide,91,doc/master/df003__profiles_8C.html,https://root.cern,https://root.cern/doc/master/df003__profiles_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df003_profiles.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df003_profiles.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use TProfiles with RDataFrame. ; This tutorial illustrates how to use TProfiles in combination with the RDataFrame. See the documentation of TProfile and TProfile2D to better understand the analogy of this code with the example one.; ; import ROOT; ; # A simple helper function to fill a test tree: this makes the example; # stand-alone.; def fill_tree(treeName, fileName):; d = ROOT.RDataFrame(25000); d.Define(""px"", ""gRandom->Gaus()"")\; .Define(""py"", ""gRandom->Gaus()"")\; .Define(""pz"", ""sqrt(px * px + py * py)"")\; .Snapshot(treeName, fileName); ; # We prepare an input tree to run on; fileName = ""df003_profiles_py.root""; treeName = ""myTree""; fill_tree(treeName, fileName); ; # We read the tree from the file and create a RDataFrame.; d = ROOT.RDataFrame(treeName, fileName); ; # Create the profiles; hprof1d = d.Profile1D((""hprof1d"", ""Profile of pz versus px"", 64, -4, 4), ""px"", ""py""); hprof2d = d.Profile2D((""hprof2d"", ""Profile of pz versus px and py"", 40, -4, 4, 40, -4, 4, 0, 20), ""px"", ""py"", ""pz""); ; # And Draw; c1 = ROOT.TCanvas(""c1"", ""Profile histogram example"", 200, 10, 700, 500); hprof1d.Draw(); c1.SaveAs(""df003_c1.png""); ; c2 = ROOT.TCanvas(""c2"", ""Profile2D histogram example"", 200, 10, 700, 500); hprof2d.Draw(); c2.SaveAs(""df003_c2.png""); ; print(""Saved figures to df003_*.png""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; . DateFebruary 2017 ; AuthorDanilo Piparo (CERN) ; Definition in file df003_profiles.py. tutorialsdataframedf003_profiles.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df003__profiles_8py.html:92,Guid,Guide,92,doc/master/df003__profiles_8py.html,https://root.cern,https://root.cern/doc/master/df003__profiles_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df004_cutFlowReport.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df004_cutFlowReport.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Display cut/Filter efficiencies with RDataFrame. ; This tutorial shows how to get information about the efficiency of the filters applied; ; using FourVector = ROOT::Math::XYZTVector;; using FourVectors = std::vector<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(50);; int i(0);; d.Define(""b1"", [&i]() { return (double)i; }); .Define(""b2"",; [&i]() {; auto j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; void df004_cutFlowReport(); {; ; // We prepare an input tree to run on; auto fileName = ""df004_cutFlowReport.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame; ROOT::RDataFrame d(treeName, fileName, {""b1"", ""b2""});; ; // ## Define cuts and create the report; // Here we define two simple cuts; auto cut1 = [](double b1) { return b1 > 25.; };; auto cut2 = [](int b2) { return 0 == b2 % 2; };; ; // An optional string parameter name can be passed to the Filter method to create a named filter.; // Named filters work as usual, but also keep track of how many entries they accept and reject.; auto filtered1 = d.Filter(cut1, {""b1""}, ""Cut1"");; auto filtered2 = d.Filter(cut2, {""b2""}, ""Cut2"");; ; auto augmented1 = filtered2.Define(""b3"", [](double b1, int b2) { return b1 / b2; });; auto cut3 = [](double x) { return x < .5; };; auto filtered3 = augmented1.Filter(cut3, {""b3""}, ""Cut3"");; ; // Statistics are retrieved through a call to the Report method:; // when Report is called on the main RDataFrame object, it retrieves stats; // for all named filters declared up to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df004__cutFlowReport_8C.html:96,Guid,Guide,96,doc/master/df004__cutFlowReport_8C.html,https://root.cern,https://root.cern/doc/master/df004__cutFlowReport_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df004_cutFlowReport.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df004_cutFlowReport.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Display cut/Filter efficiencies with RDataFrame. ; This tutorial shows how to get information about the efficiency of the filters applied; ; import ROOT; ; def fill_tree(treeName, fileName):; df = ROOT.RDataFrame(50); df.Define(""b1"", ""(double) rdfentry_"")\; .Define(""b2"", ""(int) rdfentry_ * rdfentry_"").Snapshot(treeName, fileName); ; # We prepare an input tree to run on; fileName = 'df004_cutFlowReport_py.root'; treeName = 'myTree'; fill_tree(treeName, fileName); ; # We read the tree from the file and create a RDataFrame, a class that; # allows us to interact with the data contained in the tree.; d = ROOT.RDataFrame(treeName, fileName); ; # ## Define cuts and create the report; # An optional string parameter name can be passed to the Filter method to create a named filter.; # Named filters work as usual, but also keep track of how many entries they accept and reject.; filtered1 = d.Filter('b1 > 25', 'Cut1'); filtered2 = d.Filter('0 == b2 % 2', 'Cut2'); ; augmented1 = filtered2.Define('b3', 'b1 / b2'); filtered3 = augmented1.Filter('b3 < .5','Cut3'); ; # Statistics are retrieved through a call to the Report method:; # when Report is called on the main RDataFrame object, it retrieves stats for; # all named filters declared up to that point. When called on a stored chain; # state (i.e. a chain/graph node), it retrieves stats for all named filters in; # the section of the chain between the main RDataFrame and that node (included).; # Stats are printed in the same order as named filters that have been added to the; # graph, and refer to the latest event-loop that has been running using the relevant; # RDataFrame.; print('Cut3 stats:'); filtered3.Report(); print('All stats:'); allCutsReport = d.Report(); allCutsReport.Print()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df004__cutFlowReport_8py.html:97,Guid,Guide,97,doc/master/df004__cutFlowReport_8py.html,https://root.cern,https://root.cern/doc/master/df004__cutFlowReport_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df005_fillAnyObject.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df005_fillAnyObject.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Using the generic Fill action. ; This tutorial shows how to fill any object the class of which exposes a Fill method.; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(100);; auto i = 0.;; d.Define(""b1"", [&i]() { return i; }); .Define(""b2"",; [&i]() {; float j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; int df005_fillAnyObject(); {; ; // We prepare an input tree to run on; auto fileName = ""df005_fillAnyObject.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame.; ROOT::RDataFrame d(treeName, fileName);; ; // ## Filling any object; // We now fill some objects which are instances of classes which expose a; // `Fill` method with some input arguments.; auto th1d = d.Fill<double>(TH1D(""th1d"", ""th1d"", 64, 0, 128), {""b1""});; auto th1i = d.Fill<float>(TH1I(""th1i"", ""th1i"", 64, 0, 128), {""b2""});; auto th2d = d.Fill<double, float>(TH2D(""th2d"", ""th2d"", 64, 0, 128, 64, 0, 1024), {""b1"", ""b2""});; ; auto c1 = new TCanvas();; th1d->DrawClone();; ; auto c2 = new TCanvas();; th1i->DrawClone();; ; auto c3 = new TCanvas();; th2d->DrawClone(""COLZ"");; ; return 0;; }; d#define d(i)Definition RSha256.hxx:102; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1I1-D histogram with an int per channel (see TH1 documentation)Definition TH1.h:540; TH2D2-D histogram with a double per channel (see TH1 documentation)Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df005__fillAnyObject_8C.html:96,Guid,Guide,96,doc/master/df005__fillAnyObject_8C.html,https://root.cern,https://root.cern/doc/master/df005__fillAnyObject_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df006_ranges.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df006_ranges.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use Range to limit the amount of data processed. ; This tutorial shows how to express the concept of ranges when working with the RDataFrame.; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(100);; int i(0);; d.Define(""b1"", [&i]() { return i; }); .Define(""b2"",; [&i]() {; float j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; int df006_ranges(); {; ; // We prepare an input tree to run on; auto fileName = ""df006_ranges.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame.; ROOT::RDataFrame d(treeName, fileName);; ; // ## Usage of ranges; // Now we'll count some entries using ranges; auto c_all = d.Count();; ; // This is how you can express a range of the first 30 entries; auto d_0_30 = d.Range(30);; auto c_0_30 = d_0_30.Count();; ; // This is how you pick all entries from 15 onwards; auto d_15_end = d.Range(15, 0);; auto c_15_end = d_15_end.Count();; ; // We can use a stride too, in this case we pick an event every 3 entries; auto d_15_end_3 = d.Range(15, 0, 3);; auto c_15_end_3 = d_15_end_3.Count();; ; // The Range here acts first on the (whole) RDataFrame graph:; // Not only actions (like Count) but also filters and new columns can be added to it.; auto d_0_50 = d.Range(50);; auto c_0_50_odd_b1 = d_0_50.Filter(""1 == b1 % 2"").Count();; ; // An important thing to notice is that the counts of a filter are relative to the; // number of entries a filter ""sees"". Therefore, if a Range depends on a filter,; // the Range will act on the entries passing the filter only.; auto c_0_3_after_even_b1 = d.Filter(""0 == b1 % 2"").Range(0, 3).Count()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df006__ranges_8C.html:89,Guid,Guide,89,doc/master/df006__ranges_8C.html,https://root.cern,https://root.cern/doc/master/df006__ranges_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df006_ranges.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df006_ranges.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use Range to limit the amount of data processed. ; This tutorial shows how to express the concept of ranges when working with the RDataFrame.; ; import ROOT; ; def fill_tree(treeName, fileName):; df = ROOT.RDataFrame(100); df.Define(""b1"", ""(int) rdfentry_"")\; .Define(""b2"", ""(float) rdfentry_ * rdfentry_"").Snapshot(treeName, fileName); ; ; # We prepare an input tree to run on; fileName = ""df006_ranges_py.root""; treeName = ""myTree""; ; fill_tree(treeName, fileName); ; # We read the tree from the file and create a RDataFrame.; d = ROOT.RDataFrame(treeName, fileName); ; # ## Usage of ranges; # Now we'll count some entries using ranges; c_all = d.Count(); ; # This is how you can express a range of the first 30 entries; d_0_30 = d.Range(30) ; c_0_30 = d_0_30.Count(); ; # This is how you pick all entries from 15 onwards; d_15_end = d.Range(15, 0); c_15_end = d_15_end.Count(); ; # We can use a stride too, in this case we pick an event every 3 entries; d_15_end_3 = d.Range(15, 0, 3); c_15_end_3 = d_15_end_3.Count(); ; # The Range here acts first on the (whole) RDataFrame graph:; # Not only actions (like Count) but also filters and new columns can be added to it.; d_0_50 = d.Range(50); c_0_50_odd_b1 = d_0_50.Filter(""1 == b1 % 2"").Count(); ; # An important thing to notice is that the counts of a filter are relative to the; # number of entries a filter ""sees"". Therefore, if a Range depends on a filter,; # the Range will act on the entries passing the filter only.; c_0_3_after_even_b1 = d.Filter(""0 == b1 % 2"").Range(0, 3).Count(); ; # Ok, time to wrap up: let's print all counts!; print(""Usage of ranges:""); print("" - All entries:"", c_all.GetValue()); print("" - Entries from 0 to 30:"", c_0_30.GetValue()); print("" - Entries from 15 onwards:"", c_15_en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df006__ranges_8py.html:90,Guid,Guide,90,doc/master/df006__ranges_8py.html,https://root.cern,https://root.cern/doc/master/df006__ranges_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df007_snapshot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df007_snapshot.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Write ROOT data with RDataFrame. ; This tutorial shows how to write out datasets in ROOT format using RDataFrame. ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(10000);; int i(0);; d.Define(""b1"", [&i]() { return i; }); .Define(""b2"",; [&i]() {; float j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; int df007_snapshot(); {; // We prepare an input tree to run on; auto fileName = ""df007_snapshot.root"";; auto outFileName = ""df007_snapshot_output.root"";; auto outFileNameAllColumns = ""df007_snapshot_output_allColumns.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame; ROOT::RDataFrame d(treeName, fileName);; ; // ## Select entries; // We now select some entries in the dataset; auto d_cut = d.Filter(""b1 % 2 == 0"");; // ## Enrich the dataset; // Build some temporary columns: we'll write them out; auto d2 = d_cut.Define(""b1_square"", ""b1 * b1""); .Define(""b2_vector"",; [](float b2) {; std::vector<float> v;; for (int i = 0; i < 3; i++); v.push_back(b2 * i);; return v;; },; {""b2""});; ; // ## Write it to disk in ROOT format; // We now write to disk a new dataset with one of the variables originally; // present in the tree and the new variables.; // The user can explicitly specify the types of the columns as template; // arguments of the Snapshot method, otherwise they will be automatically; // inferred.; d2.Snapshot(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector""});; ; // Open the new file and list the columns of the tree; TFile f1(outFileName);; auto t = f1.Get<TTree>(treeName);; std::cout << ""These are the columns b1, b1_square an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df007__snapshot_8C.html:91,Guid,Guide,91,doc/master/df007__snapshot_8C.html,https://root.cern,https://root.cern/doc/master/df007__snapshot_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df007_snapshot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df007_snapshot.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Write ROOT data with RDataFrame. ; This tutorial shows how to write out datasets in ROOT format using RDataFrame. ; import ROOT; ; # A simple helper function to fill a test tree: this makes the example stand-alone.; def fill_tree(treeName, fileName):; df = ROOT.RDataFrame(10000); df.Define(""b1"", ""(int) rdfentry_"")\; .Define(""b2"", ""(float) rdfentry_ * rdfentry_"").Snapshot(treeName, fileName); ; # We prepare an input tree to run on; fileName = ""df007_snapshot_py.root""; outFileName = ""df007_snapshot_output_py.root""; outFileNameAllColumns = ""df007_snapshot_output_allColumns_py.root""; treeName = ""myTree""; fill_tree(treeName, fileName); ; # We read the tree from the file and create a RDataFrame; d = ROOT.RDataFrame(treeName, fileName); ; # ## Select entries; # We now select some entries in the dataset; d_cut = d.Filter(""b1 % 2 == 0""); # ## Enrich the dataset; # Build some temporary columns: we'll write them out; ; getVector_code ='''; std::vector<float> getVector (float b2); {; std::vector<float> v;; for (int i = 0; i < 3; i++) v.push_back(b2*i);; return v;; }; '''; ROOT.gInterpreter.Declare(getVector_code); ; d2 = d_cut.Define(""b1_square"", ""b1 * b1"") \; .Define(""b2_vector"", ""getVector( b2 )""); ; # ## Write it to disk in ROOT format; # We now write to disk a new dataset with one of the variables originally; # present in the tree and the new variables.; # The user can explicitly specify the types of the columns as template; # arguments of the Snapshot method, otherwise they will be automatically; # inferred.; d2.Snapshot(treeName, outFileName, \; [""b1"", ""b1_square"", ""b2_vector""]); # Open the new file and list the columns of the tree; f1 = ROOT.TFile(outFileName); t = f1[treeName]; print(""These are the columns b1, b1_square and b2_vecto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df007__snapshot_8py.html:92,Guid,Guide,92,doc/master/df007__snapshot_8py.html,https://root.cern,https://root.cern/doc/master/df007__snapshot_8py.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df008_createDataSetFromScratch.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df008_createDataSetFromScratch.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Create data from scratch with RDataFrame. ; This tutorial shows how to create a dataset from scratch with RDataFrame; ; void df008_createDataSetFromScratch(); {; // We create an empty data frame of 100 entries; ROOT::RDataFrame df(100);; ; // We now fill it with random numbers; gRandom->SetSeed(1);; auto df_1 = df.Define(""rnd"", []() { return gRandom->Gaus(); });; ; // And we write out the dataset on disk; df_1.Snapshot(""randomNumbers"", ""df008_createDataSetFromScratch.root"");; }; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; TRandom::SetSeedvirtual void SetSeed(ULong_t seed=0)Set the random generator seed.Definition TRandom.cxx:615; df008_createDataSetFromScratchDefinition df008_createDataSetFromScratch.py:1; DateJune 2017 ; AuthorDanilo Piparo (CERN) ; Definition in file df008_createDataSetFromScratch.C. tutorialsdataframedf008_createDataSetFromScratch.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df008__createDataSetFromScratch_8C.html:107,Guid,Guide,107,doc/master/df008__createDataSetFromScratch_8C.html,https://root.cern,https://root.cern/doc/master/df008__createDataSetFromScratch_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df008_createDataSetFromScratch.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df008_createDataSetFromScratch.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Create data from scratch with RDataFrame. ; This tutorial shows how to create a dataset from scratch with RDataFrame; ; import ROOT; ; # We create an empty data frame of 100 entries; df = ROOT.RDataFrame(100); ; # We now fill it with random numbers; ROOT.gRandom.SetSeed(1); df_1 = df.Define(""rnd"", ""gRandom->Gaus()""); ; # And we write out the dataset on disk; df_1.Snapshot(""randomNumbers"", ""df008_createDataSetFromScratch_py.root""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; DateJune 2017 ; AuthorDanilo Piparo (CERN) ; Definition in file df008_createDataSetFromScratch.py. tutorialsdataframedf008_createDataSetFromScratch.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df008__createDataSetFromScratch_8py.html:108,Guid,Guide,108,doc/master/df008__createDataSetFromScratch_8py.html,https://root.cern,https://root.cern/doc/master/df008__createDataSetFromScratch_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df009_FromScratchVSTTree.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df009_FromScratchVSTTree.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Compare creation of a ROOT dataset with RDataFrame and TTree. ; This tutorial illustrates how much simpler it can be to use a RDataFrame to create a dataset with respect to the usage of the TTree interfaces.; ; // ##This is the classic way of creating a ROOT dataset; // The steps are:; // - Create a file; // - Create a tree associated to the file; // - Define the variables to write in the entries; // - Define the branches associated to those variables; // - Write the event loop to set the right value to the variables; // - Call TTree::Fill to save the value of the variables; // - Write the TTree; // - Close the file; void classicWay(); {; TFile f(""df009_FromScratchVSTTree_classic.root"", ""RECREATE"");; TTree t(""treeName"", ""treeName"");; double b1;; int b2;; t.Branch(""b1"", &b1);; t.Branch(""b2"", &b2);; for (int i = 0; i < 10; ++i) {; b1 = i;; b2 = i * i;; t.Fill();; }; t.Write();; f.Close();; }; ; // ##This is the RDF way of creating a ROOT dataset; // Few lines are needed to achieve the same result.; // Parallel creation of the TTree is not supported in the; // classic method.; // In this case the steps are:; // - Create an empty RDataFrame; // - If needed, define variables for the functions used to fill the branches; // - Create new columns expressing their content with lambdas, functors, functions or strings; // - Invoke the Snapshot action; //; // Parallelism is not the only advantage. Starting from an existing dataset,; // filtering it, enriching it with new columns, leaving aside some other columns, and; // writing a new dataset become very easy to do.; void RDFWay(); {; ROOT::RDataFrame df(10);; auto b = 0.;; df.Define(""b1"", [&b]() { return b++; }); .Define(""b2"", ""(int) b1 * b1"") // This can even be a string; .Snapshot(""t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df009__FromScratchVSTTree_8C.html:101,Guid,Guide,101,doc/master/df009__FromScratchVSTTree_8C.html,https://root.cern,https://root.cern/doc/master/df009__FromScratchVSTTree_8C.html,2,"['Guid', 'simpl']","['Guide', 'simpler']"
Usability,". ROOT: tutorials/dataframe/df010_trivialDataSource.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df010_trivialDataSource.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the ""trivial data source"", an example data source implementation. ; This tutorial illustrates how use the RDataFrame in combination with a RDataSource. In this case we use a RTrivialDS, which is nothing more than a simple generator: it does not interface to any existing dataset. The RTrivialDS has a single column, col0, which has value n for entry n. The code for RTrivialDS is available at these links (header and source):; https://github.com/root-project/root/blob/master/tree/dataframe/src/RTrivialDS.cxx; https://github.com/root-project/root/blob/master/tree/dataframe/inc/ROOT/RTrivialDS.hxx. Note that RTrivialDS is only a demo data source implementation and superior alternatives typically exist for production use (e.g. constructing an empty RDataFrame as RDataFrame(nEntries)).; ; int df010_trivialDataSource(); {; auto nEvents = 128U;; auto d_s = ROOT::RDF::MakeTrivialDataFrame(nEvents);; ; /// Now we have a regular RDataFrame: the ingestion of data is delegated to; /// the RDataSource. At this point everything works as before.; auto h_s = d_s.Define(""x"", ""1./(1. + col0)"").Histo1D({""h_s"", ""h_s"", 128, 0, .6}, ""x"");; ; /// Now we redo the same with a RDF from scratch and we draw the two histograms; ROOT::RDataFrame d(nEvents);; ; /// This lambda redoes what the RTrivialDS provides; auto g = []() {; static ULong64_t i = 0;; return i++;; };; auto h = d.Define(""col0"", g).Define(""x"", ""1./(1. + col0)"").Histo1D({""h"", ""h"", 128, 0, .6}, ""x"");; ; auto c_s = new TCanvas();; c_s->SetLogy();; h_s->DrawClone();; ; auto c = new TCanvas();; c->SetLogy();; h->DrawClone();; ; return 0;; }; d#define d(i)Definition RSha256.hxx:102; c#define c(i)Definition RSha256.hxx:101; g#define g(i)Definition RSha256.hxx:105; h#define h(i)Definition RSha25",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df010__trivialDataSource_8C.html:100,Guid,Guide,100,doc/master/df010__trivialDataSource_8C.html,https://root.cern,https://root.cern/doc/master/df010__trivialDataSource_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df010_trivialDataSource.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df010_trivialDataSource.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the ""trivial data source"", an example data source implementation. ; This tutorial illustrates how use the RDataFrame in combination with a RDataSource. In this case we use a RTrivialDS, which is nothing more than a simple generator: it does not interface to any existing dataset. The RTrivialDS has a single column, col0, which has value n for entry n.; Note that RTrivialDS is only a demo data source implementation and superior alternatives typically exist for production use (e.g. constructing an empty RDataFrame as RDataFrame(nEntries)).; ; import ROOT; ; # Create the data frame; MakeTrivialDataFrame = ROOT.RDF.MakeTrivialDataFrame; ; nEvents = 128; ; d_s = MakeTrivialDataFrame(nEvents); ; # Now we have a regular RDataFrame: the ingestion of data is delegated to; # the RDataSource. At this point everything works as before.; h_s = d_s.Define(""x"", ""1./(1. + col0)"").Histo1D((""h_s"", ""h_s"", 128, 0, .6), ""x""); ; c = ROOT.TCanvas(); c.SetLogy(); h_s.Draw(); c.SaveAs(""df010_trivialDataSource.png""); ; print(""Saved figure to df010_trivialDataSource.png""); DateSeptember 2017 ; AuthorDanilo Piparo (CERN) ; Definition in file df010_trivialDataSource.py. tutorialsdataframedf010_trivialDataSource.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df010__trivialDataSource_8py.html:101,Guid,Guide,101,doc/master/df010__trivialDataSource_8py.html,https://root.cern,https://root.cern/doc/master/df010__trivialDataSource_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df012_DefinesAndFiltersAsStrings.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df012_DefinesAndFiltersAsStrings.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use just-in-time-compiled Filters and Defines for quick prototyping. ; This tutorial illustrates how to save some typing when using RDataFrame by invoking functions that perform jit-compiling at runtime.; ; void df012_DefinesAndFiltersAsStrings(); {; // We will inefficiently calculate an approximation of pi by generating; // some data, and doing very simple filtering and analysis on it.; ; // We start by creating an empty dataframe where we will insert 10 million; // random points in a square of side 2.0 (that is, with an inscribed circle; // of radius 1.0).; ; size_t npoints = 10000000;; ROOT::RDataFrame df(npoints);; ; // Define what we want inside the dataframe. We do not need to define p as an array,; // but we do it here to demonstrate how to use jitting with RDataFrame.; ; // NOTE: Although it's possible to use ""for (auto&& x : p)"" below, it will; // shadow the name of the data column ""x"", and may cause compilation failures; // if the local variable and the data column are of different types, or the; // local x variable is declared in the global scope of the lambda function.; ; auto pidf = df.Define(""x"", ""gRandom->Uniform(-1.0, 1.0)""); .Define(""y"", ""gRandom->Uniform(-1.0, 1.0)""); .Define(""p"", ""std::array<double, 2> v{x, y}; return v;""); .Define(""r"", ""double r2 = 0.0; for (auto&& x : p) r2 += x*x; return sqrt(r2);"");; ; // Now we have a dataframe with columns x, y, p (which is a point based on x; // and y), and the radius r = sqrt(x*x + y*y). In order to approximate pi, we; // need to know how many of our data points fall inside the unit circle compared; // with the total number of points. The ratio of the areas is; //; // A_circle / A_square = pi r*r / l * l, where r = 1.0, and l = 2.0; //; // Therefor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df012__DefinesAndFiltersAsStrings_8C.html:109,Guid,Guide,109,doc/master/df012__DefinesAndFiltersAsStrings_8C.html,https://root.cern,https://root.cern/doc/master/df012__DefinesAndFiltersAsStrings_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df012_DefinesAndFiltersAsStrings.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use just-in-time-compiled Filters and Defines for quick prototyping. ; This tutorial illustrates how to use jit-compiling features of RDataFrame to define data using C++ code in a Python script.; ; import ROOT; ; ## We will inefficiently calculate an approximation of pi by generating; ## some data and doing very simple filtering and analysis on it.; ; ## We start by creating an empty dataframe where we will insert 10 million; ## random points in a square of side 2.0 (that is, with an inscribed unit; ## circle).; ; npoints = 10000000; df = ROOT.RDataFrame(npoints); ; ## Define what data we want inside the dataframe. We do not need to define p; ## as an array, but we do it here to demonstrate how to use jitting with RDataFrame.; ; pidf = df.Define(""x"", ""gRandom->Uniform(-1.0, 1.0)"") \; .Define(""y"", ""gRandom->Uniform(-1.0, 1.0)"") \; .Define(""p"", ""std::array<double, 2> v{x, y}; return v;"") \; .Define(""r"", ""double r2 = 0.0; for (auto&& w : p) r2 += w*w; return sqrt(r2);""); ; ## Now we have a dataframe with columns x, y, p (which is a point based on x; ## and y), and the radius r = sqrt(x*x + y*y). In order to approximate pi, we; ## need to know how many of our data points fall inside the circle of radius; ## one compared with the total number of points. The ratio of the areas is; ##; ## A_circle / A_square = pi r*r / l * l, where r = 1.0, and l = 2.0; ##; ## Therefore, we can approximate pi with four times the number of points inside; ## the unit circle over the total number of points:; ; incircle = pidf.Filter(""r <= 1.0"").Count().GetValue(); ; pi_approx = 4.0 * incircle / npoints; ; print(""pi is approximately equal to %g"" % (pi_approx)); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-leve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df012__DefinesAndFiltersAsStrings_8py.html:110,Guid,Guide,110,doc/master/df012__DefinesAndFiltersAsStrings_8py.html,https://root.cern,https://root.cern/doc/master/df012__DefinesAndFiltersAsStrings_8py.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df013_InspectAnalysis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df013_InspectAnalysis.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use callbacks to update a plot and a progress bar during the event loop. ; Showcase registration of callback functions that act on partial results while the event-loop is running using OnPartialResult and OnPartialResultSlot. This tutorial is not meant to run in batch mode.; ; using namespace ROOT; // RDataFrame lives in here; ; void df013_InspectAnalysis(); {; ROOT::EnableImplicitMT();; const auto poolSize = ROOT::GetThreadPoolSize();; const auto nSlots = 0 == poolSize ? 1 : poolSize;; ; // ## Setup a simple RDataFrame; // We start by creating a RDataFrame with a good number of empty events; const auto nEvents = nSlots * 10000ull;; RDataFrame d(nEvents);; ; // `heavyWork` is a lambda that fakes some interesting computation and just returns a normally distributed double; TRandom r;; auto heavyWork = [&r]() {; for (volatile int i = 0; i < 1000000; ++i); ;; return r.Gaus();; };; ; // Let's define a column ""x"" produced by invoking `heavyWork` for each event; // `df` stores a modified data-frame that contains ""x""; auto df = d.Define(""x"", heavyWork);; ; // Now we register a histogram-filling action with the RDataFrame.; // `h` can be used just like a pointer to TH1D but it is actually a TResultProxy<TH1D>, a smart object that triggers; // an event-loop to fill the pointee histogram if needed.; auto h = df.Histo1D<double>({""browserHisto"", """", 100, -2., 2.}, ""x"");; ; // ## Use the callback mechanism to draw the histogram on a TBrowser while it is being filled; // So far we have registered a column ""x"" to a data-frame with `nEvents` events and we registered the filling of a; // histogram with the values of column ""x"".; // In the following we will register three functions for execution during the event-loop:; // - one is to be executed on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df013__InspectAnalysis_8C.html:98,Guid,Guide,98,doc/master/df013__InspectAnalysis_8C.html,https://root.cern,https://root.cern/doc/master/df013__InspectAnalysis_8C.html,3,"['Guid', 'progress bar', 'simpl']","['Guide', 'progress bar', 'simple']"
Usability,". ROOT: tutorials/dataframe/df014_CSVDataSource.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df014_CSVDataSource.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Process a CSV file with RDataFrame and the CSV data source. ; This tutorial illustrates how use the RDataFrame in combination with a RDataSource. In this case we use a RCsvDS. This data source allows to read a CSV file from a RDataFrame. As a result of running this tutorial, we will produce plots of the dimuon spectrum starting from a subset of the CMS collision events of Run2010B. Dataset Reference: McCauley, T. (2014). Dimuon event information derived from the Run2010B public Mu dataset. CERN Open Data Portal. DOI: 10.7483/OPENDATA.CMS.CB8H.MFFA.; ; int df014_CSVDataSource(); {; // Let's first create a RDF that will read from the CSV file.; // The types of the columns will be automatically inferred.; auto fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv"";; auto fileName = ""df014_CsvDataSource_MuRun2010B_cpp.csv"";; if(gSystem->AccessPathName(fileName)); TFile::Cp(fileNameUrl, fileName);; auto df = ROOT::RDF::FromCSV(fileName);; ; // Now we will apply a first filter based on two columns of the CSV,; // and we will define a new column that will contain the invariant mass.; // Note how the new invariant mass column is defined from several other; // columns that already existed in the CSV file.; auto filteredEvents =; df.Filter(""Q1 * Q2 == -1""); .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; ; // Next we create a histogram to hold the invariant mass values and we draw it.; auto invMass =; filteredEvents.Histo1D({""invMass"", ""CMS Opendata: #mu#mu mass;#mu#mu mass [GeV];Events"", 512, 2, 110}, ""m"");; ; auto c = new TCanvas();; c->SetLogx();; c->SetLogy();; invMass->DrawClone();; ; // We will now produce a plot also for the J/Psi particle. We will plot; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8C.html:96,Guid,Guide,96,doc/master/df014__CSVDataSource_8C.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df014_CSVDataSource.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df014_CSVDataSource.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_dataframe; 3/// \notebook -draw; 4/// Process a CSV file with RDataFrame and the CSV data source.; 5///; 6/// This tutorial illustrates how use the RDataFrame in combination with a; 7/// RDataSource. In this case we use a RCsvDS. This data source allows to read; 8/// a CSV file from a RDataFrame.; 9/// As a result of running this tutorial, we will produce plots of the dimuon; 10/// spectrum starting from a subset of the CMS collision events of Run2010B.; 11/// Dataset Reference:; 12/// McCauley, T. (2014). Dimuon event information derived from the Run2010B; 13/// public Mu dataset. CERN Open Data Portal.; 14/// DOI: [10.7483/OPENDATA.CMS.CB8H.MFFA](http://opendata.cern.ch/record/700).; 15///; 16/// \macro_code; 17/// \macro_image; 18///; 19/// \date October 2017; 20/// \author Enric Tejedor (CERN); 21 ; 22int df014_CSVDataSource(); 23{; 24 // Let's first create a RDF that will read from the CSV file.; 25 // The types of the columns will be automatically inferred.; 26 auto fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv"";; 27 auto fileName = ""df014_CsvDataSource_MuRun2010B_cpp.csv"";; 28 if(gSystem->AccessPathName(fileName)); 29 TFile::Cp(fileNameUrl, fileName);; 30 auto df = ROOT::RDF::FromCSV(fileName);; 31 ; 32 // Now we will apply a first filter based on two columns of the CSV,; 33 // and we will define a new column that will contain the invariant mass.; 34 // Note how the new invariant mass column is defined from several other; 35 // columns that already existed in the CSV file.; 36 auto filteredEvents =; 37 df.Filter(""Q1 * Q2 == -1""); 38 .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; 39 ; 40 // Next we create a histogram to hold the invari",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8C_source.html:93,Guid,Guide,93,doc/master/df014__CSVDataSource_8C_source.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df014_CSVDataSource.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df014_CSVDataSource.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Process a CSV file with RDataFrame and the CSV data source. ; This tutorial illustrates how use the RDataFrame in combination with a RDataSource. In this case we use a TCsvDS. This data source allows to read a CSV file from a RDataFrame. As a result of running this tutorial, we will produce plots of the dimuon spectrum starting from a subset of the CMS collision events of Run2010B. Dataset Reference: McCauley, T. (2014). Dimuon event information derived from the Run2010B public Mu dataset. CERN Open Data Portal. DOI: 10.7483/OPENDATA.CMS.CB8H.MFFA.; ; import ROOT; import os; ; # Let's first create a RDF that will read from the CSV file.; # The types of the columns will be automatically inferred.; fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv""; fileName = ""df014_CsvDataSource_MuRun2010B_py.csv""; if not os.path.isfile(fileName):; ROOT.TFile.Cp(fileNameUrl, fileName); ; df = ROOT.RDF.FromCSV(fileName); ; # Now we will apply a first filter based on two columns of the CSV,; # and we will define a new column that will contain the invariant mass.; # Note how the new invariant mass column is defined from several other; # columns that already existed in the CSV file.; filteredEvents = df.Filter(""Q1 * Q2 == -1"") \; .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))""); ; # Next we create a histogram to hold the invariant mass values and we draw it.; invMass = filteredEvents.Histo1D((""invMass"", ""CMS Opendata: #mu#mu mass;#mu#mu mass [GeV];Events"", 512, 2, 110), ""m""); ; c = ROOT.TCanvas(); c.SetLogx(); c.SetLogy(); invMass.Draw(); c.SaveAs(""df014_invMass.png""); ; # We will now produce a plot also for the J/Psi particle. We will plot; # on the same c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8py.html:97,Guid,Guide,97,doc/master/df014__CSVDataSource_8py.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df014_CSVDataSource.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df014_CSVDataSource.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_dataframe; 3## \notebook -draw; 4## Process a CSV file with RDataFrame and the CSV data source.; 5##; 6## This tutorial illustrates how use the RDataFrame in combination with a; 7## RDataSource. In this case we use a TCsvDS. This data source allows to read; 8## a CSV file from a RDataFrame.; 9## As a result of running this tutorial, we will produce plots of the dimuon; 10## spectrum starting from a subset of the CMS collision events of Run2010B.; 11## Dataset Reference:; 12## McCauley, T. (2014). Dimuon event information derived from the Run2010B; 13## public Mu dataset. CERN Open Data Portal.; 14## DOI: [10.7483/OPENDATA.CMS.CB8H.MFFA](http://opendata.cern.ch/record/700).; 15##; 16## \macro_code; 17## \macro_image; 18##; 19## \date October 2017; 20## \author Enric Tejedor (CERN); 21 ; 22import ROOT; 23import os; 24 ; 25# Let's first create a RDF that will read from the CSV file.; 26# The types of the columns will be automatically inferred.; 27fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv""; 28fileName = ""df014_CsvDataSource_MuRun2010B_py.csv""; 29if not os.path.isfile(fileName):; 30 ROOT.TFile.Cp(fileNameUrl, fileName); 31 ; 32df = ROOT.RDF.FromCSV(fileName); 33 ; 34# Now we will apply a first filter based on two columns of the CSV,; 35# and we will define a new column that will contain the invariant mass.; 36# Note how the new invariant mass column is defined from several other; 37# columns that already existed in the CSV file.; 38filteredEvents = df.Filter(""Q1 * Q2 == -1"") \; 39 .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))""); 40 ; 41# Next we create a histogram to hold the invariant mass values and we draw it.; 42invMass = filteredEvents.Hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8py_source.html:94,Guid,Guide,94,doc/master/df014__CSVDataSource_8py_source.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8py_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df015_LazyDataSource.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df015_LazyDataSource.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the lazy RDataFrame data source to concatenate computation graphs. ; This tutorial illustrates how to take advantage of a lazy data source creating a data frame from columns of one or multiple parent dataframe(s), delaying the creation of the columns to the actual usage of the daughter data frame. Dataset Reference: McCauley, T. (2014). Dimuon event information derived from the Run2010B public Mu dataset. CERN Open Data Portal. DOI: 10.7483/OPENDATA.CMS.CB8H.MFFA. From the ROOT website: https://root.cern/files/tutorials/tdf014_CsvDataSource_MuRun2010B.csv; ; int df015_LazyDataSource(); {; using namespace ROOT::RDF;; ; // Let's first create a RDF that will read from the CSV file.; // See the tutorial (https://root.cern/doc/master/df014__CSVDataSource_8C.html) on CSV data sources for more details!; auto fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv"";; auto fileName = ""df015_CsvDataSource_MuRun2010B.csv"";; if(gSystem->AccessPathName(fileName)); TFile::Cp(fileNameUrl, fileName);; ; auto csv_rdf = FromCSV(fileName);; ; // Now we take out two columns: px and py of the first muon in the muon pair; std::string px1Name = ""px1"";; auto px1 = csv_rdf.Take<double>(px1Name);; std::string py1Name = ""py1"";; auto py1 = csv_rdf.Take<double>(py1Name);; ; // Now we create a new dataframe built on top of the columns above. Note that up to now, no event loop; // has been carried out!; auto df = MakeLazyDataFrame(std::make_pair(px1Name, px1), std::make_pair(py1Name, py1));; ; // We build a histogram of the transverse momentum of the muons.; auto ptFormula = [](double px, double py) { return sqrt(px * px + py * py); };; auto pt_h = df.Define(""pt"", ptFormula, {""px1"", ""py1""}); .Histo1D<double>({""pt"", ""Muon p_{T};p_{T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df015__LazyDataSource_8C.html:97,Guid,Guide,97,doc/master/df015__LazyDataSource_8C.html,https://root.cern,https://root.cern/doc/master/df015__LazyDataSource_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df016_vecOps.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df016_vecOps.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Process collections in RDataFrame with the help of RVec. ; This tutorial shows the potential of the VecOps approach for treating collections stored in datasets, a situation very common in HEP data analysis.; ; using namespace ROOT;; ; int df016_vecOps(); {; // We re-create a set of points in a square.; // This is a technical detail, just to create a dataset to play with!; auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };; auto vGen = [&](int len) {; RVecD v(len);; std::transform(v.begin(), v.end(), v.begin(), unifGen);; return v;; };; RDataFrame d(1024);; auto d0 = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }); .Define(""x"", vGen, {""len""}); .Define(""y"", vGen, {""len""});; ; // Now we have in our hands d, a RDataFrame with two columns, x and y, which; // hold collections of coordinates. The sizes of these collections vary.; // Let's now define radii from the x and y coordinates. We'll do it treating ; // the collections stored in the columns without looping on the individual elements.; auto d1 = d0.Define(""r"", ""sqrt(x*x + y*y)"");; ; // Now we want to plot 2 quarters of a ring with radii .5 and 1.; // Note how the cuts are performed on RVecs, comparing them with integers and; // among themselves.; auto ring_h = d1.Define(""rInFig"", ""r > .5 && r < 1 && x*y < 0""); .Define(""yFig"", ""y[rInFig]""); .Define(""xFig"", ""x[rInFig]""); .Histo2D({""fig"", ""Two quarters of a ring"", 64, -1.1, 1.1, 64, -1.1, 1.1}, ""xFig"", ""yFig"");; ; auto cring = new TCanvas();; ring_h->DrawCopy(""Colz"");; ; return 0;; }; d#define d(i)Definition RSha256.hxx:102; lenOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttribut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df016__vecOps_8C.html:89,Guid,Guide,89,doc/master/df016__vecOps_8C.html,https://root.cern,https://root.cern/doc/master/df016__vecOps_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df016_vecOps.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df016_vecOps.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Process collections in RDataFrame with the help of RVec. ; This tutorial shows the potential of the VecOps approach for treating collections stored in datasets, a situation very common in HEP data analysis. ; import ROOT; ; df = ROOT.RDataFrame(1024); coordDefineCode = '''ROOT::RVecD {0}(len);; std::transform({0}.begin(), {0}.end(), {0}.begin(), [](double){{return gRandom->Uniform(-1.0, 1.0);}});; return {0};'''; d = df.Define(""len"", ""gRandom->Uniform(0, 16)"")\; .Define(""x"", coordDefineCode.format(""x""))\; .Define(""y"", coordDefineCode.format(""y"")); ; # Now we have in our hands d, a RDataFrame with two columns, x and y, which; # hold collections of coordinates. The sizes of these collections vary.; # Let's now define radii radii from the x and y coordinates. We'll do it treating ; # the collections stored in the columns without looping on the individual elements.; d1 = d.Define(""r"", ""sqrt(x*x + y*y)""); ; # Now we want to plot 2 quarters of a ring with radii .5 and 1.; # Note how the cuts are performed on RVecs, comparing them with integers and; # among themselves.; ring_h = d1.Define(""rInFig"", ""r > .5 && r < 1 && x*y < 0"")\; .Define(""yFig"", ""y[rInFig]"")\; .Define(""xFig"", ""x[rInFig]"")\; .Histo2D((""fig"", ""Two quarters of a ring"", 64, -1.1, 1.1, 64, -1.1, 1.1), ""xFig"", ""yFig""); ; cring = ROOT.TCanvas(); ring_h.Draw(""Colz""); cring.SaveAs(""df016_ring.png""); ; print(""Saved figure to df016_ring.png""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; DateFebruary 2018 ; AuthorDanilo Piparo (CERN) ; Definition in file df016_vecOps.py. tutorialsdataframedf016_vecOps.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df016__vecOps_8py.html:90,Guid,Guide,90,doc/master/df016__vecOps_8py.html,https://root.cern,https://root.cern/doc/master/df016__vecOps_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df017_vecOpsHEP.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df017_vecOpsHEP.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use RVecs to plot the transverse momentum of selected particles. ; This tutorial shows how VecOps can be used to slim down the programming model typically adopted in HEP for analysis. In this case we have a dataset containing the kinematic properties of particles stored in individual arrays. We want to plot the transverse momentum of these particles if the energy is greater than 100 MeV.; ; auto filename = gROOT->GetTutorialDir() + ""/dataframe/df017_vecOpsHEP.root"";; auto treename = ""myDataset"";; ; using namespace ROOT;; ; ; void WithTTreeReader(); {; TFile f(filename);; TTreeReader tr(treename, &f);; TTreeReaderArray<double> px(tr, ""px"");; TTreeReaderArray<double> py(tr, ""py"");; TTreeReaderArray<double> E(tr, ""E"");; ; TH1F h(""pt"", ""pt"", 16, 0, 4);; ; while (tr.Next()) {; for (auto i=0U;i < px.GetSize(); ++i) {; if (E[i] > 100) h.Fill(sqrt(px[i]*px[i] + py[i]*py[i]));; }; }; h.DrawCopy();; }; ; void WithRDataFrame(); {; RDataFrame f(treename, filename.Data());; auto CalcPt = [](RVecD &px, RVecD &py, RVecD &E) {; RVecD v;; for (auto i=0U;i < px.size(); ++i) {; if (E[i] > 100) {; v.emplace_back(sqrt(px[i]*px[i] + py[i]*py[i]));; }; }; return v;; };; f.Define(""pt"", CalcPt, {""px"", ""py"", ""E""}); .Histo1D<RVecD>({""pt"", ""pt"", 16, 0, 4}, ""pt"")->DrawCopy();; }; ; void WithRDataFrameVecOps(); {; RDataFrame f(treename, filename.Data());; auto CalcPt = [](RVecD &px, RVecD &py, RVecD &E) {; auto pt = sqrt(px*px + py*py);; return pt[E>100];; };; f.Define(""good_pt"", CalcPt, {""px"", ""py"", ""E""}); .Histo1D<RVecD>({""pt"", ""pt"", 16, 0, 4}, ""good_pt"")->DrawCopy();; }; ; void WithRDataFrameVecOpsJit(); {; RDataFrame f(treename, filename.Data());; f.Define(""good_pt"", ""sqrt(px*px + py*py)[E>100]""); .Histo1D({""pt"", ""pt"", 16, 0, 4}, ""good_pt"")->DrawCopy();; }; ; void df",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df017__vecOpsHEP_8C.html:92,Guid,Guide,92,doc/master/df017__vecOpsHEP_8C.html,https://root.cern,https://root.cern/doc/master/df017__vecOpsHEP_8C.html,1,['Guid'],['Guide']
Usability,. ROOT: tutorials/dataframe/df017_vecOpsHEP.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df017_vecOpsHEP.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use RVecs to plot the transverse momentum of selected particles. ; This tutorial shows how VecOps can be used to slim down the programming model typically adopted in HEP for analysis. In this case we have a dataset containing the kinematic properties of particles stored in individual arrays. We want to plot the transverse momentum of these particles if the energy is greater than 100 MeV. ; Definition in file df017_vecOpsHEP.py. tutorialsdataframedf017_vecOpsHEP.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df017__vecOpsHEP_8py.html:93,Guid,Guide,93,doc/master/df017__vecOpsHEP_8py.html,https://root.cern,https://root.cern/doc/master/df017__vecOpsHEP_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df018_customActions.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df018_customActions.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Implement a custom action to fill THns. ; This tutorial shows how to implement a custom action. As an example, we build a helper for filling THns.; ; // This is a custom action which respects a well defined interface. It supports parallelism,; // in the sense that it behaves correctly if implicit multi threading is enabled.; // We template it on:; // - The type of the internal THnT(s); // - The dimension of the internal THnT(s); // Note the plural: in presence of a MT execution, internally more than a single THnT is created.; template <typename T, unsigned int NDIM>; class THnHelper : public ROOT::Detail::RDF::RActionImpl<THnHelper<T, NDIM>> {; public:; /// This is a handy, expressive shortcut.; using THn_t = THnT<T>;; /// This type is a requirement for every helper.; using Result_t = THn_t;; ; private:; std::vector<std::shared_ptr<THn_t>> fHistos; // one per data processing slot; ; public:; /// This constructor takes all the parameters necessary to build the THnTs. In addition, it requires the names of; /// the columns which will be used.; THnHelper(std::string_view name, std::string_view title, std::array<int, NDIM> nbins, std::array<double, NDIM> xmins,; std::array<double, NDIM> xmax); {; const auto nSlots = ROOT::IsImplicitMTEnabled() ? ROOT::GetThreadPoolSize() : 1;; for (auto i : ROOT::TSeqU(nSlots)) {; fHistos.emplace_back(std::make_shared<THn_t>(std::string(name).c_str(), std::string(title).c_str(),; NDIM, nbins.data(), xmins.data(), xmax.data()));; (void)i;; }; }; THnHelper(THnHelper &&) = default;; THnHelper(const THnHelper &) = delete;; std::shared_ptr<THn_t> GetResultPtr() const { return fHistos[0]; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; /// This is a method executed at every entry; templa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df018__customActions_8C.html:96,Guid,Guide,96,doc/master/df018__customActions_8C.html,https://root.cern,https://root.cern/doc/master/df018__customActions_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df019_Cache.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df019_Cache.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Cache a processed RDataFrame in memory for further usage. ; This tutorial shows how the content of a data frame can be cached in memory in form of a dataframe. The content of the columns is stored in memory in contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation is performed.; Creating a cached data frame storing all of its content deserialised and uncompressed in memory is particularly useful when dealing with datasets of a moderate size (small enough to fit the RAM) over which several explorative loops need to be performed as fast as possible. In addition, caching can be useful when no file on disk needs to be created as a side effect of checkpointing part of the analysis.; All steps in the caching are lazy, i.e. the cached data frame is actually filled only when the event loop is triggered on it.; ; void df019_Cache(); {; // We create a data frame on top of the hsimple example.; auto hsimplePath = gROOT->GetTutorialDir();; hsimplePath += ""/hsimple.root"";; ROOT::RDataFrame df(""ntuple"", hsimplePath.Data());; ; // We apply a simple cut and define a new column.; auto df_cut = df.Filter([](float py) { return py > 0.f; }, {""py""}); .Define(""px_plus_py"", [](float px, float py) { return px + py; }, {""px"", ""py""});; ; // We cache the content of the dataset. Nothing has happened yet: the work to accomplish; // has been described. As for `Snapshot`, the types and columns can be written out explicitly; // or left for the jitting to handle (`df_cached` is intentionally unused - it shows how; // to create a *cached* dataframe specifying column types explicitly):; auto df_cached = df_cut.Cache<float, float>({""px_plus_py"", ""py""});; auto df_cached_implicit = df_cut.Cache();; auto h = df_cached_implicit.Histo1D<float>(""px_plus_py"");; ; // Now ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df019__Cache_8C.html:88,Guid,Guide,88,doc/master/df019__Cache_8C.html,https://root.cern,https://root.cern/doc/master/df019__Cache_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df019_Cache.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df019_Cache.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Cache a processed RDataFrame in memory for further usage. ; This tutorial shows how the content of a data frame can be cached in memory in form of a dataframe. The content of the columns is stored in memory in contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation is performed.; Creating a cached data frame storing all of its content deserialised and uncompressed in memory is particularly useful when dealing with datasets of a moderate size (small enough to fit the RAM) over which several explorative loops need to be performed as fast as possible. In addition, caching can be useful when no file on disk needs to be created as a side effect of checkpointing part of the analysis.; All steps in the caching are lazy, i.e. the cached data frame is actually filled only when the event loop is triggered on it.; ; import ROOT; import os; ; # We create a data frame on top of the hsimple example.; hsimplePath = os.path.join(str(ROOT.gROOT.GetTutorialDir().Data()), ""hsimple.root""); df = ROOT.RDataFrame(""ntuple"", hsimplePath); ; # We apply a simple cut and define a new column.; df_cut = df.Filter(""py > 0.f"")\; .Define(""px_plus_py"", ""px + py""); ; # We cache the content of the dataset. Nothing has happened yet: the work to accomplish; # has been described.; df_cached = df_cut.Cache(); ; h = df_cached.Histo1D(""px_plus_py""); ; # Now the event loop on the cached dataset is triggered by accessing the histogram.; # This event triggers the loop on the `df` data frame lazily.; c = ROOT.TCanvas(); h.Draw(); c.SaveAs(""df019_Cache.png""); ; print(""Saved figure to df019_Cache.png""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; . DateJune 2018 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df019__Cache_8py.html:89,Guid,Guide,89,doc/master/df019__Cache_8py.html,https://root.cern,https://root.cern/doc/master/df019__Cache_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df020_helpers.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df020_helpers.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show usage of RDataFrame's helper tools, contained in ROOT/RDFHelpers.hxx. ; ; void df020_helpers(); {; // First of all, we create a dataframe with 3 entries and define two simple columns; const auto nEntries = 3;; ROOT::RDataFrame _df(nEntries);; auto df = _df.Define(""one"", [] { return 1; }).Define(""two"", [] { return 2; });; ; // *** Not ***; // This helper takes a callable `f` (which must return a `bool`) and produces a new callable which takes the same; // arguments as `f` but returns its negated result. `Not` is useful to invert the check performed by a given Filter.; // Here we define a simple lambda that checks whether a value is equal to 1, and invert it with Not:; auto isOne = [] (int a) { return a == 1; };; auto isNotOne = ROOT::RDF::Not(isOne);; ; // Both `isOne` and `isNotOne` are callables that we can use in `Filters`:; auto c1 = df.Filter(isOne, {""one""}).Count();; auto c2 = df.Filter(isNotOne, {""two""}).Count();; // Both counts are equal to the total number of entries, as both Filters always pass.; R__ASSERT(*c1 == nEntries);; R__ASSERT(*c2 == nEntries);; ; // *** PassAsVec ***; // Consider the following function, which checks if a vector consists of two elements equal to 1 and 2:; auto checkOneTwo = [] (const std::vector<int> &v) { return v.size() == 2 && v[0] == 1 && v[1] == 2; };; // The following line, although it looks reasonable, would _not_ run correctly:; // df.Filter(checkOneTwo, {""one"", ""two""});; // The reason is that `Filter(..., {""one"", ""two""})` expects a callable that takes exactly two integers, while; // `checkOneTwo` actually takes a vector of integers (i.e. it does not have the right signature).; // PassAsVec helps passing down the single values ""one"", ""two"" to `checkOneTwo` as a collection: it takes a callable; // `f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df020__helpers_8C.html:90,Guid,Guide,90,doc/master/df020__helpers_8C.html,https://root.cern,https://root.cern/doc/master/df020__helpers_8C.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df021_createTGraph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df021_createTGraph.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Fill a TGraph using RDataFrame. ; ; ; ; void df021_createTGraph(); {; ROOT::EnableImplicitMT(2);; ; ROOT::RDataFrame d(160);; ; // Create a trivial parabola; auto dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x"");; ; auto graph = dd.Graph(""x"", ""y"");; ; // This tutorial is ran with multithreading enabled. The order in which points are inserted is not known, so to have a meaningful representation points are sorted.; graph->Sort();; auto c = new TCanvas();; graph->DrawClone(""APL"");; }; d#define d(i)Definition RSha256.hxx:102; c#define c(i)Definition RSha256.hxx:101; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TCanvasThe Canvas class.Definition TCanvas.h:23; ROOT::EnableImplicitMTvoid EnableImplicitMT(UInt_t numthreads=0)Enable ROOT's implicit multi-threading for all objects and methods that provide an internal paralleli...Definition TROOT.cxx:539; df021_createTGraphDefinition df021_createTGraph.py:1; graphDefinition graph.py:1; . DateJuly 2018 ; AuthorsEnrico Guiraud, Danilo Piparo (CERN), Massimo Tumolo (Politecnico di Torino) ; Definition in file df021_createTGraph.C. tutorialsdataframedf021_createTGraph.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df021__createTGraph_8C.html:95,Guid,Guide,95,doc/master/df021__createTGraph_8C.html,https://root.cern,https://root.cern/doc/master/df021__createTGraph_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df021_createTGraph.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df021_createTGraph.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Fill a TGraph using RDataFrame. ; ; import ROOT; ; ROOT.ROOT.EnableImplicitMT(2); d = ROOT.RDataFrame(160); ; # Create a trivial parabola; dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; graph = dd.Graph(""x"", ""y""); ; # This tutorial is ran with multithreading enabled. The order in which points are inserted is not known, so to have a meaningful representation points are sorted.; c = ROOT.TCanvas(); graph.Sort(); graph.Draw(""APL""); c.SaveAs(""df021_createTGraph.png""); ; print(""Saved figure to df021_createTGraph.png""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; . DateJuly 2018 ; AuthorsEnrico Guiraud, Danilo Piparo (CERN), Massimo Tumolo (Politecnico di Torino) ; Definition in file df021_createTGraph.py. tutorialsdataframedf021_createTGraph.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df021__createTGraph_8py.html:96,Guid,Guide,96,doc/master/df021__createTGraph_8py.html,https://root.cern,https://root.cern/doc/master/df021__createTGraph_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df022_useKahan.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df022_useKahan.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Implement a custom action that evaluates a Kahan sum. ; This tutorial shows how to implement a Kahan summation custom action.; ; template <typename T>; class KahanSum final : public ROOT::Detail::RDF::RActionImpl<class KahanSum<T>> {; public:; /// This type is a requirement for every helper.; using Result_t = T;; ; private:; std::vector<T> fPartialSums;; std::vector<T> fCompensations;; int fNSlots;; ; std::shared_ptr<T> fResultSum;; ; void KahanAlgorithm(const T &x, T &sum, T &compensation){; T y = x - compensation;; T t = sum + y;; compensation = (t - sum) - y;; sum = t;; }; ; public:; KahanSum(KahanSum &&) = default;; KahanSum(const KahanSum &) = delete;; ; KahanSum(const std::shared_ptr<T> &r) : fResultSum(r); {; static_assert(std::is_floating_point<T>::value, ""Kahan sum makes sense only on floating point numbers"");; ; fNSlots = ROOT::IsImplicitMTEnabled() ? ROOT::GetThreadPoolSize() : 1;; fPartialSums.resize(fNSlots, 0.);; fCompensations.resize(fNSlots, 0.);; }; ; std::shared_ptr<Result_t> GetResultPtr() const { return fResultSum; }; ; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; ; void Exec(unsigned int slot, T x); {; KahanAlgorithm(x, fPartialSums[slot], fCompensations[slot]);; }; ; template <typename V=T, std::enable_if_t<ROOT::Internal::RDF::IsDataContainer<V>::value, int> = 0>; void Exec(unsigned int slot, const T &vs); {; for (auto &&v : vs) {; Exec(slot, v);; }; }; ; void Finalize(); {; T sum(0) ;; T compensation(0);; for (int i = 0; i < fNSlots; ++i) {; KahanAlgorithm(fPartialSums[i], sum, compensation);; }; *fResultSum = sum;; }; ; std::string GetActionName() { return ""KahanSum""; }; };; ; void df022_useKahan(); {; // We enable implicit parallelism; ROOT::EnableImplicitMT(2);; ; ROOT::RDataFrame d(20);; auto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df022__useKahan_8C.html:91,Guid,Guide,91,doc/master/df022__useKahan_8C.html,https://root.cern,https://root.cern/doc/master/df022__useKahan_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df023_aggregate.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df023_aggregate.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Aggregate action to specify arbitrary data aggregations. ; This tutorial shows how to use the Aggregate action to evaluate the product of all the elements of a column. This operation may be performed using a Reduce action, however aggregate is used for the sake of the tutorial; ; void df023_aggregate(); {; ; // Column to be aggregated; const std::string columnName = ""x"";; ; ROOT::EnableImplicitMT(2);; auto rdf = ROOT::RDataFrame(5);; auto d = rdf.Define(columnName, ""rdfentry_ + 1."");; ; // Aggregator function. It receives an accumulator (acc) and a column value (x). The variable acc is shared among the; // calls, so the function has to specify how the value has to be aggregated in the accumulator.; auto aggregator = [](double acc, double x) { return acc * x; };; ; // If multithread is enabled, the aggregator function will be called by more threads and will produce a vector of; // partial accumulators. The merger function performs the final aggregation of these partial results.; auto merger = [](std::vector<double> &accumulators) {; auto size = accumulators.size();; for (int i = 1; i < size; ++i) {; accumulators[0] *= accumulators[i];; }; };; ; // The accumulator is initialized at this value by every thread.; double initValue = 1.;; ; // Multiplies all elements of the column ""x""; auto result = d.Aggregate(aggregator, merger, columnName, initValue);; ; std::cout << *result << std::endl;; }; d#define d(i)Definition RSha256.hxx:102; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df023__aggregate_8C.html:92,Guid,Guide,92,doc/master/df023__aggregate_8C.html,https://root.cern,https://root.cern/doc/master/df023__aggregate_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df024_Display.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df024_Display.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Display action to inspect entry values. ; ; void df024_Display(); {; // Setting up a Dataframe with some data; unsigned long long y = 1;; int x = 1;; double w = 1;; double z = 1;; ROOT::RDataFrame df(10);; auto d = df.Define(""y"", [&y]() { return y *= 100; }) // A column with ulongs; .Define(""x"",; [&x]() {; return std::vector<int>({x++, x++, x++, x++});; }) // A column with four-elements collection; .Define(""w"", [&w]() { return w *= 1.8; }) // A column with doubles; .Define(""z"", [&z]() {; z *= 1.1;; return std::vector<std::vector<double>>({{z, ++z}, {z, ++z}, {z, ++z}});; }); // A column of matrices; ; // Preparing the RResultPtr<RDisplay> object with all columns and default number of entries; auto d1 = d.Display("""");; // Preparing the RResultPtr<RDisplay> object with two columns and default number of entries; auto d2 = d.Display({""x"", ""y""});; ; // Printing the short representations, the event loop will run; std::cout << ""The following is the representation of all columns with the default nr of entries"" << std::endl;; d1->Print();; std::cout << ""\n\nThe following is the representation of two columns with the default nr of entries"" << std::endl;; d2->Print();; }; d#define d(i)Definition RSha256.hxx:102; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; df024_DisplayDefinition df024_Display.py:1; ; The following is the representation of all columns with the default nr of entries; +-----+-----------+----+-------------+--------------------------+; | Row | w | x | y | z | ; +-----+-----------+----+-------------+----------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df024__Display_8C.html:90,Guid,Guide,90,doc/master/df024__Display_8C.html,https://root.cern,https://root.cern/doc/master/df024__Display_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df024_Display.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df024_Display.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Display action to inspect entry values. ; This tutorial shows how to use the Display action; ; import ROOT; ; # Setting up a Dataframe with some data; ROOT.gInterpreter.ProcessLine('''; unsigned long long y = 1;; int x = 1;; double w = 1;; double z = 1;; ROOT::RDataFrame df(10);; auto d = df.Define(""y"", [&y]() { return y *= 100; }) // A column with ulongs; .Define(""x"",; [&x]() {; return std::vector<int>({x++, x++, x++, x++});; }) // A column with four-elements collection; .Define(""w"", [&w]() { return w *= 1.8; }) // A column with doubles; .Define(""z"", [&z]() {; z *= 1.1;; return std::vector<std::vector<double>>({{z, ++z}, {z, ++z}, {z, ++z}});; }); // A column of matrices; '''); ; d = ROOT.d; ; # Preparing the RResultPtr<RDisplay> object with all columns and default number of entries; d1 = d.Display(""""); # Preparing the RResultPtr<RDisplay> object with two columns and default number of entries; cols = ROOT.vector('string')(); cols.push_back(""x""); cols.push_back(""y"");; d2 = d.Display(cols); ; # Printing the short representations, the event loop will run; print(""The following is the representation of all columns with the default nr of entries""); d1.Print(); print(""\n\nThe following is the representation of two columns with the default nr of entries""); d2.Print(); +-----+-----------+----+-------------+--------------------------+; | Row | w | x | y | z | ; +-----+-----------+----+-------------+--------------------------+; | 0 | 1.800000 | 1 | 100 | { 1.1000000, 2.1000000 } | ; | | | 2 | | { 2.1000000, 3.1000000 } | ; | | | 3 | | { 3.1000000, 4.1000000 } | ; | | | 4 | | | ; +-----+-----------+----+-------------+--------------------------+; | 1 | 3.240000 | 5 | 10000 | { 4.5100000, 5.5100000 } | ; | | | 6 | | { 5.5100000, 6.5100",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df024__Display_8py.html:91,Guid,Guide,91,doc/master/df024__Display_8py.html,https://root.cern,https://root.cern/doc/master/df024__Display_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df025_RNode.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df025_RNode.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Manipulate RDF objects in functions, loops and conditional branches. ; Each RDataFrame object has its own type. It helps with performance, but sometimes it gets in the way of writing simple code that manages RDF objects. Luckily, every RDF object can be converted to the generic RNode type. This tutorial shows how to take advantage of RNode to easily manipulate RDataFrames.; ; /// A generic function that takes an RDF object and applies a string filter; ROOT::RDF::RNode AddFilter(ROOT::RDF::RNode node, string_view filterStr); {; return node.Filter(filterStr);; }; ; void df025_RNode(); {; ROOT::RDataFrame df(8);; ; // Using the generic AddFilter helper function defined above: RNode in, RNode out; auto f1 = AddFilter(df, ""rdfentry_ > 0"");; auto f2 = f1.Filter([](ULong64_t e) { return e > 1; }, {""rdfentry_""});; ; // Conditionally applying a filter is simple with ROOT::RDF::RNode; bool someCondition = true;; auto maybe_filtered = ROOT::RDF::RNode(f2);; if (someCondition); maybe_filtered = maybe_filtered.Filter(""rdfentry_ > 3"");; ; // Adding new columns with Define in a loop is simple thanks to ROOT::RDF::RNode; auto with_columns = ROOT::RDF::RNode(maybe_filtered);; for (auto i = 0; i < 3; ++i); with_columns = with_columns.Define(""x"" + std::to_string(i), ""42"");; ; // RNodes can be used exactly like any other RDF object; std::cout << ""Entries passing the selection: "" << with_columns.Count().GetValue() << std::endl;; }; e#define e(i)Definition RSha256.hxx:103; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; ROOT::RDF::RInterfaceThe public interface to the RDataFrame federation of classes.Definition RInterface.hxx:113; ROOT::RDF::RInterface::FilterRInterface< RDFDetail::RFilter< F, Proxied >, DS_t > Filter(F f, const ColumnNames_t &columns={}",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df025__RNode_8C.html:88,Guid,Guide,88,doc/master/df025__RNode_8C.html,https://root.cern,https://root.cern/doc/master/df025__RNode_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df026_AsNumpyArrays.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df026_AsNumpyArrays.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Read data from RDataFrame into Numpy arrays. ; ; import ROOT; from sys import exit; ; # Let's create a simple dataframe with ten rows and two columns; df = ROOT.RDataFrame(10) \; .Define(""x"", ""(int)rdfentry_"") \; .Define(""y"", ""1.f/(1.f+rdfentry_)""); ; # Next, we want to access the data from Python as Numpy arrays. To do so, the; # content of the dataframe is converted using the AsNumpy method. The returned; # object is a dictionary with the column names as keys and 1D numpy arrays with; # the content as values.; npy = df.AsNumpy(); print(""Read-out of the full RDataFrame:\n{}\n"".format(npy)); ; # Since reading out data to memory is expensive, always try to read-out only what; # is needed for your analysis. You can use all RDataFrame features to reduce your; # dataset, e.g., the Filter transformation. Furthermore, you can can pass to the; # AsNumpy method a whitelist of column names with the option `columns` or a blacklist; # with column names with the option `exclude`.; df2 = df.Filter(""x>5""); npy2 = df2.AsNumpy(); print(""Read-out of the filtered RDataFrame:\n{}\n"".format(npy2)); ; npy3 = df2.AsNumpy(columns=[""x""]); print(""Read-out of the filtered RDataFrame with the columns option:\n{}\n"".format(npy3)); ; npy4 = df2.AsNumpy(exclude=[""x""]); print(""Read-out of the filtered RDataFrame with the exclude option:\n{}\n"".format(npy4)); ; # You can read-out all objects from ROOT files since these are wrapped by PyROOT; # in the Python world. However, be aware that objects other than fundamental types,; # such as complex C++ objects and not int or float, are costly to read-out.; ROOT.gInterpreter.Declare(""""""; // Inject the C++ class CustomObject in the C++ runtime.; class CustomObject {; public:; int x = 42;; };; // Create a fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df026__AsNumpyArrays_8py.html:97,Guid,Guide,97,doc/master/df026__AsNumpyArrays_8py.html,https://root.cern,https://root.cern/doc/master/df026__AsNumpyArrays_8py.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/dataframe/df027_SQliteDependencyOverVersion.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df027_SQliteDependencyOverVersion.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Plot the ROOT downloads based on the version reading a remote sqlite3 file. ; This tutorial uses the Reduce method which allows to extract the minimum time stored in the SQlite3 database. The next step is to create a TH1F Histogram, which will be filled with the values stored in two different columns from the database. This procedure is simplified with a lambda expression that takes as parameters the values stored in the ""Time"" and ""Version"" columns.; ; ; void df027_SQliteDependencyOverVersion (); {; auto rdfb = ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT * FROM accesslog;"");; ; auto minTimeStr = *rdfb.Reduce([](std::string a, std::string b) {return std::min(a, b);}, ""Time"", std::string(""Z""));; ; std::cout << ""Minimum time is '"" << minTimeStr << ""'"" << std::endl;; ; double minTime = TDatime(minTimeStr.c_str()).Convert();; double maxTime = minTime + 3600.*24*365.25*4; // cover approx 4 years from minimal time; ; auto rdf = rdfb.Define(""datime"", [](const std::string &time){return TDatime(time.c_str()).Convert();}, {""Time""});; ; auto h614 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.14"");}, {""Version""}); .Histo1D({""h614"", ""Download time for version 6.14"", 64, minTime, maxTime}, {""datime""});; ; auto h616 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.16"");}, {""Version""}); .Histo1D({""h616"", ""Download time for version 6.16"", 64, minTime, maxTime}, {""datime""});; ; auto h618 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.18"");}, {""Version""}); .Histo1D({""h618"", ""Download time for version 6.18"", 64, minTime, maxTime}, {""datime""});; ; auto customize_histo = [](TH1D &histo) {; auto *xaxis = histo.GetXaxis();; xaxis->SetTimeDisplay(1);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C.html:110,Guid,Guide,110,doc/master/df027__SQliteDependencyOverVersion_8C.html,https://root.cern,https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C.html,2,"['Guid', 'simpl']","['Guide', 'simplified']"
Usability,". ROOT: tutorials/dataframe/df027_SQliteDependencyOverVersion.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df027_SQliteDependencyOverVersion.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_dataframe; 3/// \notebook -js; 4/// Plot the ROOT downloads based on the version reading a remote sqlite3 file.; 5///; 6/// This tutorial uses the Reduce method which allows to extract the minimum time; 7/// stored in the SQlite3 database.; 8/// The next step is to create a TH1F Histogram, which will be filled with the values stored in; 9/// two different columns from the database. This procedure is simplified with a lambda; 10/// expression that takes as parameters the values stored in the ""Time"" and ""Version"" columns.; 11///; 12/// \macro_code; 13/// \macro_image; 14///; 15/// \date August 2018; 16/// \authors Alexandra-Maria Dobrescu, Sergey Linev; 17 ; 18 ; 19void df027_SQliteDependencyOverVersion (); 20{; 21 auto rdfb = ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT * FROM accesslog;"");; 22 ; 23 auto minTimeStr = *rdfb.Reduce([](std::string a, std::string b) {return std::min(a, b);}, ""Time"", std::string(""Z""));; 24 ; 25 std::cout << ""Minimum time is '"" << minTimeStr << ""'"" << std::endl;; 26 ; 27 double minTime = TDatime(minTimeStr.c_str()).Convert();; 28 double maxTime = minTime + 3600.*24*365.25*4; // cover approx 4 years from minimal time; 29 ; 30 auto rdf = rdfb.Define(""datime"", [](const std::string &time){return TDatime(time.c_str()).Convert();}, {""Time""});; 31 ; 32 auto h614 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.14"");}, {""Version""}); 33 .Histo1D({""h614"", ""Download time for version 6.14"", 64, minTime, maxTime}, {""datime""});; 34 ; 35 auto h616 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.16"");}, {""Version""}); 36 .Histo1D({""h616"", ""Download time for version 6.16"", 64, minTime, maxTime}, {""datime""});; 37 ; 38 auto h618 = rdf.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C_source.html:107,Guid,Guide,107,doc/master/df027__SQliteDependencyOverVersion_8C_source.html,https://root.cern,https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C_source.html,2,"['Guid', 'simpl']","['Guide', 'simplified']"
Usability,". ROOT: tutorials/dataframe/df028_SQliteIPLocation.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df028_SQliteIPLocation.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Plot the location of ROOT downloads reading a remote sqlite3 file. ; The world map is held by a TH2Poly histogram which, after filling, will show the world wide dispersion of ROOT's users. To histogram filling, is done thanks to a lambda expression having as input parameters the two columns of the database: ""IPLongitude' - for the longitude, and the; ""IPLatitude"" - for the latitude.; The data related to the latitude and the longitude has been provided from the; log files storing the users IP.; This product includes GeoLite2 data created by MaxMind, available from; <a href=""http://www.maxmind.com"">http://www.maxmind.com.; ; void df028_SQliteIPLocation() {; ; auto rdf = ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT * FROM accesslog;"");; ; auto f = TFile::Open(""http://root.cern/files/WM.root"");; auto worldMap = f->Get<TH2Poly>(""WMUSA"");; ; auto fillIPLocation = [&worldMap] ( const std::string &sLongitude, const std::string &sLatitude ) {; if (!( sLongitude == """" ) && !( sLatitude == """" )) {; auto latitude = std::stof(sLatitude);; auto longitude = std::stof(sLongitude);; worldMap->Fill(longitude, latitude);; }; };; ; rdf.Foreach( fillIPLocation, { ""IPLongitude"", ""IPLatitude"" } );; ; auto worldMapCanvas = new TCanvas();; worldMapCanvas->SetLogz();; worldMap->SetTitle(""ROOT Downloads per Location (GitHub excluded);Longitude;Latitude"");; worldMap->DrawClone(""colz"");; }; f#define f(i)Definition RSha256.hxx:104; TCanvasThe Canvas class.Definition TCanvas.h:23; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TH2Poly2D Hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df028__SQliteIPLocation_8C.html:99,Guid,Guide,99,doc/master/df028__SQliteIPLocation_8C.html,https://root.cern,https://root.cern/doc/master/df028__SQliteIPLocation_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df029_SQlitePlatformDistribution.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df029_SQlitePlatformDistribution.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use RDataFrame to display data about ROOT downloads. ; In order to display the Platform Distribution of ROOT, we choose to create two TH1F histograms: one that includes all types of platforms, other filtering and classifying them. This procedure is using a lambda expression taking as parameter the values stored in the ""Platform"" column from the database. At the end, the histograms are filled with their specific demand regarding the platform's type.; ; void df029_SQlitePlatformDistribution() {; ; auto rdf = ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT * FROM accesslog;"");; ; TH1F hRootPlatform(""hrootPlatform"", ""Platform Distribution"", 7, 0, -1);; TH1F hShortRootPlatform(""hShortRootPlatform"", ""Short Platform Distribution"", 7, 0, -1);; ; auto fillRootPlatform = [&hRootPlatform, &hShortRootPlatform] ( const std::string &platform ) {; TString Platform = platform;; TString Platform_0(Platform(0,5));; TString Platform_1(Platform(0,6));; TString Platform_2(Platform(0,8));; ; if ( Platform.Contains(""win32"") ){; hShortRootPlatform.Fill(Platform_0,1);; } else if ( Platform.Contains(""Linux"") ){; hShortRootPlatform.Fill(Platform_0,1);; } else if ( Platform.Contains(""source"") ){; hShortRootPlatform.Fill(Platform_1,1);; } else if ( Platform.Contains(""macosx64"") ){; hShortRootPlatform.Fill(Platform_2,1);; } else if ( Platform.Contains(""IRIX64"") ){; hShortRootPlatform.Fill(Platform_1,1);; }; ; hRootPlatform.Fill(Platform,1);; };; ; rdf.Foreach( fillRootPlatform, { ""Platform"" } );; ; auto c1 = new TCanvas();; c1->SetLogy(1);; hRootPlatform.GetXaxis()->LabelsOption(""a"");; hRootPlatform.LabelsDeflate(""X"");; hRootPlatform.DrawClone();; ; auto c2 = new TCanvas();; hShortRootPlatform.GetXaxis(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df029__SQlitePlatformDistribution_8C.html:109,Guid,Guide,109,doc/master/df029__SQlitePlatformDistribution_8C.html,https://root.cern,https://root.cern/doc/master/df029__SQlitePlatformDistribution_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df030_SQliteVersionsOfROOT.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df030_SQliteVersionsOfROOT.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Read an sqlite3 databases with RDataFrame and plot statistics on ROOT downloads. ; Plot the downloads of different ROOT versions reading a remote sqlite3 file with RSqliteDS. Then a TH1F histogram is created and filled using a lambda expression which receives the recorded values in the ""version"" column of the sqlite3 database. The histogram shows the usage of the ROOT development version.; ; void df030_SQliteVersionsOfROOT() {; ; auto rdf =; ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT Version FROM accesslog;"");; ; TH1F hVersionOfRoot(""hVersionOfRoot"", ""Development Versions of ROOT"", 8, 0, -1);; ; auto fillVersionHisto = [&hVersionOfRoot] (const std::string &version) {; TString copyVersion = version;; TString shortVersion(copyVersion(0,4));; hVersionOfRoot.Fill(shortVersion, 1);; };; ; rdf.Foreach( fillVersionHisto, { ""Version"" } );; ; auto VersionOfRootHistogram = new TCanvas();; ; gStyle->SetOptStat(0);; hVersionOfRoot.GetXaxis()->LabelsOption(""a"");; hVersionOfRoot.LabelsDeflate(""X"");; hVersionOfRoot.DrawClone("""");; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TStringBasic string class.Definition TString.h:139; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; ROOT::RDF::FromSqliteRDataFrame FromSqlite(std::string_view fileName, std::string_view query)Factory method to create a SQlite RDataFrame.Definition RSqliteDS.cxx:538; . DateAugust 2018 ; AuthorAlexandra-Maria Dobrescu ; Definition in file df030_SQli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df030__SQliteVersionsOfROOT_8C.html:103,Guid,Guide,103,doc/master/df030__SQliteVersionsOfROOT_8C.html,https://root.cern,https://root.cern/doc/master/df030__SQliteVersionsOfROOT_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df031_Stats.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df031_Stats.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Stats action to extract the statistics of a column. ; Extract the statistics relative to RDataFrame columns and store them in TStatistic instances.; ; void df031_Stats() {; ; // Create a data frame and add two columns: one for the values and one for the weight.; ROOT::RDataFrame r(256);; auto rr = r.Define(""v"", [](ULong64_t e){return e;}, {""rdfentry_""}); .Define(""w"", [](ULong64_t e){return 1./(e+1);}, {""v""});; ; // Now extract the statistics, weighted, unweighted - with and without explicit types.; auto stats_eu = rr.Stats<ULong64_t>(""v"");; auto stats_ew = rr.Stats<ULong64_t, double>(""v"", ""w"");; auto stats_iu = rr.Stats(""v"");; auto stats_iw = rr.Stats(""v"", ""w"");; ; // Now print them: they are all identical of course!; stats_eu->Print();; stats_ew->Print();; stats_iu->Print();; stats_iw->Print();; }; e#define e(i)Definition RSha256.hxx:103; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; df031_StatsDefinition df031_Stats.py:1; ; OBJ: TStatistic Mean = 127.5 +- 4.628 RMS = 74.045 Count = 256 Min = 0 Max = 255; OBJ: TStatistic Mean = 40.8 +- 12.86 RMS = 60.318 Count = 256 Min = 0 Max = 255; OBJ: TStatistic Mean = 127.5 +- 4.628 RMS = 74.045 Count = 256 Min = 0 Max = 255; OBJ: TStatistic Mean = 40.8 +- 12.86 RMS = 60.318 Count = 256 Min = 0 Max = 255; DateApril 2019 ; AuthorDanilo Piparo (CERN) ; Definition in file df031_Stats.C. tutorialsda",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df031__Stats_8C.html:88,Guid,Guide,88,doc/master/df031__Stats_8C.html,https://root.cern,https://root.cern/doc/master/df031__Stats_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df031_Stats.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df031_Stats.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Stats action to extract the statistics of a column. ; Extract the statistics relative to RDataFrame columns and store them in TStatistic instances.; ; import ROOT; ; # Create a data frame and add two columns: one for the values and one for the weight.; r = ROOT.RDataFrame(256);; rr = r.Define(""v"", ""rdfentry_"")\; .Define(""w"", ""return 1./(v+1)""); ; # Now extract the statistics, weighted, unweighted; stats_iu = rr.Stats(""v""); stats_iw = rr.Stats(""v"", ""w""); ; # Now print them: they are all identical of course!; stats_iu.Print(); stats_iw.Print(); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; OBJ: TStatistic Mean = 127.5 +- 4.628 RMS = 74.045 Count = 256 Min = 0 Max = 255; OBJ: TStatistic Mean = 40.8 +- 12.86 RMS = 60.318 Count = 256 Min = 0 Max = 255; DateApril 2019 ; AuthorDanilo Piparo (CERN) ; Definition in file df031_Stats.py. tutorialsdataframedf031_Stats.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df031__Stats_8py.html:89,Guid,Guide,89,doc/master/df031__Stats_8py.html,https://root.cern,https://root.cern/doc/master/df031__Stats_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df032_RDFFromNumpy.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df032_RDFFromNumpy.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Read data from Numpy arrays into RDataFrame. ; ; import ROOT; import numpy as np; ; # Let's create some data in numpy arrays; x = np.array([1, 2, 3], dtype=np.int32); y = np.array([4, 5, 6], dtype=np.float64); ; # Read the data with RDataFrame; # The column names in the RDataFrame are defined by the keys of the dictionary.; # Please note that only fundamental types (int, float, ...) are supported and; # the arrays must have the same length.; df = ROOT.RDF.FromNumpy({'x': x, 'y': y}); ; # You can now use the RDataFrame as usually, e.g. add a column ...; df = df.Define('z', 'x + y'); ; # ... or print the content; df.Display().Print(); ; # ... or save the data as a ROOT file; df.Snapshot('tree', 'df032_RDFFromNumpy.root'); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59; +-----+---+----------+----------+; | Row | x | y | z | ; +-----+---+----------+----------+; | 0 | 1 | 4.000000 | 5.000000 | ; +-----+---+----------+----------+; | 1 | 2 | 5.000000 | 7.000000 | ; +-----+---+----------+----------+; | 2 | 3 | 6.000000 | 9.000000 | ; +-----+---+----------+----------+; DateMarch 2021 ; AuthorStefan Wunsch (KIT, CERN) ; Definition in file df032_RDFFromNumpy.py. tutorialsdataframedf032_RDFFromNumpy.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df032__RDFFromNumpy_8py.html:96,Guid,Guide,96,doc/master/df032__RDFFromNumpy_8py.html,https://root.cern,https://root.cern/doc/master/df032__RDFFromNumpy_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df032_RDFFromNumpy.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df032_RDFFromNumpy.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_dataframe; 3## \notebook; 4## Read data from Numpy arrays into RDataFrame.; 5##; 6## \macro_code; 7## \macro_output; 8##; 9## \date March 2021; 10## \author Stefan Wunsch (KIT, CERN); 11 ; 12import ROOT; 13import numpy as np; 14 ; 15# Let's create some data in numpy arrays; 16x = np.array([1, 2, 3], dtype=np.int32); 17y = np.array([4, 5, 6], dtype=np.float64); 18 ; 19# Read the data with RDataFrame; 20# The column names in the RDataFrame are defined by the keys of the dictionary.; 21# Please note that only fundamental types (int, float, ...) are supported and; 22# the arrays must have the same length.; 23df = ROOT.RDF.FromNumpy({'x': x, 'y': y}); 24 ; 25# You can now use the RDataFrame as usually, e.g. add a column ...; 26df = df.Define('z', 'x + y'); 27 ; 28# ... or print the content; 29df.Display().Print(); 30 ; 31# ... or save the data as a ROOT file; 32df.Snapshot('tree', 'df032_RDFFromNumpy.root'); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59. tutorialsdataframedf032_RDFFromNumpy.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df032__RDFFromNumpy_8py_source.html:93,Guid,Guide,93,doc/master/df032__RDFFromNumpy_8py_source.html,https://root.cern,https://root.cern/doc/master/df032__RDFFromNumpy_8py_source.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df033_Describe.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df033_Describe.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Get information about the dataframe with the convenience method Describe. ; ; import ROOT; ; # Create a dataframe; path = 'root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root'; df = ROOT.RDataFrame('Events', path); ; # Describe the state of the dataframe.; # Note that this operation is not running the event loop.; # Describe returns a DFDescription object, which has e.g. a Print method. See its docs for more information.; df.Describe().Print(); ; # Build a small analysis studying the invariant mass of dimuon systems.; # See tutorial df102_NanoAODDimuonAnalysis for more information.; df = df.Filter('nMuon == 2')\; .Filter('Muon_charge[0] != Muon_charge[1]')\; .Define('Dimuon_mass', 'InvariantMass(Muon_pt, Muon_eta, Muon_phi, Muon_mass)')\; .Filter('Dimuon_mass > 70')\; .Range(1000); ; # Trigger the event loop by asking for the mean of the dimuon mass.; print('\nApproximate mass of the Z boson: {:.2f} GeV\n'.format(; df.Mean('Dimuon_mass').GetValue())); ; # This time we ask for the `shortFormat`, which only prints a brief description of the dataset:; df.Describe().Print(shortFormat=True); formatOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df033__Describe_8py.html:92,Guid,Guide,92,doc/master/df033__Describe_8py.html,https://root.cern,https://root.cern/doc/master/df033__Describe_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df034_SaveGraph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df034_SaveGraph.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Basic SaveGraph usage. ; This tutorial shows how to use the SaveGraph action. SaveGraph inspects the sequence of RDataFrame actions.; ; // First, an RDataFrame computation graph is created with Defines, Filters and methods such as Mean, Count, etc.; // After that, SaveGraph can be called either on the root RDataFrame object or on a specific node of the computation; // graph: in the first case, the graph returned will span the full computation graph, in the second case it will show; // only the branch of the computation graph that the node belongs to.; // If a filename is passed as second argument, the graph is saved to that file, otherwise it is returned as a string.; ; void df034_SaveGraph(); {; ROOT::RDataFrame rd1(1);; auto rd2 = rd1.Define(""Root_def1"", ""1"").Filter(""Root_def1 < 2"", ""Main_Filter"").Define(""Root_def2"", ""1"");; ; auto branch1 = rd2.Define(""Branch_1_def"", ""1"");; auto branch2 = rd2.Define(""Branch_2_def"", ""1"");; ; ROOT::RDF::RResultPtr<double> branch1_1 = branch1.Filter(""Branch_1_def < 2"", ""Filter_1""); .Define(""Branch_1_1_def"", ""1""); .Filter(""1 == Branch_1_1_def % 2"", ""Filter_1_1""); .Mean(""Branch_1_1_def"");; ; ROOT::RDF::RResultPtr<unsigned long long> branch1_2 =; branch1.Define(""Branch_1_2_def"", ""1"").Filter(""Branch_1_2_def < 2"", ""Filter_1_2"").Count();; ; ROOT::RDF::RResultPtr<double> branch2_1 = branch2.Filter(""Branch_2_def < 2"", ""Filter_2""); .Define(""Branch_2_1_def"", ""1""); .Define(""Branch_2_2_def"", ""1""); .Filter(""1 == Branch_2_1_def % 2"", ""Filter_2_1""); .Max(""Branch_2_1_def"");; ; ROOT::RDF::RResultPtr<unsigned long long> branch2_2 = branch2.Count();; ; std::cout << ROOT::RDF::SaveGraph(branch1_1);; ROOT::RDF::SaveGraph(rd1, /*output_file=*/""rdf_savegraph_tutorial.dot"");; // SaveGraph produces content in the standard DOT file fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df034__SaveGraph_8C.html:92,Guid,Guide,92,doc/master/df034__SaveGraph_8C.html,https://root.cern,https://root.cern/doc/master/df034__SaveGraph_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df034_SaveGraph.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df034_SaveGraph.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Basic SaveGraph usage. ; This tutorial shows how to use the SaveGraph action. SaveGraph inspects the sequence of RDataFrame actions.; ; # First, an RDataFrame computation graph is created with Defines, Filters and methods such as Mean, Count, etc.; # After that, SaveGraph can be called either on the root RDataFrame object or on a specific node of the computation; # graph: in the first case, the graph returned will span the full computation graph, in the second case it will show; # only the branch of the computation graph that the node belongs to.; # If a filename is passed as second argument, the graph is saved to that file, otherwise it is returned as a string.; ; import ROOT; ; rd1 = ROOT.RDataFrame(2); ; rd2 = rd1.Define(""Root_def1"", ""1"") \; .Filter(""Root_def1 < 2"", ""Main_Filter"") \; .Define(""Root_def2"", ""1""); ; branch1 = rd2.Define(""Branch_1_def"", ""1""); branch2 = rd2.Define(""Branch_2_def"", ""1""); ; branch1_1 = branch1.Filter(""Branch_1_def < 2"", ""Filter_1"") \; .Define(""Branch_1_1_def"", ""1"") \; .Filter(""1 == Branch_1_1_def % 2"", ""Filter_1_1"") \; .Mean(""Branch_1_1_def"");; ; branch1_2 = branch1.Define(""Branch_1_2_def"", ""1"") \; .Filter(""Branch_1_2_def < 2"", ""Filter_1_2"") \; .Count(); ; branch2_1 = branch2.Filter(""Branch_2_def < 2"", ""Filter_2"") \; .Define(""Branch_2_1_def"", ""1"") \; .Define(""Branch_2_2_def"", ""1"") \; .Filter(""1 == Branch_2_1_def % 2"", ""Filter_2_1"") \; .Max(""Branch_2_1_def""); ; branch2_2 = branch2.Count(); ; print(ROOT.RDF.SaveGraph(branch1_1)); ROOT.RDF.SaveGraph(rd1, ""exampleGraph.dot""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOT::RDF::SaveGraphstd::string SaveGraph(NodeType node)Create a graphviz representation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df034__SaveGraph_8py.html:93,Guid,Guide,93,doc/master/df034__SaveGraph_8py.html,https://root.cern,https://root.cern/doc/master/df034__SaveGraph_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df035_RDFFromPandas.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df035_RDFFromPandas.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Read data from Pandas Data Frame into RDataFrame. ; ; import ROOT; import pandas as pd; ; # Let's create some data in a pandas dataframe; pdf = pd.DataFrame({'x': [1, 2, 3], 'y': [4, 5, 6]}); ; # Convert the Pandas DataFrame to RDataFrame; # The column names are directly copied to the RDF ; # Please note that only fundamental types (int, float, ...) are supported and; # the arrays must have the same length.; df = ROOT.RDF.FromPandas(pdf); ; # You can now use the RDataFrame as usually, e.g. add a column ...; df = df.Define('z', 'x + y'); ; # ... or print the content; df.Display().Print(); ; # ... or save the data as a ROOT file; df.Snapshot('tree', 'df035_RDFFromPandas.root'); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59; +-----+---+---+---+; | Row | x | y | z | ; +-----+---+---+---+; | 0 | 1 | 4 | 5 | ; +-----+---+---+---+; | 1 | 2 | 5 | 7 | ; +-----+---+---+---+; | 2 | 3 | 6 | 9 | ; +-----+---+---+---+; DateFebruary 2024 ; AuthorPere Mato (CERN) ; Definition in file df035_RDFFromPandas.py. tutorialsdataframedf035_RDFFromPandas.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df035__RDFFromPandas_8py.html:97,Guid,Guide,97,doc/master/df035__RDFFromPandas_8py.html,https://root.cern,https://root.cern/doc/master/df035__RDFFromPandas_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df036_missingBranches.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df036_missingBranches.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; ; This example shows how to process a dataset where entries might be incomplete due to one or more missing branches in one or more of the files in the dataset. It shows usage of the FilterAvailable and DefaultValueFor RDataFrame functionalities to act upon the missing entries.; #include <ROOT/RDataFrame.hxx>; #include <TChain.h>; #include <TFile.h>; #include <TTree.h>; ; #include <iostream>; #include <numeric>; ; // A helper class to create the dataset for the tutorial below.; struct Dataset {; ; constexpr static std::array<const char *, 3> fFileNames{""df036_missingBranches_C_file_1.root"",; ""df036_missingBranches_C_file_2.root"",; ""df036_missingBranches_C_file_3.root""};; constexpr static std::array<const char *, 3> fTreeNames{""tree_1"", ""tree_2"", ""tree_3""};; constexpr static auto fTreeEntries{5};; ; Dataset(); {; {; TFile f(fFileNames[0], ""RECREATE"");; TTree t(fTreeNames[0], fTreeNames[0]);; int x{};; int y{};; t.Branch(""x"", &x, ""x/I"");; t.Branch(""y"", &y, ""y/I"");; for (int i = 1; i <= fTreeEntries; i++) {; x = i;; y = 2 * i;; t.Fill();; }; ; t.Write();; }; ; {; TFile f(fFileNames[1], ""RECREATE"");; TTree t(fTreeNames[1], fTreeNames[1]);; int y{};; t.Branch(""y"", &y, ""y/I"");; for (int i = 1; i <= fTreeEntries; i++) {; y = 3 * i;; t.Fill();; }; ; t.Write();; }; ; {; TFile f(fFileNames[2], ""RECREATE"");; TTree t(fTreeNames[2], fTreeNames[2]);; int x{};; t.Branch(""x"", &x, ""x/I"");; for (int i = 1; i <= fTreeEntries; i++) {; x = 4 * i;; t.Fill();; }; ; t.Write();; }; }; ; ~Dataset(); {; for (auto &&fileName : fFileNames); std::remove(fileName);; }; };; ; void df036_missingBranches(); {; // Create the example dataset. Three files are created with one TTree each.; // The first contains branches (x, y), the second only branch y, the third; // ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df036__missingBranches_8C.html:98,Guid,Guide,98,doc/master/df036__missingBranches_8C.html,https://root.cern,https://root.cern/doc/master/df036__missingBranches_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df037_TTreeEventMatching.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df037_TTreeEventMatching.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; ; This example shows processing of a TTree-based dataset with horizontal concatenations (friends) and event matching (based on TTreeIndex). In case the current event being processed does not match one (or more) of the friend datasets, one can use the FilterAvailable and DefaultValueFor functionalities to act upon the situation.; #include <TChain.h>; #include <TFile.h>; #include <TTree.h>; #include <TTreeIndex.h>; ; #include <ROOT/RDataFrame.hxx>; ; #include <iostream>; #include <numeric>; ; // A helper class to create the dataset for the tutorial below.; struct Dataset {; ; constexpr static auto fMainFile{""df037_TTreeEventMatching_C_main.root""};; constexpr static auto fAuxFile1{""df037_TTreeEventMatching_C_aux_1.root""};; constexpr static auto fAuxFile2{""df037_TTreeEventMatching_C_aux_2.root""};; constexpr static auto fMainTreeName{""events""};; constexpr static auto fAuxTreeName1{""auxdata_1""};; constexpr static auto fAuxTreeName2{""auxdata_2""};; ; Dataset(); {; {; TFile f(fMainFile, ""RECREATE"");; TTree mainTree(fMainTreeName, fMainTreeName);; int idx;; int x;; mainTree.Branch(""idx"", &idx, ""idx/I"");; mainTree.Branch(""x"", &x, ""x/I"");; ; idx = 1;; x = 1;; mainTree.Fill();; idx = 2;; x = 2;; mainTree.Fill();; idx = 3;; x = 3;; mainTree.Fill();; ; mainTree.Write();; }; {; // The first auxiliary file has matching indices 1 and 2, but not 3; TFile f(fAuxFile1, ""RECREATE"");; TTree auxTree(fAuxTreeName1, fAuxTreeName1);; int y;; int idx;; auxTree.Branch(""idx"", &idx, ""idx/I"");; auxTree.Branch(""y"", &y, ""y/I"");; ; idx = 1;; y = 4;; auxTree.Fill();; idx = 2;; y = 5;; auxTree.Fill();; ; auxTree.Write();; }; {; // The second auxiliary file has matching indices 1 and 3, but not 2; TFile f(fAuxFile2, ""RECREATE"");; TTree auxTree(fAuxTreeName2, fA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df037__TTreeEventMatching_8C.html:101,Guid,Guide,101,doc/master/df037__TTreeEventMatching_8C.html,https://root.cern,https://root.cern/doc/master/df037__TTreeEventMatching_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df101_h1Analysis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df101_h1Analysis.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how to express ROOT's standard H1 analysis with RDataFrame. ; ; auto Select = [](ROOT::RDataFrame &dataFrame) {; using namespace ROOT;; ; auto ret = dataFrame.Filter(""TMath::Abs(md0_d - 1.8646) < 0.04""); .Filter(""ptds_d > 2.5""); .Filter(""TMath::Abs(etads_d) < 1.5""); .Filter([](int ik, int ipi, RVecI& nhitrp) { return nhitrp[ik - 1] * nhitrp[ipi - 1] > 1; },; {""ik"", ""ipi"", ""nhitrp""}); .Filter([](int ik, RVecF& rstart, RVecF& rend) { return rend[ik - 1] - rstart[ik - 1] > 22; },; {""ik"", ""rstart"", ""rend""}); .Filter([](int ipi, RVecF& rstart, RVecF& rend) { return rend[ipi - 1] - rstart[ipi - 1] > 22; },; {""ipi"", ""rstart"", ""rend""}); .Filter([](int ik, RVecF& nlhk) { return nlhk[ik - 1] > 0.1; }, {""ik"", ""nlhk""}); .Filter([](int ipi, RVecF& nlhpi) { return nlhpi[ipi - 1] > 0.1; }, {""ipi"", ""nlhpi""}); .Filter([](int ipis, RVecF& nlhpi) { return nlhpi[ipis - 1] > 0.1; }, {""ipis"", ""nlhpi""}); .Filter(""njets >= 1"");; ; return ret;; };; ; const Double_t dxbin = (0.17 - 0.13) / 40; // Bin-width; ; Double_t fdm5(Double_t *xx, Double_t *par); {; Double_t x = xx[0];; if (x <= 0.13957); return 0;; Double_t xp3 = (x - par[3]) * (x - par[3]);; Double_t res =; dxbin * (par[0] * pow(x - 0.13957, par[1]) + par[2] / 2.5066 / par[4] * exp(-xp3 / 2 / par[4] / par[4]));; return res;; }; ; Double_t fdm2(Double_t *xx, Double_t *par); {; static const Double_t sigma = 0.0012;; Double_t x = xx[0];; if (x <= 0.13957); return 0;; Double_t xp3 = (x - 0.1454) * (x - 0.1454);; Double_t res = dxbin * (par[0] * pow(x - 0.13957, 0.25) + par[1] / 2.5066 / sigma * exp(-xp3 / 2 / sigma / sigma));; return res;; }; ; void FitAndPlotHdmd(TH1 &hdmd); {; // create the canvas for the h1analysis fit; gStyle->SetOptFit();; auto c1 = new TCanvas(""c1"", ""h1analysis analysis"", 10, 10, 800",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df101__h1Analysis_8C.html:93,Guid,Guide,93,doc/master/df101__h1Analysis_8C.html,https://root.cern,https://root.cern/doc/master/df101__h1Analysis_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df102_NanoAODDimuonAnalysis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df102_NanoAODDimuonAnalysis.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how NanoAOD files can be processed with RDataFrame. ; This tutorial illustrates how NanoAOD files can be processed with ROOT dataframes. The NanoAOD-like input files are filled with 66 mio. events from CMS OpenData containing muon candidates part of 2012 dataset (DOI: 10.7483/OPENDATA.CMS.YLIC.86ZZ and DOI: 10.7483/OPENDATA.CMS.M5AD.Y3V3). The macro matches muon pairs and produces an histogram of the dimuon mass spectrum showing resonances up to the Z mass. Note that the bump at 30 GeV is not a resonance but a trigger effect.; More details about the dataset can be found on the CERN Open Data portal. ; #include ""ROOT/RDataFrame.hxx""; #include ""ROOT/RDFHelpers.hxx""; #include ""ROOT/RVec.hxx""; #include ""TCanvas.h""; #include ""TH1D.h""; #include ""TLatex.h""; #include ""TStyle.h""; ; using namespace ROOT::VecOps;; ; void df102_NanoAODDimuonAnalysis(); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; // Create dataframe from NanoAOD files; ROOT::RDataFrame df(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/""; ""Run2012BC_DoubleMuParked_Muons.root"");; ; // Add ProgressBar; ROOT::RDF::Experimental::AddProgressBar(df);; ; // For simplicity, select only events with exactly two muons and require opposite charge; auto df_2mu = df.Filter(""nMuon == 2"", ""Events with exactly two muons"");; auto df_os = df_2mu.Filter(""Muon_charge[0] != Muon_charge[1]"", ""Muons with opposite charge"");; ; // Compute invariant mass of the dimuon system; auto df_mass = df_os.Define(""Dimuon_mass"", InvariantMass<float>, {""Muon_pt"", ""Muon_eta"", ""Muon_phi"", ""Muon_mass""});; ; // Make histogram of dimuon mass spectrum. Note how we can set title and axis labels in one go; auto h = df_mass.Histo1D({""Dimuon_mass"", """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8C.html:104,Guid,Guide,104,doc/master/df102__NanoAODDimuonAnalysis_8C.html,https://root.cern,https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df102_NanoAODDimuonAnalysis.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df102_NanoAODDimuonAnalysis.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how NanoAOD files can be processed with RDataFrame. ; This tutorial illustrates how NanoAOD files can be processed with ROOT dataframes. The NanoAOD-like input files are filled with 66 mio. events from CMS OpenData containing muon candidates part of 2012 dataset (DOI: 10.7483/OPENDATA.CMS.YLIC.86ZZ and DOI: 10.7483/OPENDATA.CMS.M5AD.Y3V3). The macro matches muon pairs and produces an histogram of the dimuon mass spectrum showing resonances up to the Z mass. Note that the bump at 30 GeV is not a resonance but a trigger effect.; More details about the dataset can be found on the CERN Open Data portal. ; import ROOT; ; # Enable multi-threading; ROOT.ROOT.EnableImplicitMT(); ; # Create dataframe from NanoAOD files; df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""); ; # For simplicity, select only events with exactly two muons and require opposite charge; df_2mu = df.Filter(""nMuon == 2"", ""Events with exactly two muons""); df_os = df_2mu.Filter(""Muon_charge[0] != Muon_charge[1]"", ""Muons with opposite charge""); ; # Compute invariant mass of the dimuon system; df_mass = df_os.Define(""Dimuon_mass"", ""InvariantMass(Muon_pt, Muon_eta, Muon_phi, Muon_mass)""); ; # Make histogram of dimuon mass spectrum. Note how we can set titles and axis labels in one go.; h = df_mass.Histo1D((""Dimuon_mass"", ""Dimuon mass;m_{#mu#mu} (GeV);N_{Events}"", 30000, 0.25, 300), ""Dimuon_mass""); ; # Request cut-flow report; report = df_mass.Report(); ; # Produce plot; ROOT.gStyle.SetOptStat(0); ROOT.gStyle.SetTextFont(42); c = ROOT.TCanvas(""c"", """", 800, 700); c.SetLogx(); c.SetLogy(); ; h.SetTitle(""""); h.GetXaxis().SetTitleSize(0.04); h.GetY",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8py.html:105,Guid,Guide,105,doc/master/df102__NanoAODDimuonAnalysis_8py.html,https://root.cern,https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df103_NanoAODHiggsAnalysis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df103_NanoAODHiggsAnalysis.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; An example of complex analysis with RDataFrame: reconstructing the Higgs boson. ; This tutorial is a simplified but yet complex example of an analysis reconstructing the Higgs boson decaying to two Z bosons from events with four leptons. The data and simulated events are taken from CERN OpenData representing a subset of the data recorded in 2012 with the CMS detector at the LHC. The tutorials follows the Higgs to four leptons analysis published on CERN Open Data portal (10.7483/OPENDATA.CMS.JKB8.RR42). The resulting plots show the invariant mass of the selected four lepton systems in different decay modes (four muons, four electrons and two of each kind) and in a combined plot indicating the decay of the Higgs boson with a mass of about 125 GeV.; The following steps are performed for each sample with data and simulated events in order to reconstruct the Higgs boson from the selected muons and electrons:; Select interesting events with multiple cuts on event properties, e.g., number of leptons, kinematics of the leptons and quality of the tracks.; Reconstruct two Z bosons of which only one on the mass shell from the selected events and apply additional cuts on the reconstructed objects.; Reconstruct the Higgs boson from the remaining Z boson candidates and calculate its invariant mass. The tutorial has the fast mode enabled by default, which reads the data from already skimmed datasets with a total size of only 51MB. If the fast mode is disabled, the tutorial runs over the full dataset with a size of 12GB. ; #include ""ROOT/RDataFrame.hxx""; #include ""ROOT/RDFHelpers.hxx""; #include ""ROOT/RVec.hxx""; #include ""ROOT/RDF/RInterface.hxx""; #include ""TCanvas.h""; #include ""TH1D.h""; #include ""TLatex.h""; #include ""TLegend.h""; #inclu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8C.html:103,Guid,Guide,103,doc/master/df103__NanoAODHiggsAnalysis_8C.html,https://root.cern,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8C.html,2,"['Guid', 'simpl']","['Guide', 'simplified']"
Usability,". ROOT: tutorials/dataframe/df103_NanoAODHiggsAnalysis.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df103_NanoAODHiggsAnalysis.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; An example of complex analysis with RDataFrame: reconstructing the Higgs boson. ; This tutorial is a simplified but yet complex example of an analysis reconstructing the Higgs boson decaying to two Z bosons from events with four leptons. The data and simulated events are taken from CERN OpenData representing a subset of the data recorded in 2012 with the CMS detector at the LHC. The tutorials follows the Higgs to four leptons analysis published on CERN Open Data portal (10.7483/OPENDATA.CMS.JKB8.RR42). The resulting plots show the invariant mass of the selected four lepton systems in different decay modes (four muons, four electrons and two of each kind) and in a combined plot indicating the decay of the Higgs boson with a mass of about 125 GeV.; The following steps are performed for each sample with data and simulated events in order to reconstruct the Higgs boson from the selected muons and electrons:; Select interesting events with multiple cuts on event properties, e.g., number of leptons, kinematics of the leptons and quality of the tracks.; Reconstruct two Z bosons of which only one on the mass shell from the selected events and apply additional cuts on the reconstructed objects.; Reconstruct the Higgs boson from the remaining Z boson candidates and calculate its invariant mass. Another aim of this version of the tutorial is to show a way to blend C++ and Python code. All the functions that make computations on data to define new columns or filter existing ones in a precise way, better suited to be written in C++, have been moved to a header that is then declared to the ROOT C++ interpreter. The functions that instead create nodes of the computational graph (e.g. Filter, Define) remain inside the ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8py.html:104,Guid,Guide,104,doc/master/df103__NanoAODHiggsAnalysis_8py.html,https://root.cern,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8py.html,2,"['Guid', 'simpl']","['Guide', 'simplified']"
Usability,". ROOT: tutorials/dataframe/df103_NanoAODHiggsAnalysis_python.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df103_NanoAODHiggsAnalysis_python.h File ReferenceTutorials » Dataframe tutorials. Detailed Description; Header file with functions needed to execute the Python version of the NanoAOD Higgs tutorial. ; The header is declared to the ROOT C++ interpreter prior to the start of the analysis via the ROOT.gInterpreter.Declare() function.; DateJuly 2019 ; AuthorsStefan Wunsch (KIT, CERN), Vincenzo Eduardo Padulano (UniMiB, CERN) ; Definition in file df103_NanoAODHiggsAnalysis_python.h. tutorialsdataframedf103_NanoAODHiggsAnalysis_python.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis__python_8h.html:110,Guid,Guide,110,doc/master/df103__NanoAODHiggsAnalysis__python_8h.html,https://root.cern,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis__python_8h.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df104_HiggsToTwoPhotons.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df104_HiggsToTwoPhotons.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame. ; This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare, the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent reconstruction and identification efficiency of photons at the ATLAS experiment.; The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data. ; import ROOT; import os; ; # Enable multi-threading; ROOT.ROOT.EnableImplicitMT(); ; # Create a ROOT dataframe for each dataset; path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22""; df = {}; df[""data""] = ROOT.RDataFrame(""mini"", (os.path.join(path, ""GamGam/Data/data_{}.GamGam.root"".format(x)) for x in (""A"", ""B"", ""C"", ""D""))); df[""ggH""] = ROOT.RDataFrame(""mini"", os.path.join(path, ""GamGam/MC/mc_343981.ggH125_gamgam.GamGam.root"")); df[""VBF""] = ROOT.RDataFrame(""mini"", os.path.join(path, ""GamGam/MC/mc_345041.VBFH125_gamgam.GamGam.root"")); processes = list(df.keys()); ; # Apply scale factors and MC weight for simulated events and a weight of 1 for the data; for p in [""ggH"", ""VBF""]:; df[p] = df[p].Define(""weight"",; ""scaleFactor_PHOTON * scaleFactor_PhotonTRIGGER * scaleFactor_PILEUP * mcWeight"");; df[""data""] = df[""data""].Define(""weight"", ""1.0""); ; # Select the events for the analysis; for p in processes:; # Apply preselection cut on photon trigger; df[p] = df[p].Filter(""trigP""); ; # Find two good muons with tight ID, pt > 25 GeV an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df104__HiggsToTwoPhotons_8py.html:101,Guid,Guide,101,doc/master/df104__HiggsToTwoPhotons_8py.html,https://root.cern,https://root.cern/doc/master/df104__HiggsToTwoPhotons_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df105_WBosonAnalysis.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df105_WBosonAnalysis.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame. ; This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data. By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with the –full-dataset argument and you can also run only on a fraction of the original dataset using the argument –lumi-scale.; See the corresponding spec json file. ; import ROOT; import sys; import json; import argparse; import os; ; # Argument parsing; parser = argparse.ArgumentParser(); parser.add_argument(""--lumi-scale"", type=float, default=0.001,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); if 'df105_WBosonAnalysis.py' in sys.argv[0]:; # Script; args = parser.parse_args(); else:; # Notebook; args = parser.parse_args(args=[]); ; if args.b: ROOT.gROOT.SetBatch(Tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df105__WBosonAnalysis_8py.html:98,Guid,Guide,98,doc/master/df105__WBosonAnalysis_8py.html,https://root.cern,https://root.cern/doc/master/df105__WBosonAnalysis_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df106_HiggsToFourLeptons.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df106_HiggsToFourLeptons.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame. ; This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads to a narrow invariant mass peak on top a relatively smooth and small background, revealing the Higgs at 125 GeV. The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; Lepton selection efficiency corrections (""scale factors"") are applied to simulated samples to correct for the differences in the trigger, reconstruction, and identification efficiencies in simulation compared to real data. Systematic uncertainties for those scale factors are evaluated and the Vary function of RDataFrame is used to propagate the variations to the final four leptons mass distribution.; See the corresponding spec json file.; ; #include ""TInterpreter.h""; #include <Math/Vector4D.h>; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>; #include <TCanvas.h>; #include <TGraph.h>; #include <TH1D.h>; #include <THStack.h>; #include <TLatex.h>; #include <TLegend.h>; #include <TProfile.h>; #include <TStyle.h>; ; using namespace ROOT::VecOps;; using PtEtaPhiEVectorF = ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<float>>;; using ROOT::RVecF;; using ROOT::RDF::RSampleInfo;; using namespace ROOT::RDF::Experimental;; ; // Define functions needed in the analysis; // Select events for the analys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html:101,Guid,Guide,101,doc/master/df106__HiggsToFourLeptons_8C.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df106_HiggsToFourLeptons.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df106_HiggsToFourLeptons.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame. ; This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads to a narrow invariant mass peak on top a relatively smooth and small background, revealing the Higgs at 125 GeV. Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting. The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; See the corresponding spec json file. ; import ROOT; import os; ; # Enable Multi-threaded mode; ROOT.EnableImplicitMT(); ; # Create the RDataFrame from the spec json file. The df106_HiggsToFourLeptons_spec.json is provided in the same folder as this tutorial; dataset_spec = os.path.join(ROOT.gROOT.GetTutorialsDir(), ""dataframe"", ""df106_HiggsToFourLeptons_spec.json""); df = ROOT.RDF.Experimental.FromSpec(dataset_spec) # Creates a single dataframe for all the samples; ; # Add the ProgressBar feature; ROOT.RDF.Experimental.AddProgressBar(df); ; # Access metadata information that is stored in the JSON config file of the RDataFrame.; # The metadata contained in the JSON file is accessible within a `DefinePerSample` call, through the `RSampleInfo` class.; df = df.DefinePerSample(""xsecs"", 'rdfsampleinfo_.GetD(""xsecs"")'); df = df.DefinePerSample(""lumi"", 'rdfsampleinfo_.GetD(""lumi"")'); df = df.DefinePerSample(""sumws""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py.html:102,Guid,Guide,102,doc/master/df106__HiggsToFourLeptons_8py.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df106_HiggsToFourLeptons.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df106_HiggsToFourLeptons.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_dataframe; 3## \notebook -draw; 4## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; 5##; 6## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; 7## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; 8## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; 9## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; 10## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; 11## the Higgs at 125 GeV.; 12## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; 13## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; 14##; 15## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; 16##; 17## \macro_image; 18## \macro_code; 19## \macro_output; 20##; 21## \date March 2020, August 2022, August 2023; 22## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN); 23 ; 24import ROOT; 25import os; 26 ; 27# Enable Multi-threaded mode; 28ROOT.EnableImplicitMT(); 29 ; 30# Create the RDataFrame from the spec json file. The df106_HiggsToFourLeptons_spec.json is provided in the same folder as this tutorial; 31dataset_spec = os.path.join(ROOT.gROOT.GetTutorialsDir(), ""dataframe"", ""df106_HiggsToFourLeptons_spec.json""); 32df = ROOT.RDF.Experimental.FromSpec(dataset_spec) # Creates a single dataframe for all the samples; 33 ; 34# Add the ProgressBar feature;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html:99,Guid,Guide,99,doc/master/df106__HiggsToFourLeptons_8py_source.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/df107_SingleTopAnalysis.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df107_SingleTopAnalysis.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame. ; This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data. By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with the –full-dataset argument and you can also run only on a fraction of the original dataset using the argument –lumi-scale.; See the corresponding spec json file. ; import ROOT; import sys; import json; import argparse; import os; ; # Argument parsing; parser = argparse.ArgumentParser(); parser.add_argument(""--lumi-scale"", type=float, default=0.05,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); if 'df107_SingleTopAnalysis.py' in sys.argv[0]:; # Script; args = parser.parse_args(); else:; # Notebook; args = parser.parse_args(args=[]); ; if args.b:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df107__SingleTopAnalysis_8py.html:101,Guid,Guide,101,doc/master/df107__SingleTopAnalysis_8py.html,https://root.cern,https://root.cern/doc/master/df107__SingleTopAnalysis_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/distrdf001_spark_connection.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; distrdf001_spark_connection.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Configure a Spark connection and fill two histograms distributedly. ; This tutorial shows the ingredients needed to setup the connection to a Spark cluster, namely a SparkConf object holding configuration parameters and a SparkContext object created with the desired options. After this initial setup, an RDataFrame with distributed capabilities is created and connected to the SparkContext instance. Finally, a couple of histograms are drawn from the created columns in the dataset.; import pyspark; import ROOT; ; # Point RDataFrame calls to Spark RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; ; # Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf001__spark__connection_8py.html:105,Guid,Guide,105,doc/master/distrdf001__spark__connection_8py.html,https://root.cern,https://root.cern/doc/master/distrdf001__spark__connection_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/distrdf002_dask_connection.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; distrdf002_dask_connection.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Configure a Dask connection and fill two histograms distributedly. ; This tutorial shows the ingredients needed to setup the connection to a Dask cluster (e.g. a LocalCluster for a single machine). After this initial setup, an RDataFrame with distributed capabilities is created and connected to a Dask Client instance. Finally, a couple of histograms are drawn from the created columns in the dataset. Relevant documentation can be found at http://distributed.dask.org/en/stable .; from dask.distributed import LocalCluster, Client; import ROOT; ; # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ; ; def create_connection():; """"""; Setup connection to a Dask cluster. Two ingredients are needed:; 1. Creating a cluster object that represents computing resources. This can be; done in various ways depending on the type of resources at disposal. To use; only the local machine (e.g. your laptop), a `LocalCluster` object can be; used. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'.; ; Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf002__dask__connection_8py.html:104,Guid,Guide,104,doc/master/distrdf002__dask__connection_8py.html,https://root.cern,https://root.cern/doc/master/distrdf002__dask__connection_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/dataframe/distrdf003_live_visualization.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; distrdf003_live_visualization.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Configure a Dask connection and visualize the filling of a 1D and 2D histograms distributedly. ; This tutorial showcases the process of setting up real-time data representation for distributed computations. By calling the LiveVisualize function, you can observe the canvas updating with the intermediate results of the histograms as the distributed computation progresses.; from dask.distributed import LocalCluster, Client; import ROOT; ; # Import the live visualization function; LiveVisualize = ROOT.RDF.Experimental.Distributed.LiveVisualize; ; # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ; # Function to create a Dask cluster and return the client; def create_connection():; cluster = LocalCluster(n_workers=4, threads_per_worker=1, processes=True, memory_limit=""2GiB""); client = Client(cluster); return client; ; # Function to fit a Gaussian function to the plot; def fit_gaus(plot):; plot.Fit(""gaus""); ; if __name__ == ""__main__"":; # Setup connection to a Dask cluster; connection = create_connection(); ; # Create an RDataFrame that will use Dask as a backend for computations; num_entries = 100000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=30); ; # Define a gaussean distribution with a variable mean; dd = d.Define(""x"", f""gRandom->Gaus(10*rdfentry_/{num_entries}, 2)"")\; .Define(""y"", f""gRandom->Gaus(10*rdfentry_/{num_entries}, 3)"")\; ; # Create a 1D and a 2D histogram using the defined columns; h_normal_1d = dd.Histo1D((""normal_1d"", ""1D Histogram of a Normal Distribution"",; 100, -10, 20),; ""x""); ; h_normal_2d = dd.Histo2D((""normal_2d"", ""2D Histogram of a Normal Distribution"",; 100, -15, 25, ; 100, -15, 25; ), ""x"", ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf003__live__visualization_8py.html:107,Guid,Guide,107,doc/master/distrdf003__live__visualization_8py.html,https://root.cern,https://root.cern/doc/master/distrdf003__live__visualization_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/demos.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. demos.C File ReferenceTutorials. Detailed Description; This macro shows a control bar to run some of the ROOT tutorials. ; To execute an item, click with the left mouse button.; ; void demos() {; ; //Add the tutorials directory to the macro path; //This is necessary in case this macro is executed from another user directory; TString dirName = gSystem->GetDirName(gInterpreter->GetCurrentMacroName());; const char *current = gROOT->GetMacroPath();; gROOT->SetMacroPath(TString::Format(""%s:%s"", current, dirName.Data()));; ; TControlBar *bar = new TControlBar(""vertical"", ""Demos"", 10, 10);; bar->AddButton(""Help Demos"", "".x demoshelp.C"", ""Click Here For Help on Running the Demos"");; bar->AddButton(""browser"", ""new TBrowser;"", ""Start the ROOT Browser"");; bar->AddButton(""framework"", "".x graphics/framework.C"", ""An Example of Object Oriented User Interface"");; bar->AddButton(""first"", "".x graphics/first.C"", ""An Example of Slide with Root"");; bar->AddButton(""hsimple"", "".x hsimple.C"", ""An Example Creating Histograms/Ntuples on File"");; bar->AddButton(""hsum"", "".x hist/hsum.C"", ""Filling Histograms and Some Graphics Options"");; bar->AddButton(""formula1"", "".x graphics/formula1.C"", ""Simple Formula and Functions"");; bar->AddButton(""surfaces"", "".x graphs/surfaces.C"", ""Surface Drawing Options"");; bar->AddButton(""fillrandom"", "".x hist/fillrandom.C"", ""Histograms with Random Numbers from a Function"");; bar->AddButton(""fit1"", "".x fit/fit1.C"", ""A Simple Fitting Example"");; bar->AddButton(""multifit"", "".x fit/multifit.C"", ""Fitting in Subranges of Histograms"");; bar->AddButton(""h1ReadAndDraw"", "".x hist/h1ReadAndDraw.C"", ""Drawing Options for 1D Histograms"");; bar->AddButton(""graph"", "".x graphs/graph.C"", ""Example of a Simple Graph"");; bar->AddButton(""gerrors"", "".x graphs/gerrors.C"", ""Example of a Graph with Error Bars"");; bar->AddButton(""tornado"", "".x graphics/tornado.C"", ""Exampl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/demos_8C.html:72,Guid,Guide,72,doc/master/demos_8C.html,https://root.cern,https://root.cern/doc/master/demos_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/demoshelp.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. demoshelp.C File ReferenceTutorials. Detailed Description; This macro shows help on running the Demos. ; ; void demoshelp() {; //; new TCanvas(""chelp"",""Help to run demos"",200,10,700,500);; ; TPaveText *welcome = new TPaveText(.1,.8,.9,.97);; welcome->AddText(""Welcome to the ROOT demos"");; welcome->SetTextFont(32);; welcome->SetTextColor(4);; welcome->SetFillColor(24);; welcome->Draw();; ; TPaveText *hdemo = new TPaveText(.05,.05,.95,.7);; hdemo->SetTextAlign(12);; hdemo->SetTextFont(52);; hdemo->AddText(""- Run demo hsimple.C first. Then in any order"");; hdemo->AddText(""- Click left mouse button to execute one demo"");; hdemo->AddText(""- Click right mouse button to see the title of the demo"");; hdemo->AddText(""- Click on 'Close Bar' to exit from the demo menu"");; hdemo->AddText(""- Select 'File/Print' to print a Postscript view of the canvas"");; hdemo->AddText(""- You can execute a demo with the mouse or type commands"");; hdemo->AddText(""- During the demo (try on this canvas) you can :"");; hdemo->AddText("" .... Use left button to move/grow/etc objects"");; hdemo->AddText("" .... Use middle button to pop overlapping objects"");; hdemo->AddText("" .... Use right button to get an object sensitive pop-up"");; hdemo->AddText("" "");; hdemo->SetAllWith(""...."",""color"",2);; hdemo->SetAllWith(""...."",""font"",72);; hdemo->SetAllWith(""...."",""size"",0.04);; ; hdemo->Draw();; }; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveTe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/demoshelp_8C.html:76,Guid,Guide,76,doc/master/demoshelp_8C.html,https://root.cern,https://root.cern/doc/master/demoshelp_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/eve7/collection_proxies.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. collection_proxies.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_eve7; 3///; 4/// This is an example of visualization of containers; 5/// with REveDataCollection and REveDataProxyBuilders.; 6/// \macro_code; 7///; 8 ; 9 ; 10#include ""ROOT/REveDataTable.hxx""; 11#include ""ROOT/REveDataSimpleProxyBuilderTemplate.hxx""; 12#include ""ROOT/REveManager.hxx""; 13#include ""ROOT/REveScalableStraightLineSet.hxx""; 14#include ""ROOT/REveViewContext.hxx""; 15#include <ROOT/REveGeoShape.hxx>; 16#include <ROOT/REveJetCone.hxx>; 17#include <ROOT/REvePointSet.hxx>; 18#include <ROOT/REveProjectionBases.hxx>; 19#include <ROOT/REveProjectionManager.hxx>; 20#include <ROOT/REveScene.hxx>; 21#include <ROOT/REveTableProxyBuilder.hxx>; 22#include <ROOT/REveTableInfo.hxx>; 23#include <ROOT/REveTrack.hxx>; 24#include <ROOT/REveTrackPropagator.hxx>; 25#include <ROOT/REveViewer.hxx>; 26#include <ROOT/REveViewContext.hxx>; 27#include <ROOT/REveBoxSet.hxx>; 28#include <ROOT/REveSelection.hxx>; 29#include <ROOT/REveCalo.hxx>; 30 ; 31#include ""TGeoTube.h""; 32#include ""TROOT.h""; 33#include ""TList.h""; 34#include ""TParticle.h""; 35#include ""TRandom.h""; 36#include ""TApplication.h""; 37#include ""TFile.h""; 38#include ""TH2F.h""; 39#include <iostream>; 40 ; 41 ; 42const Double_t kR_min = 299;; 43const Double_t kR_max = 300;; 44const Double_t kZ_d = 500;; 45 ; 46 ; 47namespace fw3dlego {; 48 const int xbins_n = 83;; 49 const double xbins[xbins_n] = {; 50 -5.191, -4.889, -4.716, -4.538, -4.363, -4.191, -4.013, -3.839, -3.664, -3.489, -3.314, -3.139, -2.964, -2.853,; 51 -2.650, -2.500, -2.322, -2.172, -2.043, -1.930, -1.830, -1.740, -1.653, -1.566, -1.479, -1.392, -1.305, -1.218,; 52 -1.131, -1.044, -0.957, -0.870, -0.783, -0.696, -0.609, -0.522, -0.435, -0.348, -0.261, -0.174, -0.087, 0.000,; 53 0.087, 0.174, 0.261, 0.348, 0.435, 0.522, 0.609, 0.696, 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/collection__proxies_8C_source.html:87,Guid,Guide,87,doc/master/collection__proxies_8C_source.html,https://root.cern,https://root.cern/doc/master/collection__proxies_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/eve7/eveGeoBrowser.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; eveGeoBrowser.C File Reference. #include <ROOT/REveGeoTopNode.hxx>; #include <ROOT/REveManager.hxx>. Include dependency graph for eveGeoBrowser.C:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; void eveGeoBrowser (bool showDet=true);  ; TGeoNode * getNodeFromPath (TGeoNode *top, std::string path);  ; TGeoNode * rootgeom ();  ; TGeoNode * testCmsGeo ();  . Function Documentation. ◆ eveGeoBrowser(). void eveGeoBrowser ; (; bool ; showDet = true). Definition at line 169 of file eveGeoBrowser.C. ◆ getNodeFromPath(). TGeoNode * getNodeFromPath ; (; TGeoNode * ; top, . std::string ; path . ). Definition at line 9 of file eveGeoBrowser.C. ◆ rootgeom(). TGeoNode * rootgeom ; (; ). Definition at line 47 of file eveGeoBrowser.C. ◆ testCmsGeo(). TGeoNode * testCmsGeo ; (; ). Definition at line 20 of file eveGeoBrowser.C. tutorialseve7eveGeoBrowser.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/eveGeoBrowser_8C.html:85,Guid,Guide,85,doc/master/eveGeoBrowser_8C.html,https://root.cern,https://root.cern/doc/master/eveGeoBrowser_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/eve7/eveGeoBrowser.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. eveGeoBrowser.C. Go to the documentation of this file. 1 ; 2#include <ROOT/REveGeoTopNode.hxx>; 3#include <ROOT/REveManager.hxx>; 4 ; 5 ; 6namespace REX = ROOT::Experimental;; 7 ; 8 ; 9TGeoNode *getNodeFromPath(TGeoNode *top, std::string path); 10{; 11 TGeoNode *node = top;; 12 std::istringstream f(path);; 13 std::string s;; 14 while (getline(f, s, '/')); 15 node = node->GetVolume()->FindNode(s.c_str());; 16 ; 17 return node;; 18}; 19 ; 20TGeoNode* testCmsGeo(); 21{; 22 TFile::SetCacheFileDir(""."");; 23 ; 24 TGeoManager::Import(""https://root.cern/files/cms.root"");; 25 ; 26 gGeoManager->DefaultColors();; 27 gGeoManager->GetVolume(""TRAK"")->InvisibleAll();; 28 gGeoManager->GetVolume(""HVP2"")->SetTransparency(20);; 29 gGeoManager->GetVolume(""HVEQ"")->SetTransparency(20);; 30 gGeoManager->GetVolume(""YE4"")->SetTransparency(10);; 31 gGeoManager->GetVolume(""YE3"")->SetTransparency(20);; 32 gGeoManager->GetVolume(""RB2"")->SetTransparency(99);; 33 gGeoManager->GetVolume(""RB3"")->SetTransparency(99);; 34 gGeoManager->GetVolume(""COCF"")->SetTransparency(99);; 35 gGeoManager->GetVolume(""HEC1"")->SetLineColor(7);; 36 gGeoManager->GetVolume(""EAP1"")->SetLineColor(7);; 37 gGeoManager->GetVolume(""EAP2"")->SetLineColor(7);; 38 gGeoManager->GetVolume(""EAP3"")->SetLineColor(7);; 39 gGeoManager->GetVolume(""EAP4"")->SetLineColor(7);; 40 gGeoManager->GetVolume(""HTC1"")->SetLineColor(2);; 41 ; 42 TGeoNode* top = gGeoManager->GetTopVolume()->FindNode(""CMSE_1"");; 43 TGeoNode* n = getNodeFromPath(top, ""MUON_1"");; 44 return top;; 45}; 46 ; 47TGeoNode* rootgeom(); 48{; 49 TGeoManager *geom = new TGeoManager(""simple1"", ""Simple geometry"");; 50 ; 51 TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; 52 TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; 53// //--- define some media; 54 TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; 55 TGeoMedium *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/eveGeoBrowser_8C_source.html:82,Guid,Guide,82,doc/master/eveGeoBrowser_8C_source.html,https://root.cern,https://root.cern/doc/master/eveGeoBrowser_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit Directory Reference. Directory dependency graph for fit:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Files;  combinedFit.C;   Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ;  combinedFit.py;   Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ;  ConfidenceIntervals.C;   Illustrates TVirtualFitter::GetConfidenceIntervals This method computes confidence intervals for the fitted function ;  ;  ErrorIntegral.C;   Estimate the error in the integral of a fitted function taking into account the errors in the parameters resulting from the fit. ;  ;  exampleFit3D.C;   example of fitting a 3D function Typical multidimensional parametric regression where the predictor depends on 3 variables ;  ;  fit1.C;   Simple fitting example (1-d histogram with an interpreted function) ;  ;  fit2.C;   Fitting a 2-D histogram This tutorial illustrates : ;  ;  fit2a.C;   Fitting a 2-D histogram (a variant) This tutorial illustrates : ;  ;  fit2d.C;   Example illustrating how to fit a 2-d histogram of type y=f(x) ;  ;  fit2dHist.C;   Example to fit two histograms at the same time via the Fitter class. ;  ;  fitCircle.C;   Generate points distributed with some errors around a circle Fit a circle through the points and draw To run the script, do, eg ;  ;  fitcont.C;   Example illustrating how to draw the n-sigma contour of a Minuit fit. ;  ;  fitConvolution.C;   Tutorial for convolution of two functions ;  ;  fitConvolution.py;   Tutorial for convolution of two functions ;  ;  fitEllipseTGraphDLSF.cxx;  ;  fitEllipseTGraphRMM.cxx;  ;  fitExclude.C;   Illustrates how to fit excluding points in a given range. ;  ;  fithist.C;   Example of fit where the model is histogram + function ;  ;  FitHistoInFile.C;   ;  ;  fitLinear.C;   Ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html:73,Guid,Guide,73,doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html,https://root.cern,https://root.cern/doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/ConfidenceIntervals.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ConfidenceIntervals.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Illustrates TVirtualFitter::GetConfidenceIntervals This method computes confidence intervals for the fitted function . ; #include ""TGraphErrors.h""; #include ""TGraph2DErrors.h""; #include ""TCanvas.h""; #include ""TF2.h""; #include ""TH1.h""; #include ""TVirtualFitter.h""; #include ""TRandom.h""; ; void ConfidenceIntervals(); {; TCanvas *myc = new TCanvas(""myc"",; ""Confidence intervals on the fitted function"",1000, 500);; myc->Divide(3,1);; ; //### 1. A graph; //Create and fill a graph; int ngr = 100;; TGraph *gr = new TGraph(ngr);; gr->SetName(""GraphNoError"");; double x, y;; int i;; for (i=0; i<ngr; i++){; x = gRandom->Uniform(-1, 1);; y = -1 + 2*x + gRandom->Gaus(0, 1);; gr->SetPoint(i, x, y);; }; //Create the fitting function; TF1 *fpol = new TF1(""fpol"", ""pol1"", -1, 1);; fpol->SetLineWidth(2);; gr->Fit(fpol, ""Q"");; ; /*Create a TGraphErrors to hold the confidence intervals*/; TGraphErrors *grint = new TGraphErrors(ngr);; grint->SetTitle(""Fitted line with .95 conf. band"");; for (i=0; i<ngr; i++); grint->SetPoint(i, gr->GetX()[i], 0);; /*Compute the confidence intervals at the x points of the created graph*/; (TVirtualFitter::GetFitter())->GetConfidenceIntervals(grint);; //Now the ""grint"" graph contains function values as its y-coordinates; //and confidence intervals as the errors on these coordinates; //Draw the graph, the function and the confidence intervals; myc->cd(1);; grint->SetLineColor(kRed);; grint->Draw(""ap"");; gr->SetMarkerStyle(5);; gr->SetMarkerSize(0.7);; gr->Draw(""psame"");; ; //### 2. A histogram; myc->cd(2);; //Create, fill and fit a histogram; int nh=5000;; TH1D *h = new TH1D(""h"",; ""Fitted Gaussian with .95 conf.band"", 100, -3, 3);; h->FillRandom(""gaus"", nh);; TF1 *f = new TF1(""fgaus"", ""gaus"", -3, 3);; f->SetLineWidth(2);; h->Fit(f, ""Q"");;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ConfidenceIntervals_8C.html:90,Guid,Guide,90,doc/master/ConfidenceIntervals_8C.html,https://root.cern,https://root.cern/doc/master/ConfidenceIntervals_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/ConfidenceIntervals.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ConfidenceIntervals.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook; 4/// Illustrates TVirtualFitter::GetConfidenceIntervals; 5/// This method computes confidence intervals for the fitted function; 6///; 7/// \macro_image; 8/// \macro_code; 9///; 10/// \author Rene Brun; 11 ; 12#include ""TGraphErrors.h""; 13#include ""TGraph2DErrors.h""; 14#include ""TCanvas.h""; 15#include ""TF2.h""; 16#include ""TH1.h""; 17#include ""TVirtualFitter.h""; 18#include ""TRandom.h""; 19 ; 20void ConfidenceIntervals(); 21{; 22 TCanvas *myc = new TCanvas(""myc"",; 23 ""Confidence intervals on the fitted function"",1000, 500);; 24 myc->Divide(3,1);; 25 ; 26//### 1. A graph; 27 //Create and fill a graph; 28 int ngr = 100;; 29 TGraph *gr = new TGraph(ngr);; 30 gr->SetName(""GraphNoError"");; 31 double x, y;; 32 int i;; 33 for (i=0; i<ngr; i++){; 34 x = gRandom->Uniform(-1, 1);; 35 y = -1 + 2*x + gRandom->Gaus(0, 1);; 36 gr->SetPoint(i, x, y);; 37 }; 38 //Create the fitting function; 39 TF1 *fpol = new TF1(""fpol"", ""pol1"", -1, 1);; 40 fpol->SetLineWidth(2);; 41 gr->Fit(fpol, ""Q"");; 42 ; 43 /*Create a TGraphErrors to hold the confidence intervals*/; 44 TGraphErrors *grint = new TGraphErrors(ngr);; 45 grint->SetTitle(""Fitted line with .95 conf. band"");; 46 for (i=0; i<ngr; i++); 47 grint->SetPoint(i, gr->GetX()[i], 0);; 48 /*Compute the confidence intervals at the x points of the created graph*/; 49 (TVirtualFitter::GetFitter())->GetConfidenceIntervals(grint);; 50 //Now the ""grint"" graph contains function values as its y-coordinates; 51 //and confidence intervals as the errors on these coordinates; 52 //Draw the graph, the function and the confidence intervals; 53 myc->cd(1);; 54 grint->SetLineColor(kRed);; 55 grint->Draw(""ap"");; 56 gr->SetMarkerStyle(5);; 57 gr->SetMarkerSize(0.7);; 58 gr->Draw(""psame"");; 59 ; 60//### 2. A histogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ConfidenceIntervals_8C_source.html:87,Guid,Guide,87,doc/master/ConfidenceIntervals_8C_source.html,https://root.cern,https://root.cern/doc/master/ConfidenceIntervals_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/ErrorIntegral.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ErrorIntegral.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Estimate the error in the integral of a fitted function taking into account the errors in the parameters resulting from the fit. ; The error is estimated also using the correlations values obtained from the fit; run the macro doing:; .x ErrorIntegral.C; After having computed the integral and its error using the integral and the integral error using the generic functions TF1::Integral and TF1::IntegralError, we compute the integrals and its error analytically using the fact that the fitting function is \( f(x) = p[1]* sin(p[0]*x) \).; Therefore we have:; integral in [0,1] : ic = p[1]* (1-std::cos(p[0]) )/p[0]; derivative of integral with respect to p0: c0c = p[1] * (std::cos(p[0]) + p[0]*std::sin(p[0]) -1.)/p[0]/p[0]; derivative of integral with respect to p1: c1c = (1-std::cos(p[0]) )/p[0]. and then we can compute the integral error using error propagation and the covariance matrix for the parameters p obtained from the fit.; integral error : sic = std::sqrt( c0c*c0c * covMatrix(0,0) + c1c*c1c * covMatrix(1,1) + 2.* c0c*c1c * covMatrix(0,1)); Note that, if possible, one should fit directly the function integral, which are the number of events of the different components (e.g. signal and background). In this way one obtains a better and more correct estimate of the integrals uncertainties, since they are obtained directly from the fit without using the approximation of error propagation. This is possible in ROOT. when using the TF1NormSum class, see the tutorial fitNormSum.C. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 49.5952; NDf = 48; Edm = 1.61787e-06; NCalls = 58; p0 = 3.13205 +/- 0.0312726 ; p1 = 29.7625 +/- 1.00876 ; Covariance matrix from the fit ; 2x2 matrix is as follows; ; | 0 | 1 |; --------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ErrorIntegral_8C.html:84,Guid,Guide,84,doc/master/ErrorIntegral_8C.html,https://root.cern,https://root.cern/doc/master/ErrorIntegral_8C.html,1,['Guid'],['Guide']
Usability,. ROOT: tutorials/fit/FittingDemo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FittingDemo.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example for fitting signal/background. ; This example can be executed with:; root > .x FittingDemo.C (using the cling interpreter); root > .x FittingDemo.C+ (using the native complier via ACLIC). ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 58.9284; NDf = 54; Edm = 9.73335e-07; NCalls = 606; p0 = -0.864746 +/- 0.887832 ; p1 = 45.8428 +/- 2.65453 ; p2 = -13.3213 +/- 0.980305 ; p3 = 13.8087 +/- 2.24457 ; p4 = 0.172313 +/- 0.0374057 ; p5 = 0.987278 +/- 0.0112928 ; Minuit2Minimizer: Minimize with max-calls 1780 convergence for edm < 0.01 strategy 1; Number of iterations 10; ----------> Iteration 0; FVAL = 60.856975016 Edm = 2.04157626492 Nfcn = 23; Error matrix change = 1; Parameters : p0 = -0.864746 p1 = 45.8428 p2 = -13.3213 p3 = 13.8087 p4 = 0.2 p5 = 1; ----------> Iteration 1; FVAL = 59.0984738211 Edm = 0.192336813475 Nfcn = 40; Error matrix change = 0.589159; Parameters : p0 = -0.913462 p1 = 45.8154 p2 = -13.3295 p3 = 14.3068 p4 = 0.176677 p5 = 0.990619; ----------> Iteration 2; FVAL = 58.9599783699 Edm = 0.018918033963 Nfcn = 54; Error matrix change = 0.342284; Parameters : p0 = -0.906747 p1 = 45.8363 p2 = -13.3167 p3 = 14.116 p4 = 0.177064 p5 = 0.986977; ----------> Iteration 3; FVAL = 58.9376425149 Edm = 0.00958566000238 Nfcn = 68; Error matrix change = 0.364189; Parameters : p0 = -0.924256 p1 = 45.83 p2 = -13.3146 p3 = 13.9161 p4 = 0.174171 p5 = 0.987051; ----------> Iteration 4; FVAL = 58.9318510093 Edm = 0.00157028886174 Nfcn = 82; Error matrix change = 0.246637; Parameters : p0 = -0.905334 p1 = 45.839 p2 = -13.3101 p3 = 13.8652 p4 = 0.172941 p5 = 0.987268; ----------> Iteration 5; FVAL = 58.9287717045 Edm = 0.000439744580493 Nfcn = 96; Error matrix change = 0.274881; Parameters : p0 = -0.867943 p1 = 45.8302 p2 = -13.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FittingDemo_8C.html:82,Guid,Guide,82,doc/master/FittingDemo_8C.html,https://root.cern,https://root.cern/doc/master/FittingDemo_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/Ifit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Ifit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example of a program to fit non-equidistant data points ; The fitting function fcn is a simple chisquare function The data consists of 5 data points (arrays x,y,z) + the errors in errorsz More details on the various functions or parameters for these functions can be obtained in an interactive ROOT session with:; Root > TMinuit *minuit = new TMinuit(10);; TMinuitDefinition TMinuit.h:27; Root > minuit->mnhelp(""*"") to see the list of possible keywords; Root > minuit->mnhelp(""SET"") explains most parameters; ; **********; ** 1 **SET ERR 1; **********; PARAMETER DEFINITIONS:; NO. NAME VALUE STEP SIZE LIMITS; 1 a1 3.00000e+00 1.00000e-01 no limits; 2 a2 1.00000e+00 1.00000e-01 no limits; 3 a3 1.00000e-01 1.00000e-02 no limits; 4 a4 1.00000e-02 1.00000e-03 no limits; **********; ** 2 **MIGRAD 500 1; **********; FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.; START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-03; FCN=90047.1 FROM MIGRAD STATUS=INITIATE 14 CALLS 15 TOTAL; EDM= unknown STRATEGY= 1 NO ERROR MATRIX ; EXT PARAMETER CURRENT GUESS STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 a1 3.00000e+00 1.00000e-01 1.00000e-01 2.81614e+05; 2 a2 1.00000e+00 1.00000e-01 1.00000e-01 -2.73395e+05; 3 a3 1.00000e-01 1.00000e-02 1.00000e-02 -3.08505e+05; 4 a4 1.00000e-02 1.00000e-03 1.00000e-03 3.53925e+05; MIGRAD MINIMIZATION HAS CONVERGED.; MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.; EIGENVALUES OF SECOND-DERIVATIVE MATRIX:; -6.7573e-05 7.2964e-05 4.1376e-02 3.9586e+00; MINUIT WARNING IN HESSE ; ============== MATRIX FORCED POS-DEF BY ADDING 0.004026 TO DIAGONAL.; FCN=10.3986 FROM HESSE STATUS=NOT POSDEF 23 CALLS 112 TOTAL; EDM=0.11462 STRATEGY= 1 ERR MATRIX NOT POS-DEF; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Ifit_8C.html:75,Guid,Guide,75,doc/master/Ifit_8C.html,https://root.cern,https://root.cern/doc/master/Ifit_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/fit/NumericalMinimization.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NumericalMinimization.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example on how to use the new Minimizer class in ROOT Show usage with all the possible minimizers. ; Minimize the Rosenbrock function (a 2D -function); input : minimizer name + algorithm name randomSeed: = <0 : fixed value: 0 random with seed 0; >0 random with given seed; ; #include ""Math/Minimizer.h""; #include ""Math/Factory.h""; #include ""Math/Functor.h""; #include ""TRandom2.h""; #include ""TError.h""; #include <iostream>; ; double RosenBrock(const double *xx ); {; const double x = xx[0];; const double y = xx[1];; const double tmp1 = y-x*x;; const double tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }; ; int NumericalMinimization(const char * minName = ""Minuit2"",; const char *algoName = """" ,; int randomSeed = -1); {; // create minimizer giving a name and a name (optionally) for the specific; // algorithm; // possible choices are:; // minName algoName; // Minuit /Minuit2 Migrad, Simplex,Combined,Scan (default is Migrad); // Minuit2 Fumili2; // Fumili; // GSLMultiMin ConjugateFR, ConjugatePR, BFGS,; // BFGS2, SteepestDescent; // GSLMultiFit; // GSLSimAn; // Genetic; ROOT::Math::Minimizer* minimum =; ROOT::Math::Factory::CreateMinimizer(minName, algoName);; if (!minimum) {; std::cerr << ""Error: cannot create minimizer \"""" << minName; << ""\"". Maybe the required library was not built?"" << std::endl;; return 1;; }; ; // set tolerance , etc...; minimum->SetMaxFunctionCalls(1000000); // for Minuit/Minuit2; minimum->SetMaxIterations(10000); // for GSL; minimum->SetTolerance(0.001);; minimum->SetPrintLevel(1);; ; // create function wrapper for minimizer; // a IMultiGenFunction type; ROOT::Math::Functor f(&RosenBrock,2);; double step[2] = {0.01,0.01};; // starting point; ; double variable[2] = { -1.,1.2};; if (randomSeed >= 0) {; TRandom2 r(randomSeed);; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NumericalMinimization_8C.html:92,Guid,Guide,92,doc/master/NumericalMinimization_8C.html,https://root.cern,https://root.cern/doc/master/NumericalMinimization_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/TestBinomial.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TestBinomial.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Perform a fit to a set of data with binomial errors like those derived from the division of two histograms. ; Three different fits are performed and compared:. simple least square fit to the divided histogram obtained from TH1::Divide with option b; least square fit to the TGraphAsymmErrors obtained from TGraphAsymmErrors::BayesDivide; likelihood fit performed on the dividing histograms using binomial statistics with the TBinomialEfficiency class. The first two methods are biased while the last one is statistical correct. Running the script passing an integer value n larger than 1, n fits are performed and the bias are also shown. To run the script :; to show the bias performing 100 fits for 1000 events per ""experiment""; root[0]: .x TestBinomial.C+; to show the bias performing 100 fits for 1000 events per ""experiment""; .x TestBinomial.C+(100, 1000). ; 32 68; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.350714; NDf = 3; Edm = 1.27001e-06; NCalls = 81; p0 = 0.694132 +/- 0.210029 ; p1 = 19.3471 +/- 5.85483 ; p2 = 5.2245 +/- 5.11013 ; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 14.3081; Chi2 = 28.6162; NDf = 21; Edm = 4.11934e-08; NCalls = 91; p0 = 0.822966 +/- 0.0807557 (limited); p1 = 21.9819 +/- 2.14579 ; p2 = 3.36105 +/- 1.05866 ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1.64738; NDf = 5; Edm = 1.01171e-06; NCalls = 137; p0 = 0.677329 +/- 0.135567 (limited); p1 = 15.5028 +/- 4.11118 ; p2 = 4.10441 +/- 2.77044 ; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 19.363; Chi2 = 38.7261; NDf = 25; Edm = 9.40378e-08; NCalls = 80; p0 = 0.778188 +/- 0.0815568 (limited); p1 = 23.7948 +/- 2.21356 ; p2 = 4.58769 +/- 1.24153 ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TestBinomial_8C.html:83,Guid,Guide,83,doc/master/TestBinomial_8C.html,https://root.cern,https://root.cern/doc/master/TestBinomial_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/fit/TwoHistoFit2D.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TwoHistoFit2D.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example to fit two histograms at the same time. . ; Do global fit; PARAMETER DEFINITIONS:; NO. NAME VALUE STEP SIZE LIMITS; 1 p0 1.00000e+02 1.00000e-02 no limits; 2 p1 6.00000e+00 1.00000e-02 no limits; 3 p2 2.00000e+00 1.00000e-02 no limits; 4 p3 7.00000e+00 1.00000e-02 no limits; 5 p4 3.00000e+00 1.00000e-02 no limits; 6 p5 1.00000e+02 1.00000e-02 no limits; 7 p6 1.20000e+01 1.00000e-02 no limits; 8 p7 3.00000e+00 1.00000e-02 no limits; 9 p8 1.10000e+01 1.00000e-02 no limits; 10 p9 2.00000e+00 1.00000e-02 no limits; **********; ** 1 **SET PRINT 0 16.85; **********; **********; ** 2 **MIGRAD 5000 0.01; **********; MIGRAD MINIMIZATION HAS CONVERGED.; FCN=4015.63 FROM MIGRAD STATUS=CONVERGED 525 CALLS 526 TOTAL; EDM=7.64858e-07 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 4.8 per cent; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 2.55114e+01 2.22488e-01 1.18177e-03 1.29669e-03; 2 p1 6.03551e+00 1.56999e-02 1.78147e-04 5.19787e-02; 3 p2 1.95953e+00 1.34972e-02 1.02338e-04 -2.33217e-02; 4 p3 7.09821e+00 3.32869e-02 2.39024e-04 2.42669e-02; 5 p4 2.94271e+00 2.42010e-02 -1.88552e-04 2.78529e-03; 6 p5 2.63145e+01 2.69272e-01 -2.31447e-03 -2.60063e-03; 7 p6 1.19850e+01 3.51596e-02 4.24094e-04 -3.93616e-02; 8 p7 2.90086e+00 2.64547e-02 8.06260e-05 -5.19624e-03; 9 p8 1.09762e+01 1.47334e-02 -6.74372e-05 -1.09627e-02; 10 p9 1.95760e+00 1.14466e-02 2.85422e-05 -1.15591e-01; Chi2 Fit = 4015.63 ndf = 3921 3921; (int) 0; ; #include ""TH2D.h""; #include ""TF2.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TRandom3.h""; #include ""TVirtualFitter.h""; #include ""TList.h""; ; #include <vector>; #include <map>; #include <iostream>; ; double gauss2D(double *x, double *par) {; double z1 = double((x[0]-par[1])/par[2]);; double z2 = double((x[1]-par[3])/par[4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TwoHistoFit2D_8C.html:84,Guid,Guide,84,doc/master/TwoHistoFit2D_8C.html,https://root.cern,https://root.cern/doc/master/TwoHistoFit2D_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/combinedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. combinedFit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Combined (simultaneous) fit of two histogram with separate functions and some common parameters ; See http://root.cern/phpBB3//viewtopic.php?f=3&t=11740#p50908 for a modified version working with Fumili or GSLMultiFit; N.B. this macro must be compiled with ACliC. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 131.104; NDf = 115; Edm = 2.11602e-08; NCalls = 225; Par_0 = 5.5396 +/- 0.0354094 ; Par_1 = 4.66089 +/- 0.050106 ; Par_2 = -0.0514037 +/- 0.00108539 (limited); Par_3 = 77.2733 +/- 3.93105 (limited); Par_4 = 30 (fixed); Par_5 = 4.864 +/- 0.243005 ; Combined fit Chi2 = 131.104; ; #include <Fit/Fitter.h>; #include <Fit/BinData.h>; #include <Fit/Chi2FCN.h>; #include <TH1.h>; #include <Math/WrappedMultiTF1.h>; #include <HFitInterface.h>; #include <TCanvas.h>; #include <TStyle.h>; ; // definition of shared parameter; // background function; int iparB[2] = {; 0, // exp amplitude in B histo; 2 // exp common parameter; };; ; // signal + background function; int iparSB[5] = {; 1, // exp amplitude in S+B histo; 2, // exp common parameter; 3, // Gaussian amplitude; 4, // Gaussian mean; 5 // Gaussian sigma; };; ; // Create the GlobalCHi2 structure; ; struct GlobalChi2 {; GlobalChi2(ROOT::Math::IMultiGenFunction &f1, ROOT::Math::IMultiGenFunction &f2) : fChi2_1(&f1), fChi2_2(&f2) {}; ; // parameter vector is first background (in common 1 and 2); // and then is signal (only in 2); double operator()(const double *par) const; {; double p1[2];; for (int i = 0; i < 2; ++i); p1[i] = par[iparB[i]];; ; double p2[5];; for (int i = 0; i < 5; ++i); p2[i] = par[iparSB[i]];; ; return (*fChi2_1)(p1) + (*fChi2_2)(p2);; }; ; const ROOT::Math::IMultiGenFunction *fChi2_1;; const ROOT::Math::IMultiGenFunction *fChi2_2;; };; ; void combinedFit(); {; ; TH1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/combinedFit_8C.html:82,Guid,Guide,82,doc/master/combinedFit_8C.html,https://root.cern,https://root.cern/doc/master/combinedFit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/combinedFit.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. combinedFit.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook; 4/// Combined (simultaneous) fit of two histogram with separate functions; 5/// and some common parameters; 6///; 7/// See http://root.cern/phpBB3//viewtopic.php?f=3&t=11740#p50908; 8/// for a modified version working with Fumili or GSLMultiFit; 9///; 10/// N.B. this macro must be compiled with ACliC; 11///; 12/// \macro_image; 13/// \macro_output; 14/// \macro_code; 15///; 16/// \author Lorenzo Moneta; 17 ; 18#include <Fit/Fitter.h>; 19#include <Fit/BinData.h>; 20#include <Fit/Chi2FCN.h>; 21#include <TH1.h>; 22#include <Math/WrappedMultiTF1.h>; 23#include <HFitInterface.h>; 24#include <TCanvas.h>; 25#include <TStyle.h>; 26 ; 27// definition of shared parameter; 28// background function; 29int iparB[2] = {; 30 0, // exp amplitude in B histo; 31 2 // exp common parameter; 32};; 33 ; 34// signal + background function; 35int iparSB[5] = {; 36 1, // exp amplitude in S+B histo; 37 2, // exp common parameter; 38 3, // Gaussian amplitude; 39 4, // Gaussian mean; 40 5 // Gaussian sigma; 41};; 42 ; 43// Create the GlobalCHi2 structure; 44 ; 45struct GlobalChi2 {; 46 GlobalChi2(ROOT::Math::IMultiGenFunction &f1, ROOT::Math::IMultiGenFunction &f2) : fChi2_1(&f1), fChi2_2(&f2) {}; 47 ; 48 // parameter vector is first background (in common 1 and 2); 49 // and then is signal (only in 2); 50 double operator()(const double *par) const; 51 {; 52 double p1[2];; 53 for (int i = 0; i < 2; ++i); 54 p1[i] = par[iparB[i]];; 55 ; 56 double p2[5];; 57 for (int i = 0; i < 5; ++i); 58 p2[i] = par[iparSB[i]];; 59 ; 60 return (*fChi2_1)(p1) + (*fChi2_2)(p2);; 61 }; 62 ; 63 const ROOT::Math::IMultiGenFunction *fChi2_1;; 64 const ROOT::Math::IMultiGenFunction *fChi2_2;; 65};; 66 ; 67void combinedFit(); 68{; 69 ; 70 TH1D *hB = new TH1D(""hB"", ""histo B"", 100, 0, 100",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/combinedFit_8C_source.html:79,Guid,Guide,79,doc/master/combinedFit_8C_source.html,https://root.cern,https://root.cern/doc/master/combinedFit_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/combinedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; combinedFit.py File ReferenceTutorials » Fit Tutorials. Detailed Description; Combined (simultaneous) fit of two histogram with separate functions and some common parameters . ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 131.104; NDf = 115; Edm = 2.11602e-08; NCalls = 225; Par_0 = 5.5396 +/- 0.0354094 ; Par_1 = 4.66089 +/- 0.050106 ; Par_2 = -0.0514037 +/- 0.00108539 (limited); Par_3 = 77.2733 +/- 3.93105 (limited); Par_4 = 30 (fixed); Par_5 = 4.864 +/- 0.243005 ; ; ; import ROOT; import numpy as np; ; ; # definition of shared parameter background function; iparB = np.array([0, 2], dtype=np.int32) # exp amplitude in B histo and exp common parameter; ; # signal + background function; iparSB = np.array(; [; 1, # exp amplitude in S+B histo; 2, # exp common parameter; 3, # Gaussian amplitude; 4, # Gaussian mean; 5, # Gaussian sigma; ],; dtype=np.int32,; ); ; # Create the GlobalCHi2 structure; ; class GlobalChi2(object):; def __init__(self, f1, f2):; self._f1 = f1; self._f2 = f2; ; def __call__(self, par):; # parameter vector is first background (in common 1 and 2) and then is; # signal (only in 2); ; # the zero-copy way to get a numpy array from a double *; par_arr = np.frombuffer(par, dtype=np.float64, count=6); ; p1 = par_arr[iparB]; p2 = par_arr[iparSB]; ; return self._f1(p1) + self._f2(p2); ; ; hB = ROOT.TH1D(""hB"", ""histo B"", 100, 0, 100); hSB = ROOT.TH1D(""hSB"", ""histo S+B"", 100, 0, 100); ; fB = ROOT.TF1(""fB"", ""expo"", 0, 100); fB.SetParameters(1, -0.05); hB.FillRandom(""fB""); ; fS = ROOT.TF1(""fS"", ""gaus"", 0, 100); fS.SetParameters(1, 30, 5); ; hSB.FillRandom(""fB"", 2000); hSB.FillRandom(""fS"", 1000); ; # perform now global fit; ; fSB = ROOT.TF1(""fSB"", ""expo + gaus(2)"", 0, 100); ; wfB = ROOT.Math.WrappedMultiTF1(fB, 1); wfSB = ROOT.Math.WrappedMultiTF1(fSB, 1); ; opt = ROOT.Fit.DataOptions();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/combinedFit_8py.html:83,Guid,Guide,83,doc/master/combinedFit_8py.html,https://root.cern,https://root.cern/doc/master/combinedFit_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/combinedFit.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. combinedFit.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_fit; 3## \notebook; 4## Combined (simultaneous) fit of two histogram with separate functions; 5## and some common parameters; 6##; 7## \macro_image; 8## \macro_output; 9## \macro_code; 10##; 11## \author Jonas Rembser, Lorenzo Moneta (C++ version); 12 ; 13 ; 14import ROOT; 15import numpy as np; 16 ; 17 ; 18# definition of shared parameter background function; 19iparB = np.array([0, 2], dtype=np.int32) # exp amplitude in B histo and exp common parameter; 20 ; 21# signal + background function; 22iparSB = np.array(; 23 [; 24 1, # exp amplitude in S+B histo; 25 2, # exp common parameter; 26 3, # Gaussian amplitude; 27 4, # Gaussian mean; 28 5, # Gaussian sigma; 29 ],; 30 dtype=np.int32,; 31); 32 ; 33# Create the GlobalCHi2 structure; 34 ; 35class GlobalChi2(object):; 36 def __init__(self, f1, f2):; 37 self._f1 = f1; 38 self._f2 = f2; 39 ; 40 def __call__(self, par):; 41 # parameter vector is first background (in common 1 and 2) and then is; 42 # signal (only in 2); 43 ; 44 # the zero-copy way to get a numpy array from a double *; 45 par_arr = np.frombuffer(par, dtype=np.float64, count=6); 46 ; 47 p1 = par_arr[iparB]; 48 p2 = par_arr[iparSB]; 49 ; 50 return self._f1(p1) + self._f2(p2); 51 ; 52 ; 53hB = ROOT.TH1D(""hB"", ""histo B"", 100, 0, 100); 54hSB = ROOT.TH1D(""hSB"", ""histo S+B"", 100, 0, 100); 55 ; 56fB = ROOT.TF1(""fB"", ""expo"", 0, 100); 57fB.SetParameters(1, -0.05); 58hB.FillRandom(""fB""); 59 ; 60fS = ROOT.TF1(""fS"", ""gaus"", 0, 100); 61fS.SetParameters(1, 30, 5); 62 ; 63hSB.FillRandom(""fB"", 2000); 64hSB.FillRandom(""fS"", 1000); 65 ; 66# perform now global fit; 67 ; 68fSB = ROOT.TF1(""fSB"", ""expo + gaus(2)"", 0, 100); 69 ; 70wfB = ROOT.Math.WrappedMultiTF1(fB, 1); 71wfSB = ROOT.Math.WrappedMultiTF1(fSB, 1); 72 ; 73opt = ROOT.Fit.DataOptions(); 74rangeB = ROOT.Fit.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/combinedFit_8py_source.html:80,Guid,Guide,80,doc/master/combinedFit_8py_source.html,https://root.cern,https://root.cern/doc/master/combinedFit_8py_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/exampleFit3D.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. exampleFit3D.C File ReferenceTutorials » Fit Tutorials. Detailed Description; example of fitting a 3D function Typical multidimensional parametric regression where the predictor depends on 3 variables ; In the case of 1 or 2D one can use the TGraph classes but since no TGraph3D class exists this tutorial provide an example of fitting 3D points; ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 2.2677e-24; NCalls = 7; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; ; ; #include ""TRandom2.h""; #include ""TF3.h""; #include ""TError.h""; #include ""Fit/BinData.h""; #include ""Fit/Fitter.h""; #include ""Math/WrappedMultiTF1.h""; ; void exampleFit3D() {; ; const int n = 1000;; double x[n], y[n], z[n], v[n];; double ev = 0.1;; ; // generate the data; TRandom2 r;; for (int i = 0; i < n; ++i) {; x[i] = r.Uniform(0,10);; y[i] = r.Uniform(0,10);; z[i] = r.Uniform(0,10);; v[i] = sin(x[i] ) + cos(y[i]) + z[i] + r.Gaus(0,ev);; }; ; // create a 3d binned data structure; ROOT::Fit::BinData data(n,3);; double xx[3];; for(int i = 0; i < n; ++i) {; xx[0] = x[i];; xx[1] = y[i];; xx[2] = z[i];; // add the 3d-data coordinate, the predictor value (v[i]) and its errors; data.Add(xx, v[i], ev);; }; ; TF3 * f3 = new TF3(""f3"",""[0] * sin(x) + [1] * cos(y) + [2] * z"",0,10,0,10,0,10);; f3->SetParameters(2,2,2);; ROOT::Fit::Fitter fitter;; // wrapped the TF1 in a IParamMultiFunction interface for the Fitter class; ROOT::Math::WrappedMultiTF1 wf(*f3,3);; fitter.SetFunction(wf);; //; bool ret = fitter.Fit(data);; if (ret) {; const ROOT::Fit::FitResult & res = fitter.Result();; // print result (should be around 1); res.Print(std::cout);; // copy all fit result info (values, chi2, etc..) in TF3; f3->SetFitResult(res);; // test fit p-value (chi2 prob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exampleFit3D_8C.html:83,Guid,Guide,83,doc/master/exampleFit3D_8C.html,https://root.cern,https://root.cern/doc/master/exampleFit3D_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fit1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit1.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Simple fitting example (1-d histogram with an interpreted function) . ; TFile** fillrandom.root ; TFile* fillrandom.root ; KEY: TFormula form1;1 abs(sin(x)/x); KEY: TF1 sqroot;1 x*gaus(0) + [3]*form1; KEY: TH1F h1f;1 Test random numbers; Formula based function: sqroot ; sqroot : x*gaus(0) + [3]*form1 Ndim= 1, Npar= 4, Number= 0 ; Formula expression: ; x*[p0]*exp(-0.5*((x-[p1])/[p2])*((x-[p1])/[p2]))+[p3]*(abs(sin(x)/x)) ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 198.935; NDf = 190; Edm = 1.49283e-07; NCalls = 149; p0 = 33.1658 +/- 0.545703 ; p1 = 4.00667 +/- 0.0165304 ; p2 = 0.984663 +/- 0.0128238 ; p3 = 63.4464 +/- 1.33233 ; fit1 : Real Time = 0.30 seconds Cpu Time = 0.30 seconds; ; #include ""TCanvas.h""; #include ""TFrame.h""; #include ""TBenchmark.h""; #include ""TString.h""; #include ""TF1.h""; #include ""TH1.h""; #include ""TFile.h""; #include ""TROOT.h""; #include ""TError.h""; #include ""TInterpreter.h""; #include ""TSystem.h""; #include ""TPaveText.h""; ; void fit1() {; TCanvas *c1 = new TCanvas(""c1_fit1"",""The Fit Canvas"",200,10,700,500);; c1->SetGridx();; c1->SetGridy();; c1->GetFrame()->SetFillColor(21);; c1->GetFrame()->SetBorderMode(-1);; c1->GetFrame()->SetBorderSize(5);; ; gBenchmark->Start(""fit1"");; //; // We connect the ROOT file generated in a previous tutorial; // (see <a href=""fillrandom.C.nbconvert.ipynb"">Filling histograms with random numbers from a function</a>); //; TString dir = gROOT->GetTutorialDir();; dir.Append(""/fit/"");; TFile *file = nullptr;; if (!gSystem->AccessPathName(""fillrandom.root"")) {; // file exists; file = TFile::Open(""fillrandom.root"");; } else {; gROOT->ProcessLine(Form("".x %s../hist/fillrandom.C(0)"",dir.Data()));; file = TFile::Open(""fillrandom.root"");; if (!file) return;; }; ; //; // The function ""ls()"" lists the d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit1_8C.html:75,Guid,Guide,75,doc/master/fit1_8C.html,https://root.cern,https://root.cern/doc/master/fit1_8C.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/fit/fit2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit2.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting a 2-D histogram This tutorial illustrates : . how to create a 2-d function; fill a 2-d histogram randomly from this function; fit the histogram; display the fitted function on top of the histogram. This example can be executed via the interpreter or ACLIC; root > .x fit2.C; root > .x fit2.C++. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1048.29; NDf = 1139; Edm = 3.90056e-06; NCalls = 519; p0 = 392.558 +/- 2.07088 ; p1 = -2.99838 +/- 0.0116072 ; p2 = 2.98484 +/- 0.00840711 ; p3 = -3.00201 +/- 0.0115172 ; p4 = 2.97271 +/- 0.00841038 ; p5 = 601.133 +/- 10.5562 ; p6 = 0.00614073 +/- 0.0119548 ; p7 = 0.81626 +/- 0.0107847 ; p8 = -0.000781266 +/- 0.0134062 ; p9 = 0.911288 +/- 0.0119899 ; p10 = 146.899 +/- 5.12261 ; p11 = 3.9882 +/- 0.0182639 ; p12 = 0.727561 +/- 0.0142962 ; p13 = 4.02637 +/- 0.0175896 ; p14 = 0.703077 +/- 0.0140242 ; ; #include ""TF2.h""; #include ""TH2.h""; #include ""TMath.h""; ; double g2(double *x, double *par) {; double r1 = double((x[0]-par[1])/par[2]);; double r2 = double((x[1]-par[3])/par[4]);; return par[0]*TMath::Exp(-0.5*(r1*r1+r2*r2));; }; double fun2(double *x, double *par) {; double *p1 = &par[0];; double *p2 = &par[5];; double *p3 = &par[10];; double result = g2(x,p1) + g2(x,p2) + g2(x,p3);; return result;; }; ; void fit2() {; const int npar = 15;; double f2params[npar] =; {100,-3,3,-3,3,160,0,0.8,0,0.9,40,4,0.7,4,0.7};; TF2 *f2 = new TF2(""f2"",fun2,-10,10,-10,10, npar);; f2->SetParameters(f2params);; ; //Create an histogram and fill it randomly with f2; TH2F *h2 = new TH2F(""h2"",""from f2"",40,-10,10,40,-10,10);; int nentries = 100000;; h2->FillRandom(""f2"",nentries);; //Fit h2 with original function f2; float ratio = 4*nentries/100000;; f2params[ 0] *= ratio;; f2params[ 5] *= ratio;; f2params[10] *= ratio;; f2->",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2_8C.html:75,Guid,Guide,75,doc/master/fit2_8C.html,https://root.cern,https://root.cern/doc/master/fit2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fit2a.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit2a.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting a 2-D histogram (a variant) This tutorial illustrates : . how to create a 2-d function; fill a 2-d histogram randomly from this function; fit the histogram; display the fitted function on top of the histogram (lego-plot) using a surface plot in a sub-range of the histogram. This example can be executed via the interpreter or/and the compiler; root > .x fit2a.C; root > .x fit2a.C++. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1048.29; NDf = 1139; Edm = 3.90056e-06; NCalls = 519; p0 = 392.558 +/- 2.07088 ; p1 = -2.99838 +/- 0.0116072 ; p2 = 2.98484 +/- 0.00840711 ; p3 = -3.00201 +/- 0.0115172 ; p4 = 2.97271 +/- 0.00841038 ; p5 = 601.133 +/- 10.5562 ; p6 = 0.00614073 +/- 0.0119548 ; p7 = 0.81626 +/- 0.0107847 ; p8 = -0.000781266 +/- 0.0134062 ; p9 = 0.911288 +/- 0.0119899 ; p10 = 146.899 +/- 5.12261 ; p11 = 3.9882 +/- 0.0182639 ; p12 = 0.727561 +/- 0.0142962 ; p13 = 4.02637 +/- 0.0175896 ; p14 = 0.703077 +/- 0.0140242 ; (TCanvas *) 0x557b5f4d89f0; ; #include ""TF2.h""; #include ""TH2.h""; #include ""TCutG.h""; #include ""TMath.h""; #include ""TCanvas.h""; #include ""TStyle.h""; ; double g2(double *x, double *par) {; double r1 = double((x[0]-par[1])/par[2]);; double r2 = double((x[1]-par[3])/par[4]);; return par[0]*TMath::Exp(-0.5*(r1*r1+r2*r2));; }; double fun2(double *x, double *par) {; double *p1 = &par[0];; double *p2 = &par[5];; double *p3 = &par[10];; double result = g2(x,p1) + g2(x,p2) + g2(x,p3);; return result;; }; ; TCanvas *fit2a() {; TCanvas *c = new TCanvas();; gStyle->SetOptStat(true);; gStyle->SetPalette(57);; const int npar = 15;; double f2params[npar] = {100,-3,3,-3,3,160,0,0.8,0,0.9,40,4,0.7,4,0.7};; auto f2 = new TF2(""f2"",fun2,-10,10,-10,10, npar);; f2->SetParameters(f2params);; ; //Create an histogram and fill it randomly w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2a_8C.html:76,Guid,Guide,76,doc/master/fit2a_8C.html,https://root.cern,https://root.cern/doc/master/fit2a_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fit2d.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit2d.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example illustrating how to fit a 2-d histogram of type y=f(x) . ; ****************************************; Minimizer is Linear / Migrad; Chi2 = 4501.58; NDf = 33; p0 = -0.47055 +/- 0.00713644 ; p1 = 10.8033 +/- 0.0124078 ; ; #include <TCanvas.h>; #include <TCutG.h>; #include <TH2F.h>; #include <TProfile.h>; #include <TRandom.h>; ; void fit2d(); {; // generate a 2-d histogram using a TCutG; const int n = 6;; float x[n] = {0.092,0.83,0.94,0.81,0.12,0.1};; float y[n] = {0.71,9.4,9,8,0.3,0.71};; TCutG *cut = new TCutG(""cut"",n,x,y);; TH2F *h2 = new TH2F(""h2"",""h2"",40,0,1,40,0,10);; float u,v;; for (int i=0;i<100000;i++) {; u = gRandom->Rndm();; v = 10*gRandom->Rndm();; if (cut->IsInside(u,v)) h2->Fill(u,v);; }; TCanvas *c1 = new TCanvas(""c1"",""show profile"",600,900);; c1->Divide(1,2);; c1->cd(1);; h2->Draw();; c1->cd(2);; ; //use a TProfile to convert the 2-d to 1-d problem; TProfile *prof = h2->ProfileX();; prof->Fit(""pol1"");; }; ; TCanvas.h; TCutG.h; TH2F.h; TProfile.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TCanvasThe Canvas class.Definition TCanvas.h:23; TCutGGraphical cut class.Definition TCutG.h:20; TGraph::IsInsidevirtual Int_t IsInside(Double_t x, Double_t y) constReturn 1 if the point (x,y) is inside the polygon defined by the graph vertices 0 otherwise.Definition TGraph.cxx:1841; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TProfileProfile Histogram.Definition TProfile.h:32; TRandom::RndmDouble_t Rndm() overrideMachine independent random number generator.Definition TRandom.cxx:559; yDouble_t y[n]Definition le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2d_8C.html:76,Guid,Guide,76,doc/master/fit2d_8C.html,https://root.cern,https://root.cern/doc/master/fit2d_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fit2dHist.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit2dHist.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example to fit two histograms at the same time via the Fitter class. ; To execute this tutorial, you can do:; root > .x fit2dHist.C (executing via cling, slow); or root > .x fit2dHist.C+ (executing via ACLIC , fast, with Minuit); root > .x fit2dHist.C+(2) (executing via ACLIC , fast, with Minuit2); xDouble_t x[n]Definition legend1.C:17; or using the option to fit independently the 2 histos root > .x fit2dHist.C+(10) (via ACLIC, fast, independent fits with Minuit); root > .x fit2dHist.C+(12) (via ACLIC, fast, independent fits with Minuit2); Note that you can also execute this script in batch with eg, root -b -q ""fit2dHist.C+(12)""; b#define b(i)Definition RSha256.hxx:100; qfloat * qDefinition THbookFile.cxx:89; or execute interactively from the shell root fit2dHist.C+; root ""fit2dHist.C+(12)"". ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 2613.61; NDf = 2478; Edm = 2.04928e-05; NCalls = 1133; p0 = 534.106 +/- 2.22027 ; p1 = 6.00013 +/- 0.00562856 ; p2 = 1.98723 +/- 0.00361514 ; p3 = 7.02975 +/- 0.0260609 ; p4 = 2.9968 +/- 0.0137019 ; p5 = 519.282 +/- 50.0512 ; p6 = 11.5486 +/- 0.456627 ; p7 = 2.72866 +/- 0.245596 ; p8 = 11.1983 +/- 0.233757 ; p9 = 2.08449 +/- 0.0982633 ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 2220.46; NDf = 2231; Edm = 2.08188e-06; NCalls = 311; p0 = 530.876 +/- 1.55657 ; p1 = 6.0121 +/- 0.00596885 ; p2 = 1.99427 +/- 0.0055483 ; p3 = 6.98634 +/- 0.0177191 ; p4 = 2.98763 +/- 0.0113697 ; p5 = 532.75 +/- 1.15393 ; p6 = 11.9894 +/- 0.00876067 ; p7 = 2.99537 +/- 0.00613849 ; p8 = 10.9975 +/- 0.00338646 ; p9 = 1.98879 +/- 0.00240993 ; (int) 0; ; #include ""TH2D.h""; #include ""TF2.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TRandom3.h""; #include ""Fit/Fitter.h""; #include ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2dHist_8C.html:80,Guid,Guide,80,doc/master/fit2dHist_8C.html,https://root.cern,https://root.cern/doc/master/fit2dHist_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitCircle.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitCircle.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Generate points distributed with some errors around a circle Fit a circle through the points and draw To run the script, do, eg ; root > .x fitCircle.C (10000 points by default); root > .x fitCircle.C(100); (with only 100 points; root > .x fitCircle.C++(100000); with ACLIC; pointsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t pointsDefinition TGWin32VirtualXProxy.cxx:148. ; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 903.174; NDf = 0; Edm = 8.44653e-07; NCalls = 65; x0 = 0.00667903 +/- 0.0141774 ; y0 = 0.00535479 +/- 0.0141954 ; R = 3.995 +/- 0.0100048 ; ; #include ""TCanvas.h""; #include ""TRandom3.h""; #include ""TGraph.h""; #include ""TMath.h""; #include ""TArc.h""; #include ""Fit/Fitter.h""; #include <Math/Functor.h>; ; //____________________________________________________________________; void fitCircle(int n=10000) {; //generates n points around a circle and fit them; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,600);; c1->SetGrid();; TGraph* gr = new TGraph(n);; if (n> 999) gr->SetMarkerStyle(1);; else gr->SetMarkerStyle(3);; TRandom3 r;; double x,y;; for (int i=0;i<n;i++) {; r.Circle(x,y,r.Gaus(4,0.3));; gr->SetPoint(i,x,y);; }; c1->DrawFrame(-5,-5,5,5);; gr->Draw(""p"");; ; ; auto chi2Function = [&](const double *par) {; //minimisation function computing the sum of squares of residuals; // looping at the graph points; int np = gr->GetN();; double f = 0;; double *x = gr->GetX();; double *y = gr->GetY();; for (int i=0;i<np;i++) {; double u = x[i] - par[0];; double v = y[i] - par[1];; double dr = par[2] - std::sqrt(u*u+v*v);; f += dr*dr;; }; return f;; };; ; // wrap chi2 function in a function object for the fit; // 3 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitCircle_8C.html:80,Guid,Guide,80,doc/master/fitCircle_8C.html,https://root.cern,https://root.cern/doc/master/fitCircle_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitConvolution.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitConvolution.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for convolution of two functions . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 298.12; NDf = 96; Edm = 1.67196e-06; NCalls = 448; p0 = 7.32861 +/- 0.0370492 ; p1 = 0.0733018 +/- 0.00243973 ; p2 = -2.26418 +/- 0.0491372 ; p3 = 1.12808 +/- 0.0628185 ; ; #include <TCanvas.h>; #include <TRandom.h>; #include <TF1Convolution.h>; #include <TF1.h>; #include <TH1F.h>; ; void fitConvolution(); {; // Construction of histogram to fit.; TH1F *h_ExpGauss = new TH1F(""h_ExpGauss"", ""Exponential convoluted by Gaussian"", 100, 0., 5.);; for (int i = 0; i < 1e6; i++) {; // Gives a alpha of -0.3 in the exp.; double x = gRandom->Exp(1. / 0.3);; x += gRandom->Gaus(0., 3.);; // Probability density function of the addition of two variables is the; // convolution of two density functions.; h_ExpGauss->Fill(x);; }; ; TF1Convolution *f_conv = new TF1Convolution(""expo"", ""gaus"", -1, 6, true);; f_conv->SetRange(-1., 6.);; f_conv->SetNofPointsFFT(1000);; TF1 *f = new TF1(""f"", *f_conv, 0., 5., f_conv->GetNpar());; f->SetParameters(1., -0.3, 0., 1.);; ; // Fit.; h_ExpGauss->Fit(""f"");; }; f#define f(i)Definition RSha256.hxx:104; TCanvas.h; TF1Convolution.h; TF1.h; TH1F.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TF1ConvolutionClass wrapping convolution of two functions.Definition TF1Convolution.h:20; TF1Convolution::GetNparInt_t GetNpar() constDefinition TF1Convolution.h:68; TF1Convolution::SetRangevoid SetRange(Double_t a, Double_t b) overrideSet the actual range used for the convolution.Definition TF1Convolution.cxx:452; TF1Convolution::SetNofPointsFFTvoid SetNofPointsFFT(Int_t n)Set the number of points used for the FFT convolution.Definition TF1Convolution.cxx:382; TF11-Dim function classDefinition TF1.h:233; TH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitConvolution_8C.html:85,Guid,Guide,85,doc/master/fitConvolution_8C.html,https://root.cern,https://root.cern/doc/master/fitConvolution_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitConvolution.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitConvolution.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook -js; 4/// Tutorial for convolution of two functions; 5///; 6/// \macro_image; 7/// \macro_output; 8/// \macro_code; 9///; 10/// \author Aurelie Flandi; 11 ; 12#include <TCanvas.h>; 13#include <TRandom.h>; 14#include <TF1Convolution.h>; 15#include <TF1.h>; 16#include <TH1F.h>; 17 ; 18void fitConvolution(); 19{; 20 // Construction of histogram to fit.; 21 TH1F *h_ExpGauss = new TH1F(""h_ExpGauss"", ""Exponential convoluted by Gaussian"", 100, 0., 5.);; 22 for (int i = 0; i < 1e6; i++) {; 23 // Gives a alpha of -0.3 in the exp.; 24 double x = gRandom->Exp(1. / 0.3);; 25 x += gRandom->Gaus(0., 3.);; 26 // Probability density function of the addition of two variables is the; 27 // convolution of two density functions.; 28 h_ExpGauss->Fill(x);; 29 }; 30 ; 31 TF1Convolution *f_conv = new TF1Convolution(""expo"", ""gaus"", -1, 6, true);; 32 f_conv->SetRange(-1., 6.);; 33 f_conv->SetNofPointsFFT(1000);; 34 TF1 *f = new TF1(""f"", *f_conv, 0., 5., f_conv->GetNpar());; 35 f->SetParameters(1., -0.3, 0., 1.);; 36 ; 37 // Fit.; 38 h_ExpGauss->Fit(""f"");; 39}; f#define f(i)Definition RSha256.hxx:104; TCanvas.h; TF1Convolution.h; TF1.h; TH1F.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TF1ConvolutionClass wrapping convolution of two functions.Definition TF1Convolution.h:20; TF1Convolution::GetNparInt_t GetNpar() constDefinition TF1Convolution.h:68; TF1Convolution::SetRangevoid SetRange(Double_t a, Double_t b) overrideSet the actual range used for the convolution.Definition TF1Convolution.cxx:452; TF1Convolution::SetNofPointsFFTvoid SetNofPointsFFT(Int_t n)Set the number of points used for the FFT convolution.Definition TF1Convolution.cxx:382; TF11-Dim function classDefinition TF1.h:233; TH1F1-D histogram with a float per chann",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitConvolution_8C_source.html:82,Guid,Guide,82,doc/master/fitConvolution_8C_source.html,https://root.cern,https://root.cern/doc/master/fitConvolution_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitConvolution.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; fitConvolution.py File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for convolution of two functions . ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 298.12; NDf = 96; Edm = 1.67196e-06; NCalls = 448; p0 = 7.32861 +/- 0.0370492 ; p1 = 0.0733018 +/- 0.00243973 ; p2 = -2.26418 +/- 0.0491372 ; p3 = 1.12808 +/- 0.0628185 ; ; import ROOT; ; # Construction of histogram to fit.; h_ExpGauss = ROOT.TH1F(""h_ExpGauss"", ""Exponential convoluted by Gaussian"", 100, 0.0, 5.0); for i in range(1000000):; # Gives a alpha of -0.3 in the exp.; x = ROOT.gRandom.Exp(1.0 / 0.3); x += ROOT.gRandom.Gaus(0.0, 3.0); # Probability density function of the addition of two variables is the; # convolution of two density functions.; h_ExpGauss.Fill(x); ; f_conv = ROOT.TF1Convolution(""expo"", ""gaus"", -1, 6, True); f_conv.SetRange(-1.0, 6.0); f_conv.SetNofPointsFFT(1000); f = ROOT.TF1(""f"", f_conv, 0.0, 5.0, f_conv.GetNpar()); f.SetParameters(1.0, -0.3, 0.0, 1.0); ; c1 = ROOT.TCanvas(""c1"", ""c1"", 800, 1000); ; # Fit and draw result of the fit; h_ExpGauss.Fit(""f""); ; c1.SaveAs(""fitConvolution.png""); AuthorJonas Rembser, Aurelie Flandi (C++ version) ; Definition in file fitConvolution.py. tutorialsfitfitConvolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitConvolution_8py.html:86,Guid,Guide,86,doc/master/fitConvolution_8py.html,https://root.cern,https://root.cern/doc/master/fitConvolution_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitConvolution.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitConvolution.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_fit; 3## \notebook; 4## Tutorial for convolution of two functions; 5##; 6## \macro_image; 7## \macro_output; 8## \macro_code; 9##; 10## \author Jonas Rembser, Aurelie Flandi (C++ version); 11 ; 12import ROOT; 13 ; 14# Construction of histogram to fit.; 15h_ExpGauss = ROOT.TH1F(""h_ExpGauss"", ""Exponential convoluted by Gaussian"", 100, 0.0, 5.0); 16for i in range(1000000):; 17 # Gives a alpha of -0.3 in the exp.; 18 x = ROOT.gRandom.Exp(1.0 / 0.3); 19 x += ROOT.gRandom.Gaus(0.0, 3.0); 20 # Probability density function of the addition of two variables is the; 21 # convolution of two density functions.; 22 h_ExpGauss.Fill(x); 23 ; 24f_conv = ROOT.TF1Convolution(""expo"", ""gaus"", -1, 6, True); 25f_conv.SetRange(-1.0, 6.0); 26f_conv.SetNofPointsFFT(1000); 27f = ROOT.TF1(""f"", f_conv, 0.0, 5.0, f_conv.GetNpar()); 28f.SetParameters(1.0, -0.3, 0.0, 1.0); 29 ; 30c1 = ROOT.TCanvas(""c1"", ""c1"", 800, 1000); 31 ; 32# Fit and draw result of the fit; 33h_ExpGauss.Fit(""f""); 34 ; 35c1.SaveAs(""fitConvolution.png""). tutorialsfitfitConvolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitConvolution_8py_source.html:83,Guid,Guide,83,doc/master/fitConvolution_8py_source.html,https://root.cern,https://root.cern/doc/master/fitConvolution_8py_source.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitExclude.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitExclude.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Illustrates how to fit excluding points in a given range. . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 84.1529; NDf = 78; Edm = 8.41446e-22; NCalls = 32; p0 = 28.4731 +/- 0.946564 ; p1 = -4.81581 +/- 0.26533 ; ; #include <TH1.h>; #include <TF1.h>; #include <TROOT.h>; ; bool reject;; double fline(double *x, double *par); {; if (reject && x[0] > 2.5 && x[0] < 3.5) {; TF1::RejectPoint();; return 0;; }; return par[0] + par[1]*x[0];; }; ; void fitExclude() {; //Create a source function; TF1 *f1 = new TF1(""f1"",""[0] +[1]*x +gaus(2)"",0,5);; f1->SetParameters(6,-1,5,3,0.2);; // create and fill histogram according to the source function; TH1F *h = new TH1F(""h"",""background + signal"",100,0,5);; h->FillRandom(""f1"",2000);; TF1 *fl = new TF1(""fl"",fline,0,5,2);; fl->SetParameters(2,-1);; //fit only the linear background excluding the signal area; reject = true;; h->Fit(fl,""0"");; reject = false;; //store 2 separate functions for visualization; TF1 *fleft = new TF1(""fleft"",fline,0,2.5,2);; fleft->SetParameters(fl->GetParameters());; h->GetListOfFunctions()->Add(fleft);; gROOT->GetListOfFunctions()->Remove(fleft);; TF1 *fright = new TF1(""fright"",fline,3.5,5,2);; fright->SetParameters(fl->GetParameters());; h->GetListOfFunctions()->Add(fright);; gROOT->GetListOfFunctions()->Remove(fright);; h->Draw();; }; ; h#define h(i)Definition RSha256.hxx:106; TF1.h; TH1.h; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TF11-Dim function classDefinition TF1.h:233; TF1::RejectPointstatic void RejectPoint(Bool_t reject=kTRUE)Static function to set the global flag to reject points the fgRejectPoint global flag is tested by al...Definition TF1.cxx:3683; TF1::GetParametersvirtual Double_t * GetParameters() constDefinition TF1.h:548; TF1::SetParametersvirtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitExclude_8C.html:81,Guid,Guide,81,doc/master/fitExclude_8C.html,https://root.cern,https://root.cern/doc/master/fitExclude_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitLinear.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitLinear.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example of fitting with a linear function, using TLinearFitter This example is for a TGraphErrors, but it can also be used when fitting a histogram, a TGraph2D or a TMultiGraph . ; ****************************************; Minimizer is Linear / Migrad; Chi2 = 36.5406; NDf = 36; p0 = -7.07142 +/- 0.0233493 ; p1 = -0.0194368 +/- 0.0354128 ; p2 = 2.03968 +/- 0.0136149 ; p3 = 1.00594 +/- 0.0139068 ; ****************************************; Minimizer is Linear / Migrad; Chi2 = 46.7362; NDf = 38; p0 = 1.0005 +/- 0.0242765 ; p1 = 0.985942 +/- 0.0279149 ; ****************************************; Minimizer is Linear / Migrad; Chi2 = 43.6161; NDf = 38; p0 = -2.04095 +/- 0.0220454 ; p1 = 1.01171 +/- 0.00904363 ; ; #include ""TGraphErrors.h""; #include ""TF1.h""; #include ""TRandom.h""; #include ""TCanvas.h""; #include ""TLegend.h""; #include ""TMath.h""; ; ; void makePoints(int n, double *x, double *y, double *e, int p);; ; void fitLinear(); {; int n = 40;; double *x = new double[n];; double *y = new double[n];; double *e = new double[n];; TCanvas *myc = new TCanvas(""myc"",; ""Fitting 3 TGraphErrors with linear functions"");; myc->SetGrid();; ; //Generate points along a 3rd degree polynomial:; makePoints(n, x, y, e, 3);; TGraphErrors *gre3 = new TGraphErrors(n, x, y, nullptr, e);; gre3->Draw(""a*"");; //Fit the graph with the predefined ""pol3"" function; gre3->Fit(""pol3"");; //Access the fit results; TF1 *f3 = gre3->GetFunction(""pol3"");; f3->SetLineWidth(1);; ; //Generate points along a sin(x)+sin(2x) function; makePoints(n, x, y, e, 2);; TGraphErrors *gre2=new TGraphErrors(n, x, y, nullptr, e);; gre2->Draw(""*same"");; gre2->SetMarkerColor(kBlue);; gre2->SetLineColor(kBlue);; //The fitting function can be predefined and passed to the Fit function; //The ""++"" mean that the linear fitter should ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitLinear_8C.html:80,Guid,Guide,80,doc/master/fitLinear_8C.html,https://root.cern,https://root.cern/doc/master/fitLinear_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitLinear2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitLinear2.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fit a 5d hyperplane by n points, using the linear fitter directly ; This macro shows some features of the TLinearFitter class A 5-d hyperplane is fit, a constant term is assumed in the hyperplane equation (y = a0 + a1*x0 + a2*x1 + a3*x2 + a4*x3 + a5*x4); ; par[0]=0.000069+-0.001011; par[1]=3.999934+-0.000164; par[2]=0.999835+-0.000172; par[3]=1.999892+-0.000178; par[4]=2.999967+-0.000185; par[5]=0.199823+-0.000174; chisquare=70.148012; ; More Points:; par[0]=0.000551+-0.000712; par[1]=3.999910+-0.000121; par[2]=0.999886+-0.000125; par[3]=2.000067+-0.000123; par[4]=2.999915+-0.000127; par[5]=0.199918+-0.000130; chisquare=145.050322490893336; ; Without Constant; par[0]=3.999913+-0.000121; par[1]=0.999890+-0.000125; par[2]=2.000057+-0.000123; par[3]=2.999919+-0.000127; par[4]=0.199918+-0.000130; chisquare=145.649621; ; Fixed Constant:; par[0]=0.000536+-0.000712; par[1]=4.000000+-1.000000; par[2]=0.999884+-0.000125; par[3]=2.000070+-0.000123; par[4]=2.999910+-0.000127; par[5]=0.199920+-0.000130; chisquare=145.602523231220914; ; #include ""TLinearFitter.h""; #include ""TF1.h""; #include ""TRandom.h""; ; void fitLinear2(); {; int n=100;; int i;; TRandom randNum;; TLinearFitter *lf=new TLinearFitter(5);; ; //The predefined ""hypN"" functions are the fastest to fit; lf->SetFormula(""hyp5"");; ; double *x=new double[n*10*5];; double *y=new double[n*10];; double *e=new double[n*10];; ; //Create the points and put them into the fitter; for (i=0; i<n; i++){; x[0 + i*5] = randNum.Uniform(-10, 10);; x[1 + i*5] = randNum.Uniform(-10, 10);; x[2 + i*5] = randNum.Uniform(-10, 10);; x[3 + i*5] = randNum.Uniform(-10, 10);; x[4 + i*5] = randNum.Uniform(-10, 10);; e[i] = 0.01;; y[i] = 4*x[0+i*5] + x[1+i*5] + 2*x[2+i*5] + 3*x[3+i*5] + 0.2*x[4+i*5] + randNum.Gaus()*e[i];; }; ; //To avoid copying ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitLinear2_8C.html:81,Guid,Guide,81,doc/master/fitLinear2_8C.html,https://root.cern,https://root.cern/doc/master/fitLinear2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitLinearRobust.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitLinearRobust.C File ReferenceTutorials » Fit Tutorials. Detailed Description; This tutorial shows how the least trimmed squares regression, included in the TLinearFitter class, can be used for fitting in cases when the data contains outliers. ; Here the fitting is done via the TGraph::Fit function with option ""rob"": If you want to use the linear fitter directly for computing the robust fitting coefficients, just use the TLinearFitter::EvalRobust function instead of TLinearFitter::Eval. ; Ordinary least squares:; ****************************************; Minimizer is Linear / Migrad; Chi2 = 606758; NDf = 246; p0 = 15.724 +/- 0.0887641 ; p1 = -0.835912 +/- 0.14096 ; p2 = -3.40616 +/- 0.0607296 ; p3 = 4.82569 +/- 0.0602628 ; Resistant Least trimmed squares fit:; ****************************************; Minimizer is Linear / Robust (h=0.75); Chi2 = 634792; NDf = 246; p0 = 1.00953; p1 = 1.71148; p2 = 2.97937; p3 = 4.07752; ; #include ""TRandom.h""; #include ""TGraphErrors.h""; #include ""TF1.h""; #include ""TCanvas.h""; #include ""TLegend.h""; ; void fitLinearRobust(); {; //First generate a dataset, where 20% of points are spoiled by large; //errors; int npoints = 250;; int fraction = int(0.8*npoints);; double *x = new double[npoints];; double *y = new double[npoints];; double *e = new double[npoints];; TRandom r;; int i;; for (i=0; i<fraction; i++){; //the good part of the sample; x[i]=r.Uniform(-2, 2);; e[i]=1;; y[i]=1 + 2*x[i] + 3*x[i]*x[i] + 4*x[i]*x[i]*x[i] + e[i]*r.Gaus();; }; for (i=fraction; i<npoints; i++){; //the bad part of the sample; x[i]=r.Uniform(-1, 1);; e[i]=1;; y[i] = 1 + 2*x[i] + 3*x[i]*x[i] + 4*x[i]*x[i]*x[i] + r.Landau(10, 5);; }; ; TGraphErrors *grr = new TGraphErrors(npoints, x, y, nullptr, e);; grr->SetMinimum(-30);; grr->SetMaximum(80);; TF1 *ffit1 = new TF1(""ffit1"", ""pol3"", -5, 5);; TF1 *ffit2 = new TF1(""ffit2"", ""pol3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitLinearRobust_8C.html:86,Guid,Guide,86,doc/master/fitLinearRobust_8C.html,https://root.cern,https://root.cern/doc/master/fitLinearRobust_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitMultiGraph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitMultiGraph.C File ReferenceTutorials » Fit Tutorials. Detailed Description; fitting a parabola to a multigraph of 3 partly overlapping graphs with different errors . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 95.1374; NDf = 87; Edm = 8.90994e-21; NCalls = 55; p0 = 3.21134 +/- 0.428055 ; p1 = 1.87952 +/- 0.248404 ; p2 = 1.00914 +/- 0.0349228 ; ; #include ""TMultiGraph.h""; #include ""TRandom.h""; #include ""TF1.h""; #include ""TGraphErrors.h""; #include ""TCanvas.h""; #include ""TMath.h""; ; void fitMultiGraph(); {; int n = 30;; double *xvalues1 = new double[n];; double *xvalues2 = new double[n];; double *xvalues3 = new double[n];; double *yvalues1 = new double[n];; double *yvalues2 = new double[n];; double *yvalues3 = new double[n];; double *evalues1 = new double[n];; double *evalues2 = new double[n];; double *evalues3 = new double[n];; ; //generate the data for the graphs; TRandom r;; int i;; for (i=0; i<n; i++) {; xvalues1[i] = r.Uniform(0.1, 5);; xvalues2[i] = r.Uniform(3, 8);; xvalues3[i] = r.Uniform(9, 15);; yvalues1[i] = 3 + 2*xvalues1[i] + xvalues1[i]*xvalues1[i] + r.Gaus();; yvalues2[i] = 3 + 2*xvalues2[i] + xvalues2[i]*xvalues2[i] + r.Gaus()*10;; evalues1[i] = 1;; evalues2[i] = 10;; evalues3[i] = 20;; yvalues3[i] = 3 + 2*xvalues3[i] + xvalues3[i]*xvalues3[i] + r.Gaus()*20;; }; ; //create the graphs and set their drawing options; TGraphErrors *gr1 = new TGraphErrors(n, xvalues1, yvalues1, nullptr, evalues1);; TGraphErrors *gr2 = new TGraphErrors(n, xvalues2, yvalues2, nullptr, evalues2);; TGraphErrors *gr3 = new TGraphErrors(n, xvalues3, yvalues3, nullptr, evalues3);; gr1->SetLineColor(kRed);; gr2->SetLineColor(kBlue);; gr2->SetMarkerStyle(24);; gr2->SetMarkerSize(0.3);; gr3->SetLineColor(kGreen);; gr3->SetMarkerStyle(24);; gr3->SetMarkerSize(0.3);; ; //add the graphs to the multigraph; TMultiGrap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitMultiGraph_8C.html:84,Guid,Guide,84,doc/master/fitMultiGraph_8C.html,https://root.cern,https://root.cern/doc/master/fitMultiGraph_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitNormSum.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitNormSum.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for normalized sum of two functions Here: a background exponential and a crystalball function Parameters can be set: . with the TF1 object before adding the function (for 3) and 4)); with the TF1NormSum object (first two are the coefficients, then the non constant parameters); with the TF1 object after adding the function. Sum can be constructed by:; by a string containing the names of the functions and/or the coefficient in front; by a string containg formulas like expo, gaus...; by the list of functions and coefficients (which are 1 by default); by a std::vector for functions and coefficients. ; Time to generate 1050000 events: Real time 0:00:00, CP time 0.160; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1018.73; NDf = 993; Edm = 9.65559e-06; NCalls = 233; NSignal = 50082 +/- 1231.21 ; NBackground = 998899 +/- 1569.86 ; Mean = 2.99896 +/- 0.0022426 ; Sigma = 0.297871 +/- 0.00230279 ; Alpha = 2.12493 +/- 0.1368 ; N = 1.1562 +/- 0.468136 ; Slope = -0.300341 +/- 0.000644187 ; Time to fit using ROOT TF1Normsum: Real time 0:00:00, CP time 0.160; ; #include <Math/MinimizerOptions.h>; #include <TCanvas.h>; #include <TF1.h>; #include <TF1NormSum.h>; #include <TFitResult.h>; #include <TH1.h>; #include <TLatex.h>; #include <TMath.h>; #include <TStopwatch.h>; #include <TStyle.h>; ; void fitNormSum(); {; const int nsig = 5.E4;; const int nbkg = 1.e6;; int nEvents = nsig + nbkg;; int nBins = 1e3;; ; double signal_mean = 3;; TF1 *f_cb = new TF1(""MyCrystalBall"", ""crystalball"", -5., 5.);; TF1 *f_exp = new TF1(""MyExponential"", ""expo"", -5., 5.);; ; // I.:; f_exp->SetParameters(1., -0.3);; f_cb->SetParameters(1, signal_mean, 0.3, 2, 1.5);; ; // CONSTRUCTION OF THE TF1NORMSUM OBJECT ........................................; // 1) :; TF1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8C.html:81,Guid,Guide,81,doc/master/fitNormSum_8C.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitNormSum.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitNormSum.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook; 4/// Tutorial for normalized sum of two functions; 5/// Here: a background exponential and a crystalball function; 6/// Parameters can be set:; 7/// 1. with the TF1 object before adding the function (for 3) and 4)); 8/// 2. with the TF1NormSum object (first two are the coefficients, then the non constant parameters); 9/// 3. with the TF1 object after adding the function; 10///; 11/// Sum can be constructed by:; 12/// 1. by a string containing the names of the functions and/or the coefficient in front; 13/// 2. by a string containg formulas like expo, gaus...; 14/// 3. by the list of functions and coefficients (which are 1 by default); 15/// 4. by a std::vector for functions and coefficients; 16///; 17/// \macro_image; 18/// \macro_output; 19/// \macro_code; 20///; 21/// \author Lorenzo Moneta; 22 ; 23#include <Math/MinimizerOptions.h>; 24#include <TCanvas.h>; 25#include <TF1.h>; 26#include <TF1NormSum.h>; 27#include <TFitResult.h>; 28#include <TH1.h>; 29#include <TLatex.h>; 30#include <TMath.h>; 31#include <TStopwatch.h>; 32#include <TStyle.h>; 33 ; 34void fitNormSum(); 35{; 36 const int nsig = 5.E4;; 37 const int nbkg = 1.e6;; 38 int nEvents = nsig + nbkg;; 39 int nBins = 1e3;; 40 ; 41 double signal_mean = 3;; 42 TF1 *f_cb = new TF1(""MyCrystalBall"", ""crystalball"", -5., 5.);; 43 TF1 *f_exp = new TF1(""MyExponential"", ""expo"", -5., 5.);; 44 ; 45 // I.:; 46 f_exp->SetParameters(1., -0.3);; 47 f_cb->SetParameters(1, signal_mean, 0.3, 2, 1.5);; 48 ; 49 // CONSTRUCTION OF THE TF1NORMSUM OBJECT ........................................; 50 // 1) :; 51 TF1NormSum *fnorm_exp_cb = new TF1NormSum(f_cb, f_exp, nsig, nbkg);; 52 // 4) :; 53 ; 54 TF1 *f_sum = new TF1(""fsum"", *fnorm_exp_cb, -5., 5., fnorm_exp_cb->GetNpar());; 55 ; 56 // III.:; 57 f_sum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8C_source.html:78,Guid,Guide,78,doc/master/fitNormSum_8C_source.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitNormSum.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; fitNormSum.py File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for normalized sum of two functions Here: a background exponential and a crystalball function Parameters can be set: . with the TF1 object before adding the function (for 3) and 4)); with the TF1NormSum object (first two are the coefficients, then the non constant parameters); with the TF1 object after adding the function. Sum can be constructed by:; by a string containing the names of the functions and/or the coefficient in front; by a string containg formulas like expo, gaus...; by the list of functions and coefficients (which are 1 by default); by a std::vector for functions and coefficients. Real time 0:00:00, CP time 0.270; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1018.73; NDf = 993; Edm = 9.65559e-06; NCalls = 233; NSignal = 50082 +/- 1231.21 ; NBackground = 998899 +/- 1569.86 ; Mean = 2.99896 +/- 0.0022426 ; Sigma = 0.297871 +/- 0.00230279 ; Alpha = 2.12493 +/- 0.1368 ; N = 1.1562 +/- 0.468136 ; Slope = -0.300341 +/- 0.000644187 ; Real time 0:00:00, CP time 0.270; Time to generate 1050000 events: ; Time to fit using ROOT TF1Normsum: ; ; import ROOT; ; nsig = 50000; nbkg = 1000000; nEvents = nsig + nbkg; nBins = 1000; ; signal_mean = 3.0; f_cb = ROOT.TF1(""MyCrystalBall"", ""crystalball"", -5.0, 5.0); f_exp = ROOT.TF1(""MyExponential"", ""expo"", -5.0, 5.0); ; # I.:; f_exp.SetParameters(1.0, -0.3); f_cb.SetParameters(1, signal_mean, 0.3, 2, 1.5); ; # CONSTRUCTION OF THE TF1NORMSUM OBJECT ........................................; # 1) :; fnorm_exp_cb = ROOT.TF1NormSum(f_cb, f_exp, nsig, nbkg); # 4) :; ; f_sum = ROOT.TF1(""fsum"", fnorm_exp_cb, -5.0, 5.0, fnorm_exp_cb.GetNpar()); ; # III.:; parameter_values = fnorm_exp_cb.GetParameters(); f_sum.SetParameters(parameter_values.data()); # Note: in the C++ tuto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8py.html:82,Guid,Guide,82,doc/master/fitNormSum_8py.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitNormSum.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitNormSum.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_fit; 3## \notebook; 4## Tutorial for normalized sum of two functions; 5## Here: a background exponential and a crystalball function; 6## Parameters can be set:; 7## 1. with the TF1 object before adding the function (for 3) and 4)); 8## 2. with the TF1NormSum object (first two are the coefficients, then the non constant parameters); 9## 3. with the TF1 object after adding the function; 10##; 11## Sum can be constructed by:; 12## 1. by a string containing the names of the functions and/or the coefficient in front; 13## 2. by a string containg formulas like expo, gaus...; 14## 3. by the list of functions and coefficients (which are 1 by default); 15## 4. by a std::vector for functions and coefficients; 16##; 17## \macro_image; 18## \macro_output; 19## \macro_code; 20##; 21## \author Jonas Rembser, Lorenzo Moneta (C++ version); 22 ; 23import ROOT; 24 ; 25nsig = 50000; 26nbkg = 1000000; 27nEvents = nsig + nbkg; 28nBins = 1000; 29 ; 30signal_mean = 3.0; 31f_cb = ROOT.TF1(""MyCrystalBall"", ""crystalball"", -5.0, 5.0); 32f_exp = ROOT.TF1(""MyExponential"", ""expo"", -5.0, 5.0); 33 ; 34# I.:; 35f_exp.SetParameters(1.0, -0.3); 36f_cb.SetParameters(1, signal_mean, 0.3, 2, 1.5); 37 ; 38# CONSTRUCTION OF THE TF1NORMSUM OBJECT ........................................; 39# 1) :; 40fnorm_exp_cb = ROOT.TF1NormSum(f_cb, f_exp, nsig, nbkg); 41# 4) :; 42 ; 43f_sum = ROOT.TF1(""fsum"", fnorm_exp_cb, -5.0, 5.0, fnorm_exp_cb.GetNpar()); 44 ; 45# III.:; 46parameter_values = fnorm_exp_cb.GetParameters(); 47f_sum.SetParameters(parameter_values.data()); 48# Note: in the C++ tutorial, the parameter value sync is done in one line with:; 49# ```C++; 50# f_sum->SetParameters(fnorm_exp_cb->GetParameters().data());; 51# ```; 52# However, TF1NormSum::GetParameters() returns an std::vector by value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8py_source.html:79,Guid,Guide,79,doc/master/fitNormSum_8py_source.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8py_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitcont.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitcont.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example illustrating how to draw the n-sigma contour of a Minuit fit. ; To get the n-sigma contour the ERRDEF parameter in Minuit has to set to n^2. The fcn function has to be set before the routine is called.; WARNING!!! This test works only with TMinuit; The TGraph object is created via the interpreter. The user must cast it to a TGraph*. ; FCN=96.6163 FROM MIGRAD STATUS=CONVERGED 62 CALLS 63 TOTAL; EDM=2.07594e-08 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 1.43454e+02 2.29666e+00 9.00732e-03 -6.49594e-05; 2 Mean 1.60911e-02 1.30402e-02 6.28520e-05 3.57224e-03; 3 Sigma 9.87683e-01 9.45637e-03 1.24479e-05 2.14428e-02; ; #include <TCanvas.h>; #include <TGraph.h>; #include <TH1F.h>; #include <TMinuit.h>; #include <TVirtualFitter.h>; ; void fitcont(); {; //be sure default is Minuit since we will use gMinuit; TVirtualFitter::SetDefaultFitter(""Minuit"");; ; TCanvas *c1 = new TCanvas(""c1"");; TH1F *h = new TH1F(""h"",""My histogram"",100,-3,3);; h->FillRandom(""gaus"",6000);; h->Fit(""gaus"");; c1->Update();; ; TCanvas *c2 = new TCanvas(""c2"",""contours"",10,10,600,800);; c2->Divide(1,2);; c2->cd(1);; /*get first contour for parameter 1 versus parameter 2*/; TGraph *gr12 = (TGraph*)gMinuit->Contour(40,1,2);; gr12->Draw(""alp"");; c2->cd(2);; /*Get contour for parameter 0 versus parameter 2 for ERRDEF=2*/; gMinuit->SetErrorDef(4); //note 4 and not 2!; TGraph *gr2 = (TGraph*)gMinuit->Contour(80,0,2);; gr2->SetFillColor(42);; gr2->Draw(""alf"");; /*Get contour for parameter 0 versus parameter 2 for ERRDEF=1*/; gMinuit->SetErrorDef(1);; TGraph *gr1 = (TGraph*)gMinuit->Contour(80,0,2);; gr1->SetFillColor(38);; gr1->Draw(""lf"");; }; h#define h(i)Definition RSha256.hxx:106; TCanvas.h; TGraph.h; TH1F.h; TMinuit.h; gMinuitR__EXTERN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitcont_8C.html:78,Guid,Guide,78,doc/master/fitcont_8C.html,https://root.cern,https://root.cern/doc/master/fitcont_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fithist.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fithist.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example of fit where the model is histogram + function . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 7.84157; NDf = 96; Edm = 3.7399e-06; NCalls = 174; p0 = 156.638 +/- 5.91061 (limited); p1 = 5.98183 +/- 0.0189043 ; p2 = -0.506659 +/- 0.0180481 ; p3 = 1.0003 +/- 0.0112955 ; ; #include <TF1.h>; #include <TFile.h>; #include <TH1F.h>; ; TH1F *background;; void histgen() {; //generate the histogram background and save it to a file; //background taken as linearly decreasing; ; TF1 f1(""f1"",""pol1"",0,10);; f1.SetParameters(5,-0.5);; TH1F h(""background"",""linear background"",100,0,10);; h.FillRandom(""f1"",10000);; TFile f(""background.root"",""recreate"");; //save the background histogram; h.Write();; //superimpose a Gaussian signal to the background histogram; TF1 f2(""f2"",""gaus"",0,10);; f2.SetParameters(1,6,0.5);; h.FillRandom(""f2"",2000);; h.SetName(""result"");; h.Write();; }; ; double ftotal(double *x, double *par) {; double xx = x[0];; int bin = background->GetXaxis()->FindBin(xx);; double br = par[3]*background->GetBinContent(bin);; double arg = (xx-par[1])/par[2];; double sr = par[0]*TMath::Exp(-0.5*arg*arg);; return sr + br;; }; void fithist() {; //fit function ftotal to signal + background; ; histgen();; ; TFile *f = new TFile(""background.root"");; background = (TH1F*)f->Get(""background""); //pointer used in ftotal; TH1F *result = (TH1F*)f->Get(""result"");; ; TF1 *ftot = new TF1(""ftot"",ftotal,0,10,4);; double norm = result->GetMaximum();; ftot->SetParameters(0.5*norm,5,.2,norm);; ftot->SetParLimits(0,.3*norm,norm);; ; result->Fit(""ftot"",""b"");; }; f#define f(i)Definition RSha256.hxx:104; h#define h(i)Definition RSha256.hxx:106; TF1.h; TFile.h; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fithist_8C.html:78,Guid,Guide,78,doc/master/fithist_8C.html,https://root.cern,https://root.cern/doc/master/fithist_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitpanel_playback.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitpanel_playback.C File ReferenceTutorials » Fit Tutorials. Detailed Description; This file will test all the transient frames (aka Dialog windows) displayed in the fitpanel, as the rest of the functionality is tried automatically with the UnitTest.C unit. ; This implies trying the Set Parameters dialog and the Advanced one.; At every operation, a png file will be saved. These files will be later on compared with some references values, to have an estimation of the goodness of the test.; ; #include ""TSystem.h""; #include ""TSystemFile.h""; #include ""TRecorder.h""; #include ""Riostream.h""; ; int file_size(const char *filename); {; FileStat_t fs;; gSystem->GetPathInfo(filename, fs);; return (int)fs.fSize;; }; ; void fitpanel_playback(); {; auto * r = new TRecorder();; r->Replay(""http://root.cern/files/fitpanel_playback.root"");; ; // wait for the recorder to finish the replay; while (r->GetState() == TRecorder::kReplaying) {; gSystem->ProcessEvents();; gSystem->Sleep(1);; }; ; int Step_Err = 100;; int Step1_Ref = 15691;; int Step2_Ref = 15691;; int Step3_Ref = 17632;; int Step4_Ref = 12305;; int Step5_Ref = 11668;; ; int Step1_Size = file_size(""Step1.png"");; int Step2_Size = file_size(""Step2.png"");; int Step3_Size = file_size(""Step3.png"");; int Step4_Size = file_size(""Step4.png"");; int Step5_Size = file_size(""Step5.png"");; ; ; std::cout << ""**********************************************************************"" << std::endl;; std::cout << ""* Report of fitpanel_playback.C *"" << std::endl;; std::cout << ""**********************************************************************"" << std::endl;; ; if (TMath::Abs(Step1_Ref-Step1_Size) <= Step_Err) {; std::cout << ""Step1: ............................................................ OK"" << std::endl;; } else {; std::cout << ""Step1: ........................................................ FAILED"" <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitpanel__playback_8C.html:88,Guid,Guide,88,doc/master/fitpanel__playback_8C.html,https://root.cern,https://root.cern/doc/master/fitpanel__playback_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/fitslicesy.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitslicesy.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Illustrates how to use the TH1::FitSlicesY function It uses the TH2F histogram generated in macro hsimple.C It invokes FitSlicesY and draw the fitted ""mean"" and ""sigma"" in 2 sepate pads. ; This macro shows also how to annotate a picture, change some pad parameters. ; ; #include <TCanvas.h>; #include <TFile.h>; #include <TH2F.h>; #include <TROOT.h>; #include <TStyle.h>; ; void fitslicesy() {; // Change some default parameters in the current style; gStyle->SetLabelSize(0.06,""x"");; gStyle->SetLabelSize(0.06,""y"");; gStyle->SetFrameFillColor(38);; gStyle->SetTitleW(0.6);; gStyle->SetTitleH(0.1);; ; // Connect the input file and get the 2-d histogram in memory; TString dir = gROOT->GetTutorialDir();; dir.Append(""/hsimple.C"");; dir.ReplaceAll(""/./"",""/"");; if (!gInterpreter->IsLoaded(dir.Data())) gInterpreter->LoadMacro(dir.Data());; TFile *hsimpleFile = (TFile*)gROOT->ProcessLineFast(""hsimple(1)"");; if (!hsimpleFile) return;; TH2F *hpxpy = (TH2F*)hsimpleFile->Get(""hpxpy"");; ; // Create a canvas and divide it; TCanvas *c1 = new TCanvas(""c1"",""c1"",700,500);; c1->SetFillColor(42);; c1->Divide(2,1);; TPad *leftPad = (TPad*)c1->cd(1);;; leftPad->Divide(1,2);; ; // Draw 2-d original histogram; leftPad->cd(1);; gPad->SetTopMargin(0.12);; gPad->SetFillColor(33);; hpxpy->Draw();; hpxpy->GetXaxis()->SetLabelSize(0.06);; hpxpy->GetYaxis()->SetLabelSize(0.06);; hpxpy->SetMarkerColor(kYellow);; ; // Fit slices projected along Y fron bins in X [7,32] with more than 20 bins in Y filled; hpxpy->FitSlicesY(nullptr,7,32,20);; ; // Show fitted ""mean"" for each slice; leftPad->cd(2);; gPad->SetFillColor(33);; TH2F *hpxpy_0 = (TH2F*)hsimpleFile->Get(""hpxpy_0"");; hpxpy_0->Draw();; TPad *rightPad = (TPad*)c1->cd(2);; rightPad->Divide(1,2);; rightPad->cd(1);; gPad->SetTopMargin(0.12);; gPad->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitslicesy_8C.html:81,Guid,Guide,81,doc/master/fitslicesy_8C.html,https://root.cern,https://root.cern/doc/master/fitslicesy_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/graph2dfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph2dfit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting a TGraph2D . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 4.25425e+06; NDf = 398; Edm = 5.85197e-13; NCalls = 45; p0 = 0.574556 +/- 0.109977 ; p1 = 1.72367 +/- 0.329932 ; ; #include <TMath.h>; #include <TGraph2D.h>; #include <TRandom.h>; #include <TStyle.h>; #include <TCanvas.h>; #include <TF2.h>; #include <TH1.h>; ; void graph2dfit(); {; gStyle->SetOptStat(0);; gStyle->SetOptFit();; ; auto c = new TCanvas(""c"",""Graph2D example"",0,0,600,800);; c->Divide(2,3);; ; double rnd, x, y, z;; double e = 0.3;; int nd = 400;; int np = 10000;; ; TRandom r;; double fl = 6;; auto f2 = new TF2(""f2"",""1000*(([0]*sin(x)/x)*([1]*sin(y)/y))+200"",; -fl,fl,-fl,fl);; f2->SetParameters(1,1);; auto dt = new TGraph2D();; ; // Fill the 2D graph; double zmax = 0;; for (int N=0; N<nd; N++) {; f2->GetRandom2(x,y);; // Generate a random number in [-e,e]; rnd = 2*r.Rndm()*e-e;; z = f2->Eval(x,y)*(1+rnd);; if (z>zmax) zmax = z;; dt->SetPoint(N,x,y,z);; }; ; double hr = 350;; auto h1 = new TH1D(""h1"",; ""#splitline{Difference between Original}{#splitline{function and Function}{with noise}}"",; 100, -hr, hr);; auto h2 = new TH1D(""h2"",; ""#splitline{Difference between Original}{#splitline{function and Delaunay triangles}{interpolation}}"",; 100, -hr, hr);; auto h3 = new TH1D(""h3"",; ""#splitline{Difference between Original}{function and Minuit fit}"",; 500, -hr, hr);; ; f2->SetParameters(0.5,1.5);; dt->Fit(f2);; auto fit2 = (TF2*)dt->FindObject(""f2"");; ; f2->SetParameters(1,1);; ; for (int N=0; N<np; N++) {; f2->GetRandom2(x,y);; // Generate a random number in [-e,e]; rnd = 2*r.Rndm()*e-e;; z = f2->Eval(x,y)*(1+rnd);; h1->Fill(f2->Eval(x,y)-z);; z = dt->Interpolate(x,y);; h2->Fill(f2->Eval(x,y)-z);; z = fit2->Eval(x,y);; h3->Fill(f2->Eval(x,y)-z);; }; ; c->cd(1);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph2dfit_8C.html:81,Guid,Guide,81,doc/master/graph2dfit_8C.html,https://root.cern,https://root.cern/doc/master/graph2dfit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/graph2dfit.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph2dfit.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook; 4/// Fitting a TGraph2D; 5///; 6/// \macro_image; 7/// \macro_output; 8/// \macro_code; 9///; 10/// \author Olivier Couet; 11 ; 12#include <TMath.h>; 13#include <TGraph2D.h>; 14#include <TRandom.h>; 15#include <TStyle.h>; 16#include <TCanvas.h>; 17#include <TF2.h>; 18#include <TH1.h>; 19 ; 20void graph2dfit(); 21{; 22 gStyle->SetOptStat(0);; 23 gStyle->SetOptFit();; 24 ; 25 auto c = new TCanvas(""c"",""Graph2D example"",0,0,600,800);; 26 c->Divide(2,3);; 27 ; 28 double rnd, x, y, z;; 29 double e = 0.3;; 30 int nd = 400;; 31 int np = 10000;; 32 ; 33 TRandom r;; 34 double fl = 6;; 35 auto f2 = new TF2(""f2"",""1000*(([0]*sin(x)/x)*([1]*sin(y)/y))+200"",; 36 -fl,fl,-fl,fl);; 37 f2->SetParameters(1,1);; 38 auto dt = new TGraph2D();; 39 ; 40 // Fill the 2D graph; 41 double zmax = 0;; 42 for (int N=0; N<nd; N++) {; 43 f2->GetRandom2(x,y);; 44 // Generate a random number in [-e,e]; 45 rnd = 2*r.Rndm()*e-e;; 46 z = f2->Eval(x,y)*(1+rnd);; 47 if (z>zmax) zmax = z;; 48 dt->SetPoint(N,x,y,z);; 49 }; 50 ; 51 double hr = 350;; 52 auto h1 = new TH1D(""h1"",; 53 ""#splitline{Difference between Original}{#splitline{function and Function}{with noise}}"",; 54 100, -hr, hr);; 55 auto h2 = new TH1D(""h2"",; 56 ""#splitline{Difference between Original}{#splitline{function and Delaunay triangles}{interpolation}}"",; 57 100, -hr, hr);; 58 auto h3 = new TH1D(""h3"",; 59 ""#splitline{Difference between Original}{function and Minuit fit}"",; 60 500, -hr, hr);; 61 ; 62 f2->SetParameters(0.5,1.5);; 63 dt->Fit(f2);; 64 auto fit2 = (TF2*)dt->FindObject(""f2"");; 65 ; 66 f2->SetParameters(1,1);; 67 ; 68 for (int N=0; N<np; N++) {; 69 f2->GetRandom2(x,y);; 70 // Generate a random number in [-e,e]; 71 rnd = 2*r.Rndm()*e-e;; 72 z = f2->Eval(x,y)*(1+rnd);; 73 h1->Fill(f2->Eval(x,y)-z);; 74 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph2dfit_8C_source.html:78,Guid,Guide,78,doc/master/graph2dfit_8C_source.html,https://root.cern,https://root.cern/doc/master/graph2dfit_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/langaus.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. langaus.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Convoluted Landau and Gaussian Fitting Function (using ROOT's Landau and Gauss functions) ; Based on a Fortran code by R.Fruehwirth (fruhw.nosp@m.irth.nosp@m.@heph.nosp@m.y.oe.nosp@m.aw.ac.nosp@m..at); to execute this example, do:; root > .x langaus.C; or; root > .x langaus.C++. ; Fitting...; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 5.25252; NDf = 64; Edm = 6.48548e-07; NCalls = 184; Width = 1.25725 +/- 0.304795 (limited); MP = 20.8889 +/- 1.2821 (limited); Area = 11552.8 +/- 2422.85 (limited); GSigma = 4.0632 +/- 0.758575 (limited); Fitting done; Plotting results...; ; #include ""TH1.h""; #include ""TF1.h""; #include ""TROOT.h""; #include ""TStyle.h""; #include ""TMath.h""; ; double langaufun(double *x, double *par) {; ; //Fit parameters:; //par[0]=Width (scale) parameter of Landau density; //par[1]=Most Probable (MP, location) parameter of Landau density; //par[2]=Total area (integral -inf to inf, normalization constant); //par[3]=Width (sigma) of convoluted Gaussian function; //; //In the Landau distribution (represented by the CERNLIB approximation),; //the maximum is located at x=-0.22278298 with the location parameter=0.; //This shift is corrected within this function, so that the actual; //maximum is identical to the MP parameter.; ; // Numeric constants; double invsq2pi = 0.3989422804014; // (2 pi)^(-1/2); double mpshift = -0.22278298; // Landau maximum location; ; // Control constants; double np = 100.0; // number of convolution steps; double sc = 5.0; // convolution extends to +-sc Gaussian sigmas; ; // Variables; double xx;; double mpc;; double fland;; double sum = 0.0;; double xlow,xupp;; double step;; double i;; ; ; // MP shift correction; mpc = par[1] - mpshift * par[0];; ; // Range of convolution integral; xlow = x[0] - sc * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/langaus_8C.html:78,Guid,Guide,78,doc/master/langaus_8C.html,https://root.cern,https://root.cern/doc/master/langaus_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/line3Dfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. line3Dfit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting of a TGraph2D with a 3D straight line ; run this macro by doing:; root>.x line3Dfit.C+. ; Total Initial distance square = 8.65172e+07; Total final distance square 19988; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 19988; NDf = 0; Edm = 1.04086e-06; NCalls = 248; Par_0 = 10.3555 +/- 0.392118 ; Par_1 = 19.9602 +/- 0.0688151 ; Par_2 = 0.999233 +/- 0.0444791 ; Par_3 = 2.00379 +/- 0.00783849 ; (int) 0; ; #include <TMath.h>; #include <TGraph2D.h>; #include <TRandom2.h>; #include <TStyle.h>; #include <TCanvas.h>; #include <TF2.h>; #include <TH1.h>; #include <Math/Functor.h>; #include <TPolyLine3D.h>; #include <Math/Vector3D.h>; #include <Fit/Fitter.h>; ; #include <cassert>; ; using namespace ROOT::Math;; ; ; // define the parametric line equation; void line(double t, const double *p, double &x, double &y, double &z) {; // a parametric line is define from 6 parameters but 4 are independent; // x0,y0,z0,z1,y1,z1 which are the coordinates of two points on the line; // can choose z0 = 0 if line not parallel to x-y plane and z1 = 1;; x = p[0] + p[1]*t;; y = p[2] + p[3]*t;; z = t;; }; ; ; bool first = true;; ; // function Object to be minimized; struct SumDistance2 {; // the TGraph is a data member of the object; TGraph2D *fGraph;; ; SumDistance2(TGraph2D *g) : fGraph(g) {}; ; // calculate distance line-point; double distance2(double x,double y,double z, const double *p) {; // distance line point is D= | (xp-x0) cross ux |; // where ux is direction of line and x0 is a point in the line (like t = 0); XYZVector xp(x,y,z);; XYZVector x0(p[0], p[2], 0. );; XYZVector x1(p[0] + p[1], p[2] + p[3], 1. );; XYZVector u = (x1-x0).Unit();; double d2 = ((xp-x0).Cross(u)).Mag2();; return d2;; }; ; // implementation of the function to be minimized",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/line3Dfit_8C.html:80,Guid,Guide,80,doc/master/line3Dfit_8C.html,https://root.cern,https://root.cern/doc/master/line3Dfit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/minuit2FitBench.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. minuit2FitBench.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Demonstrate performance and usage of Minuit2 and Fumili2 for monodimensional fits. . ; ; *********************************************************************************; Minuit ; *********************************************************************************; pass : 0; ................... FCN=205.276 FROM MINOS STATUS=SUCCESSFUL 44 CALLS 429 TOTAL; EDM=3.83288e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 5.13639e+01 2.01329e+00 -2.79418e-04 -2.05471e-06; 2 p1 5.57813e+01 4.80582e+00 3.09127e-03 -9.98919e-07; 3 p2 7.42112e+01 1.87041e+00 -1.20311e-03 -1.93173e-07; 4 p3 4.27344e+02 2.93232e+00 -1.66243e-02 -7.80957e-07; 5 p4 3.58604e-02 3.47005e-04 1.74159e-07 9.80777e-02; 6 p5 1.00001e+00 1.64203e-04 1.64203e-04 3.19213e-02; Minuit, npass=20 : RT= 0.170 s, Cpu= 0.170 s; ; *********************************************************************************; Fumili ; *********************************************************************************; pass : 0; ...................****************************************; Minimizer is Fumili; Chi2 = 206.284; NDf = 194; NCalls = 4; p0 = 51.4325 +/- 2.01397 ; p1 = 55.5412 +/- 4.81253 ; p2 = 74.2976 +/- 1.87298 ; p3 = 427.425 +/- 2.93868 ; p4 = 0.0358559 +/- 0.000357243 ; p5 = 1.00001 +/- 0.00016009 ; Fumili, npass=20 : RT= 0.055 s, Cpu= 0.060 s; ; *********************************************************************************; Minuit2 ; *********************************************************************************; pass : 0; ...................****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 205.34; NDf = 194; Edm = 1.91398e-10; NCalls = 85; p0 = 51.3576 +/- 2.0133 -2.01329 +2.0133 (Minos) ; p1 = 55.8172 +/- 4.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/minuit2FitBench_8C.html:86,Guid,Guide,86,doc/master/minuit2FitBench_8C.html,https://root.cern,https://root.cern/doc/master/minuit2FitBench_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/minuit2FitBench2D.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. minuit2FitBench2D.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Minuit2 fit 2D benchmark. . ; FCN=7196.63 FROM MIGRAD STATUS=CONVERGED 169 CALLS 170 TOTAL; EDM=3.06509e-09 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 2.0 per cent; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 5.28670e+01 2.67227e-01 1.71567e-03 1.41590e-04; 2 p1 2.00562e+00 9.99521e-03 -6.72962e-05 -5.71949e-03; 3 p2 -1.02279e+00 1.35440e-02 3.22465e-05 2.77027e-03; 4 p3 2.89928e+00 7.94099e-03 -9.38703e-05 -4.55759e-03; 5 p4 3.86656e+00 1.13330e-02 1.06568e-05 -2.11126e-03; Minuit, npass=0 : RT= 0.143 s, Cpu= 0.140 s; ****************************************; Minimizer is Fumili; Chi2 = 7196.63; NDf = 7366; NCalls = 30; p0 = 52.8672 +/- 0.262932 ; p1 = 2.00562 +/- 0.00992527 ; p2 = -1.02279 +/- 0.0135821 ; p3 = 2.89927 +/- 0.00781808 ; p4 = 3.86655 +/- 0.011235 ; Fumili, npass=0 : RT= 0.084 s, Cpu= 0.090 s; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 7196.63; NDf = 7366; Edm = 4.35806e-08; NCalls = 176; p0 = 52.867 +/- 0.264728 ; p1 = 2.00562 +/- 0.00995152 ; p2 = -1.0228 +/- 0.0137398 ; p3 = 2.89928 +/- 0.00798634 ; p4 = 3.86656 +/- 0.0112306 ; Minuit2, npass=0 : RT= 0.096 s, Cpu= 0.100 s; ****************************************; Minimizer is Minuit2 / Fumili; Chi2 = 7196.63; NDf = 7366; Edm = 2.49758e-07; NCalls = 99; p0 = 52.8669 +/- 0.265504 ; p1 = 2.00562 +/- 0.00992463 ; p2 = -1.0228 +/- 0.0135834 ; p3 = 2.89928 +/- 0.00792724 ; p4 = 3.86656 +/- 0.0113104 ; Fumili2, npass=0 : RT= 0.062 s, Cpu= 0.060 s; ; #include ""TH1.h""; #include ""TF1.h""; #include ""TH2D.h""; #include ""TF2.h""; #include ""TCanvas.h""; #include ""TStopwatch.h""; #include ""TSystem.h""; #include ""TRandom3.h""; #include ""TVirtualFitter.h""; #include ""TPaveLabel.h""; #include ""TStyle.h""; ; ; TF2 *fitFcn;; TH2D *histo;; ; // Quadratic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/minuit2FitBench2D_8C.html:88,Guid,Guide,88,doc/master/minuit2FitBench2D_8C.html,https://root.cern,https://root.cern/doc/master/minuit2FitBench2D_8C.html,1,['Guid'],['Guide']
Usability,. ROOT: tutorials/fit/minuit2GausFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. minuit2GausFit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Perform fits with different configurations using Minuit2 . ; ; Do Fit 1; ; Do Fit 2; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 65.1586; NDf = 56; Edm = 1.93774e-09; NCalls = 69; Constant = 36.3132 +/- 1.52625 -1.51651 +1.53547 (Minos) ; Mean = 0.013082 +/- 0.0347499 -0.0347674 +0.0347613 (Minos) ; Sigma = 1.03413 +/- 0.0288039 -0.0286274 +0.0290102 (Minos) (limited); ; Do Fit 3; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 65.1586; NDf = 56; Edm = 6.86315e-08; NCalls = 57; Constant = 36.327 +/- 2 -1.51685 +1.53726 (Minos) ; Mean = 0.0130817 +/- 2 ; Sigma = 1.03373 +/- 6.72116 (limited); ; Do Fit 4; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 43.3935; Chi2 = 86.7869; NDf = 97; Edm = 9.97216e-08; NCalls = 62; Constant = 38.427 +/- 1.48837 -1.46667 +1.51031 (Minos) ; Mean = 0.027601 +/- 0.032831 -0.0328395 +0.0328395 (Minos) ; Sigma = 1.03819 +/- 0.0232194 -0.0227841 +0.0236699 (Minos) (limited); ; Do Fit 1; ; Do Fit 2; ****************************************; Minimizer is Minuit2 / Fumili; Chi2 = 65.1586; NDf = 56; Edm = 8.05693e-09; NCalls = 45; Constant = 36.3131 +/- 1.52625 -1.51642 +1.53556 (Minos) ; Mean = 0.0130818 +/- 0.0347499 -0.0347671 +0.0347615 (Minos) ; Sigma = 1.03413 +/- 0.0288039 -0.0286291 +0.0290085 (Minos) (limited); ; Do Fit 3; ****************************************; Minimizer is Minuit2 / Fumili; Chi2 = 65.1586; NDf = 56; Edm = 1.52369e-08; NCalls = 45; Constant = 36.3272 +/- 1.52734 -1.51745 +1.53671 (Minos) ; Mean = 0.0130818 +/- 0.0347499 -0.0347671 +0.0347615 (Minos) ; Sigma = 1.03373 +/- 0.0288151 -0.0286415 +0.0290186 (Minos) (limited); ; Do Fit 4; ****************************************; Minimizer is Minuit2 / Fumili,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/minuit2GausFit_8C.html:85,Guid,Guide,85,doc/master/minuit2GausFit_8C.html,https://root.cern,https://root.cern/doc/master/minuit2GausFit_8C.html,1,['Guid'],['Guide']
Usability,. ROOT: tutorials/fit/multidimfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multidimfit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Multi-Dimensional Parametrisation and Fitting ; ; *************************************************; * Multidimensional Fit *; * *; * By Christian Holm <cholm@nbi.dk> 14/10/00 *; *************************************************; ; User parameters:; ----------------; Variables: 4; Data points: 0; Max Terms: 30; Power Limit Parameter: 1; Max functions: 1000; Max functions to study: 1000; Max angle (optional): 10; Min angle: 10; Relative Error accepted: 0.01; Maximum Powers: 6 6 6 6; ; Parameterisation will be done using Monomials; ; ======================================; Sample statistics:; ------------------; D 1 2 3 4; Max: 141.6264 9.954 9.99 9.998 9.995; Min: 0.149448 0.0455 0.01523 0.04109 0.003819; Mean: 48.40441 5.033 5.044 5 5.002; Function Sum Squares: 1.678e+06; ; Coeff SumSqRes Contrib Angle QM Func Value W^2 Powers; 1 5.065e+05 1.367e-26 10 6.67e-07 0 -5.23e-15 500 0 0 0 0; 2 1.15e+05 3.915e+05 50 0.167 2 47.33 174.7 1 0 0 0; 3 8.755e+04 2.749e+04 80 0.167 1 13.26 156.3 0 0 0 1; 4 6.188e+04 2.568e+04 80 0.167 3 12.39 167.3 0 0 1 0; 5 3.708e+04 2.48e+04 80 0.167 4 12.6 156.3 0 1 0 0; 6 2.596e+04 1.112e+04 85 0.333 8 14.91 50.03 1 1 0 0; 7 1.667e+04 9290 85 0.333 9 13.02 54.78 1 0 0 1; 8 7382 9287 85 0.333 14 12.64 58.13 1 0 1 0; 9 6235 1147 87.5 0.333 5 5.095 44.16 0 0 0 2; 10 5218 1018 87.5 0.333 12 4.983 40.99 0 2 0 0; 11 4193 1025 87.5 0.667 53 5.229 37.5 0 0 4 0; 12 3299 893.8 88.8 0.333 6 -4.058 54.27 0 0 1 1; 13 2458 841.2 88.8 0.333 7 -4.155 48.73 0 1 0 1; 14 1933 524.7 88.8 0.333 13 -3.291 48.45 0 1 1 0; 15 1675 258.1 88.8 0.5 19 4.211 14.56 1 0 0 2; 16 1334 340.6 88.8 0.5 26 -4.731 15.22 1 1 0 1; 17 1079 255.5 88.8 0.5 33 3.953 16.35 1 0 2 0; 18 788.2 290.4 88.8 0.5 34 4.687 13.22 1 2 0 0; 19 709.2 78.94 89.4 0.5 21 2.23 15.88 0 1 1 1; 20 47,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multidimfit_8C.html:82,Guid,Guide,82,doc/master/multidimfit_8C.html,https://root.cern,https://root.cern/doc/master/multidimfit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/multifit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multifit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting multiple functions to different ranges of a 1-D histogram Example showing how to fit in a sub-range of an histogram A histogram is created and filled with the bin contents and errors defined in the table below. ; Three Gaussians are fitted in sub-ranges of this histogram. A new function (a sum of 3 Gaussians) is fitted on another subrange Note that when fitting simple functions, such as Gaussians, the initial values of parameters are automatically computed by ROOT. In the more complicated case of the sum of 3 Gaussians, the initial values of parameters must be given. In this particular case, the initial values are taken from the result of the individual fits. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.0848003; NDf = 7; Edm = 8.86911e-08; NCalls = 106; Constant = 4.96664 +/- 2.83221 ; Mean = 95.4663 +/- 12.3905 ; Sigma = 6.82779 +/- 7.49131 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.0771026; NDf = 7; Edm = 1.00182e-07; NCalls = 73; Constant = 5.96312 +/- 1.14355 ; Mean = 100.467 +/- 1.53372 ; Sigma = 3.54806 +/- 1.16899 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.00877492; NDf = 8; Edm = 4.98832e-06; NCalls = 87; Constant = 0.912053 +/- 0.435309 ; Mean = 116.304 +/- 8.32344 ; Sigma = 8.38103 +/- 18.5139 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.31282; NDf = 31; Edm = 3.25006e-06; NCalls = 495; p0 = 4.91052 +/- 1.41324 ; p1 = 94.4492 +/- 3.71244 ; p2 = 5.9461 +/- 2.41662 ; p3 = 3.22456 +/- 3.11384 ; p4 = 101.662 +/- 1.67862 ; p5 = 2.48631 +/- 1.91151 ; p6 = 0.911626 +/- 0.368736 ; p7 = 117.581 +/- 5.06092 ; p8 = 7.59194 +/- 8.78217 ; ; #include ""TH1.h""; #include ""TF1.h""; ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8C.html:79,Guid,Guide,79,doc/master/multifit_8C.html,https://root.cern,https://root.cern/doc/master/multifit_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/fit/multifit.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multifit.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook -js; 4/// Fitting multiple functions to different ranges of a 1-D histogram; 5/// Example showing how to fit in a sub-range of an histogram; 6/// A histogram is created and filled with the bin contents and errors; 7/// defined in the table below.; 8/// Three Gaussians are fitted in sub-ranges of this histogram.; 9/// A new function (a sum of 3 Gaussians) is fitted on another subrange; 10/// Note that when fitting simple functions, such as Gaussians, the initial; 11/// values of parameters are automatically computed by ROOT.; 12/// In the more complicated case of the sum of 3 Gaussians, the initial values; 13/// of parameters must be given. In this particular case, the initial values; 14/// are taken from the result of the individual fits.; 15///; 16/// \macro_image; 17/// \macro_output; 18/// \macro_code; 19///; 20/// \author Rene Brun; 21 ; 22#include ""TH1.h""; 23#include ""TF1.h""; 24 ; 25void multifit(); 26{; 27 const int np = 49;; 28 float x[np] = {1.913521, 1.953769, 2.347435, 2.883654, 3.493567, 4.047560, 4.337210, 4.364347, 4.563004,; 29 5.054247, 5.194183, 5.380521, 5.303213, 5.384578, 5.563983, 5.728500, 5.685752, 5.080029,; 30 4.251809, 3.372246, 2.207432, 1.227541, 0.8597788, 0.8220503, 0.8046592, 0.7684097, 0.7469761,; 31 0.8019787, 0.8362375, 0.8744895, 0.9143721, 0.9462768, 0.9285364, 0.8954604, 0.8410891, 0.7853871,; 32 0.7100883, 0.6938808, 0.7363682, 0.7032954, 0.6029015, 0.5600163, 0.7477068, 1.188785, 1.938228,; 33 2.602717, 3.472962, 4.465014, 5.177035};; 34 ; 35 // The histogram are filled with bins defined in the array x.; 36 TH1F *h = new TH1F(""h"", ""Example of several fits in subranges"", np, 85, 134);; 37 h->SetMaximum(7);; 38 ; 39 for (int i = 0; i < np; i++) {; 40 h->SetBinContent(i + 1, x[i]);; 41 }; 42 ; 43 // Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8C_source.html:76,Guid,Guide,76,doc/master/multifit_8C_source.html,https://root.cern,https://root.cern/doc/master/multifit_8C_source.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/fit/multifit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; multifit.py File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting multiple functions to different ranges of a 1-D histogram Example showing how to fit in a sub-range of an histogram A histogram is created and filled with the bin contents and errors defined in the table below. ; Three Gaussians are fitted in sub-ranges of this histogram. A new function (a sum of 3 Gaussians) is fitted on another subrange Note that when fitting simple functions, such as Gaussians, the initial values of parameters are automatically computed by ROOT. In the more complicated case of the sum of 3 Gaussians, the initial values of parameters must be given. In this particular case, the initial values are taken from the result of the individual fits. ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.0848003; NDf = 7; Edm = 8.86911e-08; NCalls = 106; Constant = 4.96664 +/- 2.83221 ; Mean = 95.4663 +/- 12.3905 ; Sigma = 6.82779 +/- 7.49131 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.0771026; NDf = 7; Edm = 1.00182e-07; NCalls = 73; Constant = 5.96312 +/- 1.14355 ; Mean = 100.467 +/- 1.53372 ; Sigma = 3.54806 +/- 1.16899 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.00877492; NDf = 8; Edm = 4.98832e-06; NCalls = 87; Constant = 0.912053 +/- 0.435309 ; Mean = 116.304 +/- 8.32344 ; Sigma = 8.38103 +/- 18.5139 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.31282; NDf = 31; Edm = 3.25006e-06; NCalls = 495; p0 = 4.91052 +/- 1.41324 ; p1 = 94.4492 +/- 3.71244 ; p2 = 5.9461 +/- 2.41662 ; p3 = 3.22456 +/- 3.11384 ; p4 = 101.662 +/- 1.67862 ; p5 = 2.48631 +/- 1.91151 ; p6 = 0.911626 +/- 0.368736 ; p7 = 117.581 +/- 5.06092 ; p8 = 7.59194 +/- 8.78217 ; [ 4.96663958 95.46632975 6.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8py.html:80,Guid,Guide,80,doc/master/multifit_8py.html,https://root.cern,https://root.cern/doc/master/multifit_8py.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/fit/multifit.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multifit.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_fit; 3## \notebook; 4## Fitting multiple functions to different ranges of a 1-D histogram; 5## Example showing how to fit in a sub-range of an histogram; 6## A histogram is created and filled with the bin contents and errors; 7## defined in the table below.; 8## Three Gaussians are fitted in sub-ranges of this histogram.; 9## A new function (a sum of 3 Gaussians) is fitted on another subrange; 10## Note that when fitting simple functions, such as Gaussians, the initial; 11## values of parameters are automatically computed by ROOT.; 12## In the more complicated case of the sum of 3 Gaussians, the initial values; 13## of parameters must be given. In this particular case, the initial values; 14## are taken from the result of the individual fits.; 15##; 16## \macro_image; 17## \macro_output; 18## \macro_code; 19##; 20## \authors Jonas Rembser, Rene Brun (C++ version); 21 ; 22import ROOT; 23 ; 24import numpy as np; 25 ; 26n_x = 49; 27 ; 28# fmt: off; 29x = np.array( [ 1.913521, 1.953769, 2.347435, 2.883654, 3.493567, 4.047560,; 30 4.337210, 4.364347, 4.563004, 5.054247, 5.194183, 5.380521, 5.303213,; 31 5.384578, 5.563983, 5.728500, 5.685752, 5.080029, 4.251809, 3.372246,; 32 2.207432, 1.227541, 0.8597788, 0.8220503, 0.8046592, 0.7684097, 0.7469761,; 33 0.8019787, 0.8362375, 0.8744895, 0.9143721, 0.9462768, 0.9285364,; 34 0.8954604, 0.8410891, 0.7853871, 0.7100883, 0.6938808, 0.7363682,; 35 0.7032954, 0.6029015, 0.5600163, 0.7477068, 1.188785, 1.938228, 2.602717,; 36 3.472962, 4.465014, 5.177035, ], dtype=np.float32,); 37# fmt: on; 38 ; 39# The histogram are filled with bins defined in the array x.; 40h = ROOT.TH1F(""h"", ""Example of several fits in subranges"", n_x, 85, 134); 41h.SetMaximum(7); 42 ; 43for i, x_i in enumerate(x):; 44 h.SetBinContent(i + 1, x[i]); 45 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8py_source.html:77,Guid,Guide,77,doc/master/multifit_8py_source.html,https://root.cern,https://root.cern/doc/master/multifit_8py_source.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/fit/myfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. myfit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Get in memory an histogram from a root file and fit a user defined function. ; Note that a user defined function must always be defined as in this example:; first parameter: array of variables (in this example only 1-dimension); second parameter: array of parameters Note also that in case of user defined functions, one must set an initial value for each parameter. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 36.7428; NDf = 47; Edm = 2.03167e-06; NCalls = 101; Constant = 797.969 +/- 6.79742 ; Mean_value = -7.42918e-05 +/- 0.00734861 ; Sigma = 0.998754 +/- 0.0071337 ; Integral of function = 1907.36; ; #include <TCanvas.h>; #include <TF1.h>; #include <TFile.h>; #include <TH1F.h>; #include <TInterpreter.h>; #include <TROOT.h>; ; #include <cmath>; ; double fitf(double *x, double *par); {; double arg = 0;; if (par[2] != 0) arg = (x[0] - par[1])/par[2];; ; double fitval = par[0]*std::exp(-0.5*arg*arg);; return fitval;; }; void myfit(); {; TString dir = gROOT->GetTutorialDir();; dir.Append(""/hsimple.C"");; dir.ReplaceAll(""/./"",""/"");; if (!gInterpreter->IsLoaded(dir.Data())) gInterpreter->LoadMacro(dir.Data());; TFile *hsimpleFile = (TFile*)gROOT->ProcessLineFast(""hsimple(1)"");; if (!hsimpleFile) return;; ; TCanvas *c1 = new TCanvas(""c1"",""the fit canvas"",500,400);; ; TH1F *hpx = (TH1F*)hsimpleFile->Get(""hpx"");; ; // Creates a Root function based on function fitf above; TF1 *func = new TF1(""fitf"",fitf,-2,2,3);; ; // Sets initial values and parameter names; func->SetParameters(100,0,1);; func->SetParNames(""Constant"",""Mean_value"",""Sigma"");; ; // Fit histogram in range defined by function; hpx->Fit(func,""r"");; ; // Gets integral of function between fit limits; printf(""Integral of function = %g\n"",func->Integral(-2,2));; }; TCanvas.h; TF1.h; TFile.h; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/myfit_8C.html:76,Guid,Guide,76,doc/master/myfit_8C.html,https://root.cern,https://root.cern/doc/master/myfit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/qa2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. qa2.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Test generation of random numbers distributed according to a function defined by the user . ; ; #include <TBenchmark.h>; #include <TCanvas.h>; #include <TF1.h>; #include <TFormula.h>; #include <TH1F.h>; #include <TPaveLabel.h>; ; void qa2() {; //Fill a 1-D histogram from a parametric function; TCanvas *c1 = new TCanvas(""c1"",""The FillRandom example"",0,0,700,500);; ; gBenchmark->Start(""fillrandom"");; //; // A function (any dimension) or a formula may reference; // an already defined formula; //; TFormula *form1 = new TFormula(""form1"",""abs(sin(x)/x)"");; TF1 *sqroot = new TF1(""sqroot"",""x*gaus(0) + [3]*form1"",0,10);; sqroot->SetParameters(10,4,1,20);; ; //; // Create a one dimensional histogram (one float per bin); // and fill it following the distribution in function sqroot.; //; TH1F *h1f = new TH1F(""h1f"",""Test random numbers"",200,0,10);; h1f->SetFillColor(45);; h1f->FillRandom(""sqroot"",100000);; h1f->Draw();; TPaveLabel *lfunction = new TPaveLabel(5,39,9.8,46,""The sqroot function"");; lfunction->SetFillColor(41);; ; c1->SetGridx();; c1->SetGridy();; ; h1f->SetDirectory(nullptr);; ; c1->Update();; ; sqroot->SetParameters(200,4,1,20);; }; TBenchmark.h; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; TCanvas.h; TF1.h; TH1F.h; TPaveLabel.h; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; TFormulaThe Formula class.Definition TFormula.h:89; TH1F1-D histogram with a float per channel (see TH1 docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/qa2_8C.html:74,Guid,Guide,74,doc/master/qa2_8C.html,https://root.cern,https://root.cern/doc/master/qa2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/fit/vectorizedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. vectorizedFit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for creating a Vectorized TF1 function using a formula expression and use it for fitting an histogram ; To create a vectorized function (if ROOT has been compiled with support for vectorization) is very easy. One needs to create the TF1 object with the option ""VEC"" or call the method TF1::SetVectorized. ; Doing Serial Gaussian Fit ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 40217.9; NDf = 39409; Edm = 3.38976e-08; NCalls = 75; Constant = 120.018 +/- 0.105817 ; Mean = 0.00114402 +/- 0.000709328 ; Sigma = 0.979817 +/- 0.000519995 (limited); ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 20355.3; Chi2 = 40710.5; NDf = 39997; Edm = 8.97826e-10; NCalls = 65; Constant = 120.024 +/- 0.105551 ; Mean = 0.000138332 +/- 0.000716607 ; Sigma = 0.99985 +/- 0.000537073 (limited); Real time 0:00:00, CP time 0.450; Doing Vectorized Gaussian Fit ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 40217.9; NDf = 39409; Edm = 3.38976e-08; NCalls = 75; Constant = 120.018 +/- 0.105817 ; Mean = 0.00114402 +/- 0.000709328 ; Sigma = 0.979817 +/- 0.000519995 (limited); ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 20355.3; Chi2 = 40710.5; NDf = 39997; Edm = 8.97826e-10; NCalls = 65; Constant = 120.024 +/- 0.105551 ; Mean = 0.000138332 +/- 0.000716607 ; Sigma = 0.99985 +/- 0.000537073 (limited); Real time 0:00:00, CP time 0.360; Doing Serial Polynomial Fit ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 37690; NDf = 38075; Edm = 3.47827e-15; NCalls = 72; A = 0.202001 +/- 0.00176461 ; B = 0.268032 +/- 0.0153893 ; C = 1.05504 +/- 0.0248331 ; ****************************************; Minimizer is Minuit2 / M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/vectorizedFit_8C.html:84,Guid,Guide,84,doc/master/vectorizedFit_8C.html,https://root.cern,https://root.cern/doc/master/vectorizedFit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/foam/foam_demo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. foam_demo.C File ReferenceTutorials » FOAM tutorials. Detailed Description; Demonstrate the TFoam class. ; To run this macro type from ROOT command line; root [0] gSystem->Load(""libFoam.so""); root [1] .x foam_demo.C+; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Loadvirtual int Load(const char *module, const char *entry="""", Bool_t system=kFALSE)Load a shared library.Definition TSystem.cxx:1857; ; ; #include ""Riostream.h""; #include ""TFile.h""; #include ""TFoam.h""; #include ""TH1.h""; #include ""TMath.h""; #include ""TFoamIntegrand.h""; #include ""TRandom3.h""; ; class TFDISTR: public TFoamIntegrand {; public:; TFDISTR(){};; Double_t Density(int nDim, Double_t *Xarg){; // Integrand for mFOAM; Double_t Fun1,Fun2,R1,R2;; Double_t pos1=1e0/3e0;; Double_t pos2=2e0/3e0;; Double_t Gam1= 0.100e0; // as in JPC; Double_t Gam2= 0.100e0; // as in JPC; Double_t sPi = sqrt(TMath::Pi());; Double_t xn1=1e0;; Double_t xn2=1e0;; int i;; R1=0;; R2=0;; for(i = 0 ; i<nDim ; i++){; R1=R1+(Xarg[i] -pos1)*(Xarg[i] -pos1);; R2=R2+(Xarg[i] -pos2)*(Xarg[i] -pos2);; xn1=xn1*Gam1*sPi;; xn2=xn2*Gam2*sPi;; }; R1 = sqrt(R1);; R2 = sqrt(R2);; Fun1 = exp(-(R1*R1)/(Gam1*Gam1))/xn1; // Gaussian delta-like profile; Fun2 = exp(-(R2*R2)/(Gam2*Gam2))/xn2; // Gaussian delta-like profile; return 0.5e0*(Fun1+ Fun2);; }; ClassDef(TFDISTR,1) //Class of testing functions for FOAM; };; ClassImp(TFDISTR); ; Int_t foam_demo(); {; TFile RootFile(""foam_demo.root"",""RECREATE"",""histograms"");; long loop;; Double_t MCresult,MCerror,MCwt;; //-----------------------------------------; long NevTot = 50000; // Total MC statistics; Int_t kDim = 2; // total dimension; Int_t nCells = 500; // Number of Cells; Int_t nSampl = 200; // Number of MC events per cell in build-up; Int_t nBin = 8; // Number of bins in build-up; Int_t OptRej = 1; // Wted events for OptRej=0; wt=1 for OptRej=1 (def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/foam__demo_8C.html:81,Guid,Guide,81,doc/master/foam__demo_8C.html,https://root.cern,https://root.cern/doc/master/foam__demo_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/foam/foam_demopers.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. foam_demopers.C File ReferenceTutorials » FOAM tutorials. Detailed Description; This simple macro demonstrates persistency of FOAM object. ; First run macro foam_demo.C to create file foam_demo.root with FOAM object.; Next type root -l foam_demopers.C from shell command line; ; #include ""Riostream.h""; #include ""TFile.h""; #include ""TFoam.h""; #include ""TROOT.h""; #include ""TSystem.h""; #include ""TFoamIntegrand.h""; ; ; Int_t foam_demopers(); {; ; // need to load the foam_demo tutorial for the definition of the function; TString macroName = gROOT->GetTutorialDir();; macroName.Append(""/foam/foam_demo.C"");; gROOT->ProcessLine(TString::Format("".L %s+"",macroName.Data()));; ; //******************************************; cout<<""====================== TestVector ================================""<<endl;; TFile fileA(""foam_demo.root"");; fileA.cd();; cout<<""------------------------------------------------------------------""<<endl;; fileA.ls();; cout<<""------------------------------------------------------------------""<<endl;; fileA.Map();; cout<<""------------------------------------------------------------------""<<endl;; fileA.ShowStreamerInfo();; cout<<""------------------------------------------------------------------""<<endl;; fileA.GetListOfKeys()->Print();; cout<<""------------------------------------------------------------------""<<endl;; //*******************************************; TFoam *FoamX = (TFoam*)fileA.Get(""FoamX"");; //*******************************************; // FoamX->PrintCells();; FoamX->CheckAll(1);; ; //N.B. the integrand functions need to be reset; // because cannot be made persistent; TFoamIntegrand * rho = (TFoamIntegrand*) gROOT->ProcessLine(""return new TFDISTR();"");; FoamX->SetRho(rho);; ; Double_t MCvect[2]; // 2-dim vector generated in the MC run; ; for(long loop=0; loop<50000; loop++){; FoamX->MakeEvent(); // generat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/foam__demopers_8C.html:85,Guid,Guide,85,doc/master/foam__demopers_8C.html,https://root.cern,https://root.cern/doc/master/foam__demopers_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/foam/foam_kanwa.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. foam_kanwa.C File ReferenceTutorials » FOAM tutorials. Detailed Description; This program can be execute from the command line as folows: ; root -l foam_kanwa.C; lTLine lDefinition textangle.C:4; ; #include ""Riostream.h""; #include ""TFoam.h""; #include ""TCanvas.h""; #include ""TH2.h""; #include ""TMath.h""; #include ""TFoamIntegrand.h""; #include ""TRandom3.h""; ; //_____________________________________________________________________________; Double_t sqr(Double_t x){; return x*x;; }; //_____________________________________________________________________________; Double_t Camel2(Int_t nDim, Double_t *Xarg){; // 2-dimensional distribution for Foam, normalized to one (within 1e-5); Double_t x=Xarg[0];; Double_t y=Xarg[1];; Double_t GamSq= sqr(0.100e0);; Double_t Dist= 0;; Dist +=exp(-(sqr(x-1./3) +sqr(y-1./3))/GamSq)/GamSq/TMath::Pi();; Dist +=exp(-(sqr(x-2./3) +sqr(y-2./3))/GamSq)/GamSq/TMath::Pi();; return 0.5*Dist;; }; //_____________________________________________________________________________; ; Int_t foam_kanwa(){; cout<<""--- kanwa started ---""<<endl;; TH2D *hst_xy = new TH2D(""hst_xy"" , ""x-y plot"", 50,0,1.0, 50,0,1.0);; Double_t MCvect[2]; // 2-dim vector generated in the MC run; //; TRandom *PseRan = new TRandom3(); // Create random number generator; PseRan->SetSeed(4357);; TFoam *FoamX = new TFoam(""FoamX""); // Create Simulator; FoamX->SetkDim(2); // No. of dimensions, obligatory!; FoamX->SetnCells(500); // Optionally No. of cells, default=2000; FoamX->SetRhoInt(Camel2); // Set 2-dim distribution, included below; FoamX->SetPseRan(PseRan); // Set random number generator; FoamX->Initialize(); // Initialize simulator, may take time...; //; // visualising generated distribution; TCanvas *cKanwa = new TCanvas(""cKanwa"",""Canvas for plotting"",600,600);; cKanwa->cd();; // From now on FoamX is ready to generate events; int nshow=5000;; for(long lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/foam__kanwa_8C.html:82,Guid,Guide,82,doc/master/foam__kanwa_8C.html,https://root.cern,https://root.cern/doc/master/foam__kanwa_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/RadioNuclides.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RadioNuclides.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Macro that demonstrates usage of radioactive elements/materials/mixtures with TGeo package. ; A radionuclide (TGeoElementRN) derives from the class TGeoElement and provides additional information related to its radioactive properties and decay modes.; The radionuclides table is loaded on demand by any call:; TGeoElementRN *TGeoElementTable::GetElementRN(Int_t atomic_number,; Int_t atomic_charge,; Int_t isomeric_number); Int_tint Int_tDefinition RtypesCore.h:45; TGeoElementRNClass representing a radionuclidevoid TGeoManager::SetDefaultRootUnits() { if ( fgDefaultUnits == kRo...Definition TGeoElement.h:132; TGeoElementTable::GetElementRNTGeoElementRN * GetElementRN(Int_t ENDFcode) constRetrieve a radionuclide by ENDF code.Definition TGeoElement.cxx:1368; The isomeric number is optional and the default value is 0.; To create a radioactive material based on a radionuclide, one should use the constructor:; TGeoMaterial(const char *name, TGeoElement *elem, Double_t density); Double_tdouble Double_tDefinition RtypesCore.h:59; namechar name[80]Definition TGX11.cxx:110; TGeoElementBase class for chemical elements.Definition TGeoElement.h:36; TGeoMaterialBase class describing materials.Definition TGeoMaterial.h:34; To create a radioactive mixture, one can use radionuclides as well as stable elements:; TGeoMixture(const char *name, Int_t nelements, Double_t density);; TGeoMixture::AddElement(TGeoElement *elem, Double_t weight_fraction);; TGeoMixtureMixtures of elements.Definition TGeoMaterial.h:159; TGeoMixture::AddElementvoid AddElement(Double_t a, Double_t z, Double_t weight)add an element to the mixture using fraction by weight Check if the element is already definedDefinition TGeoMaterial.cxx:869; Once defined, one can retrieve the time evolution for the rad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RadioNuclides_8C.html:85,Guid,Guide,85,doc/master/RadioNuclides_8C.html,https://root.cern,https://root.cern/doc/master/RadioNuclides_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/assembly.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. assembly.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Geometry detector assembly example. ; ��A2␏V ; void assembly(); {; //--- Definition of a simple geometry; TGeoManager *geom = new TGeoManager(""Assemblies"",; ""Geometry using assemblies"");; Int_t i;; //--- define some materials; TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; // //--- define some media; TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; TGeoMedium *Al = new TGeoMedium(""Aluminium"",2, matAl);; ; //--- make the top container volume; TGeoVolume *top = geom->MakeBox(""TOP"", Vacuum, 1000., 1000., 100.);; geom->SetTopVolume(top);; ; // Make the elementary assembly of the whole structure; TGeoVolume *tplate = new TGeoVolumeAssembly(""TOOTHPLATE"");; ; Int_t ntooth = 5;; Double_t xplate = 25;; Double_t yplate = 50;; Double_t xtooth = 10;; Double_t ytooth = 0.5*yplate/ntooth;; Double_t dshift = 2.*xplate + xtooth;; Double_t xt,yt;; ; TGeoVolume *plate = geom->MakeBox(""PLATE"", Al, xplate,yplate,1);; plate->SetLineColor(kBlue);; TGeoVolume *tooth = geom->MakeBox(""TOOTH"", Al, xtooth,ytooth,1);; tooth->SetLineColor(kBlue);; tplate->AddNode(plate,1);; for (i=0; i<ntooth; i++) {; xt = xplate+xtooth;; yt = -yplate + (4*i+1)*ytooth;; tplate->AddNode(tooth, i+1, new TGeoTranslation(xt,yt,0));; xt = -xplate-xtooth;; yt = -yplate + (4*i+3)*ytooth;; tplate->AddNode(tooth, ntooth+i+1, new TGeoTranslation(xt,yt,0));; }; ; TGeoRotation *rot1 = new TGeoRotation();; rot1->RotateX(90);; TGeoRotation *rot;; // Make a hexagone cell out of 6 tooth plates. These can zip together; // without generating overlaps (they are self-contained); TGeoVolume *cell = new TGeoVolumeAssembly(""CELL"");; for (i=0; i<6; i++) {; Double_t phi = 60.*i;; Double_t phirad = phi*TMath::DegToRad();; Double_t xp = dshift*TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geom_2assembly_8C.html:80,Guid,Guide,80,doc/master/geom_2assembly_8C.html,https://root.cern,https://root.cern/doc/master/geom_2assembly_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/geom/building.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. building.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a building where Dept. ; of Physics is, using ROOT geometry class.; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x building.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void building(); {; TGeoManager *geom = new TGeoManager(""geom"",""My First 3D Geometry"");; ; // Materials; TGeoMaterial *Vacuum = new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe = new TGeoMaterial(""Fe"",55.845,26,7.87);; ; // Media; TGeoMedium *Air = new TGeoMedium(""Air"",0,Vacuum);; TGeoMedium *Iron = new TGeoMedium(""Iron"",0,Fe);; ; // Volume; TGeoVolume *Phy_Building = geom->MakeBox(""top"",Air,150,150,150);; geom->SetTopVolume(Phy_Building);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; TGeoVolume *mBlocks;; ; ; ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////; //////////////////////////////// Front-Building ///////////////////////////////; ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////; ; int i = 0;; int F = 0; // Floor; int N = 0; // Block_no; int nW = 8; // Number of windows; int nF = 3; // Number of Floor; char no_Block[100]; // Name of Block; double sP = 0; // Starting Phi of Tubs; double hP = 21; // Height of Tubs from Ground; ; while (F<nF){; N = 0; i = 0; sP = 0;; ; /////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/building_8C.html:80,Guid,Guide,80,doc/master/building_8C.html,https://root.cern,https://root.cern/doc/master/building_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/cheongwadae.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. cheongwadae.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing the Cheongwadae building which is the Presidential Residence of the Republic of Korea, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x cheongwadae.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void cheongwadae(); {; TGeoManager *geom = new TGeoManager(""geom"",""My first 3D geometry"");; ; //material; TGeoMaterial *vacuum = new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe = new TGeoMaterial(""Fe"",55.845,26,7.87);; ; //creat media; TGeoMedium *Air = new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron = new TGeoMedium(""Iron"",1,Fe);; ; //creat volume; TGeoVolume *top = geom->MakeBox(""top"",Air,300,300,300);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; char nBlocks[100];; int N = 0;; int f=0;; int di[2]; di[0] = 0; di[1] = 30;; TGeoVolume *mBlock;; ; for(int k=0;k<7;k++){; for(int i=0;i<20;i++){; sprintf(nBlocks,""f%d_bg%d"",f,N++);; mBlock = geom->MakeBox(nBlocks, Iron, 0.6,1.8,63);; mBlock->SetLineColor(20);; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(-10.6-(2.6*i),-17.8+(6*k),0));; ; sprintf(nBlocks,""f%d_bg%d"",f,N++);; mBlock = geom->MakeBox(nBlocks, Iron, 0.7,1.8,58);; mBlock->SetLineColor(12);; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(-11.9-(2.6*i),-17.8+(6*k),0));; }; sprintf(nBlocks,""f%d_bg%d"",f,N++);; mBlock = geom->MakeBox(nBlocks, Iron, 26,1.2,63);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/cheongwadae_8C.html:83,Guid,Guide,83,doc/master/cheongwadae_8C.html,https://root.cern,https://root.cern/doc/master/cheongwadae_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/csgdemo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. csgdemo.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Combinatorial Solid Geometry example. ; ; Bool_t raytracing = kTRUE;; ; #include ""TGeoManager.h""; ; //______________________________________________________________________________; TCanvas *create_canvas(const char *title, bool divide = true); {; auto c = (TCanvas *) gROOT->GetListOfCanvases()->FindObject(""csg_canvas"");; if (c) {; c->Clear();; c->Update();; c->SetTitle(title);; } else {; c = new TCanvas(""csg_canvas"", title, 700,1000);; }; ; if (divide) {; c->Divide(1,2,0,0);; c->cd(2);; gPad->SetPad(0,0,1,0.4);; c->cd(1);; gPad->SetPad(0,0.4,1,1);; }; ; return c;; }; ; //______________________________________________________________________________; void MakePicture(); {; Bool_t is_raytracing = gGeoManager->GetTopVolume()->IsRaytracing();; if (is_raytracing != raytracing) {; gGeoManager->GetTopVolume()->SetVisRaytrace(raytracing);; gPad->Modified();; gPad->Update();; }; }; ; //______________________________________________________________________________; void s_union(); {; auto c = create_canvas(""Union boolean operation"");; ; if (gGeoManager) delete gGeoManager;; ; new TGeoManager(""xtru"", ""poza12"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; ; // define shape components with names; TGeoPgon *pgon = new TGeoPgon(""pg"",0.,360.,6,2);; pgon->DefineSection(0,0,0,20);; pgon->DefineSection(1, 30,0,20);; ; TGeoSphere *sph = new TGeoSphere(""sph"", 40., 45., 5., 175., 0., 340.);; // define named geometrical transformations with names; TGeoTranslation *tr = new TGeoTranslation(0., 0., 45.);; tr->SetName(""tr"");; // register all used transformations; tr->RegisterYourself();; // create the composite shape based on a B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geom_2csgdemo_8C.html:79,Guid,Guide,79,doc/master/geom_2csgdemo_8C.html,https://root.cern,https://root.cern/doc/master/geom_2csgdemo_8C.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: tutorials/geom/gdml/testoptical.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. testoptical.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Tests importing/exporting optical surfaces from GDML. ; Optical surfaces, skin surfaces and border surfaces are imported in object arrays stored by TGeoManager class. Optical surfaces do not store property arrays but point to GDML matrices describing such properties. One can get the data for such property like: TGeoOpticalSurface *surf = geom->GetOpticalSurface(""surf1""); const char *property = surf=>GetPropertyRef(""REFLECTIVITY""); TGeoGDMLMatrix *m = geom->GetGDMLMatrix(property); Skin surfaces and border surfaces can be retrieved from the TGeoManager object by using: TObjArray *skin_array = geom->GetListOfSkinSurfaces(); TObjArra8 *border_array = geom->GetListOfBorderSurfaces(); Alternatively accessors by name can also be used: GetSkinSurface(name)/GetBorderSurface(name); AuthorAndrei Gheata ; Definition in file testoptical.C. tutorialsgeomgdmltestoptical.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/testoptical_8C.html:88,Guid,Guide,88,doc/master/testoptical_8C.html,https://root.cern,https://root.cern/doc/master/testoptical_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/geodemo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geodemo.C File ReferenceTutorials » Geometry tutorials. Detailed Description; GUI to draw the geometry shapes. ; ; #include ""TMath.h""; #include ""TControlBar.h""; #include ""TRandom3.h""; #include ""TROOT.h""; #include ""TSystem.h""; #include ""TVirtualPad.h""; #include ""TCanvas.h""; #include ""TVirtualGeoPainter.h""; #include ""TGeoManager.h""; #include ""TGeoNode.h""; #include ""TView.h""; #include ""TPaveText.h""; #include ""TGeoBBox.h""; #include ""TGeoPara.h""; #include ""TGeoTube.h""; #include ""TGeoCone.h""; #include ""TGeoEltu.h""; #include ""TGeoSphere.h""; #include ""TGeoTorus.h""; #include ""TGeoTrd1.h""; #include ""TGeoTrd2.h""; #include ""TGeoParaboloid.h""; #include ""TGeoHype.h""; #include ""TGeoPcon.h""; #include ""TGeoPgon.h""; #include ""TGeoArb8.h""; #include ""TGeoXtru.h""; #include ""TGeoCompositeShape.h""; #include ""TGeoTessellated.h""; #include ""TGeoPhysicalNode.h""; ; Bool_t comments = kTRUE;; Bool_t raytracing = kFALSE;; Bool_t grotate = kFALSE;; Bool_t axis = kTRUE;; ; //______________________________________________________________________________; void MakePicture(); {; TView *view = gPad->GetView();; if (view) {; // view->RotateView(248,66);; if (axis) view->ShowAxis();; }; Bool_t is_raytracing = gGeoManager->GetTopVolume()->IsRaytracing();; if (is_raytracing != raytracing) {; gGeoManager->GetTopVolume()->SetVisRaytrace(raytracing);; gPad->Modified();; gPad->Update();; }; }; ; //______________________________________________________________________________; void AddMemberInfo(TPaveText *pave, const char *datamember, Double_t value, const char *comment); {; TString line = datamember;; while (line.Length() < 10) line.Append("" "");; line.Append(TString::Format(""= %5.2f => %s"", value, comment));; TText *text = pave->AddText(line.Data());; // text->SetTextColor(4);; text->SetTextAlign(12);//12; }; ; //______________________________________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geodemo_8C.html:79,Guid,Guide,79,doc/master/geodemo_8C.html,https://root.cern,https://root.cern/doc/master/geodemo_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/geomAlice.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomAlice.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here ALICE). ; by default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site. ; void geomAlice(); {; TGeoManager::Import(""http://root.cern/files/alice2.root"");; gGeoManager->DefaultColors();; // gGeoManager->SetVisLevel(4);; gGeoManager->GetVolume(""HALL"")->InvisibleAll();; gGeoManager->GetVolume(""ZDCC"")->InvisibleAll();; gGeoManager->GetVolume(""ZDCA"")->InvisibleAll();; gGeoManager->GetVolume(""L3MO"")->InvisibleAll();; gGeoManager->GetVolume(""YOUT1"")->InvisibleAll();; gGeoManager->GetVolume(""YOUT2"")->InvisibleAll();; gGeoManager->GetVolume(""YSAA"")->InvisibleAll();; gGeoManager->GetVolume(""RB24"")->InvisibleAll();; gGeoManager->GetVolume(""RB26Pipe"")->InvisibleAll();; gGeoManager->GetVolume(""DDIP"")->InvisibleAll();; gGeoManager->GetVolume(""DCM0"")->InvisibleAll();; // gGeoManager->GetVolume(""PPRD"")->InvisibleAll();; gGeoManager->GetVolume(""BRS1"")->InvisibleAll();; gGeoManager->GetVolume(""BRS4"")->InvisibleAll();; // gGeoManager->GetVolume(""Dipole"")->InvisibleAll();; gGeoManager->GetVolume(""ZN1"")->InvisibleAll();; gGeoManager->GetVolume(""Q13T"")->InvisibleAll();; gGeoManager->GetVolume(""ZP1"")->InvisibleAll();; gGeoManager->GetVolume(""QTD1"")->InvisibleAll();; gGeoManager->GetVolume(""QTD2"")->InvisibleAll();; gGeoManager->GetVolume(""QBS7"")->InvisibleAll();; gGeoManager->GetVolume(""QA07"")->InvisibleAll();; gGeoManager->GetVolume(""MD1V"")->InvisibleAll();; gGeoManager->GetVolume(""QTD3"")->InvisibleAll();; gGeoManager->GetVolume(""QTD4"")->InvisibleAll();; gGeoManager->GetVolume(""QTD5"")->InvisibleAll();; gGeoManager->GetVolume(""QBS3"")->InvisibleAll();; gGeoManager->GetVolume(""QBS4""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomAlice_8C.html:81,Guid,Guide,81,doc/master/geomAlice_8C.html,https://root.cern,https://root.cern/doc/master/geomAlice_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/geomAlice_itsv.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomAlice_itsv.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here ITSV from Alice). ; By default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site. ; void geomAlice_itsv() {; TGeoManager::Import(""http://root.cern/files/alice2.root"");; gGeoManager->DefaultColors();; gGeoManager->GetVolume(""ITSV"")->Draw(""ogl"");; new TBrowser;; }; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::GetVolumeTGeoVolume * GetVolume(const char *name) constSearch for a named volume. All trailing blanks stripped.Definition TGeoManager.cxx:2942; TGeoManager::DefaultColorsvoid DefaultColors()Set default volume colors according to A of material.Definition TGeoManager.cxx:2259; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; AuthorRene Brun ; Definition in file geomAlice_itsv.C. tutorialsgeomgeomAlice_itsv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomAlice__itsv_8C.html:86,Guid,Guide,86,doc/master/geomAlice__itsv_8C.html,https://root.cern,https://root.cern/doc/master/geomAlice__itsv_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/geomAtlas.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomAtlas.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here ATLAS). ; by default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site. ; void geomAtlas() {; TGeoManager::Import(""http://root.cern/files/atlas.root"");; //gGeoManager->DefaultColors();; gGeoManager->SetMaxVisNodes(5000);; //gGeoManager->SetVisLevel(4);; gGeoManager->GetVolume(""ATLS"")->Draw(""ogl"");; new TBrowser;; }; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::GetVolumeTGeoVolume * GetVolume(const char *name) constSearch for a named volume. All trailing blanks stripped.Definition TGeoManager.cxx:2942; TGeoManager::SetMaxVisNodesvoid SetMaxVisNodes(Int_t maxnodes=10000)set the maximum number of visible nodes.Definition TGeoManager.cxx:2380; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; AuthorRene Brun ; Definition in file geomAtlas.C. tutorialsgeomgeomAtlas.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomAtlas_8C.html:81,Guid,Guide,81,doc/master/geomAtlas_8C.html,https://root.cern,https://root.cern/doc/master/geomAtlas_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/geomBrahms.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomBrahms.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here BRAHMS). ; by default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site. ; void geomBrahms() {; TGeoManager::Import(""http://root.cern/files/brahms.root"");; gGeoManager->GetVolume(""CAVE"")->Draw(""ogl"");; new TBrowser;; }; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::GetVolumeTGeoVolume * GetVolume(const char *name) constSearch for a named volume. All trailing blanks stripped.Definition TGeoManager.cxx:2942; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; AuthorRene Brun ; Definition in file geomBrahms.C. tutorialsgeomgeomBrahms.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomBrahms_8C.html:82,Guid,Guide,82,doc/master/geomBrahms_8C.html,https://root.cern,https://root.cern/doc/master/geomBrahms_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/geomD0.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomD0.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here D0). ; by default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site.; run with .x geomD0.C top level detectors are transparent; or .x geomD0.C(1) top level detectors are visible. ; void RecursiveInvisible(TGeoVolume *vol);; void RecursiveTransparency(TGeoVolume *vol, Int_t transp);; ; void geomD0(Int_t allVisible=0) {; TGeoManager::Import(""http://root.cern/files/d0.root"");; gGeoManager->DefaultColors();; gGeoManager->SetMaxVisNodes(40000);; //gGeoManager->SetVisLevel(4);; if (!allVisible) {; RecursiveInvisible(gGeoManager->GetVolume(""D0-""));; RecursiveInvisible(gGeoManager->GetVolume(""D0+""));; RecursiveInvisible(gGeoManager->GetVolume(""D0WZ""));; RecursiveInvisible(gGeoManager->GetVolume(""D0WL""));; RecursiveTransparency(gGeoManager->GetVolume(""MUON""), 90);; }; ; gGeoManager->GetVolume(""D0"")->Draw(""ogl"");; }; ; void RecursiveInvisible(TGeoVolume *vol); {; vol->InvisibleAll();; Int_t nd = vol->GetNdaughters();; for (Int_t i=0; i<nd; i++) {; RecursiveInvisible(vol->GetNode(i)->GetVolume());; }; }; ; void RecursiveTransparency(TGeoVolume *vol, Int_t transp); {; vol->SetTransparency(transp);; Int_t nd = vol->GetNdaughters();; for (Int_t i=0; i<nd; i++) {; RecursiveTransparency(vol->GetNode(i)->GetVolume(), transp);; }; }; Int_tint Int_tDefinition RtypesCore.h:45; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::GetVolumeTGeoVolume *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomD0_8C.html:78,Guid,Guide,78,doc/master/geomD0_8C.html,https://root.cern,https://root.cern/doc/master/geomD0_8C.html,1,['Guid'],['Guide']
Usability,. ROOT: tutorials/geom/geometry.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geometry.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Example of the old geometry package (now obsolete) ; Definition in file geometry.C. tutorialsgeomgeometry.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geometry_8C.html:80,Guid,Guide,80,doc/master/geometry_8C.html,https://root.cern,https://root.cern/doc/master/geometry_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/lego.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. lego.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a figure, made of lego block, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x lego.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TSystem.h""; #include ""TGeoManager.h""; ; void lego(); {; TGeoManager *geom = new TGeoManager(""geom"",""My first 3D geometry"");; ; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; ; ; ; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; ; ; // create volume; TGeoVolume *top=geom->MakeBox(""top"",Air,100,100,100);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; //----------------------------------------------------------------------; ; TGeoVolume *ha1=geom->MakeSphere(""ha1"",Iron,0,10,80,90,0,360);; ha1->SetLineColor(41);; top->AddNodeOverlap(ha1,1,new TGeoCombiTrans(0,0,4,new TGeoRotation(""ha1"",0,0,0)));; ; TGeoVolume *ha2=geom->MakeSphere(""ha2"",Iron,0,7,90,180,0,360);; ha2->SetLineColor(41);; top->AddNodeOverlap(ha2,1,new TGeoCombiTrans(0,0,4,new TGeoRotation(""ha2"",0,180,0)));; ; TGeoVolume *ha3=geom->MakeSphere(""ha3"",Iron,0,7.3,80,90,0,360);; ha3->SetLineColor(2);; top->AddNodeOverlap(ha3,1,new TGeoCombiTrans(0,0,4.8,new TGeoRotation(""ha3"",0,0,0)));; ; ; TGeoVolume *h1=geom->MakeTubs(""h1"",Iron,0,6,4.5,0,0);; h1->SetLineColor(5);; top->AddNodeOverlap(h1,1,new TGeoComb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geom_2lego_8C.html:76,Guid,Guide,76,doc/master/geom_2lego_8C.html,https://root.cern,https://root.cern/doc/master/geom_2lego_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/mp3player.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. mp3player.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a mp3 type music player, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x mp3player.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TCanvas.h""; #include ""TPaveText.h""; #include ""TImage.h""; #include ""TLine.h""; #include ""TLatex.h""; #include ""TButton.h""; #include ""TGeoManager.h""; ; void mp3player(); {; ; TGeoManager *geom=new TGeoManager(""geom"",""My first 3D geometry"");; ; ; //materials; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; ; //create media; ; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; ; ; //create volume; ; TGeoVolume *top=geom->MakeBox(""top"",Air,800,800,800);; geom->SetTopVolume(top);; geom->SetTopVisible(kFALSE);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; ; TGeoVolume *b1=geom->MakeBox(""b1"",Iron,100,200,600);; b1->SetLineColor(2);; ; ; TGeoVolume *b2=geom->MakeTubs(""b2"",Iron,0,50,200,0,90);; b2->SetLineColor(10);; ; ; TGeoVolume *b3=geom->MakeTubs(""b3"",Iron,0,50,200,90,180);; b3->SetLineColor(10);; ; ; TGeoVolume *b4=geom->MakeTubs(""b4"",Iron,0,50,200,180,270);; b4->SetLineColor(10);; ; TGeoVolume *b5=geom->MakeTubs(""b5"",Iron,0,50,200,270,360);; b5->SetLineColor(10);; ; ; TGeoVolume *b6=geom->MakeTubs(""b6"",Iron,0,50,600,0,90);; b6->SetLineColor(10);; ; TGeoVolume *b7=geom->MakeTubs(""b7"",Iron,0,50,600,90,180);; b7",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mp3player_8C.html:81,Guid,Guide,81,doc/master/mp3player_8C.html,https://root.cern,https://root.cern/doc/master/mp3player_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/na49.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. na49.C File ReferenceTutorials » Geometry tutorials. Detailed Description; This file has been generated automatically via the root utility toroot from an interactive version of GEANT (see ROOT class TGeometry header for an example of use) This shows an example of the old geometry package (now obsolete) ; ; #ifdef __CLING__; #pragma cling optimize(0); #endif; ; #include ""TMaterial.h""; #include ""TMixture.h""; #include ""TNode.h""; #include ""TGeometry.h""; #include ""TRotMatrix.h""; #include ""TBenchmark.h""; #include ""TBRIK.h""; #include ""TTRAP.h""; #include ""TTUBE.h""; ; void na49() {; gBenchmark->Start(""na49"");; ; TMaterial *mat;; TMixture *mix;; TRotMatrix *rot;; TNode *Node;; ; TGeometry *na49 = new TGeometry(""na49"",""na49.C"");; ; ; //-----------List of Materials and Mixtures--------------; ; mat = new TMaterial(""mat1"",""HYDROGEN"",1.01,1,.0708);; mat = new TMaterial(""mat2"",""DEUTERIUM"",2.01,1,.162);; mat = new TMaterial(""mat3"",""HELIUM"",4,2,.125);; mat = new TMaterial(""mat4"",""LITHIUM"",6.94,3,.534);; mat = new TMaterial(""mat5"",""BERILLIUM"",9.01,4,1.848);; mat = new TMaterial(""mat6"",""CARBON"",12.01,6,2.265);; mat = new TMaterial(""mat7"",""NITROGEN"",14.01,7,.808);; mat = new TMaterial(""mat8"",""NEON"",20.18,10,1.207);; mat = new TMaterial(""mat9"",""ALUMINIUM"",26.97999,13,2.7);; mat = new TMaterial(""mat10"",""IRON"",55.84999,26,7.869999);; mat = new TMaterial(""mat11"",""COPPER"",63.54,29,8.96);; mat = new TMaterial(""mat12"",""TUNGSTEN"",183.85,74,19.29999);; mat = new TMaterial(""mat13"",""LEAD"",207.19,82,11.35);; mat = new TMaterial(""mat14"",""URANIUM"",238.0299,92,18.95);; mat = new TMaterial(""mat15"",""AIR"",14.60999,7.3,.001205);; mat = new TMaterial(""mat16"",""VACUUM"",0,0,0);; mat = new TMaterial(""mat17"",""JUNK"",28.09,14,2.329999);; mat = new TMaterial(""mat18"",""JUNK"",28.09,14,2.329999);; mat = new TMaterial(""mat19"",""JUNK"",28.09,14,2.329999);; mat = new TMaterial(""mat20"",""SILICON"",28.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49_8C.html:76,Guid,Guide,76,doc/master/na49_8C.html,https://root.cern,https://root.cern/doc/master/na49_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/na49geomfile.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. na49geomfile.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Before executing this macro, the file makegeometry.C must have been executed. ; ; void na49geomfile() {; gBenchmark->Start(""geometry"");; TGeometry *n49 =(TGeometry*)gROOT->FindObject(""na49"");; if (n49) {; TFile na(""na49.root"",""RECREATE"");; n49->Write();; na.Write();; }; gBenchmark->Show(""geometry"");; }; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; gROOT#define gROOTDefinition TROOT.h:406; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TBenchmark::Showvirtual void Show(const char *name)Stops Benchmark name and Prints results.Definition TBenchmark.cxx:155; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGeometryTGeometry description.Definition TGeometry.h:39; TGeometry::FindObjectTObject * FindObject(const char *name) const overrideSearch object identified by name in the geometry tree.Definition TGeometry.cxx:273; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; na49geomfileDefinition na49geomfile.py:1; AuthorAndrei Gheata ; Definition in file na49geomfile.C. tutorialsgeomna49geomfile.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49geomfile_8C.html:84,Guid,Guide,84,doc/master/na49geomfile_8C.html,https://root.cern,https://root.cern/doc/master/na49geomfile_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/na49view.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. na49view.C File ReferenceTutorials » Geometry tutorials. Detailed Description; This macro generates with 2 views of the NA49 detector using the old obsolete geometry package. . ; void na49view() {; TCanvas *c1 = new TCanvas(""c1"",""The NA49 canvas"",200,10,700,780);; ; gBenchmark->Start(""na49view"");; ; TPad *all = new TPad(""all"",""A Global view of NA49"",0.02,0.02,0.48,0.82,28);; TPad *tof = new TPad(""tof"",""One Time Of Flight element"",0.52,0.02,0.98,0.82,28);; all->Draw();; tof->Draw();; TPaveLabel *na49title = new TPaveLabel(0.04,0.86,0.96,0.98,""Two views of the NA49 detector"");; na49title->SetFillColor(32);; na49title->Draw();; //; TFile *nageom = new TFile(""na49.root"");; if (!nageom || nageom->IsZombie()) return;; TGeometry *n49 =(TGeometry*)gROOT->FindObject(""na49"");; n49->SetBomb(1.2);; n49->cd(); //Set current geometry; all->cd(); //Set current pad; n49->Draw();; c1->Update();; tof->cd();; TNode *TOFR1 = n49->GetNode(""TOFR1"");; TOFR1->Draw();; c1->Update();; ; gBenchmark->Show(""na49view"");; ; // To have a better and dynamic view of any of these pads,; // you can click with the middle button of your mouse to select it.; // Then select ""View with x3d"" in the VIEW menu of the Canvas.; // Once in x3d, you are in wireframe mode by default.; // You can switch to:; // - Hidden Line mode by typing E; // - Solid mode by typing R; // - Wireframe mode by typing W; // - Stereo mode by clicking S (and you need special glasses); // - To leave x3d type Q; }; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; gROOT#define gROOTDefinition TROOT.h:406; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TBenchmark::Showvirtual void Show(const char *name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49view_8C.html:80,Guid,Guide,80,doc/master/na49view_8C.html,https://root.cern,https://root.cern/doc/master/na49view_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/parallel_world.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. parallel_world.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Misaligning geometry generate in many cases overlaps, due to the idealization of the design and the fact that in real life movements of the geometry volumes have constraints and are correlated. ; This typically generates inconsistent response of the navigation methods, leading to inefficiencies during tracking, errors in the material budget calculations, and so on. Among those, there are dangerous cases when the hidden volumes are sensitive. This macro demonstrates how to use the ""parallel world"" feature to assign highest navigation priority to some physical paths in geometry. ; void align();; ; //______________________________________________________________________________; void parallel_world(Bool_t usepw=kTRUE, Bool_t useovlp=kTRUE); {; // web geometry display does not support ""parallel world"" feature; gROOT->SetWebDisplay(""off"");; ; TGeoManager *geom = new TGeoManager(""parallel_world"", ""Showcase for prioritized physical paths"");; TGeoMaterial *matV = new TGeoMaterial(""Vac"", 0,0,0);; TGeoMedium *medV = new TGeoMedium(""MEDVAC"",1,matV);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *medAl = new TGeoMedium(""MEDAL"",2,matAl);; TGeoMaterial *matSi = new TGeoMaterial(""Si"", 28.085,14,2.329);; TGeoMedium *medSi = new TGeoMedium(""MEDSI"",3,matSi);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",medV,100,400,1000);; gGeoManager->SetTopVolume(top);; ; // Shape for the support block; TGeoBBox *sblock = new TGeoBBox(""sblock"", 20,10,2);; // The volume for the support; TGeoVolume *support = new TGeoVolume(""block"",sblock, medAl);; support->SetLineColor(kGreen);; ; // Shape for the sensor to be prioritized in case of overlap; TGeoBBox *ssensor = new TGeoBBox(""sensor"", 19,9,0.2);; // The volume for the sensor; TGeoVolume *sensor = new TGeoV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/parallel__world_8C.html:86,Guid,Guide,86,doc/master/parallel__world_8C.html,https://root.cern,https://root.cern/doc/master/parallel__world_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/robot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. robot.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a famous Korean robot, TaekwonV, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x robot.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void robot(); {; ; ; TGeoManager *Robot = new TGeoManager(""Robot"",""This is Taegwon V"");; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; ; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; ; // create volume; ; TGeoVolume *top=Robot->MakeBox(""top"",Air,1000,1000,1000);; Robot->SetTopVolume(top);; Robot->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; ; // head; TGeoVolume *Band=Robot->MakeEltu(""Band"",Iron,20,20,2.5);; Band->SetLineColor(12);; Band->SetFillColor(12);; TGeoVolume *Band_b=Robot->MakeSphere(""Band_b"",Iron,0,2,0,180,180,360);; Band_b->SetLineColor(2);; Band_b->SetFillColor(2);; TGeoVolume *Head=Robot->MakeSphere(""Head"",Iron,0,19,0,180,180,360);; Head->SetLineColor(17);; Head->SetFillColor(17);; TGeoVolume *Horn=Robot->MakeSphere(""Horn"",Iron,0,10,60,180,240,300);; ; // drawing head; top->AddNodeOverlap(Band,1,new TGeoTranslation(0,0,90));; float Phi = 3.14;; int N = 10;; ; for (int i=0; i<=N;i++){; top->AddNodeOverlap(Band_b,1,new TGeoCombiTrans(sin(2*Phi/N*i)*19,-cos(2*Phi/N*i)*19,90,; new TGeoRotation(""R1"",-90+(360/N*i),-90,90)));; }; top->AddNodeOverlap(H",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/robot_8C.html:77,Guid,Guide,77,doc/master/robot_8C.html,https://root.cern,https://root.cern/doc/master/robot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/rootgeom.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rootgeom.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Definition of a simple geometry (the 4 ROOT characters) ; �␆2�␏V ; void rootgeom(bool vis = true); {; // gStyle->SetCanvasPreferGL(true);; ; TGeoManager *geom = new TGeoManager(""simple1"", ""Simple geometry"");; ; //--- define some materials; TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; // //--- define some media; TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);; ; //--- define the transformations; TGeoTranslation *tr1 = new TGeoTranslation(20., 0, 0.);; TGeoTranslation *tr2 = new TGeoTranslation(10., 0., 0.);; TGeoTranslation *tr3 = new TGeoTranslation(10., 20., 0.);; TGeoTranslation *tr4 = new TGeoTranslation(5., 10., 0.);; TGeoTranslation *tr5 = new TGeoTranslation(20., 0., 0.);; TGeoTranslation *tr6 = new TGeoTranslation(-5., 0., 0.);; TGeoTranslation *tr7 = new TGeoTranslation(7.5, 7.5, 0.);; TGeoRotation *rot1 = new TGeoRotation(""rot1"", 90., 0., 90., 270., 0., 0.);; TGeoCombiTrans *combi1 = new TGeoCombiTrans(7.5, -7.5, 0., rot1);; TGeoTranslation *tr8 = new TGeoTranslation(7.5, -5., 0.);; TGeoTranslation *tr9 = new TGeoTranslation(7.5, 20., 0.);; TGeoTranslation *tr10 = new TGeoTranslation(85., 0., 0.);; TGeoTranslation *tr11 = new TGeoTranslation(35., 0., 0.);; TGeoTranslation *tr12 = new TGeoTranslation(-15., 0., 0.);; TGeoTranslation *tr13 = new TGeoTranslation(-65., 0., 0.);; ; TGeoTranslation *tr14 = new TGeoTranslation(0,0,-100);; TGeoCombiTrans *combi2 = new TGeoCombiTrans(0,0,100,; new TGeoRotation(""rot2"",90,180,90,90,180,0));; TGeoCombiTrans *combi3 = new TGeoCombiTrans(100,0,0,; new TGeoRotation(""rot3"",90,270,0,0,90,180));; TGeoCombiTrans *combi4 = new TGeoCombiTrans(-100,0,0,; new TGeoRotation(""rot4""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootgeom_8C.html:80,Guid,Guide,80,doc/master/rootgeom_8C.html,https://root.cern,https://root.cern/doc/master/rootgeom_8C.html,3,"['Guid', 'Simpl', 'simpl']","['Guide', 'Simple', 'simple']"
Usability,". ROOT: tutorials/geom/runplugin.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. runplugin.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Creates and runs a simple iterator plugin connected to TGeoPainter iterator. ; It demonstrates the possibility to dynamically change the color of drawn volumes according some arbitrary criteria WITHOUT changing the color of the same volume drawn on branches that do not match the criteria.; To run:; root[0] .L iterplugin.cxx+; root[1] .x runplugin.C; root[2] select(2,kMagenta);; root[3] select(3,kBlue); ...; kMagenta@ kMagentaDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; iterpluginDefinition iterplugin.cxx:10; ; #include ""iterplugin.cxx""; ; iterplugin *plugin = nullptr;; ; void runplugin(); {; ; ; TString tutdir = gROOT->GetTutorialDir();; gROOT->ProcessLine("".x "" + tutdir + ""/geom/rootgeom.C"");; plugin = new iterplugin();; gGeoManager->GetGeomPainter()->SetIteratorPlugin(plugin);; }; ; void select(Int_t replica=1, Int_t color=kGreen); {; // Change current color. Replica range: 1-4; plugin->Select(replica, color);; gGeoManager->GetGeomPainter()->ModifiedPad();; }; Int_tint Int_tDefinition RtypesCore.h:45; kGreen@ kGreenDefinition Rtypes.h:66; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; gROOT#define gROOTDefinition TROOT.h:406; TGeoManager::GetGeomPainterTVirtualGeoPainter * GetGeomPainter()Make a default painter if none present. Returns pointer to it.Definition TGeoManager.cxx:2916; TStringBasic string class.Definition TString.h:139; TVirtualGeoPainter::ModifiedPadvirtual void ModifiedPad(Bool_t update=kFALSE) const =0; TVirtualGeoPainter::SetIteratorPluginvirtual void SetIteratorPlugin(TGeoIteratorPlugin *plugin)=0; iterplugin::Selectvoid Select(Int_t replica, Int_t color)Definition iterplugin.cxx:16; iterplugin.cxx; AuthorAndrei Gheata ; Definition in file runplugin.C. tutorialsgeomrunplugin.C. ROOT master - Refe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/runplugin_8C.html:81,Guid,Guide,81,doc/master/runplugin_8C.html,https://root.cern,https://root.cern/doc/master/runplugin_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/geom/shapes.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. shapes.C File ReferenceTutorials » Geometry tutorials. Detailed Description; The old geometry shapes (see script geodemo.C) . ; #include ""TGeometry.h""; #include ""TGeoManager.h""; ; void shapes() {; TCanvas *c1 = new TCanvas(""glc1"",""Geometry Shapes"",200,10,700,500);; ; gSystem->Load(""libGeom"");; //delete previous geometry objects in case this script is re-executed; if (gGeoManager) {; gGeoManager->GetListOfNodes()->Delete();; gGeoManager->GetListOfShapes()->Delete();; }; ; // Define some volumes; TBRIK *brik = new TBRIK(""BRIK"",""BRIK"",""void"",200,150,150);; TTRD1 *trd1 = new TTRD1(""TRD1"",""TRD1"",""void"",200,50,100,100);; TTRD2 *trd2 = new TTRD2(""TRD2"",""TRD2"",""void"",200,50,200,50,100);; TTRAP *trap = new TTRAP(""TRAP"",""TRAP"",""void"",190,0,0,60,40,90,15,120,80,180,15);; TPARA *para = new TPARA(""PARA"",""PARA"",""void"",100,200,200,15,30,30);; TGTRA *gtra = new TGTRA(""GTRA"",""GTRA"",""void"",390,0,0,20,60,40,90,15,120,80,180,15);; TTUBE *tube = new TTUBE(""TUBE"",""TUBE"",""void"",150,200,400);; TTUBS *tubs = new TTUBS(""TUBS"",""TUBS"",""void"",80,100,100,90,235);; TCONE *cone = new TCONE(""CONE"",""CONE"",""void"",100,50,70,120,150);; TCONS *cons = new TCONS(""CONS"",""CONS"",""void"",50,100,100,200,300,90,270);; TSPHE *sphe = new TSPHE(""SPHE"",""SPHE"",""void"",25,340, 45,135, 0,270);; TSPHE *sphe1 = new TSPHE(""SPHE1"",""SPHE1"",""void"",0,140, 0,180, 0,360);; TSPHE *sphe2 = new TSPHE(""SPHE2"",""SPHE2"",""void"",0,200, 10,120, 45,145);; ; TPCON *pcon = new TPCON(""PCON"",""PCON"",""void"",180,270,4);; pcon->DefineSection(0,-200,50,100);; pcon->DefineSection(1,-50,50,80);; pcon->DefineSection(2,50,50,80);; pcon->DefineSection(3,200,50,100);; ; TPGON *pgon = new TPGON(""PGON"",""PGON"",""void"",180,270,8,4);; pgon->DefineSection(0,-200,50,100);; pgon->DefineSection(1,-50,50,80);; pgon->DefineSection(2,50,50,80);; pgon->DefineSection(3,200,50,100);; ; // Set shapes attributes; brik->SetLineColor(1);; trd1->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/shapes_8C.html:78,Guid,Guide,78,doc/master/shapes_8C.html,https://root.cern,https://root.cern/doc/master/shapes_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/shapesAnim.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. shapesAnim.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Macro illustrating how to animate a geometry picture using a Timer. ; ; Double_t pi;; Float_t theta = 0;; Float_t phi = 30;; void shapesAnim() {; TCanvas *c1 = new TCanvas(""c1"",""Geometry Shapes"",10,10,500,500);; ; // Define some volumes; TBRIK *brik = new TBRIK(""BRIK"",""BRIK"",""void"",200,150,150);; TTRD1 *trd1 = new TTRD1(""TRD1"",""TRD1"",""void"",200,50,100,100);; TTRD2 *trd2 = new TTRD2(""TRD2"",""TRD2"",""void"",200,50,200,50,100);; TTRAP *trap = new TTRAP(""TRAP"",""TRAP"",""void"",190,0,0,60,40,90,15,120,80,180,15);; TPARA *para = new TPARA(""PARA"",""PARA"",""void"",100,200,200,15,30,30);; TGTRA *gtra = new TGTRA(""GTRA"",""GTRA"",""void"",390,0,0,20,60,40,90,15,120,80,180,15);; TTUBE *tube = new TTUBE(""TUBE"",""TUBE"",""void"",150,200,400);; TTUBS *tubs = new TTUBS(""TUBS"",""TUBS"",""void"",80,100,100,90,235);; TCONE *cone = new TCONE(""CONE"",""CONE"",""void"",100,50,70,120,150);; TCONS *cons = new TCONS(""CONS"",""CONS"",""void"",50,100,100,200,300,90,270);; TSPHE *sphe = new TSPHE(""SPHE"",""SPHE"",""void"",25,340, 45,135, 0,270);; TSPHE *sphe1 = new TSPHE(""SPHE1"",""SPHE1"",""void"",0,140, 0,180, 0,360);; TSPHE *sphe2 = new TSPHE(""SPHE2"",""SPHE2"",""void"",0,200, 10,120, 45,145);; ; TPCON *pcon = new TPCON(""PCON"",""PCON"",""void"",180,270,4);; pcon->DefineSection(0,-200,50,100);; pcon->DefineSection(1,-50,50,80);; pcon->DefineSection(2,50,50,80);; pcon->DefineSection(3,200,50,100);; ; TPGON *pgon = new TPGON(""PGON"",""PGON"",""void"",180,270,8,4);; pgon->DefineSection(0,-200,50,100);; pgon->DefineSection(1,-50,50,80);; pgon->DefineSection(2,50,50,80);; pgon->DefineSection(3,200,50,100);; ; // Set shapes attributes; brik->SetLineColor(1);; trd1->SetLineColor(2);; trd2->SetLineColor(3);; trap->SetLineColor(4);; para->SetLineColor(5);; gtra->SetLineColor(7);; tube->SetLineColor(6);; tubs->SetLineColor(7);; cone->SetLineColor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/shapesAnim_8C.html:82,Guid,Guide,82,doc/master/shapesAnim_8C.html,https://root.cern,https://root.cern/doc/master/shapesAnim_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/south_gate.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. south_gate.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a famous Korean gate, the South gate, called Namdeamoon in Korean, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x south_gate.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void south_gate(); {; ; ; TGeoManager *geom=new TGeoManager(""geom"",""My first 3D geometry"");; ; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);//a,z,rho; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; ; //Create media; ; TGeoMedium *Air = new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron = new TGeoMedium(""Iron"",1,Fe);; ; //Create volume; ; TGeoVolume *top = geom->MakeBox(""top"",Air,1000,1000,1000);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; //base; ; char nBlocks[100];; int i=1;; int N = 0;; int f=0;; int di[2]; di[0] = 0; di[1] = 30;; TGeoVolume *mBlock;; ; while (f<11){; while (i<14){; if (i==6 && f<8){; i = i+3;; }; ; sprintf(nBlocks,""f%d_bg%d"",f,N++);; mBlock = geom->MakeBox(nBlocks, Iron, 29,149,9);; mBlock->SetLineColor(20);; if (f<8){; if (i<=5 && f<8){; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(-120-((i-1)*60)-di[f%2],5,5+(20*f)));; } else if (i>5 && f<8){; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(120+((i-9)*60) +di[f%2],5,5+(20*f)));; }; } else {; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(-420+(i*60)-di[f%2],5,5+(20*f)));; }; i++;; if (i>=14 && ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/south__gate_8C.html:82,Guid,Guide,82,doc/master/south__gate_8C.html,https://root.cern,https://root.cern/doc/master/south__gate_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/station1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. station1.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a space station, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x station1.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void station1(); {; ; ; TGeoManager *geom=new TGeoManager(""geom"",""My first 3D geometry"");; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; TGeoMaterial *Cu=new TGeoMaterial(""Cu"",63.549,29,8.92);; ; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; TGeoMedium *Copper=new TGeoMedium(""Copper"",2,Cu);; ; TGeoVolume *top=geom->MakeBox(""top"",Air,1000,1000,1000);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; ; TGeoVolume *Cone1=geom->MakeCone(""Cone1"",Copper,650,0,20,0,20);; Cone1->SetFillColor(35);; Cone1->SetLineColor(35);; top->AddNodeOverlap(Cone1,1,new TGeoTranslation(0,0,0));; ; TGeoVolume *Cone2=geom->MakeCone(""Cone2"",Copper,25,0,30,0,30);; Cone2->SetFillColor(7);; Cone2->SetLineColor(7);; top->AddNodeOverlap(Cone2,1,new TGeoTranslation(0,0,630));; ; TGeoVolume *Cone21=geom->MakeCone(""Cone21"",Copper,30,0,30,0,30);; Cone21->SetFillColor(29);; Cone21->SetLineColor(29);; top->AddNodeOverlap(Cone21,1,new TGeoTranslation(0,0,550));; ; TGeoVolume *Cone22=geom->MakeCone(""Cone22"",Copper,5,0,50,0,50);; Cone22->SetFillColor(2);; Cone22->SetLineColor(2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/station1_8C.html:80,Guid,Guide,80,doc/master/station1_8C.html,https://root.cern,https://root.cern/doc/master/station1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/station2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. station2.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a space station (version 2), using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x station2.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void station2(); {; ; ; TGeoManager *geom = new TGeoManager(""geom"",""Space Station"");; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; TGeoMaterial *Cu=new TGeoMaterial(""Cu"",63.549,29,8.92);; ; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; TGeoMedium *Copper=new TGeoMedium(""Copper"",2,Cu);; ; TGeoVolume *top=geom->MakeBox(""top"",Air,1000,1000,1000);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; TGeoVolume *b1=geom->MakeBox(""b1"",Iron,1,2,3);; b1->SetLineColor(37);; b1->SetFillColor(37);; ; TGeoVolume *b2=geom->MakeBox(""b2"",Iron,1,2,3);; b2->SetLineColor(37);; b2->SetFillColor(37);; ; TGeoVolume *b12=geom->MakeBox(""b12"",Iron,1,2,3);; b12->SetLineColor(37);; b12->SetFillColor(37);; ; TGeoVolume *b22=geom->MakeBox(""b22"",Iron,1,2,3);; b22->SetLineColor(37);; b22->SetFillColor(37);; ; TGeoVolume *b13=geom->MakeBox(""b13"",Iron,1,2,3);; b13->SetLineColor(37);; b13->SetFillColor(37);; ; TGeoVolume *b23=geom->MakeBox(""b23"",Iron,1,2,3);; b23->SetLineColor(37);; b23->SetFillColor(37);; ; TGeoVolume *b14=geom->MakeBox(""b14"",Iron,1,2,3);; b1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/station2_8C.html:80,Guid,Guide,80,doc/master/station2_8C.html,https://root.cern,https://root.cern/doc/master/station2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/tank.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tank.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a fine tank, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x tank.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void tank(); {; TGeoManager *geom = new TGeoManager(""geom"",""My 3D Project"");; ; //------------------Creat materials-----------------------------; TGeoMaterial *vacuum = new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe = new TGeoMaterial(""Fe"",55.84,26.7,7.87);; TGeoMaterial *Cu = new TGeoMaterial(""Cu"",63.549,29,8.92);; ; //------------------Creat media----------------------------------; TGeoMedium *Air = new TGeoMedium(""Air"",0,vacuum);; TGeoMedium *Iron = new TGeoMedium(""Iron"",1,Fe);; ; //------------------Create TOP volume----------------------------; TGeoVolume *top = geom->MakeBox(""top"",Air,100,100,100);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; //-----------------Create Object volume--------------------------; ; ; //Now, we start real shape; ; //UpperBody; TGeoVolume *pl=geom->MakeBox(""pl"",Iron,210,93,20);; pl->SetLineColor(42);; TGeoVolume *pl1=geom->MakeBox(""pl1"",Iron,217,50,5);; pl1->SetLineColor(42);; TGeoVolume *pl2=geom->MakeTrd2(""pl2"",Iron,219,150,50,40,10);; pl2->SetLineColor(42);; TGeoVolume *plu=geom->MakeTrd2(""plu"",Iron,210,70,100,100,5);; plu->SetLineColor(42);; top->AddNodeOverlap(plu,1,new TGeoTranslation(0,0,-105));; TGeoVolume *sp=geom->MakeTu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tank_8C.html:76,Guid,Guide,76,doc/master/tank_8C.html,https://root.cern,https://root.cern/doc/master/tank_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/tessellatedNav.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tessellatedNav.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Macro allowing to vizualize tessellations from Wavefront's .obj format. . ; #include <TROOT.h>; #include <TColor.h>; #include <TDatime.h>; #include <TRandom3.h>; #include <TGeoManager.h>; #include <TGeoTessellated.h>; #include <TVirtualGeoConverter.h>; #include <TView.h>; ; //______________________________________________________________________________; int randomColor(); {; gRandom = new TRandom3();; TDatime dt;; gRandom->SetSeed(dt.GetTime());; int ci = TColor::GetFreeColorIndex();; TColor *color = new TColor(ci, gRandom->Rndm(), gRandom->Rndm(), gRandom->Rndm());; return ci;; }; ; //______________________________________________________________________________; void tessellatedNav(const char *dot_obj_file = """", bool check = false); {; // Input a file in .obj format (https://en.wikipedia.org/wiki/Wavefront_.obj_file); // The file should have a single object inside, only vertex and faces information is used; TString name = dot_obj_file;; TString sfile = dot_obj_file;; if (sfile.IsNull()) {; sfile = gROOT->GetTutorialsDir();; sfile += ""/geom/teddy.obj"";; }; name.ReplaceAll("".obj"", """");; gROOT->GetListOfCanvases()->Delete();; if (gGeoManager); delete gGeoManager;; auto geom = new TGeoManager(name, ""Imported from .obj file"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98, 13, 2.7);; TGeoMedium *med = new TGeoMedium(""MED"", 1, mat);; TGeoVolume *top = geom->MakeBox(""TOP"", med, 10, 10, 10);; geom->SetTopVolume(top);; ; auto tsl = TGeoTessellated::ImportFromObjFormat(sfile.Data(), check);; if (!tsl); return;; tsl->ResizeCenter(5.);; ; TGeoVolume *vol = new TGeoVolume(name, tsl, med);; vol->SetLineColor(randomColor());; vol->SetLineWidth(2);; top->AddNode(vol, 1);; geom->CloseGeometry();; ; // Convert to VecGeom tessellated solid; auto converter = TVi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tessellatedNav_8C.html:86,Guid,Guide,86,doc/master/tessellatedNav_8C.html,https://root.cern,https://root.cern/doc/master/tessellatedNav_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/visualizeWavefrontObj.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. visualizeWavefrontObj.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Macro allowing to vizualize tessellations from Wavefront's .obj format. . ; #include <TROOT.h>; #include <TColor.h>; #include <TDatime.h>; #include <TRandom3.h>; #include <TGeoManager.h>; #include <TGeoTessellated.h>; ; //______________________________________________________________________________; int randomColor(); {; gRandom = new TRandom3();; TDatime dt;; gRandom->SetSeed(dt.GetTime());; int ci = TColor::GetFreeColorIndex();; TColor *color = new TColor(ci, gRandom->Rndm(), gRandom->Rndm(), gRandom->Rndm());; return ci;; }; ; //______________________________________________________________________________; void visualizeWavefrontObj(const char *dot_obj_file="""", bool check = false); {; // Input a file in .obj format (https://en.wikipedia.org/wiki/Wavefront_.obj_file); // The file should have a single object inside, only vertex and faces information is used; ; TString name = dot_obj_file;; TString sfile = dot_obj_file;; if (sfile.IsNull()) {; sfile = gROOT->GetTutorialsDir();; sfile += ""/geom/teddy.obj"";; }; name.ReplaceAll("".obj"", """");; gROOT->GetListOfCanvases()->Delete();; if (gGeoManager); delete gGeoManager;; new TGeoManager(name, ""Imported from .obj file"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98, 13, 2.7);; TGeoMedium *med = new TGeoMedium(""MED"", 1, mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"", med, 10, 10, 10);; gGeoManager->SetTopVolume(top);; ; auto tsl = TGeoTessellated::ImportFromObjFormat(sfile.Data(), check);; if (!tsl) return;; tsl->ResizeCenter(5.);; ; TGeoVolume *vol = new TGeoVolume(name, tsl, med);; vol->SetLineColor(randomColor());; vol->SetLineWidth(2);; top->AddNode(vol, 1);; gGeoManager->CloseGeometry();; if (!gROOT->IsBatch()) top->Draw(""ogl"");; }; TColor.h; TDatime.h; namechar name[80]Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/visualizeWavefrontObj_8C.html:93,Guid,Guide,93,doc/master/visualizeWavefrontObj_8C.html,https://root.cern,https://root.cern/doc/master/visualizeWavefrontObj_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/xtruDraw.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. xtruDraw.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Draw a ""representative"" TXTRU shape. . ; void xtruDraw() {; TCanvas *canvas = new TCanvas(""xtru"",""Example XTRU object"",200,10,640,640);; ; // Create a new geometry; TGeometry* geometry = new TGeometry(""geometry"",""geometry"");; geometry->cd();; ; TXTRU* atxtru = new TXTRU(""atxtru"",""atxtru"",""void"",5,2);; ; // outline and z segment specifications; ; Float_t x[] =; { -177.292, -308.432, -308.432, -305.435, -292.456, -280.01; , -241.91, -241.91, -177.292, -177.292, 177.292, 177.292; , 241.91, 241.91, 280.06, 297.942, 305.435, 308.432; , 308.432, 177.292, 177.292, -177.292 };; Float_t y[] =; { 154.711, 23.5712, 1.1938, 1.1938, 8.6868, 8.6868; , -3.7592, -90.0938, -154.711, -190.602, -190.602, -154.711; , -90.0938, -3.7592, 8.6868, 8.6868, 1.1938, 1.1938; , 23.5712, 154.711, 190.602, 190.602 };; Float_t z[] =; { 0.00, 500.0 };; Float_t scale[] =; { 1.00, 1.00 };; Float_t x0[] =; { 0, 0 };; Float_t y0[] =; { 0, 0 };; ; Int_t i;; ; Int_t nxy = sizeof(x)/sizeof(Float_t);; for (i=0; i<nxy; i++) {; atxtru->DefineVertex(i,x[i],y[i]);; }; ; Int_t nz = sizeof(z)/sizeof(Float_t);; for (i=0; i<nz; i++) {; atxtru->DefineSection(i,z[i],scale[i],x0[i],y0[i]);; }; ; // Define a TNode where this example resides in the TGeometry; // Draw the TGeometry; ; TNode* anode = new TNode(""anode"",""anode"",atxtru);; anode->SetLineColor(1);; ; geometry->Draw();; ; // Tweak the pad scales so as not to distort the shape; ; TVirtualPad *thisPad = gPad;; if (thisPad) {; TView *view = thisPad->GetView();; if (!view) return;; Double_t min[3],max[3],center[3];; view->GetRange(min,max);; int i;; // Find the boxed center; for (i=0;i<3; i++) center[i] = 0.5*(max[i]+min[i]);; Double_t maxSide = 0;; // Find the largest side; for (i=0;i<3; i++) maxSide = TMath::Max(maxSide,max[i]-center[i]);; file://Adjust sca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/xtruDraw_8C.html:80,Guid,Guide,80,doc/master/xtruDraw_8C.html,https://root.cern,https://root.cern/doc/master/xtruDraw_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/geom/xtruSamples.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. xtruSamples.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Draw a sample of TXTRU shapes some convex, concave (and possibly malformed) ; Change Bool_t's to test alternative specifications. ; void xtruSamples(); {; // One normally specifies the x-y points in counter-clockwise order;; // flip this to TRUE to test that it doesn't matter.; Bool_t makecw = kFALSE;; ; // One normally specifies the z points in increasing z order;; // flip this to TRUE to test that it doesn't matter.; Bool_t reversez = kFALSE;; ; // One shouldn't be creating malformed polygons; // but to test what happens when one does here's a flag.; // The effect will be only apparent in solid rendering mode; Bool_t domalformed = kFALSE;; // domalformed = kTRUE;; ; TCanvas* c1 = new TCanvas(""c1"",""sample TXTRU Shapes"",200,10,640,640);; ; // Create a new geometry; TGeometry* geom = new TGeometry(""sample"",""sample"");; geom->cd();; ; // Define the complexity of the drawing; Int_t zseg = 6; // either 2 or 6; Int_t extravis = 0; // make extra z ""arrow"" visible; ; Float_t unit = 1;; ; // Create a large BRIK to embed things into; Float_t bigdim = 12.5*unit;; TBRIK* world = new TBRIK(""world"",""world"",""void"",bigdim,bigdim,bigdim);; ; // Create the main node, make it invisible; TNode* worldnode = new TNode(""worldnode"",""world node"",world);; worldnode->SetVisibility(0);; worldnode->cd();; ; // Canonical shape ... gets further modified by scale factors; // to create convex (and malformed) versions; Float_t x[] = { -0.50, -1.20, 1.20, 0.50, 0.50, 1.20, -1.20, -0.50 };; Float_t y[] = { -0.75, -2.00, -2.00, -0.75, 0.75, 2.00, 2.00, 0.75 };; Float_t z[] = { -0.50, -1.50, -1.50, 1.50, 1.50, 0.50 };; Float_t s[] = { 0.50, 1.00, 1.50, 1.50, 1.00, 0.50 };; Int_t nxy = sizeof(x)/sizeof(Float_t);; Float_t convexscale[] = { 7.0, -1.0, 1.5 };; ; Int_t icolor[] = { 1, 2, 3, 2, 2, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/xtruSamples_8C.html:83,Guid,Guide,83,doc/master/xtruSamples_8C.html,https://root.cern,https://root.cern/doc/master/xtruSamples_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glViewerExercise.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glViewerExercise.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Script showing how to use the GL viewer API to animate a picture. ; ; #include ""TGLViewer.h""; #include ""TGLOrthoCamera.h""; #include ""TTimer.h""; #include ""TRandom.h""; #include ""TVirtualPad.h""; ; TGLViewer::ECameraType camera;; TTimer timer(25);; TRandom randGen(0);; ; Int_t moveCount = 0;; ; void AnimateCamera(); {; // initialization; static Double_t fov = 30;; static Double_t zoom = 0.78;; static Double_t dolly = 1500.0;; static Double_t center[3] = {-164.0, -164.0, -180.0};; static Double_t hRotate = 0.0;; static Double_t vRotate = 0.0;; // steps; static Double_t fovStep = randGen.Rndm()*3.0 - 0.5;; static Double_t zoomStep = (20 - randGen.Rndm())/1000.;; static Double_t dollyStep = randGen.Rndm()*5.0 - 1.0;; static Double_t centerStep[3] = {randGen.Rndm()*4, randGen.Rndm()*4,; randGen.Rndm()*4 };; static Double_t hRotateStep = randGen.Rndm()*0.025;; static Double_t vRotateStep = randGen.Rndm()*0.05;; ; // move center; center[0] += centerStep[0];; center[1] += centerStep[1];; center[2] += centerStep[2];; Double_t mag = TMath::Sqrt(center[0]*center[0] + center[1]*center[1] +; center[2]*center[2]);; if(mag > 500); {; centerStep[0] = -centerStep[0];; centerStep[1] = -centerStep[1];; centerStep[2] = -centerStep[2];; }; ; // rotate; hRotate += hRotateStep;; vRotate += vRotateStep;; if (vRotate >= TMath::TwoPi() || vRotate <= 0.0); vRotateStep = -vRotateStep;; ; if (hRotate >= (TMath::PiOver2()- 0.02f) ||; hRotate <= (0.07f -TMath::PiOver2())) {; hRotateStep = -hRotateStep;; }; ; // dolly; dolly += dollyStep;; if (dolly >= 2000.0 || dolly <= 1500.0); dollyStep = -dollyStep;; ; // modify frustum; TGLViewer * v = (TGLViewer *)gPad->GetViewer3D();; if(camera < 3); {; fov += fovStep;; if (fov > 130.0 || fov < 5.0); fovStep = - fovStep; }; else; {; zoom += zo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glViewerExercise_8C.html:86,Guid,Guide,86,doc/master/glViewerExercise_8C.html,https://root.cern,https://root.cern/doc/master/glViewerExercise_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glViewerLOD.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glViewerLOD.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; To set the Level Of Details when rendering geometry shapes. ; ; void glViewerLOD(Int_t reqNodes = 1000, Bool_t randomDist = kTRUE,; Bool_t reqSpheres = kTRUE, Bool_t reqTubes = kTRUE); {; TGeoManager * geom = new TGeoManager(""LODTest"", ""GL viewer LOD test"");; geom->SetNsegments(4); // Doesn't matter keep low; TGeoMaterial *matEmptySpace = new TGeoMaterial(""EmptySpace"", 0, 0, 0);; TGeoMaterial *matSolid = new TGeoMaterial(""Solid"" , .938, 1., 10000.);; ; TGeoMedium *medEmptySpace = new TGeoMedium(""Empty"", 1, matEmptySpace);; TGeoMedium *medSolid = new TGeoMedium(""Solid"", 1, matSolid);; ; Double_t sizeBase = 20.0;; Double_t worldRadius;; if (randomDist) {; worldRadius = pow(reqNodes,.5)*sizeBase;; } else {; worldRadius = pow(reqNodes,.3)*sizeBase;; }; ; TGeoVolume *top = geom->MakeBox; (""WORLD"", medEmptySpace, worldRadius, worldRadius, worldRadius);; geom->SetTopVolume(top);; ; gRandom->SetSeed();; ; // Create random number of unique sphere shapes - up to 25% of; // total placed sphere requested; UInt_t volumeCount = gRandom->Integer(reqNodes/4)+1;; TGeoVolume ** volumes = new TGeoVolume *[volumeCount];; TGeoVolume * volume;; UInt_t i;; Double_t dummy;; ; for (i = 0; i < volumeCount; i++) {; char name[128];; sprintf(name, ""Volume_%d"", i);; ; // Random volume shape; Int_t type = -1;; if (reqSpheres && reqTubes) {; type = gRandom->Integer(2);; if (type == 1); type += gRandom->Integer(3);; }; else if(reqSpheres); type = 0;; else if(reqTubes); type = 1 + gRandom->Integer(3);; ; // Random dimensions; Double_t rMin = gRandom->Rndm() * sizeBase;; Double_t rMax = rMin + gRandom->Rndm() * sizeBase * 2.0;; Double_t dz = pow(gRandom->Rndm(),2.0) * sizeBase * 15.0;; Double_t phi1 = gRandom->Rndm() * 90.0;; Double_t phi2 = phi1 + gRandom->Rndm() * 270.0;; ; // Pick random co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glViewerLOD_8C.html:81,Guid,Guide,81,doc/master/glViewerLOD_8C.html,https://root.cern,https://root.cern/doc/master/glViewerLOD_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glbox.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glbox.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Display a 3D histogram using GL (box option). . ; void glbox(); {; gStyle->SetCanvasPreferGL(kTRUE);; TCanvas *c = new TCanvas(""glbox"",""TH3 Drawing"", 100, 10, 850, 400);; TPaveLabel *title = new TPaveLabel(0.04, 0.86, 0.96, 0.98,; ""\""glbox\"" and \""glbox1\"" options for TH3."");; title->SetFillColor(32);; title->Draw();; ; TPad *boxPad = new TPad(""box"", ""box"", 0.02, 0.02, 0.48, 0.82);; TPad *box1Pad = new TPad(""box1"", ""box1"", 0.52, 0.02, 0.98, 0.82);; boxPad->Draw();; box1Pad->Draw();; ; TH3F *h31 = new TH3F(""h31"", ""h31"", 10, -1, 1, 10, -1, 1, 10, -1, 1);; TF3 * gxy = new TF3(""gaus2"",""xygaus"");; gxy->SetParameters(1,0,1,0,0.3);; h31->FillRandom(""gaus2"");; h31->SetFillColor(2);; boxPad->cd();; h31->Draw(""glbox"");; ; TH3F *h32 = new TH3F(""h32"", ""h32"", 10, -2, 2, 10, -1, 1, 10, -3, 3);; TF3 * g3 = new TF3(""gaus3"",""xyzgaus"");; g3->SetParameters(1,0,1,0,1,0,1);; h32->FillRandom(""gaus3"");; h32->SetFillColor(4);; box1Pad->cd();; h32->Draw(""glbox1"");; }; c#define c(i)Definition RSha256.hxx:101; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; TF3A 3-Dim function with parameters.Definition TF3.h:28; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH3F3-D histogram with a float per channel (see TH1 documentation)Definition TH3.h:317; TH3::FillRandomvoid FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr) overrideFill histogram following distribution in function fname.Definition TH3.cxx:833; TPadThe m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glbox_8C.html:75,Guid,Guide,75,doc/master/glbox_8C.html,https://root.cern,https://root.cern/doc/master/glbox_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/gldemos.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gldemos.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Menu for running GL demos. ; ; void gldemos(); {; TControlBar *bar = new TControlBar(""vertical"", ""GL painter demo"",20,20);; bar->AddButton(""Help on demos"", ""help()"", ""Description"");; bar->AddButton(""glsurfaces"", "".x $ROOTSYS/tutorials/gl/glsurfaces.C"", ""Surface painter example"");; bar->AddButton(""glrose"", "".x $ROOTSYS/tutorials/gl/glrose.C"", ""Surface in polar system"");; bar->AddButton(""gltf3"", "".x $ROOTSYS/tutorials/gl/gltf3.C"", ""TF3 painter"");; bar->AddButton(""glbox"", "".x $ROOTSYS/tutorials/gl/glbox.C"", ""BOX painter"");; bar->AddButton(""glparametric"", "".x $ROOTSYS/tutorials/gl/glparametric.C"", ""Parametric surface"");; bar->Show();; }; ; void help(); {; new TCanvas(""chelp"",""Help on gldemos"",200,10,700,600);; ; TPaveLabel *title = new TPaveLabel(0.04, 0.86, 0.96, 0.98, ""These demos show different gl painters."");; title->SetFillColor(32);; title->Draw();; ; TPaveText *hdemo = new TPaveText(0.04, 0.04, 0.96, 0.8);; hdemo->SetTextAlign(12);; hdemo->SetTextFont(52);; hdemo->SetTextColor(kBlue);; hdemo->AddText(""1. Glsurfaces demo shows glsurf4, glsurf1, glsurf3, glsurf1cyl, glsurfpol, gltf3 options."");; hdemo->AddText(""2. Glrose demontrates \""glsurf2pol\"" drawing option and user-defined palette."");; hdemo->AddText(""3. Gltf3 demo shows \""gltf3\"" option."");; hdemo->AddText(""4. Glbox demo shows \""glbox\"" and \""glbox1\"" options for TH3."");; hdemo->AddText(""5. Glparametric demo shows how to define and display parametric surfaces."");; hdemo->AddText(""You can zoom any plot: press 'J', 'K', 'j', 'k' keys, or use mouse wheel."");; hdemo->AddText(""Rotate any plot:"");; hdemo->AddText("" ---select plot with mouse cursor,"");; hdemo->AddText("" ---move mouse cursor, pressing and holding left mouse button "");; hdemo->AddText(""Pan plot:"");; hdemo->AddText("" ---select with mouse cursor a part ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gldemos_8C.html:77,Guid,Guide,77,doc/master/gldemos_8C.html,https://root.cern,https://root.cern/doc/master/gldemos_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glh3c.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glh3c.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Display a 3D histogram using GL (box option). . ; void glh3c(); {; gStyle->SetCanvasPreferGL(kTRUE);; ; ; TGLTH3Composition * comp = new TGLTH3Composition;; TH3F * h1 = new TH3F(""h1"", ""h1"", 10, -1., 1., 10, -1., 1., 10, -1., 1.);; TF3 * g3 = new TF3(""gaus3"",""xyzgaus"");; g3->SetParameters(1,0,1,0,1,0,1);; h1->FillRandom(""gaus3"");; h1->SetFillColor(kRed);; TH3F * h2 = new TH3F(""h2"", ""h2"", 10, -1., 1., 10, -1., 1., 10, -1., 1.);; TF3 * l3 = new TF3(""landau3"",""landau(x,[0],[1],[2])*gaus(y,1,[3],[4])*gaus(z,1,[3],[4])"");; l3->SetParameters(1,0,1,0.,0.5);; h2->FillRandom(""landau3"");; h2->SetFillColor(kGreen);; TH3F * h3 = new TH3F(""h3"", ""h3"", 10, -1., 1., 10, -1., 1., 10, -1., 1.);; TF3 * gx = new TF3(""gaus1"",""gaus(x)"");; gx->SetParameters(1,0,1);; h3->FillRandom(""gaus1"");; h3->SetFillColor(kBlue);; ; comp->AddTH3(h1);; comp->AddTH3(h2, TGLTH3Composition::kSphere);; comp->AddTH3(h3);; ; comp->Draw();; ; TPaveLabel *title = new TPaveLabel(0.04, 0.86, 0.96, 0.98,; ""TH3 composition."");; title->SetFillColor(32);; title->Draw();; }; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; TF3A 3-Dim function with parameters.Definition TF3.h:28; TGLTH3CompositionDefinition TGLTH3Composition.h:27; TGLTH3Composition::AddTH3void AddTH3(const TH3 *hist, ETH3BinShape shape=kBox)Add TH3 into collection.Definition TGLTH3Composition.cxx:42; TGLTH3Composition::kSphere@ kSphereDefinition TGLTH3Composition.h:34; TH1::FillRandomvirtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glh3c_8C.html:75,Guid,Guide,75,doc/master/glh3c_8C.html,https://root.cern,https://root.cern/doc/master/glh3c_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glparametric.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glparametric.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Show rendering of parametric surfaces. ; A parametric surface is defined by three functions: S(u, v) : {x(u, v), y(u, v), z(u, v)}. To create parametric surface and draw it one has to:; Create canvas, which support OpenGL drawing (two ways):; Call gStyle->SetCanvasPreferGL(kTRUE); Or create canvas with name, wich contains ""gl"". create TGLParametricEquation object. TGLParametricEquation *eq = new TGLParametricEquation(""name"",; ""some FORMULA here - x(u, v)"",; ""some FORMULA here - y(u, v)"",; ""some FORMULA here - z(u, v)"",; uMin, uMax, vMin, vMax);; TGLParametricEquationA parametric surface is a surface defined by a parametric equation, involving two parameters (u,...Definition TGLParametric.h:35; where FORMULA is the same string (mathematical expression), as in TF2, but you should use 'u' (or 'U') instead of 'x' and 'v' (or 'V') instead of 'y'.; Call equation->Draw(); Parametric surfaces support 21 color ""schemes"", you can change the color:; place mouse cursor above surface (surface is selected in pad); press 's' or 'S'. ; void glparametric(); {; gStyle->SetCanvasPreferGL(kTRUE);; TCanvas *c = new TCanvas(""canvas"",""Parametric surfaces with gl"", 100, 10,; 700, 700);; c->SetFillColor(42);; gStyle->SetFrameFillColor(42);; ; c->Divide(2, 2);; c->cd(1);; TGLParametricEquation *p1 = new TGLParametricEquation(""Conchoid"",; ""1.2 ^ u * (1 + cos(v)) * cos(u)"",; ""1.2 ^ u * (1 + cos(v)) * sin(u)"",; ""1.2 ^ u * sin(v) - 1.5 * 1.2 ^ u"",; 0., 6 * TMath::Pi(), 0., TMath::TwoPi());; p1->Draw();; ; c->cd(2);; TGLParametricEquation *p2 = new TGLParametricEquation(""Apple"",; ""cos(u) * (4 + 3.8 * cos(v)) "",; ""sin(u) * (4 + 3.8 * cos(v))"",; ""(cos(v) + sin(v) - 1) * (1 + sin(v)) * log(1 - pi * v / 10) + 7.5 * sin(v)"",; 0, TMath::TwoPi(), -TMath::Pi(), TMath::Pi());; p2->Draw();; ; c->c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glparametric_8C.html:82,Guid,Guide,82,doc/master/glparametric_8C.html,https://root.cern,https://root.cern/doc/master/glparametric_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glparametrics2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glparametrics2.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Show rendering of parametric surfaces. ; A parametric surface is defined by three functions: S(u, v) : {x(u, v), y(u, v), z(u, v)}. To create parametric surface and draw it one has to:; Create canvas, which support OpenGL drawing (two ways):; Call gStyle->SetCanvasPreferGL(kTRUE); Or create canvas with name, wich contains ""gl"". create TGLParametricEquation object. TGLParametricEquation *eq = new TGLParametricEquation(""name"",; ""some FORMULA here - x(u, v)"",; ""some FORMULA here - y(u, v)"",; ""some FORMULA here - z(u, v)"",; uMin, uMax, vMin, vMax);; TGLParametricEquationA parametric surface is a surface defined by a parametric equation, involving two parameters (u,...Definition TGLParametric.h:35; where FORMULA is the same string (mathematical expression), as in TF2, but you should use 'u' (or 'U') instead of 'x' and 'v' (or 'V') instead of 'y'.; Call equation->Draw(); Parametric surfaces support 21 color ""schemes"", you can change the color:; place mouse cursor above surface (surface is selected in pad); press 's' or 'S'. ; void klein_bottle(TGLVertex3 &dst, Double_t u, Double_t v); {; using namespace TMath;; ; const Double_t r = 4. * (1. - Cos(u) / 2.);; if (u < Pi()) {; dst.X() = 6 * Cos(u) * (1. + Sin(u)) + r * Cos(u) * Cos(v);; dst.Y() = 16 * Sin(u) + r * Sin(u) * Cos(v);; } else {; dst.X() = 6 * Cos(u) * (1. + Sin(u)) + r * Cos(v + Pi());; dst.Y() = 16 * Sin(u);; }; dst.Z() = r * Sin(v);; }; ; void glparametrics2(); {; gStyle->SetCanvasPreferGL(kTRUE);; TCanvas *c = new TCanvas(""canvas"",""Parametric surfaces with gl"", 100, 10, 700, 700);; ; c->Divide(2, 2);; c->cd(1);; TGLParametricEquation *p1 = new TGLParametricEquation(""Shell"",; ""1.2 ^ v * sin(u) ^ 2 * sin(v)"",; ""1.2 ^ v * sin(u) * cos(u)"",; ""1.2 ^ v * sin(u) ^ 2 * cos(v)"",; 0., TMath::Pi(), // 0 <= ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glparametrics2_8C.html:84,Guid,Guide,84,doc/master/glparametrics2_8C.html,https://root.cern,https://root.cern/doc/master/glparametrics2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glrose.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glrose.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Render a TF2 looking like a rose. ; It defines and set a user's palette, and use polar system. ; void glrose(); {; const Int_t paletteSize = 10;; Float_t rgb[paletteSize * 3] =; {0.80f, 0.55f, 0.40f,; 0.85f, 0.60f, 0.45f,; 0.90f, 0.65f, 0.50f,; 0.95f, 0.70f, 0.55f,; 1.f, 0.75f, 0.60f,; 1.f, 0.80f, 0.65f,; 1.f, 0.85f, 0.70f,; 1.f, 0.90f, 0.75f,; 1.f, 0.95f, 0.80f,; 1.f, 1.f, 0.85f};; ; Int_t palette[paletteSize] = {0};; ; for (Int_t i = 0; i < paletteSize; ++i); palette[i] = TColor::GetColor(rgb[i * 3], rgb[i * 3 + 1], rgb[i * 3 + 2]);; ; gStyle->SetPalette(paletteSize, palette);; ; gStyle->SetCanvasPreferGL(1);; TCanvas *cnv = new TCanvas(""glc"", ""Surface sample"", 200, 10, 600, 550);; ; TPaveLabel *title = new TPaveLabel(0.04, 0.86, 0.96, 0.98,; ""\""glsurf2pol\"" option + user defined palette."");; title->SetFillColor(32);; title->Draw();; ; TPad *rosePad = new TPad(""box"", ""box"", 0.04, 0.04, 0.96, 0.8);; rosePad->Draw();; ; ; TF2 *fun = new TF2(""a"", ""cos(y)*sin(x)+cos(x)*sin(y)"", -6, 6, -6, 6);; fun->SetContour(paletteSize);; fun->SetNpx(30);; fun->SetNpy(30);; rosePad->cd();; fun->Draw(""glsurf2pol"");; }; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; TColor::GetColorstatic Int_t GetColor(const char *hexcolor)Static method returning color number for color specified by hex color string of form: ""#rrggbb"",...Definition TColor.cxx:1920; TF1::SetNpxvirtual void SetNpx(Int_t npx=100)Set the number of points used to draw the function.Definition TF1.cxx:3433; TF2A 2-Dim function with parameters.Definition TF2.h:29; TF2::Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glrose_8C.html:76,Guid,Guide,76,doc/master/glrose_8C.html,https://root.cern,https://root.cern/doc/master/glrose_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glsurfaces.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glsurfaces.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Various surfaces rendered with GL. ; This example draws 6 surfaces using OpenGL in pad (one is remake of a classic surfaces.C, another contains 4 surfaces).; The commands used are exactly the same as with a normal pad. The only command to add is: gStyle->SetCanvasPreferGL(true);. ; void glsurfaces(); {; gStyle->SetPalette(0);; ; // after this command all legos surfaces (surf/surf1/surf2/surf4/tf3; // options) are automatically rendered with OpenGL.; gStyle->SetCanvasPreferGL(kTRUE);; ; TCanvas *c1 = new TCanvas(""glc1"",""Surfaces Drawing Options"",200,10,700,900);; c1->SetFillColor(42);; gStyle->SetFrameFillColor(42);; auto title = new TPaveText(0.2, 0.96, 0.8, 0.995);; title->SetFillColor(33);; title->AddText(""Examples of Surface options"");; title->Draw();; ; TPad *pad1 = new TPad(""pad1"",""Gouraud shading"", 0.03, 0.50, 0.98, 0.95, 21);; TPad *pad2 = new TPad(""pad2"",""Color mesh"", 0.03, 0.02, 0.98, 0.48, 21);; pad1->Draw();; pad2->Draw();; // We generate a 2-D function; TF2 *f2 = new TF2(""f2"",""x**2 + y**2 - x**3 -8*x*y**4"", -1., 1.2, -1.5, 1.5);; // Draw this function in pad1 with Gouraud shading option; pad1->cd();; pad1->SetLogz();; f2->SetFillColor(45);; f2->Draw(""glsurf4"");; ; TF2 *f2clone = new TF2(""f2clone"",""x**2 + y**2 - x**3 -8*x*y**4"",; -1., 1.2, -1.5, 1.5);; // Draw this function in pad2 with color mesh option; pad2->cd();; pad2->SetLogz();; f2clone->Draw(""glsurf1"");; ; //add axis titles. The titles are set on the intermediate; //histogram used for visualisation. We must force this histogram; //to be created, then force the redrawing of the two pads; pad2->Update();; f2->GetHistogram()->GetXaxis()->SetTitle(""x title"");; f2->GetHistogram()->GetYaxis()->SetTitle(""y title"");; f2->GetHistogram()->GetXaxis()->SetTitleOffset(1.4);; f2->GetHistogram()->GetYaxis()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glsurfaces_8C.html:80,Guid,Guide,80,doc/master/glsurfaces_8C.html,https://root.cern,https://root.cern/doc/master/glsurfaces_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/gltf3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gltf3.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Draws the Klein bottle. ; Klein bottle is closed non-orientable surface that has no inside or outside. TF3 can be drawn in several styles:; default - like surface4; kMaple0 - very nice colours; kMaple1 - nice colours and outlines; kMaple2 - nice colour outlines. To switch between them, you can press 's' key. ; void gltf3(); {; gStyle->SetCanvasPreferGL(1);; TCanvas *cnv = new TCanvas(""gltf3"", ""TF3: Klein bottle"", 200, 10, 600, 600);; ; TPaveLabel *title = new TPaveLabel(0.04, 0.86, 0.96, 0.98,; ""\""gl\"" option for TF3. Select plot and press 's' to change the color."");; title->SetFillColor(32);; title->Draw();; ; TPad *tf3Pad = new TPad(""box"", ""box"", 0.04, 0.04, 0.96, 0.8);; tf3Pad->Draw();; ; TFormula *f1 = new TFormula(""f1"", ""x*x + y*y + z*z + 2*y - 1"");; TFormula *f2 = new TFormula(""f2"", ""x*x + y*y + z*z - 2*y - 1"");; ; // Klein bottle with cut top&bottom parts; // The Klein bottle is a closed non-orientable surface that has no; // inside or outside.; ; TF3 *tf3 = new TF3(""Klein Bottle"",""f1*(f2*f2-8*z*z) + 16*x*z*f2"",; -3.5, 3.5, -3.5, 3.5, -2.5, 2.5);; ; tf3->SetFillColor(kRed);; tf3Pad->cd();; tf3->Draw(""gl"");; }; kRed@ kRedDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; TF3A 3-Dim function with parameters.Definition TF3.h:28; TF3::Drawvoid Draw(Option_t *option="""") overrideDraw this function with its current attributes.Definition TF3.cxx:194; TFormulaThe Formula class.Definition TFormula.h:89; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPad::cdTVirtualPad * cd(Int_t subpadnumber=0) overrideSet Current pad.Definition TPad.cxx:693; TPad::Drawv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gltf3_8C.html:75,Guid,Guide,75,doc/master/gltf3_8C.html,https://root.cern,https://root.cern/doc/master/gltf3_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glvox1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glvox1.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; This macro demonstrates how to use ""glcol"" option for TH3. . ; void glvox1(); {; //Create and fill TH3.; const UInt_t nX = 30;; const Double_t xMin = -1., xMax = 1., xStep = (xMax - xMin) / (nX - 1);; ; const UInt_t nY = 30;; const Double_t yMin = -1., yMax = 1., yStep = (yMax - yMin) / (nY - 1);; ; const UInt_t nZ = 30;; const Double_t zMin = -1., zMax = 1., zStep = (zMax - zMin) / (nZ - 1);; ; TH3F *hist = new TH3F(""glvoxel"", ""glvoxel"", 30, -1., 1., 30, -1., 1., 30, -1., 1.);; ; //Fill the histogram to create a ""sphere"".; for (UInt_t i = 0; i < nZ; ++i) {; const Double_t z = zMin + i * zStep;; ; for (UInt_t j = 0; j < nY; ++j) {; const Double_t y = yMin + j * yStep;; ; for (UInt_t k = 0; k < nX; ++k) {; const Double_t x = xMin + k * xStep;; ; const Double_t val = 1. - (x * x + y * y + z * z);; hist->SetBinContent(k + 1, j + 1, i + 1, val);; }; }; }; ; gStyle->SetCanvasPreferGL(1);; ; hist->Draw(""glcol"");; }; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Double_tdouble Double_tDefinition RtypesCore.h:59; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH3F3-D histogram with a float per channel (see TH1 documentation)Definition TH3.h:317; TH3::SetBinContentvoid SetBinContent(Int_t bin, Double_t content) overrideSet bin content.Definition TH3.cxx:3468; TStyle::SetCanvasPreferGLvoid SetCanvasPreferGL(Bool_t prefer=kTRUE)Definition TStyle.h:341; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; AuthorTimur Pocheptsov ; Definition in file glvox1.C. tutorialsglglvox1.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glvox1_8C.html:76,Guid,Guide,76,doc/master/glvox1_8C.html,https://root.cern,https://root.cern/doc/master/glvox1_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/glvox2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. glvox2.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; This macro demonstrates how to use ""glcol"" option for TH3 and how to create user defined TRANSFER FUNCTION: transfer function maps bin value to voxel's opacity. ; codomain is [0, 1] (1. - non-transparent, 0.5 is semitransparent, etc.) To pass transparency function into painting algorithm, you have to:; Create TF1 object (with symbolic expression like ""0.5 * (sin(x) + 1)"": ...; TF1 * tf = new TF1(""TransferFunction"", ""0.5 * (sin(x) + 1)"", -10., 10.);; ...; TF11-Dim function classDefinition TF1.h:233; IMPORTANT, the name of TF1 object MUST be ""TransferFunction"".; Add this function into a hist's list of functions: ...; TList * lof = hist->GetListOfFunctions();; if (lof) lof->Add(tf);; ...; It's also possible to use your own function and pass it into TF1, please read TF1 documentation to learn how. This macro is to be compiled: TF1 is extremely slow with interpreted function as an argument. ; ; #include ""TStyle.h""; #include ""TList.h""; #include ""TH3.h""; #include ""TF1.h""; ; namespace {; ; Double_t my_transfer_function(const Double_t *x, const Double_t * /*param*/); {; // Bin values in our example range from -2 to 1.; // Let's make values from -2. to -1.5 more transparent:; if (*x < -1.5); return 0.008;; ; if (*x < -0.5); return 0.015;; ; if (*x < 0.); return 0.02;; ; if (*x < 0.5); return 0.03;; ; if (*x < 0.8); return 0.04;; ; return 0.05;; }; ; } // namespace; ; void glvox2(); {; //Create and fill TH3.; const UInt_t nX = 30;; const Double_t xMin = -1., xMax = 1., xStep = (xMax - xMin) / (nX - 1);; ; const UInt_t nY = 30;; const Double_t yMin = -1., yMax = 1., yStep = (yMax - yMin) / (nY - 1);; ; const UInt_t nZ = 30;; const Double_t zMin = -1., zMax = 1., zStep = (zMax - zMin) / (nZ - 1);; ; TH3F *hist = new TH3F(""glvoxel"", ""glvoxel"", nX, -1., 1., nY, -1., 1., nZ, -1., 1.);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glvox2_8C.html:76,Guid,Guide,76,doc/master/glvox2_8C.html,https://root.cern,https://root.cern/doc/master/glvox2_8C.html,2,"['Guid', 'learn']","['Guide', 'learn']"
Usability,". ROOT: tutorials/gl/grad.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. grad.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; This macro demonstrates how to create and use linear gradients to fill a histogram or a pad. . ; //Includes for ACLiC (cling does not need them).; #include ""TColorGradient.h""; #include ""TCanvas.h""; #include ""TColor.h""; #include ""TStyle.h""; #include ""TError.h""; #include ""TH1F.h""; ; //______________________________________________________________________; void grad(bool use_gl = true); {; //Make sure we enabled OpenGL support in a canvas.; gStyle->SetCanvasPreferGL(use_gl);; ; // Test if canvas supports OpenGL:; TCanvas *cnv = new TCanvas(""grad"", ""gradient demo 1"", 100, 100, 600, 600);; if (!cnv->UseGL() && !cnv->IsWeb()); ::Warning(""grad"", ""This macro requires either OpenGL or Web canvas to correctly handle gradient colors"");; ; // Create custom linear gradients.; // Linear gradient is defined by:; // 1) Direction in which gradient is changing (defined as angle in grad); // 2) colors (to interpolate between them), at least two of them; // 3) alpha parameter for the colors (if not specified - used from TColor directly); // 4) coordinates for these colors along the gradient axis [0., 1.] (must be sorted!).; ; auto fcol1 = TColor::GetColor((Float_t) 0.25, 0.25, 0.25, 0.55); // special frame color 1; auto fcol2 = TColor::GetColor((Float_t) 1., 1., 1., 0.05); // special frame color 2; ; auto frameGradient = TColor::GetLinearGradient(0., {fcol1, fcol2, fcol2, fcol1}, {0., 0.2, 0.8, 1.});; ; // This gradient is a mixture of two standard colors.; auto padGradient = TColor::GetLinearGradient(0., {30, 38});; ; // Another gradient built from three standard colors.; auto histGradient = TColor::GetLinearGradient(45., {kYellow, kOrange, kRed});; ; // Example of radial gradient, for stats box works properly only in web canvas; // Here first argument is radius [0..1] and then list of color",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2grad_8C.html:74,Guid,Guide,74,doc/master/gl_2grad_8C.html,https://root.cern,https://root.cern/doc/master/gl_2grad_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/grad2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. grad2.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Gradient fill with transparency and the ""SAME"" option. ; To use this macro you need OpenGL enabled in pad: either set OpenGL.CanvasPreferGL to 1 in $ROOTSYS/etc/system.rootrc; or call gStyle->SetCanvasPreferGL(kTRUE); before canvas created. ; //Includes for ACLiC (cling does not need them).; #include ""TColorGradient.h""; #include ""TCanvas.h""; #include ""TError.h""; #include ""TColor.h""; #include ""TStyle.h""; #include ""TH1F.h""; ; void grad2(bool gl = true); {; //Make sure canvas supports OpenGL.; gStyle->SetCanvasPreferGL(gl);; ; //2. Check that we have a canvas with an OpenGL support.; auto cnv = new TCanvas(""grad2"", ""gradient demo 2"", 100, 100, 800, 600);; if (!cnv->UseGL() && !cnv->IsWeb()); ::Warning(""grad2"", ""This macro requires either OpenGL or Web canvas to correctly handle gradient colors"");; ; //3. Custom colors:; // a) Custom semi-transparent red.; auto customRed = TColor::GetColor((Float_t) 1., 0., 0., 0.5);; ; // Custom semi-transparent green.; auto customGreen = TColor::GetColor((Float_t) 0., 1., 0., 0.5);; ; // 4. Linear gradient colors; // b) Gradient (from our semi-transparent red to ROOT's kOrange).; // Linear gradient is defined by: 1) angle in grad; // 2) colors (to interpolate between them),; // If necessary, TLinearGradient object can be retrieved and modified later; ; auto grad1 = TColor::GetLinearGradient(90., {customRed, kOrange});; ; //Vertical gradient fill.; auto grad2 = TColor::GetLinearGradient(90., {customGreen, kBlue});; ; auto hist = new TH1F(""a2"", ""b2"", 10, -2., 3.);; auto hist2 = new TH1F(""c3"", ""d3"", 10, -3., 3.);; hist->FillRandom(""landau"", 100000);; hist2->FillRandom(""gaus"", 100000);; ; hist->SetFillColor(grad1);; hist2->SetFillColor(grad2);; ; hist2->Draw();; hist->Draw(""SAME"");; }; Float_tfloat Float_tDefinition RtypesCore.h:57; kOrange@ k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2grad2_8C.html:75,Guid,Guide,75,doc/master/gl_2grad2_8C.html,https://root.cern,https://root.cern/doc/master/gl_2grad2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/gradients.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gradients.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Features: . Radial and linear gradients; Transparent/semitransparent colours. ; //Includes for ACLiC:; #include ""TColorGradient.h""; #include ""TCanvas.h""; #include ""TError.h""; #include ""TStyle.h""; #include ""TText.h""; #include ""TPie.h""; ; ; void gradients(bool gl = true); {; //Find free colour indices in the ROOT's palette for:; //1. A radial gradient for TPie;; //2. A linear gradient for TCanvas; //3. A fully transparent fill color for a nested pad.; ; gStyle->SetCanvasPreferGL(gl);; ; auto c = new TCanvas(""cpie"",""Gradient colours demo"", 700, 700);; //Before we allocated any new colour or created any object:; if (!c->UseGL() && !c->IsWeb()); ::Warning(""gradients"", ""This macro requires either OpenGL or Web canvas to correctly handle gradient colors"");; ; //Linear gradient is defined by: 1) colors (to interpolate between them),; //2) coordinates for these colors along the gradient axis [0., 1.] (must be sorted!).; //3) Start and end points for a gradient, you specify them in some NDC rect ([0,0 - 1,1]),; //and this rect is either: bounding rect of your polygon/object to fill; //(gradient->SetCoordinateMode(TColorGradient::kObjectBoundingMode)); //or bounding rect of a pad (gradient->SetCoordinateMode(TColorGradient::kPadMode)).; //kObjectBoundingMode is the default one.; ; ; //Draw a text in the canvas (the object above the text will be; //semi-transparent):; auto t = new TText(0.05, 0.7, ""Can you see the text?"");; t->Draw();; ; //We create a nested pad on top to render a TPie in,; //this way we still have a text (below) + TPie with; //a fancy colour on top.; auto pad = new TPad(""p"", ""p"", 0., 0., 1., 1.);; ; //TPad itself is fully transparent:; auto transparentFill = TColor::GetColor((Float_t) 1., 1., 1., 0.);; pad->SetFillColor(transparentFill);; //Add our pad into",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2gradients_8C.html:79,Guid,Guide,79,doc/master/gl_2gradients_8C.html,https://root.cern,https://root.cern/doc/master/gl_2gradients_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/gviz3d.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gviz3d.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Simple TStructViewer tutorial. ; ; #include ""TRandom.h""; #include ""TList.h""; #include ""TROOT.h""; #include ""TStructViewer.h""; ; const Int_t ncl =12;; const char *clnames[ncl] = {""TH1F"",""TGraph"",""TGraphErrors"",""TF1"",""TPaveText"",; ""TAxis"",""TF2"",""TH2D"",""TLatex"",""TText"",""TCutG"",""THnSparseF""};; ; // Function creating elements of lists; void MakeCrazy(TList *list, Int_t maxDepth, Int_t maxObjects, Float_t pList); {; Int_t nobj = gRandom->Uniform(0,maxObjects);; for (Int_t i = 0; i < nobj; i++) {; if (maxDepth && gRandom->Rndm() < pList) {; TList *slist = new TList();; slist->SetName(Form(""list_%d_%d"",maxDepth,i));; list->Add(slist);; MakeCrazy(slist,maxDepth-1,maxObjects,pList);; } else {; Int_t icl = (Int_t)gRandom->Uniform(0,ncl);; TNamed *named = (TNamed*)gROOT->ProcessLine(Form(""new %s;"",clnames[icl]));; named->SetName(Form(""%s_%d_%d"",clnames[icl],maxDepth,i));; list->Add(named);; }; }; }; ; // function creating a hierarchy of objects to test the TStructViewer; TList *crazy(Int_t maxDepth=5, Int_t maxObjects=20, Float_t pList=0.2); {; TList *list = new TList();; list->SetName(""SuperList"");; MakeCrazy(list,maxDepth,maxObjects,pList);; gROOT->GetListOfTasks()->Add(list);; return list;; }; ; // function adding colors to viewer; void FillColorsMap(TStructViewer* sv); {; for (int i = 0; i < ncl ; i++); sv->SetColor(clnames[i], (Int_t)gRandom->Integer(8)+2);; }; ; void gviz3d(); {; // Creating a pointer to list; TList* pointer = crazy(2,10);; ; // Creating a viewer; TStructViewer* sv = new TStructViewer(pointer);; ; // adding colors; FillColorsMap(sv);; ; sv->Draw();; }; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; TList.h; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gviz3d_8C.html:76,Guid,Guide,76,doc/master/gviz3d_8C.html,https://root.cern,https://root.cern/doc/master/gviz3d_8C.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/gl/nucleus.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. nucleus.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Model of a nucleus built from TGeo classes. ; ; void nucleus(Int_t nProtons = 40,Int_t nNeutrons = 60); {; Double_t NeutronRadius = 60,; ProtonRadius = 60,; NucleusRadius,; distance = 60;; Double_t vol = nProtons + nNeutrons;; vol = 3 * vol / (4 * TMath::Pi());; ; NucleusRadius = distance * TMath::Power(vol, 1./3.);; // cout << ""NucleusRadius: "" << NucleusRadius << endl;; ; TGeoManager * geom = new TGeoManager(""nucleus"", ""Model of a nucleus"");; geom->SetNsegments(40);; TGeoMaterial *matEmptySpace = new TGeoMaterial(""EmptySpace"", 0, 0, 0);; TGeoMaterial *matProton = new TGeoMaterial(""Proton"" , .938, 1., 10000.);; TGeoMaterial *matNeutron = new TGeoMaterial(""Neutron"" , .935, 0., 10000.);; ; TGeoMedium *EmptySpace = new TGeoMedium(""Empty"", 1, matEmptySpace);; TGeoMedium *Proton = new TGeoMedium(""Proton"", 1, matProton);; TGeoMedium *Neutron = new TGeoMedium(""Neutron"",1, matNeutron);; ; // the space where the nucleus lives (top container volume); ; Double_t worldx = 200.;; Double_t worldy = 200.;; Double_t worldz = 200.;; ; TGeoVolume *top = geom->MakeBox(""WORLD"", EmptySpace, worldx, worldy, worldz);; geom->SetTopVolume(top);; ; TGeoVolume * proton = geom->MakeSphere(""proton"", Proton, 0., ProtonRadius);; TGeoVolume * neutron = geom->MakeSphere(""neutron"", Neutron, 0., NeutronRadius);; proton->SetLineColor(kRed);; neutron->SetLineColor(kBlue);; ; Double_t x, y, z, dummy;; Int_t i = 0;; while ( i< nProtons) {; gRandom->Rannor(x, y);; gRandom->Rannor(z,dummy);; if ( TMath::Sqrt(x*x + y*y + z*z) < 1) {; x = (2 * x - 1) * NucleusRadius;; y = (2 * y - 1) * NucleusRadius;; z = (2 * z - 1) * NucleusRadius;; top->AddNode(proton, i, new TGeoTranslation(x, y, z));; i++;; }; }; i = 0;; while ( i < nNeutrons) {; gRandom->Rannor(x, y);; gRandom->Rannor(z,dummy);; if ( TMath::Sqrt(x*x + ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/nucleus_8C.html:77,Guid,Guide,77,doc/master/nucleus_8C.html,https://root.cern,https://root.cern/doc/master/nucleus_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/parallelcoordtrans.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. parallelcoordtrans.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Script illustrating the use of transparency with ||-Coord. ; It displays the same data set twice. The first time without transparency and the second time with transparency. On the second plot, several clusters appear. ; #include ""TFile.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TRandom.h""; #include ""TNtuple.h""; #include ""TParallelCoord.h""; #include ""TParallelCoordVar.h""; #include ""TParallelCoordRange.h""; ; Double_t r1,r2,r3,r4,r5,r6,r7,r8,r9;; Double_t dr = 3.5;; TRandom *r;; ; void generate_random(Int_t i) {; r->Rannor(r1,r4);; r->Rannor(r7,r9);; r2 = (2*dr*r->Rndm(i))-dr;; r3 = (2*dr*r->Rndm(i))-dr;; r5 = (2*dr*r->Rndm(i))-dr;; r6 = (2*dr*r->Rndm(i))-dr;; r8 = (2*dr*r->Rndm(i))-dr;; }; ; void parallelcoordtrans() {; Double_t x,y,z,u,v,w,a,b,c;; Double_t s1x, s1y, s1z;; Double_t s2x, s2y, s2z;; Double_t s3x, s3y, s3z;; r = new TRandom();;; ; auto c1 = new TCanvas(""c1"", ""c1"",0,0,900,1000);; c1->Divide(1,2);; ; auto nt = new TNtuple(""nt"",""Demo ntuple"",""x:y:z:u:v:w:a:b:c"");; ; int n=0;; for (Int_t i=0; i<1500; i++) {; r->Sphere(s1x, s1y, s1z, 0.1);; r->Sphere(s2x, s2y, s2z, 0.2);; r->Sphere(s3x, s3y, s3z, 0.05);; ; generate_random(i);; nt->Fill(r1, r2, r3, r4, r5, r6, r7, r8, r9);; n++;; ; generate_random(i);; nt->Fill(s1x, s1y, s1z, s2x, s2y, s2z, r7, r8, r9);; n++;; ; generate_random(i);; nt->Fill(r1, r2, r3, r4, r5, r6, r7, s3y, r9);; n++;; ; generate_random(i);; nt->Fill(s2x-1, s2y-1, s2z, s1x+.5, s1y+.5, s1z+.5, r7, r8, r9);; n++;; ; generate_random(i);; nt->Fill(r1, r2, r3, r4, r5, r6, r7, r8, r9);; n++;; ; generate_random(i);; nt->Fill(s1x+1, s1y+1, s1z+1, s3x-2, s3y-2, s3z-2, r7, r8, r9);; n++;; ; generate_random(i);; nt->Fill(r1, r2, r3, r4, r5, r6, s3x, r8, s3z );; n++;; }; ; TParallelCoordVar* pcv;; ; c1->cd(1);; ; // ||-C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2parallelcoordtrans_8C.html:88,Guid,Guide,88,doc/master/gl_2parallelcoordtrans_8C.html,https://root.cern,https://root.cern/doc/master/gl_2parallelcoordtrans_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/radialgradients.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. radialgradients.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; This tutorial demonstrates how to use radial gradients, custom colors, transparency. ; Requires OpenGL or Web-based canvas. ; //Includes for ACLiC:; #include ""TColorGradient.h""; #include ""TEllipse.h""; #include ""TRandom.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TError.h""; ; //______________________________________________________________________; Color_t CreateRandomGradientFill(); {; std::vector<Int_t> colors;; ; for (int n = 0; n < 2; ++n); colors.emplace_back(gRandom->Integer(10) + 2);; ; auto indx = TColor::GetRadialGradient(0.5, colors);; ; // example how to modify gradient; auto gradient = dynamic_cast<TRadialGradient *> (gROOT->GetColor(indx));; if (gradient) {; // change center and radius; gradient->SetRadialGradient({0.3, 0.3}, 0.7);; // change alpha parameter for the colors; ; gradient->SetColorAlpha(0, 0.2 + gRandom->Rndm() * 0.8);; gradient->SetColorAlpha(1, 0.2 + gRandom->Rndm() * 0.8);; } else {; ::Error(""CreateRandomGradientFill"", ""failed to find new gradient color with index %d"", indx);; }; ; return indx;; }; ; //______________________________________________________________________; bool add_ellipse(const Double_t xC, const Double_t yC, const Double_t r); {; const Color_t newColor = CreateRandomGradientFill();; if (newColor == -1) {; ::Error(""add_ellipse"", ""failed to find a new color index for a gradient fill"");; return false;; }; ; TEllipse * const newEllipse = new TEllipse(xC, yC, r, r);; newEllipse->SetFillColor(newColor);; newEllipse->Draw();; ; return true;; }; ; //______________________________________________________________________; void radialgradients(bool gl = true); {; gRandom->SetSeed(4357);; ; gStyle->SetCanvasPreferGL(gl);; ; auto cnv = new TCanvas(""radialgradients"", ""radial gradients"", 800, 800);; if (!cn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2radialgradients_8C.html:85,Guid,Guide,85,doc/master/gl_2radialgradients_8C.html,https://root.cern,https://root.cern/doc/master/gl_2radialgradients_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/transp.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. transp.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; This demo shows how to use transparency. . ; //Includes for ACLiC (cling does not need them).; #include ""TCanvas.h""; #include ""TColor.h""; #include ""TError.h""; #include ""TStyle.h""; #include ""TH1F.h""; ; void transp(bool gl = true); {; auto redIndex = TColor::GetColor((Float_t) 1., 0., 0., 0.85);; auto greeIndex = TColor::GetColor((Float_t) 0., 1., 0., 0.5);; ; gStyle->SetCanvasPreferGL(kTRUE);; auto cnv = new TCanvas(""trasnparency"", ""transparency demo"", 600, 400);; ; auto hist = new TH1F(""a5"", ""b5"", 10, -2., 3.);; auto hist2 = new TH1F(""c6"", ""d6"", 10, -3., 3.);; hist->FillRandom(""landau"", 100000);; hist2->FillRandom(""gaus"", 100000);; ; hist->SetFillColor(redIndex);; hist2->SetFillColor(greeIndex);; ; cnv->cd();; hist2->Draw();; hist->Draw(""SAME"");; }; Float_tfloat Float_tDefinition RtypesCore.h:57; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; TCanvas.h; TColor.h; TError.h; TH1F.h; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TColor::GetColorstatic Int_t GetColor(const char *hexcolor)Static method returning color number for color specified by hex color string of form: ""#rrggbb"",...Definition TColor.cxx:1920; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TStyle::SetCanvasPreferGLvoid SetCanvasPreferGL(Bool_t prefer=kTRUE)Definition TStyle.h:341; AuthorsTimur Pocheptsov, Sergey Linev ; Definition in file transp.C. tutorialsgltransp.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2transp_8C.html:76,Guid,Guide,76,doc/master/gl_2transp_8C.html,https://root.cern,https://root.cern/doc/master/gl_2transp_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/transp_text.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. transp_text.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; This macro is based on labels1.C by Rene Brun. ; Updated by Timur Pocheptsov to use transparent text. The macro requires OpenGL or Web-based canvas. ; //Includes for ACLiC (cling does not need them).; #include ""TPaveText.h""; #include ""TCanvas.h""; #include ""TRandom.h""; #include ""TError.h""; #include ""TColor.h""; #include ""TStyle.h""; #include ""TH1F.h""; ; void transp_text(bool gl = true); {; // 1. Create special transparent colors for both pavetext fill color and text color.; auto grayColorIndex = TColor::GetColor((Float_t) 0.8, 0.8, 0.8, 0.85);; auto blackColorIndex = TColor::GetColor((Float_t) 0., 0., 0., 0.5);; ; // 2. Create a TCanvas.; gStyle->SetCanvasPreferGL(gl);; ; auto c1 = new TCanvas(""transp_text"",""transparent text demo"", 10, 10, 900, 500);; if (!c1->UseGL() && !c1->IsWeb()); ::Warning(""transp_text"", ""to use this macro you need either OpenGL or Web"");; ; c1->SetGrid();; c1->SetBottomMargin(0.15);; ; const Int_t nx = 20;; const char *people[nx] = {""Jean"",""Pierre"",""Marie"",""Odile"",; ""Sebastien"",""Fons"",""Rene"",""Nicolas"",""Xavier"",""Greg"",; ""Bjarne"",""Anton"",""Otto"",""Eddy"",""Peter"",""Pasha"",; ""Philippe"",""Suzanne"",""Jeff"",""Valery""};; ; auto h = new TH1F(""h4"", ""test"", nx, 0, nx);; ; h->SetFillColor(38);; for (Int_t i = 0; i < 5000; ++i); h->Fill(gRandom->Gaus(0.5 * nx, 0.2 * nx));; ; h->SetStats(false);; for (Int_t i = 1; i <= nx; ++i); h->GetXaxis()->SetBinLabel(i, people[i - 1]);; ; h->Draw();; ; auto pt = new TPaveText(0.3, 0.3, 0.98, 0.98, ""brNDC"");; //Transparent 'rectangle' with transparent text.; pt->SetFillColor(grayColorIndex);; pt->SetTextColor(blackColorIndex);; ; pt->SetTextSize(0.5);; pt->SetTextAlign(12);; ; pt->AddText(""Hello"");; pt->Draw();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2transp__text_8C.html:81,Guid,Guide,81,doc/master/gl_2transp__text_8C.html,https://root.cern,https://root.cern/doc/master/gl_2transp__text_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/transparentpad.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. transparentpad.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; This macro demonstrates semi-transparent pads. ; Requires OpenGL or Web-based canvas. ; //Includes for ACLiC (cling does not need them).; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TError.h""; #include ""TColor.h""; #include ""TH1F.h""; ; void transparentpad(bool gl = true); {; gStyle->SetCanvasPreferGL(gl);; ; // 1. Create canvas and check if it support transparent colors; auto c1 = new TCanvas(""transparentpad"",""transparent pad demo"", 10, 10, 900, 500);; if (!c1->UseGL() && !c1->IsWeb()); ::Warning(""transparentpad"", ""You can see the transparency ONLY in a pdf or png output (\""File\""->\""Save As\"" ->...)\n""; ""To have transparency in a canvas graphics, you need either OpenGL or Web rendering enabled"");; ; // 2. Some arbitrary histograms.; auto h1 = new TH1F(""TH1F 1"", ""TH1F 1"", 100, -1.5, 1.5);; h1->FillRandom(""gaus"");; ; auto h2 = new TH1F(""TH1F 2"", ""TH1F 2"", 100, -1.5, 0.);; h2->FillRandom(""gaus"");; ; auto h3 = new TH1F(""TH1F 3"", ""TH1F 3"", 100, 0.5, 2.);; h3->FillRandom(""landau"");; ; // 3. Now overlapping transparent pads.; auto pad1 = new TPad(""transparent pad 1"", ""transparent pad 1"", 0.1, 0.1, 0.7, 0.7);; pad1->SetFillColor(TColor::GetColor((Float_t) 1., 0.2, 0.2, 0.25)); // transparent pink, here's the magic!; c1->cd();; pad1->Draw();; pad1->cd();; h1->Draw(""lego2"");; ; auto pad2 = new TPad(""transparent pad 2"", ""transparent pad 2"", 0.2, 0.2, 0.8, 0.8);; pad2->SetFillColor(TColor::GetColor((Float_t) 0.2, 1., 0.2, 0.25)); // transparent green, here's the magic!; c1->cd();; pad2->Draw();; pad2->cd();; h2->Draw();; ; auto pad3 = new TPad(""transparent pad 3"", ""transparent pad 3"", 0.3, 0.3, 0.9, 0.9);; pad3->SetFillColor(TColor::GetColor((Float_t) 0.2, 1., 1., 0.15)); // transparent blue, here's the magic!; c1->cd();; pad3->Draw();; pad3->cd();; h3->Dr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gl_2transparentpad_8C.html:84,Guid,Guide,84,doc/master/gl_2transparentpad_8C.html,https://root.cern,https://root.cern/doc/master/gl_2transparentpad_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/viewer3DLocal.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. viewer3DLocal.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Demonstrates 3D viewer architecture TVirtualViewer3D and TBuffer3D in the local frame. ; Here each shape is described in a TBuffer3D class, with a suitible translation matrix to place each instance NOTE: to be executed via .x viewer3DLocal.C+; NOTE: We don't implement raw tesselation of sphere - hence this will not appear in viewers which don't support directly (non-OpenGL) Shows that viewers can at least deal gracefully with these cases; Our abstract base shape class.; As we overload TObject::Paint which is called directly from compiled code, this script must also be compiled to work correctly.; #if defined(__CINT__) && !defined(__MAKECINT__); {; gSystem->CompileMacro(""viewer3DLocal.C"");; viewer3DLocal();; }; #else; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::CompileMacrovirtual int CompileMacro(const char *filename, Option_t *opt="""", const char *library_name="""", const char *build_dir="""", UInt_t dirmode=0)This method compiles and loads a shared library containing the code from the file ""filename"".Definition TSystem.cxx:2836; ; #include ""TVirtualViewer3D.h""; #include ""TBuffer3D.h""; #include ""TBuffer3DTypes.h""; ; #include ""TObject.h""; #include ""TVirtualPad.h""; #include ""TAtt3D.h""; ; #include <vector>; ; class Shape : public TObject; {; public:; Shape(Int_t color, Double_t x, Double_t y, Double_t z);; ~Shape() override {};; virtual TBuffer3D & GetBuffer3D(UInt_t reqSections) = 0;; ; protected:; Double_t fX, fY, fZ; // Origin; Int_t fColor;; ; ClassDefOverride(Shape,0);; };; ; ClassImp(Shape);; ; Shape::Shape(Int_t color, Double_t x, Double_t y, Double_t z) :; fX(x), fY(y), fZ(z), fColor(color); {}; ; class Sphere : public Shape; {; public:; Sphere(Int_t color, Double_t x, Double_t y, Double_t z, Double_t radius);; ~Sphere() override",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/viewer3DLocal_8C.html:83,Guid,Guide,83,doc/master/viewer3DLocal_8C.html,https://root.cern,https://root.cern/doc/master/viewer3DLocal_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/gl/viewer3DMaster.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. viewer3DMaster.C File ReferenceTutorials » OpenGL tutorials. Detailed Description; Demonstrates 3D viewer architecture TVirtualViewer3D and TBuffer3D in the master frame. ; Here each shape is described directly in a TBuffer3D class, with identity translation matrix c.f. viewer3DLocal.C; Our abstract base shape class.; As we overload TObject::Paint which is called directly from compiled code, this script must also be compiled to work correctly.; ; ; #include ""TVirtualViewer3D.h""; #include ""TBuffer3D.h""; #include ""TBuffer3DTypes.h""; ; #include ""TObject.h""; #include ""TVirtualPad.h""; #include ""TAtt3D.h""; ; #include <vector>; ; class Shape : public TObject; {; public:; Shape(Int_t color, Double_t x, Double_t y, Double_t z);; ~Shape() override {};; virtual TBuffer3D & GetBuffer3D(UInt_t reqSections) = 0;; ; protected:; Double_t fX, fY, fZ; // Origin; Int_t fColor;; ; ClassDefOverride(Shape,0);; };; ; ClassImp(Shape);; ; Shape::Shape(Int_t color, Double_t x, Double_t y, Double_t z) :; fX(x), fY(y), fZ(z), fColor(color); {}; ; class Box : public Shape; {; public:; Box(Int_t color, Double_t x, Double_t y, Double_t z,; Double_t dX, Double_t dY, Double_t dZ);; ~Box() override {};; ; TBuffer3D & GetBuffer3D(UInt_t reqSections) override;; ; private:; Double_t fDX, fDY, fDZ; // Half lengths; ; ClassDefOverride(Box,0);; };; ; ClassImp(Box);; ; Box::Box(Int_t color, Double_t x, Double_t y, Double_t z,; Double_t dX, Double_t dY, Double_t dZ) :; Shape(color,x,y,z),; fDX(dX), fDY(dY), fDZ(dZ); {}; ; TBuffer3D & Box::GetBuffer3D(UInt_t reqSections); {; static TBuffer3D buffer(TBuffer3DTypes::kGeneric);; ; // Complete kCore section - this could be moved to Shape base class; if (reqSections & TBuffer3D::kCore) {; buffer.ClearSectionsValid();; buffer.fID = this;; buffer.fColor = fColor; // Color index - see gROOT->GetColor(); buffer.fTransparency = 0; // Tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/viewer3DMaster_8C.html:84,Guid,Guide,84,doc/master/viewer3DMaster_8C.html,https://root.cern,https://root.cern/doc/master/viewer3DMaster_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/AtlasExample.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. AtlasExample.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Show how ATLAS Style looks like. ; It is based on a style file from BaBar. ; const Int_t GMAX=864;; ; const int nren=3;; static const double mur[nren] = {1.0,0.25,4.0};; static const double muf[nren] = {1.0,0.25,4.0};; const unsigned int NUMPDF=41;; ; TGraphErrors* GetGraph(Int_t ir, Int_t ifs,Int_t icut, Int_t ipdf);; void AddtoBand(TGraphErrors* g1, TGraphAsymmErrors* g2);; TGraphAsymmErrors* MakeBand(TGraphErrors* g0, TGraphErrors* g1,TGraphErrors* g2);; ; void AtlasExample(); {; gROOT->SetStyle(""ATLAS"");; ; Int_t icol1=5;; Int_t icol2=5;; ; auto canvas = new TCanvas(""canvas"",""single inclusive jets"",50,50,600,600);; canvas->SetLogy();; ; Double_t ymin = 1.e-3; Double_t ymax = 2e7;; Double_t xmin = 60.00; Double_t xmax = 3500.;; auto frame = canvas->DrawFrame(xmin,ymin,xmax,ymax);; frame->SetYTitle(""d#sigma_{jet}/dE_{T,jet} [fb/GeV]"");; frame->SetXTitle(""E_{T,jet} [GeV]"");; frame->GetYaxis()->SetTitleOffset(1.4);; frame->GetXaxis()->SetTitleOffset(1.4);; ; const Int_t ncut=1;; TGraphErrors *data[ncut];; ; for (Int_t icut=0; icut<ncut; icut++) { // loop over cuts; TGraphErrors *g1[nren][ncut];; for (Int_t ir=0; ir<nren; ir++) { // loop over ren scale; g1[ir][icut] = GetGraph(ir,ir,icut,0);; if (!g1[ir][icut]) {; cout << "" g1 not found "" << endl;; return;; }; g1[ir][icut]->SetLineColor(1);; g1[ir][icut]->SetMarkerStyle(0);; }; ; char daname[100];; sprintf(daname,""data_%d"",icut);; data[icut] = (TGraphErrors*)g1[0][icut]->Clone(daname);; data[icut]->SetMarkerStyle(20);; data[icut]->SetMarkerColor(1);; ; // Just invent some data; for (Int_t i=0; i< data[icut]->GetN(); i++) {; Double_t x1,y1,e,dx1=0.;; data[icut]->GetPoint(i,x1,y1);; Double_t r1 = 0.4*(gRandom->Rndm(1)+2);; Double_t r2 = 0.4*(gRandom->Rndm(1)+2);; Double_t y;; if (icut==0) y = r1*y1+r1*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/AtlasExample_8C.html:88,Guid,Guide,88,doc/master/AtlasExample_8C.html,https://root.cern,https://root.cern/doc/master/AtlasExample_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/accessiblecolorschemes.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. accessiblecolorschemes.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Choosing an appropriate color scheme is essential for making results easy to understand and interpret. ; Factors like colorblindness and converting colors to grayscale for publications can impact accessibility. Furthermore, results should be aesthetically pleasing. The following three color schemes, recommended by M. Petroff in arXiv:2107.02270v2 and available on GitHub under the MIT License, meet these criteria. ; void box(double x1, double y1, double x2, double y2,int col) {; auto b1 = new TBox(x1, y1, x2, y2);; b1->SetFillColor(col);; b1->Draw();; ; TColor *c = gROOT->GetColor(col);; auto tc = new TLatex((x2+x1)/2., 0.01+(y2+y1)/2., Form(""#splitline{%s}{%s}"",c->GetName(),c->GetTitle()));; tc->SetTextFont(42);; tc->SetTextAlign(23);; tc->SetTextSize(0.020);; tc->Draw();; }; ; void accessiblecolorschemes() {; auto C = new TCanvas(""C"",""C"",600,800);; int c;; double x, y;; double w = 0.2;; double h = 0.08;; auto t = new TText();; t->SetTextSize(0.025);; t->SetTextFont(42);; ; // 6-colors scheme; x = 0.1;; y = 0.1;; t->DrawText(x, y-h/2., ""6-colors scheme"");; for (c=kP6Blue; c<kP6Blue+6; c++) {; box(x, y, x+w, y+h,c);; y = y+h;; }; ; // 8-color scheme; y = 0.1;; x = 0.4;; t->DrawText(x, y-h/2., ""8-colors scheme"");; for (c=kP8Blue; c<kP8Blue+8; c++) {; box(x, y, x+w, y+h,c);; y = y+h;; }; ; // 10-color scheme; y = 0.1;; x = 0.7;; t->DrawText(x, y-h/2., ""10-colors scheme"");; for (c=kP10Blue; c<kP10Blue+10; c++) {; box(x, y, x+w, y+h,c);; y = y+h;; }; }; c#define c(i)Definition RSha256.hxx:101; h#define h(i)Definition RSha256.hxx:106; kP8Blue@ kP8BlueDefinition Rtypes.h:70; kP10Blue@ kP10BlueDefinition Rtypes.h:71; kP6Blue@ kP6BlueDefinition Rtypes.h:69; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; x2Option_t Option_t TPoint TPoint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/accessiblecolorschemes_8C.html:98,Guid,Guide,98,doc/master/accessiblecolorschemes_8C.html,https://root.cern,https://root.cern/doc/master/accessiblecolorschemes_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/analyze.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. analyze.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro produces the flowchart of TFormula::Analyze. . ; ; void analyze() {; TCanvas *c1 = new TCanvas(""c1"",""Analyze.mac"",620,790);; c1->Range(-1,0,19,30);; TPaveLabel *pl1 = new TPaveLabel(0,27,3.5,29,""Analyze"");; pl1->SetFillColor(42);; pl1->Draw();; TPaveText *pt1 = new TPaveText(0,22.8,4,25.2);; TText *t1 = pt1->AddText(""Parenthesis matching"");; TText *t2 = pt1->AddText(""Remove unnecessary"");; TText *t2a = pt1->AddText(""parenthesis"");; pt1->Draw();; TPaveText *pt2 = new TPaveText(6,23,10,25);; TText *t3 = pt2->AddText(""break of"");; TText *t4 = pt2->AddText(""Analyze"");; pt2->Draw();; TPaveText *pt3 = new TPaveText(0,19,4,21);; t4=pt3->AddText(""look for simple"");; TText *t5 = pt3->AddText(""operators"");; pt3->Draw();; TPaveText *pt4 = new TPaveText(0,15,4,17);; TText *t6 = pt4->AddText(""look for an already"");; TText *t7 = pt4->AddText(""defined expression"");; pt4->Draw();; TPaveText *pt5 = new TPaveText(0,11,4,13);; TText *t8 = pt5->AddText(""look for usual"");; TText *t9 = pt5->AddText(""functions :cos sin .."");; pt5->Draw();; TPaveText *pt6 = new TPaveText(0,7,4,9);; TText *t10 = pt6->AddText(""look for a"");; TText *t11 = pt6->AddText(""numeric value"");; pt6->Draw();; TPaveText *pt7 = new TPaveText(6,18.5,10,21.5);; TText *t12 = pt7->AddText(""Analyze left and"");; TText *t13 = pt7->AddText(""right part of"");; TText *t14 = pt7->AddText(""the expression"");; pt7->Draw();; TPaveText *pt8 = new TPaveText(6,15,10,17);; TText *t15 = pt8->AddText(""Replace expression"");; pt8->Draw();; TPaveText *pt9 = new TPaveText(6,11,10,13);; TText *t16 = pt9->AddText(""Analyze"");; pt9->SetFillColor(42);; pt9->Draw();; TPaveText *pt10 = new TPaveText(6,7,10,9);; TText *t17 = pt10->AddText(""Error"");; TText *t18 = pt10->AddText(""Break of Analyze"");; pt10->Draw();; TPaveText *pt11 = new T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/analyze_8C.html:83,Guid,Guide,83,doc/master/analyze_8C.html,https://root.cern,https://root.cern/doc/master/analyze_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/graphics/anim.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. anim.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Macro illustrating how to animate a picture using a Timer. ; ; #include ""TStyle.h""; #include ""TCanvas.h""; #include ""TF2.h""; #include ""TTimer.h""; ; Double_t pi;; TF2 *f2;; Float_t t = 0;; Float_t phi = 30;; void anim(); {; gStyle->SetCanvasPreferGL(true);; gStyle->SetFrameFillColor(42);; TCanvas *c1 = new TCanvas(""c1"");; c1->SetFillColor(17);; pi = TMath::Pi();; f2 = new TF2(""f2"",""sin(2*x)*sin(2*y)*[0]"",0,pi,0,pi);; f2->SetParameter(0,1);; f2->SetNpx(15);; f2->SetNpy(15);; f2->SetMaximum(1);; f2->SetMinimum(-1);; f2->Draw(""glsurf1"");; TTimer *timer = new TTimer(20);; timer->SetCommand(""Animate()"");; timer->TurnOn();; }; void Animate(); {; //just in case the canvas has been deleted; if (!gROOT->GetListOfCanvases()->FindObject(""c1"")) return;; t += 0.05*pi;; f2->SetParameter(0,TMath::Cos(t));; phi += 2;; gPad->SetPhi(phi);; gPad->Modified();; gPad->Update();; }; Float_tfloat Float_tDefinition RtypesCore.h:57; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvas.h; TF2.h; gROOT#define gROOTDefinition TROOT.h:406; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TTimer.h; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TF1::SetMaximumvirtual void SetMaximum(Double_t maximum=-1111)Set the maximum value along Y for this function In case the function is already drawn,...Definition TF1.cxx:3394; TF1::SetNpxvirtual void SetNpx(Int_t npx=100)Set the number of points used to draw the function.Definition TF1.cxx:3433; TF1::SetMinimumvirtual void SetMinimum(Double_t minimum=-1111)Set the minimum value along Y for this function In case the function is already drawn,...Definition TF1.cxx:3407; TF1::SetParametervirtual void SetParameter(Int_t param, Double_t value)Definition TF1.h:667; TF2A 2-Dim function with par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/anim_8C.html:80,Guid,Guide,80,doc/master/anim_8C.html,https://root.cern,https://root.cern/doc/master/anim_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/archi.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. archi.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro displays the ROOT architecture. . ; void archi() {; TCanvas *c1 = new TCanvas(""c1"",""Dictionary Architecture"",20,10,750,930);; c1->SetBorderSize(0);; c1->Range(0,0,20.5,26);; ; ; TPaveLabel *title = new TPaveLabel(4,24,16,25.5,c1->GetTitle());; title->SetFillColor(46);; title->Draw();; ; TPavesText *dll = new TPavesText(0.5,19,4.5,23,5,""tr"");; dll->SetFillColor(39);; dll->SetTextSize(0.023);; dll->AddText("" "");; dll->AddText(""Dynamically"");; dll->AddText(""Linked"");; dll->AddText(""Libraries"");; dll->Draw();; TPaveLabel *dlltitle = new TPaveLabel(1.5,22.6,3.5,23.3,""DLLs"");; dlltitle->SetFillColor(28);; dlltitle->Draw();; ; TPavesText *cpp = new TPavesText(5.5,19,9.5,23,5,""tr"");; cpp->SetTextSize(0.023);; cpp->AddText("" "");; cpp->AddText(""Commented"");; cpp->AddText(""Header"");; cpp->AddText(""Files"");; cpp->Draw();; TPaveLabel *cpptitle = new TPaveLabel(6.5,22.6,8.5,23.3,""C++"");; cpptitle->SetFillColor(28);; cpptitle->Draw();; ; TPavesText *odl = new TPavesText(10.5,19,14.5,23,5,""tr"");; odl->SetTextSize(0.023);; odl->AddText("" "");; odl->AddText(""Objects"");; odl->AddText(""Description"");; odl->AddText(""Files"");; odl->Draw();; TPaveLabel *odltitle = new TPaveLabel(11.5,22.6,13.5,23.3,""ODL"");; odltitle->SetFillColor(28);; odltitle->Draw();; ; TPavesText *idl = new TPavesText(15.5,19,19.5,23,5,""tr"");; idl->SetTextSize(0.023);; idl->AddText("" "");; idl->AddText(""Interface"");; idl->AddText(""Definition"");; idl->AddText(""Language"");; idl->Draw();; TPaveLabel *idltitle = new TPaveLabel(16.5,22.6,18.5,23.3,""IDL"");; idltitle->SetFillColor(28);; idltitle->Draw();; ; TWbox *p1 = new TWbox(7.8,10,13.2,17,11,12,1);; p1->Draw();; TText *pro1 = new TText(10.5,15.8,""Process 1"");; pro1->SetTextAlign(21);; pro1->SetTextSize(0.03);; pro1->Draw();; TPaveText *p1dict = new TPaveText",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/archi_8C.html:81,Guid,Guide,81,doc/master/archi_8C.html,https://root.cern,https://root.cern/doc/master/archi_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/arrows.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. arrows.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Draw arrows. . ; void arrows(){; auto c1 = new TCanvas(""c1"");; c1->Range(0,0,1,1);; ; auto par = new TPaveLabel(0.1,0.8,0.9,0.95,""Examples of various arrows formats"");; par->SetFillColor(42);; par->Draw();; ; auto ar1 = new TArrow(0.1,0.1,0.1,0.7);; ar1->Draw();; auto ar2 = new TArrow(0.2,0.1,0.2,0.7,0.05,""|>"");; ar2->SetAngle(40);; ar2->SetLineWidth(2);; ar2->Draw();; auto ar3 = new TArrow(0.3,0.1,0.3,0.7,0.05,""<|>"");; ar3->SetAngle(40);; ar3->SetLineWidth(2);; ar3->Draw();; auto ar4 = new TArrow(0.46,0.7,0.82,0.42,0.07,""|>"");; ar4->SetAngle(60);; ar4->SetLineWidth(2);; ar4->SetFillColor(2);; ar4->Draw();; auto ar5 = new TArrow(0.4,0.25,0.95,0.25,0.15,""<|>"");; ar5->SetAngle(60);; ar5->SetLineWidth(4);; ar5->SetLineColor(4);; ar5->SetFillStyle(3008);; ar5->SetFillColor(2);; ar5->Draw();; }; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; c1return c1Definition legend1.C:41; AuthorRene Brun ; Definition in file arrows.C. tutorialsgraphicsarrows.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/arrows_8C.html:82,Guid,Guide,82,doc/master/arrows_8C.html,https://root.cern,https://root.cern/doc/master/arrows_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/basic3d.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. basic3d.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Show 3-D polylines and markers. . ; void basic3d(){; TCanvas *c1 = new TCanvas(""c1"",""PolyLine3D & PolyMarker3D Window"",200,10,700,500);; ; // create a pad; TPad *p1 = new TPad(""p1"",""p1"",0.05,0.02,0.95,0.82,46,3,1);; p1->Draw();; p1->cd();; ; // creating a view; TView *view = TView::CreateView(1);; view->SetRange(5,5,5,25,25,25);; ; // create a first PolyLine3D; TPolyLine3D *pl3d1 = new TPolyLine3D(5);; ; // set points; pl3d1->SetPoint(0, 10, 10, 10);; pl3d1->SetPoint(1, 15, 15, 10);; pl3d1->SetPoint(2, 20, 15, 15);; pl3d1->SetPoint(3, 20, 20, 20);; pl3d1->SetPoint(4, 10, 10, 20);; // set attributes; pl3d1->SetLineWidth(3);; pl3d1->SetLineColor(5);; ; // create a second PolyLine3D; TPolyLine3D *pl3d2 = new TPolyLine3D(4);; ; // set points; pl3d2->SetPoint(0, 5, 10, 5);; pl3d2->SetPoint(1, 10, 15, 8);; pl3d2->SetPoint(2, 15, 15, 18);; pl3d2->SetPoint(3, 5, 20, 20);; pl3d2->SetPoint(4, 10, 10, 5);; ; // set attributes; pl3d2->SetLineWidth(5);; pl3d2->SetLineColor(2);; ; // create a first PolyMarker3D; TPolyMarker3D *pm3d1 = new TPolyMarker3D(12);; ; // set points; pm3d1->SetPoint(0, 10, 10, 10);; pm3d1->SetPoint(1, 11, 15, 11);; pm3d1->SetPoint(2, 12, 15, 9);; pm3d1->SetPoint(3, 13, 17, 20);; pm3d1->SetPoint(4, 14, 16, 15);; pm3d1->SetPoint(5, 15, 20, 15);; pm3d1->SetPoint(6, 16, 18, 10);; pm3d1->SetPoint(7, 17, 15, 10);; pm3d1->SetPoint(8, 18, 22, 15);; pm3d1->SetPoint(9, 19, 28, 25);; pm3d1->SetPoint(10, 20, 12, 15);; pm3d1->SetPoint(11, 21, 12, 15);; ; // set marker size, color & style; pm3d1->SetMarkerSize(2);; pm3d1->SetMarkerColor(4);; pm3d1->SetMarkerStyle(2);; ; // create a second PolyMarker3D; TPolyMarker3D *pm3d2 = new TPolyMarker3D(8);; ; pm3d2->SetPoint(0, 22, 15, 15);; pm3d2->SetPoint(1, 23, 18, 21);; pm3d2->SetPoint(2, 24, 26, 13);; pm3d2->SetPoint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/basic3d_8C.html:83,Guid,Guide,83,doc/master/basic3d_8C.html,https://root.cern,https://root.cern/doc/master/basic3d_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/canvas.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. canvas.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Example of primitives in a canvas. ; One of the first actions in a ROOT session is the creation of a Canvas. Here we create a Canvas named ""c1"".; After having executed this macro, try now to point on any object on the screen: pad, text, lines, etc.; When the cursor points to sensitive areas in an object, the cursor shape changes and suggests the type of action that can be applied.; For example:; One can move, grow,shrink a pad.; A text can be moved.; A line can be moved or its end points can be modified.; One can move, grow and shrink PaveLabels and PavesText. Point to an object and click the right mouse button to change attributes. Try to change the canvas size.; In the canvas ""File"" menu, select the option ""Print"" to produce a PostScript file with a copy of the canvas. ; void canvas(){; TCanvas *c1 = new TCanvas(""c1"",""Canvas Example"",200,10,600,480);; ; gBenchmark->Start(""canvas"");; ; // Inside this canvas, we create two pads; TPad *pad1 = new TPad(""pad1"",""This is pad1"",0.05,0.52,0.95,0.97);; TPad *pad2 = new TPad(""pad2"",""This is pad2"",0.05,0.02,0.95,0.47);; pad1->SetFillColor(11);; pad2->SetFillColor(11);; pad1->Draw();; pad2->Draw();; ; // A pad may contain other pads and graphics objects.; // We set the current pad to pad2.; // Note that the current pad is always highlighted.; pad2->cd();; TPad *pad21 = new TPad(""pad21"",""First subpad of pad2"",0.02,0.05,0.48,0.95,17,3);; TPad *pad22 = new TPad(""pad22"",""Second subpad of pad2"",0.52,0.05,0.98,0.95,17,3);; pad21->Draw();; pad22->Draw();; ; // We enter some primitives in the created pads and set some attributes; pad1->cd();; float xt1 = 0.5;; float yt1 = 0.1;; TText *t1 = new TText(0.5,yt1,""ROOT"");; t1->SetTextAlign(22);; t1->SetTextSize(0.05);; t1->Draw();; TLine *line1 = new TLine(0.05,0.05,0.80,0.70);; line1-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/canvas_8C.html:82,Guid,Guide,82,doc/master/canvas_8C.html,https://root.cern,https://root.cern/doc/master/canvas_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/canvas2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. canvas2.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Example of canvas partitioning. ; Sometimes the Divide() method is not appropriate to divide a Canvas. Because of the left and right margins, all the pads do not have the same width and height. CanvasPartition does that properly. This example also ensure that the axis labels and titles have the same sizes and that the tick marks length is uniform. In addition, XtoPad and YtoPad allow to place graphics objects like text in the right place in each sub-pads. ; void CanvasPartition(TCanvas *C,const Int_t Nx = 2,const Int_t Ny = 2,; Float_t lMargin = 0.15, Float_t rMargin = 0.05,; Float_t bMargin = 0.15, Float_t tMargin = 0.05);; double XtoPad(double x);; double YtoPad(double x);; ; void canvas2(); {; gStyle->SetOptStat(0);; ; auto C = (TCanvas*) gROOT->FindObject(""C"");; if (C) delete C;; C = new TCanvas(""C"",""canvas"",1024,640);; C->SetFillStyle(4000);; ; // Number of PADS; const Int_t Nx = 5;; const Int_t Ny = 5;; ; // Margins; Float_t lMargin = 0.12;; Float_t rMargin = 0.05;; Float_t bMargin = 0.15;; Float_t tMargin = 0.05;; ; // Canvas setup; CanvasPartition(C,Nx,Ny,lMargin,rMargin,bMargin,tMargin);; ; // Dummy histogram.; auto h = (TH1F*) gROOT->FindObject(""histo"");; if (h) delete h;; h = new TH1F(""histo"","""",100,-5.0,5.0);; h->FillRandom(""gaus"",10000);; h->GetXaxis()->SetTitle(""x axis"");; h->GetYaxis()->SetTitle(""y axis"");; ; TPad *pad[Nx][Ny];; ; for (Int_t i = 0; i < Nx; i++) {; for (Int_t j = 0; j < Ny; j++) {; C->cd(0);; ; // Get the pads previously created.; pad[i][j] = (TPad*) C->FindObject(TString::Format(""pad_%d_%d"",i,j).Data());; pad[i][j]->Draw();; pad[i][j]->SetFillStyle(4000);; pad[i][j]->SetFrameFillStyle(4000);; pad[i][j]->cd();; ; // Size factors; Float_t xFactor = pad[0][0]->GetAbsWNDC()/pad[i][j]->GetAbsWNDC();; Float_t yFactor = pad[0][0]->Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/canvas2_8C.html:83,Guid,Guide,83,doc/master/canvas2_8C.html,https://root.cern,https://root.cern/doc/master/canvas2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/compile.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. compile.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro produces the flowchart of TFormula::Compile . ; void compile(){; TCanvas *c1 = new TCanvas(""c1"");; c1->Range(0,0,1,1);; TPaveLabel *ptc = new TPaveLabel(0.02,0.42,0.2,0.58,""Compile"");; ptc->SetTextSize(0.40);; ptc->SetFillColor(32);; ptc->Draw();; TPaveText *psub = new TPaveText(0.28,0.4,0.65,0.6);; psub->Draw();; TText *t2 = psub->AddText(""Substitute some operators"");; TText *t3 = psub->AddText(""to C++ style"");; TPaveLabel *panal = new TPaveLabel(0.73,0.42,0.98,0.58,""Analyze"");; panal->SetTextSize(0.40);; panal->SetFillColor(42);; panal->Draw();; TArrow *ar1 = new TArrow(0.2,0.5,0.27,0.5,0.02,""|>"");; ar1->SetLineWidth(6);; ar1->SetLineColor(4);; ar1->Draw();; TArrow *ar2 = new TArrow(0.65,0.5,0.72,0.5,0.02,""|>"");; ar2->SetLineWidth(6);; ar2->SetLineColor(4);; ar2->Draw();; }; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TArrow::Drawvoid Draw(Option_t *option="""") overrideDraw this arrow with its current attributes.Definition TArrow.cxx:120; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; TPaveLabel::Drawvoid Draw(Option_t *option="""") overrideDraw this pavelabel with its current attributes.Definition TPaveLabel.cxx:88; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::Add",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/compile_8C.html:83,Guid,Guide,83,doc/master/compile_8C.html,https://root.cern,https://root.cern/doc/master/compile_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/crown.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. crown.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Draw crowns. . ; void crown(){; auto c1 = new TCanvas(""c1"",""c1"",400,400);; auto cr1 = new TCrown(.5,.5,.3,.4);; cr1->SetLineStyle(2);; cr1->SetLineWidth(4);; cr1->Draw();; auto cr2 = new TCrown(.5,.5,.2,.3,45,315);; cr2->SetFillColor(38);; cr2->SetFillStyle(3010);; cr2->Draw();; auto cr3 = new TCrown(.5,.5,.2,.3,-45,45);; cr3->SetFillColor(50);; cr3->SetFillStyle(3025);; cr3->Draw();; auto cr4 = new TCrown(.5,.5,.0,.2);; cr4->SetFillColor(4);; cr4->SetFillStyle(3008);; cr4->Draw();; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TCrownTo draw a Crown.Definition TCrown.h:19; c1return c1Definition legend1.C:41; AuthorOlivier Couet ; Definition in file crown.C. tutorialsgraphicscrown.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/crown_8C.html:81,Guid,Guide,81,doc/master/crown_8C.html,https://root.cern,https://root.cern/doc/master/crown_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/diamond.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. diamond.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Draw a diamond. . ; void diamond(){; auto d = new TDiamond(.05,.1,.95,.8);; d->AddText(""A TDiamond can contain any text."");; d->Draw();; }; d#define d(i)Definition RSha256.hxx:102; TDiamondDraw a Diamond.Definition TDiamond.h:17; AuthorOlivier Couet ; Definition in file diamond.C. tutorialsgraphicsdiamond.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/diamond_8C.html:83,Guid,Guide,83,doc/master/diamond_8C.html,https://root.cern,https://root.cern/doc/master/diamond_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/earth.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. earth.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This tutorial illustrates the special contour options. . ""AITOFF"" : Draw a contour via an AITOFF projection; ""MERCATOR"" : Draw a contour via an Mercator projection; ""SINUSOIDAL"" : Draw a contour via an Sinusoidal projection; ""PARABOLIC"" : Draw a contour via an Parabolic projection; ""MOLLWEIDE"" : Draw a contour via an Mollweide projection. ; TCanvas *earth(){; ; gStyle->SetOptTitle(1);; gStyle->SetOptStat(0);; ; TCanvas *c1 = new TCanvas(""c1"",""earth_projections"",700,1000);; c1->Divide(2,3);; ; TH2F *ha = new TH2F(""ha"",""Aitoff"", 180, -180, 180, 179, -89.5, 89.5);; TH2F *hm = new TH2F(""hm"",""Mercator"", 180, -180, 180, 161, -80.5, 80.5);; TH2F *hs = new TH2F(""hs"",""Sinusoidal"",180, -180, 180, 181, -90.5, 90.5);; TH2F *hp = new TH2F(""hp"",""Parabolic"", 180, -180, 180, 181, -90.5, 90.5);; TH2F *hw = new TH2F(""hw"",""Mollweide"", 180, -180, 180, 181, -90.5, 90.5);; ; TString dat = gROOT->GetTutorialDir();; dat.Append(""/graphics/earth.dat"");; dat.ReplaceAll(""/./"",""/"");; ; ifstream in;; in.open(dat.Data());; Float_t x,y;; while (1) {; in >> x >> y;; if (!in.good()) break;; ha->Fill(x,y, 1);; hm->Fill(x,y, 1);; hs->Fill(x,y, 1);; hp->Fill(x,y, 1);; hw->Fill(x,y, 1);; }; in.close();; ; c1->cd(1); ha->Draw(""aitoff"");; c1->cd(2); hm->Draw(""mercator"");; c1->cd(3); hs->Draw(""sinusoidal"");; c1->cd(4); hp->Draw(""parabolic"");; c1->cd(5); hw->Draw(""mollweide"");; ; return c1;; }; Float_tfloat Float_tDefinition RtypesCore.h:57; gROOT#define gROOTDefinition TROOT.h:406; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TH2::FillInt_t Fill(Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/earth_8C.html:81,Guid,Guide,81,doc/master/earth_8C.html,https://root.cern,https://root.cern/doc/master/earth_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/ellipse.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ellipse.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Draw ellipses. . ; void ellipse(){; auto c1 = new TCanvas(""c1"");; c1->Range(0,0,1,1);; auto pel = new TPaveLabel(0.1,0.8,0.9,0.95,""Examples of Ellipses"");; pel->SetFillColor(42);; pel->Draw();; auto el1 = new TEllipse(0.25,0.25,.1,.2);; el1->Draw();; auto el2 = new TEllipse(0.25,0.6,.2,.1);; el2->SetFillColor(6);; el2->SetFillStyle(3008);; el2->Draw();; auto el3 = new TEllipse(0.75,0.6,.2,.1,45,315);; el3->SetFillColor(2);; el3->SetFillStyle(1001);; el3->SetLineColor(4);; el3->Draw();; auto el4 = new TEllipse(0.75,0.25,.2,.15,45,315,62);; el4->SetFillColor(5);; el4->SetFillStyle(1001);; el4->SetLineColor(4);; el4->SetLineWidth(6);; el4->Draw();; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TEllipseDraw Ellipses.Definition TEllipse.h:23; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; c1return c1Definition legend1.C:41; AuthorRene Brun ; Definition in file ellipse.C. tutorialsgraphicsellipse.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ellipse_8C.html:83,Guid,Guide,83,doc/master/ellipse_8C.html,https://root.cern,https://root.cern/doc/master/ellipse_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/eval.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. eval.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro produces the flowchart of TFormula::Eval. . ; void eval(){; ; TCanvas *c1 = new TCanvas(""c1"");; c1->Range(0,0,20,10);; TPaveLabel *pt1 = new TPaveLabel(0.2,4,3,6,""Eval"");; pt1->SetTextSize(0.5);; pt1->SetFillColor(42);; pt1->Draw();; TPaveText *pt2 = new TPaveText(4.5,4,7.8,6);; pt2->Draw();; TText *t1 = pt2->AddText(""Read Operator"");; TText *t2 = pt2->AddText(""number i"");; TPaveText *pt3 = new TPaveText(9,3.5,17.5,6.5);; TText *t4 = pt3->AddText(""Apply Operator to current stack values"");; TText *t5 = pt3->AddText(""Example: if operator +"");; TText *t6 = pt3->AddText(""value[i] += value[i-1]"");; t4->SetTextAlign(22);; t5->SetTextAlign(22);; t6->SetTextAlign(22);; t5->SetTextColor(4);; t6->SetTextColor(2);; pt3->Draw();; TPaveLabel *pt4 = new TPaveLabel(4,0.5,12,2.5,""return result = value[i]"");; pt4->Draw();; TArrow *ar1 = new TArrow(6,4,6,2.7,0.02,""|>"");; ar1->Draw();; TText *t7 = new TText(6.56,2.7,""if i = number of stack elements"");; t7->SetTextSize(0.04);; t7->Draw();; ar1->DrawArrow(6,8,6,6.2,0.02,""|>"");; TLine *l1 = new TLine(12,6.6,12,8);; l1->Draw();; l1->DrawLine(12,8,6,8);; ar1->DrawArrow(3,5,4.4,5,0.02,""|>"");; ar1->DrawArrow(7.8,5,8.9,5,0.02,""|>"");; }; ; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TArrow::DrawArrowvirtual TArrow * DrawArrow(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Float_t arrowsize=0, Option_t *option="""")Draw this arrow with new coordinates.Definition TArrow.cxx:135; TArrow::Drawvoid Draw(Option_t *option="""") overrideDraw this arrow with its current attributes.Definition TArrow.cxx:120; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/eval_8C.html:80,Guid,Guide,80,doc/master/eval_8C.html,https://root.cern,https://root.cern/doc/master/eval_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/event.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. event.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Illustrate some basic primitives. . ; void event(){; TCanvas *c1 = new TCanvas(""c1"",""ROOT Event description"",700,500);; c1->Range(0,0,14,15.5);; TPaveText *event = new TPaveText(1,13,3,15);; event->SetFillColor(11);; event->Draw();; event->AddText(""Event"");; TLine *line = new TLine(1.1,13,1.1,1.5);; line->SetLineWidth(2);; line->Draw();; line->DrawLine(1.3,13,1.3,3.5);; line->DrawLine(1.5,13,1.5,5.5);; line->DrawLine(1.7,13,1.7,7.5);; line->DrawLine(1.9,13,1.9,9.5);; line->DrawLine(2.1,13,2.1,11.5);; TArrow *arrow = new TArrow(1.1,1.5,3.9,1.5,0.02,""|>"");; arrow->SetFillStyle(1001);; arrow->SetFillColor(1);; arrow->Draw();; arrow->DrawArrow(1.3,3.5,3.9,3.5,0.02,""|>"");; arrow->DrawArrow(1.5,5.5,3.9,5.5,0.02,""|>"");; arrow->DrawArrow(1.7,7.5,3.9,7.5,0.02,""|>"");; arrow->DrawArrow(1.9,9.5,3.9,9.5,0.02,""|>"");; arrow->DrawArrow(2.1,11.5,3.9,11.5,0.02,""|>"");; TPaveText *p1 = new TPaveText(4,1,11,2);; p1->SetTextAlign(12);; p1->SetFillColor(42);; p1->AddText(""1 Mbyte"");; p1->Draw();; TPaveText *p2 = new TPaveText(4,3,10,4);; p2->SetTextAlign(12);; p2->SetFillColor(42);; p2->AddText(""100 Kbytes"");; p2->Draw();; TPaveText *p3 = new TPaveText(4,5,9,6);; p3->SetTextAlign(12);; p3->SetFillColor(42);; p3->AddText(""10 Kbytes"");; p3->Draw();; TPaveText *p4 = new TPaveText(4,7,8,8);; p4->SetTextAlign(12);; p4->SetFillColor(42);; p4->AddText(""1 Kbytes"");; p4->Draw();; TPaveText *p5 = new TPaveText(4,9,7,10);; p5->SetTextAlign(12);; p5->SetFillColor(42);; p5->AddText(""100 bytes"");; p5->Draw();; TPaveText *p6 = new TPaveText(4,11,6,12);; p6->SetTextAlign(12);; p6->SetFillColor(42);; p6->AddText(""10 bytes"");; p6->Draw();; TText text;; text.SetTextAlign(12);; text.SetTextSize(0.04);; text.SetTextFont(72);; text.DrawText(6.2,11.5,""Header:Event_flag"");; text.DrawText(7.2,9.5,""Trigger_Info",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/event_8C.html:81,Guid,Guide,81,doc/master/event_8C.html,https://root.cern,https://root.cern/doc/master/event_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/feynman.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. feynman.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Draw Feynman diagrams. . ; void feynman(); {; TCanvas *c1 = new TCanvas(""c1"", ""A canvas"", 10,10, 600, 300);; c1->Range(0, 0, 140, 60);; Int_t linsav = gStyle->GetLineWidth();; gStyle->SetLineWidth(3);; TLatex t;; t.SetTextAlign(22);; t.SetTextSize(0.1);; TLine * l;; l = new TLine(10, 10, 30, 30); l->Draw();; l = new TLine(10, 50, 30, 30); l->Draw();; TCurlyArc *ginit = new TCurlyArc(30, 30, 12.5*sqrt(2), 135, 225);; ginit->SetWavy();; ginit->Draw();; t.DrawLatex(7,6,""e^{-}"");; t.DrawLatex(7,55,""e^{+}"");; t.DrawLatex(7,30,""#gamma"");; ; TCurlyLine *Gamma = new TCurlyLine(30, 30, 55, 30);; Gamma->SetWavy();; Gamma->Draw();; t.DrawLatex(42.5,37.7,""#gamma"");; ; TArc *a = new TArc(70, 30, 15);; a->Draw();; t.DrawLatex(55, 45,""#bar{q}"");; t.DrawLatex(85, 15,""q"");; TCurlyLine *gluon = new TCurlyLine(70, 45, 70, 15);; gluon->Draw();; t.DrawLatex(77.5,30,""g"");; ; TCurlyLine *z0 = new TCurlyLine(85, 30, 110, 30);; z0->SetWavy();; z0->Draw();; t.DrawLatex(100, 37.5,""Z^{0}"");; ; l = new TLine(110, 30, 130, 10); l->Draw();; l = new TLine(110, 30, 130, 50); l->Draw();; ; TCurlyArc *gluon1 = new TCurlyArc(110, 30, 12.5*sqrt(2), 315, 45);; gluon1->Draw();; ; t.DrawLatex(135,6,""#bar{q}"");; t.DrawLatex(135,55,""q"");; t.DrawLatex(135,30,""g"");; c1->Update();; gStyle->SetLineWidth(linsav);; }; a#define a(i)Definition RSha256.hxx:99; Int_tint Int_tDefinition RtypesCore.h:45; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TArcCreate an Arc.Definition TArc.h:26; TAttLine::GetLineWidthvirtual Width_t GetLineWidth() constReturn the line width.Definition TAttLine.h:35; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttTe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/feynman_8C.html:83,Guid,Guide,83,doc/master/feynman_8C.html,https://root.cern,https://root.cern/doc/master/feynman_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/first.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. first.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Show some basic primitives. . ; void first() {; ; TCanvas *nut = new TCanvas(""nut"", ""FirstSession"",100,10,700,900);; nut->Range(0,0,20,24);; nut->SetFillColor(10);; nut->SetBorderSize(2);; ; TPaveLabel *pl = new TPaveLabel(3,22,17,23.7,; ""My first ROOT interactive session"",""br"");; pl->SetFillColor(18);; pl->Draw();; ; TText t(0,0,""a"");; t.SetTextFont(62);; t.SetTextSize(0.025);; t.SetTextAlign(12);; t.DrawText(2,20.3,""ROOT is based on CLING, a powerful C/C++ interpreter."");; t.DrawText(2,19.3,""Blocks of lines can be entered within {...}."");; t.DrawText(2,18.3,""Previous typed lines can be recalled."");; ; t.SetTextFont(72);; t.SetTextSize(0.026);; t.DrawText(3,17,""Root > float x=5; float y=7;"");; t.DrawText(3,16,""Root > x*sqrt(y)"");; t.DrawText(3,14,; ""Root > for (int i=2;i<7;i++) printf(\""sqrt(%d) = %f\\n\"",i,sqrt(i));"");; t.DrawText(3,10,""Root > TF1 f1(\""f1\"",\""sin(x)/x\"",0,10)"");; t.DrawText(3, 9,""Root > f1.Draw()"");; t.SetTextFont(81);; t.SetTextSize(0.018);; t.DrawText(4,15,""(float) 13.2288f"");; t.DrawText(4,13.3,""sqrt(2) = 1.414214"");; t.DrawText(4,12.7,""sqrt(3) = 1.732051"");; t.DrawText(4,12.1,""sqrt(4) = 2.000000"");; t.DrawText(4,11.5,""sqrt(5) = 2.236068"");; t.DrawText(4,10.9,""sqrt(6) = 2.449490"");; ; TPad *pad = new TPad(""pad"",""pad"",.2,.05,.8,.35);; pad->Draw();; pad->cd();; pad->SetGrid();; TF1 *f1 = new TF1(""f1"",""sin(x)/x"",0,10);; f1->Draw();; }; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TF1::Drawvoid Draw(Option_t *option="""") overrideDraw this function with its current attributes.Definition TF1.cxx:1333; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPad::SetB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/first_8C.html:81,Guid,Guide,81,doc/master/first_8C.html,https://root.cern,https://root.cern/doc/master/first_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/formula1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. formula1.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Display interpreted functions. . ; void formula1() {; TCanvas *c1 = new TCanvas(""c1"",""Example with Formula"",200,10,700,500);; //; // We create a formula object and compute the value of this formula; // for two different values of the x variable.; //; auto form1 = new TFormula(""form1"",""sqrt(abs(x))"");; form1->Eval(2);; form1->Eval(-45);; //; // Create a one dimensional function and draw it; //; auto fun1 = new TF1(""fun1"",""abs(sin(x)/x)"",0,10);; c1->SetGridx();; c1->SetGridy();; fun1->Draw();; c1->Update();; //; // Before leaving this demo, we print the list of objects known to ROOT; //; if (gObjectTable) gObjectTable->Print();; }; gObjectTableR__EXTERN TObjectTable * gObjectTableDefinition TObjectTable.h:82; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TFormulaThe Formula class.Definition TFormula.h:89; TObjectTable::Printvoid Print(Option_t *option="""") const overridePrint the object table.Definition TObjectTable.cxx:120; c1return c1Definition legend1.C:41; formula1Definition formula1.py:1; AuthorRene Brun ; Definition in file formula1.C. tutorialsgraphicsformula1.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/formula1_8C.html:84,Guid,Guide,84,doc/master/formula1_8C.html,https://root.cern,https://root.cern/doc/master/formula1_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/framework.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. framework.C File ReferenceTutorials » Graphics tutorials. Detailed Description; An example with basic graphics illustrating the Object Oriented User Interface of ROOT. . ; void framework() {; TCanvas *c1 = new TCanvas(""c1"",""The ROOT Framework"",200,10,700,500);; c1->Range(0,0,19,12);; //; TPavesText *rootf = new TPavesText(0.4,0.6,18,2.3,20,""tr"");; rootf->AddText(""ROOT Framework"");; rootf->SetFillColor(42);; rootf->Draw();; //; TPavesText *eventg = new TPavesText(0.99,2.66,3.29,5.67,4,""tr"");; eventg->SetFillColor(38);; eventg->AddText(""Event"");; eventg->AddText(""Generators"");; eventg->Draw();; //; TPavesText *simul = new TPavesText(3.62,2.71,6.15,7.96,7,""tr"");; simul->SetFillColor(41);; simul->AddText(""Detector"");; simul->AddText(""Simulation"");; simul->Draw();; //; TPavesText *recon = new TPavesText(6.56,2.69,10.07,10.15,11,""tr"");; recon->SetFillColor(48);; recon->AddText(""Event"");; recon->AddText(""Reconstruction"");; recon->Draw();; //; TPavesText *daq = new TPavesText(10.43,2.74,14.0,10.81,11,""tr"");; daq->AddText(""Data"");; daq->AddText(""Acquisition"");; daq->Draw();; //; TPavesText *anal = new TPavesText(14.55,2.72,17.9,10.31,11,""tr"");; anal->SetFillColor(42);; anal->AddText(""Data"");; anal->AddText(""Analysis"");; anal->Draw();; c1->Update();; }; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPavesTextA PaveText (see TPaveText) with several stacked paves.Definition TPavesText.h:18; TPavesText::Drawvoid Draw(Option_t *option="""") overrideDraw this pavestext with its current attributes.Definition TPavesText.cxx:80; c1return c1Definition legend1.C:41; Auth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/framework_8C.html:85,Guid,Guide,85,doc/master/framework_8C.html,https://root.cern,https://root.cern/doc/master/framework_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/gaxis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gaxis.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Simple example illustrating how to draw TGaxis objects in various formats. . ; void gaxis(){; auto c1 = new TCanvas(""c1"",""Examples of TGaxis"",10,10,700,500);; c1->Range(-10,-1,10,1);; ; auto axis1 = new TGaxis(-4.5,-0.2,5.5,-0.2,-6,8,510,"""");; axis1->Draw();; ; auto axis2 = new TGaxis(-4.5,0.2,5.5,0.2,0.001,10000,510,""G"");; axis2->Draw();; ; auto axis3 = new TGaxis(-9,-0.8,-9,0.8,-8,8,50510,"""");; axis3->SetTitle(""axis3"");; axis3->SetTitleOffset(0.5);; axis3->Draw();; ; auto axis4 = new TGaxis(-7,-0.8,-7,0.8,1,10000,50510,""G"");; axis4->SetTitle(""axis4"");; axis4->Draw();; ; auto axis5 = new TGaxis(-4.5,-0.6,5.5,-0.6,1.2,1.32,80506,""-+"");; axis5->SetLabelSize(0.03);; axis5->SetTextFont(72);; axis5->Draw();; ; auto axis6 = new TGaxis(-4.5,0.5,5.5,0.5,100,900,50510,""-"");; axis6->Draw();; ; auto axis7 = new TGaxis(-5.5,0.85,5.5,0.85,0,4.3e-6,510,"""");; axis7->Draw();; ; auto axis8 = new TGaxis(8,-0.8,8,0.8,0,9000,50510,""+L"");; axis8->Draw();; ; // One can make a vertical axis going top->bottom. However the two x values should be; // slightly different to avoid labels overlapping.; auto axis9 = new TGaxis(6.5,0.8,6.499,-0.8,0,90,50510,""-"");; axis9->Draw();; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TGaxisThe axis painter class.Definition TGaxis.h:24; c1return c1Definition legend1.C:41; AuthorsRene Brun, Olivier Couet ; Definition in file gaxis.C. tutorialsgraphicsgaxis.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gaxis_8C.html:81,Guid,Guide,81,doc/master/gaxis_8C.html,https://root.cern,https://root.cern/doc/master/gaxis_8C.html,3,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/graphics/gaxis2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gaxis2.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Example illustrating how to draw TGaxis with labels defined by a function. . ; void gaxis2(){; gStyle->SetOptStat(0);; ; TH2F *h2 = new TH2F(""h"",""Axes"",100,0,10,100,-2,2);; h2->Draw();; ; TF1 *f1 = new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();; ; TF1 *f2 = new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();; ; TF1 *f3 = new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,""G"");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.03);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(1.2);; A3->Draw();; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TF11-Dim function classDefinition TF1.h:233; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetTitleOffsetvoid SetTitleOffset(Float_t titleoffset=1)Definition TGaxis.h:128; TGaxis::SetTitleSizevoid SetTitleSize(Float_t titlesize)Definition TGaxis.h:129; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::SetLabelSizevoid SetLabelSize(Float_t labelsize)Definition TGaxis.h:107; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; f1TF1 * f1Definition legend1.C:11; AuthorOlivier Couet ; Definition in file gaxis2.C. tutorialsgraphicsgaxis2.C. ROOT master - ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gaxis2_8C.html:82,Guid,Guide,82,doc/master/gaxis2_8C.html,https://root.cern,https://root.cern/doc/master/gaxis2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/gaxis3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gaxis3.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Example illustrating how to modify individual labels of a TGaxis. ; The method ChangeLabel allows to do that.; The first parameter of this method is the label number to be modified. If this number is negative labels are numbered from the last one. The other parameters are (in order):; the new angle value,; the new size (0 erase the label),; the new text alignment,; the new label color,; the new label text. ; void gaxis3() {; TCanvas* c1 = new TCanvas(""c1"",""Examples of TGaxis"",10,10,800,400);; c1->Range(-6,-0.1,6,0.1);; ; TGaxis *axis = new TGaxis(-5.5,0.,5.5,0.,0.0,100,510,"""");; axis->SetName(""axis"");; axis->SetTitle(""Axis Title"");; axis->SetTitleSize(0.05);; axis->SetTitleColor(kBlue);; axis->SetTitleFont(42);; ; // Change the 1st label color to red.; axis->ChangeLabel(1,-1,-1,-1,kRed);; ; // Erase the 3rd label; axis->ChangeLabel(3,-1,0.);; ; // 5th label is drawn with an angle of 30 degrees; axis->ChangeLabel(5,30.,-1,0);; ; // Change the text of the 6th label.; axis->ChangeLabel(6,-1,-1,-1,kGreen,-1,""6th label"");; ; // Change the text of the 2nd label to the end.; axis->ChangeLabel(-2,-1,-1,-1,kGreen,-1,""2nd to last label"");; ; // Change the text of value 30 by ""value of 30""; axis->ChangeLabelByValue(30.,-1,-1,-1,kBlue,-1,""value of 30"");; ; ; axis->Draw();; }; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TCanvasThe Canvas class.Definition TCanvas.h:23; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetTitleSizevoid SetTitleSize(Float_t titlesize)Definition TGaxis.h:129; TGaxis::SetTitleFontvoid SetTitleFont(Int_t titlefont)Definition TGaxis.h:130; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::ChangeLabelB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gaxis3_8C.html:82,Guid,Guide,82,doc/master/gaxis3_8C.html,https://root.cern,https://root.cern/doc/master/gaxis3_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/graph_edit_playback.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph_edit_playback.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro plays a recorded ROOT session showing how to perform various interactive graphical editing operations. ; The initial graphics setup was created using the following root commands: TRecorder *t = new TRecorder();; t->Start(""graphedit_playback.root"");; gStyle->SetPalette(1);; TCanvas *c2 = new TCanvas(""c2"",""c2"",0,0,700,500);; TH2F* h2 = new TH2F(""h2"",""Random 2D Gaussian"",40,-4,4,40,-4,4);; h2->SetDirectory(0);; TRandom r;; for (int i=0;i<50000;i++) h2->Fill(r.Gaus(),r.Gaus());; h2->Draw();; gPad->Update();; TCanvas *c1 = new TCanvas(""c1"",""c1"",0,0,700,500);; TH1F* h1 = new TH1F(""h1"",""Random 1D Gaussian"",100,-4,4);; h1->SetDirectory(0);; h1->FillRandom(""gaus"",10000);; h1->Draw();; gPad->Update();; ; // Here the following ""sketch"" was done.; ; t->Stop();; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::SetDirectoryvirtual void SetDirectory(TDirectory *dir)By default, when a histogram is created, it is added to the list of histogram objects in the current ...Definition TH1.cxx:8937; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH2F2-D histogram with a float",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph__edit__playback_8C.html:95,Guid,Guide,95,doc/master/graph__edit__playback_8C.html,https://root.cern,https://root.cern/doc/master/graph__edit__playback_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/greyscale.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. greyscale.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Create grey scale of 200 x 200 boxes. . ; void greyscale(); {; TCanvas *c = new TCanvas(""grey"", ""Grey Scale"", 500, 500);; c->SetBorderMode(0);; ; Int_t n = 200; // tunable parameter; Float_t n1 = 1./n;; for (int i = 0; i < n; i++) {; for (int j = 0; j < n; j++) {; TBox *b = new TBox(n1*j, n1*(n-1-i), n1*(j+1), n1*(n-i));; Float_t grey = Float_t(i*n+j)/(n*n);; b->SetFillColor(TColor::GetColor(grey, grey, grey));; b->Draw();; }; }; TPad *p = new TPad(""p"",""p"",0.3, 0.3, 0.7,0.7);; const char *guibackground = gEnv->GetValue(""Gui.BackgroundColor"", """");; p->SetFillColor(TColor::GetColor(guibackground));; p->Draw();; p->cd();; TText *t = new TText(0.5, 0.5, ""GUI Background Color"");; t->SetTextAlign(22);; t->SetTextSize(.09);; t->Draw();; ; c->SetEditable(kFALSE);; }; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TBoxCreate a Box.Definition TBox.h:22; TCanvasThe Canvas class.Definition TCanvas.h:23; TColor::GetColorstatic Int_t GetColor(const char *hexcolor)Static method returning color number for color specified by hex color string of form: ""#rrggbb"",...Definition TColor.cxx:1920; TEnv::GetValuevirtual Int_t GetValue(const char *name, Int_t dflt) constReturns the integer value for a resource.Definition TEnv.cxx:491; TObject::Drawvirtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/greyscale_8C.html:85,Guid,Guide,85,doc/master/greyscale_8C.html,https://root.cern,https://root.cern/doc/master/greyscale_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/gtime.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gtime.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Example of a graph of data moving in time. ; Use the canvas ""File/Quit ROOT"" to exit from this example; ; #include ""TCanvas.h""; #include ""TRandom3.h""; #include ""TMath.h""; #include ""TText.h""; #include ""TArrow.h""; #include ""TGraphTime.h""; #include <vector>; ; void gtime(Int_t nsteps = 500, Int_t np = 100); {; if (np > 1000) np = 1000;; std::vector<Int_t> color(np);; std::vector<Double_t> rr(np), phi(np), dr(np), size(np);; TRandom3 r;; Double_t xmin = -10, xmax = 10, ymin = -10, ymax = 10;; auto g = new TGraphTime(nsteps, xmin, ymin, xmax, ymax);; g->SetTitle(""TGraphTime demo;X domain;Y domain"");; for (Int_t i = 0; i < np; i++) { // calculate some object parameters; rr[i] = r.Uniform(0.1 * xmax, 0.2 * xmax);; phi[i] = r.Uniform(0, 2 * TMath::Pi());; dr[i] = r.Uniform(0, 1) * 0.9 * xmax / Double_t(nsteps);; Double_t rc = r.Rndm();; if (rc > 0.7); color[i] = kYellow;; else if (rc > 0.3); color[i] = kBlue;; else; color[i] = kRed;; ; size[i] = r.Uniform(0.5, 6);; }; for (Int_t s = 0; s < nsteps; s++) { // fill the TGraphTime step by step; for (Int_t i = 0; i < np; i++) {; Double_t newr = rr[i] + dr[i] * s;; Double_t newsize = 0.2 + size[i] * TMath::Abs(TMath::Sin(newr + 10));; Double_t newphi = phi[i] + 0.01 * s;; Double_t xx = newr * TMath::Cos(newphi);; Double_t yy = newr * TMath::Sin(newphi);; TMarker *m = new TMarker(xx, yy, 20);; m->SetMarkerColor(color[i]);; m->SetMarkerSize(newsize);; g->Add(m, s);; if (i == np - 1); g->Add(new TArrow(xmin, ymax, xx, yy, 0.02, ""-|>""), s);; }; g->Add(new TPaveLabel(.90, .92, .98, .97, TString::Format(""%d"", s + 1), ""brNDC""), s);; }; ; g->Draw();; ; // save object as animated gif; // g->SaveAnimatedGif(""gtime.gif"");; ; //save object to a file; auto f = TFile::Open(""gtime.root"",""recreate"");; f->WriteObject(g, ""g"");; delete f;; ; //t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphics_2gtime_8C.html:81,Guid,Guide,81,doc/master/graphics_2gtime_8C.html,https://root.cern,https://root.cern/doc/master/graphics_2gtime_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/inside.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. inside.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Test the IsInside methods of various graphics primitives. . ; void inside() {; auto el = new TEllipse(0.75, 0.25, .2,.15,45,315,62);; el->Draw();; ; auto gr = new TGraph();; double gr_x1[5] = {0.1, 0.3388252, 0.03796561, 0.4176218, 0.1};; double gr_y1[5] = {0.5, 0.9644737, 0.7776316, 0.6960526, 0.5};; gr = new TGraph(5, gr_x1, gr_y1);; gr->Draw(""L"");; ; auto bx = new TBox(.7, .8, .9, .95);; bx->Draw();; ; auto pv = new TPave(.05, .1, .3, .2);; pv->Draw();; ; auto di = new TDiamond(.05, .25, .3, .4);; di->Draw();; ; auto cr = new TCrown(.5, .5, .1, .15);; cr->SetFillColor(19);; cr->Draw();; ; for (int i = 0; i < 10000; i++) {; double x = gRandom->Rndm();; double y = gRandom->Rndm();; auto p = new TMarker(x,y,7);; p->Draw();; if (el->IsInside(x,y) || bx->IsInside(x,y) || pv->IsInside(x,y) || di->IsInside(x,y) || cr->IsInside(x,y) ||; gr->IsInside(x,y)) {; p->SetMarkerColor(kGreen);; } else {; p->SetMarkerColor(kRed);; }; }; }; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TBoxCreate a Box.Definition TBox.h:22; TCrownTo draw a Crown.Definition TCrown.h:19; TDiamondDraw a Diamond.Definition TDiamond.h:17; TEllipseDraw Ellipses.Definition TEllipse.h:23; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::IsInsidevirtual Int_t IsInside(Double_t x, Double_t y) constReturn 1 if the point (x,y) is inside the polygon defined by the graph vertices 0 otherwise.Definition TGraph.cxx:1841; TGraph::Drawvoid Draw(Option_t *chopt="""") overrideDraw this graph with its current attributes.Definition TGraph.cxx:831; TMarkerManages Markers.Definition TMarker.h:22;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/inside_8C.html:82,Guid,Guide,82,doc/master/inside_8C.html,https://root.cern,https://root.cern/doc/master/inside_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/latex.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. latex.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro draws 5 Latex-style formula in a canvas and prints the canvas as a Postscript file. . ; void latex() {; TCanvas *c1 = new TCanvas(""c1"",""test"",600,700);; // write formulas; TLatex l;; l.SetTextAlign(12);; l.SetTextSize(0.04);; l.DrawLatex(0.1,0.9,""1) C(x) = d #sqrt{#frac{2}{#lambdaD}}\; #int^{x}_{0}cos(#frac{#pi}{2}t^{2})dt"");; l.DrawLatex(0.1,0.7,""2) C(x) = d #sqrt{#frac{2}{#lambdaD}}\; #int^{x}cos(#frac{#pi}{2}t^{2})dt"");; l.DrawLatex(0.1,0.5,""3) R = |A|^{2} = #frac{1}{2}#left(#[]{#frac{1}{2}+\; C(V)}^{2}+#[]{#frac{1}{2}+S(V)}^{2}#right)"");; l.DrawLatex(0.1,0.3,; ""4) F(t) = #sum_{i=-#infty}^{#infty}A(i)cos#[]{#frac{i}{t+i}}"");; l.DrawLatex(0.1,0.1,""5) {}_{3}^{7}Li"");; c1->Print(""latex.ps"");; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TLatexTo draw Mathematical Formula.Definition TLatex.h:18; TLine::Printvoid Print(Option_t *option="""") const overrideDump this line with its attributes.Definition TLine.cxx:419; c1return c1Definition legend1.C:41; lTLine lDefinition textangle.C:4; AuthorRene Brun ; Definition in file latex.C. tutorialsgraphicslatex.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/latex_8C.html:81,Guid,Guide,81,doc/master/latex_8C.html,https://root.cern,https://root.cern/doc/master/latex_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/latex2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. latex2.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro draws 4 Latex-style formula in a canvas and prints the canvas as a Postscript file. . ; void latex2(){; TCanvas *c1 = new TCanvas(""c1"");; TLatex l;; l.SetTextAlign(23);; l.SetTextSize(0.1);; l.DrawLatex(0.5,0.95,""e^{+}e^{-}#rightarrowZ^{0}#rightarrowI#bar{I}, q#bar{q}"");; l.DrawLatex(0.5,0.75,""|#vec{a}#bullet#vec{b}|=#Sigmaa^{i}_{jk}+b^{bj}_{i}"");; l.DrawLatex(0.5,0.5,""i(#partial_{#mu}#bar{#psi}#gamma^{#mu}+m#bar{#psi})=0\; #Leftrightarrow(#Box+m^{2})#psi=0"");; l.DrawLatex(0.5,0.3,""L_{em}=eJ^{#mu}_{em}A_{#mu} , J^{#mu}_{em}=#bar{I}\; #gamma_{#mu}I , M^{j}_{i}=#SigmaA_{#alpha}#tau^{#alphaj}_{i}"");; c1->Print(""latex2.ps"");; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TLatexTo draw Mathematical Formula.Definition TLatex.h:18; TLine::Printvoid Print(Option_t *option="""") const overrideDump this line with its attributes.Definition TLine.cxx:419; c1return c1Definition legend1.C:41; lTLine lDefinition textangle.C:4; AuthorRene Brun ; Definition in file latex2.C. tutorialsgraphicslatex2.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/latex2_8C.html:82,Guid,Guide,82,doc/master/latex2_8C.html,https://root.cern,https://root.cern/doc/master/latex2_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/latex3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. latex3.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Example illustrating a TPaveText with Latex inside. . ; void latex3() {; ; TCanvas *c1 = new TCanvas(""c1"");; TPaveText *pt = new TPaveText(.05,.1,.95,.8);; ; pt->AddText(""#frac{2s}{#pi#alpha^{2}} #frac{d#sigma}{dcos#theta} ""; ""(e^{+}e^{-} #rightarrow f#bar{f} ) = #left| #frac{1}{1 - #Delta#alpha} ""; ""#right|^{2} (1+cos^{2}#theta)"");; ; pt->AddText(""+ 4 Re #left{ #frac{2}{1 - #Delta#alpha} #chi(s) ""; ""#[]{#hat{g}_{#nu}^{e}#hat{g}_{#nu}^{f} ""; ""(1 + cos^{2}#theta) + 2 #hat{g}_{a}^{e}#hat{g}_{a}^{f} cos#theta) } #right}"");; ; pt->AddText(""+ 16#left|#chi(s)#right|^{2} ""; ""#left[(#hat{g}_{a}^{e}^{2} + #hat{g}_{v}^{e}^{2})""; ""(#hat{g}_{a}^{f}^{2} + #hat{g}_{v}^{f}^{2})(1+cos^{2}#theta)""; ""+ 8 #hat{g}_{a}^{e} #hat{g}_{a}^{f} #hat{g}_{v}^{e}""; ""#hat{g}_{v}^{f}cos#theta#right] "");; ; pt->SetLabel(""Born equation"");; pt->Draw();; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPaveText::SetLabelvirtual void SetLabel(const char *label)Definition TPaveText.h:61; TPaveText::Drawvoid Draw(Option_t *option="""") overrideDraw this pavetext with its current attributes.Definition TPaveText.cxx:242; ptTPaveText * ptDefinition entrylist_figure1.C:7; c1return c1Definition legend1.C:41; AuthorRene Brun ; Definition in file latex3.C. tutorialsgraphicslatex3.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/latex3_8C.html:82,Guid,Guide,82,doc/master/latex3_8C.html,https://root.cern,https://root.cern/doc/master/latex3_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/latex4.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. latex4.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Draw the Greek letters as a table and save the result as GIF, PS, PDF and SVG files. ; Lowercase Greek letters are obtained by adding a # to the name of the letter. For an uppercase Greek letter, just capitalize the first letter of the command name. Some letter have two representations. The name of the second one (the ""variation"") starts with ""var"". png output:. pdf output:. svg output:. AuthorRene Brun ; Definition in file latex4.C. tutorialsgraphicslatex4.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/latex4_8C.html:82,Guid,Guide,82,doc/master/latex4_8C.html,https://root.cern,https://root.cern/doc/master/latex4_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/latex5.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. latex5.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This draws the Mathematical Symbols letters as a table and save the result as GIF, PS, PDF and SVG files. . png output:. pdf output:. svg output:. AuthorRene Brun ; Definition in file latex5.C. tutorialsgraphicslatex5.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/latex5_8C.html:82,Guid,Guide,82,doc/master/latex5_8C.html,https://root.cern,https://root.cern/doc/master/latex5_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/mandelbrot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. mandelbrot.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Using TExec to handle keyboard events and TComplex to draw the Mandelbrot set. ; Pressing the keys 'z' and 'u' will zoom and unzoom the picture near the mouse location, 'r' will reset to the default view.; Try it (in compiled mode!) with: root mandelbrot.C+. Details; when a mouse event occurs the myexec() function is called (by using AddExec). Depending on the pressed key, the mygenerate() function is called, with the proper arguments. Note the last_x and last_y variables that are used in myexec() to store the last pointer coordinates (px is not a pointer position in kKeyPress events).; ; #include <TStyle.h>; #include <TROOT.h>; #include <TH2.h>; #include <TComplex.h>; #include <TVirtualPad.h>; #include <TCanvas.h>; ; TH2F *last_histo = nullptr;; ; void mygenerate(double factor, double cen_x, double cen_y); {; printf(""Regenerating...\n"");; // resize histo:; if(factor>0); {; double dx=last_histo->GetXaxis()->GetXmax()-last_histo->GetXaxis()->GetXmin();; double dy=last_histo->GetYaxis()->GetXmax()-last_histo->GetYaxis()->GetXmin();; last_histo->SetBins(; last_histo->GetNbinsX(),; cen_x-factor*dx/2,; cen_x+factor*dx/2,; last_histo->GetNbinsY(),; cen_y-factor*dy/2,; cen_y+factor*dy/2; );; last_histo->Reset();; }; else; {; if(last_histo) delete last_histo;; // allocate first view...; last_histo = new TH2F(""h2"",; ""Mandelbrot [move mouse and press z to zoom, u to unzoom, r to reset]"",; 200,-2,2,200,-2,2);; last_histo->SetStats(false);; }; const int max_iter=50;; for(int bx=1;bx<=last_histo->GetNbinsX();bx++); for(int by=1;by<=last_histo->GetNbinsY();by++); {; double x=last_histo->GetXaxis()->GetBinCenter(bx);; double y=last_histo->GetYaxis()->GetBinCenter(by);; TComplex point( x,y);; TComplex z=point;; int iter=0;; while (z.Rho()<2){; z=z*z+point;; last_histo-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mandelbrot_8C.html:86,Guid,Guide,86,doc/master/mandelbrot_8C.html,https://root.cern,https://root.cern/doc/master/mandelbrot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/markerwarning.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. markerwarning.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This script illustrates the danger of using asymmetric symbols. . Non-symmetric symbols should be used carefully in plotting. These two graphs show how misleading a careless use of symbols can be. The two plots represent the same data sets but because of a bad symbol choice, the two plots on the top appear further apart than for the bottom example. AuthorOlivier Couet ; Definition in file markerwarning.C. tutorialsgraphicsmarkerwarning.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/markerwarning_8C.html:89,Guid,Guide,89,doc/master/markerwarning_8C.html,https://root.cern,https://root.cern/doc/master/markerwarning_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/mass_spectrum.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. mass_spectrum.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro makes use of some basic graphics primitives such as line, arrow and text. ; It has been written using the TCanvas ToolBar to produce a first draft and was then modified for fine adjustments. Note also the use of C functions. They allow to simplify the macro reading and editing by avoiding code repetition or defining some graphics attributes in one single place. This technique to generate drawings may appear not very user friendly compare to all the ""wysiwyg"" graphics editors available. In some cases it can be more powerful than a GUI interface because it allows to generate very precise drawing and using computation to generate them. ; void hline (Double_t x, Double_t y); {; Double_t dx = 0.1;; TLine *l = new TLine(x,y,x+dx,y);; l->Draw();; l->SetLineWidth(4);; }; ; void DrawArrow (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t ls); {; TArrow *arr = new TArrow(x1,y1,x2,y2,0.025,""|>"");; arr->SetFillColor(1);; arr->SetFillStyle(1001);; arr->SetLineStyle(ls);; arr->SetAngle(19);; arr->Draw();; }; ; void mass_spectrum(); {; TCanvas *C = new TCanvas(""C"",""C"",800,500);; ; hline (0.10,0.25);; hline (0.10,0.80);; hline (0.30,0.90);; hline (0.30,0.35);; hline (0.45,0.60);; hline (0.58,0.68);; hline (0.73,0.70);; hline (0.89,0.75);; ; DrawArrow(0.32, 0.90, 0.32, 0.35, 1);; DrawArrow(0.34, 0.90, 0.34, 0.35, 1);; DrawArrow(0.36, 0.90, 0.36, 0.60, 1);; DrawArrow(0.38, 0.90, 0.38, 0.70, 1);; ; DrawArrow(0.30, 0.90, 0.18, 0.25, 1);; DrawArrow(0.30, 0.35, 0.19, 0.25, 1);; DrawArrow(0.40, 0.90, 0.47, 0.61, 1);; ; DrawArrow(0.15, 0.25, 0.15, 0.19, 1);; DrawArrow(0.15, 0.80, 0.15, 0.74, 1);; ; DrawArrow(0.50, 0.60, 0.50, 0.54, 1);; DrawArrow(0.60, 0.68, 0.60, 0.62, 1);; DrawArrow(0.94, 0.75, 0.94, 0.69, 1);; ; DrawArrow(0.32, 0.35, 0.32, 0.19, 1)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mass__spectrum_8C.html:89,Guid,Guide,89,doc/master/mass__spectrum_8C.html,https://root.cern,https://root.cern/doc/master/mass__spectrum_8C.html,2,"['Guid', 'simpl']","['Guide', 'simplify']"
Usability,". ROOT: tutorials/graphics/palettes.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. palettes.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro draws all the high definition palettes available in ROOT. ; It generates a png file for each palette and one pdf file, with a table of content, containing all the palettes.; In ROOT, more than 60 high quality palettes are predefined with 255 colors each.; These palettes can be accessed ""by name"" with gStyle->SetPalette(num). num can be taken within the enum given in the previous link. As an example gStyle->SetPalette(kCividis) will select the following palette. ; TCanvas *c = nullptr;; ; void draw_palette(int p, TString n); {; delete c;; c = new TCanvas(""c"",""Contours"",0,0,500,500);; TF2 *f2 = new TF2(""f2"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",0.999,3.002,0.999,3.002);; f2->SetContour(99);; gStyle->SetPalette(p);; f2->SetLineWidth(1);; f2->SetLineColor(kBlack);; f2->Draw(""surf1z"");; ; // Title; TPaveText *pt = new TPaveText(10,11,10,11,""blNDC"");; pt->SetName(""title"");; pt->Draw();; TString num = n;; num.ReplaceAll("" "","""");; TLatex *l = new TLatex(-0.8704441,0.9779387,TString::Format(""Palette #%d: %s #scale[0.7]{(#font[82]{k%s})}"",p,n.Data(),num.Data()));; l->SetTextFont(42);; l->SetTextSize(0.035);; l->Draw();; c->Update();; c->Print(TString::Format(""palette_%d.png"", p));; ; TString opt = TString(""Title:"") + n;; if (p == kDeepSea); c->Print(""palettes.pdf("", opt.Data());; else if (p == kCividis); c->Print(""palettes.pdf)"", opt.Data());; else; c->Print(""palettes.pdf"", opt.Data());; }; ; void palettes(); {; gROOT->SetBatch(1);; draw_palette(kDeepSea, ""Deap Sea"");; draw_palette(kGreyScale, ""Grey Scale"");; draw_palette(kDarkBodyRadiator, ""Dark Body Radiator"");; draw_palette(kBlueYellow, ""Blue Yellow"");; draw_palette(kRainBow, ""Rain Bow"");; draw_palette(kInvertedDarkBodyRadiator, ""Inverted Dark Body Radiator"");; draw_palette(kBird, ""Bird"");; draw_palette",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/palettes_8C.html:84,Guid,Guide,84,doc/master/palettes_8C.html,https://root.cern,https://root.cern/doc/master/palettes_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/pavetext.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. pavetext.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Draw a pave text. ; The text lines are added in order using the AddText method Line separator can be added using AddLine.; AddText returns a TText corresponding to the line added to the pave. This return value can be used to modify the text attributes.; Once the TPaveText is build the text of each line can be retrieved as a TText with GetLine and GetLineWith wich is also useful to modify the text attributes of a line. ; TCanvas *pavetext(){; TCanvas *c = new TCanvas(""c"");; TPaveText *pt = new TPaveText(.05,.1,.95,.8);; ; pt->AddText(""A TPaveText can contain severals line of text."");; pt->AddText(""They are added to the pave using the AddText method."");; pt->AddLine(.0,.5,1.,.5);; pt->AddText(""Even complex TLatex formulas can be added:"");; TText *t1 = pt->AddText(""F(t) = #sum_{i=-#infty}^{#infty}A(i)cos#[]{#frac{i}{t+i}}"");; ; t1->SetTextColor(kBlue);; ; pt->Draw();; ; TText *t2 = pt->GetLineWith(""Even"");; t2->SetTextColor(kOrange+1);; ; return c;; }; c#define c(i)Definition RSha256.hxx:101; kOrange@ kOrangeDefinition Rtypes.h:67; kBlue@ kBlueDefinition Rtypes.h:66; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPaveText::AddLinevirtual TLine * AddLine(Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0)Add a new graphics line to this pavetext.Definition TPaveText.cxx:177; TPaveText::Drawvoid Draw(Option_t *option="""") overrideDraw this pavetext with its current attributes.Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pavetext_8C.html:84,Guid,Guide,84,doc/master/pavetext_8C.html,https://root.cern,https://root.cern/doc/master/pavetext_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/perceptualcolormap.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. perceptualcolormap.C File ReferenceTutorials » Graphics tutorials. Detailed Description; A “Perceptual” colormap explicitly identifies a fixed value in the data ; On geographical plot this fixed point can, for instance, the ""sea level"". A perceptual colormap provides a monotonic luminance variations above and below this fixed value. Unlike the rainbow colormap, this colormap provides a faithful representation of the structures in the data.; This macro demonstrates how to produce the perceptual colormap shown on the figure 2 in this article.; The function Perceptual_Colormap takes two parameters as input:; h, the TH2D to be drawn; val_cut, the Z value defining the ""sea level"". Having these parameters this function defines two color maps: one above val_cut and one below. ; void Perceptual_Colormap(TH2D *h, Double_t val_cut) {; Double_t max = h->GetMaximum(); // Histogram's maximum; Double_t min = h->GetMinimum(); // Histogram's minimum; Double_t per_cut = (val_cut-min)/(max-min); // normalized value of val_cut; Double_t eps = (max-min)*0.00001; // epsilon; ; // Definition of the two palettes below and above val_cut; const Int_t Number = 4;; Double_t Red[Number] = { 0.11, 0.19 , 0.30, 0.89};; Double_t Green[Number] = { 0.03, 0.304, 0.60, 0.91};; Double_t Blue[Number] = { 0.18, 0.827, 0.50, 0.70};; Double_t Stops[Number] = { 0., per_cut, per_cut+eps, 1. };; ; Int_t nb= 256;; h->SetContour(nb);; ; TColor::CreateGradientColorTable(Number,Stops,Red,Green,Blue,nb);; ; // Histogram drawing; h->Draw(""colz"");; }; ; void perceptualcolormap() {; TH2D *h = new TH2D(""h"",""Perceptual Colormap"",200,-4,4,200,-4,4);; h->SetStats(0);; ; Double_t a,b;; for (Int_t i=0;i<1000000;i++) {; gRandom->Rannor(a,b);; h->Fill(a-1.5,b-1.5,0.1);; h->Fill(a+2.,b-3.,0.07);; h->Fill(a-3.,b+3.,0.05);; gRandom->Rannor(a,b);; h->Fill(a+1.5,b+1.5,-0.08);; }; Percept",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/perceptualcolormap_8C.html:94,Guid,Guide,94,doc/master/perceptualcolormap_8C.html,https://root.cern,https://root.cern/doc/master/perceptualcolormap_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/piechart.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. piechart.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Pie chart example. . ; void piechart(); {; Float_t vals[] = {.2,1.1,.6,.9,2.3};; Int_t colors[] = {2,3,4,5,6};; Int_t nvals = sizeof(vals)/sizeof(vals[0]);; ; TCanvas *cpie = new TCanvas(""cpie"",""TPie test"",700,700);; cpie->Divide(2,2);; ; TPie *pie1 = new TPie(""pie1"",; ""Pie with offset and no colors"",nvals,vals);; TPie *pie2 = new TPie(""pie2"",; ""Pie with radial labels"",nvals,vals,colors);; TPie *pie3 = new TPie(""pie3"",; ""Pie with tangential labels"",nvals,vals,colors);; TPie *pie4 = new TPie(""pie4"",; ""Pie with verbose labels"",nvals,vals,colors);; ; cpie->cd(1);; pie1->SetAngularOffset(30.);; pie1->SetEntryRadiusOffset( 4, 0.1);; pie1->SetRadius(.35);; pie1->Draw(""3d"");; ; cpie->cd(2);; pie2->SetEntryRadiusOffset(2,.05);; pie2->SetEntryLineColor(2,2);; pie2->SetEntryLineWidth(2,5);; pie2->SetEntryLineStyle(2,2);; pie2->SetEntryFillStyle(1,3030);; pie2->SetCircle(.5,.45,.3);; pie2->Draw(""rsc"");; ; cpie->cd(3);; pie3->SetY(.32);; pie3->GetSlice(0)->SetValue(.8);; pie3->GetSlice(1)->SetFillStyle(3031);; pie3->SetLabelsOffset(-.1);; pie3->Draw(""3d t nol"");; TLegend *pieleg = pie3->MakeLegend();; pieleg->SetY1(.56); pieleg->SetY2(.86);; ; cpie->cd(4);; pie4->SetRadius(.2);; pie4->SetLabelsOffset(.01);; pie4->SetLabelFormat(""#splitline{%val (%perc)}{%txt}"");; pie4->Draw(""nol <"");; }; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; colorsColor * colorsDefinition X3DBuffer.c:21; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TCanvasThe Canvas class.Definition TCanvas.h:23; TCanvas::cdTVirtualPad * cd(Int_t subpadnumber=0) overrideSet current canvas & pad.Definition TCanvas.cxx:719; TLegendThis class displays a legend box (TPaveText) containing several legend en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/piechart_8C.html:84,Guid,Guide,84,doc/master/piechart_8C.html,https://root.cern,https://root.cern/doc/master/piechart_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/polytest1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. polytest1.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro is testing the ""compacting"" algorithm in TPadPainter. ; It reduces the number of polygon's vertices using actual pixel coordinates. It's not really useful, but just to test that the resulting polygon is still reasonable. Initial number of points is 1000000, after ""compression"" it's 523904 (with default canvas size, before you tried to resize it) - so almost half of vertices were removed but you can still see the reasonable shape. If you resize a canvas to a smaller size, the number of vertices after compression can be something like 5000 and even less. It's easy to 'fool' this algorithm though in this particular case (ellipse is a kind of fringe case, you can easily have a sequence of almost unique vertices (at a pixel level).; ; //Includes for ACLiC.; #include <cassert>; #include <vector>; ; #include ""TRandom.h""; #include ""TCanvas.h""; #include ""TError.h""; #include ""Rtypes.h""; #include ""TNamed.h""; #include ""TMath.h""; ; class PolyTest1 : public TNamed, public TAttLine, public TAttFill {; public:; PolyTest1(unsigned nVertices);; ; void Paint(const Option_t *notUsed) override;; void Reset(unsigned nVertices);; ; private:; enum {; kNPointsDefault = 10000//minimal number of points.; };; ; std::vector<Double_t> fXs;; std::vector<Double_t> fYs;; };; ; //_____________________________________________________________; PolyTest1::PolyTest1(unsigned nVertices); : TNamed(""polygon_compression_test1"", ""polygon_compression_test1""); {; Reset(nVertices);; }; ; //_____________________________________________________________; void PolyTest1::Reset(unsigned nVertices); {; //Some canvas must already exist by this point.; assert(gPad != nullptr && ""Reset, gPad is null"");; //We need a gRandom to exist.; assert(gRandom != nullptr && ""Reset, gRandom is null"");; ; if (nV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/polytest1_8C.html:85,Guid,Guide,85,doc/master/polytest1_8C.html,https://root.cern,https://root.cern/doc/master/polytest1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/polytest2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. polytest2.C File ReferenceTutorials » Graphics tutorials. Detailed Description; ; This macro is testing the ""compacting"" algorithm in TPadPainter. ; It reduces the number of polygon's vertices using actual pixel coordinates. This macro is testing new ""compacting"" algorithm in TPadPainter (it reduces the number of polygon's vertices using actual pixel coordinates). In principle, this test case is what our histograms (fringe cases) are: ""saw-like"" polygon (bins == teeth).; ; //Includes for ACLiC.; #include <cassert>; #include <vector>; ; #include ""TRandom.h""; #include ""TCanvas.h""; #include ""Rtypes.h""; #include ""TNamed.h""; ; class PolyTest2 : public TNamed, public TAttLine, public TAttFill {; public:; PolyTest2();; ; void Paint(const Option_t *notUsed) override;; ; private:; enum TestSize {; kNSawPoints = 10000; };; ; //Part 1.; std::vector<Double_t> fXs1;; std::vector<Double_t> fYs1;; //Part 2.; ; std::vector<Double_t> fXs2;; std::vector<Double_t> fYs2;; };; ; //_____________________________________________________________; PolyTest2::PolyTest2(); : TNamed(""polygon_compression_test2"", ""polygon_compression_test2""); {; //Polygon 1, n of points is 10003, after 'compression' : 1897; //Polygon 2, n of points is 10003, after 'compression' : 2093; ; //Some canvas must already exist by this point.; assert(gPad != nullptr && ""PolyTest2, gPad is null"");; //We need a gRandom to exist.; assert(gRandom != nullptr && ""PolyTest2, gRandom is null"");; ; Double_t xMin = 0., xMax = 0., yMin = 0., yMax = 0.;; gPad->GetRange(xMin, yMin, xMax, yMax);; assert(xMax - xMin > 0 && yMax - yMin > 0 && ""PolyTest2, invalid canvas' ranges"");; ; ; // .(0/the last)--------.(1); // | /; // | \; // | /; // .(kNSawPoints + 1)--.(kNSawPoints); ; const unsigned nVertices = 3 + kNSawPoints;; ; {; //Polygon 1, ""vertical saw"":; fXs1.resize(nVertices);; fYs1.resize(nVertices);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/polytest2_8C.html:85,Guid,Guide,85,doc/master/polytest2_8C.html,https://root.cern,https://root.cern/doc/master/polytest2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/pstable.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. pstable.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Display all possible types of ROOT/Postscript characters. ; ; void table(Float_t x1, Float_t x2, Float_t yrange, TText &t, const char **symbol, Bool_t octal);; ; void pstable(); {; const char *symbol1[] =; {""A"",""B"",""C"",""D"",""E"",""F"",""G"",""H"",""I"",""J"",""K"",""L"",""M"",""N"",; ""O"",""P"",""Q"",""R"",""S"",""T"",""U"",""V"",""W"",""X"",""Y"",""Z"",; ""0"",""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",; ""."","","",""+"",""-"",""*"",""/"",""="",""("","")"",""{"",""}"",""END""};; ; const char *symbol2[] =; {""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h"",""i"",""j"",""k"",""l"",""m"",""n"",; ""o"",""p"",""q"",""r"",""s"",""t"",""u"",""v"",""w"",""x"",""y"",""z"",; "":"","";"",""@"",""\\"",""_"",""|"",""%"",; ""@'"",""<"","">"",""["",""]"",""\42"",""@\43"",""@\136"",; ""@\77"",""@\41"",""@&"",""$"",""@\176"","" "",""END""};; ; const char *symbol3[] =; {""\241"",""\242"",""\243"",""\244"",""\245"",""\246"",""\247"",""\250"",; ""\251"",""\252"",""\253"",""\254"",""\255"",""\256"",""\257"",""\260"",; ""\261"",""\262"",""\263"",""\264"",""\265"",""\266"",""\267"",""\270"",; ""\271"",""\272"",""\273"",""\274"",""\275"",""\276"",""\277"",""\300"",; ""\301"",""\302"",""\303"",""\304"",""\305"",""\306"",""\307"",""\310"",; ""\311"",""\312"",""\313"",""\314"",""\315"",""\316"",""\317"",""END""};; ; const char *symbol4[] =; {""\321"",""\322"",""\323"",""\324"",""\325"",""\326"",""\327"",""\330"",; ""\331"",""\332"",""\333"",""\334"",""\335"",""\336"",""\337"",""\340"",; ""\341"",""\342"",""\343"",""\344"",""\345"",""\346"",""\347"",""\340"",; ""\351"",""\352"",""\353"",""\354"",""\355"",""\356"",""\357"",""\360"",; ""\361"",""\362"",""\363"",""\364"",""\365"",""\366"",""\367"",""\370"",; ""\371"",""\372"",""\373"",""\374"",""\375"",""\376"",""\377"",""END""};; ; const char *symbol5[] =; {""\177"",""\200"",""\201"",""\202"",""\203"",""\204"",""\205"",""\206"",; ""\207"",""\210"",""\211"",""\212"",""\213"",""\214"",""\215"",""\216"",; ""\217"",""\220"",""\221"",""\222"",""\223"",""\224"",""\225"",""\226"",; ""\227"",""\230"",""\231"",""\232"",""\233"",""\234"",""\235"",""\236"",; ""\237"",""\240"",""END""};; ; Float_t xrange = 18;; Float_t yrange = 25;; Int_t w = 650;; Int_t h = w*yrange/xrange;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pstable_8C.html:83,Guid,Guide,83,doc/master/pstable_8C.html,https://root.cern,https://root.cern/doc/master/pstable_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/psview.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. psview.C File ReferenceTutorials » Graphics tutorials. Detailed Description; An example how to display PS, EPS, PDF files in canvas. ; To load a PS file in a TCanvas, the ghostscript program needs to be install.; On most unix systems it is installed by default.; On Windows it has to be installed from http://pages.cs.wisc.edu/~ghost/ also the place where gswin32c.exe sits should be added in the PATH. One way to do it is:; Start the Control Panel; Double click on System 3, Open the ""Advanced"" tab; Click on the ""Environment Variables"" button; Find ""Path"" in ""System variable list"", click on it.; Click on the ""Edit"" button.; In the ""Variable value"" field add the path of gswin32c (after a "";"") it should be something like: ""C:\Program Files\gs\gs8.13\bin""; click ""OK"" as much as needed. ; #include ""TROOT.h""; #include ""TCanvas.h""; #include ""TImage.h""; ; void psview(); {; // set to batch mode -> do not display graphics; gROOT->SetBatch(1);; ; // create a PostScript file; TString dir = gROOT->GetTutorialDir();; dir.Append(""/graphics/feynman.C"");; gROOT->Macro(dir);; gPad->Print(""feynman.eps"");; ; // back to graphics mode; gROOT->SetBatch(0);; ; // create an image from PS file; TImage *ps = TImage::Open(""feynman.eps"");; ; if (!ps) {; printf(""GhostScript (gs) program must be installed\n"");; return;; }; ; new TCanvas(""psexam"", ""Example how to display PS file in canvas"", 600, 400);; TLatex *tex = new TLatex(0.06,0.9,""The picture below has been loaded from a PS file:"");; tex->Draw();; ; TPad *eps = new TPad(""eps"", ""eps"", 0., 0., 1., 0.75);; eps->Draw();; eps->cd();; ps->Draw(""xxx"");; }; TCanvas.h; TImage.h; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TImageAn abstract interface to image processing library.Definition TImage.h:29; TImage::Openstatic TIma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/psview_8C.html:82,Guid,Guide,82,doc/master/psview_8C.html,https://root.cern,https://root.cern/doc/master/psview_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/quarks.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. quarks.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Example illustrating divided pads and Latex. . ; void quarks () {; TCanvas *c1 = new TCanvas(""c1"", ""c1"",10,10,630,760);; c1->SetFillColor(kBlack);; Int_t quarkColor = 50;; Int_t leptonColor = 16;; Int_t forceColor = 38;; Int_t titleColor = kYellow;; Int_t border = 8;; ; TLatex *texf = new TLatex(0.90,0.455,""Force Carriers"");; texf->SetTextColor(forceColor);; texf->SetTextAlign(22); texf->SetTextSize(0.07);; texf->SetTextAngle(90);; texf->Draw();; ; TLatex *texl = new TLatex(0.11,0.288,""Leptons"");; texl->SetTextColor(leptonColor);; texl->SetTextAlign(22); texl->SetTextSize(0.07);; texl->SetTextAngle(90);; texl->Draw();; ; TLatex *texq = new TLatex(0.11,0.624,""Quarks"");; texq->SetTextColor(quarkColor);; texq->SetTextAlign(22); texq->SetTextSize(0.07);; texq->SetTextAngle(90);; texq->Draw();; ; TLatex tex(0.5,0.5,""u"");; tex.SetTextColor(titleColor); tex.SetTextFont(32);; tex.SetTextAlign(22);; tex.SetTextSize(0.14);; tex.DrawLatex(0.5,0.93,""Elementary"");; tex.SetTextSize(0.12);; tex.DrawLatex(0.5,0.84,""Particles"");; tex.SetTextSize(0.05);; tex.DrawLatex(0.5,0.067,""Three Generations of Matter"");; ; tex.SetTextColor(kBlack); tex.SetTextSize(0.8);; ; // Create main pad and its subdivisions; TPad *pad = new TPad(""pad"", ""pad"",0.15,0.11,0.85,0.79);; pad->Draw();; pad->cd();; pad->Divide(4,4,0.0003,0.0003);; ; pad->cd(1); gPad->SetFillColor(quarkColor);; gPad->SetBorderSize(border);; tex.DrawLatex(.5,.5,""u"");; ; pad->cd(2); gPad->SetFillColor(quarkColor);; gPad->SetBorderSize(border);; tex.DrawLatex(.5,.5,""c"");; ; pad->cd(3); gPad->SetFillColor(quarkColor);; gPad->SetBorderSize(border);; tex.DrawLatex(.5,.5,""t"");; ; pad->cd(4); gPad->SetFillColor(forceColor);; gPad->SetBorderSize(border);; tex.DrawLatex(.5,.55,""#gamma"");; ; pad->cd(5); gPad->SetFillColor(quarkColor);; gP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/quarks_8C.html:82,Guid,Guide,82,doc/master/quarks_8C.html,https://root.cern,https://root.cern/doc/master/quarks_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/save_batch.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. save_batch.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro demonstrates batch image mode of web canvas When enabled - several images converted into JSON before all together provided to headless browser to produce image files. ; Let significantly increase performance. Important - disable batch mode for flushing remaining images; ; void save_batch(); {; // 37 canvases will be collected together for conversion; TWebCanvas::BatchImageMode(37);; ; auto c = new TCanvas(""canvas"", ""Canvas with histogram"");; ; auto h1 = new TH1I(""hist"", ""Histogram with random data"", 100, -5., 5);; h1->SetDirectory(nullptr);; h1->FillRandom(""gaus"", 10000);; h1->Draw();; ; for(int n = 0; n < 100; ++n) {; h1->FillRandom(""gaus"", 10000);; c->SaveAs(TString::Format(""batch_image_%03d.png"", n));; }; ; // Important - disabling batch mode also flush remaining images; TWebCanvas::BatchImageMode(0);; }; c#define c(i)Definition RSha256.hxx:101; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1I1-D histogram with an int per channel (see TH1 documentation)Definition TH1.h:540; TH1::SetDirectoryvirtual void SetDirectory(TDirectory *dir)By default, when a histogram is created, it is added to the list of histogram objects in the current ...Definition TH1.cxx:8937; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TWebCanvas::BatchImageModestatic void BatchImageMode(UInt_t n=100)Configure batch image mode for web graphics.Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/save__batch_8C.html:86,Guid,Guide,86,doc/master/save__batch_8C.html,https://root.cern,https://root.cern/doc/master/save__batch_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/saveall.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. saveall.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Creates many canvases and save as images or pdf. ; This macro creates 100 canvases and store them in different images files using TCanvas::SaveAll() method. Demonstrated how different output format can be used in batch mode.; ; void saveall(); {; gROOT->SetBatch(kTRUE); // enforce batch mode to avoid appearance of multiple canvas windows; ; std::vector<TPad *> pads;; ; for(int n = 0; n < 100; ++n) {; auto c = new TCanvas(TString::Format(""canvas%d"", n), ""Canvas with histogram"");; ; auto h1 = new TH1I(TString::Format(""hist%d"", n), ""Histogram with random data"", 100, -5., 5);; h1->SetDirectory(nullptr);; h1->FillRandom(""gaus"", 10000);; ; h1->Draw();; ; pads.push_back(c);; }; ; TCanvas::SaveAll(pads, ""image%03d.png""); // create 100 PNG images; ; TCanvas::SaveAll(pads, ""image.svg""); // create 100 SVG images, %d pattern will be automatically append; ; TCanvas::SaveAll(pads, ""images.root""); // create single ROOT file with all canvases; ; TCanvas::SaveAll(); // save all existing canvases in allcanvases.pdf file; }; c#define c(i)Definition RSha256.hxx:101; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; gROOT#define gROOTDefinition TROOT.h:406; TCanvasThe Canvas class.Definition TCanvas.h:23; TCanvas::SaveAllstatic Bool_t SaveAll(const std::vector< TPad * > &={}, const char *filename="""", Option_t *option="""")Save provided pads/canvases into the image file(s) Filename can include printf argument for image num...Definition TCanvas.cxx:2654; TH1I1-D histogram with an int per channel (see TH1 documentation)Definition TH1.h:540; TH1::SetDirectoryvirtual void SetDirectory(TDirectory *dir)By default, when a histogram is created, it is added to the list of histogram objects in the current ...Definition TH1.cxx:8937; TH1::FillRandomvirtual void FillRandom(const char *fnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/saveall_8C.html:83,Guid,Guide,83,doc/master/saveall_8C.html,https://root.cern,https://root.cern/doc/master/saveall_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/schroedinger_hydrogen.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. schroedinger_hydrogen.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Plot the Amplitude of a Hydrogen Atom. ; Visualize the Amplitude of a Hydrogen Atom in the n = 2, l = 0, m = 0 state. Demonstrates how TH2F can be used in Quantum Mechanics.; The formula for Hydrogen in this energy state is \( \psi_{200} = \frac{1}{4\sqrt{2\pi}a_0 ^{\frac{3}{2}}}(2-\frac{\sqrt{x^2+y^2}}{a_0})e^{-\frac{\sqrt{x^2+y^2}}{2a_0}} \). ; #include <cmath>; ; double WaveFunction(double x, double y) {; double r = sqrt(x *x + y*y);; ; double w = (1/pow((4*sqrt(2*TMath::Pi())* 1), 1.5)) * (2 - (r / 1)*pow(TMath::E(), (-1 * r)/2)); // Wavefunction formula for psi 2,0,0; ; return w*w; // Amplitude; ; }; ; void schroedinger_hydrogen() {; TH2F *h2D = new TH2F(""Hydrogen Atom"",; ""Hydrogen in n = 2, l = 0, m = 0 state; Position in x direction; Position in y direction"",; 200, -10, 10, 200, -10, 10);; ; for (float i = -10; i < 10; i += 0.01) {; for (float j = -10; j < 10; j += 0.01) {; h2D->Fill(i, j, WaveFunction(i, j));; }; }; ; gStyle->SetPalette(kCividis);; gStyle->SetOptStat(0);; ; TCanvas *c1 = new TCanvas(""c1"", ""Schroedinger's Hydrogen Atom"", 750, 1500);; c1->Divide(1, 2);; ; auto c1_1 = c1->cd(1);; c1_1->SetRightMargin(0.14);; h2D->GetXaxis()->SetLabelSize(0.03);; h2D->GetYaxis()->SetLabelSize(0.03);; h2D->GetZaxis()->SetLabelSize(0.03);; h2D->SetContour(50);; h2D->Draw(""colz"");; ; TLatex *l = new TLatex(-10, -12.43, ""The Electron is more likely to be found in the yellow areas and less likely to be found in the blue areas."");; l->SetTextFont(42);; l->SetTextSize(0.02);; l->Draw();; ; auto c1_2 = c1->cd(2);; c1_2->SetTheta(42.);; ; TH2D *h2Dc = (TH2D*)h2D->Clone();; h2Dc->SetTitle(""3D view of probability amplitude;;"");; h2Dc->Draw(""surf2"");; }; kCividis@ kCividisDefinition TColor.h:136; wwinID wDefinition TGWin32VirtualGLProxy.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/schroedinger__hydrogen_8C.html:97,Guid,Guide,97,doc/master/schroedinger__hydrogen_8C.html,https://root.cern,https://root.cern/doc/master/schroedinger__hydrogen_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/tmathtext.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tmathtext.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro draws various formula in a canvas. ; It also prints the canvas as a Postscript file using TMathText. ; {; TCanvas *c1 = new TCanvas(""c1"");; ; TMathText l;; l.SetTextAlign(23);; l.SetTextSize(0.06);; l.DrawMathText(0.50, 1.000, ""\\prod_{j\\ge0} \\left(\\sum_{k\\ge0} a_{jk}z^k\\right) = \\sum_{n\\ge0} z^n \\left(\\sum_{k_0,k_1,\\ldots\\ge0\\atop k_0+k_1+\\cdots=n} a_{0k_0}a_{1k_1} \\cdots \\right)"");; l.DrawMathText(0.50, 0.800, ""W_{\\delta_1\\rho_1\\sigma_2}^{3\\beta} = U_{\\delta_1\\rho_1\\sigma_2}^{3\\beta} + {1\\over 8\\pi^2} \\int_{\\alpha_1}^{\\alpha_2} d\\alpha_2^\\prime \\left[ {U_{\\delta_1\\rho_1}^{2\\beta} - \\alpha_2^\\prime U_{\\rho_1\\sigma_2}^{1\\beta} \\over U_{\\rho_1\\sigma_2}^{0\\beta}} \\right]"");; l.DrawMathText(0.50, 0.600, ""d\\Gamma = {1\\over 2m_A} \\left( \\prod_f {d^3p_f\\over (2\\pi)^3} {1\\over 2E_f} \\right) \\left| \\mathscr{M} \\left(m_A - \\left\\{p_f\\right\\} \\right) \\right|^2 (2\\pi)^4 \\delta^{(4)} \\left(p_A - \\sum p_f \\right)"");; l.DrawMathText(0.50, 0.425, ""4\\mathrm{Re}\\left\\{{2\\over 1-\\Delta\\alpha} \\chi(s) \\left[ \\^{g}_\\nu^e \\^{g}_\\nu^f (1 + \\cos^2\\theta) + \\^{g}_a^e \\^{g}_a^f \\cos\\theta \\right] \\right\\}"");; l.DrawMathText(0.50, 0.330, ""p(n) = {1\\over\\pi\\sqrt{2}} \\sum_{k = 1}^\\infty \\sqrt{k} A_k(n) {d\\over dn} {\\sinh \\left\\{ {\\pi\\over k} \\sqrt{2\\over 3} \\sqrt{n - {1\\over 24}} \\right\\} \\over \\sqrt{n - {1\\over 24}}}"");; l.DrawMathText(0.13, 0.150, ""{(\\ell+1)C_{\\ell}^{TE} \\over 2\\pi}"");; l.DrawMathText(0.27, 0.110, ""\\mathbb{N} \\subset \\mathbb{R}"");; l.DrawMathText(0.63, 0.100, ""\\hbox{RHIC スピン物理 Нью-Йорк}"");; ; c1->Print(""c1.png"");; c1->Print(""c1.ps"");; ; return c1;; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TLine::Printvoid Print(Option_t *option=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmathtext_8C.html:85,Guid,Guide,85,doc/master/tmathtext_8C.html,https://root.cern,https://root.cern/doc/master/tmathtext_8C.html,1,['Guid'],['Guide']
Usability,. ROOT: tutorials/graphics/tmathtext2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tmathtext2.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro draw all possible symbols provided by TMathtext. . AuthorOlivier Couet ; Definition in file tmathtext2.C. tutorialsgraphicstmathtext2.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmathtext2_8C.html:86,Guid,Guide,86,doc/master/tmathtext2_8C.html,https://root.cern,https://root.cern/doc/master/tmathtext2_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/tornado.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tornado.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Show 3-d polymarker. . ; void tornado() {; gBenchmark->Start(""tornado"");; ; double PI = 3.141592653;; int d = 16;; int numberOfPoints=200;; int numberOfCircles=40;; ; // create and open a canvas; TCanvas *sky = new TCanvas( ""sky"", ""Tornado"", 300, 10, 700, 500 );; sky->SetFillColor(14);; ; // creating view; TView *view = TView::CreateView(1,0,0);; float range = numberOfCircles*d;; view->SetRange( 0, 0, 0, 4.0*range, 2.0*range, range );; ; for( int j = d; j < numberOfCircles*d; j += d ) {; ; // create a PolyMarker3D; TPolyMarker3D *pm3d = new TPolyMarker3D( numberOfPoints );; ; float x, y, z;; ; // set points; for( int i = 1; i < numberOfPoints; i++ ) {; float csin = sin(2*PI / (double)numberOfPoints * (double)i) + 1;; float ccos = cos(2*PI / (double)numberOfPoints * (double)i) + 1;; float esin = sin(2*PI / (double)(numberOfCircles*d) * (double)j) + 1;; x = j * ( csin + esin );; y = j * ccos;; z = j;; pm3d->SetPoint( i, x, y, z );; }; ; // set marker size, color & style; pm3d->SetMarkerSize( 1 );; pm3d->SetMarkerColor( 2 + ( d == ( j & d ) ) );; pm3d->SetMarkerStyle( 3 );; ; //draw; pm3d->Draw();; }; ; char timeStr[60];; gBenchmark->Show(""tornado"");; ; Float_t ct = gBenchmark->GetCpuTime(""tornado"");; sprintf( timeStr, ""Execution time: %g sec."", ct);; ; TPaveText *text = new TPaveText( 0.1, 0.81, 0.9, 0.97 );; text->SetFillColor( 42 );; text->AddText(""ROOT example: tornado.C"");; text->AddText(timeStr);; text->Draw();; sky->Update();; }; d#define d(i)Definition RSha256.hxx:102; Float_tfloat Float_tDefinition RtypesCore.h:57; PI#define PIDefinition SpecFuncMathCore.cxx:23; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; textOption_t Option_t TPoint TPoint const char textDefinition TGWin32VirtualXProxy.cxx:68; TAttFill::SetFillColorvirtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tornado_8C.html:83,Guid,Guide,83,doc/master/tornado_8C.html,https://root.cern,https://root.cern/doc/master/tornado_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/transparency.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. transparency.C File ReferenceTutorials » Graphics tutorials. Detailed Description; This macro demonstrates the use of color transparency. ; It is done by specifying the alpha value of a given color. For instance; ellipse->SetFillColorAlpha(9, 0.571);; changes the ellipse fill color to the index 9 with an alpha value of 0.571. 0. would be fully transparent (invisible) and 1. completely opaque (the default).; The transparency is available on all platforms when the flag OpenGL.CanvasPreferGL is set to 1 in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. X11 does not support transparency. On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. ; void transparency(); {; auto c1 = new TCanvas(""c1"", ""c1"",224,330,700,527);; c1->Range(-0.125,-0.125,1.125,1.125);; ; auto tex = new TLatex(0.06303724,0.0194223,""This text is opaque and this line is transparent"");; tex->SetLineWidth(2);; tex->Draw();; ; auto arrow = new TArrow(0.5555158,0.07171314,0.8939828,0.6195219,0.05,""|>"");; arrow->SetLineWidth(4);; arrow->SetAngle(30);; arrow->Draw();; ; // Draw a transparent graph.; Double_t x[10] = {; 0.5232808, 0.8724928, 0.9280086, 0.7059456, 0.7399714,; 0.4659742, 0.8241404, 0.4838825, 0.7936963, 0.743553};; Double_t y[10] = {; 0.7290837, 0.9631474, 0.4775896, 0.6494024, 0.3555777,; 0.622012, 0.7938247, 0.9482072, 0.3904382, 0.2410359};; auto graph = new TGraph(10,x,y);; graph->SetLineColorAlpha(46, 0.1);; graph->SetLineWidth(7);; graph->Draw(""l"");; ; // Draw an ellipse with opaque colors.; auto ellipse = new TEllipse(0.1740688,0.8352632,0.1518625,0.1010526,0,360,0);; ellipse->SetFillColor(30);; ellipse->SetLineColor(51);; ellipse->SetLineWidth(3);; ellipse->Draw();; ; // Draw an ellipse with transparent colors, above the previous one.; ellipse = new TEllipse(0.2985315,0.7092105,0.1566977,0.1868421,0,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/transparency_8C.html:88,Guid,Guide,88,doc/master/transparency_8C.html,https://root.cern,https://root.cern/doc/master/transparency_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphics/triangles.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. triangles.C File ReferenceTutorials » Graphics tutorials. Detailed Description; Create small triangles at random positions on the canvas. ; Assign a unique ID to each triangle, and give each one a random color from the color palette.; root > .x triangles.C; When a triangle is clicked, a message displaying its unique number and color will be printed. ; void triangles(int ntriangles=50); {; auto c1 = new TCanvas(""c1"",""triangles"",10,10,700,700);; gStyle->SetPalette(kCMYK);; TRandom r;; double dx = 0.2; double dy = 0.2;; int ncolors = TColor::GetNumberOfColors();; double x[4],y[4];; for (int i=0;i<ntriangles;i++) {; x[0] = r.Uniform(.05,.95); y[0] = r.Uniform(.05,.95);; x[1] = x[0] + dx*r.Rndm(); y[1] = y[0] + dy*r.Rndm();; x[2] = x[1] - dx*r.Rndm(); y[2] = y[1] - dy*r.Rndm();; x[3] = x[0]; y[3] = y[0];; auto pl = new TPolyLine(4,x,y);; pl->SetUniqueID(i);; int ci = ncolors*r.Rndm();; TColor *c = gROOT->GetColor(TColor::GetColorPalette(ci));; c->SetAlpha(r.Rndm());; pl->SetFillColor(c->GetNumber());; pl->Draw(""f"");; }; c1->AddExec(""ex"",""TriangleClicked()"");; }; ; void TriangleClicked(); {; //this action function is called whenever you move the mouse; //it just prints the id of the picked triangle; //you can add graphics actions instead; int event = gPad->GetEvent();; if (event != 11) return; //may be comment this line; TObject *select = gPad->GetSelected();; if (!select) return;; if (select->InheritsFrom(TPolyLine::Class())) {; TPolyLine *pl = (TPolyLine*)select;; printf(""You have clicked triangle %d, color=%d\n"",; pl->GetUniqueID(),pl->GetFillColor());; }; }; c#define c(i)Definition RSha256.hxx:101; kCMYK@ kCMYKDefinition TColor.h:123; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Fl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/triangles_8C.html:85,Guid,Guide,85,doc/master/triangles_8C.html,https://root.cern,https://root.cern/doc/master/triangles_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphs Directory Reference. Directory dependency graph for graphs:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Files;  annotation3d.C;   This example show how to put some annotation on a 3D plot using 3D polylines. ;  ;  approx.C;   Macro to test interpolation function Approx ;  ;  bent.C;   Bent error bars ;  ;  bent.py;   Bent error bars. ;  ;  exclusiongraph.C;   Draw three graphs with an exclusion zone. ;  ;  exclusiongraph2.C;   Draw several graphs with an exclusion zones. ;  ;  gerrors.C;   Draw a graph with error bars ;  ;  gerrors2.C;   Draw two graphs with error bars ;  ;  gmultierrors.C;   Draw a graph with multiple y errors ;  ;  graph.C;   Draw a simple graph. ;  ;  graph2derrorsfit.C;   Draw and fit a TGraph2DErrors ;  ;  graphApply.C;   A macro to demonstrate the functionality of TGraph::Apply() method. ;  ;  graphpalettecolor.C;   Palette coloring for graphs is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color). ;  ;  graphpolar.C;   Create and draw a polar graph. ;  ;  graphpolar2.C;   Create and draw a polar graph with PI axis ;  ;  graphpolar3.C;   Create and draw a polar graph with PI axis using a TF1. ;  ;  graphreverse.C;   This example test all the various case of reverse graphs combined with logarithmic scale. ;  ;  graphShade.C;   Show how to shade an area between two graphs ;  ;  graphstruct.C;   Draw a simple graph structure. ;  ;  graphtext.C;   Draw a graph with text attached to each point. ;  ;  gtime.C;   Example of TGraphTime. ;  ;  gtime2.C;   Example of TGraphTime showing how the class could be used to visualize a set of particles with their time stamp in a MonteCarlo program. ;  ;  hlGraph1.C;  This tutorial demonstrates how to use the highlight mode on graph. ;  ;  hlGraph2.C;  This tutorial demonstrates ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_21ec31480a793facd4ea3dd8f2d42294.html:76,Guid,Guide,76,doc/master/dir_21ec31480a793facd4ea3dd8f2d42294.html,https://root.cern,https://root.cern/doc/master/dir_21ec31480a793facd4ea3dd8f2d42294.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/graphs/annotation3d.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. annotation3d.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This example show how to put some annotation on a 3D plot using 3D polylines. ; It also demonstrates how the axis labels can be modified. It was created for the book: Statistical Methods for Data Analysis in Particle Physics . ; void annotation3d(); {; auto c = new TCanvas(""c"", ""c"", 600, 600);; c->SetTheta(30);; c->SetPhi(50);; gStyle->SetOptStat(0);; gStyle->SetHistTopMargin(0);; gStyle->SetOptTitle(kFALSE);; ; // Define and draw a surface; auto f = new TF2(""f"", ""[0]*cos(x)*cos(y)"", -1, 1, -1, 1);; f->SetParameter(0, 1);; double s = 1./f->Integral(-1, 1, -1, 1);; f->SetParameter(0, s);; f->SetNpx(50);; f->SetNpy(50);; ; f->GetXaxis()->SetTitle(""x"");; f->GetXaxis()->SetTitleOffset(1.4);; f->GetXaxis()->SetTitleSize(0.04);; f->GetXaxis()->CenterTitle();; f->GetXaxis()->SetNdivisions(505);; f->GetXaxis()->SetTitleOffset(1.3);; f->GetXaxis()->SetLabelSize(0.03);; f->GetXaxis()->ChangeLabelByValue(-0.5,-1,-1,-1,kRed,-1,""X_{0}"");; ; f->GetYaxis()->SetTitle(""y"");; f->GetYaxis()->CenterTitle();; f->GetYaxis()->SetTitleOffset(1.4);; f->GetYaxis()->SetTitleSize(0.04);; f->GetYaxis()->SetTitleOffset(1.3);; f->GetYaxis()->SetNdivisions(505);; f->GetYaxis()->SetLabelSize(0.03);; ; f->GetZaxis()->SetTitle(""dP/dx"");; f->GetZaxis()->CenterTitle();; f->GetZaxis()->SetTitleOffset(1.3);; f->GetZaxis()->SetNdivisions(505);; f->GetZaxis()->SetTitleSize(0.04);; f->GetZaxis()->SetLabelSize(0.03);; ; f->SetLineWidth(1);; f->SetLineColorAlpha(kAzure-2, 0.3);; ; f->Draw(""surf1 fb"");; ; // Lines for 3D annotation; double x[11] = {-0.500, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.500};; double y[11] = {-0.985, -0.8, -0.6, -0.4, -0.2, 0.0, 0.2, 0.4, 0.6, 0.8, 0.985};; double z[11];; for (int i = 0; i < 11; ++i) z[i] = s*cos(x[i])*cos(y[i]);; auto g2 = new TPolyLine3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/annotation3d_8C.html:86,Guid,Guide,86,doc/master/annotation3d_8C.html,https://root.cern,https://root.cern/doc/master/annotation3d_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/approx.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. approx.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Macro to test interpolation function Approx . ; TCanvas *vC1;; TGraph *grxy, *grin, *grout;; ; void DrawSmooth(Int_t pad, const char *title, const char *xt, const char *yt); {; vC1->cd(pad);; TH1F *vFrame = gPad->DrawFrame(0,0,15,150);; vFrame->SetTitle(title);; vFrame->SetTitleSize(0.2);; vFrame->SetXTitle(xt);; vFrame->SetYTitle(yt);; grxy->SetMarkerColor(kBlue);; grxy->SetMarkerStyle(21);; grxy->SetMarkerSize(0.5);; grxy->Draw(""P"");; grin->SetMarkerColor(kRed);; grin->SetMarkerStyle(5);; grin->SetMarkerSize(0.7);; grin->Draw(""P"");; grout->DrawClone(""LP"");; }; ; void approx(); {; // Test data (square); Int_t n = 11;; Double_t x[] = {1,2,3,4,5,6,6,6,8,9,10};; Double_t y[] = {1,4,9,16,25,25,36,49,64,81,100};; grxy = new TGraph(n,x,y);; ; // X values, for which y values should be interpolated; Int_t nout = 14;; Double_t xout[] =; {1.2,1.7,2.5,3.2,4.4,5.2,5.7,6.5,7.6,8.3,9.7,10.4,11.3,13};; ; // Create Canvas; vC1 = new TCanvas(""vC1"",""square"",200,10,700,700);; vC1->Divide(2,2);; ; // Initialize graph with data; grin = new TGraph(n,x,y);; // Interpolate at equidistant points (use mean for tied x-values); TGraphSmooth *gs = new TGraphSmooth(""normal"");; grout = gs->Approx(grin,""linear"");; DrawSmooth(1,""Approx: ties = mean"",""X-axis"",""Y-axis"");; ; // Re-initialize graph with data; // (since graph points were set to unique vales); grin = new TGraph(n,x,y);; // Interpolate at given points xout; grout = gs->Approx(grin,""linear"", 14, xout, 0, 130);; DrawSmooth(2,""Approx: ties = mean"","""","""");; ; // Print output variables for given values xout; Int_t vNout = grout->GetN();; Double_t vXout, vYout;; for (Int_t k=0;k<vNout;k++) {; grout->GetPoint(k, vXout, vYout);; cout << ""k= "" << k << "" vXout[k]= "" << vXout; << "" vYout[k]= "" << vYout << endl;; }; ; // Re-initialize graph with da",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/approx_8C.html:80,Guid,Guide,80,doc/master/approx_8C.html,https://root.cern,https://root.cern/doc/master/approx_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/bent.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. bent.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Bent error bars . ; void bent() ; {; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; TGraphBentErrors *gr = new TGraphBentErrors(; n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""TGraphBentErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TGraphBentErrorsA TGraphBentErrors is a TGraph with bent, asymmetric error bars.Definition TGraphBentErrors.h:25; TGraph::Drawvoid Draw(Option_t *chopt="""") overrideDraw this graph with its current attributes.Definition TGraph.cxx:831; TGraph::SetTitlevoid SetTitle(const char *title="""") overrideChange (i.e.Definition TGraph.cxx:2397; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; grTGraphErrors * grDefinition legend1.C:25; bentDefinition bent.py:1; AuthorOlivier Couet ; Definition in file bent.C. tutorialsgraphsbent.C. ROOT master - Reference Guide Generated o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/bent_8C.html:78,Guid,Guide,78,doc/master/bent_8C.html,https://root.cern,https://root.cern/doc/master/bent_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/bent.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; bent.py File ReferenceTutorials » Graphs tutorials. Detailed Description; Bent error bars. ; Inspired from work of Olivier Couet. ; import ROOT; ; c1 = ROOT.TCanvas(); n = 10; x = ROOT.std.vector('double')(); for i in [-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95]: x.push_back(i); y = ROOT.std.vector('double')(); for i in [1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1]: y.push_back(i); exl = ROOT.std.vector('double')(); for i in [.05,.1,.07,.07,.04,.05,.06,.07,.08,.05]: exl.push_back(i); eyl = ROOT.std.vector('double')(); for i in [.8,.7,.6,.5,.4,.4,.5,.6,.7,.8]: eyl.push_back(i); exh = ROOT.std.vector('double')(); for i in [.02,.08,.05,.05,.03,.03,.04,.05,.06,.03]: exh.push_back(i); eyh = ROOT.std.vector('double')(); for i in [.6,.5,.4,.3,.2,.2,.3,.4,.5,.6]: eyh.push_back(i); exld = ROOT.std.vector('double')(); for i in [.0,.0,.0,.0,.0,.0,.0,.0,.0,.0]: exld.push_back(i); eyld = ROOT.std.vector('double')(); for i in [.0,.0,.05,.0,.0,.0,.0,.0,.0,.0]: eyld.push_back(i); exhd = ROOT.std.vector('double')(); for i in [.0,.0,.0,.0,.0,.0,.0,.0,.0,.0]: exhd.push_back(i); eyhd = ROOT.std.vector('double')(); for i in [.0,.0,.0,.0,.0,.0,.0,.0,.05,.0]: eyhd.push_back(i); ; gr = ROOT.TGraphBentErrors(; n,x.data(),y.data(),exl.data(),exh.data(),eyl.data(),eyh.data(),exld.data(),exhd.data(),eyld.data(),eyhd.data()); ; gr.SetTitle(""TGraphBentErrors Example""); gr.SetMarkerColor(4); gr.SetMarkerStyle(21); gr.Draw(""ALP""); AuthorAlberto Ferro ; Definition in file bent.py. tutorialsgraphsbent.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/bent_8py.html:79,Guid,Guide,79,doc/master/bent_8py.html,https://root.cern,https://root.cern/doc/master/bent_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/exclusiongraph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. exclusiongraph.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw three graphs with an exclusion zone. . ; TCanvas *exclusiongraph() {; TCanvas *c1 = new TCanvas(""c1"",""Exclusion graphs examples"",200,10,600,400);; c1->SetGrid();; ; TMultiGraph *mg = new TMultiGraph();; mg->SetTitle(""Exclusion graphs"");; ; const Int_t n = 35;; Double_t xvalues1[n], xvalues2[n], xvalues3[n], yvalues1[n], yvalues2[n], yvalues3[n];; for (Int_t i=0;i<n;i++) {; xvalues1[i] = i*0.1;; xvalues2[i] = xvalues1[i];; xvalues3[i] = xvalues1[i]+.5;; yvalues1[i] = 10*sin(xvalues1[i]);; yvalues2[i] = 10*cos(xvalues1[i]);; yvalues3[i] = 10*sin(xvalues1[i])-2;; }; ; TGraph *gr1 = new TGraph(n,xvalues1,yvalues1);; gr1->SetLineColor(2);; gr1->SetLineWidth(1504);; gr1->SetFillStyle(3005);; ; TGraph *gr2 = new TGraph(n,xvalues2,yvalues2);; gr2->SetLineColor(4);; gr2->SetLineWidth(-2002);; gr2->SetFillStyle(3004);; gr2->SetFillColor(9);; ; TGraph *gr3 = new TGraph(n,xvalues3,yvalues3);; gr3->SetLineColor(5);; gr3->SetLineWidth(-802);; gr3->SetFillStyle(3002);; gr3->SetFillColor(2);; ; mg->Add(gr1);; mg->Add(gr2);; mg->Add(gr3);; mg->Draw(""AC"");; ; return c1;; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TMultiGraphA TMultiG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exclusiongraph_8C.html:88,Guid,Guide,88,doc/master/exclusiongraph_8C.html,https://root.cern,https://root.cern/doc/master/exclusiongraph_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/exclusiongraph2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. exclusiongraph2.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw several graphs with an exclusion zones. . ; void exclusiongraph2(); {; TCanvas *c = new TCanvas(""c"",; ""Charged Higgs L300 Contour"",0,0,700,700);; c->SetTickx();; c->SetTicky();; c->SetGridx();; c->SetGridy();; ; TH1 *frame = new TH1F(""frame"","""",1000,50,500);; frame->SetMinimum(1);; frame->SetMaximum(50);; frame->SetDirectory(0);; frame->SetStats(0);; frame->GetXaxis()->SetTitle(""m_{A} (GeV)"");; frame->GetXaxis()->SetTickLength(0.02);; frame->GetXaxis()->SetLabelSize(0.03);; frame->GetYaxis()->SetTitle(""tan#beta"");; frame->GetYaxis()->SetMoreLogLabels();; frame->GetYaxis()->SetLabelSize(0.03);; frame->Draw("" "");; c->SetLogy();; ; TGraph *gr1 = new TGraph(10);; gr1->SetFillColor(6);; gr1->SetFillStyle(3005);; gr1->SetLineColor(6);; gr1->SetLineWidth(603);; gr1->SetPoint(0,140,0.5);; gr1->SetPoint(1,130,2.9);; gr1->SetPoint(2,124.677,3.83726);; gr1->SetPoint(3,113.362,6.06903);; gr1->SetPoint(4,108.513,8.00221);; gr1->SetPoint(5,111.746,10.0272);; gr1->SetPoint(6,119.828,12.8419);; gr1->SetPoint(7,135.991,30.0872);; gr1->SetPoint(8,140,40);; gr1->SetPoint(9,135,60);; gr1->Draw(""C"");; TLatex *tex = new TLatex(140.841,37.9762,; ""#leftarrow t #rightarrow bH^{+}, H^{+} #rightarrow #tau#nu"");; tex->SetTextColor(6);; tex->Draw();; ; TGraph *gr2 = new TGraph(15);; gr2->SetName(""Graph"");; gr2->SetTitle(""Graph"");; gr2->SetFillColor(1);; gr2->SetFillStyle(3005);; gr2->SetLineWidth(3);; gr2->SetPoint(0,499.192,3.02622);; gr2->SetPoint(1,427.748,3.06233);; gr2->SetPoint(2,358.244,3.10722);; gr2->SetPoint(3,305.711,3.24589);; gr2->SetPoint(4,244.289,3.36617);; gr2->SetPoint(5,206.304,3.7544);; gr2->SetPoint(6,178.017,4.50347);; gr2->SetPoint(7,148.114,6.20297);; gr2->SetPoint(8,131.142,8.00221);; gr2->SetPoint(9,111.746,8.48188);; gr2->SetPoint(10,102.047,9.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exclusiongraph2_8C.html:89,Guid,Guide,89,doc/master/exclusiongraph2_8C.html,https://root.cern,https://root.cern/doc/master/exclusiongraph2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/gerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gerrors.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw a graph with error bars . ; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);; ; c1->SetGrid();; c1->GetFrame()->SetBorderSize(12);; ; const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; ; c1->Update();; }; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraph::Drawvoid Draw(Option_t *chopt="""") overrideDraw this graph with its current attributes.Definition TGraph.cxx:831; TGraph::SetTitlevoid SetTitle(const char *title="""") overrideChange (i.e.Definition TGraph.cxx:2397; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; eyDouble_t ey[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; grTGraphErrors * grDefinition legend1.C:25; exDouble_t ex[n]Definition legend1.C:17; gerrorsDefinition gerrors.py:1; AuthorRene Brun ; Definition in file gerrors.C. tutorialsgraphsgerrors.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gerrors_8C.html:81,Guid,Guide,81,doc/master/gerrors_8C.html,https://root.cern,https://root.cern/doc/master/gerrors_8C.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/graphs/gerrors2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gerrors2.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw two graphs with error bars . ; void gerrors2() {; TCanvas *c1 = new TCanvas(""c1"",""gerrors2"",200,10,700,500);; c1->SetGrid();; ; // draw a frame to define the range; TH1F *hr = c1->DrawFrame(-0.4,0,1.2,12);; hr->SetXTitle(""X title"");; hr->SetYTitle(""Y title"");; c1->GetFrame()->SetBorderSize(12);; ; // create first graph; const Int_t n1 = 10;; Double_t xval1[] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t yval1[] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t ex1[] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t ey1[] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr1 = new TGraphErrors(n1,xval1,yval1,ex1,ey1);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(21);; gr1->Draw(""LP"");; ; // create second graph; const Int_t n2 = 10;; Float_t xval2[] = {-0.28, 0.005, 0.19, 0.29, 0.45, 0.56,0.65,0.80,0.90,1.01};; Float_t yval2[] = {0.82,3.86,7,9,10,10.55,9.64,7.26,5.42,2};; Float_t ex2[] = {.04,.12,.08,.06,.05,.04,.07,.06,.08,.04};; Float_t ey2[] = {.6,.8,.7,.4,.3,.3,.4,.5,.6,.7};; TGraphErrors *gr2 = new TGraphErrors(n2,xval2,yval2,ex2,ey2);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(20);; gr2->Draw(""LP"");; }; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraph::Drawvoid Draw(Option_t *chopt=""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gerrors2_8C.html:82,Guid,Guide,82,doc/master/gerrors2_8C.html,https://root.cern,https://root.cern/doc/master/gerrors2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/gmultierrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gmultierrors.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw a graph with multiple y errors . ; void gmultierrors() {; TCanvas *c1 = new TCanvas(""c1"", ""A Simple Graph with multiple y-errors"", 200, 10, 700, 500);; c1->SetGrid();; c1->GetFrame()->SetBorderSize(12);; ; const Int_t np = 5;; Double_t x[np] = {0, 1, 2, 3, 4};; Double_t y[np] = {0, 2, 4, 1, 3};; Double_t exl[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; Double_t exh[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; Double_t eylstat[np] = {1, 0.5, 1, 0.5, 1};; Double_t eyhstat[np] = {0.5, 1, 0.5, 1, 0.5};; Double_t eylsys[np] = {0.5, 0.4, 0.8, 0.3, 1.2};; Double_t eyhsys[np] = {0.6, 0.7, 0.6, 0.4, 0.8};; ; TGraphMultiErrors* gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", np, x, y, exl, exh, eylstat, eyhstat);; gme->AddYError(np, eylsys, eyhsys);; gme->SetMarkerStyle(20);; gme->SetLineColor(kRed);; gme->GetAttLine(0)->SetLineColor(kRed);; gme->GetAttLine(1)->SetLineColor(kBlue);; gme->GetAttFill(1)->SetFillStyle(0);; ; // Graph and x erros drawn with ""APS""; // Stat Errors drawn with ""Z""; // Sys Errors drawn with ""5 s=0.5""; gme->Draw(""APS ; Z ; 5 s=0.5"");; ; c1->Update();; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; npOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t npDefinition TGWin32VirtualXProx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gmultierrors_8C.html:86,Guid,Guide,86,doc/master/gmultierrors_8C.html,https://root.cern,https://root.cern/doc/master/gmultierrors_8C.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/graphs/graph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw a simple graph. . ; void graph() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph Example"",200,10,700,500);; ; c1->SetGrid();; ; const Int_t n = 20;; Double_t x[n], y[n];; for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 10*sin(x[i]+0.2);; printf("" i %i %f %f \n"",i,x[i],y[i]);; }; TGraph *gr = new TGraph(n,x,y);; gr->SetLineColor(2);; gr->SetLineWidth(4);; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->SetTitle(""a simple graph"");; gr->GetXaxis()->SetTitle(""X title"");; gr->GetYaxis()->SetTitle(""Y title"");; gr->Draw(""ACP"");; ; // TCanvas::Update() draws the frame, after which one can change it; c1->Update();; c1->GetFrame()->SetBorderSize(12);; c1->Modified();; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::Drawvoid Draw(Option_t *chopt="""") overrideDraw this graph with its current attributes.Definition TGraph.cxx:831; TGraph::GetXaxisTAxis * GetXaxis() constGet x axis of the graph.Definition TGraph.cxx:1566; TGraph::GetYaxisTAxis * GetYaxis() constGet y axis of the graph.Definition TGraph.cxx:1575; TGraph::SetTitlevoid SetTitle(const char *title="""") overrideChange (i.e.Definition TGraph.cxx:2397; TNamed::SetTit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph_8C.html:79,Guid,Guide,79,doc/master/graph_8C.html,https://root.cern,https://root.cern/doc/master/graph_8C.html,4,"['Guid', 'Simpl', 'simpl']","['Guide', 'Simple', 'simple']"
Usability,". ROOT: tutorials/graphs/graph2derrorsfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph2derrorsfit.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw and fit a TGraph2DErrors . ; #include <TMath.h>; #include <TGraph2DErrors.h>; #include <TRandom.h>; #include <TStyle.h>; #include <TCanvas.h>; #include <TF2.h>; ; void graph2derrorsfit(); {; TCanvas *c1 = new TCanvas(""c1"");; ; Double_t rnd, x, y, z, ex, ey, ez;; Double_t e = 0.3;; Int_t nd = 500;; ; TRandom r;; TF2 *f2 = new TF2(""f2"",""1000*(([0]*sin(x)/x)*([1]*sin(y)/y))+200"",-6,6,-6,6);; f2->SetParameters(1,1);; TGraph2DErrors *dte = new TGraph2DErrors(nd);; ; // Fill the 2D graph; Double_t zmax = 0;; for (Int_t i=0; i<nd; i++) {; f2->GetRandom2(x,y);; rnd = r.Uniform(-e,e); // Generate a random number in [-e,e]; z = f2->Eval(x,y)*(1+rnd);; if (z>zmax) zmax = z;; dte->SetPoint(i,x,y,z);; ex = 0.05*r.Rndm();; ey = 0.05*r.Rndm();; ez = TMath::Abs(z*rnd);; dte->SetPointError(i,ex,ey,ez);; }; ; f2->SetParameters(0.5,1.5);; dte->Fit(f2);; TF2 *fit2 = (TF2*)dte->FindObject(""f2"");; fit2->SetTitle(""Minuit fit result on the Graph2DErrors points"");; fit2->SetMaximum(zmax);; gStyle->SetHistTopMargin(0);; fit2->SetLineColor(1);; fit2->SetLineWidth(1);; fit2->Draw(""surf1"");; dte->Draw(""same p0"");; }; e#define e(i)Definition RSha256.hxx:103; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvas.h; TF2.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TGraph2DErrors.h; TMath.h; TRandom.h; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph2derrorsfit_8C.html:90,Guid,Guide,90,doc/master/graph2derrorsfit_8C.html,https://root.cern,https://root.cern/doc/master/graph2derrorsfit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/graph2derrorsfit.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph2derrorsfit.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_graphs; 3/// \notebook; 4/// Draw and fit a TGraph2DErrors; 5///; 6/// \macro_image; 7/// \macro_code; 8///; 9/// \author Olivier Couet; 10 ; 11#include <TMath.h>; 12#include <TGraph2DErrors.h>; 13#include <TRandom.h>; 14#include <TStyle.h>; 15#include <TCanvas.h>; 16#include <TF2.h>; 17 ; 18void graph2derrorsfit(); 19{; 20 TCanvas *c1 = new TCanvas(""c1"");; 21 ; 22 Double_t rnd, x, y, z, ex, ey, ez;; 23 Double_t e = 0.3;; 24 Int_t nd = 500;; 25 ; 26 TRandom r;; 27 TF2 *f2 = new TF2(""f2"",""1000*(([0]*sin(x)/x)*([1]*sin(y)/y))+200"",-6,6,-6,6);; 28 f2->SetParameters(1,1);; 29 TGraph2DErrors *dte = new TGraph2DErrors(nd);; 30 ; 31 // Fill the 2D graph; 32 Double_t zmax = 0;; 33 for (Int_t i=0; i<nd; i++) {; 34 f2->GetRandom2(x,y);; 35 rnd = r.Uniform(-e,e); // Generate a random number in [-e,e]; 36 z = f2->Eval(x,y)*(1+rnd);; 37 if (z>zmax) zmax = z;; 38 dte->SetPoint(i,x,y,z);; 39 ex = 0.05*r.Rndm();; 40 ey = 0.05*r.Rndm();; 41 ez = TMath::Abs(z*rnd);; 42 dte->SetPointError(i,ex,ey,ez);; 43 }; 44 ; 45 f2->SetParameters(0.5,1.5);; 46 dte->Fit(f2);; 47 TF2 *fit2 = (TF2*)dte->FindObject(""f2"");; 48 fit2->SetTitle(""Minuit fit result on the Graph2DErrors points"");; 49 fit2->SetMaximum(zmax);; 50 gStyle->SetHistTopMargin(0);; 51 fit2->SetLineColor(1);; 52 fit2->SetLineWidth(1);; 53 fit2->Draw(""surf1"");; 54 dte->Draw(""same p0"");; 55}; e#define e(i)Definition RSha256.hxx:103; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvas.h; TF2.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TGraph2DErrors.h; TMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph2derrorsfit_8C_source.html:87,Guid,Guide,87,doc/master/graph2derrorsfit_8C_source.html,https://root.cern,https://root.cern/doc/master/graph2derrorsfit_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/graphApply.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphApply.C File ReferenceTutorials » Graphs tutorials. Detailed Description; A macro to demonstrate the functionality of TGraph::Apply() method. ; TGraph::Apply applies a function f to all the data TGraph points. f may be a 1-D function TF1 or 2-d function TF2. The Y values of the graph are replaced by the new values computed using the function. ; void graphApply(); {; const Int_t npoints=3;; Double_t xaxis[npoints] = {1.,2.,3.};; Double_t yaxis[npoints] = {10.,20.,30.};; Double_t errorx[npoints] = {0.5,0.5,0.5};; Double_t errory[npoints] = {5.,5.,5.};; ; Double_t exl[npoints] = {0.5,0.5,0.5};; Double_t exh[npoints] = {0.5,0.5,0.5};; Double_t eyl[npoints] = {5.,5.,5.};; Double_t eyh[npoints] = {5.,5.,5.};; ; TGraph *gr1 = new TGraph(npoints,xaxis,yaxis);; TGraphErrors *gr2 = new TGraphErrors(npoints,xaxis,yaxis,errorx,errory);; TGraphAsymmErrors *gr3 = new TGraphAsymmErrors(npoints,xaxis,yaxis,exl,exh,eyl,eyh);; TF2 *ff = new TF2(""ff"",""-1./y"");; ; TCanvas *c1 = new TCanvas(""c1"",""c1"");; c1->Divide(2,3);; ; // TGraph; c1->cd(1);; gr1->DrawClone(""A*"");; c1->cd(2);; gr1->Apply(ff);; gr1->Draw(""A*"");; ; // TGraphErrors; c1->cd(3);; gr2->DrawClone(""A*"");; c1->cd(4);; gr2->Apply(ff);; gr2->Draw(""A*"");; ; // TGraphAsymmErrors; c1->cd(5);; gr3->DrawClone(""A*"");; c1->cd(6);; gr3->Apply(ff);; gr3->Draw(""A*"");; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvasThe Canvas class.Definition TCanvas.h:23; TF2A 2-Dim function with parameters.Definition TF2.h:29; TGraphAsymmErrorsTGraph with asymmetric error bars.Definition TGraphAsymmErrors.h:26; TGraphAsymmErrors::Applyvoid Apply(TF1 *f) overrideApply a function to all data points .Definition TGraphAsymmErrors.cxx:468; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraphErrors::Applyvoid Apply(TF1 *f) overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphApply_8C.html:84,Guid,Guide,84,doc/master/graphApply_8C.html,https://root.cern,https://root.cern/doc/master/graphApply_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/graphShade.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphShade.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Show how to shade an area between two graphs . ; void graphShade() {; TCanvas *c1 = new TCanvas(""c1"",; ""A Simple Graph Example"",200,10,700,500);; ; c1->SetGrid();; c1->DrawFrame(0,0,2.2,12);; ; const Int_t n = 20;; Double_t x[n], y[n],ymin[n], ymax[n];; Int_t i;; for (i=0;i<n;i++) {; x[i] = 0.1+i*0.1;; ymax[i] = 10*sin(x[i]+0.2);; ymin[i] = 8*sin(x[i]+0.1);; y[i] = 9*sin(x[i]+0.15);; }; TGraph *grmin = new TGraph(n,x,ymin);; TGraph *grmax = new TGraph(n,x,ymax);; TGraph *gr = new TGraph(n,x,y);; TGraph *grshade = new TGraph(2*n);; for (i=0;i<n;i++) {; grshade->SetPoint(i,x[i],ymax[i]);; grshade->SetPoint(n+i,x[n-i-1],ymin[n-i-1]);; }; grshade->SetFillStyle(3013);; grshade->SetFillColor(16);; grshade->Draw(""f"");; grmin->Draw(""l"");; grmax->Draw(""l"");; gr->SetLineWidth(4);; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""CP"");; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; yminfloat yminDefinition THbookFile.cxx:95; ymaxfloat ymaxDefinition THbookFile.cxx:95; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::SetPointvirtual void SetPoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphShade_8C.html:84,Guid,Guide,84,doc/master/graphShade_8C.html,https://root.cern,https://root.cern/doc/master/graphShade_8C.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/graphs/graphpalettecolor.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphpalettecolor.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Palette coloring for graphs is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color). ; When one of these options is given to TGraph::Draw the TGraph get its color from the current color palette defined by gStyle->SetPalette(...). The color is determined according to the number of objects having palette coloring in the current pad.; In this example five graphs are displayed with palette coloring for lines and and filled area. The graphs are drawn with curves (C option) and one can see the color of each graph is picked inside the palette kSolar. The same is visible on filled polygons in the automatically built legend. ; void graphpalettecolor () {; ; gStyle->SetOptTitle(kFALSE);; gStyle->SetPalette(kSolar);; ; double x[5] = {1,2,3,4,5};; double y1[5] = {1.0,2.0,1.0,2.5,3.0};; double y2[5] = {1.1,2.1,1.1,2.6,3.1};; double y3[5] = {1.2,2.2,1.2,2.7,3.2};; double y4[5] = {1.3,2.3,1.3,2.8,3.3};; double y5[5] = {1.4,2.4,1.4,2.9,3.4};; ; TGraph *g1 = new TGraph(5,x,y1); g1->SetTitle(""Graph with a red star"");; TGraph *g2 = new TGraph(5,x,y2); g2->SetTitle(""Graph with a circular marker"");; TGraph *g3 = new TGraph(5,x,y3); g3->SetTitle(""Graph with an open square marker"");; TGraph *g4 = new TGraph(5,x,y4); g4->SetTitle(""Graph with a blue star"");; TGraph *g5 = new TGraph(5,x,y5); g5->SetTitle(""Graph with a full square marker"");; ; g1->SetLineWidth(3); g1->SetMarkerColor(kRed);; g2->SetLineWidth(3); g2->SetMarkerStyle(kCircle);; g3->SetLineWidth(3); g3->SetMarkerStyle(kOpenSquare);; g4->SetLineWidth(3); g4->SetMarkerColor(kBlue);; g5->SetLineWidth(3); g5->SetMarkerStyle(kFullSquare);; ; g1->Draw(""CA* PLC PFC"");; g2->Draw(""PC PLC PFC"");; g3->Draw(""PC PLC PFC"");; g4->Draw(""*C PLC PFC"");; g5->Draw(""PC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphpalettecolor_8C.html:91,Guid,Guide,91,doc/master/graphpalettecolor_8C.html,https://root.cern,https://root.cern/doc/master/graphpalettecolor_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/graphpolar.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphpolar.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Create and draw a polar graph. . ; void graphpolar(); {; // Illustrates how to use TGraphPolar; ; TCanvas * CPol = new TCanvas(""CPol"",""TGraphPolar Examples"",1200,600);; CPol->Divide(2,1);; CPol->cd(1);; ; Double_t xmin=0;; Double_t xmax=TMath::Pi()*2;; ; Double_t x[1000];; Double_t y[1000];; Double_t xval1[20];; Double_t yval1[20];; ; TF1 * fplot = new TF1(""fplot"",""cos(2*x)*cos(20*x)"",xmin,xmax);; ; for (Int_t ipt = 0; ipt < 1000; ipt++){; x[ipt] = ipt*(xmax-xmin)/1000+xmin;; y[ipt] = fplot->Eval(x[ipt]);; }; ; TGraphPolar * grP = new TGraphPolar(1000,x,y);; grP->SetLineColor(2);; grP->SetLineWidth(2);; grP->SetFillStyle(3012);; grP->SetFillColor(2);; grP->Draw(""AFL"");; ; for (Int_t ipt = 0; ipt < 20; ipt++){; xval1[ipt] = x[1000/20*ipt];; yval1[ipt] = y[1000/20*ipt];; }; ; TGraphPolar * grP1 = new TGraphPolar(20,xval1,yval1);; grP1->SetMarkerStyle(29);; grP1->SetMarkerSize(2);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""CP"");; ; // Update, otherwise GetPolargram returns 0; CPol->Update();; if (grP1->GetPolargram()) {; grP1->GetPolargram()->SetTextColor(8);; grP1->GetPolargram()->SetRangePolar(-TMath::Pi(),TMath::Pi());; grP1->GetPolargram()->SetNdivPolar(703);; grP1->GetPolargram()->SetToRadian();; }; ; CPol->cd(2);; Double_t x2[30];; Double_t y2[30];; Double_t ex[30];; Double_t ey[30];; for (Int_t ipt = 0; ipt < 30; ipt++){; x2[ipt] = x[1000/30*ipt];; y2[ipt] = 1.2 + 0.4*sin(TMath::Pi()*2*ipt/30);; ex[ipt] = 0.2+0.1*cos(2*TMath::Pi()/30*ipt);; ey[ipt] = 0.2;; }; ; TGraphPolar * grPE = new TGraphPolar(30,x2,y2,ex,ey);; grPE->SetMarkerStyle(22);; grPE->SetMarkerSize(1.5);; grPE->SetMarkerColor(5);; grPE->SetLineColor(6);; grPE->SetLineWidth(2);; grPE->Draw(""EP"");; // Update, otherwise GetPolargram returns 0; CPol->Update();; ; if (grPE->G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphpolar_8C.html:84,Guid,Guide,84,doc/master/graphpolar_8C.html,https://root.cern,https://root.cern/doc/master/graphpolar_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/graphpolar2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphpolar2.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Create and draw a polar graph with PI axis . ; void graphpolar2(); {; TCanvas * CPol = new TCanvas(""CPol"",""TGraphPolar Example"",500,500);; ; Double_t theta[8];; Double_t radius[8];; Double_t etheta[8];; Double_t eradius[8];; ; for (int i=0; i<8; i++) {; theta[i] = (i+1)*(TMath::Pi()/4.);; radius[i] = (i+1)*0.05;; etheta[i] = TMath::Pi()/8.;; eradius[i] = 0.05;; }; ; TGraphPolar * grP1 = new TGraphPolar(8, theta, radius, etheta, eradius);; grP1->SetTitle("""");; ; grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(2.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(2);; grP1->SetLineWidth(3);; grP1->Draw(""PE"");; ; CPol->Update();; ; if (grP1->GetPolargram()); grP1->GetPolargram()->SetToRadian();; }; Double_tdouble Double_tDefinition RtypesCore.h:59; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TAttMarker::SetMarkerSizevirtual void SetMarkerSize(Size_t msize=1)Set the marker size.Definition TAttMarker.h:45; TCanvasThe Canvas class.Definition TCanvas.h:23; TCanvas::Updatevoid Update() overrideUpdate canvas pad buffers.Definition TCanvas.cxx:2489; TGraphPolarTo draw a polar graph.Definition TGraphPolar.h:23; TGraphPolar::GetPolargramTGraphPolargram * GetPolargram()Definition TGraphPolar.h:39; TGraphPolar::Drawvoid Draw(Option_t *options="""") overrideDraw TGraphPolar.Definition TGraphPolar.cxx:100; TGraphPolargram::SetToRadianvoid SetToRadian()The Polar circle is l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphpolar2_8C.html:85,Guid,Guide,85,doc/master/graphpolar2_8C.html,https://root.cern,https://root.cern/doc/master/graphpolar2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/graphpolar3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphpolar3.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Create and draw a polar graph with PI axis using a TF1. . ; void graphpolar3(); {; TCanvas *CPol = new TCanvas(""CPol"",""TGraphPolar Examples"",500,500);; ; Double_t rmin = 0;; Double_t rmax = TMath::Pi()*2;; Double_t r[1000];; Double_t theta[1000];; ; TF1 *fp1 = new TF1(""fplot"",""cos(x)"",rmin,rmax);; for (Int_t ipt = 0; ipt < 1000; ipt++) {; r[ipt] = ipt*(rmax-rmin)/1000+rmin;; theta[ipt] = fp1->Eval(r[ipt]);; }; ; TGraphPolar *grP1 = new TGraphPolar(1000, r, theta);; grP1->SetTitle("""");; grP1->SetLineColor(2);; grP1->Draw(""AOL"");; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TF1::Evalvirtual Double_t Eval(Double_t x, Double_t y=0, Double_t z=0, Double_t t=0) constEvaluate this function.Definition TF1.cxx:1439; TGraphPolarTo draw a polar graph.Definition TGraphPolar.h:23; TGraphPolar::Drawvoid Draw(Option_t *options="""") overrideDraw TGraphPolar.Definition TGraphPolar.cxx:100; TGraph::SetTitlevoid SetTitle(const char *title="""") overrideChange (i.e.Definition TGraph.cxx:2397; TMath::Piconstexpr Double_t Pi()Definition TMath.h:37; AuthorOlivier Couet ; Definition in file graphpolar3.C. tutorialsgraphsgraphpolar3.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphpolar3_8C.html:85,Guid,Guide,85,doc/master/graphpolar3_8C.html,https://root.cern,https://root.cern/doc/master/graphpolar3_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/graphreverse.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphreverse.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This example test all the various case of reverse graphs combined with logarithmic scale. . ; void graphreverse() {; auto c = new TCanvas(""c"",""Reversed graphs"",0,0,900,900);; c->Divide(3,3);; ; // TGraphErrors; auto graphe = new TGraphErrors();; graphe->GetXaxis()->SetNdivisions(514);; graphe->GetYaxis()->SetNdivisions(514);; graphe->SetMarkerStyle(kCircle);; graphe->SetPoint(0,5,5);; graphe->SetPointError(0,1,3);; graphe->SetPoint(1,9,9);; graphe->SetPointError(1,1,3);; ; c->cd(1);; gPad->SetGrid();; graphe->Draw(""a pl "");; ; c->cd(2);; gPad->SetGrid();; graphe->Draw(""a pl rx ry "");; ; c->cd(3);; gPad->SetGrid();; gPad->SetLogx();; gPad->SetLogy();; graphe->GetXaxis()->SetMoreLogLabels();; graphe->GetYaxis()->SetMoreLogLabels();; graphe->Draw(""a pl rx ry"");; ; // TGraphAsymmErrors; auto graphae = new TGraphAsymmErrors();; graphae->GetXaxis()->SetNdivisions(514);; graphae->GetYaxis()->SetNdivisions(514);; graphae->SetMarkerStyle(kCircle);; graphae->SetPoint(0,5,5);; graphae->SetPointError(0,1,3,3,1);; graphae->SetPoint(1,9,9);; graphae->SetPointError(1,1,3,1,3);; ; c->cd(4);; gPad->SetGrid();; graphae->Draw(""a pl "");; ; c->cd(5);; gPad->SetGrid();; graphae->Draw(""a pl rx ry "");; ; c->cd(6);; gPad->SetGrid();; gPad->SetLogx();; gPad->SetLogy();; graphae->GetXaxis()->SetMoreLogLabels();; graphae->GetYaxis()->SetMoreLogLabels();; graphae->Draw(""a pl rx ry"");; ; // TGraphBentErrors; auto graphbe = new TGraphBentErrors();; graphbe->GetXaxis()->SetNdivisions(514);; graphbe->GetYaxis()->SetNdivisions(514);; graphbe->SetMarkerStyle(kCircle);; graphbe->SetPoint(0,5,5);; graphbe->SetPointError(0,1,3,3,1,.5,.2,.5,.2);; graphbe->SetPoint(1,9,9);; graphbe->SetPointError(1,1,3,1,3,-.5,-.2,-.5,-.2);; ; c->cd(7);; gPad->SetGrid();; graphbe->Draw(""a pl "");; ; c->cd(8);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphreverse_8C.html:86,Guid,Guide,86,doc/master/graphreverse_8C.html,https://root.cern,https://root.cern/doc/master/graphreverse_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/graphstruct.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphstruct.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw a simple graph structure. ; The graph layout is made using graphviz. This macro creates some nodes and edges and change a few graphical attributes on some of them. ; TCanvas* graphstruct(); {; #if __has_include(""TGraphStruct.h"") // handy check on whether gviz was installed; TGraphStruct *gs = new TGraphStruct();; ; // create some nodes and put them in the graph in one go ...; TGraphNode *n0 = gs->AddNode(""n0"",""Node 0"");; TGraphNode *n1 = gs->AddNode(""n1"",""First node"");; TGraphNode *n2 = gs->AddNode(""n2"",""Second node"");; TGraphNode *n3 = gs->AddNode(""n3"",""Third node"");; TGraphNode *n4 = gs->AddNode(""n4"",""Fourth node"");; TGraphNode *n5 = gs->AddNode(""n5"",""5th node"");; TGraphNode *n6 = gs->AddNode(""n6"",""Node number six"");; TGraphNode *n7 = gs->AddNode(""n7"",""Node 7"");; TGraphNode *n8 = gs->AddNode(""n8"",""Node 8"");; TGraphNode *n9 = gs->AddNode(""n9"",""Node 9"");; ; n4->SetTextSize(0.03);; n6->SetTextSize(0.03);; n2->SetTextSize(0.04);; ; n3->SetTextFont(132);; ; n0->SetTextColor(kRed);; ; n9->SetFillColor(kRed-10);; n0->SetFillColor(kYellow-9);; n7->SetFillColor(kViolet-9);; ; // some edges ...; gs->AddEdge(n0,n1)->SetLineColor(kRed);; TGraphEdge *e06 = gs->AddEdge(n0,n6);; e06->SetLineColor(kRed-3);; e06->SetLineWidth(4);; gs->AddEdge(n1,n7);; gs->AddEdge(n4,n6);; gs->AddEdge(n3,n9);; gs->AddEdge(n6,n8);; gs->AddEdge(n7,n2);; gs->AddEdge(n8,n3);; gs->AddEdge(n2,n3);; gs->AddEdge(n9,n0);; gs->AddEdge(n1,n4);; gs->AddEdge(n1,n6);; gs->AddEdge(n2,n5);; gs->AddEdge(n3,n6);; gs->AddEdge(n4,n5);; ; TCanvas *c = new TCanvas(""c"",""c"",800,600);; c->SetFillColor(38);; gs->Draw();; return c;; #else; return new TCanvas(""c"",""c"",800,600);; #endif; }; c#define c(i)Definition RSha256.hxx:101; kRed@ kRedDefinition Rtypes.h:66; kYellow@ kYellowDefinition Rtypes.h:66; kViolet@",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphstruct_8C.html:85,Guid,Guide,85,doc/master/graphstruct_8C.html,https://root.cern,https://root.cern/doc/master/graphstruct_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/graphs/graphtext.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graphtext.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw a graph with text attached to each point. ; The text is drawn in a TExec function attached to the TGraph, therefore if the a graph's point is moved interactively, the text will be automatically updated. ; void graphtext() {; TCanvas *c = new TCanvas(""c"",""A Simple Graph Example with Text"",700,500);; c->SetGrid();; ; const Int_t n = 10;; auto gr = new TGraph(n);; gr->SetTitle(""A Simple Graph Example with Text"");; gr->SetMarkerStyle(20);; auto ex = new TExec(""ex"",""drawtext();"");; gr->GetListOfFunctions()->Add(ex);; ; Double_t x, y;; for (Int_t i=0;i<n;i++) {; x = i*0.1;; y = 10*sin(x+0.2);; gr->SetPoint(i,x,y);; ; }; gr->Draw(""ALP"");; }; ; void drawtext(); {; Int_t i,n;; Double_t x,y;; TLatex l;; ; l.SetTextSize(0.025);; l.SetTextFont(42);; l.SetTextAlign(21);; l.SetTextColor(kBlue);; ; auto g = (TGraph*)gPad->GetListOfPrimitives()->FindObject(""Graph"");; n = g->GetN();; ; for (i=0; i<n; i++) {; g->GetPoint(i,x,y);; l.PaintText(x,y+0.2,Form(""(%4.2f,%4.2f)"",x,y));; }; }; ; c#define c(i)Definition RSha256.hxx:101; g#define g(i)Definition RSha256.hxx:105; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kBlue@ kBlueDefinition Rtypes.h:66; Formchar * Form(const char *fmt,...)Formats a string in a circular formatting buffer.Definition TString.cxx:2489; gPad#define gPadDefinition TVirtualPad.h:308; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TExecTExec is a utility class that can be used to execute a C++ command when some event happens in a pad.Definition TExec.h:26; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::SetPointvirtual void SetPoin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphtext_8C.html:83,Guid,Guide,83,doc/master/graphtext_8C.html,https://root.cern,https://root.cern/doc/master/graphtext_8C.html,3,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/graphs/gtime.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gtime.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Example of TGraphTime. . ; #include ""TCanvas.h""; #include ""TRandom3.h""; #include ""TMath.h""; #include ""TText.h""; #include ""TArrow.h""; #include ""TGraphTime.h""; #include <vector>; ; void gtime(Int_t nsteps = 500, Int_t np = 100); {; if (np > 1000) np = 1000;; std::vector<Int_t> color(np);; std::vector<Double_t> rr(np), phi(np), dr(np), size(np);; TRandom3 r;; Double_t xmin = -10, xmax = 10, ymin = -10, ymax = 10;; auto g = new TGraphTime(nsteps, xmin, ymin, xmax, ymax);; g->SetTitle(""TGraphTime demo;X domain;Y domain"");; for (Int_t i = 0; i < np; i++) { // calculate some object parameters; rr[i] = r.Uniform(0.1 * xmax, 0.2 * xmax);; phi[i] = r.Uniform(0, 2 * TMath::Pi());; dr[i] = r.Uniform(0, 1) * 0.9 * xmax / Double_t(nsteps);; Double_t rc = r.Rndm();; if (rc > 0.7); color[i] = kYellow;; else if (rc > 0.3); color[i] = kBlue;; else; color[i] = kRed;; ; size[i] = r.Uniform(0.5, 6);; }; for (Int_t s = 0; s < nsteps; s++) { // fill the TGraphTime step by step; for (Int_t i = 0; i < np; i++) {; Double_t newr = rr[i] + dr[i] * s;; Double_t newsize = 0.2 + size[i] * TMath::Abs(TMath::Sin(newr + 10));; Double_t newphi = phi[i] + 0.01 * s;; Double_t xx = newr * TMath::Cos(newphi);; Double_t yy = newr * TMath::Sin(newphi);; TMarker *m = new TMarker(xx, yy, 20);; m->SetMarkerColor(color[i]);; m->SetMarkerSize(newsize);; g->Add(m, s);; if (i == np - 1); g->Add(new TArrow(xmin, ymax, xx, yy, 0.02, ""-|>""), s);; }; g->Add(new TPaveLabel(.90, .92, .98, .97, TString::Format(""%d"", s + 1), ""brNDC""), s);; }; ; g->Draw();; ; // save object as animated gif; // g->SaveAnimatedGif(""gtime.gif"");; ; //save object to a file; auto f = TFile::Open(""gtime.root"",""recreate"");; f->WriteObject(g, ""g"");; delete f;; ; //to view this object in another session do; // TFile::Open(""gtime.root"");; // g->Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graphs_2gtime_8C.html:79,Guid,Guide,79,doc/master/graphs_2gtime_8C.html,https://root.cern,https://root.cern/doc/master/graphs_2gtime_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/gtime2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. gtime2.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Example of TGraphTime showing how the class could be used to visualize a set of particles with their time stamp in a MonteCarlo program. . ; #include ""TRandom3.h""; #include ""TMath.h""; #include ""TMarker.h""; #include ""TPaveLabel.h""; #include ""TArrow.h""; #include ""TGraphTime.h""; #include <vector>; ; void gtime2(Int_t nsteps = 200, Int_t np = 5000); {; if (np > 5000) np = 5000;; std::vector<Int_t> color(np);; std::vector<Double_t> cosphi(np), sinphi(np), speed(np);; TRandom3 r;; Double_t xmin = 0, xmax = 10, ymin = -10, ymax = 10;; TGraphTime *g = new TGraphTime(nsteps,xmin,ymin,xmax,ymax);; g->SetTitle(""TGraphTime demo 2;X;Y"");; Double_t fact = xmax/Double_t(nsteps);; for (Int_t i = 0; i < np; i++) { // calculate some object parameters; speed[i] = r.Uniform(0.5, 1);; Double_t phi = r.Gaus(0, TMath::Pi() / 6.);; cosphi[i] = fact * speed[i] * TMath::Cos(phi);; sinphi[i] = fact * speed[i] * TMath::Sin(phi);; Double_t rc = r.Rndm();; color[i] = kRed;; if (rc > 0.3) color[i] = kBlue;; if (rc > 0.7) color[i] = kYellow;; }; for (Int_t s = 0; s < nsteps; s++) { // fill the TGraphTime step by step; for (Int_t i = 0; i < np; i++) {; Double_t xx = s*cosphi[i];; if (xx < xmin) continue;; Double_t yy = s*sinphi[i];; TMarker *m = new TMarker(xx,yy,25);; m->SetMarkerColor(color[i]);; m->SetMarkerSize(1.5 -s/(speed[i]*nsteps));; g->Add(m, s);; }; g->Add(new TPaveLabel(.70,.92,.98,.99,TString::Format(""shower at %5.3f nsec"",3.*s/nsteps),""brNDC""),s);; }; ; g->Draw();; ; // store object as animated gif; // g->SaveAnimatedGif(""gtime2.gif"");; ; // start animation, can be stopped with g->Animate(kFALSE);; // g->Animate();; }; ; ; ; g#define g(i)Definition RSha256.hxx:105; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gtime2_8C.html:80,Guid,Guide,80,doc/master/gtime2_8C.html,https://root.cern,https://root.cern/doc/master/gtime2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/hlGraph1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hlGraph1.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This tutorial demonstrates how to use the highlight mode on graph. ; ; TList *l = nullptr;; ; void HighlightHisto(TVirtualPad *pad, TObject *obj, Int_t ihp, Int_t y); {; auto Pad = (TVirtualPad *)pad->FindObject(""Pad"");; if (!Pad) return;; ; if (ihp == -1) { // after highlight disabled; Pad->Clear();; return;; }; ; if (l && l->At(ihp)) {; Pad->cd();; l->At(ihp)->Draw();; gPad->Update();; }; }; ; void hlGraph1(); {; auto Canvas = new TCanvas(""Canvas"", ""Canvas"", 0, 0, 700, 500);; Canvas->HighlightConnect(""HighlightHisto(TVirtualPad*,TObject*,Int_t,Int_t)"");; const Int_t n = 500;; Double_t x[n], y[n];; l = new TList();; ; for (Int_t i = 0; i < n; i++) {; auto h = new TH1F(TString::Format(""h_%03d"", i), """", 100, -3.0, 3.0);; h->FillRandom(""gaus"", 1000);; h->Fit(""gaus"", ""Q"");; h->SetMaximum(250.0); // for n > 200; l->Add(h);; x[i] = i;; y[i] = h->GetFunction(""gaus"")->GetParameter(2);; }; ; auto g = new TGraph(n, x, y);; g->SetMarkerStyle(6);; g->Draw(""AP"");; ; auto Pad = new TPad(""Pad"", ""Pad"", 0.3, 0.4, 1.0, 1.0);; Pad->SetFillColor(kBlue-10);; Pad->Draw();; Pad->cd();; auto info = new TText(0.5, 0.5, ""please move the mouse over the graPad"");; info->SetTextAlign(22);; info->Draw();; Canvas->cd();; ; g->SetHighlight();; }; g#define g(i)Definition RSha256.hxx:105; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kBlue@ kBlueDefinition Rtypes.h:66; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TListA doubly linked list.Definition TList.h:38; TObjectMother o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlGraph1_8C.html:82,Guid,Guide,82,doc/master/hlGraph1_8C.html,https://root.cern,https://root.cern/doc/master/hlGraph1_8C.html,2,"['Clear', 'Guid']","['Clear', 'Guide']"
Usability,". ROOT: tutorials/graphs/hlGraph2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hlGraph2.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This tutorial demonstrates how to use the highlight mode on graph. ; ; TNtuple *ntuple = nullptr;; ; void HighlightBinId(TVirtualPad *pad, TObject *obj, Int_t ihp, Int_t y); {; auto Canvas2 = (TCanvas *)gROOT->GetListOfCanvases()->FindObject(""Canvas2"");; if (!Canvas2) return;; auto histo = (TH1F *)Canvas2->FindObject(""histo"");; if (!histo) return;; ; Double_t px = ntuple->GetV1()[ihp];; Double_t py = ntuple->GetV2()[ihp];; Double_t pz = ntuple->GetV3()[ihp];; Double_t i = ntuple->GetV4()[ihp];; Double_t p = TMath::Sqrt(px*px + py*py + pz*pz);; Int_t hbin = histo->FindBin(p);; ; Bool_t redraw = kFALSE;; auto bh = (TBox *)Canvas2->FindObject(""TBox"");; if (!bh) {; bh = new TBox();; bh->SetFillColor(kBlack);; bh->SetFillStyle(3001);; bh->SetBit(kCannotPick);; bh->SetBit(kCanDelete);; redraw = kTRUE;; }; bh->SetX1(histo->GetBinLowEdge(hbin));; bh->SetY1(histo->GetMinimum());; bh->SetX2(histo->GetBinWidth(hbin) + histo->GetBinLowEdge(hbin));; bh->SetY2(histo->GetBinContent(hbin));; ; auto th = (TText *)Canvas2->FindObject(""TText"");; if (!th) {; th = new TText();; th->SetName(""TText"");; th->SetTextColor(bh->GetFillColor());; th->SetBit(kCanDelete);; redraw = kTRUE;; }; th->SetText(histo->GetXaxis()->GetXmax()*0.75, histo->GetMaximum()*0.5,; TString::Format(""id = %d"", (Int_t)i));; ; if (ihp == -1) { // after highlight disabled; delete bh;; delete th;; }; Canvas2->Modified();; Canvas2->Update();; if (!redraw) return;; ; auto savepad = gPad;; Canvas2->cd();; bh->Draw();; th->Draw();; Canvas2->Update();; savepad->cd();; }; ; void hlGraph2(); {; auto dir = gROOT->GetTutorialDir();; dir.Append(""/hsimple.C"");; dir.ReplaceAll(""/./"",""/"");; if (!gInterpreter->IsLoaded(dir.Data())) gInterpreter->LoadMacro(dir.Data());; auto file = (TFile*)gROOT->ProcessLineFast(""hsimple(1)"");; i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlGraph2_8C.html:82,Guid,Guide,82,doc/master/hlGraph2_8C.html,https://root.cern,https://root.cern/doc/master/hlGraph2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/labels1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. labels1.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Setting alphanumeric labels in a 1-d histogram. . ; void labels1(); {; Int_t i;; const Int_t nx = 20;; const char *people[nx] = {""Jean"",""Pierre"",""Marie"",""Odile"",; ""Sebastien"",""Fons"",""Rene"",""Nicolas"",""Xavier"",""Greg"",; ""Bjarne"",""Anton"",""Otto"",""Eddy"",""Peter"",""Pasha"",; ""Philippe"",""Suzanne"",""Jeff"",""Valery""};; TCanvas *c1 = new TCanvas(""c1"",""demo bin labels"",10,10,900,500);; c1->SetGrid();; c1->SetBottomMargin(0.15);; TH1F *h = new TH1F(""h"",""test"",nx,0,nx);; h->SetFillColor(38);; for (i=0;i<5000;i++) h->Fill(gRandom->Gaus(0.5*nx,0.2*nx));; h->SetStats(0);; for (i=1;i<=nx;i++) h->GetXaxis()->SetBinLabel(i,people[i-1]);; h->Draw();; TPaveText *pt = new TPaveText(0.6,0.7,0.98,0.98,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Use the axis Context Menu LabelsOption"");; pt->AddText("" \""a\"" to sort by alphabetic order"");; pt->AddText("" \"">\"" to sort by decreasing values"");; pt->AddText("" \""<\"" to sort by increasing values"");; pt->Draw();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPaveText::Drawvoid Draw(Option_t *option="""") overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/labels1_8C.html:81,Guid,Guide,81,doc/master/labels1_8C.html,https://root.cern,https://root.cern/doc/master/labels1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/labels2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. labels2.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Setting alphanumeric labels. . ; void labels2(); {; Int_t i;; const Int_t nx = 12;; const Int_t ny = 20;; const char *month[nx] = {""January"",""February"",""March"",""April"",; ""May"",""June"",""July"",""August"",""September"",""October"",; ""November"",""December""};; const char *people[ny] = {""Jean"",""Pierre"",""Marie"",""Odile"",; ""Sebastien"",""Fons"",""Rene"",""Nicolas"",""Xavier"",""Greg"",; ""Bjarne"",""Anton"",""Otto"",""Eddy"",""Peter"",""Pasha"",; ""Philippe"",""Suzanne"",""Jeff"",""Valery""};; TCanvas *c1 = new TCanvas(""c1"",""demo bin labels"",; 10,10,800,800);; c1->SetGrid();; c1->SetLeftMargin(0.15);; c1->SetBottomMargin(0.15);; TH2F *h = new TH2F(""h"",""test"",nx,0,nx,ny,0,ny);; for (i=0;i<5000;i++) {; h->Fill(gRandom->Gaus(0.5*nx,0.2*nx),; gRandom->Gaus(0.5*ny,0.2*ny));; }; h->SetStats(0);; for (i=1;i<=nx;i++) h->GetXaxis()->SetBinLabel(i,month[i-1]);; for (i=1;i<=ny;i++) h->GetYaxis()->SetBinLabel(i,people[i-1]);; h->Draw(""text"");; ; TPaveText *pt = new TPaveText(0.6,0.85,0.98,0.98,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Use the axis Context Menu LabelsOption"");; pt->AddText("" \""a\"" to sort by alphabetic order"");; pt->AddText("" \"">\"" to sort by decreasing values"");; pt->AddText("" \""<\"" to sort by increasing values"");; pt->Draw();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TCanvasThe Canvas class.Definition TCanvas.h:23; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TPaveTextA Pave (see TPave) with text, lines or/and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/labels2_8C.html:81,Guid,Guide,81,doc/master/labels2_8C.html,https://root.cern,https://root.cern/doc/master/labels2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/motorcycle.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. motorcycle.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Macro to test scatterplot smoothers: ksmooth, lowess, supsmu as described in: ; Modern Applied Statistics with S-Plus, 3rd Edition; W.N. Venables and B.D. Ripley; Chapter 9: Smooth Regression, Figure 9.1; Example is a set of data on 133 observations of acceleration against time for a simulated motorcycle accident, taken from Silverman (1985). ; #include ""TString.h""; #include ""TInterpreter.h""; #include <fstream>; #include ""TH1.h""; #include ""TGraphSmooth.h""; #include ""TCanvas.h""; #include ""TSystem.h""; ; ; TCanvas *vC1;; TGraph *grin, *grout;; ; void DrawSmooth(Int_t pad, const char *title, const char *xt, const char *yt); {; vC1->cd(pad);; TH1F *vFrame = gPad->DrawFrame(0,-130,60,70);; vFrame->SetTitle(title);; vFrame->SetTitleSize(0.2);; vFrame->SetXTitle(xt);; vFrame->SetYTitle(yt);; grin->Draw(""P"");; grout->DrawClone(""LPX"");; }; ; void motorcycle(); {; // data taken from R library MASS: mcycle.txt; TString dir = gROOT->GetTutorialDir();; dir.Append(""/graphs/"");; dir.ReplaceAll(""/./"",""/"");; ; // read file and add to fit object; Double_t *x = new Double_t[133];; Double_t *y = new Double_t[133];; Double_t vX, vY;; Int_t vNData = 0;; ifstream vInput;; vInput.open(Form(""%smotorcycle.dat"",dir.Data()));; while (1) {; vInput >> vX >> vY;; if (!vInput.good()) break;; x[vNData] = vX;; y[vNData] = vY;; vNData++;; }//while; vInput.close();; grin = new TGraph(vNData,x,y);; ; // draw graph; vC1 = new TCanvas(""vC1"",""Smooth Regression"",200,10,900,700);; vC1->Divide(2,3);; ; // Kernel Smoother; // create new kernel smoother and smooth data with bandwidth = 2.0; TGraphSmooth *gs = new TGraphSmooth(""normal"");; grout = gs->SmoothKern(grin,""normal"",2.0);; DrawSmooth(1,""Kernel Smoother: bandwidth = 2.0"",""times"",""accel"");; ; // redraw ksmooth with bandwidth = 5.0; grout = gs->Sm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/motorcycle_8C.html:84,Guid,Guide,84,doc/master/motorcycle_8C.html,https://root.cern,https://root.cern/doc/master/motorcycle_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/multigraph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multigraph.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Create and Draw a TMultiGraph. . ; ; void multigraph(); {; gStyle->SetOptFit();; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; ; // draw a frame to define the range; auto mg = new TMultiGraph();; ; // create first graph; const Int_t n1 = 10;; Double_t px1[] = {-0.1, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t py1[] = {-1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t ex1[] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t ey1[] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; auto gr1 = new TGraphErrors(n1,px1,py1,ex1,ey1);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(21);; ; gr1->Fit(""gaus"",""q"");; auto func1 = (TF1 *) gr1->GetListOfFunctions()->FindObject(""gaus"");; func1->SetLineColor(kBlue);; ; mg->Add(gr1);; ; // create second graph; const Int_t n2 = 10;; Float_t x2[] = {-0.28, 0.005, 0.19, 0.29, 0.45, 0.56,0.65,0.80,0.90,1.01};; Float_t y2[] = {2.1,3.86,7,9,10,10.55,9.64,7.26,5.42,2};; Float_t ex2[] = {.04,.12,.08,.06,.05,.04,.07,.06,.08,.04};; Float_t ey2[] = {.6,.8,.7,.4,.3,.3,.4,.5,.6,.7};; auto gr2 = new TGraphErrors(n2,x2,y2,ex2,ey2);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(20);; ; gr2->Fit(""pol5"",""q"");; auto func2 = (TF1 *) gr2->GetListOfFunctions()->FindObject(""pol5"");; func2->SetLineColor(kRed);; func2->SetLineStyle(2);; ; mg->Add(gr2);; ; mg->Draw(""ap"");; ; //force drawing of canvas to generate the fit TPaveStats; c1->Update();; ; auto stats1 = (TPaveStats*) gr1->GetListOfFunctions()->FindObject(""stats"");; auto stats2 = (TPaveStats*) gr2->GetListOfFunctions()->FindObject(""stats"");; ; if (stats1 && stats2) {; stats1->SetTextColor(kBlue);; stats2->SetTextColor(kRed);; stats1->SetX1NDC(0.12); stats1->SetX2NDC(0.32); stats1->SetY1NDC(0.82);; stats2->SetX1NDC(0.72); stats2->SetX2NDC(0.92); stats2->SetY1NDC(0.75)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multigraph_8C.html:84,Guid,Guide,84,doc/master/multigraph_8C.html,https://root.cern,https://root.cern/doc/master/multigraph_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/multigraphpalettecolor.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multigraphpalettecolor.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Palette coloring for multi-graphs is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color). ; When one of these options is given to TMultiGraph::Draw the TGraphs in the TMultiGraphget their color from the current color palette defined by gStyle->SetPalette(...). The color is determined according to the number of TGraphs.; In this example four graphs are displayed with palette coloring for lines and and markers. The color of each graph is picked inside the default palette kBird. ; void multigraphpalettecolor(); {; auto mg = new TMultiGraph();; ; auto gr1 = new TGraph(); gr1->SetMarkerStyle(20);; auto gr2 = new TGraph(); gr2->SetMarkerStyle(21);; auto gr3 = new TGraph(); gr3->SetMarkerStyle(23);; auto gr4 = new TGraph(); gr4->SetMarkerStyle(24);; ; Double_t dx = 6.28/100;; Double_t x = -3.14;; ; for (int i=0; i<=100; i++) {; x = x+dx;; gr1->SetPoint(i,x,2.*TMath::Sin(x));; gr2->SetPoint(i,x,TMath::Cos(x));; gr3->SetPoint(i,x,TMath::Cos(x*x));; gr4->SetPoint(i,x,TMath::Cos(x*x*x));; }; ; mg->Add(gr4,""PL"");; mg->Add(gr3,""PL"");; mg->Add(gr2,""*L"");; mg->Add(gr1,""PL"");; ; mg->Draw(""A pmc plc"");; }; Double_tdouble Double_tDefinition RtypesCore.h:59; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TMultiGraphA TMultiGraph is a collection of TGraph (or derived) objects.Definition TMultiGraph.h:34; xDouble_t x[n]Definition legend1.C:17; TMath::CosDouble_t Cos(Double_t)Returns the cosine of an angle of x radians.Definition TMath.h:594; TMath::SinDouble_t Sin(Double_t)Returns the sine of an angle of x radians.Definition TMath.h:588; AuthorOlivier Couet ; Definition in file multigraphpalettecolor.C. tutorialsgraphsmultigraphpalettecolor.C. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multigraphpalettecolor_8C.html:96,Guid,Guide,96,doc/master/multigraphpalettecolor_8C.html,https://root.cern,https://root.cern/doc/master/multigraphpalettecolor_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/multipalette.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multipalette.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw color plots using different color palettes. ; As only one palette is active, one need to use TExec to be able to display plots using different palettes on the same pad.; When a pad is painted, all its elements are painted in the sequence of Draw calls (See the difference between Draw and Paint in the TPad documentation); for TExec it executes its command - which in the following example sets palette for painting all objects painted afterwards. If in the next pad another TExec changes the palette, it doesn’t affect the previous pad which was already painted, but it will affect the current and those painted later.; The following macro illustrate this feature. ; #include ""TStyle.h""; #include ""TColor.h""; #include ""TF2.h""; #include ""TExec.h""; #include ""TCanvas.h""; ; void Pal1(); {; static Int_t colors[50];; static Bool_t initialized = kFALSE;; ; Double_t Red[3] = { 1.00, 0.00, 0.00};; Double_t Green[3] = { 0.00, 1.00, 0.00};; Double_t Blue[3] = { 1.00, 0.00, 1.00};; Double_t Length[3] = { 0.00, 0.50, 1.00 };; ; if(!initialized){; Int_t FI = TColor::CreateGradientColorTable(3,Length,Red,Green,Blue,50);; for (int i=0; i<50; i++) colors[i] = FI+i;; initialized = kTRUE;; return;; }; gStyle->SetPalette(50,colors);; }; ; void Pal2(); {; static Int_t colors[50];; static Bool_t initialized = kFALSE;; ; Double_t Red[3] = { 1.00, 0.50, 0.00};; Double_t Green[3] = { 0.50, 0.00, 1.00};; Double_t Blue[3] = { 1.00, 0.00, 0.50};; Double_t Length[3] = { 0.00, 0.50, 1.00 };; ; if(!initialized){; Int_t FI = TColor::CreateGradientColorTable(3,Length,Red,Green,Blue,50);; for (int i=0; i<50; i++) colors[i] = FI+i;; initialized = kTRUE;; return;; }; gStyle->SetPalette(50,colors);; }; ; void multipalette() {; TCanvas *c3 = new TCanvas(""c3"",""C3"",0,0,600,400);; c3->Divide(2,1);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multipalette_8C.html:86,Guid,Guide,86,doc/master/multipalette_8C.html,https://root.cern,https://root.cern/doc/master/multipalette_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/scatter.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. scatter.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw a scatter plot. . ; void scatter(); {; auto canvas = new TCanvas();; canvas->SetRightMargin(0.14);; gStyle->SetPalette(kBird, 0, 0.6); // define a transparent palette; ; const int n = 175;; double x[n];; double y[n];; double c[n];; double s[n];; ; // Define four random data set; auto r = new TRandom();; for (int i=0; i<n; i++) {; x[i] = 100*r->Rndm(i);; y[i] = 200*r->Rndm(i);; c[i] = 300*r->Rndm(i);; s[i] = 400*r->Rndm(i);; }; ; auto scatter = new TScatter(n, x, y, c, s);; scatter->SetMarkerStyle(20);; scatter->SetTitle(""Scatter plot title;X title;Y title;Z title"");; scatter->GetXaxis()->SetRangeUser(20.,90.);; scatter->GetYaxis()->SetRangeUser(55.,90.);; scatter->GetZaxis()->SetRangeUser(10.,200.);; scatter->Draw(""A"");; }; c#define c(i)Definition RSha256.hxx:101; kBird@ kBirdDefinition TColor.h:118; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TScatterA TScatter is able to draw four variables scatter plot on a single plot.Definition TScatter.h:32; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; AuthorOlivier Couet ; Definition in file scatter.C. tutorialsgraphsscatter.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/scatter_8C.html:81,Guid,Guide,81,doc/master/scatter_8C.html,https://root.cern,https://root.cern/doc/master/scatter_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/seism.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. seism.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Strip chart example. . ; #include ""TStopwatch.h""; #include ""TDatime.h""; #include ""TStyle.h""; #include ""TH1F.h""; #include ""TCanvas.h""; #include ""TSystem.h""; #include ""TRandom.h""; #include <cstdio>; ; void seism() {; ; TStopwatch sw; sw.Start();; //set time offset; TDatime dtime;; gStyle->SetTimeOffset(dtime.Convert());; ; TCanvas *c1 = new TCanvas(""c1"",""Time on axis"",10,10,1000,500);; c1->SetGrid();; ; Float_t bintime = 1; //one bin = 1 second. change it to set the time scale; TH1F *ht = new TH1F(""ht"",""The ROOT seism"",10,0,10*bintime);; Float_t signalval = 1000;; ht->SetMaximum( signalval);; ht->SetMinimum(-signalval);; ht->SetStats(false);; ht->SetLineColor(2);; ht->GetXaxis()->SetTimeDisplay(1);; ht->GetYaxis()->SetNdivisions(520);; ht->Draw();; ; for (Int_t i=1;i<2300;i++) {; //======= Build a signal : noisy damped sine ======; Float_t noise = gRandom->Gaus(0,120);; if (i > 700) noise += signalval*sin((i-700.)*6.28/30)*exp((700.-i)/300.);; ht->SetBinContent(i,noise);; c1->Modified();; c1->Update();; gSystem->ProcessEvents(); //canvas can be edited during the loop; }; printf(""Real Time = %8.3fs, Cpu Time = %8.3fs\n"",sw.RealTime(),sw.CpuTime());; }; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; TCanvas.h; TDatime.h; TH1F.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TStopwatch.h; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TSystem.h; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TAttAxis::SetNdivisionsvirtual void SetNdivisions(Int_t n=510, Bool_t optim=kTRUE)Set the number of divisions for this axis.Definition TAttAxis.cxx:233; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAxis::SetTimeDisplayvirtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/seism_8C.html:79,Guid,Guide,79,doc/master/seism_8C.html,https://root.cern,https://root.cern/doc/master/seism_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/splines_test.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. splines_test.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Examples of use of the spline classes. . ; void splines_test(Int_t np=23, Double_t a=-0.5, Double_t b=31); {; // array of points; Double_t *xx=0, *yy=0;; TSpline3 *spline3=0;; TSpline5 *spline5=0;; TLine *line5, *line3;; TText *text5, *text3, *textn;; char text[20];; const Double_t power=0.75;; ; // Define the original function; TF1 *f=new TF1(""f"",""sin(x)*sin(x/10)"",; a-0.05*(b-a),b+0.05*(b-a));; // Draw function; f->Draw(""lc"");; ; // Create text and legend; Double_t xx1, yy1, xx2, yy2, dx, dy;; gPad->Update();; gPad->GetRangeAxis(xx1,yy1,xx2,yy2);; dx = xx2-xx1;; dy = yy2-yy1;; line5=new TLine(xx1+dx*0.3,yy1+dy*1.02,; xx1+dx*0.38,yy1+dy*1.02);; line5->SetLineColor(kRed);; line5->SetLineWidth(2);; text5 = new TText(xx1+dx*0.4,; yy1+dy*1.03,""quintic spline"");; text5->SetTextAlign(12);; text5->SetTextSize(0.04);; line3=new TLine(xx1+dx*0.67,yy1+dy*1.02,; xx1+dx*0.75,yy1+dy*1.02);; line3->SetLineColor(kGreen);; line3->SetLineWidth(2);; text3 = new TText(xx1+dx*0.77,; yy1+dy*1.03,""third spline"");; text3->SetTextAlign(12);; text3->SetTextSize(0.04);; textn = new TText(xx1+dx*0.8,yy1+dy*0.91,"" "");; textn->SetTextAlign(12);; textn->SetTextSize(0.04);; textn->Draw();; ; // Draw legenda; line5->Draw();; text5->Draw();; line3->Draw();; text3->Draw();; ; for(Int_t nnp=2; nnp<=np; ++nnp) {; ; // Calculate the knots; if(xx) delete[] xx;; xx = new Double_t[nnp];; if(yy) delete[] yy;; yy = new Double_t[nnp];; for (Int_t i=0; i<nnp; ++i) {; xx[i]=a+(b-a)*TMath::Power(i/Double_t (nnp-1),power);; yy[i]=f->Eval(xx[i]);; }; ; // Evaluate fifth spline coefficients; Double_t eps=(b-a)*1.e-5;; if(spline5) delete spline5;; spline5 = new TSpline5(""Test"",xx,f,nnp,""b1e1b2e2"",; f->Derivative(a),f->Derivative(b),; (f->Derivative(a+eps)-f->Derivative(a))/eps,; (f->Derivative(b)-f->D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/splines__test_8C.html:86,Guid,Guide,86,doc/master/splines__test_8C.html,https://root.cern,https://root.cern/doc/master/splines__test_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/surfaces.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. surfaces.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Draw 2-Dim functions. . ; void surfaces() {; TCanvas *c1 = new TCanvas(""c1"",""Surfaces Drawing Options"",200,10,700,900);; TPaveText *title = new TPaveText(.2,0.96,.8,.995);; title->AddText(""Examples of Surface options"");; title->Draw();; ; TPad *pad1 = new TPad(""pad1"",""Gouraud shading"",0.03,0.50,0.98,0.95);; TPad *pad2 = new TPad(""pad2"",""Color mesh"",0.03,0.02,0.98,0.48);; pad1->Draw();; pad2->Draw();; //; // We generate a 2-D function; TF2 *f2 = new TF2(""f2"",""x**2 + y**2 - x**3 -8*x*y**4"",-1,1.2,-1.5,1.5);; f2->SetContour(48);; f2->SetFillColor(45);; ; // Draw this function in pad1 with Gouraud shading option; pad1->cd();; pad1->SetPhi(-80);; pad1->SetLogz();; f2->Draw(""surf4"");; ; // Draw this function in pad2 with color mesh option; pad2->cd();; pad2->SetTheta(25);; pad2->SetPhi(-110);; pad2->SetLogz();; f2->SetLineWidth(1);; f2->SetLineColor(5);; f2->Draw(""surf1"");; ; //add axis titles. The titles are set on the intermediate; //histogram used for visualisation. We must force this histogram; //to be created, then force the redrawing of the two pads; pad2->Update();; f2->GetHistogram()->GetXaxis()->SetTitle(""x title"");; f2->GetHistogram()->GetYaxis()->SetTitle(""y title"");; f2->GetHistogram()->GetXaxis()->SetTitleOffset(1.4);; f2->GetHistogram()->GetYaxis()->SetTitleOffset(1.4);; pad1->Modified();; pad2->Modified();; }; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/surfaces_8C.html:82,Guid,Guide,82,doc/master/surfaces_8C.html,https://root.cern,https://root.cern/doc/master/surfaces_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/timeSeriesFromCSV.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. timeSeriesFromCSV.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This macro illustrates the use of the time axis on a TGraph with data read from a text file containing the SWAN usage statistics during July 2017. . ; void timeSeriesFromCSV(); {; // Open the data file. This csv contains the usage statistics of a CERN IT; // service, SWAN, during two weeks. We would like to plot this data with; // ROOT to draw some conclusions from it.; TString dir = gROOT->GetTutorialDir();; dir.Append(""/graphs/"");; dir.ReplaceAll(""/./"", ""/"");; FILE *f = fopen(Form(""%sSWAN2017.dat"", dir.Data()), ""r"");; ; // Create the time graph; auto g = new TGraph();; g->SetTitle(""SWAN Users during July 2017;Time;Number of Sessions"");; ; // Read the data and fill the graph with time along the X axis and number; // of users along the Y axis; char line[80];; float v;; char dt[20];; int i = 0;; while (fgets(line, 80, f)) {; sscanf(&line[20], ""%f"", &v);; strncpy(dt, line, 18);; dt[19] = '\0';; g->SetPoint(i, TDatime(dt).Convert(), v);; i++;; }; fclose(f);; ; // Draw the graph; auto c = new TCanvas(""c"", ""c"", 950, 500);; c->SetLeftMargin(0.07);; c->SetRightMargin(0.04);; c->SetGrid();; g->SetLineWidth(3);; g->SetLineColor(kBlue);; g->Draw(""al"");; g->GetYaxis()->CenterTitle();; ; // Make the X axis labelled with time.; auto xaxis = g->GetXaxis();; xaxis->SetTimeDisplay(1);; xaxis->CenterTitle();; xaxis->SetTimeFormat(""%a %d"");; xaxis->SetTimeOffset(0);; xaxis->SetNdivisions(-219);; xaxis->SetLimits(TDatime(2017, 7, 3, 0, 0, 0).Convert(), TDatime(2017, 7, 22, 0, 0, 0).Convert());; xaxis->SetLabelSize(0.025);; xaxis->CenterLabels();; }; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; g#define g(i)Definition RSha256.hxx:105; kBlue@ kBlueDefinition Rtypes.h:66; gROOT#define gROOTDefinition TROOT.h:406; Formchar * Form",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/timeSeriesFromCSV_8C.html:91,Guid,Guide,91,doc/master/timeSeriesFromCSV_8C.html,https://root.cern,https://root.cern/doc/master/timeSeriesFromCSV_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/timeSeriesFromCSV.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; timeSeriesFromCSV.py File ReferenceTutorials » Graphs tutorials. Detailed Description; This macro illustrates the use of the time axis on a TGraph with data read from a text file containing the SWAN usage statistics during July 2017. . ; import ROOT; ; # Open the data file. This csv contains the usage statistics of a CERN IT; # service, SWAN, during two weeks. We would like to plot this data with; # ROOT to draw some conclusions from it.; dirName = str(ROOT.gROOT.GetTutorialDir()); dirName += ""/graphs/""; dirName= dirName.replace(""/./"", ""/""); inputFileName = ""%s/SWAN2017.dat"" %dirName; ; # Create the time graph; g = ROOT.TGraph(); g.SetTitle(""SWAN Users during July 2017;Time;Number of Sessions""); ; # Read the data and fill the graph with time along the X axis and number; # of users along the Y axis; ; lines = open(inputFileName, ""r"").readlines(); ; for i, line in enumerate(lines):; d, h, value = line.split(); g.SetPoint(i, ROOT.TDatime(""%s %s"" %(d,h)).Convert(), float(value)); ; # Draw the graph; c = ROOT.TCanvas(""c"", ""c"", 950, 500); c.SetLeftMargin(0.07); c.SetRightMargin(0.04); c.SetGrid(); g.SetLineWidth(3); g.SetLineColor(ROOT.kBlue); g.Draw(""al""); g.GetYaxis().CenterTitle(); ; # Make the X axis labelled with time; xaxis = g.GetXaxis(); xaxis.SetTimeDisplay(1); xaxis.CenterTitle(); xaxis.SetTimeFormat(""%a %d""); xaxis.SetTimeOffset(0); xaxis.SetNdivisions(-219); xaxis.SetLimits(ROOT.TDatime(2017, 7, 3, 0, 0, 0).Convert(), ROOT.TDatime(2017, 7, 22, 0, 0, 0).Convert()); xaxis.SetLabelSize(0.025); xaxis.CenterLabels(); ; AuthorsDanilo Piparo, Olivier Couet ; Definition in file timeSeriesFromCSV.py. tutorialsgraphstimeSeriesFromCSV.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/timeSeriesFromCSV_8py.html:92,Guid,Guide,92,doc/master/timeSeriesFromCSV_8py.html,https://root.cern,https://root.cern/doc/master/timeSeriesFromCSV_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/timeSeriesFromCSV_TDF.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. timeSeriesFromCSV_TDF.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This macro illustrates the use of the time axis on a TGraph with data read from a text file containing the SWAN usage statistics during July 2017. ; We exploit the TDataFrame for reading from the file. ; void timeSeriesFromCSV_TDF(); {; // Open the data file. This csv contains the usage statistics of a CERN IT; // service, SWAN, during two weeks. We would like to plot this data with; // ROOT to draw some conclusions from it.; TString dir = gROOT->GetTutorialDir();; dir.Append(""/graphs/"");; dir.ReplaceAll(""/./"", ""/"");; ; // Read the data from the file using TDataFrame. We do not have headers and; // we would like the delimiter to be a space; auto tdf = ROOT::RDF::FromCSV(Form(""%sSWAN2017.dat"", dir.Data()), false, ' ');; ; // We now prepare the graph input; auto d = tdf.Define(""TimeStamp"", ""auto s = string(Col0) + ' ' + Col1; return (float) TDatime(s.c_str()).Convert();""); .Define(""Value"", ""(float)Col2"");; auto timeStamps = d.Take<float>(""TimeStamp"");; auto values = d.Take<float>(""Value"");; ; // Create the time graph; auto g = new TGraph(values->size(), timeStamps->data(), values->data());; g->SetTitle(""SWAN Users during July 2017;Time;Number of Sessions"");; ; // Draw the graph; auto c = new TCanvas(""c"", ""c"", 950, 500);; c->SetLeftMargin(0.07);; c->SetRightMargin(0.04);; c->SetGrid();; g->SetLineWidth(3);; g->SetLineColor(kBlue);; g->Draw(""al"");; g->GetYaxis()->CenterTitle();; ; // Make the X axis labelled with time.; auto xaxis = g->GetXaxis();; xaxis->SetTimeDisplay(1);; xaxis->CenterTitle();; xaxis->SetTimeFormat(""%a %d"");; xaxis->SetTimeOffset(0);; xaxis->SetNdivisions(-219);; xaxis->SetLimits(TDatime(2017, 7, 3, 0, 0, 0).Convert(), TDatime(2017, 7, 22, 0, 0, 0).Convert());; xaxis->SetLabelSize(0.025);; xaxis->CenterLabels();; }; d#d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/timeSeriesFromCSV__TDF_8C.html:95,Guid,Guide,95,doc/master/timeSeriesFromCSV__TDF_8C.html,https://root.cern,https://root.cern/doc/master/timeSeriesFromCSV__TDF_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/timeonaxis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. timeonaxis.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This macro illustrates the use of the time mode on the axis with different time intervals and time formats. ; Through all this script, the time is expressed in UTC. some information about this format (and others like GPS) may be found at http://tycho.usno.navy.mil/systime.html or http://www.topology.org/sci/time.html; The start time is: almost NOW (the time at which the script is executed) actually, the nearest preceding hour beginning. The time is in general expressed in UTC time with the C time() function This will obviously most of the time not be the time displayed on your watch since it is a universal time. See the C time functions for converting this time into more useful structures. ; #include <time.h>; ; void timeonaxis(); {; ; time_t script_time;; script_time = time(0);; script_time = 3600*(int)(script_time/3600);; ; // The time offset is the one that will be used by all graphs.; // If one changes it, it will be changed even on the graphs already defined; gStyle->SetTimeOffset(script_time);; ; auto ct = new TCanvas(""ct"",""Time on axis"",10,10,700,900);; ct->Divide(1,3);; ; int i;; ; //### Build a signal: noisy damped sine; // Time interval: 30 minutes; ; gStyle->SetTitleH(0.08);; float noise;; auto ht = new TH1F(""ht"",""Love at first sight"",3000,0.,2000.);; for (i=1;i<3000;i++) {; noise = gRandom->Gaus(0,120);; if (i>700) {; noise += 1000*sin((i-700)*6.28/30)*exp((double)(700-i)/300);; }; ht->SetBinContent(i,noise);; }; ct->cd(1);; ht->SetLineColor(2);; ht->GetXaxis()->SetLabelSize(0.05);; ht->Draw();; // Sets time on the X axis; // The time used is the one set as time offset added to the value; // of the axis. This is converted into day/month/year hour:min:sec and; // a reasonable tick interval value is chosen.; ht->GetXaxis()->SetTimeDisplay(1);; ; /",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/timeonaxis_8C.html:84,Guid,Guide,84,doc/master/timeonaxis_8C.html,https://root.cern,https://root.cern/doc/master/timeonaxis_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/timeonaxis2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. timeonaxis2.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Define the time offset as 2003, January 1st. . ; void timeonaxis2() {; auto ct2 = new TCanvas(""ct2"",""ct2"",10,10,700,500);; ; TDatime T0(2003, 1, 1, 0, 0, 0);; int X0 = T0.Convert();; gStyle->SetTimeOffset(X0);; ; // Define the lowest histogram limit as 2002, September 23rd; TDatime T1(2002, 9, 23, 0, 0, 0);; int X1 = T1.Convert()-X0;; ; // Define the highest histogram limit as 2003, March 7th; TDatime T2(2003, 3, 7, 0, 0, 0);; int X2 = T2.Convert(1)-X0;; ; auto h1 = new TH1F(""h1"",""test"",100,X1,X2);; ; TRandom r;; for (Int_t i=0;i<30000;i++) {; Double_t noise = r.Gaus(0.5*(X1+X2),0.1*(X2-X1));; h1->Fill(noise);; }; ; h1->GetXaxis()->SetTimeDisplay(1);; h1->GetXaxis()->SetLabelSize(0.03);; h1->GetXaxis()->SetTimeFormat(""%Y/%m/%d"");; h1->Draw();; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttAxis::SetLabelSizevirtual void SetLabelSize(Float_t size=0.04)Set size of axis labels.Definition TAttAxis.cxx:203; TAxis::SetTimeDisplayvirtual void SetTimeDisplay(Int_t value)Definition TAxis.h:171; TAxis::SetTimeFormatvirtual void SetTimeFormat(const char *format="""")Change the format used for time plotting.Definition TAxis.cxx:1157; TCanvasThe Canvas class.Definition TCanvas.h:23; TDatimeThis class stores the date and time with a precision of one second in an unsigned 32 bit word (950130...Definition TDatime.h:37; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::GetXaxis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/timeonaxis2_8C.html:85,Guid,Guide,85,doc/master/timeonaxis2_8C.html,https://root.cern,https://root.cern/doc/master/timeonaxis2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/timeonaxis3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. timeonaxis3.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This example compares what the system time function gmtime and localtime give with what gives TGaxis. ; It can be used as referenced test to check if TGaxis is working properly. The original code was developed by Philippe Gras (CEA Saclay. IRFU/SEDI). ; #include ""TAxis.h""; #include ""TGaxis.h""; #include ""TCanvas.h""; #include ""TString.h""; #include ""TLine.h""; #include ""TLatex.h""; #include <ctime>; #include <cstdio>; ; TString stime(time_t* t, bool utc = false, bool display_time_zone = true) {; struct tm* tt;; if (utc) tt = gmtime(t);; else tt = localtime(t);; char buf[256];; if (display_time_zone) strftime(buf, sizeof(buf), ""%Y-%m-%d %H:%M:%S %Z"", tt);; else strftime(buf, sizeof(buf), ""%Y-%m-%d %H:%M:%S"", tt);; return TString(buf);; }; ; ; void timeonaxis3() {; double f = 1.8;; ; auto c = new TCanvas;; ; TLatex tex1;; tex1.SetNDC();; tex1.SetTextFont(102);; tex1.SetTextSize(0.055*f);; ; TLatex tex3;; tex3.SetNDC();; tex3.SetTextFont(102);; tex3.SetTextSize(0.07*f);; tex3.SetTextColor(kBlue+2);; ; TLatex tex2;; tex2.SetNDC();; tex2.SetTextFont(102);; tex2.SetTextSize(0.07*f);; tex2.SetTextColor(kOrange+3);; ; time_t offset[] = {0, 0, 1325376000, 1341100800};; time_t t[] = {1331150400, 1336417200, 0, 36000};; ; c->SetTopMargin(0); c->SetBottomMargin(0);; c->SetLeftMargin(0); c->SetRightMargin(0);; c->Divide(2, 4, -1, -1);; TLine l;; l.DrawLine(0.5, 0, 0.5, 1.);; ; for(int i = 0; i < 4; ++i){; for(int gmt = 0; gmt < 2; ++gmt){; const char* opt = (gmt ? ""gmt"" : ""local"");; TVirtualPad* p = c->cd(2*i + gmt + 1);; p->SetTopMargin(0); p->SetBottomMargin(0);; p->SetLeftMargin(0); p->SetRightMargin(0);; p->SetFillStyle(4000);; ; TGaxis* ga = new TGaxis (.4, .25, 5., .25, t[i], t[i] + 1, 1, ""t"");; ga->SetTimeFormat(""TGaxis label: #color[2]{%Y-%m-%d %H:%M:%S}"");; ga->Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/timeonaxis3_8C.html:85,Guid,Guide,85,doc/master/timeonaxis3_8C.html,https://root.cern,https://root.cern/doc/master/timeonaxis3_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/waves.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. waves.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Hint: Spherical waves . ; #include ""TROOT.h""; #include ""TCanvas.h""; #include ""TColor.h""; #include ""TArc.h""; #include ""TGraph.h""; #include ""TF2.h""; #include ""TLine.h""; #include ""TLatex.h""; #include ""TMath.h""; #include ""TStyle.h""; ; //______________________________________________________________; Double_t interference( Double_t *x, Double_t *par); {; Double_t x_p2 = x[0] * x[0];; Double_t d_2 = 0.5 * par[2];; Double_t ym_p2 = (x[1] - d_2) * (x[1] - d_2);; Double_t yp_p2 = (x[1] + d_2) * (x[1] + d_2);; Double_t tpi_l = TMath::Pi() / par[1];; Double_t amplitude = par[0] * (cos(tpi_l * sqrt(x_p2 + ym_p2)); + par[3] * cos(tpi_l * sqrt(x_p2 + yp_p2)));; return amplitude * amplitude;; }; ; ; //_____________________________________________________________; Double_t result( Double_t *x, Double_t *par); {; Double_t xint[2];; Double_t maxintens = 0, xcur = 14;; Double_t dlambda = 0.1 * par[1];; for(Int_t i=0; i<10; i++){; xint[0] = xcur;; xint[1] = x[1];; Double_t intens = interference(xint, par);; if(intens > maxintens) maxintens = intens;; xcur -= dlambda;; }; return maxintens;; }; ; ; //_____________________________________________________________; void waves( Double_t d = 3, Double_t lambda = 1, Double_t amp = 10); {; TCanvas *c1 = new TCanvas(""waves"", ""A double slit experiment"", 300, 40, 1004, 759);; c1->Range(0, -10, 30, 10);; c1->SetFillColor(0);; TPad *pad = new TPad(""pr"",""pr"", 0.5, 0 , 1., 1);; pad->Range(0, -10, 15, 10);; pad->Draw();; ; const Int_t colNum = 30;; Int_t palette[colNum];; for (Int_t i=0;i<colNum;i++) {; Float_t level = 1.*i/colNum;; palette[i] = TColor::GetColor((Float_t) TMath::Power(level,0.3), (Float_t) TMath::Power(level,0.3), (Float_t) 0.5*level);; // palette[i] = 1001+i;; }; gStyle->SetPalette(colNum, palette);; ; c1->cd();; ; TF2 *f0 = new TF2(""r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/waves_8C.html:79,Guid,Guide,79,doc/master/waves_8C.html,https://root.cern,https://root.cern/doc/master/waves_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/zdemo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. zdemo.C File ReferenceTutorials » Graphs tutorials. Detailed Description; This macro is an example of graphs in log scales with annotations. ; The presented results are predictions of invariant cross-section of Direct Photons produced at RHIC energies, based on the universality of scaling function H(z).; These Figures were published in JINR preprint E2-98-64, Dubna, 1998 and submitted to CPC.; Note that the way greek symbols, super/subscripts are obtained illustrate the current limitations of Root in this area. ; #include ""TCanvas.h""; #include ""TPad.h""; #include ""TPaveLabel.h""; #include ""TLatex.h""; #include ""TGraph.h""; #include ""TFrame.h""; ; #ifdef HZ; #undef HZ; #endif; ; const Int_t NMAX = 20;; Int_t NLOOP;; Float_t Z[NMAX], HZ[NMAX], PT[NMAX], INVSIG[NMAX];; ; void hz_calc(Float_t, Float_t, Float_t, Float_t, Float_t, Float_t);; ; //__________________________________________________________________; void zdemo(); {; ; Float_t energ;; Float_t dens;; Float_t tgrad;; Float_t ptmin;; Float_t ptmax;; Float_t delp;; ; // Create a new canvas.; TCanvas *c1 = new TCanvas(""zdemo"",; ""Monte Carlo Study of Z scaling"",10,40,800,600);; c1->Range(0,0,25,18);; c1->SetFillColor(40);; ; TPaveLabel *pl = new TPaveLabel(1,16.3,24,17.5,""Z-scaling of \; Direct Photon Productions in pp Collisions at RHIC Energies"",""br"");; pl->SetFillColor(18);; pl->SetTextFont(32);; pl->SetTextColor(49);; pl->Draw();; ; TLatex t0;; t0.SetTextFont(32);; t0.SetTextColor(1);; t0.SetTextSize(0.03);; t0.SetTextAlign(12);; t0.DrawLatex(3.1,15.5,""M.Tokarev, E.Potrebenikova "");; t0.DrawLatex(14.,15.5,""JINR preprint E2-98-64, Dubna, 1998 "");; ; TPad *pad1 = new TPad(""pad1"",""This is pad1"",0.02,0.02,0.48,0.83,33);; TPad *pad2 = new TPad(""pad2"",""This is pad2"",0.52,0.02,0.98,0.83,33);; ; pad1->Draw();; pad2->Draw();; ; //; // Cross-section of direct photon production in pp collisions; // at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/zdemo_8C.html:79,Guid,Guide,79,doc/master/zdemo_8C.html,https://root.cern,https://root.cern/doc/master/zdemo_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/zones.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. zones.C File ReferenceTutorials » Graphs tutorials. Detailed Description; Example of script showing how to divide a canvas into adjacent subpads + axis labels on the top and right side of the pads. . ; void zones() {; TCanvas *c1 = new TCanvas(""c1"",""multipads"",900,700);; gStyle->SetOptStat(0);; c1->Divide(2,2,0,0);; TH2F *h1 = new TH2F(""h1"",""test1"",10,0,1,20,0,20);; TH2F *h2 = new TH2F(""h2"",""test2"",10,0,1,20,0,100);; TH2F *h3 = new TH2F(""h3"",""test3"",10,0,1,20,-1,1);; TH2F *h4 = new TH2F(""h4"",""test4"",10,0,1,20,0,1000);; ; c1->cd(1);; gPad->SetTickx(2);; h1->Draw();; ; c1->cd(2);; gPad->SetTickx(2);; gPad->SetTicky(2);; h2->GetYaxis()->SetLabelOffset(0.01);; h2->Draw();; ; c1->cd(3);; h3->Draw();; ; c1->cd(4);; gPad->SetTicky(2);; h4->Draw();; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; c1return c1Definition legend1.C:41; h1TH1F * h1Definition legend1.C:5; zonesDefinition zones.py:1; AuthorRene Brun ; Definition in file zones.C. tutorialsgraphszones.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/zones_8C.html:79,Guid,Guide,79,doc/master/zones_8C.html,https://root.cern,https://root.cern/doc/master/zones_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/graphs/zones.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; zones.py File ReferenceTutorials » Graphs tutorials. Detailed Description; Example of script showing how to divide a canvas into adjacent subpads + axis labels on the top and right side of the pads. ; Original tutorial by Rene Brun. ; import ROOT; ; c1 = ROOT.TCanvas(""c1"",""multipads"",900,700); ROOT.gStyle.SetOptStat(0); ; c1.Divide(2,2,0,0); h1 = ROOT.TH2F(""h1"",""test1"",10,0,1,20,0,20); h2 = ROOT.TH2F(""h2"",""test2"",10,0,1,20,0,100); h3 = ROOT.TH2F(""h3"",""test3"",10,0,1,20,-1,1); h4 = ROOT.TH2F(""h4"",""test4"",10,0,1,20,0,1000); ; c1.cd(1); ROOT.gPad.SetTickx(2); h1.Draw(); c1.cd(2); ROOT.gPad.SetTickx(2); ROOT.gPad.SetTicky(2); h2.GetYaxis().SetLabelOffset(0.01); h2.Draw(); c1.cd(3); h3.Draw(); c1.cd(4); ROOT.gPad.SetTicky(2); h4.Draw(); ; AuthorAlberto Ferro ; Definition in file zones.py. tutorialsgraphszones.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/zones_8py.html:80,Guid,Guide,80,doc/master/zones_8py.html,https://root.cern,https://root.cern/doc/master/zones_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hist Directory Reference. Directory dependency graph for hist:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Files;  candledecay.C;   Candle Decay, illustrate a time development of a certain value. ;  ;  candlehisto.C;   Example showing how to combine the various candle plot options. ;  ;  candleplot.C;   Example of candle plot with 2-D histograms. ;  ;  candleplotoption.C;   Example showing how to combine the various candle plot options. ;  ;  candleplotstack.C;   Example showing how a THStack with candle plot option. ;  ;  candleplotwhiskers.C;   Example of candle plot showing the whiskers definition. ;  ;  candlescaled.C;   Candle Scaled, illustrates what scaling does on candle and violin charts. ;  ;  ContourList.C;   Getting Contours From TH2D. ;  ;  cumulative.C;   Illustrate use of the TH1::GetCumulative method. ;  ;  draw2dopt.C;   Display the various 2-d drawing options ;  ;  DynamicSlice.C;   Show the slice of a TH2 following the mouse position. ;  ;  exec1.C;  Echo object at mouse position. ;  ;  exec2.C;  Echo object at mouse position and show a graphics line. ;  ;  Fibonacci.C;   A TH2Poly build with Fibonacci numbers. ;  ;  fillhistosauto2p.C;  Fill multiple histograms with different functions and automatic binning. ;  ;  fillrandom.C;   Fill a 1-D histogram from a parametric function. ;  ;  fillrandom.py;   Fill a 1-D histogram from a parametric function. ;  ;  FirstContour.C;   Make a contour plot and get the first contour in a TPolyMarker. ;  ;  h1ReadAndDraw.C;   Read a 1-D histogram from a ROOT File and draw it. ;  ;  h2_cut.C;   This example demonstrates how to display a 2D histogram and use TCutG object to select bins for drawing. ;  ;  h2proj.C;   This example demonstrates how to display a histogram and its two projections. ;  ;  hbars.C;   Example of bar charts with 1-d histograms. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_cb5b3ace9d7fddaf972edd3edd27e2ab.html:74,Guid,Guide,74,doc/master/dir_cb5b3ace9d7fddaf972edd3edd27e2ab.html,https://root.cern,https://root.cern/doc/master/dir_cb5b3ace9d7fddaf972edd3edd27e2ab.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/ContourList.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ContourList.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Getting Contours From TH2D. ; Image produced by .x ContourList.C; The contours values are drawn next to each contour. . Output produced by .x ContourList.C; It shows that 6 contours and 12 graphs were found. ; TotalConts = 6; Contour 0 has 2 Graphs; Contour 1 has 2 Graphs; Contour 2 has 2 Graphs; Contour 3 has 2 Graphs; Contour 4 has 2 Graphs; Contour 5 has 2 Graphs; Z-Level Passed in as: Z = -0.100000; Graph: 1 -- 147 Elements; Graph: 2 -- 147 Elements; Z-Level Passed in as: Z = -0.500000; Graph: 3 -- 93 Elements; Graph: 4 -- 93 Elements; Z-Level Passed in as: Z = -0.700000; Graph: 5 -- 65 Elements; Graph: 6 -- 65 Elements; Z-Level Passed in as: Z = 0.100000; Graph: 7 -- 147 Elements; Graph: 8 -- 147 Elements; Z-Level Passed in as: Z = 0.400000; Graph: 9 -- 107 Elements; Graph: 10 -- 107 Elements; Z-Level Passed in as: Z = 0.800000; Graph: 11 -- 49 Elements; Graph: 12 -- 49 Elements; ; ; Extracted 6 Contours and 12 Graphs ; (TCanvas *) 0x5649202575c0; ContourList.C; ; Double_t SawTooth(Double_t x, Double_t WaveLen);; ; TCanvas *ContourList(){; ; const Double_t PI = TMath::Pi();; ; TCanvas* c = new TCanvas(""c"",""Contour List"",0,0,600,600);; c->SetRightMargin(0.15);; c->SetTopMargin(0.15);; ; Int_t i, j;; ; Int_t nZsamples = 80;; Int_t nPhiSamples = 80;; ; Double_t HofZwavelength = 4.0; // 4 meters; Double_t dZ = HofZwavelength/(Double_t)(nZsamples - 1);; Double_t dPhi = 2*PI/(Double_t)(nPhiSamples - 1);; ; TArrayD z(nZsamples);; TArrayD HofZ(nZsamples);; TArrayD phi(nPhiSamples);; TArrayD FofPhi(nPhiSamples);; ; // Discretized Z and Phi Values; for ( i = 0; i < nZsamples; i++) {; z[i] = (i)*dZ - HofZwavelength/2.0;; HofZ[i] = SawTooth(z[i], HofZwavelength);; }; ; for(Int_t i=0; i < nPhiSamples; i++){; phi[i] = (i)*dPhi;; FofPhi[i] = sin(phi[i]);; }; ; //",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ContourList_8C.html:83,Guid,Guide,83,doc/master/ContourList_8C.html,https://root.cern,https://root.cern/doc/master/ContourList_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/DynamicSlice.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DynamicSlice.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Show the slice of a TH2 following the mouse position. . ; ; void DynamicSlice(); {; // Create a new canvas.; TCanvas* c1 = new TCanvas(""c1"",""Dynamic Slice Example"", 10, 10, 700, 500);; ; //create a 2-d histogram, fill and draw it; TH2F *hpxpy = new TH2F(""hpxpy"", ""py vs px"", 40,-4,4, 40,-4,4);; hpxpy->SetStats(0);; Double_t px,py;; for (Int_t i = 0; i < 50000; i++) {; gRandom->Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->Draw(""col"");; ; //Add a TExec object to the canvas; c1->AddExec(""dynamic"", ""DynamicExec()"");; }; ; void DynamicExec(); {; // Example of function called when a mouse event occurs in a pad.; // When moving the mouse in the canvas, a second canvas shows the; // projection along X of the bin corresponding to the Y position; // of the mouse. The resulting histogram is fitted with a gaussian.; // A ""dynamic"" line shows the current bin position in Y.; // This more elaborated example can be used as a starting point; // to develop more powerful interactive applications exploiting Cling; // as a development engine.; ; static int pyold = 0;; ; float uxmin = gPad->GetUxmin();; float uxmax = gPad->GetUxmax();; int pxmin = gPad->XtoAbsPixel(uxmin);; int pxmax = gPad->XtoAbsPixel(uxmax);; int px = gPad->GetEventX();; int py = gPad->GetEventY();; TObject *select = gPad->GetSelected();; ; gPad->GetCanvas()->FeedbackMode(kTRUE);; if (pyold) {; // erase line at old position; gVirtualX->DrawLine(pxmin, pyold, pxmax, pyold);; pyold = 0;; }; ; if(!select || !select->InheritsFrom(TH2::Class())); return;; ; TH2 *h = (TH2*)select;; ; // draw a line at current position; gVirtualX->DrawLine(pxmin, py, pxmax, py);; pyold = py;; ; Float_t upy = gPad->AbsPixeltoY(py);; Float_t y = gPad->PadtoY(upy);; ; //create or set the new canvas c2; TVirtualPad *padsav = gPad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DynamicSlice_8C.html:84,Guid,Guide,84,doc/master/DynamicSlice_8C.html,https://root.cern,https://root.cern/doc/master/DynamicSlice_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/Fibonacci.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Fibonacci.C File ReferenceTutorials » Histograms tutorials. Detailed Description; A TH2Poly build with Fibonacci numbers. ; In mathematics, the Fibonacci sequence is a suite of integer in which every number is the sum of the two preceding one.; The first 10 Fibonacci numbers are:; 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...; This tutorial computes Fibonacci numbers and uses them to build a TH2Poly producing the ""Fibonacci spiral"" created by drawing circular arcs connecting the opposite corners of squares in the Fibonacci tiling. ; void Arc(int n, double a, double r, double *px, double *py);; void AddFibonacciBin(TH2Poly *h2pf, double N);; ; void Fibonacci(int N=7) {; // N = number of Fibonacci numbers > 1; ; TCanvas *C = new TCanvas(""C"", ""C"", 800, 600);; C->SetFrameLineWidth(0);; ; TH2Poly *h2pf = new TH2Poly(); // TH2Poly containing Fibonacci bins.; h2pf->SetTitle(Form(""The first %d Fibonacci numbers"",N));; h2pf->SetMarkerColor(kRed-2);; h2pf->SetStats(0);; ; double f0 = 0.;; double f1 = 1.;; double ft;; ; AddFibonacciBin(h2pf, f1);; ; for (int i=0; i<=N; i++) {; ft = f1;; f1 = f0 + f1;; f0 = ft;; AddFibonacciBin(h2pf, f1);; }; ; h2pf->Draw(""A COL L TEXT"");; }; ; void Arc(int n, double a, double r, double *px, double *py) {; // Add points on a arc of circle from point 2 to n-2; ; double da = TMath::Pi()/(2*(n-2)); // Angle delta; ; for (int i = 2; i<=n-2; i++) {; a = a+da;; px[i] = r*TMath::Cos(a) + px[0];; py[i] = r*TMath::Sin(a) + py[0];; }; }; ; void AddFibonacciBin(TH2Poly *h2pf, double N) {; // Add to h2pf the bin corresponding to the Fibonacci number N; ; double X1 = 0.; //; double Y1 = 0.; // Current Fibonacci; double X2 = 1.; // square position.; double Y2 = 1.; //; ; static int MoveId = 0;; ; static double T = 1.; //Current Top limit of the bins; static double B = 0.; //Current Bottom limit of the bins; static double L = 0.; //Curren",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fibonacci_8C.html:81,Guid,Guide,81,doc/master/Fibonacci_8C.html,https://root.cern,https://root.cern/doc/master/Fibonacci_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/FirstContour.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FirstContour.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Make a contour plot and get the first contour in a TPolyMarker. ; This macro generates a color contour plot by selecting entries from an ntuple file. The TGraph object corresponding to the first contour line is accessed and displayed into a separate canvas.; ; void FirstContour(); {; TString dir = gROOT->GetTutorialDir();; dir.Append(""/hsimple.C"");; dir.ReplaceAll(""/./"",""/"");; if (!gInterpreter->IsLoaded(dir.Data())) gInterpreter->LoadMacro(dir.Data());; TFile *file = (TFile*)gROOT->ProcessLineFast(""hsimple(1)"");; if (!file) return;; TTree *ntuple = (TTree*)file->Get(""ntuple"");; ; TCanvas *c1 = new TCanvas(""c1"",""Contours"",10,10,800,600);; ntuple->Draw(""py:px"",""px*px+py*py < 20"", ""contz,list"");; ; //we must call Update to force the canvas to be painted. When; //painting the contour plot, the list of contours is generated; //and a reference to it added to the Root list of special objects; c1->Update();; ; TCanvas *c2 = new TCanvas(""c2"",""First contour"",100,100,800,600);; ; ; TObjArray *contours =; (TObjArray*)gROOT->GetListOfSpecials()->FindObject(""contours"");; if (!contours) return;; TList *lcontour1 = (TList*)contours->At(0);; if (!lcontour1) return;; TGraph *gc1 = (TGraph*)lcontour1->First();; if (!gc1) return;; if (gc1->GetN() < 10) return;; gc1->SetMarkerStyle(21);; gc1->Draw(""alp"");; ; //We make a TCutG object with the array obtained from this graph; TCutG *cutg = new TCutG(""cutg"",gc1->GetN(),gc1->GetX(),gc1->GetY());; ; //We create a polymarker object with npmax points.; const Int_t npmax = 50000;; TPolyMarker *pm = new TPolyMarker(npmax);; Int_t np = 0;; while(1) {; Double_t x = -4 +8*gRandom->Rndm();; Double_t y = -4 +8*gRandom->Rndm();; if (cutg->IsInside(x,y)) {; pm->SetPoint(np,x,y);; np++;; if (np == npmax) break;; }; }; pm->Draw();; }; Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FirstContour_8C.html:84,Guid,Guide,84,doc/master/FirstContour_8C.html,https://root.cern,https://root.cern/doc/master/FirstContour_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/NormalizeHistogram.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NormalizeHistogram.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Normalizing a Histogram ; Image produced by .x NormalizeHistogram.C Two different methods of normalizing histograms are shown, each with the original histogram. next to the normalized one. . ; #include ""TH2F.h""; #include ""TRandom.h""; #include ""TCanvas.h""; ; void NormalizeHistogram(); {; ; std::array<double, 6> binsx{0, 5, 10, 20, 50, 100};; TH1F *orig = new TH1F(""orig"", ""Original histogram before normalization"", binsx.size() - 1, &binsx[0]);; ; gStyle->SetTitleFontSize(0.06);; ; TRandom2 rand;; ; // Filling histogram with random entries; for (int i = 0; i < 100'000; ++i) {; double r = rand.Rndm() * 100;; orig->Fill(r);; }; ; TH1F *norm = (TH1F *)orig->Clone(""norm"");; norm->SetTitle(""Normalized Histogram"");; ; // Normalizing the Histogram by scaling by 1 / the integral and taking width into account; norm->Scale(1. / norm->Integral(), ""width"");; ; // Drawing everything; TCanvas *c1 = new TCanvas(""c1"", ""Histogram Normalization"", 700, 900);; c1->Divide(1, 2);; ; c1->cd(1);; orig->Draw();; c1->cd(2);; norm->Draw();; }; TCanvas.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TH2F.h; TRandom.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NormalizeHistogram_8C.html:90,Guid,Guide,90,doc/master/NormalizeHistogram_8C.html,https://root.cern,https://root.cern/doc/master/NormalizeHistogram_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/ZoomHistogram.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ZoomHistogram.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Changing the Range on the X-Axis of a Histogram ; Image produced by .x ZoomHistogram.C; This demonstrates how to zoom into a histogram by changing the range on one of the axes (or both). ; void ZoomHistogram(); {; TH1F *orig = new TH1F(""Normal Histogram"", ""Normal Histogram"", 100, 0, 100);; ; for (int i = 0; i < 100; ++i) {; Double_t x = gRandom->Gaus(50, 10);; orig->Fill(x);; }; ; TH1F *zoom = (TH1F *)orig->Clone(""zoom"");; zoom->SetTitle(""Zoomed-in Histogram"");; zoom->GetXaxis()->SetRangeUser(50, 100);; ; TCanvas *c1 = new TCanvas(""c1"", ""Histogram"", 1500, 700);; c1->Divide(2, 1);; ; c1->cd(1);; orig->Draw();; c1->cd(2);; zoom->Draw();; }; Double_tdouble Double_tDefinition RtypesCore.h:59; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAxis::SetRangeUservirtual void SetRangeUser(Double_t ufirst, Double_t ulast)Set the viewing range for the axis from ufirst to ulast (in user coordinates, that is,...Definition TAxis.cxx:1080; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH1::CloneTObject * Clone(const char *newname="""") const overrideMake a complete copy of the underlying object.Definition TH1.cxx:2752; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ZoomHistogram_8C.html:85,Guid,Guide,85,doc/master/ZoomHistogram_8C.html,https://root.cern,https://root.cern/doc/master/ZoomHistogram_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/candledecay.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. candledecay.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Candle Decay, illustrate a time development of a certain value. . ; void candledecay(); {; auto c1 = new TCanvas(""c1"",""Candle Decay"",800,600);; c1->Divide(2,1);; auto rng = new TRandom();; auto h1 = new TH2I(""h1"",""Decay"",1000,0,1000,20,0,20);; ; float myRand;; for (int i = 0; i < 19; i++) {; for (int j = 0; j < 1000000; j++) {; myRand = rng->Gaus(350+i*8,20+2*i);; h1->Fill(myRand,i);; }; }; h1->SetBarWidth(3);; h1->SetFillStyle(0);; h1->SetFillColor(kGray);; h1->SetLineColor(kBlue);; h1->GetYaxis()->SetTitle(""time"");; h1->GetXaxis()->SetTitle(""probability density"");; ; c1->cd(1);; h1->Draw(""violiny(112000000)"");; c1->cd(2);; auto h2 = (TH2I*)h1->Clone(""h2"");; h2->SetBarWidth(0.8);; h2->DrawCopy(""candley2"");; }; kGray@ kGrayDefinition Rtypes.h:65; kBlue@ kBlueDefinition Rtypes.h:66; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH1::CloneTObject * Clone(const char *newname="""") const overrideMake a complete copy of the underlying object.Definition TH1.cxx:2752; TH1::SetBarWidthvirtual void SetBarWidth(Float_t width=0.5)Set the width of bars as fraction of the bin width for drawing mode ""B"".Definition TH1.h:365; TH2I2-D ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/candledecay_8C.html:83,Guid,Guide,83,doc/master/candledecay_8C.html,https://root.cern,https://root.cern/doc/master/candledecay_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/candlehisto.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. candlehisto.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example showing how to combine the various candle plot options. . ; void candlehisto(); {; TCanvas *c1 = new TCanvas(""c1"", ""Candle Presets"", 800, 600);; c1->Divide(3, 2);; ; TRandom *rng = new TRandom();; TH2I *h1 = new TH2I(""h1"", ""Sin"", 18, 0, 360, 100, -1.5, 1.5);; h1->GetXaxis()->SetTitle(""Deg"");; ; float myRand;; for (int i = 0; i < 360; i+= 10) {; for (int j = 0; j < 100; j++) {; myRand = rng->Gaus(sin(i * 3.14 / 180), 0.2);; h1->Fill(i, myRand);; }; }; ; for (int i = 1; i < 7; i++) {; c1->cd(i);; TString title = TString::Format(""CANDLEX%d"", i);; TH2I *myhist = (TH2I*)h1->DrawCopy(title);; myhist->SetTitle(title);; }; ; TCanvas *c2 = new TCanvas(""c2"", ""Violin Presets"", 800, 300);; c2->Divide(2, 1);; ; for (int i = 1; i < 3; i++) {; c2->cd(i);; TString title = TString::Format(""VIOLINX%d"", i);; TH2I *myhist = (TH2I*)h1->DrawCopy(title);; myhist->SetFillColor(kGray + 2);; }; ; TCanvas *c3 = new TCanvas(""c3"", ""Playing with candle and violin-options"", 800, 600);; c3->Divide(3, 2);; TString myopt[6] = {""1000000"", ""2000000"", ""3000000"", ""1112111"", ""112111"", ""112111""};; for (int i = 0; i < 6; i++) {; c3->cd(i + 1);; TString title = TString::Format(""candlex(%s)"", myopt[i].Data());; TH2I *myhist = (TH2I*)h1->DrawCopy(title);; myhist->SetFillColor(kYellow);; if (i == 4) {; TH2I *myhist2 = (TH2I*)h1->DrawCopy(""candlex(1000000) same"");; myhist2->SetFillColor(kRed);; }; if (i == 5) {; myhist->SetBarWidth(0.2);; myhist->SetBarOffset(0.25);; TH2I *myhist2 = (TH2I*)h1->DrawCopy(""candlex(2000000) same"");; myhist2->SetFillColor(kRed);; myhist2->SetBarWidth(0.6);; myhist2->SetBarOffset(-0.5);; }; myhist->SetTitle(title);; }; }; kGray@ kGrayDefinition Rtypes.h:65; kRed@ kRedDefinition Rtypes.h:66; kYellow@ kYellowDefinition Rtypes.h:66; TAttFill::SetFillColorvirtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/candlehisto_8C.html:83,Guid,Guide,83,doc/master/candlehisto_8C.html,https://root.cern,https://root.cern/doc/master/candlehisto_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/candleplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. candleplot.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of candle plot with 2-D histograms. . ; void candleplot() {; ; gStyle->SetTimeOffset(0);; TDatime dateBegin(2010,1,1,0,0,0);; TDatime dateEnd(2011,1,1,0,0,0);; ; auto h1 = new TH2I(""h1"",""Machine A + B"",12,dateBegin.Convert(),dateEnd.Convert(),1000,0,1000);; auto h2 = new TH2I(""h2"",""Machine B"",12,dateBegin.Convert(),dateEnd.Convert(),1000,0,1000);; ; h1->GetXaxis()->SetTimeDisplay(1);; h1->GetXaxis()->SetTimeFormat(""%d/%m/%y"");; h1->GetXaxis()->SetNdivisions(-6);; h1->GetXaxis()->SetTitle(""Date [day/month/year]"");; ; float Rand;; for (int i = dateBegin.Convert(); i < dateEnd.Convert(); i+=86400*30) {; for (int j = 0; j < 1000; j++) {; Rand = gRandom->Gaus(500+sin(i/10000000.)*100,50); h1->Fill(i,Rand);; Rand = gRandom->Gaus(500+sin(i/11000000.)*100,70); h2->Fill(i,Rand);; }; }; ; h1->SetBarWidth(0.4);; h1->SetBarOffset(-0.25);; h1->SetFillColor(kYellow);; h1->SetFillStyle(1001);; ; h2->SetBarWidth(0.4);; h2->SetBarOffset(0.25);; h2->SetLineColor(kRed);; h2->SetFillColor(kGreen);; ; auto c1 = new TCanvas();; ; h1->Draw(""candle2"");; h2->Draw(""candle3 same"");; ; gPad->BuildLegend(0.78,0.695,0.980,0.935,"""",""f"");; }; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kYellow@ kYellowDefinition Rtypes.h:66; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TAttAxis::SetNdivisionsvirtual void SetNdivisions(Int_t n=510, Bool_t optim=kTRUE)Set the number of divisions for this axis.Definition TAttAxis.cxx:233; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/candleplot_8C.html:82,Guid,Guide,82,doc/master/candleplot_8C.html,https://root.cern,https://root.cern/doc/master/candleplot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/candleplot.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. candleplot.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_hist; 3/// \notebook; 4/// Example of candle plot with 2-D histograms.; 5///; 6/// \macro_image; 7/// \macro_code; 8///; 9/// \author Georg Troska; 10 ; 11void candleplot() {; 12 ; 13 gStyle->SetTimeOffset(0);; 14 TDatime dateBegin(2010,1,1,0,0,0);; 15 TDatime dateEnd(2011,1,1,0,0,0);; 16 ; 17 auto h1 = new TH2I(""h1"",""Machine A + B"",12,dateBegin.Convert(),dateEnd.Convert(),1000,0,1000);; 18 auto h2 = new TH2I(""h2"",""Machine B"",12,dateBegin.Convert(),dateEnd.Convert(),1000,0,1000);; 19 ; 20 h1->GetXaxis()->SetTimeDisplay(1);; 21 h1->GetXaxis()->SetTimeFormat(""%d/%m/%y"");; 22 h1->GetXaxis()->SetNdivisions(-6);; 23 h1->GetXaxis()->SetTitle(""Date [day/month/year]"");; 24 ; 25 float Rand;; 26 for (int i = dateBegin.Convert(); i < dateEnd.Convert(); i+=86400*30) {; 27 for (int j = 0; j < 1000; j++) {; 28 Rand = gRandom->Gaus(500+sin(i/10000000.)*100,50); h1->Fill(i,Rand);; 29 Rand = gRandom->Gaus(500+sin(i/11000000.)*100,70); h2->Fill(i,Rand);; 30 }; 31 }; 32 ; 33 h1->SetBarWidth(0.4);; 34 h1->SetBarOffset(-0.25);; 35 h1->SetFillColor(kYellow);; 36 h1->SetFillStyle(1001);; 37 ; 38 h2->SetBarWidth(0.4);; 39 h2->SetBarOffset(0.25);; 40 h2->SetLineColor(kRed);; 41 h2->SetFillColor(kGreen);; 42 ; 43 auto c1 = new TCanvas();; 44 ; 45 h1->Draw(""candle2"");; 46 h2->Draw(""candle3 same"");; 47 ; 48 gPad->BuildLegend(0.78,0.695,0.980,0.935,"""",""f"");; 49}; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kYellow@ kYellowDefinition Rtypes.h:66; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TAttAxis::SetNdivisionsvirtual void SetNdivisions(Int_t n=510, Bool_t optim=kTRUE)Set the number of divisions for this axis.Definition TAttAxis.cxx:233; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/candleplot_8C_source.html:79,Guid,Guide,79,doc/master/candleplot_8C_source.html,https://root.cern,https://root.cern/doc/master/candleplot_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/candleplotoption.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. candleplotoption.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example showing how to combine the various candle plot options. . ; void candleplotoption(); {; TCanvas *c1 = new TCanvas(""c1"",""Candle Presets"",800,600);; c1->Divide(3,2);; ; TRandom *rng = new TRandom();; TH2I *h1 = new TH2I(""h1"",""Sin"",18,0,360,300,-1.5,1.5);; h1->GetXaxis()->SetTitle(""Deg"");; float myRand;; for (int i = 0; i < 360; i+=10) {; for (int j = 0; j < 100; j++) {; myRand = rng->Gaus(sin(i*3.14/180),0.2);; h1->Fill(i,myRand);; }; }; for (int i = 1; i < 7; i++) {; c1->cd(i);; char str[16];; sprintf(str,""candlex%d"",i);; TH2I * myhist = (TH2I*)h1->DrawCopy(str);; myhist->SetTitle(str);; }; ; TCanvas *c2 = new TCanvas(""c2"",""Candle Individual"",800,600);; c2->Divide(4,4);; char myopt[16][8] = {""0"",""1"",""11"",""21"",""31"",""30"",""111"",""311"",""301"",""1111"",""2321"",""12111"",""112111"",""212111"",""312111""};; for (int i = 0; i < 15; i++) {; c2->cd(i+1);; char str[16];; sprintf(str, ""candlex(%s)"",myopt[i]);; TH2I * myhist = (TH2I*)h1->DrawCopy(str);; myhist->SetTitle(str);; }; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TH1::DrawCopyvirtual TH1 * DrawCopy(Option_t *option="""", const char *name_postfix=""_copy"") constCopy this histogram and Draw in the current pad.Definition TH1.cxx:3113; TH2I2-D histogram with an int per channel (see TH1 documentation)Definition TH2.h:225; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TRandom::Gausvirtual Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/candleplotoption_8C.html:88,Guid,Guide,88,doc/master/candleplotoption_8C.html,https://root.cern,https://root.cern/doc/master/candleplotoption_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/candleplotstack.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. candleplotstack.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example showing how a THStack with candle plot option. . ; void candleplotstack(); {; gStyle->SetTimeOffset(0);; auto rng = new TRandom();; auto dateBegin = new TDatime(2010,1,1,0,0,0);; auto dateEnd = new TDatime(2011,1,1,0,0,0);; int bins = 1000;; auto h1 = new TH2I(""h1"",""Machine A"",6,dateBegin->Convert(),dateEnd->Convert(),bins,0,1000);; auto h2 = new TH2I(""h2"",""Machine B"",6,dateBegin->Convert(),dateEnd->Convert(),bins,0,1000);; auto hsum = new TH2I(""h4"",""Sum"",6,dateBegin->Convert(),dateEnd->Convert(),bins,0,1000);; ; float Rand;; for (int i = dateBegin->Convert(); i < dateEnd->Convert(); i+=86400*30) {; for (int j = 0; j < 1000; j++) {; Rand = rng->Gaus(500+sin(i/10000000.)*100,50); h1->Fill(i,Rand); hsum->Fill(i,Rand);; Rand = rng->Gaus(500+sin(i/12000000.)*100,50); h2->Fill(i,Rand); hsum->Fill(i,Rand);; }; }; ; h2->SetLineColor(kRed);; hsum->SetFillColor(kGreen);; TCanvas *c1 = new TCanvas();; ; auto hs = new THStack(""hs"",""Machine A+B"");; hs->Add(h1);; hs->Add(h2,""candle2"");; hs->Add(hsum, ""violin1"");; hs->Draw(""candle3"");; hs->GetXaxis()->SetNdivisions(410);; ; gPad->SetGrid(1,0);; ; hs->GetXaxis()->SetTimeDisplay(1);; hs->GetXaxis()->SetTimeFormat(""%d/%m/%y"");; hs->GetXaxis()->SetNdivisions(-6);; hs->GetXaxis()->SetTitle(""Date [day/month/year]"");; c1->Modified();; ; gPad->BuildLegend(0.75,0.75,0.95,0.95,"""");; }; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TDatimeThis class stores the date and time with a precision of one second in an unsigned 32 bit word (950130...Definition TDatime.h:37; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/candleplotstack_8C.html:87,Guid,Guide,87,doc/master/candleplotstack_8C.html,https://root.cern,https://root.cern/doc/master/candleplotstack_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/candleplotwhiskers.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. candleplotwhiskers.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of candle plot showing the whiskers definition. . ; Q1 (-25%): -0.675525 Median: 0.00168511 Q3 (+25%): 0.676189; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 11.7941; NDf = 17; Edm = 1.90451e-06; NCalls = 131; Constant = 3728.5 +/- 182.159 ; Mean = -0.110704 +/- 0.0721072 ; Sigma = 0.959495 +/- 0.025154 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 8.0469; NDf = 17; Edm = 1.56503e-05; NCalls = 132; Constant = 4071.09 +/- 244.49 ; Mean = -0.0289155 +/- 0.087166 ; Sigma = 1.00961 +/- 0.0288274 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 6.93238; NDf = 11; Edm = 3.27894e-08; NCalls = 107; Constant = 3970.02 +/- 25.7596 ; Mean = -0.000189021 +/- 0.0118284 ; Sigma = 1.02465 +/- 0.0335469 (limited); ; void candleplotwhiskers() {; auto c1 = new TCanvas(""c1"",""Candle Presets"",700,800);; c1->Divide(1,2);; ; auto rng = new TRandom();; auto h1 = new TH2I(""h1"",""Gaus"",100,-5,5,1,0,1);; auto h2 = new TH1I(""h2"",""Gaus"",100,-5,5);; ; h1->GetXaxis()->SetTitle(""Standard deviation #sigma"");; h2->GetXaxis()->SetTitle(""Standard deviation #sigma"");; h2->GetYaxis()->SetTitle(""dN/d#sigma"");; ; float myRand;; for (int i = 0; i < 100000; i++) {; myRand = rng->Gaus(0,1);; h1->Fill(myRand,0);; h2->Fill(myRand);; }; ; Double_t *q = new Double_t[3];; Double_t *p = new Double_t[3];; q[0] = 0.; q[1] = 0.; q[2] = 0.;; p[0] = 0.25; p[1] = 0.5; p[2] = 0.75;; ; h2->GetQuantiles(3,q,p);; cout << ""Q1 (-25%): "" << q[0] << "" Median: "" << q[1] << "" Q3 (+25%): "" << q[2] << endl;; double iqr = q[2]-q[0];; auto mygaus_1_middle = new TF1(""mygaus_1_middle"",""gaus"",q[0],q[2]);; auto mygaus_1_left = new TF1(""mygaus_1_left"",""gaus"",q[0]-1.5*iqr,q[0]);; mygaus",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/candleplotwhiskers_8C.html:90,Guid,Guide,90,doc/master/candleplotwhiskers_8C.html,https://root.cern,https://root.cern/doc/master/candleplotwhiskers_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/candlescaled.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. candlescaled.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Candle Scaled, illustrates what scaling does on candle and violin charts. ; Please try to modify the static functions SetScaledCandle and SetScaledViolin. ; void candlescaled(); {; TCanvas *c1 = new TCanvas(""c1"",""TCandle Scaled"",800,600);; c1->Divide(2,2);; TH2I *h1 = new TH2I(""h1"",""GausXY"",20,-5,5,100,-5,5);; TH2I *h3 = new TH2I(""h3"",""GausXY"",100,-5,5,20,-5,5);; ; for (int j = 0; j < 100000; j++) {; auto myRand1 = gRandom->Gaus(0,1);; auto myRand2 = gRandom->Gaus(0,1);; h1->Fill(myRand1, myRand2);; h3->Fill(myRand1, myRand2);; }; ; c1->cd(1);; ; TCandle::SetScaledCandle(true); /* This is a global option for all existing candles, default is false */; ; h1->SetTitle(""CandleX scaled"");; h1->DrawCopy(""candleX2"");; c1->cd(2);; ; h3->SetTitle(""CandleY scaled"");; h3->DrawCopy(""candleY2"");; ; TCandle::SetScaledViolin(false); /* This is a global option for all existing violin, default is true */; TH2I *h2 = (TH2I*)h1->Clone();; h2->SetFillStyle(0);; h2->SetFillColor(kGray+2);; h2->SetLineColor(kBlue);; TH2I *h4 = (TH2I*)h3->Clone();; h4->SetFillStyle(0);; h4->SetFillColor(kGray+2);; h4->SetLineColor(kBlue);; ; c1->cd(3);; h2->SetTitle(""ViolinX unscaled"");; h2->DrawCopy(""ViolinX"");; c1->cd(4);; h4->SetTitle(""ViolinY unscaled"");; h4->DrawCopy(""ViolinY"");; }; kGray@ kGrayDefinition Rtypes.h:65; kBlue@ kBlueDefinition Rtypes.h:66; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCandle::SetScaledViolinstatic void SetScaledVi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/candlescaled_8C.html:84,Guid,Guide,84,doc/master/candlescaled_8C.html,https://root.cern,https://root.cern/doc/master/candlescaled_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/cumulative.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. cumulative.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Illustrate use of the TH1::GetCumulative method. . ; #include <cassert>; #include <cmath>; ; #include ""TH1.h""; #include ""TH1D.h""; #include ""TCanvas.h""; #include ""TRandom.h""; ; TCanvas *cumulative(); {; TH1* h = new TH1D(""h"", ""h"", 100, -5., 5.);; gRandom->SetSeed();; h->FillRandom(""gaus"", 1u << 16);; // get the cumulative of h; TH1* hc = h->GetCumulative();; // check that c has the ""right"" contents; Double_t* integral = h->GetIntegral();; for (Int_t i = 1; i <= hc->GetNbinsX(); ++i) {; assert(std::abs(integral[i] * h->GetEntries() - hc->GetBinContent(i)) < 1e-7);; }; // draw histogram together with its cumulative distribution; TCanvas* c = new TCanvas;; c->Divide(1,2);; c->cd(1);; h->Draw();; c->cd(2);; hc->Draw();; c->Update();; ; return c;; }; c#define c(i)Definition RSha256.hxx:101; h#define h(i)Definition RSha256.hxx:106; e#define e(i)Definition RSha256.hxx:103; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvas.h; TH1D.h; TH1.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetCumulativeTH1 * GetCumulative(Bool_t forward=kTRUE, const char *suffix=""_cumulative"") constReturn a pointer to a histogram containing the cumulative content.Definition TH1.cxx:2616; TH1::GetNbinsXvirtual Int_t GetNbinsX() constDefinition TH1.h:297; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH1::GetIntegralvirtual Double_t * GetIntegral()Return a pointer to the array of bins integral.Definition TH1.cxx:2586; TH1::GetBinContent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/cumulative_8C.html:82,Guid,Guide,82,doc/master/cumulative_8C.html,https://root.cern,https://root.cern/doc/master/cumulative_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/draw2dopt.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. draw2dopt.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Display the various 2-d drawing options . ; void draw2dopt(); {; gStyle->SetOptStat(0);; gStyle->SetCanvasColor(33);; gStyle->SetFrameFillColor(18);; TF2 *f2 = new TF2(""f2"",""xygaus + xygaus(5) + xylandau(10)"",-4,4,-4,4);; Double_t params[] = {130,-1.4,1.8,1.5,1, 150,2,0.5,-2,0.5, 3600,-2,0.7,-3,0.3};; f2->SetParameters(params);; auto h2 = new TH2F(""h2"",""xygaus + xygaus(5) + xylandau(10)"",20,-4,4,20,-4,4);; h2->SetFillColor(46);; h2->FillRandom(""f2"",40000);; TPaveLabel pl;; ; //basic 2-d options; Float_t xMin=0.67, yMin=0.875, xMax=0.85, yMax=0.95;; Int_t cancolor = 17;; auto c2h = new TCanvas(""c2h"",""2-d options"",10,10,800,600);; c2h->Divide(2,2);; c2h->SetFillColor(cancolor);; c2h->cd(1);; h2->Draw(); pl.DrawPaveLabel(xMin,yMin,xMax,yMax,""SCAT"",""brNDC"");; c2h->cd(2);; h2->Draw(""box""); pl.DrawPaveLabel(xMin,yMin,xMax,yMax,""BOX"",""brNDC"");; c2h->cd(3);; h2->Draw(""arr""); pl.DrawPaveLabel(xMin,yMin,xMax,yMax,""ARR"",""brNDC"");; c2h->cd(4);; h2->Draw(""colz""); pl.DrawPaveLabel(xMin,yMin,xMax,yMax,""COLZ"",""brNDC"");; c2h->Update();; ; //text option; auto ctext = new TCanvas(""ctext"",""text option"",50,50,800,600);; gPad->SetGrid();; ctext->SetFillColor(cancolor);; ctext->SetGrid();; h2->Draw(""text""); pl.DrawPaveLabel(xMin,yMin,xMax,yMax,""TEXT"",""brNDC"");; ctext->Update();; ; //contour options; auto cont = new TCanvas(""contours"",""contours"",100,100,800,600);; cont->Divide(2,2);; gPad->SetGrid();; cont->SetFillColor(cancolor);; cont->cd(1);; h2->Draw(""contz""); pl.DrawPaveLabel(xMin,yMin,xMax,yMax,""CONTZ"",""brNDC"");; cont->cd(2);; gPad->SetGrid();; h2->Draw(""cont1""); pl.DrawPaveLabel(xMin,yMin,xMax,yMax,""CONT1"",""brNDC"");; cont->cd(3);; gPad->SetGrid();; h2->Draw(""cont2""); pl.DrawPaveLabel(xMin,yMin,xMax,yMax,""CONT2"",""brNDC"");; cont->cd(4);; gPad->SetGrid();; h2->Draw(""cont3""); p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/draw2dopt_8C.html:81,Guid,Guide,81,doc/master/draw2dopt_8C.html,https://root.cern,https://root.cern/doc/master/draw2dopt_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/exec1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. exec1.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Echo object at mouse position. ; Example of macro called when a pad is redrawn one must create a TExec object in the following way gPad->AddExec(""ex1"", "".x exec1.C"");; gPad#define gPadDefinition TVirtualPad.h:308; this macro prints the bin number and the bin content when one clicks on the histogram contour of any histogram in a pad; ; ; void exec1(); {; if (!gPad) {; Error(""exec1"", ""gPad is null, you are not supposed to run this macro"");; return;; }; ; Int_t event = gPad->GetEvent();; int px = gPad->GetEventX();; TObject *select = gPad->GetSelected();; ; if (select && select->InheritsFrom(TH1::Class())) {; TH1 *h = (TH1*)select;; Float_t xx = gPad->AbsPixeltoX(px);; Float_t x = gPad->PadtoX(xx);; Int_t binx = h->GetXaxis()->FindBin(x);; printf(""event=%d, hist:%s, bin=%d, content=%f\n"", event, h->GetName(), binx, h->GetBinContent(binx));; }; }; ; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; TAxis::FindBinvirtual Int_t FindBin(Double_t x)Find bin number corresponding to abscissa x.Definition TAxis.cxx:293; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::Classstatic TClass * Class(); TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; xDouble_t x[n]Definition legend1.C:17; AuthorsRene Brun, Sergey Linev ; Definition in file exec1.C. tutorialshistexec1.C. ROOT master - Reference Guide Generated on Tue N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exec1_8C.html:77,Guid,Guide,77,doc/master/exec1_8C.html,https://root.cern,https://root.cern/doc/master/exec1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/exec2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. exec2.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Echo object at mouse position and show a graphics line. ; Example of macro called when a mouse event occurs in a pad.; Example: TFile::Open(""hsimple.root"");; hpxpy->Draw(""colz"");; gPad->AddExec(""ex2"", "".x exec2.C"");; gPad#define gPadDefinition TVirtualPad.h:308; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; When moving the mouse in the canvas, a second canvas shows the projection along X of the bin corresponding to the Y position of the mouse. The resulting histogram is fitted with a gaussian. A ""dynamic"" line shows the current bin position in Y. This more elaborated example can be used as a starting point to develop more powerful interactive applications exploiting CLING as a development engine.; ; void exec2(); {; if (!gPad) {; Error(""exec2"", ""gPad is null, you are not supposed to run this macro"");; return;; }; ; int px = gPad->GetEventX();; int py = gPad->GetEventY();; float uxmin = gPad->GetUxmin();; float uxmax = gPad->GetUxmax();; int pxmin = gPad->XtoAbsPixel(uxmin);; int pxmax = gPad->XtoAbsPixel(uxmax);; TObject *select = gPad->GetSelected();; TCanvas *c2 = (TCanvas*)gROOT->GetListOfCanvases()->FindObject(""c2"");; ; gPad->GetCanvas()->FeedbackMode(kTRUE);; ; int pyold = gPad->GetUniqueID(); // misuse of pad unique for last draw position; ; if (pyold && c2) {; // erase line at old position; gVirtualX->DrawLine(pxmin, pyold, pxmax, pyold);; gPad->SetUniqueID(0);; }; ; TH2 *h = dynamic_cast<TH2 *>(select);; if(!h) return;; ; //erase old position and draw a line at current position; gVirtualX->DrawLine(pxmin, py, pxmax, py);; gPad->SetUniqueID(py);; ; Float_t upy = gPad->AbsPixelt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exec2_8C.html:77,Guid,Guide,77,doc/master/exec2_8C.html,https://root.cern,https://root.cern/doc/master/exec2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/fillhistosauto2p.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fillhistosauto2p.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Fill multiple histograms with different functions and automatic binning. ; Illustrates merging with the power-of-two autobin algorithm; ; OBJ: TStatistic min Mean = -0.219 +- 0.09858 RMS = 0.31172 Count = 10 Min = -0.7688 Max = 0.187; OBJ: TStatistic max Mean = 6.2275 +- 0.1806 RMS = 0.57103 Count = 10 Min = 5.5275 Max = 7.3222; OBJ: TStatistic dif Mean = 6.4465 +- 0.2203 RMS = 0.69652 Count = 10 Min = 5.3405 Max = 7.6243; OBJ: TStatistic mean Mean = 3.0008 +- 0.005044 RMS = 0.01595 Count = 10 Min = 2.9789 Max = 3.0264; OBJ: TStatistic rms Mean = 1.005 +- 0.01028 RMS = 0.032511 Count = 10 Min = 0.95837 Max = 1.0666; ent: 10010; TH1.Print Name = myh0, Entries= 10010, Total sum= 10004; TH1.Print Name = myhref, Entries= 10010, Total sum= 10010; ; #include ""TF1.h""; #include ""TH1D.h""; #include ""TMath.h""; #include ""TF1.h""; #include ""TCanvas.h""; #include ""TRandom3.h""; #include ""TStatistic.h""; #include ""TFile.h""; #include ""TStyle.h""; ; TF1 *gam = new TF1(""gam"", ""1/(1+0.1*x*0.1*x)"", -100., 100.);; TF1 *gam1 = new TF1(""gam"", ""1/(1+0.1*x*0.1*x)"", -1., .25);; TF1 *iga = new TF1(""inv gam"", ""1.-1/(1+0.1*x*0.1*x)"", -100., 100.);; TF1 *iga1 = new TF1(""inv gam"", ""1.-1/(1+0.1*x*0.1*x)"", -.5, 1.);; ; void fillhistosauto2p(unsigned opt = 1, unsigned n = 1001); {; ; UInt_t nh = 10;; UInt_t bsize = 1000;; ; TRandom3 rndm((Long64_t)time(0));; ; // Standard autobinning reference; auto href = new TH1D(""myhref"", ""current"", 50, 0., -1.);; href->SetBuffer(bsize);; ; // New autobinning 1-histo reference; auto href2 = new TH1D(""myhref"", ""Auto P2, sequential"", 50, 0., -1.);; href2->SetBit(TH1::kAutoBinPTwo);; href2->SetBuffer(bsize);; ; TList *hlist = new TList;; ; Int_t nbins = 50;; ; TStatistic x(""min""), y(""max""), d(""dif""), a(""mean""), r(""rms"");; for (UInt_t j = 0; j < nh;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fillhistosauto2p_8C.html:88,Guid,Guide,88,doc/master/fillhistosauto2p_8C.html,https://root.cern,https://root.cern/doc/master/fillhistosauto2p_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/fillrandom.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fillrandom.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Fill a 1-D histogram from a parametric function. . ; void fillrandom(int plot=1) {; gBenchmark->Start(""fillrandom"");; ; // A function (any dimension) or a formula may reference; // an already defined formula; auto form1 = new TFormula(""form1"",""abs(sin(x)/x)"");; auto sqroot = new TF1(""sqroot"",""x*gaus(0) + [3]*form1"",0,10);; sqroot->SetLineColor(4);; sqroot->SetLineWidth(6);; sqroot->SetParameters(10,4,1,20);; ; // Create a one dimensional histogram (one float per bin); // and fill it following the distribution in function sqroot.; auto h1f = new TH1F(""h1f"",""Test random numbers"",200,0,10);; h1f->FillRandom(""sqroot"",10000);; ; // Open a ROOT file and save the formula, function and histogram; TFile myfile(""fillrandom.root"",""RECREATE"");; form1->Write();; sqroot->Write();; h1f->Write();; ; // Produce a plot if requested; if (plot) {; TCanvas *c1 = new TCanvas(""c1"",""The FillRandom example"",200,10,700,900);; ; auto pad1 = new TPad(""pad1"",""The pad with the function"",0.05,0.50,0.95,0.95);; auto pad2 = new TPad(""pad2"",""The pad with the histogram"",0.05,0.05,0.95,0.45);; pad1->Draw();; pad2->Draw();; pad1->cd();; ; pad1->SetGridx();; pad1->SetGridy();; pad1->GetFrame()->SetBorderMode(-1);; pad1->GetFrame()->SetBorderSize(5);; ; sqroot->Draw();; auto lfunction = new TPaveLabel(5,39,9.8,46,""The sqroot function"");; lfunction->Draw();; c1->Update();; ; pad2->cd();; pad2->GetFrame()->SetBorderMode(-1);; pad2->GetFrame()->SetBorderSize(5);; ; h1f->SetFillColor(45);; h1f->Draw();; c1->Update();; }; ; gBenchmark->Show(""fillrandom"");; }; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; plotwinID h TVirtualViewer3D TVirtualGLPainter char TVirtualGLPainter plotDefinition TGWin32VirtualGLProxy.cxx:53; TBenchmark::Startvirtual void Start(const char *name)Star",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fillrandom_8C.html:82,Guid,Guide,82,doc/master/fillrandom_8C.html,https://root.cern,https://root.cern/doc/master/fillrandom_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/fillrandom.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; fillrandom.py File ReferenceTutorials » Histograms tutorials. Detailed Description; Fill a 1-D histogram from a parametric function. ; Original tutorial by Rene Brun. ; import ROOT; ; c1 = ROOT.TCanvas(""c1"",""The FillRandom example"",200,10,700,900); pad1 = ROOT.TPad(""pad1"",""The pad with the function"",0.05,0.50,0.95,0.95); pad2 = ROOT.TPad(""pad2"",""The pad with the histogram"",0.05,0.05,0.95,0.45); pad1.Draw(); pad2.Draw(); pad1.cd(); ROOT.gBenchmark.Start(""fillrandom""); ; form1 = ROOT.TFormula(""form1"",""abs(sin(x)/x)""); sqroot = ROOT.TF1(""sqroot"",""x*gaus(0) + [3]*form1"",0,10); sqroot.SetParameters(10,4,1,20); pad1.SetGridx(); pad1.SetGridy(); pad1.GetFrame().SetBorderMode(-1); pad1.GetFrame().SetBorderSize(5); sqroot.SetLineColor(4); sqroot.SetLineWidth(6); sqroot.Draw(); lfunction = ROOT.TPaveLabel(5,39,9.8,46,""The sqroot function""); lfunction.Draw(); c1.Update(); ; pad2.cd(); pad2.GetFrame().SetBorderMode(-1); pad2.GetFrame().SetBorderSize(5); h1f = ROOT.TH1F(""h1f"",""Test random numbers"",200,0,10); h1f.SetFillColor(45); h1f.FillRandom(""sqroot"",10000); h1f.Draw(); c1.Update(); ; f = ROOT.TFile(""fillrandom-py.root"",""RECREATE""); form1.Write(); sqroot.Write(); h1f.Write(); ROOT.gBenchmark.Show(""fillrandom""); SetBorderSizec SetBorderSize(2); AuthorAlberto Ferro ; Definition in file fillrandom.py. tutorialshistfillrandom.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fillrandom_8py.html:83,Guid,Guide,83,doc/master/fillrandom_8py.html,https://root.cern,https://root.cern/doc/master/fillrandom_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/h1ReadAndDraw.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. h1ReadAndDraw.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Read a 1-D histogram from a ROOT File and draw it. ; We attach (or generate) the ROOT file in $ROOTSYS/tutorials/hsimple.root or $PWD/hsimple.root We draw one histogram in different formats. ; #include ""TInterpreter.h""; #include ""TCanvas.h""; #include ""TSystem.h""; #include ""TFile.h""; #include ""TH2.h""; #include ""TNtuple.h""; #include ""TPaveLabel.h""; #include ""TPaveText.h""; #include ""TFrame.h""; #include ""TSystem.h""; #include ""TInterpreter.h""; ; void h1ReadAndDraw(); {; // Fetch and open the hsimple.root File; TFile *example = TFile::Open(gROOT->GetTutorialDir() + ""/hsimple.root"");; ; example->ls(); // Show the file contents; // Get the histogram from the ROOT File; TH1 *hpx = nullptr; // pointer to base class TH1 is enough; example->GetObject(""hpx"", hpx);; ; TCanvas *c1 = new TCanvas(""c1"",""Histogram Drawing Options"",200,10,700,900);; TPad *pad1 = new TPad(""pad1"",; ""The pad with the function"",0.03,0.62,0.50,0.92);; TPad *pad2 = new TPad(""pad2"",; ""The pad with the histogram"",0.51,0.62,0.98,0.92);; TPad *pad3 = new TPad(""pad3"",; ""The pad with the histogram"",0.03,0.02,0.97,0.57);; pad1->Draw();; pad2->Draw();; pad3->Draw();; ; // Draw a global picture title; TPaveLabel *title = new TPaveLabel(0.1,0.94,0.9,0.98,; ""Drawing options for one dimensional histograms"");; title->SetTextFont(52);; title->Draw();; ; // Draw histogram hpx in first pad with the default option.; pad1->cd();; pad1->GetFrame()->SetFillColor(18);; hpx->SetFillColor(45);; hpx->DrawCopy();; TPaveLabel *label1 = new TPaveLabel(-3.5,700,-1,800,""Default option"");; label1->Draw();; ; // Draw hpx as a lego. Clicking on the lego area will show; // a ""transparent cube"" to guide you rotating the lego in real time.; pad2->cd();; hpx->DrawCopy(""lego1"");; TPaveLabel *label2 = new TPaveLabel(-0.72,0.74,-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/h1ReadAndDraw_8C.html:85,Guid,Guide,85,doc/master/h1ReadAndDraw_8C.html,https://root.cern,https://root.cern/doc/master/h1ReadAndDraw_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/h2_cut.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. h2_cut.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This example demonstrates how to display a 2D histogram and use TCutG object to select bins for drawing. ; Moving TCutG object one can change displayed region of histogram. ; void h2_cut(); {; const int n = 6;; Float_t x[6] = { 1, 2, 1, -1, -2, -1 };; Float_t y[6] = { 2, 0, -2, -2, 0, 2 };; TCutG *cut = new TCutG(""cut"", 6, x, y);; TH2F *hist = new TH2F(""hist"", ""Histogram with cut"", 40, -10., 10., 40, -10., 10.);; for (int i = 0; i < 100000; i++); hist->Fill(gRandom->Gaus(0., 3.), gRandom->Gaus(0., 3.));; TCanvas *c1 = new TCanvas(""c1"", ""Histogram draw with TCutG"", 600, 900);; hist->Draw(""col [cut]"");; cut->Draw(""l"");; }; Float_tfloat Float_tDefinition RtypesCore.h:57; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TCanvasThe Canvas class.Definition TCanvas.h:23; TCutGGraphical cut class.Definition TCutG.h:20; TGraph::Drawvoid Draw(Option_t *chopt="""") overrideDraw this graph with its current attributes.Definition TGraph.cxx:831; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TH2::FillInt_t Fill(Double_t) overrideInvalid Fill method.Definition TH2.cxx:393; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; AuthorSergey Linev ; Definition in file h2_cut.C. tutorialshisth2_cut.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/h2__cut_8C.html:78,Guid,Guide,78,doc/master/h2__cut_8C.html,https://root.cern,https://root.cern/doc/master/h2__cut_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/h2proj.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. h2proj.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This example demonstrates how to display a histogram and its two projections. ; A TExec allows to redraw automatically the projections when a zoom is performed on the 2D histogram. ; TH2F *h2;; TH1D * projh2X;; TH1D * projh2Y;; TPad *right_pad, *top_pad;; ; void h2proj(); {; auto c1 = new TCanvas(""c1"", ""c1"",900,900);; gStyle->SetOptStat(0);; ; TPad *center_pad = new TPad(""center_pad"", ""center_pad"",0.0,0.0,0.6,0.6);; center_pad->Draw();; ; right_pad = new TPad(""right_pad"", ""right_pad"",0.55,0.0,1.0,0.6);; right_pad->Draw();; ; top_pad = new TPad(""top_pad"", ""top_pad"",0.0,0.55,0.6,1.0);; top_pad->Draw();; ; h2 = new TH2F(""h2"","""",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; projh2X = h2->ProjectionX();; projh2Y = h2->ProjectionY();; ; center_pad->cd();; gStyle->SetPalette(1);; h2->Draw(""COL"");; ; top_pad->cd();; projh2X->SetFillColor(kBlue+1);; projh2X->Draw(""bar"");; ; right_pad->cd();; projh2Y->SetFillColor(kBlue-2);; projh2Y->Draw(""hbar"");; ; c1->cd();; TLatex t;; t.SetTextFont(42);; t.SetTextSize(0.02);; t.DrawLatex(0.6,0.88,""This example demonstrates how to display"");; t.DrawLatex(0.6,0.85,""a histogram and its two projections."");; ; auto ex = new TExec(""zoom"",""ZoomExec()"");; h2->GetListOfFunctions()->Add(ex);; }; ; void ZoomExec(); {; int xfirst = h2->GetXaxis()->GetFirst();; int xlast = h2->GetXaxis()->GetLast();; double xmin = h2->GetXaxis()->GetBinLowEdge(xfirst);; double xmax = h2->GetXaxis()->GetBinUpEdge(xlast);; projh2X->GetXaxis()->SetRangeUser(xmin, xmax);; top_pad->Modified();; ; int yfirst = h2->GetYaxis()->GetFirst();; int ylast = h2->GetYaxis()->GetLast();; double ymin = h2->GetYaxis()->GetBinLowEdge(yfirst);; double ymax = h2->GetYaxis()->GetBinUpEdge(ylast);; projh2Y->GetX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/h2proj_8C.html:78,Guid,Guide,78,doc/master/h2proj_8C.html,https://root.cern,https://root.cern/doc/master/h2proj_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hbars.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hbars.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of bar charts with 1-d histograms. . ; TCanvas *hbars(); {; // Try to open first the file cernstaff.root in tutorials/tree directory; TString filedir = gROOT->GetTutorialDir();; filedir += TString(""/tree/"");; TString filename = ""cernstaff.root"";; bool fileNotFound = gSystem->AccessPathName(filename); // note opposite return code; ; // If file is not found try to generate it using the macro tree/cernbuild.C; if (fileNotFound) {; TString macroName = filedir + ""cernbuild.C"";; if (!gInterpreter->IsLoaded(macroName)) gInterpreter->LoadMacro(macroName);; gROOT->ProcessLineFast(""cernbuild()"");; }; TFile * f = TFile::Open(filename);; if (!f) {; Error(""hbars"", ""file cernstaff.root not found"");; return nullptr;; }; TTree *T = (TTree*)f->Get(""T"");; if (!T) {; Error(""hbars"", ""Tree T is not present in file %s"", f->GetName());; return nullptr;; }; T->SetFillColor(45);; TCanvas *c1 = new TCanvas(""c1"",""histograms with bars"",700,800);; c1->SetFillColor(42);; c1->Divide(1,2);; ; // Horizontal bar chart; c1->cd(1);; gPad->SetGrid();; gPad->SetLogx();; gPad->SetFrameFillColor(33);; T->Draw(""Nation"","""",""hbar2"");; ; // Vertical bar chart; c1->cd(2);; gPad->SetGrid();; gPad->SetFrameFillColor(33);; T->Draw(""Division>>hDiv"","""",""goff"");; TH1F *hDiv = (TH1F*)gDirectory->Get(""hDiv"");; hDiv->SetStats(0);; TH1F *hDivFR = (TH1F*)hDiv->Clone(""hDivFR"");; T->Draw(""Division>>hDivFR"",""Nation==\""FR\"""",""goff"");; hDiv->SetBarWidth(0.45);; hDiv->SetBarOffset(0.1);; hDiv->SetFillColor(49);; TH1 *h1 = hDiv->DrawCopy(""bar2"");; hDivFR->SetBarWidth(0.4);; hDivFR->SetBarOffset(0.55);; hDivFR->SetFillColor(50);; TH1 *h2 = hDivFR->DrawCopy(""bar2,same"");; ; TLegend *legend = new TLegend(0.55,0.65,0.76,0.82);; legend->AddEntry(h1,""All nations"",""f"");; legend->AddEntry(h2,""French only"",""f"");; legend->Draw()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hbars_8C.html:77,Guid,Guide,77,doc/master/hbars_8C.html,https://root.cern,https://root.cern/doc/master/hbars_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/histpalettecolor.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. histpalettecolor.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Palette coloring for histogram is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color). ; When one of these options is given to TH1::Draw the histogram get its color from the current color palette defined by gStyle->SetPalette(...). The color is determined according to the number of objects having palette coloring in the current pad.; In this example five histograms are displayed with palette coloring for lines and and marker. The histograms are drawn with markers and error bars and one can see the color of each histogram is picked inside the default palette kBird. ; void histpalettecolor(); {; auto C = new TCanvas();; ; gStyle->SetOptTitle(kFALSE);; gStyle->SetOptStat(0);; ; auto h1 = new TH1F(""h1"",""Histogram drawn with full circles"",100,-4,4);; auto h2 = new TH1F(""h2"",""Histogram drawn with full squares"",100,-4,4);; auto h3 = new TH1F(""h3"",""Histogram drawn with full triangles up"",100,-4,4);; auto h4 = new TH1F(""h4"",""Histogram drawn with full triangles down"",100,-4,4);; auto h5 = new TH1F(""h5"",""Histogram drawn with empty circles"",100,-4,4);; ; TRandom3 rng;; Double_t px,py;; for (Int_t i = 0; i < 25000; i++) {; rng.Rannor(px,py);; h1->Fill(px,10.);; h2->Fill(px, 8.);; h3->Fill(px, 6.);; h4->Fill(px, 4.);; h5->Fill(px, 2.);; }; ; h1->SetMarkerStyle(kFullCircle);; h2->SetMarkerStyle(kFullSquare);; h3->SetMarkerStyle(kFullTriangleUp);; h4->SetMarkerStyle(kFullTriangleDown);; h5->SetMarkerStyle(kOpenCircle);; ; h1->Draw(""PLC PMC"");; h2->Draw(""SAME PLC PMC"");; h3->Draw(""SAME PLC PMC"");; h4->Draw(""SAME PLC PMC"");; h5->Draw(""SAME PLC PMC"");; ; gPad->BuildLegend();; }; Int_tint Int_tDefinition RtypesCore.h:45; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Double_tdouble Double_tDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/histpalettecolor_8C.html:88,Guid,Guide,88,doc/master/histpalettecolor_8C.html,https://root.cern,https://root.cern/doc/master/histpalettecolor_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hksimple.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hksimple.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Illustrates the advantages of a TH1K histogram . ; void canvasRefresh(TCanvas *c1); {; for (Int_t j = 0; j < 3; j++); c1->GetPad(j+1)->Modified();; ; c1->Modified();; c1->Update();; ; gSystem->ProcessEvents();; }; ; void hksimple(); {; // Create a new canvas.; TCanvas* c1 = new TCanvas(""c1"",""Dynamic Filling Example"",200,10,600,900);; ; // Create a normal histogram and two TH1K histograms; TH1 *hpx[3];; hpx[0] = new TH1F(""hp0"",""Normal histogram"",1000,-4,4);; hpx[1] = new TH1K(""hk1"",""Nearest Neighbour of order 3"",1000,-4,4);; hpx[2] = new TH1K(""hk2"",""Nearest Neighbour of order 16"",1000,-4,4,16);; c1->Divide(1,3);; for (Int_t j = 0; j < 3; j++) {; c1->cd(j + 1);; hpx[j]->SetFillColor(48);; hpx[j]->Draw();; }; ; // Fill histograms randomly; gRandom->SetSeed(12345);; Float_t px, py, pz;; const Int_t kUPDATE = 10;; for (Int_t i = 0; i <= 300; i++) {; gRandom->Rannor(px,py);; for (Int_t j = 0; j < 3; j++); hpx[j]->Fill(px);; if (i && (i % kUPDATE) == 0); canvasRefresh(c1);; }; ; for (Int_t j = 0; j < 3; j++); hpx[j]->Fit(""gaus"");; ; canvasRefresh(c1);; }; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; kUPDATE@ kUPDATEDefinition TFitParametersDialog.cxx:46; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1KTH1K class supports the nearest K Neighbours method, widely used in cluster analysis.Definition TH1K.h:26; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::Drawvoid Draw(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hksimple_8C.html:80,Guid,Guide,80,doc/master/hksimple_8C.html,https://root.cern,https://root.cern/doc/master/hksimple_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hlHisto1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hlHisto1.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This tutorial demonstrates how the highlight mechanism can be used on an histogram. ; A 2D histogram is booked an filled with a random gaussian distribution. Then an highlight method is connected to the histogram. Moving the mouse on the histogram will update the histogram title in real time according to the highlighted bin.; ; TText *info = nullptr;; ; void HighlightTitle(TVirtualPad *pad, TObject *obj, Int_t xhb, Int_t yhb); {; auto h2 = dynamic_cast<TH2F*>(obj);; if (!h2) return;; if (!h2->IsHighlight()) { // after highlight disabled; h2->SetTitle(""Disable highlight"");; return;; }; if (info) info->SetTitle("""");; TString t;; t.Form(""bin[%02d, %02d] (%5.2f, %5.2f) content %g"", xhb, yhb,; h2->GetXaxis()->GetBinCenter(xhb), h2->GetYaxis()->GetBinCenter(yhb),; h2->GetBinContent(xhb, yhb));; h2->SetTitle(t.Data());; pad->Update();; }; ; void hlHisto1(); {; auto c1 = new TCanvas();; c1->HighlightConnect(""HighlightTitle(TVirtualPad*,TObject*,Int_t,Int_t)"");; ; auto h2 = new TH2F(""h2"", """", 50, -5.0, 5.0, 50, -5.0, 5.0);; for (Int_t i = 0; i < 10000; i++) h2->Fill(gRandom->Gaus(), gRandom->Gaus());; h2->Draw();; ; info = new TText(0.0, -4.0, ""please move the mouse over the frame"");; info->SetTextAlign(22);; info->SetTextColor(kRed+1);; info->SetBit(kCannotPick);; info->Draw();; c1->Update();; ; // call after update to apply changes in the histogram painter; h2->SetHighlight();; }; Int_tint Int_tDefinition RtypesCore.h:45; kRed@ kRedDefinition Rtypes.h:66; kCannotPick@ kCannotPickDefinition TObject.h:372; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlHisto1_8C.html:80,Guid,Guide,80,doc/master/hlHisto1_8C.html,https://root.cern,https://root.cern/doc/master/hlHisto1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hlHisto2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hlHisto2.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This tutorial demonstrates how the highlight mechanism can be used on an histogram. ; A 2D histogram is booked an filled with a random gaussian distribution and drawn with the ""col"" option. Then an highlight method is connected to the histogram. Moving the mouse on the histogram open a new canvas displaying the two X and Y projections at the highlighted bin.; ; TText *info = nullptr;; ; void Highlight2(TVirtualPad *pad, TObject *obj, Int_t xhb, Int_t yhb); {; auto h2 = dynamic_cast<TH2F *>(obj);; if(!h2) return;; auto CanvasProj = (TCanvas *) gROOT->GetListOfCanvases()->FindObject(""CanvasProj"");; if (!h2->IsHighlight()) { // after highlight disabled; if (CanvasProj) delete CanvasProj;; h2->SetTitle(""Disable highlight"");; return;; }; ; if (info) info->SetTitle("""");; ; auto px = h2->ProjectionX(""_px"", yhb, yhb);; auto py = h2->ProjectionY(""_py"", xhb, xhb);; px->SetTitle(TString::Format(""ProjectionX of biny[%02d]"", yhb));; py->SetTitle(TString::Format(""ProjectionY of binx[%02d]"", xhb));; ; if (!CanvasProj) {; CanvasProj = new TCanvas(""CanvasProj"", ""CanvasProj"", 505, 0, 600, 600);; CanvasProj->Divide(1, 2);; CanvasProj->cd(1);; px->Draw();; CanvasProj->cd(2);; py->Draw();; }; ; h2->SetTitle(TString::Format(""Highlight bin [%02d, %02d]"", xhb, yhb).Data());; pad->Modified();; pad->Update();; ; CanvasProj->GetPad(1)->Modified();; CanvasProj->GetPad(2)->Modified();; CanvasProj->Update();; }; ; void hlHisto2(); {; auto c1 = new TCanvas(""Canvas"", ""Canvas"", 0, 0, 500, 500);; c1->HighlightConnect(""Highlight2(TVirtualPad*,TObject*,Int_t,Int_t)"");; ; auto h2 = new TH2F(""h2"", """", 50, -5.0, 5.0, 50, -5.0, 5.0);; for (Int_t i = 0; i < 10000; i++) h2->Fill(gRandom->Gaus(), gRandom->Gaus());; h2->Draw(""col"");; ; info = new TText(0.0, -4.0, ""please move the mouse over the frame"")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlHisto2_8C.html:80,Guid,Guide,80,doc/master/hlHisto2_8C.html,https://root.cern,https://root.cern/doc/master/hlHisto2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hlHisto3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hlHisto3.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This tutorial demonstrates how the highlight mechanism can be used on a ntuple. ; The ntuple in hsimple.root is drawn with three different selections. Moving the mouse over the two 1D representation display the on 2D plot the events contributing to the highlighted bin.; ; TList *list1 = nullptr, *list2 = nullptr;; ; TList *InitGraphs(TNtuple *nt, TH1F *histo, Bool_t is_top); {; Long64_t nev = nt->GetSelectedRows();; Double_t *px = nt->GetV1();; Double_t *py = nt->GetV2();; Double_t *pz = nt->GetV3();; ; auto list = new TList();; ; Int_t nbins = histo->GetNbinsX();; for (Int_t bin = 0; bin < nbins; bin++) {; auto g = new TGraph();; g->SetName(TString::Format(""g%sbin_%d"", histo->GetName(), bin+1));; g->SetBit(kCannotPick);; g->SetMarkerStyle(25);; g->SetMarkerColor(histo->GetLineColor());; list->Add(g);; }; ; for (Long64_t ie = 0; ie < nev; ie++) {; Double_t value = is_top ? pz[ie] : px[ie]*py[ie]*pz[ie];; Int_t bin = histo->FindBin(value) - 1;; auto g = dynamic_cast<TGraph *>(list->At(bin));; if (g) g->SetPoint(g->GetN(), py[ie], px[ie]);; }; ; return list;; }; ; void Highlight3(TVirtualPad *pad, TObject *obj, Int_t xhb, Int_t yhb); {; auto histo = dynamic_cast<TH1F *>(obj);; if(!histo) return;; ; TCanvas *Canvas2 = (TCanvas *)gROOT->GetListOfCanvases()->FindObject(""Canvas2"");; if (!Canvas2) return;; TGraph *gcommon = (TGraph *)Canvas2->FindObject(""Graph"");; if (!gcommon) return;; ; TList *list = nullptr;; if (!strcmp(histo->GetName(), ""histo1"")); list = list1;; else if (!strcmp(histo->GetName(), ""histo2"")); list = list2;; if (!list) return;; TGraph *g = (TGraph *)list->At(xhb);; if (!g) return;; ; TVirtualPad *savepad = gPad;; Canvas2->cd();; gcommon->Draw(""AP"");; //gcommon->SetTitle(TString::Format(""%d / %d"", g->GetN(), gcommon->GetN()));; if (histo->IsHighl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlHisto3_8C.html:80,Guid,Guide,80,doc/master/hlHisto3_8C.html,https://root.cern,https://root.cern/doc/master/hlHisto3_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hlHisto4.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hlHisto4.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This tutorial demonstrates how the highlight mechanism can be used on an histogram. ; A 1D histogram is created. Then an highlight method is connected to the histogram. Moving the mouse on the histogram will open a new canvas showing in real time a zoom around the highlighted bin.; ; TText *info = nullptr;; TH1 *hz = nullptr;; ; void HighlightZoom(TVirtualPad *pad, TObject *obj, Int_t xhb, Int_t yhb); {; auto h = dynamic_cast<TH1F *>(obj);; if(!h) return;; ; auto Canvas2 = (TCanvas *)gROOT->GetListOfCanvases()->FindObject(""Canvas2"");; if (!h->IsHighlight()) { // after highlight disabled; if (Canvas2) delete Canvas2;; if (hz) { delete hz; hz = nullptr; }; return;; }; ; if (info) info->SetTitle("""");; ; if (!Canvas2) {; Canvas2 = new TCanvas(""Canvas2"", ""Canvas2"", 605, 0, 400, 400);; Canvas2->SetGrid();; if (hz) hz->Draw(); // after reopen this canvas; }; if (!hz) {; hz = (TH1 *)h->Clone(""hz"");; hz->SetTitle(TString::Format(""%s (zoomed)"", hz->GetTitle()));; hz->SetStats(kFALSE);; hz->Draw();; Canvas2->Update();; hz->SetHighlight(kFALSE);; }; ; Int_t zf = hz->GetNbinsX()*0.05; // zoom factor; hz->GetXaxis()->SetRange(xhb-zf, xhb+zf);; ; Canvas2->Modified();; Canvas2->Update();; }; ; void hlHisto4(); {; auto Canvas1 = new TCanvas(""Canvas1"", """", 0, 0, 600, 400);; Canvas1->HighlightConnect(""HighlightZoom(TVirtualPad*,TObject*,Int_t,Int_t)"");; ; auto f1 = new TF1(""f1"", ""x*gaus(0) + [3]*abs(sin(x)/x)"", -50.0, 50.0);; f1->SetParameters(20.0, 4.0, 1.0, 20.0);; auto h1 = new TH1F(""h1"", ""Test random numbers"", 200, -50.0, 50.0);; h1->FillRandom(""f1"", 100000);; h1->Draw();; h1->Fit(f1, ""Q"");; gStyle->SetGridColor(kGray);; Canvas1->SetGrid();; ; info = new TText(0.0, h1->GetMaximum()*0.7, ""please move the mouse over the frame"");; info->SetTextSize(0.04);; info->SetTextAlign(2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlHisto4_8C.html:80,Guid,Guide,80,doc/master/hlHisto4_8C.html,https://root.cern,https://root.cern/doc/master/hlHisto4_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hlabels1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hlabels1.C File ReferenceTutorials » Histograms tutorials. Detailed Description; 1-D histograms with alphanumeric labels . ; TCanvas *hlabels1(); {; const Int_t nx = 20;; const char *people[nx] = {""Jean"",""Pierre"",""Marie"",""Odile"",""Sebastien"",; ""Fons"",""Rene"",""Nicolas"",""Xavier"",""Greg"",""Bjarne"",""Anton"",""Otto"",; ""Eddy"",""Peter"",""Pasha"",""Philippe"",""Suzanne"",""Jeff"",""Valery""};; TCanvas *c1 = new TCanvas(""c1"",""demo bin labels"",10,10,900,500);; c1->SetGrid();; c1->SetTopMargin(0.15);; TH1F *h = new TH1F(""h"",""test"",3,0,3);; h->SetStats(0);; h->SetFillColor(38);; h->SetCanExtend(TH1::kAllAxes);; for (Int_t i=0;i<5000;i++) {; Int_t r = gRandom->Rndm()*20;; h->Fill(people[r],1);; }; h->LabelsDeflate();; h->Draw();; TPaveText *pt = new TPaveText(0.7,0.85,0.98,0.98,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Use the axis Context Menu LabelsOption"");; pt->AddText("" \""a\"" to sort by alphabetic order"");; pt->AddText("" \"">\"" to sort by decreasing values"");; pt->AddText("" \""<\"" to sort by increasing values"");; pt->Draw();; return c1;; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::kAllAxes@ kAllAxesDefinition TH1.h:76; TPaveTextA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlabels1_8C.html:80,Guid,Guide,80,doc/master/hlabels1_8C.html,https://root.cern,https://root.cern/doc/master/hlabels1_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hlabels2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hlabels2.C File ReferenceTutorials » Histograms tutorials. Detailed Description; 2-D histograms with alphanumeric labels. . ; TCanvas *hlabels2(); {; const Int_t nx = 12;; const Int_t ny = 20;; const char *month[nx] = {""January"",""February"",""March"",""April"",""May"",; ""June"",""July"",""August"",""September"",""October"",""November"",; ""December""};; const char *people[ny] = {""Jean"",""Pierre"",""Marie"",""Odile"",""Sebastien"",; ""Fons"",""Rene"",""Nicolas"",""Xavier"",""Greg"",""Bjarne"",""Anton"",; ""Otto"",""Eddy"",""Peter"",""Pasha"",""Philippe"",""Suzanne"",""Jeff"",; ""Valery""};; TCanvas *c1 = new TCanvas(""c1"",""demo bin labels"",10,10,600,600);; c1->SetGrid();; c1->SetLeftMargin(0.15);; c1->SetBottomMargin(0.15);; TH2F *h = new TH2F(""h"",""test"",3,0,3,2,0,2);; h->SetCanExtend(TH1::kAllAxes);; h->SetStats(0);; gRandom->SetSeed();; for (Int_t i=0;i<15000;i++) {; Int_t rx = gRandom->Rndm()*nx;; Int_t ry = gRandom->Rndm()*ny;; h->Fill(people[ry],month[rx],1);; }; h->LabelsDeflate(""X"");; h->LabelsDeflate(""Y"");; h->LabelsOption(""v"");; h->Draw(""text"");; ; TPaveText *pt = new TPaveText(0.6,0.85,0.98,0.98,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Use the axis Context Menu LabelsOption"");; pt->AddText("" \""a\"" to sort by alphabetic order"");; pt->AddText("" \"">\"" to sort by decreasing values"");; pt->AddText("" \""<\"" to sort by increasing values"");; pt->Draw();; return c1;; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1::kAllAxes@ kAllAxesDefinition TH1.h:76; TH2F2-D histogram with a float per channel (se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlabels2_8C.html:80,Guid,Guide,80,doc/master/hlabels2_8C.html,https://root.cern,https://root.cern/doc/master/hlabels2_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hstack.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hstack.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of stacked histograms: class THStack. . ; void hstack(); {; auto hs = new THStack(""hs"",""Stacked 1D histograms"");; //create three 1-d histograms; auto h1st = new TH1F(""h1st"",""test hstack"",100,-4,4);; h1st->FillRandom(""gaus"",20000);; h1st->SetFillColor(kRed);; h1st->SetMarkerStyle(21);; h1st->SetMarkerColor(kRed);; hs->Add(h1st);; auto h2st = new TH1F(""h2st"",""test hstack"",100,-4,4);; h2st->FillRandom(""gaus"",15000);; h2st->SetFillColor(kBlue);; h2st->SetMarkerStyle(21);; h2st->SetMarkerColor(kBlue);; hs->Add(h2st);; auto h3st = new TH1F(""h3st"",""test hstack"",100,-4,4);; h3st->FillRandom(""gaus"",10000);; h3st->SetFillColor(kGreen);; h3st->SetMarkerStyle(21);; h3st->SetMarkerColor(kGreen);; hs->Add(h3st);; ; auto cst = new TCanvas(""cst"",""stacked hists"",10,10,700,700);; cst->Divide(2,2);; // in top left pad, draw the stack with defaults; cst->cd(1);; hs->Draw();; // in top right pad, draw the stack in non-stack mode; // and errors option; cst->cd(2);; gPad->SetGrid();; hs->Draw(""nostack,e1p"");; //in bottom left, draw in stack mode with ""lego1"" option; cst->cd(3);; gPad->SetFrameFillColor(17);; gPad->SetTheta(3.77);; gPad->SetPhi(2.9);; hs->Draw(""lego1"");; ; cst->cd(4);; //create two 2-D histograms and draw them in stack mode; gPad->SetFrameFillColor(17);; auto a = new THStack(""a"",""Stacked 2D histograms"");; auto f1 = new TF2(""f1"",; ""xygaus + xygaus(5) + xylandau(10)"",-4,4,-4,4);; Double_t params1[] = {130,-1.4,1.8,1.5,1, 150,2,0.5,-2,0.5,; 3600,-2,0.7,-3,0.3};; f1->SetParameters(params1);; auto h2sta = new TH2F(""h2sta"",""h2sta"",20,-4,4,20,-4,4);; h2sta->SetFillColor(38);; h2sta->FillRandom(""f1"",4000);; auto f2 = new TF2(""f2"",""xygaus + xygaus(5)"",-4,4,-4,4);; Double_t params2[] = {100,-1.4,1.9,1.1,2, 80,2,0.7,-2,0.5};; f2->SetParameters(params2);; auto h2stb = new T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hstack_8C.html:78,Guid,Guide,78,doc/master/hstack_8C.html,https://root.cern,https://root.cern/doc/master/hstack_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hstack.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hstack.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_hist; 3/// \notebook; 4/// Example of stacked histograms: class THStack.; 5///; 6/// \macro_image; 7/// \macro_code; 8///; 9/// \author Rene Brun; 10 ; 11void hstack(); 12{; 13 auto hs = new THStack(""hs"",""Stacked 1D histograms"");; 14 //create three 1-d histograms; 15 auto h1st = new TH1F(""h1st"",""test hstack"",100,-4,4);; 16 h1st->FillRandom(""gaus"",20000);; 17 h1st->SetFillColor(kRed);; 18 h1st->SetMarkerStyle(21);; 19 h1st->SetMarkerColor(kRed);; 20 hs->Add(h1st);; 21 auto h2st = new TH1F(""h2st"",""test hstack"",100,-4,4);; 22 h2st->FillRandom(""gaus"",15000);; 23 h2st->SetFillColor(kBlue);; 24 h2st->SetMarkerStyle(21);; 25 h2st->SetMarkerColor(kBlue);; 26 hs->Add(h2st);; 27 auto h3st = new TH1F(""h3st"",""test hstack"",100,-4,4);; 28 h3st->FillRandom(""gaus"",10000);; 29 h3st->SetFillColor(kGreen);; 30 h3st->SetMarkerStyle(21);; 31 h3st->SetMarkerColor(kGreen);; 32 hs->Add(h3st);; 33 ; 34 auto cst = new TCanvas(""cst"",""stacked hists"",10,10,700,700);; 35 cst->Divide(2,2);; 36 // in top left pad, draw the stack with defaults; 37 cst->cd(1);; 38 hs->Draw();; 39 // in top right pad, draw the stack in non-stack mode; 40 // and errors option; 41 cst->cd(2);; 42 gPad->SetGrid();; 43 hs->Draw(""nostack,e1p"");; 44 //in bottom left, draw in stack mode with ""lego1"" option; 45 cst->cd(3);; 46 gPad->SetFrameFillColor(17);; 47 gPad->SetTheta(3.77);; 48 gPad->SetPhi(2.9);; 49 hs->Draw(""lego1"");; 50 ; 51 cst->cd(4);; 52 //create two 2-D histograms and draw them in stack mode; 53 gPad->SetFrameFillColor(17);; 54 auto a = new THStack(""a"",""Stacked 2D histograms"");; 55 auto f1 = new TF2(""f1"",; 56 ""xygaus + xygaus(5) + xylandau(10)"",-4,4,-4,4);; 57 Double_t params1[] = {130,-1.4,1.8,1.5,1, 150,2,0.5,-2,0.5,; 58 3600,-2,0.7,-3,0.3};; 59 f1->SetParameters(params1);; 60 auto h2sta = new TH2F(""h2sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hstack_8C_source.html:75,Guid,Guide,75,doc/master/hstack_8C_source.html,https://root.cern,https://root.cern/doc/master/hstack_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hstackpads.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hstackpads.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Drawing stack histograms on subpads. ; In this example three histograms are displayed on separate pads. If canvas divided in advance - provided subpads will be used by the THStack. ; void hstackpads(); {; auto hs = new THStack(""hs"", ""Stacked 1D histograms"");; ; // Create three 1-d histograms and add them in the stack; auto h1st = new TH1F(""h1st"", ""test hstack 1"", 100, -4, 4);; h1st->FillRandom(""gaus"", 20000);; hs->Add(h1st);; ; auto h2st = new TH1F(""h2st"", ""test hstack 2"", 100, -4, 4);; h2st->FillRandom(""gaus"", 15000);; hs->Add(h2st);; ; auto h3st = new TH1F(""h3st"", ""test hstack 3"", 100, -4, 4);; h3st->FillRandom(""gaus"", 10000);; hs->Add(h3st);; ; auto c1 = new TCanvas(""c1"", ""THStack drawing on pads"", 800, 800);; ; // prepare subpads for drawing of histograms; c1->Divide(1, 3);; ; // draw thstack on canvas with ""pads"" draw option; c1->Add(hs, ""pads"");; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THStackThe Histogram stack class.Definition THStack.h:40; c1return c1Definition legend1.C:41; AuthorSergey Linev ; Definition in file hstackpads.C. tutorialshisthstackpads.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hstackpads_8C.html:82,Guid,Guide,82,doc/master/hstackpads_8C.html,https://root.cern,https://root.cern/doc/master/hstackpads_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/hsum.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hsum.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Histograms filled and drawn in a loop. ; Simple example illustrating how to use the C++ interpreter to fill histograms in a loop and show the graphics results. ; void hsum(); {; TCanvas *c1 = new TCanvas(""c1"",""The HSUM example"",200,10,600,400);; c1->SetGrid();; ; gBenchmark->Start(""hsum"");; ; // Create some histograms.; auto total = new TH1F(""total"",""This is the total distribution"",100,-4,4);; auto main = new TH1F(""main"",""Main contributor"",100,-4,4);; auto s1 = new TH1F(""s1"",""This is the first signal"",100,-4,4);; auto s2 = new TH1F(""s2"",""This is the second signal"",100,-4,4);; total->Sumw2(); // store the sum of squares of weights; total->SetMarkerStyle(21);; total->SetMarkerSize(0.7);; main->SetFillColor(16);; s1->SetFillColor(42);; s2->SetFillColor(46);; TSlider *slider = nullptr;; ; // Fill histograms randomly; gRandom->SetSeed();; const Int_t kUPDATE = 500;; Float_t xs1, xs2, xmain;; for ( Int_t i=0; i<10000; i++) {; xmain = gRandom->Gaus(-1,1.5);; xs1 = gRandom->Gaus(-0.5,0.5);; xs2 = gRandom->Landau(1,0.15);; main->Fill(xmain);; s1->Fill(xs1,0.3);; s2->Fill(xs2,0.2);; total->Fill(xmain);; total->Fill(xs1,0.3);; total->Fill(xs2,0.2);; if (i && (i%kUPDATE) == 0) {; if (i == kUPDATE) {; total->Draw(""e1p"");; main->Draw(""same"");; s1->Draw(""same"");; s2->Draw(""same"");; c1->Update();; slider = new TSlider(""slider"",; ""test"",4.2,0,4.6,total->GetMaximum(),38);; slider->SetFillColor(46);; }; if (slider) slider->SetRange(0., 1.*i/10000.);; c1->Modified();; c1->Update();; }; }; slider->SetRange(0., 1.);; c1->Modified();; gBenchmark->Show(""hsum"");; }; mainint main()Definition Prototype.cxx:12; s1#define s1(x)Definition RSha256.hxx:91; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hsum_8C.html:76,Guid,Guide,76,doc/master/hsum_8C.html,https://root.cern,https://root.cern/doc/master/hsum_8C.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/hist/hsumTimer.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hsumTimer.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Demo of Timers. ; Simple example illustrating how to use the C++ interpreter to fill histograms in a loop and show the graphics results This program is a variant of the tutorial ""hsum"". It illustrates the use of Timers. ; Float_t progressRatio = 0.;; TSlider *slider = nullptr;; TCanvas *c1 = nullptr;; ; void hsumUpdate(); {; // called when Timer times out; if (slider) slider->SetRange(0., progressRatio);; c1->Modified();; c1->Update();; }; ; void hsumTimer(Int_t nfill=100000); {; c1 = new TCanvas(""c1"",""The HSUM example"",200,10,600,400);; c1->SetGrid();; ; // Create some histograms.; auto total = new TH1F(""total"",""This is the total distribution"",100,-4,4);; auto main = new TH1F(""main"",""Main contributor"",100,-4,4);; auto s1 = new TH1F(""s1"",""This is the first signal"",100,-4,4);; auto s2 = new TH1F(""s2"",""This is the second signal"",100,-4,4);; total->Sumw2(); // store the sum of squares of weights; total->SetMarkerStyle(21);; total->SetMarkerSize(0.7);; main->SetFillColor(16);; s1->SetFillColor(42);; s2->SetFillColor(46);; total->SetMaximum(nfill/20.);; total->Draw(""e1p"");; main->Draw(""same"");; s1->Draw(""same"");; s2->Draw(""same"");; c1->Update();; ; slider = new TSlider(""slider"",""test"",4.2,0,4.6,0.8*total->GetMaximum(),38);; slider->SetFillColor(46);; ; // Create a TTimer (hsumUpdate called every 300 msec); TTimer timer(""hsumUpdate()"",300);; timer.TurnOn();; ; // Fill histograms randomly; Float_t xs1, xs2, xmain;; gRandom->SetSeed();; for (Int_t i=0; i<nfill; i++) {; progressRatio = i * 1. / nfill;; if (gSystem->ProcessEvents()) break;; xmain = gRandom->Gaus(-1,1.5);; xs1 = gRandom->Gaus(-0.5,0.5);; xs2 = gRandom->Landau(1,0.15);; main->Fill(xmain);; s1->Fill(xs1,0.3);; s2->Fill(xs2,0.2);; total->Fill(xmain);; total->Fill(xs1,0.3);; total->Fill(xs2,0.2);; }; time",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hsumTimer_8C.html:81,Guid,Guide,81,doc/master/hsumTimer_8C.html,https://root.cern,https://root.cern/doc/master/hsumTimer_8C.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/hist/legendautoplaced.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. legendautoplaced.C File ReferenceTutorials » Histograms tutorials. Detailed Description; The legend can be placed automatically in the current pad in an empty space found at painting time. ; The following example illustrate this facility. Only the width and height of the legend is specified in percentage of the pad size. ; void legendautoplaced(); {; auto c4 = new TCanvas(""c"", ""c"", 600,500);; auto hpx = new TH1D(""hpx"",""This is the hpx distribution"",100,-4.,4.);; hpx->FillRandom(""gaus"", 50000);; hpx->Draw(""E"");; hpx->GetYaxis()->SetTitle(""Y Axis title"");; hpx->GetYaxis()->SetTitleOffset(1.3); hpx->GetYaxis()->CenterTitle(true);; hpx->GetXaxis()->SetTitle(""X Axis title"");; hpx->GetXaxis()->CenterTitle(true);; ; auto h1 = new TH1D(""h1"",""A green histogram"",100,-2.,2.);; h1->FillRandom(""gaus"", 10000);; h1->SetLineColor(kGreen);; h1->Draw(""same"");; ; auto g = new TGraph();; g->SetPoint(0, -3.5, 100 );; g->SetPoint(1, -3.0, 300 );; g->SetPoint(2, -2.0, 1000 );; g->SetPoint(3, 1.0, 800 );; g->SetPoint(4, 0.0, 200 );; g->SetPoint(5, 3.0, 200 );; g->SetPoint(6, 3.0, 700 );; g->Draw(""L"");; g->SetTitle(""This is a TGraph"");; g->SetLineColor(kRed);; g->SetFillColor(0);; ; // TPad::BuildLegend() default placement values are such that they trigger; // the automatic placement.; c4->BuildLegend();; }; g#define g(i)Definition RSha256.hxx:105; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legendautoplaced_8C.html:88,Guid,Guide,88,doc/master/legendautoplaced_8C.html,https://root.cern,https://root.cern/doc/master/legendautoplaced_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/logscales.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. logscales.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Draw parametric functions with log scales. . ; void logscales() {; TCanvas *c1 = new TCanvas(""c1"", ""Various options on LOG scales plots"",0,0,700,900);; c1->SetFillColor(30);; ; TPad *pad1 = new TPad(""pad1"",""pad1"",0.03,0.62,0.50,0.92,32);; TPad *pad2 = new TPad(""pad2"",""pad2"",0.51,0.62,0.98,0.92,33);; TPad *pad3 = new TPad(""pad3"",""pad3"",0.03,0.02,0.97,0.535,38);; pad1->Draw(); pad2->Draw(); pad3->Draw();; ; TPaveLabel *title = new TPaveLabel(0.1,0.94,0.9,0.98, ""Various options on LOG scales plots"");; title->SetFillColor(16);; title->SetTextFont(42);; title->Draw();; ; TPaveText *pave = new TPaveText(0.1,0.55,0.9,0.61);; pave->SetFillColor(42);; pave->SetTextAlign(12);; pave->SetTextFont(42);; pave->AddText(""When more Log labels are requested, the overlapping labels are removed"");; pave->Draw();; ; pad1->cd();; pad1->SetLogy();; pad1->SetGridy();; TF1 *f1 = new TF1(""f1"",""x*sin(x)*exp(-0.1*x)+15"",-10.,10.);; TF1 *f2 = new TF1(""f2"",""(sin(x)+cos(x))**5+15"",-10.,10.);; TF1 *f3 = new TF1(""f3"",""(sin(x)/(x)-x*cos(x))+15"",-10.,10.);; f1->SetLineWidth(1); f1->SetLineColor(2);; f2->SetLineWidth(1); f2->SetLineColor(3);; f3->SetLineWidth(1); f3->SetLineColor(4);; f1->Draw();; f2->Draw(""same"");; f3->Draw(""same"");; f1->GetYaxis()->SetMoreLogLabels();; TPaveText *pave1 = new TPaveText(-6,2,6,6);; pave1->SetFillColor(42);; pave1->SetTextAlign(12);; pave1->SetTextFont(42);; pave1->AddText(""Log scale along Y axis."");; pave1->AddText(""More Log labels requested."");; pave1->Draw();; ; pad2->cd();; double x[10] = { 200, 300, 400, 500, 600, 650, 700, 710, 900,1000 };; double y[10] = { 200, 1000, 900, 400, 500, 250, 800, 150, 201, 220 };; TGraph *g_2 = new TGraph(10,x,y);; g_2->Draw(""AL*"");; g_2->SetMarkerColor(2);; g_2->GetYaxis()->SetMoreLogLabels();; g_2->GetYaxis()->SetNoExponen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/logscales_8C.html:81,Guid,Guide,81,doc/master/logscales_8C.html,https://root.cern,https://root.cern/doc/master/logscales_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/movepalette.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. movepalette.C File ReferenceTutorials » Histograms tutorials. Detailed Description; When an histogram is drawn with the option COLZ, a palette is automatically drawn vertically on the right side of the plot. ; It is possible to move and resize this vertical palette as shown on the left plot. The right plot demonstrates that, when the width of the palette is larger than its height, the palette is automatically drawn horizontally. ; void movepalette(); {; auto c = new TCanvas("""", """",0,0,1100,550);; c->Divide(2,1);; gStyle->SetOptStat(0);; ; auto h1 = new TH2D(""h1"",""h1"",40,-4,4,40,-20,20);; auto h2 = new TH2D(""h2"",""h2"",40,-4,4,40,-20,20);; float px, py;; for (int i = 0; i < 25000; i++) {; gRandom->Rannor(px,py); h1->Fill(px,5*py);; gRandom->Rannor(px,py); h2->Fill(px,5*py);; }; ; TPad *p1 = (TPad *)c->cd(1);; TPad *p2 = (TPad *)c->cd(2);; ; p1->SetRightMargin(0.15);; auto palette1 = new TPaletteAxis(4.05,-15,4.5,15,h1);; h1->GetListOfFunctions()->Add(palette1);; ; p2->SetBottomMargin(0.2);; auto palette2 = new TPaletteAxis(-3.,-25,3.,-23,h2);; h2->GetListOfFunctions()->Add(palette2);; ; p1->cd(); h1->Draw(""colz"");; p2->cd(); h2->Draw(""colz"");; }; c#define c(i)Definition RSha256.hxx:101; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttPad::SetBottomMarginvirtual void SetBottomMargin(Float_t bottommargin)Set Pad bottom margin in fraction of the pad height.Definition TAttPad.cxx:99; TAttPad::SetRightMarginvirtual void SetRightMargin(Float_t rightmargin)Set Pad right margin in fraction of the pad width.Definition TAttPad.cxx:119; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/movepalette_8C.html:83,Guid,Guide,83,doc/master/movepalette_8C.html,https://root.cern,https://root.cern/doc/master/movepalette_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/multicolor.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multicolor.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Use a THStack to show a 2-D hist with cells with different colors. ; root > .x multicolor.C; root > .x multicolor.C(1); . ; #include ""TCanvas.h""; #include ""TH2.h""; #include ""THStack.h""; #include ""TRandom.h""; ; void multicolor(Int_t isStack=0) {; TCanvas *c1 = new TCanvas;; Int_t nbins = 20;; TH2F *h1 = new TH2F(""h1"",""h1"",nbins,-4,4,nbins,-4,4);; h1->SetFillColor(kBlue);; TH2F *h2 = new TH2F(""h2"",""h2"",nbins,-4,4,nbins,-4,4);; h2->SetFillColor(kRed);; TH2F *h3 = new TH2F(""h3"",""h3"",nbins,-4,4,nbins,-4,4);; h3->SetFillColor(kYellow);; THStack *hs = new THStack(""hs"",""three plots"");; hs->Add(h1);; hs->Add(h2);; hs->Add(h3);; TRandom r;; Int_t i;; for (i=0;i<20000;i++) h1->Fill(r.Gaus(),r.Gaus());; for (i=0;i<200;i++) {; Int_t ix = (Int_t)r.Uniform(0,nbins);; Int_t iy = (Int_t)r.Uniform(0,nbins);; Int_t bin = h1->GetBin(ix,iy);; Double_t val = h1->GetBinContent(bin);; if (val <= 0) continue;; if (!isStack) h1->SetBinContent(bin,0);; if (r.Rndm() > 0.5) {; if (!isStack) h2->SetBinContent(bin,0);; h3->SetBinContent(bin,val);; } else {; if (!isStack) h3->SetBinContent(bin,0);; h2->SetBinContent(bin,val);; }; }; hs->Draw(""lego1"");; }; ; ; ; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; kYellow@ kYellowDefinition Rtypes.h:66; TCanvas.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TH2.h; THStack.h; TRandom.h; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TCanvasThe Canvas class.Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multicolor_8C.html:82,Guid,Guide,82,doc/master/multicolor_8C.html,https://root.cern,https://root.cern/doc/master/multicolor_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/ratioplot1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ratioplot1.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example creating a simple ratio plot of two histograms using the pois division option. ; Two histograms are set up and filled with random numbers. The constructor of TRatioPlot takes the two histograms, name and title for the object, drawing options for the histograms (hist and E in this case) and a drawing option for the output graph. The histograms drawing options can be changed with SetH1DrawOpt and SetH2DrawOpt. ; void ratioplot1() {; gStyle->SetOptStat(0);; auto C = new TCanvas(""C"", ""A ratio example"");; auto h1 = new TH1D(""h1"", ""TRatioPlot Example; x; y"", 50, 0, 10);; auto h2 = new TH1D(""h2"", ""h2"", 50, 0, 10);; auto f1 = new TF1(""f1"", ""exp(- x/[0] )"");; f1->SetParameter(0, 3);; h1->FillRandom(""f1"", 1900);; h2->FillRandom(""f1"", 2000);; h1->Sumw2();; h2->Scale(1.9 / 2.);; h2->SetLineColor(kRed);; ; // Create and draw the ratio plot; auto rp = new TRatioPlot(h1, h2);; C->SetTicks(0, 1);; rp->Draw();; rp->GetLowYaxis()->SetNdivisions(505);; ; // Add a legend to the ratio plot; rp->GetUpperPad()->cd();; TLegend *legend = new TLegend(0.3,0.7,0.7,0.85);; legend->AddEntry(""h1"",""First histogram"",""l"");; legend->AddEntry(""h2"",""Second histogram"",""le"");; legend->Draw();; }; kRed@ kRedDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TF1::SetParametervirtual void SetParameter(Int_t param, Double_t value)Definition TF1.h:667; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Sumw2virtual void Sumw2(Bool_t flag=kTRUE)Create s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot1_8C.html:82,Guid,Guide,82,doc/master/ratioplot1_8C.html,https://root.cern,https://root.cern/doc/master/ratioplot1_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot1.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ratioplot1.py File ReferenceTutorials » Histograms tutorials. Detailed Description; Example creating a simple ratio plot of two histograms using the pois division option. ; Two histograms are set up and filled with random numbers. The constructor of TRatioPlot takes the to histograms, name and title for the object, drawing options for the histograms (hist and E in this case) and a drawing option for the output graph. Inspired by the tutorial of Paul Gessinger. ; import ROOT; ; ROOT.gStyle.SetOptStat(0); ; c1 = ROOT.TCanvas(""c1"", ""A ratio example""); h1 = ROOT.TH1D(""h1"", ""h1"", 50, 0, 10); h2 = ROOT.TH1D(""h2"", ""h2"", 50, 0, 10); f1 = ROOT.TF1(""f1"", ""exp(- x/[0] )""); f1.SetParameter(0,3); ; h1.FillRandom(""f1"",1900); h2.FillRandom(""f1"", 2000); h1.Sumw2(); h2.Scale(1.9/2.); ; h1.GetXaxis().SetTitle(""x""); h1.GetYaxis().SetTitle(""y""); ; rp = ROOT.TRatioPlot(h1,h2); ; c1.SetTicks(0,1); rp.GetLowYaxis().SetNdivisions(505); c1.Update(); c1.Draw(); rp.Draw(); ; AuthorAlberto Ferro ; Definition in file ratioplot1.py. tutorialshistratioplot1.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot1_8py.html:83,Guid,Guide,83,doc/master/ratioplot1_8py.html,https://root.cern,https://root.cern/doc/master/ratioplot1_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ratioplot2.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of a fit residual plot. ; Creates a histogram filled with random numbers from a gaussian distribution and fits it with a standard gaussian function. The result is passed to the TRatioPlot constructor. Additionally, after calling TRatioPlot::Draw the upper and lower y axis titles are modified. Confidence interval bands are automatically drawn on the bottom (but can be disabled by draw option nobands). ; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; TRatioPlotClass for displaying ratios, differences and fit residuals.Definition TRatioPlot.h:43; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:16",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot2_8C.html:82,Guid,Guide,82,doc/master/ratioplot2_8C.html,https://root.cern,https://root.cern/doc/master/ratioplot2_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot2.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ratioplot2.py File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of a fit residual plot. ; Creates a histogram filled with random numbers from a gaussian distribution and fits it with a standard gaussian function. The result is passed to the TRatioPlot constructor. Additionally, after calling TRatioPlot::Draw the upper and lower y axis titles are modified. Confidence interval bands are automatically drawn on the bottom (but can be disabled by draw option nobands). Inspired by the tutorial of Paul Gessinger. . ; import ROOT; ; ROOT.gStyle.SetOptStat(0); ; c1 = ROOT.TCanvas(""c1"", ""fit residual simple""); h1 = ROOT.TH1D(""h1"", ""h1"", 50, -5, 5); ; h1.FillRandom(""gaus"", 2000); h1.Fit(""gaus""); h1.GetXaxis().SetTitle(""x""); ; rp1 = ROOT.TRatioPlot(h1); rp1.Draw(); rp1.GetLowerRefYaxis().SetTitle(""ratio""); rp1.GetUpperRefYaxis().SetTitle(""entries""); ; c1.Update(); ; AuthorAlberto Ferro ; Definition in file ratioplot2.py. tutorialshistratioplot2.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot2_8py.html:83,Guid,Guide,83,doc/master/ratioplot2_8py.html,https://root.cern,https://root.cern/doc/master/ratioplot2_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ratioplot3.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example which shows how you can get the graph of the lower plot and set the y axis range for it. ; Since the lower plot is not created until TRatioPlot::Draw is called, you can only use the method afterwards. ; void ratioplot3() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; c1->SetLogy();; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->SetMinimum(0.001);; h1->GetXaxis()->SetTitle(""x"");; h1->GetYaxis()->SetTitle(""y"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefGraph()->SetMinimum(-2);; rp1->GetLowerRefGraph()->SetMaximum(2);; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TH1::SetMinimumvirtual void SetMinimum(Double_t minimum=-1111)Definition TH1.h:405; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; TRatioPlotClass for displaying ratios, differences and fit residuals.Definition TRatioPlot.h:43; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot3_8C.html:82,Guid,Guide,82,doc/master/ratioplot3_8C.html,https://root.cern,https://root.cern/doc/master/ratioplot3_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot3.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ratioplot3.py File ReferenceTutorials » Histograms tutorials. Detailed Description; Example which shows how you can get the graph of the lower plot and set the y axis range for it. ; Since the lower plot is not created until TRatioPlot::Draw is called, you can only use the method afterwards. Inspired by the tutorial of Paul Gessinger. ; import ROOT; ; ROOT.gStyle.SetOptStat(0); c1 = ROOT.TCanvas(""c1"", ""fit residual simple""); c1.SetLogy(); ; h1 = ROOT.TH1D(""h1"", ""h1"", 50, -5, 5); h1.FillRandom(""gaus"", 2000); h1.Fit(""gaus""); h1.SetMinimum(0.001); h1.GetXaxis().SetTitle(""x""); h1.GetYaxis().SetTitle(""y""); ; rp1 = ROOT.TRatioPlot(h1); rp1.Draw(); rp1.GetLowerRefGraph().SetMinimum(-2); rp1.GetLowerRefGraph().SetMaximum(2); ; c1.Update(); AuthorAlberto Ferro ; Definition in file ratioplot3.py. tutorialshistratioplot3.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot3_8py.html:83,Guid,Guide,83,doc/master/ratioplot3_8py.html,https://root.cern,https://root.cern/doc/master/ratioplot3_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot4.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ratioplot4.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example that shows custom dashed lines on the lower plot, specified by a vector of floats. ; By default, dashed lines are drawn at certain points. You can either disable them, or specify where you want them to appear. ; void ratioplot4() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; h1->GetYaxis()->SetTitle(""y"");; auto rp1 = new TRatioPlot(h1);; std::vector<double> lines = {-3, -2, -1, 0, 1, 2, 3};; rp1->SetGridlines(lines);; rp1->Draw();; rp1->GetLowerRefGraph()->SetMinimum(-4);; rp1->GetLowerRefGraph()->SetMaximum(4);; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; TRatioPlotClass for displaying ratios, differences and fit residuals.Definition TRatioPlot.h:43; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; c1return c1Definition legend1.C:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot4_8C.html:82,Guid,Guide,82,doc/master/ratioplot4_8C.html,https://root.cern,https://root.cern/doc/master/ratioplot4_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot4.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ratioplot4.py File ReferenceTutorials » Histograms tutorials. Detailed Description; Example that shows custom dashed lines on the lower plot, specified by a vector of floats. ; By default, dashed lines are drawn at certain points. You can either disable them, or specify where you want them to appear. Inspired by the tutorial of Paul Gessinger. ; import ROOT; ; ROOT.gStyle.SetOptStat(0); ; c1 = ROOT.TCanvas(""c1"", ""fit residual simple""); h1 = ROOT.TH1D(""h1"", ""h1"", 50, -5, 5); h1.FillRandom(""gaus"", 2000); h1.Fit(""gaus""); h1.GetXaxis().SetTitle(""x""); h1.GetYaxis().SetTitle(""y""); ; rp1 = ROOT.TRatioPlot(h1); ; lines = ROOT.std.vector('double')(); for i in range(-3,4):lines.push_back(i); rp1.SetGridlines(lines); ; rp1.Draw(); rp1.GetLowerRefGraph().SetMinimum(-4); rp1.GetLowerRefGraph().SetMaximum(4); ; c1.Update(); AuthorAlberto Ferro ; Definition in file ratioplot4.py. tutorialshistratioplot4.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot4_8py.html:83,Guid,Guide,83,doc/master/ratioplot4_8py.html,https://root.cern,https://root.cern/doc/master/ratioplot4_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot5.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ratioplot5.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example that shows how you can set the colors of the confidence interval bands by using the method TRatioPlot::SetConfidenceIntervalColors. . ; void ratioplot5() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"",""0"");; h1->GetXaxis()->SetTitle(""x"");; h1->GetYaxis()->SetTitle(""y"");; auto rp1 = new TRatioPlot(h1);; rp1->SetConfidenceIntervalColors(kBlue, kRed);; rp1->Draw();; }; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; TRatioPlotClass for displaying ratios, differences and fit residuals.Definition TRatioPlot.h:43; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; c1return c1Definition legend1.C:41; h1TH1F * h1Definition legend1.C:5; ratioplot5Definition ratioplot5.py:1; AuthorPaul Gessinger ; Definition in file ratio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot5_8C.html:82,Guid,Guide,82,doc/master/ratioplot5_8C.html,https://root.cern,https://root.cern/doc/master/ratioplot5_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot5.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ratioplot5.py File ReferenceTutorials » Histograms tutorials. Detailed Description; Example that shows how you can set the colors of the confidence interval bands by using the method TRatioPlot::SetConfidenceIntervalColors. ; Inspired by the tutorial of Paul Gessinger. ; import ROOT; ; ROOT.gStyle.SetOptStat(0); ; c1 = ROOT.TCanvas(""c1"", ""fit residual simple""); h1 = ROOT.TH1D(""h1"", ""h1"", 50, -5, 5); h1.FillRandom(""gaus"", 2000); h1.Fit(""gaus""); h1.GetXaxis().SetTitle(""x""); h1.GetYaxis().SetTitle(""y""); ; rp1 = ROOT.TRatioPlot(h1); rp1.SetConfidenceIntervalColors(ROOT.kBlue, ROOT.kRed); rp1.Draw(); c1.Update(); AuthorAlberto Ferro ; Definition in file ratioplot5.py. tutorialshistratioplot5.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot5_8py.html:83,Guid,Guide,83,doc/master/ratioplot5_8py.html,https://root.cern,https://root.cern/doc/master/ratioplot5_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot6.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ratioplot6.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example showing a fit residual plot, where the separation margin has been set to 0. ; The last label of the lower plot's y axis is hidden automatically. ; void ratioplot6() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; gPad->SetFrameFillStyle(0);; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 5000);; TFitResultPtr fitres = h1->Fit(""gaus"", ""S0"");; h1->Sumw2();; h1->GetXaxis()->SetTitle(""x"");; h1->GetYaxis()->SetTitle(""y"");; auto rp1 = new TRatioPlot(h1, ""errfunc"");; rp1->SetGraphDrawOpt(""L"");; rp1->SetSeparationMargin(0.0);; rp1->Draw();; rp1->GetLowerRefGraph()->SetMinimum(-2);; rp1->GetLowerRefGraph()->SetMaximum(2);; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TFitResultPtrProvides an indirection to the TFitResult class and with a semantics identical to a TFitResult pointe...Definition TFitResultPtr.h:32; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TH1::Sumw2virtual void Sumw2(Bool_t flag=kTRUE)Create structure to store sum of squares of weights.Definition TH1.cxx:9020; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot6_8C.html:82,Guid,Guide,82,doc/master/ratioplot6_8C.html,https://root.cern,https://root.cern/doc/master/ratioplot6_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplot6.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ratioplot6.py File ReferenceTutorials » Histograms tutorials. Detailed Description; Example showing a fit residual plot, where the separation margin has been set to 0. ; The last label of the lower plot's y axis is hidden automatically. Inspired by the tutorial of Paul Gessinger. ; import ROOT; ; ROOT.gStyle.SetOptStat(0); ; c1 = ROOT.TCanvas(""c1"", ""fit residual simple""); ROOT.gPad.SetFrameFillStyle(0); ; h1 = ROOT.TH1D(""h1"", ""h1"", 50, -5, 5); h1.FillRandom(""gaus"", 5000); h1.Fit(""gaus"", ""S""); ; h1.Sumw2(); h1.GetXaxis().SetTitle(""x""); h1.GetYaxis().SetTitle(""y""); ; rp1 = ROOT.TRatioPlot(h1, ""errfunc""); rp1.SetGraphDrawOpt(""L""); rp1.SetSeparationMargin(0.0); rp1.Draw(); rp1.GetLowerRefGraph().SetMinimum(-2); rp1.GetLowerRefGraph().SetMaximum(2); ; c1.Update(); AuthorAlberto Ferro ; Definition in file ratioplot6.py. tutorialshistratioplot6.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot6_8py.html:83,Guid,Guide,83,doc/master/ratioplot6_8py.html,https://root.cern,https://root.cern/doc/master/ratioplot6_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/hist/ratioplotOld.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ratioplotOld.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example displaying two histograms and their ratio. ; This macro does not use the class TRatioPlot. For ROOT version >= 6.08 TRatioPlot should be used. See the other ratio plots examples in this folder. ; void ratioplotOld( ) {; // Define two gaussian histograms. Note the X and Y title are defined; // at booking time using the convention ""Hist_title ; X_title ; Y_title""; TH1F *h1 = new TH1F(""h1"", ""Two gaussian plots and their ratio;x title; h1 and h2 gaussian histograms"", 100, -5, 5);; TH1F *h2 = new TH1F(""h2"", ""h2"", 100, -5, 5);; h1->FillRandom(""gaus"");; h2->FillRandom(""gaus"");; ; // Define the Canvas; TCanvas *c = new TCanvas(""c"", ""canvas"", 800, 800);; ; // Upper plot will be in pad1; TPad *pad1 = new TPad(""pad1"", ""pad1"", 0, 0.3, 1, 1.0);; pad1->SetBottomMargin(0); // Upper and lower plot are joined; pad1->SetGridx(); // Vertical grid; pad1->Draw(); // Draw the upper pad: pad1; pad1->cd(); // pad1 becomes the current pad; h1->SetStats(0); // No statistics on upper plot; h1->Draw(); // Draw h1; h2->Draw(""same""); // Draw h2 on top of h1; ; #if ROOT_VERSION_CODE >= ROOT_VERSION(6,8,0); // Avoid the first label (0) to be clipped.; TAxis *axis = h1->GetYaxis();; axis->ChangeLabel(1, -1, -1, -1, -1, -1, "" "");; axis->SetLabelFont(43); // Absolute font size in pixel (precision 3); axis->SetLabelSize(15);; #else; // Do not draw the Y axis label on the upper plot and redraw a small; // axis instead, in order to avoid the first label (0) to be clipped.; h1->GetYaxis()->SetLabelSize(0.);; TGaxis *axis = new TGaxis( -5, 20, -5, 220, 20,220,510,"""");; axis->SetLabelFont(43); // Absolute font size in pixel (precision 3); axis->SetLabelSize(15);; axis->Draw();; #endif; ; // lower plot will be in pad; c->cd(); // Go back to the main canvas before defining pad2; TPad *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplotOld_8C.html:84,Guid,Guide,84,doc/master/ratioplotOld_8C.html,https://root.cern,https://root.cern/doc/master/ratioplotOld_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/rebin.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rebin.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Rebin a variable bin-width histogram. ; This tutorial illustrates how to:; create a variable bin-width histogram with a binning such that the population per bin is about the same.; rebin a variable bin-width histogram into another one. ; #include ""TH1.h""; #include ""TCanvas.h""; void rebin() {; //create a fix bin histogram; TH1F *h = new TH1F(""h"",""test rebin"",100,-3,3);; Int_t nentries = 1000;; h->FillRandom(""gaus"",nentries);; Double_t xbins[1001];; Int_t k=0;; TAxis *axis = h->GetXaxis();; for (Int_t i=1;i<=100;i++) {; Int_t y = (Int_t)h->GetBinContent(i);; if (y <=0) continue;; Double_t dx = axis->GetBinWidth(i)/y;; Double_t xmin = axis->GetBinLowEdge(i);; for (Int_t j=0;j<y;j++) {; xbins[k] = xmin +j*dx;; k++;; }; }; xbins[k] = axis->GetXmax();; //create a variable bin-width histogram out of fix bin histogram; //new rebinned histogram should have about 10 entries per bin; TH1F *hnew = new TH1F(""hnew"",""rebinned"",k,xbins);; hnew->FillRandom(""gaus"",10*nentries);; ; //rebin hnew keeping only 50% of the bins; Double_t xbins2[501];; Int_t kk=0;; for (Int_t j=0;j<k;j+=2) {; xbins2[kk] = xbins[j];; kk++;; }; xbins2[kk] = xbins[k];; TH1F *hnew2 = (TH1F*)hnew->Rebin(kk,""hnew2"",xbins2);; ; //draw the 3 histograms; TCanvas *c1 = new TCanvas(""c1"",""c1"",800,1000);; c1->Divide(1,3);; c1->cd(1);; h->Draw();; c1->cd(2);; hnew->Draw();; c1->cd(3);; hnew2->Draw();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvas.h; TH1.h; xminfloat xminDefinition THbookFile.cxx:95; nentriesint nentriesDefinition THbookFile.cxx:91; TAxisClass to manage histogram axis.Definition TAxis.h:31; TAxis::GetXmaxDouble_t GetXmax() constDefinition TAxis.h:140; TAxis::GetBinLowEdgevirtual Double_t GetBinLowEdge(Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rebin_8C.html:77,Guid,Guide,77,doc/master/rebin_8C.html,https://root.cern,https://root.cern/doc/master/rebin_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/rebin.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rebin.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_hist; 3/// \notebook -js; 4/// Rebin a variable bin-width histogram.; 5///; 6/// This tutorial illustrates how to:; 7/// - create a variable bin-width histogram with a binning such; 8/// that the population per bin is about the same.; 9/// - rebin a variable bin-width histogram into another one.; 10///; 11/// \macro_image; 12/// \macro_code; 13///; 14/// \author Rene Brun; 15 ; 16#include ""TH1.h""; 17#include ""TCanvas.h""; 18void rebin() {; 19 //create a fix bin histogram; 20 TH1F *h = new TH1F(""h"",""test rebin"",100,-3,3);; 21 Int_t nentries = 1000;; 22 h->FillRandom(""gaus"",nentries);; 23 Double_t xbins[1001];; 24 Int_t k=0;; 25 TAxis *axis = h->GetXaxis();; 26 for (Int_t i=1;i<=100;i++) {; 27 Int_t y = (Int_t)h->GetBinContent(i);; 28 if (y <=0) continue;; 29 Double_t dx = axis->GetBinWidth(i)/y;; 30 Double_t xmin = axis->GetBinLowEdge(i);; 31 for (Int_t j=0;j<y;j++) {; 32 xbins[k] = xmin +j*dx;; 33 k++;; 34 }; 35 }; 36 xbins[k] = axis->GetXmax();; 37 //create a variable bin-width histogram out of fix bin histogram; 38 //new rebinned histogram should have about 10 entries per bin; 39 TH1F *hnew = new TH1F(""hnew"",""rebinned"",k,xbins);; 40 hnew->FillRandom(""gaus"",10*nentries);; 41 ; 42 //rebin hnew keeping only 50% of the bins; 43 Double_t xbins2[501];; 44 Int_t kk=0;; 45 for (Int_t j=0;j<k;j+=2) {; 46 xbins2[kk] = xbins[j];; 47 kk++;; 48 }; 49 xbins2[kk] = xbins[k];; 50 TH1F *hnew2 = (TH1F*)hnew->Rebin(kk,""hnew2"",xbins2);; 51 ; 52 //draw the 3 histograms; 53 TCanvas *c1 = new TCanvas(""c1"",""c1"",800,1000);; 54 c1->Divide(1,3);; 55 c1->cd(1);; 56 h->Draw();; 57 c1->cd(2);; 58 hnew->Draw();; 59 c1->cd(3);; 60 hnew2->Draw();; 61}; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvas.h; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rebin_8C_source.html:74,Guid,Guide,74,doc/master/rebin_8C_source.html,https://root.cern,https://root.cern/doc/master/rebin_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/reverseaxis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. reverseaxis.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example showing an histogram with reverse axis. . ; void ReverseXAxis (TH1 *h);; void ReverseYAxis (TH1 *h);; ; void reverseaxis(); {; TH2F *hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; Float_t px, py;; TRandom r;; for (Int_t i = 0; i < 25000; i++) {; r.Rannor(px,py);; hpxpy->Fill(px,py);; }; TCanvas *c1 = new TCanvas(""c1"");; hpxpy->Draw(""colz"");; ReverseXAxis(hpxpy);; ReverseYAxis(hpxpy);; }; ; void ReverseXAxis(TH1 *h); {; // Remove the current axis; h->GetXaxis()->SetLabelOffset(999);; h->GetXaxis()->SetTickLength(0);; ; // Redraw the new axis; gPad->Update();; TGaxis *newaxis = new TGaxis(gPad->GetUxmax(),; gPad->GetUymin(),; gPad->GetUxmin(),; gPad->GetUymin(),; h->GetXaxis()->GetXmin(),; h->GetXaxis()->GetXmax(),; 510,""-"");; newaxis->SetLabelOffset(-0.03);; newaxis->Draw();; }; ; void ReverseYAxis(TH1 *h); {; // Remove the current axis; h->GetYaxis()->SetLabelOffset(999);; h->GetYaxis()->SetTickLength(0);; ; // Redraw the new axis; gPad->Update();; TGaxis *newaxis = new TGaxis(gPad->GetUxmin(),; gPad->GetUymax(),; gPad->GetUxmin()-0.001,; gPad->GetUymin(),; h->GetYaxis()->GetXmin(),; h->GetYaxis()->GetXmax(),; 510,""+"");; newaxis->SetLabelOffset(-0.03);; newaxis->Draw();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetLabelOffsetvoid SetLabelOffset(F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/reverseaxis_8C.html:83,Guid,Guide,83,doc/master/reverseaxis_8C.html,https://root.cern,https://root.cern/doc/master/reverseaxis_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/sparsehist.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. sparsehist.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Evaluate the performance of THnSparse vs TH1/2/3/nF for different numbers of dimensions and bins per dimension. ; The script calculates the bandwidth for filling and retrieving bin contents (in million entries per second) for these two histogramming techniques, where ""seconds"" is CPU and real time.; The first line of the plots contains the bandwidth based on the CPU time (THnSpase, TH1/2/3/nF*, ratio), the second line shows the plots for real time, and the third line shows the fraction of filled bins and memory used by THnSparse vs. TH1/2/3/nF.; The timing depends on the distribution and the amount of entries in the histograms; here, a Gaussian distribution (center is contained in the histograms) is used to fill each histogram with 1000 entries. The filling and reading is repeated until enough statistics have been collected.; tutorials/tree/drawsparse.C shows an example for visualizing a THnSparse. It creates a TTree which is then drawn using TParallelCoord.; This macro should be run in compiled mode due to the many nested loops that force CLING to disable its optimization. If run interpreted one would not benchmark THnSparse but CLING.; Run as: root[0] .L $ROOTSYS/tutorials/hist/sparsehist.C+; root[1] sparsehist(); ; #include ""TH1.h""; #include ""TH2.h""; #include ""TH3.h""; #include ""THn.h""; #include ""THnSparse.h""; #include ""TStopwatch.h""; #include ""TRandom.h""; #include ""TCanvas.h""; #include ""TFile.h""; #include ""TStyle.h""; #include ""TSystem.h""; ; #ifndef INT_MAX; #define INT_MAX std::numeric_limits<int>::max(); #endif; ; class TTimeHists {; public:; enum EHist { kHist, kSparse, kNumHist };; enum ETime { kReal, kCPU, kNumTime };; TTimeHists(Int_t dim, Int_t bins, Long_t num):; fValue(nullptr), fDim(dim), fBins(bins), fNum(num),; fSparse(nullptr), fHist(nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/sparsehist_8C.html:82,Guid,Guide,82,doc/master/sparsehist_8C.html,https://root.cern,https://root.cern/doc/master/sparsehist_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/statsEditing.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. statsEditing.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Edit statistics box. ; This example shows:; how to remove a stat element from the stat box; how to add a new one. ; TCanvas *statsEditing() {; // Create and plot a test histogram with stats; TCanvas *se = new TCanvas;; TH1F *h = new TH1F(""h"",""test"",100,-3,3);; h->FillRandom(""gaus"",3000);; gStyle->SetOptStat();; h->Draw();; se->Update();; ; // Retrieve the stat box; TPaveStats *ps = (TPaveStats*)se->GetPrimitive(""stats"");; ps->SetName(""mystats"");; TList *listOfLines = ps->GetListOfLines();; ; // Remove the RMS line; TText *tconst = ps->GetLineWith(""RMS"");; listOfLines->Remove(tconst);; ; // Add a new line in the stat box.; // Note that ""="" is a control character; TLatex *myt = new TLatex(0,0,""Test = 10"");; myt ->SetTextFont(42);; myt ->SetTextSize(0.04);; myt ->SetTextColor(kRed);; listOfLines->Add(myt);; ; // the following line is needed to avoid that the automatic redrawing of stats; h->SetStats(0);; ; se->Modified();; return se;; }; h#define h(i)Definition RSha256.hxx:106; kRed@ kRedDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TCanvasThe Canvas class.Definition TCanvas.h:23; TCanvas::Updatevoid Update() overrideUpdate canvas pad buffers.Definition TCanvas.cxx:2489; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TLatexTo draw Mathematical Formula.Definition TLatex.h:18; TListA doubly linked list.Definition TList.h:38; TList::Addvoid Add(TObject *obj) overrideD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/statsEditing_8C.html:84,Guid,Guide,84,doc/master/statsEditing_8C.html,https://root.cern,https://root.cern/doc/master/statsEditing_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/testSmooth.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. testSmooth.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Histogram smoothing. . ; int ipad = 1;; TCanvas * c1 = 0;; ; void smooth_hist(const char * fname, double xmin, double xmax, int n1, int n2) {; ; std::cout << ""smoothing a "" << fname << "" histogram"" << std::endl;; ; TH1D * h1 = new TH1D(""h1"",""h1"",100,xmin,xmax);; TH1D * h2 = new TH1D(""h2"",""h2"",100,xmin,xmax);; h1->FillRandom(fname,n1);; ; TH1D * h1_s = new TH1D(*h1);; h1_s->SetName(""h1_s"");; h1_s->Smooth();; ; h2->FillRandom(fname,n2);; ; double p1 = h1->Chi2Test(h2,"""");; double p2 = h1_s->Chi2Test(h2,""UU"");; if (p2 < p1) Error(""testSmooth"",""TH1::Smooth is not working correctly - a worst chi2 is obtained"");; ; std::cout << "" chi2 test non-smoothed histo "" << p1 << std::endl;; std::cout << "" chi2 test smoothed histo "" << p2 << std::endl;; ; double a1 = h1->AndersonDarlingTest(h2);; double a2 = h1_s->AndersonDarlingTest(h2);; ; std::cout << "" AD test non-smoothed histo "" << a1 << std::endl;; std::cout << "" AD test smoothed histo "" << a2 << std::endl;; ; double k1 = h1->KolmogorovTest(h2);; double k2 = h1_s->KolmogorovTest(h2);; ; std::cout << "" KS test non-smoothed histo "" << k1 << std::endl;; std::cout << "" KS test smoothed histo "" << k2 << std::endl;; ; c1->cd(ipad++);; h1->Draw(""E"");; h1_s->SetLineColor(kRed);; h1_s->Draw(""same"");; h2->Scale(double(n1)/n2);; h2->SetLineColor(kGreen);; h2->Draw(""same"");; }; ; void testSmooth(int n1 = 1000, int n2 = 1000000) {; ; TH1::AddDirectory(false);; ; c1 = new TCanvas();; c1->Divide(1,3);; ; ; smooth_hist(""gaus"",-5,5,n1,n2);; smooth_hist(""landau"",-5,15,n1,n2);; smooth_hist(""expo"",-5,0,n1,n2);; ; }; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; xminfloat xminDefi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/testSmooth_8C.html:82,Guid,Guide,82,doc/master/testSmooth_8C.html,https://root.cern,https://root.cern/doc/master/testSmooth_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/th2polyBoxes.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. th2polyBoxes.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly). ; The bins are boxes. ; TCanvas *th2polyBoxes() {; TCanvas *ch2p2 = new TCanvas(""ch2p2"",""ch2p2"",600,400);; gStyle->SetPalette(57);; TH2Poly *h2p = new TH2Poly();; h2p->SetName(""Boxes"");; h2p->SetTitle(""Boxes"");; ; Int_t i,j;; Int_t nx = 40;; Int_t ny = 40;; Double_t xval1,yval1,xval2,yval2;; Double_t dx=0.2, dy=0.1;; xval1 = 0.;; xval2 = dx;; ; for (i = 0; i<nx; i++) {; yval1 = 0.;; yval2 = dy;; for (j = 0; j<ny; j++) {; h2p->AddBin(xval1, yval1, xval2, yval2);; yval1 = yval2;; yval2 = yval2+yval2*dy;; }; xval1 = xval2;; xval2 = xval2+xval2*dx;; }; ; TRandom ran;; for (i = 0; i<300000; i++) {; h2p->Fill(50*ran.Gaus(2.,1), ran.Gaus(2.,1));; }; ; h2p->Draw(""COLZ"");; return ch2p2;; }; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH1::SetNamevoid SetName(const char *name) overrideChange the name of this histogram.Definition TH1.cxx:8960; TH2Poly2D Histogram with Polygonal BinsDefinition TH2Poly.h:66; TH2Poly::FillInt_t Fill(Double_t x, Double_t y) overrideIncrement the bin containing (x,y) by 1.Definition TH2Poly.cxx:664; TH2Poly::AddBinvirtual Int_t AddBin(TObject *poly)Adds a new bin to the histogram.Definition TH2Poly.cxx:297; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/th2polyBoxes_8C.html:84,Guid,Guide,84,doc/master/th2polyBoxes_8C.html,https://root.cern,https://root.cern/doc/master/th2polyBoxes_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/th2polyEurope.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. th2polyEurope.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it. ; The initial data are stored in TMultiGraphs. They represent the european countries. The histogram filling is done according to a Mercator projection, therefore the bin contains should be proportional to the real surface of the countries.; The initial data have been downloaded from: http://www.maproom.psu.edu/dcw/ This database was developed in 1991/1992 and national boundaries reflect political reality as of that time.; The script is shooting npoints (script argument) randomly over the Europe area. The number of points inside the countries should be proportional to the country surface The estimated surface is compared to the surfaces taken from wikipedia. ; Partitioning: Real Time = 1.31 seconds Cpu Time = 1.31 seconds; Filling : Real Time = 4.01 seconds Cpu Time = 4.01 seconds; THPoly Europe surface estimation error wrt wikipedia = 1.260096 per cent when using 500000 points; ; void th2polyEurope(Int_t npoints=500000); {; Int_t i,j;; Double_t lon1 = -25;; Double_t lon2 = 35;; Double_t lat1 = 34;; Double_t lat2 = 72;; Double_t R = (lat2-lat1)/(lon2-lon1);; Int_t W = 800;; Int_t H = (Int_t)(R*800);; gStyle->SetStatX(0.28);; gStyle->SetStatY(0.45);; gStyle->SetStatW(0.15);; ; // Canvas used to draw TH2Poly (the map); TCanvas *ce = new TCanvas(""ce"", ""ce"",0,0,W,H);; ce->ToggleEventStatus();; ce->SetGridx();; ce->SetGridy();; ; // Real surfaces taken from Wikipedia.; const Int_t nx = 36;; // see http://en.wikipedia.org/wiki/Area_and_population_of_European_countries; const char *countries[nx] = {; ""france"", ""spain"", ""sweden"", ""germany"", ""finland"",; ""norway"", ""poland"", ""italy"", ""yugoslavia"", ""united_kingdom"",; ""romania"", ""belarus"",""greece"", ""czechoslov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/th2polyEurope_8C.html:85,Guid,Guide,85,doc/master/th2polyEurope_8C.html,https://root.cern,https://root.cern/doc/master/th2polyEurope_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/th2polyHoneycomb.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. th2polyHoneycomb.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This tutorial illustrates how to create an histogram with hexagonal bins (TH2Poly). ; The method TH2Poly::Honeycomb allows to build automatically an honeycomb binning.; ; void th2polyHoneycomb(){; TCanvas *C = new TCanvas(""C"", ""C"", 1200, 600);; C->Divide(2,1);; ; TH2Poly *hc1 = new TH2Poly();; hc1->Honeycomb(0, 0, .1, 5, 5);; hc1->SetTitle(""Option V (default)"");; hc1->SetStats(0);; hc1->Fill(.1, .1, 15.);; hc1->Fill(.4, .4, 10.);; hc1->Fill(.5, .5, 20.);; ; TH2Poly *hc2 = new TH2Poly();; hc2->Honeycomb(0, 0, .1, 5, 5, ""h"");; hc2->SetTitle(""Option H"");; hc2->SetStats(0);; hc2->Fill(.1, .1, 15.);; hc2->Fill(.4, .4, 10.);; hc2->Fill(.5, .5, 20.);; ; C->cd(1)->SetGrid();; hc1->Draw(""colz L"");; C->cd(2)->SetGrid();; hc2->Draw(""colz L"");; }; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH1::SetStatsvirtual void SetStats(Bool_t stats=kTRUE)Set statistics option on/off.Definition TH1.cxx:8990; TH2Poly2D Histogram with Polygonal BinsDefinition TH2Poly.h:66; TH2Poly::FillInt_t Fill(Double_t x, Double_t y) overrideIncrement the bin containing (x,y) by 1.Definition TH2Poly.cxx:664; TH2Poly::Honeycombvoid Honeycomb(Double_t xstart, Double_t ystart, Double_t a, Int_t k, Int_t s, Option_t *option=""v"")Bins the histogram using a honeycomb structure If the option ""v"" is specified, the hexagons are drawn...Definition TH2Poly.cxx:1026; . AuthorOlivier Couet ; Definition in file th2polyHoneycomb.C. tutorialshistth2polyHoneycomb.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/th2polyHoneycomb_8C.html:88,Guid,Guide,88,doc/master/th2polyHoneycomb_8C.html,https://root.cern,https://root.cern/doc/master/th2polyHoneycomb_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/th2polyUSA.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. th2polyUSA.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This tutorial illustrates how to create an histogram with polygonal bins (TH2Poly), fill it and draw it using the col option. ; The initial data are stored in TMultiGraphs. They represent the USA map. Such histograms can be rendered in 3D using the option legogl.; The initial data have been downloaded from: http://www.maproom.psu.edu/dcw/ This database was developed in 1991/1992 and national boundaries reflect political reality as of that time.; ; void th2polyUSA(); {; Int_t i, bin;; const Int_t nx = 48;; const char *states [nx] = {; ""alabama"", ""arizona"", ""arkansas"", ""california"",; ""colorado"", ""connecticut"", ""delaware"", ""florida"",; ""georgia"", ""idaho"", ""illinois"", ""indiana"",; ""iowa"", ""kansas"", ""kentucky"", ""louisiana"",; ""maine"", ""maryland"", ""massachusetts"", ""michigan"",; ""minnesota"", ""mississippi"", ""missouri"", ""montana"",; ""nebraska"", ""nevada"", ""new_hampshire"", ""new_jersey"",; ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",; ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",; ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",; ""texas"", ""utah"", ""vermont"", ""virginia"",; ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming""; };; Double_t pop[nx] = {; 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,; 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,; 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,; 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,; 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,; 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270; };; ; TCanvas *usa = new TCanvas(""USA"", ""USA"");; usa->ToggleEventStatus();; Double_t lon1 = -130;; Double_t lon2 = -65;; Double_t lat1 = 24;; Double_t lat2 = 50;; TH2Po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/th2polyUSA_8C.html:82,Guid,Guide,82,doc/master/th2polyUSA_8C.html,https://root.cern,https://root.cern/doc/master/th2polyUSA_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/thstack2palettecolor.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. thstack2palettecolor.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Palette coloring for 2D histograms' stack is activated thanks to the option PFC (Palette Fill Color). ; When this option is given to THStack::Draw the histograms in the THStack get their color from the current color palette defined by gStyle->SetPalette(...). The color is determined according to the number of histograms.; In this example four 2D histograms are displayed with palette coloring. The color of each graph is picked inside the palette number 1. ; void thstack2palettecolor() ; {; gStyle->SetPalette(1);; auto h1 = new TH2F(""h1"",""h1"",20,0,6,20,-4,4);; auto h2 = new TH2F(""h2"",""h2"",20,0,6,20,-4,4);; auto h3 = new TH2F(""h3"",""h3"",20,0,6,20,-4,4);; auto h4 = new TH2F(""h4"",""h4"",20,0,6,20,-4,4);; auto h5 = new TH2F(""h5"",""h5"",20,0,6,20,-4,4);; h2->Fill(2.,0.,5);; h3->Fill(3.,0.,10);; h4->Fill(4.,0.,15);; h5->Fill(5.,0.,20);; auto hs = new THStack(""hs"",""Test of palette colored lego stack"");; hs->Add(h1);; hs->Add(h2);; hs->Add(h3);; hs->Add(h4);; hs->Add(h5);; hs->Draw(""0lego1 PFC"");; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; THStackThe Histogram stack class.Definition THStack.h:40; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; h1TH1F * h1Definition legend1.C:5; AuthorOlivier Couet ; Definition in file thstack2palettecolor.C. tutorialshistthstack2palettecolor.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/thstack2palettecolor_8C.html:92,Guid,Guide,92,doc/master/thstack2palettecolor_8C.html,https://root.cern,https://root.cern/doc/master/thstack2palettecolor_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/thstackcolorscheme.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. thstackcolorscheme.C File ReferenceTutorials » Histograms tutorials. Detailed Description; This example demonstrates how to use the accessible color schemes with THStack. ; In this example, the color scheme with six colors is used. It also shows that the grayscale version is an acceptable alternative. ; void thstackcolorscheme(); {; auto c1 = new TCanvas();; auto hs = new THStack(""hs"",""Stacked 1D histograms colored using 6-colors scheme"");; ; // Create six 1-d histograms and add them in the stack; auto h1st = new TH1F(""h1st"",""A"",100,-4,4);; h1st->FillRandom(""gaus"",20000);; h1st->SetFillColor(kP6Blue);; hs->Add(h1st);; ; auto h2st = new TH1F(""h2st"",""B"",100,-4,4);; h2st->FillRandom(""gaus"",15000);; h2st->SetFillColor(kP6Yellow);; hs->Add(h2st);; ; auto h3st = new TH1F(""h3st"",""C"",100,-4,4);; h3st->FillRandom(""gaus"",10000);; h3st->SetFillColor(kP6Red);; hs->Add(h3st);; ; auto h4st = new TH1F(""h4st"",""D"",100,-4,4);; h4st->FillRandom(""gaus"",10000);; h4st->SetFillColor(kP6Grape);; hs->Add(h4st);; ; auto h5st = new TH1F(""h5st"",""E"",100,-4,4);; h5st->FillRandom(""gaus"",10000);; h5st->SetFillColor(kP6Gray);; hs->Add(h5st);; ; auto h6st = new TH1F(""h6st"",""F"",100,-4,4);; h6st->FillRandom(""gaus"",10000);; h6st->SetFillColor(kP6Violet);; hs->Add(h6st);; ; // draw the stack with colors; hs->Draw();; TLegend *l = gPad->BuildLegend(.8,.55,1.,.9,"""",""F"");; l->SetLineWidth(0);; l->SetFillStyle(0);; ; // draw the stack using gray-scale; auto c2 = new TCanvas();; c2->SetGrayscale();; hs->Draw();; l->Draw();; }; kP6Red@ kP6RedDefinition Rtypes.h:69; kP6Grape@ kP6GrapeDefinition Rtypes.h:69; kP6Gray@ kP6GrayDefinition Rtypes.h:69; kP6Yellow@ kP6YellowDefinition Rtypes.h:69; kP6Violet@ kP6VioletDefinition Rtypes.h:69; kP6Blue@ kP6BlueDefinition Rtypes.h:69; gPad#define gPadDefinition TVirtualPad.h:308; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/thstackcolorscheme_8C.html:90,Guid,Guide,90,doc/master/thstackcolorscheme_8C.html,https://root.cern,https://root.cern/doc/master/thstackcolorscheme_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/thstackpalettecolor.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. thstackpalettecolor.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Palette coloring for histograms' stack is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color). ; When one of these options is given to THStack::Draw the histograms in the THStack get their color from the current color palette defined by gStyle->SetPalette(...). The color is determined according to the number of histograms.; In this example four histograms are displayed with palette coloring. The color of each histogram is picked inside the palette kOcean. ; void thstackpalettecolor(); {; auto hs = new THStack(""hs"",""Stacked 1D histograms colored using kOcean palette"");; ; gStyle->SetPalette(kOcean);; ; // Create three 1-d histograms and add them in the stack; auto h1st = new TH1F(""h1st"",""test hstack"",100,-4,4);; h1st->FillRandom(""gaus"",20000);; hs->Add(h1st);; ; auto h2st = new TH1F(""h2st"",""test hstack"",100,-4,4);; h2st->FillRandom(""gaus"",15000);; hs->Add(h2st);; ; auto h3st = new TH1F(""h3st"",""test hstack"",100,-4,4);; h3st->FillRandom(""gaus"",10000);; hs->Add(h3st);; ; // draw the stack; hs->Draw(""pfc nostack"");; }; kOcean@ kOceanDefinition TColor.h:119; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; THStackThe Histogram stack class.Definition THStack.h:40; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; AuthorOlivier Couet ; Definition in file thstackpalettecolor.C. tutorialshistthstackpalettecolor.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/thstackpalettecolor_8C.html:91,Guid,Guide,91,doc/master/thstackpalettecolor_8C.html,https://root.cern,https://root.cern/doc/master/thstackpalettecolor_8C.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/tprofile2polyRealistic.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tprofile2polyRealistic.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Different charges depending on region . ; #include <iostream>; #include <fstream>; #include <TProfile2Poly.h>; #include <TProfile2D.h>; #include <TCanvas.h>; #include <TRandom.h>; #include <TROOT.h>; ; void tprofile2polyRealistic(Int_t numEvents=100000); {; int NUM_LS = 8;; TCanvas *c1 = new TCanvas(""c1"", ""moving charge"", 900, 400);; TCanvas *c2 = new TCanvas(""c2"", ""Merge Individual moving charge plots"", 800, 400);; ; c1->Divide(NUM_LS, 3);; c2->Divide(3,1);; ; // -------------------- Construct Reference plot bins ------------------------; auto new_avg = new TProfile2Poly();; ; auto tot_avg_ls = new TProfile2Poly[NUM_LS];; auto det_avg_ls = new TProfile2Poly[NUM_LS];; auto det_err_ls = new TProfile2Poly[NUM_LS];; auto tot_merge = new TProfile2Poly();; auto det_avg_merge = new TProfile2Poly();; auto det_err_merge = new TProfile2Poly();; ; float minx = -15;; float maxx = 15;; float miny = -15;; float maxy = 15;; float binsz = 0.5;; ; for (float i = minx; i < maxx; i += binsz) {; for (float j = miny; j < maxy; j += binsz) {; tot_merge->AddBin(i, j, i + binsz, j + binsz);; for (int l = 0; l < NUM_LS; ++l) {; tot_avg_ls[l].AddBin(i, j, i + binsz, j + binsz);; }; }; }; ; // -------------------- Construct detector bins ------------------------; auto h2p = new TH2Poly();; auto tp2p = new TProfile2Poly();; std::ifstream infile;; TString dir = gROOT->GetTutorialDir();; dir.Append(""/hist/data/tprofile2poly_tutorial.data"");; infile.open(dir.Data());; ; if (!infile) // Verify that the file was open successfully; {; std::cerr << dir.Data() << std::endl; // Report error; std::cerr << ""Error code: "" << std::strerror(errno) << std::endl; // Get some info as to why; return;; }; std::cout << "" WE ARE AFTER LOADING DATA "" << std::endl;; ; std::vector<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tprofile2polyRealistic_8C.html:94,Guid,Guide,94,doc/master/tprofile2polyRealistic_8C.html,https://root.cern,https://root.cern/doc/master/tprofile2polyRealistic_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/tprofile2polyRealisticModuleError.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tprofile2polyRealisticModuleError.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Simulate faulty detector panel w.r.t. ; particle charge. ; #include <iostream>; #include <fstream>; #include <vector>; ; void tprofile2polyRealisticModuleError(Int_t numEvents = 1000000); {; TCanvas *c1 = new TCanvas(""c1"", ""4 Malfunctioning Panels"", 800, 400);; c1->Divide(3, 1);; ; // -------------------- Construct detector bins ------------------------; auto th2p = new TH2Poly();; auto avg = new TProfile2Poly();; auto err = new TProfile2Poly();; ; std::ifstream infile;; TString dir = gROOT->GetTutorialDir();; dir.Append(""/hist/data/tprofile2poly_tutorial.data"");; infile.open(dir.Data());; ; if (!infile) // Verify that the file was open successfully; {; std::cerr << dir.Data() << std::endl; // Report error; std::cerr << ""Error code: "" << std::strerror(errno) << std::endl; // Get some info as to why; return;; }; ; std::vector<std::pair<Double_t, Double_t>> allCoords;; Double_t a, b;; while (infile >> a >> b) ; allCoords.emplace_back(a, b);; ; if (allCoords.size() % 3 != 0) {; std::cout << ""[ERROR] Bad file"" << std::endl;; return;; }; ; Double_t x[3], y[3];; for (Int_t i = 0; i < allCoords.size(); i += 3) {; x[0] = allCoords[i + 0].first;; y[0] = allCoords[i + 0].second;; x[1] = allCoords[i + 1].first;; y[1] = allCoords[i + 1].second;; x[2] = allCoords[i + 2].first;; y[2] = allCoords[i + 2].second;; th2p->AddBin(3, x, y);; avg->AddBin(3, x, y);; err->AddBin(3, x, y);; }; ; // -------------------- Generate particles ------------------------; TRandom ran;; for (int j = 0; j < numEvents; ++j) {; Double_t r1 = ran.Gaus(0, 10);; Double_t r2 = ran.Gaus(0, 8);; Double_t rok = ran.Gaus(20, 2);; Double_t rbad1 = ran.Gaus(1, 2);; Double_t rbad2 = ran.Gaus(2, 0);; ; Double_t val = rok;; // -------------------- Malfunctioni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tprofile2polyRealisticModuleError_8C.html:105,Guid,Guide,105,doc/master/tprofile2polyRealisticModuleError_8C.html,https://root.cern,https://root.cern/doc/master/tprofile2polyRealisticModuleError_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/transpad.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. transpad.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of a canvas showing two histograms with different scales. ; The second histogram is drawn in a transparent pad. ; void transpad(); {; TCanvas *c1 = new TCanvas(""c1"",""transparent pad"",200,10,700,500);; TPad *pad1 = new TPad(""pad1"","""",0,0,1,1);; TPad *pad2 = new TPad(""pad2"","""",0,0,1,1);; pad2->SetFillStyle(4000); //will be transparent; pad1->Draw();; pad1->cd();; ; TH1F *h1 = new TH1F(""h1"",""h1"",100,-3,3);; TH1F *h2 = new TH1F(""h2"",""h2"",100,-3,3);; TRandom r;; for (Int_t i=0;i<100000;i++) {; Double_t x1 = r.Gaus(-1,0.5);; Double_t x2 = r.Gaus(1,1.5);; if (i <1000) h1->Fill(x1);; h2->Fill(x2);; }; h1->Draw();; pad1->Update(); //this will force the generation of the ""stats"" box; TPaveStats *ps1 = (TPaveStats*)h1->GetListOfFunctions()->FindObject(""stats"");; ps1->SetX1NDC(0.4); ps1->SetX2NDC(0.6);; pad1->Modified();; c1->cd();; ; //compute the pad range with suitable margins; Double_t ymin = 0;; Double_t ymax = 2000;; Double_t dy = (ymax-ymin)/0.8; //10 per cent margins top and bottom; Double_t xmin = -3;; Double_t xmax = 3;; Double_t dx = (xmax-xmin)/0.8; //10 per cent margins left and right; pad2->Range(xmin-0.1*dx,ymin-0.1*dy,xmax+0.1*dx,ymax+0.1*dy);; pad2->Draw();; pad2->cd();; h2->SetLineColor(kRed);; h2->Draw(""][sames"");; pad2->Update();; TPaveStats *ps2 = (TPaveStats*)h2->GetListOfFunctions()->FindObject(""stats"");; ps2->SetX1NDC(0.65); ps2->SetX2NDC(0.85);; ps2->SetTextColor(kRed);; ; // draw axis on the right side of the pad; TGaxis *axis = new TGaxis(xmax,ymin,xmax,ymax,ymin,ymax,50510,""+L"");; axis->SetLabelColor(kRed);; axis->Draw();; }; ; ; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes.h:66; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/transpad_8C.html:80,Guid,Guide,80,doc/master/transpad_8C.html,https://root.cern,https://root.cern/doc/master/transpad_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/twoscales.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. twoscales.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of macro illustrating how to superimpose two histograms with different scales in the ""same"" pad. . ; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TH1.h""; #include ""TGaxis.h""; #include ""TRandom.h""; ; void twoscales(); {; TCanvas *c1 = new TCanvas(""c1"",""hists with different scales"",600,400);; ; //create/fill draw h1; gStyle->SetOptStat(kFALSE);; TH1F *h1 = new TH1F(""h1"",""my histogram"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) h1->Fill(gRandom->Gaus(0,1));; h1->Draw();; c1->Update();; ; //create hint1 filled with the bins integral of h1; TH1F *hint1 = new TH1F(""hint1"",""h1 bins integral"",100,-3,3);; Float_t sum = 0;; for (i=1;i<=100;i++) {; sum += h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }; ; //scale hint1 to the pad coordinates; Float_t rightmax = 1.1*hint1->GetMaximum();; Float_t scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");; ; //draw an axis on the right side; TGaxis *axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetLabelColor(kRed);; axis->Draw();; }; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kRed@ kRedDefinition Rtypes.h:66; TCanvas.h; TGaxis.h; TH1.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetLabelColorvoid SetL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/twoscales_8C.html:81,Guid,Guide,81,doc/master/twoscales_8C.html,https://root.cern,https://root.cern/doc/master/twoscales_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/twoscales.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. twoscales.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_hist; 3/// \notebook; 4/// Example of macro illustrating how to superimpose two histograms; 5/// with different scales in the ""same"" pad.; 6///; 7/// \macro_image; 8/// \macro_code; 9///; 10/// \author Rene Brun; 11 ; 12#include ""TCanvas.h""; 13#include ""TStyle.h""; 14#include ""TH1.h""; 15#include ""TGaxis.h""; 16#include ""TRandom.h""; 17 ; 18void twoscales(); 19{; 20 TCanvas *c1 = new TCanvas(""c1"",""hists with different scales"",600,400);; 21 ; 22 //create/fill draw h1; 23 gStyle->SetOptStat(kFALSE);; 24 TH1F *h1 = new TH1F(""h1"",""my histogram"",100,-3,3);; 25 Int_t i;; 26 for (i=0;i<10000;i++) h1->Fill(gRandom->Gaus(0,1));; 27 h1->Draw();; 28 c1->Update();; 29 ; 30 //create hint1 filled with the bins integral of h1; 31 TH1F *hint1 = new TH1F(""hint1"",""h1 bins integral"",100,-3,3);; 32 Float_t sum = 0;; 33 for (i=1;i<=100;i++) {; 34 sum += h1->GetBinContent(i);; 35 hint1->SetBinContent(i,sum);; 36 }; 37 ; 38 //scale hint1 to the pad coordinates; 39 Float_t rightmax = 1.1*hint1->GetMaximum();; 40 Float_t scale = gPad->GetUymax()/rightmax;; 41 hint1->SetLineColor(kRed);; 42 hint1->Scale(scale);; 43 hint1->Draw(""same"");; 44 ; 45 //draw an axis on the right side; 46 TGaxis *axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; 47 gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; 48 axis->SetLineColor(kRed);; 49 axis->SetLabelColor(kRed);; 50 axis->Draw();; 51}; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kRed@ kRedDefinition Rtypes.h:66; TCanvas.h; TGaxis.h; TH1.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TAttLine::SetLineC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/twoscales_8C_source.html:78,Guid,Guide,78,doc/master/twoscales_8C_source.html,https://root.cern,https://root.cern/doc/master/twoscales_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/twoscales.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; twoscales.py File ReferenceTutorials » Histograms tutorials. Detailed Description; Example of macro illustrating how to superimpose two histograms with different scales in the ""same"" pad. ; Inspired by work of Rene Brun. ; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TH1.h""; #include ""TGaxis.h""; #include ""TRandom.h""; ; import ROOT; ; c1 = ROOT.TCanvas(""c1"",""hists with different scales"",600,400); ; ROOT.gStyle.SetOptStat(False); ; h1 = ROOT.TH1F(""h1"",""my histogram"",100,-3,3); ; for i in range(10000) :; h1.Fill(ROOT.gRandom.Gaus(0,1)); ; h1.Draw(); c1.Update(); ; hint1 = ROOT.TH1F(""hint1"",""h1 bins integral"",100,-3,3); ; sum = 0; for i in range(1,101) :; sum += h1.GetBinContent(i); hint1.SetBinContent(i,sum); ; rightmax = 1.1*hint1.GetMaximum(); scale = ROOT.gPad.GetUymax()/rightmax; hint1.SetLineColor(ROOT.kRed); hint1.Scale(scale); hint1.Draw(""same""); ; axis = ROOT.TGaxis(ROOT.gPad.GetUxmax(),ROOT.gPad.GetUymin(),; ROOT.gPad.GetUxmax(), ROOT.gPad.GetUymax(),0,rightmax,510,""+L""); axis.SetLineColor(ROOT.kRed); axis.SetLabelColor(ROOT.kRed); axis.Draw(); AuthorAlberto Ferro ; Definition in file twoscales.py. tutorialshisttwoscales.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/twoscales_8py.html:82,Guid,Guide,82,doc/master/twoscales_8py.html,https://root.cern,https://root.cern/doc/master/twoscales_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/twoscales.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. twoscales.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_hist; 3## \notebook; 4## Example of macro illustrating how to superimpose two histograms; 5## with different scales in the ""same"" pad.; 6## Inspired by work of Rene Brun.; 7##; 8## \macro_image; 9## \macro_code; 10##; 11## \author Alberto Ferro; 12 ; 13#include ""TCanvas.h""; 14#include ""TStyle.h""; 15#include ""TH1.h""; 16#include ""TGaxis.h""; 17#include ""TRandom.h""; 18 ; 19import ROOT; 20 ; 21c1 = ROOT.TCanvas(""c1"",""hists with different scales"",600,400); 22 ; 23ROOT.gStyle.SetOptStat(False); 24 ; 25h1 = ROOT.TH1F(""h1"",""my histogram"",100,-3,3); 26 ; 27for i in range(10000) :; 28 h1.Fill(ROOT.gRandom.Gaus(0,1)); 29 ; 30h1.Draw(); 31c1.Update(); 32 ; 33hint1 = ROOT.TH1F(""hint1"",""h1 bins integral"",100,-3,3); 34 ; 35sum = 0; 36for i in range(1,101) :; 37 sum += h1.GetBinContent(i); 38 hint1.SetBinContent(i,sum); 39 ; 40rightmax = 1.1*hint1.GetMaximum(); 41scale = ROOT.gPad.GetUymax()/rightmax; 42hint1.SetLineColor(ROOT.kRed); 43hint1.Scale(scale); 44hint1.Draw(""same""); 45 ; 46axis = ROOT.TGaxis(ROOT.gPad.GetUxmax(),ROOT.gPad.GetUymin(),; 47 ROOT.gPad.GetUxmax(), ROOT.gPad.GetUymax(),0,rightmax,510,""+L""); 48axis.SetLineColor(ROOT.kRed); 49axis.SetLabelColor(ROOT.kRed); 50axis.Draw(). tutorialshisttwoscales.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:09 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/twoscales_8py_source.html:79,Guid,Guide,79,doc/master/twoscales_8py_source.html,https://root.cern,https://root.cern/doc/master/twoscales_8py_source.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/xyplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. xyplot.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Example showing how to produce a plot with an orthogonal axis system centered at (0,0). . ; void xyplot(); {; TCanvas *c = new TCanvas(""c"",""XY plot"",200,10,700,500);; ; // Remove the frame; c->SetFillColor(kWhite);; c->SetFrameLineColor(kWhite);; c->SetFrameBorderMode(0);; ; // Define and draw a curve the frame; const Int_t n = 4;; Double_t x[n] = {-1, -3, -9, 3};; Double_t y[n] = {-1000, 900, 300, 300};; TGraph* gr = new TGraph(n,x,y);; gr->SetTitle(""XY plot"");; gr->SetMinimum(-1080);; gr->SetMaximum(1080);; gr->SetLineColor(kRed);; gr->Draw(""AC*"");; ; // Remove the frame's axis; gr->GetHistogram()->GetYaxis()->SetTickLength(0);; gr->GetHistogram()->GetXaxis()->SetTickLength(0);; gr->GetHistogram()->GetYaxis()->SetLabelSize(0);; gr->GetHistogram()->GetXaxis()->SetLabelSize(0);; gr->GetHistogram()->GetXaxis()->SetAxisColor(0);; gr->GetHistogram()->GetYaxis()->SetAxisColor(0);; ; gPad->Update();; ; // Draw orthogonal axis system centered at (0,0).; // Draw the Y axis. Note the 4th label is erased with SetLabelAttributes; TGaxis *yaxis = new TGaxis(0, gPad->GetUymin(),; 0, gPad->GetUymax(),; gPad->GetUymin(),gPad->GetUymax(),6,""+LN"");; yaxis->ChangeLabel(4,-1,0.);; yaxis->Draw();; ; // Draw the Y-axis title.; TLatex *ytitle = new TLatex(-0.5,gPad->GetUymax(),""Y axis"");; ytitle->Draw();; ytitle->SetTextSize(0.03);; ytitle->SetTextAngle(90.);; ytitle->SetTextAlign(31);; ; // Draw the X axis; TGaxis *xaxis = new TGaxis(gPad->GetUxmin(), 0,; gPad->GetUxmax(), 0,; gPad->GetUxmin(),gPad->GetUxmax(),510,""+L"");; xaxis->Draw();; ; // Draw the X axis title.; TLatex *xtitle = new TLatex(gPad->GetUxmax(),-200.,""X axis"");; xtitle->Draw();; xtitle->SetTextAlign(31);; xtitle->SetTextSize(0.03);; }; c#define c(i)Definition RSha256.hxx:101; Int_tint Int_tDefinition RtypesCore.h:45;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/xyplot_8C.html:78,Guid,Guide,78,doc/master/xyplot_8C.html,https://root.cern,https://root.cern/doc/master/xyplot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hist/xyplot.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. xyplot.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_hist; 3/// \notebook; 4/// Example showing how to produce a plot with an orthogonal axis system; 5/// centered at (0,0).; 6///; 7/// \macro_image; 8/// \macro_code; 9///; 10/// \author Olivier Couet; 11 ; 12void xyplot(); 13{; 14 TCanvas *c = new TCanvas(""c"",""XY plot"",200,10,700,500);; 15 ; 16 // Remove the frame; 17 c->SetFillColor(kWhite);; 18 c->SetFrameLineColor(kWhite);; 19 c->SetFrameBorderMode(0);; 20 ; 21 // Define and draw a curve the frame; 22 const Int_t n = 4;; 23 Double_t x[n] = {-1, -3, -9, 3};; 24 Double_t y[n] = {-1000, 900, 300, 300};; 25 TGraph* gr = new TGraph(n,x,y);; 26 gr->SetTitle(""XY plot"");; 27 gr->SetMinimum(-1080);; 28 gr->SetMaximum(1080);; 29 gr->SetLineColor(kRed);; 30 gr->Draw(""AC*"");; 31 ; 32 // Remove the frame's axis; 33 gr->GetHistogram()->GetYaxis()->SetTickLength(0);; 34 gr->GetHistogram()->GetXaxis()->SetTickLength(0);; 35 gr->GetHistogram()->GetYaxis()->SetLabelSize(0);; 36 gr->GetHistogram()->GetXaxis()->SetLabelSize(0);; 37 gr->GetHistogram()->GetXaxis()->SetAxisColor(0);; 38 gr->GetHistogram()->GetYaxis()->SetAxisColor(0);; 39 ; 40 gPad->Update();; 41 ; 42 // Draw orthogonal axis system centered at (0,0).; 43 // Draw the Y axis. Note the 4th label is erased with SetLabelAttributes; 44 TGaxis *yaxis = new TGaxis(0, gPad->GetUymin(),; 45 0, gPad->GetUymax(),; 46 gPad->GetUymin(),gPad->GetUymax(),6,""+LN"");; 47 yaxis->ChangeLabel(4,-1,0.);; 48 yaxis->Draw();; 49 ; 50 // Draw the Y-axis title.; 51 TLatex *ytitle = new TLatex(-0.5,gPad->GetUymax(),""Y axis"");; 52 ytitle->Draw();; 53 ytitle->SetTextSize(0.03);; 54 ytitle->SetTextAngle(90.);; 55 ytitle->SetTextAlign(31);; 56 ; 57 // Draw the X axis; 58 TGaxis *xaxis = new TGaxis(gPad->GetUxmin(), 0,; 59 gPad->GetUxmax(), 0,; 60 gPad->GetUxmin(),gPad->GetUxmax(),510,""+L"");; 61 xax",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/xyplot_8C_source.html:75,Guid,Guide,75,doc/master/xyplot_8C_source.html,https://root.cern,https://root.cern/doc/master/xyplot_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/hsimple.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hsimple.C File ReferenceTutorials. Detailed Description; This program creates : . a one dimensional histogram; a two dimensional histogram; a profile histogram; a memory-resident ntuple. These objects are filled with some random numbers and saved on a file. If get=1 the macro returns a pointer to the TFile of ""hsimple.root"" if this file exists, otherwise it is created. The file ""hsimple.root"" is created in $ROOTSYS/tutorials if the caller has write access to this directory, otherwise the file is created in $PWD. ; hsimple : Real Time = 0.08 seconds Cpu Time = 0.08 seconds; (TFile *) 0x55fa02b55090; ; #include <TFile.h>; #include <TNtuple.h>; #include <TH2.h>; #include <TProfile.h>; #include <TCanvas.h>; #include <TFrame.h>; #include <TROOT.h>; #include <TSystem.h>; #include <TRandom3.h>; #include <TBenchmark.h>; #include <TInterpreter.h>; ; TFile *hsimple(Int_t getFile=0); {; TString filename = ""hsimple.root"";; TString dir = gROOT->GetTutorialDir();; dir.ReplaceAll(""/./"",""/"");; TFile *hfile = nullptr;; if (getFile) {; // if the argument getFile =1 return the file ""hsimple.root""; // if the file does not exist, it is created; TString fullPath = dir+""hsimple.root"";; if (!gSystem->AccessPathName(fullPath,kFileExists)) {; hfile = TFile::Open(fullPath); //in $ROOTSYS/tutorials; if (hfile) return hfile;; }; //otherwise try $PWD/hsimple.root; if (!gSystem->AccessPathName(""hsimple.root"",kFileExists)) {; hfile = TFile::Open(""hsimple.root""); //in current dir; if (hfile) return hfile;; }; }; //no hsimple.root file found. Must generate it !; //generate hsimple.root in current directory if we have write access; if (gSystem->AccessPathName(""."",kWritePermission)) {; printf(""you must run the script in a directory with write access\n"");; return nullptr;; }; hfile = (TFile*)gROOT->FindObject(filename); if (hfile) hfile->Close();; hfile = new TFile(filename,""RECRE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hsimple_8C.html:74,Guid,Guide,74,doc/master/hsimple_8C.html,https://root.cern,https://root.cern/doc/master/hsimple_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/io Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. io Directory Reference. Directory dependency graph for io:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Files;  copyFiles.C;   Example of script showing how to copy all objects (including directories) from a source file. ;  ;  dirs.C;   This macro illustrates how to create a hierarchy of directories in a Root file. ;  ;  double32.C;   Tutorial illustrating use and precision of the Double32_t data type You should run this tutorial with ACLIC: a dictionary will be automatically created. ;  ;  fildir.C;   This macro displays the ROOT Directory data structure ;  ;  file.C;   This macro displays the physical ROOT file structure ;  ;  float16.C;   Tutorial illustrating use and precision of the Float16_t data type. ;  ;  hadd.C;   Macro to add histogram files This macro is kept for didactical purposes only: use instead the executable $ROOTSYS/bin/hadd ! ;  ;  importCode.C;   Example of script showing how to create a ROOT file with subdirectories. ;  ;  loopdir.C;   Example script to loop over all the objects of a ROOT file directory and print in Postscript all the TH1 derived objects. ;  ;  loopdir11.C;   Example script to loop over all the objects of a ROOT file directory and print in Postscript all the TH1 derived objects. ;  ;  mergeSelective.C;   Merge only part of the content of a set of files. ;  ;  readCode.C;   Example of script showing how to navigate in a ROOT file with sub-directories and read the objects in each sub-directory. ;  ;  testMergeCont.C;   Macro demonstrating the merging of containers. ;  ;  testTMPIFile.C;  This macro shows the usage of TMPIFile to simulate event reconstruction and merging them in parallel. ;  . tutorialsio. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_715fafd9bc85e47ed5557926189f8f1b.html:72,Guid,Guide,72,doc/master/dir_715fafd9bc85e47ed5557926189f8f1b.html,https://root.cern,https://root.cern/doc/master/dir_715fafd9bc85e47ed5557926189f8f1b.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/io/double32.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. double32.C File ReferenceTutorials » IO tutorials. Detailed Description; Tutorial illustrating use and precision of the Double32_t data type You should run this tutorial with ACLIC: a dictionary will be automatically created. ; root > .x double32.C+; The following cases are supported for streaming a Double32_t type depending on the range declaration in the comment field of the data member:. Case Declaration . A Double32_t fNormal; . B Double32_t fTemperature; //[0,100] . C Double32_t fCharge; //[-1,1,2] . D Double32_t fVertex[3]; //[-30,30,10] . E Double32_t fChi2; //[0,0,6] . F Int_t fNsp;; Double32_t* fPointValue; //[fNsp][0,3] . Case A fNormal is converted from a Double_t to a Float_t; Case B fTemperature is converted to a 32 bit unsigned integer; Case C fCharge is converted to a 2 bits unsigned integer; Case D the array elements of fVertex are converted to an unsigned 10 bits integer; Case E fChi2 is converted to a Float_t with truncated precision at 6 bits; Case F the fNsp elements of array fPointvalue are converted to an unsigned 32 bit integer. Note that the range specifier must follow the dimension specifier. Case B has more precision than case A: 9 to 10 significative digits and 6 to 7 digits respectively. The range specifier has the general format: [xmin,xmax] or [xmin,xmax,nbits]. Examples; [0,1]; [-10,100];; [-pi,pi], [-pi/2,pi/4],[-2pi,2*pi]; [-10,100,16]; [0,0,8] Note that:; If nbits is not specified, or nbits <2 or nbits>32 it is set to 32; If (xmin==0 and xmax==0 and nbits <=14) the double word will be converted to a float and its mantissa truncated to nbits significative bits. IMPORTANT NOTE; Lets assume an original variable double x. When using the format [0,0,8] (i.e. range not specified) you get the best relative precision when storing and reading back the truncated x, say xt. The variance of (x-xt)/x will be better than",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/double32_8C.html:78,Guid,Guide,78,doc/master/double32_8C.html,https://root.cern,https://root.cern/doc/master/double32_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/io/double32.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. double32.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_io; 3/// \notebook -js; 4/// Tutorial illustrating use and precision of the Double32_t data type; 5/// You should run this tutorial with ACLIC: a dictionary will be automatically; 6/// created.; 7/// ~~~{.bash}; 8/// root > .x double32.C+; 9/// ~~~; 10/// The following cases are supported for streaming a Double32_t type; 11/// depending on the range declaration in the comment field of the data member:; 12///; 13/// Case | Declaration; 14/// -----|------------; 15/// A | Double32_t fNormal;; 16/// B | Double32_t fTemperature; //[0,100]; 17/// C | Double32_t fCharge; //[-1,1,2]; 18/// D | Double32_t fVertex[3]; //[-30,30,10]; 19/// E | Double32_t fChi2; //[0,0,6]; 20/// F | Int_t fNsp;<br>Double32_t* fPointValue; //[fNsp][0,3]; 21///; 22/// * Case A fNormal is converted from a Double_t to a Float_t; 23/// * Case B fTemperature is converted to a 32 bit unsigned integer; 24/// * Case C fCharge is converted to a 2 bits unsigned integer; 25/// * Case D the array elements of fVertex are converted to an unsigned 10 bits integer; 26/// * Case E fChi2 is converted to a Float_t with truncated precision at 6 bits; 27/// * Case F the fNsp elements of array fPointvalue are converted to an unsigned 32 bit integer. Note that the range specifier must follow the dimension specifier.; 28///; 29/// Case B has more precision than case A: 9 to 10 significative digits and 6 to 7 digits respectively.; 30/// The range specifier has the general format: [xmin,xmax] or [xmin,xmax,nbits]. Examples; 31/// * [0,1]; 32/// * [-10,100];; 33/// * [-pi,pi], [-pi/2,pi/4],[-2pi,2*pi]; 34/// * [-10,100,16]; 35/// * [0,0,8]; 36/// Note that:; 37/// * If nbits is not specified, or nbits <2 or nbits>32 it is set to 32; 38/// * If (xmin==0 and xmax==0 and nbits <=14) the double word will be converted t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/double32_8C_source.html:75,Guid,Guide,75,doc/master/double32_8C_source.html,https://root.cern,https://root.cern/doc/master/double32_8C_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/io/file.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. file.C File ReferenceTutorials » IO tutorials. Detailed Description; This macro displays the physical ROOT file structure . ; void file(){; ; TCanvas *c1 = new TCanvas(""c1"",""ROOT File description"",200,10,700,550);; ; c1->Range(0,-0.25,21,14);; TPaveLabel *title = new TPaveLabel(5,12,15,13.7,c1->GetTitle());; title->SetFillColor(16);; title->Draw();; ; // horizontal file layout; TPave *file = new TPave(1,8.5,20,11);; file->SetFillColor(11);; file->Draw();; TPave *fileh = new TPave(1,8.5,2.5,11);; fileh->SetFillColor(44);; fileh->Draw();; TPave *lrh = new TPave(2.5,8.5,3.3,11,1);; lrh->SetFillColor(33);; lrh->Draw();; lrh->DrawPave(6.9,8.5,7.7,11,1);; lrh->DrawPave(10.5,8.5,11.3,11,1);; lrh->DrawPave(14.5,8.5,15.3,11,1);; TLine *ldot = new TLine(1,8.5,0.5,6.5);; ldot->SetLineStyle(2);; ldot->Draw();; ldot->DrawLine(2.5, 8.5, 9.4, 6.5);; ldot->DrawLine(10.5, 8.5, 10, 6.5);; ldot->DrawLine(11.3, 8.5, 19.5, 6.5);; TLine *line = new TLine(2.6,11,2.6,11.5);; line->Draw();; line->DrawLine(2.6,11.5,7,11.5);; TArrow *arrow = new TArrow(7,11.5,7,11.1,0.01,""|>"");; arrow->SetFillStyle(1001);; arrow->Draw();; line->DrawLine( 7, 8.5, 7, 8.0);; line->DrawLine( 7, 8.0, 10.6, 8);; arrow->DrawArrow( 10.6,8, 10.6, 8.4,0.01,""|>"");; line->DrawLine( 10.6, 11, 10.6, 11.5);; line->DrawLine( 10.6, 11.5, 14.6, 11.5);; arrow->DrawArrow( 14.6,11.5, 14.6,11.1,0.01,""|>"");; line->DrawLine( 14.6, 8.5, 14.6, 8.0);; line->DrawLine( 14.6, 8.0, 16, 8);; ldot->DrawLine(16, 8, 19, 8);; TText *vert = new TText(1.5,9.75,""File"");; vert->SetTextAlign(21);; vert->SetTextAngle(90);; vert->SetTextSize(0.025);; vert->Draw();; vert->DrawText(2.0, 9.75,""Header"");; vert->DrawText(2.9, 9.75,""Logical Record"");; vert->DrawText(3.2, 9.75,""Header"");; vert->DrawText(7.3, 9.75,""Logical Record"");; vert->DrawText(7.6, 9.75,""Header"");; vert->DrawText(10.9,9.75,""Logical Record"");; vert->DrawText(11.2,9.7",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/file_8C.html:74,Guid,Guide,74,doc/master/file_8C.html,https://root.cern,https://root.cern/doc/master/file_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/math/exampleFunctor.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. exampleFunctor.C File ReferenceTutorials » Math tutorials. Detailed Description; Tutorial illustrating how creating a TF1 class using functor or class member functions ; can be run with:; root > .x exampleFunctor.C; root > .x exampleFunctor.C+ with ACLIC. ; #include ""TF1.h""; #include ""TMath.h""; #include ""TLegend.h""; ; ; double MyFunc (double *x, double *p ) {; return TMath::Gaus(x[0],p[0],p[1] );; }; ; // function object (functor); struct MyDerivFunc {; MyDerivFunc(TF1 * f): fFunc(f) {}; double operator() (double *x, double * ) const {; return fFunc->Derivative(*x);; }; TF1 * fFunc;; };; // function class with a member function; struct MyIntegFunc {; MyIntegFunc(TF1 * f): fFunc(f) {}; double Integral (double *x, double * ) const {; double a = fFunc->GetXmin();; return fFunc->Integral(a, *x);; }; TF1 * fFunc;; };; ; ; ; void exampleFunctor() {; ; double xmin = -10; double xmax = 10;; ; // create TF1 using a free C function; TF1 * f1 = new TF1(""f1"",MyFunc,xmin,xmax,2);; f1->SetParameters(0.,1.);; f1->SetMaximum(3); f1->SetMinimum(-1);; f1->Draw();; ; // Derivative function; // example to create TF1 using a functor; ; // in order to work with interpreter the function object must be created and lived all time for all time; // of the TF1. In compiled mode, the function object can be passed by value (recommended) and there; // is also no need to specify the type of the function class. Example is as follows:; //; // `TF1 * f2 = new TF1(""f2"",MyDerivFunc(f1), xmin, xmax,0); // only for C++ compiled mode`; ; MyDerivFunc * deriv = new MyDerivFunc(f1);; TF1 * f2 = new TF1(""f2"",deriv, xmin, xmax, 0);; ; f2->SetLineColor(kBlue);; f2->Draw(""same"");; ; ; // integral function; // example to create a TF1 using a member function of a user class; ; // in order to work with interpreter the function object must be created and lived all time for all time;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exampleFunctor_8C.html:86,Guid,Guide,86,doc/master/exampleFunctor_8C.html,https://root.cern,https://root.cern/doc/master/exampleFunctor_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/math/principal.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. principal.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_math; 3## \notebook; 4## Principal Components Analysis (PCA) example; 5##; 6## Example of using TPrincipal as a stand alone class.; 7##; 8## I create n-dimensional data points, where c = trunc(n / 5) + 1; 9## are correlated with the rest n - c randomly distributed variables.; 10##; 11## Based on principal.C by Rene Brun and Christian Holm Christensen; 12##; 13## \macro_output; 14## \macro_code; 15##; 16## \authors Juan Fernando, Jaramillo Botero; 17 ; 18from ROOT import TPrincipal, gRandom, TBrowser, vector; 19 ; 20 ; 21n = 10; 22m = 10000; 23 ; 24c = int(n / 5) + 1; 25 ; 26print (""""""*************************************************; 27* Principal Component Analysis *; 28* *; 29* Number of variables: {0:4d} *; 30* Number of data points: {1:8d} *; 31* Number of dependent variables: {2:4d} *; 32* *; 33*************************************************"""""".format(n, m, c)); 34 ; 35# Initilase the TPrincipal object. Use the empty string for the; 36# final argument, if you don't wan't the covariance; 37# matrix. Normalising the covariance matrix is a good idea if your; 38# variables have different orders of magnitude.; 39principal = TPrincipal(n, ""ND""); 40 ; 41# Use a pseudo-random number generator; 42randomNum = gRandom; 43 ; 44# Make the m data-points; 45# Make a variable to hold our data; 46# Allocate memory for the data point; 47data = vector('double')(); 48for i in range(m):; 49 # First we create the un-correlated, random variables, according; 50 # to one of three distributions; 51 for j in range(n - c):; 52 if j % 3 == 0:; 53 data.push_back(randomNum.Gaus(5, 1)); 54 elif j % 3 == 1:; 55 data.push_back(randomNum.Poisson(8)); 56 else:; 57 data.push_back(randomNum.Exp(2)); 58 ; 59 # Then we create the correlated variables; 60 for j in range(c):; 61 data.push_b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/principal_8py_source.html:79,Guid,Guide,79,doc/master/principal_8py_source.html,https://root.cern,https://root.cern/doc/master/principal_8py_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/math/testrandom.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. testrandom.C File ReferenceTutorials » Math tutorials. Detailed Description; Performance test of all the ROOT random generator (TRandom, TRandom1, TRandom2 and TRandom3) Tests the generator TRandom3 against some ref values and creates a timing table against TRandom, TRandom1 and TRandom2. ; E.g. on an an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running Linux SLC4 64 bit and compiled with gcc 3.4; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 96.000 494.000 109.000 125.000; Poisson(10)....... 138.000 1236.000 165.000 203.000; Poisson(70)....... 818.000 1195.000 835.000 844.000; Poisson(100)...... 837.000 1218.000 849.000 864.000; GausTF1........... 83.000 180.000 87.000 88.000; LandauTF1......... 80.000 180.000 83.000 86.000; GausUNURAN........ 40.000 139.000 41.000 44.000; PoissonUNURAN(10). 85.000 271.000 92.000 102.000; PoissonUNURAN(100) 62.000 256.000 69.000 78.000; TRandom1The Ranlux Random number generator class.Definition TRandom1.h:27; TRandom2Random number generator class based on the maximally quidistributed combined Tausworthe generator by ...Definition TRandom2.h:27; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; Note that this tutorial can be executed in interpreted or compiled mode; Root > .x testrandom.C; Root > .x testrandom.C++; ; Distribution nanoseconds/call; TRando",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/testrandom_8C.html:82,Guid,Guide,82,doc/master/testrandom_8C.html,https://root.cern,https://root.cern/doc/master/testrandom_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. pyroot Directory Reference. Directory dependency graph for pyroot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Files;  demo.py;  To run, do ""python <path-to>/demo.py"". ;  ;  demoshelp.py;   Display demo help. ;  ;  DynamicSlice.py;   Example of function called when a mouse event occurs in a pad. ;  ;  fit1.py;   Fit example. ;  ;  fit1_py.py;  ;  formula1.py;   TF1 example. ;  ;  geometry.py;   Geometry ;  ;  gerrors.py;   A Simple Graph with error bars ;  ;  graph.py;   A Simple Graph Example ;  ;  gui_ex.py;  A Simple GUI Example. ;  ;  h1ReadAndDraw.py;   A Simple histogram drawing example ;  ;  hsimple.py;   This program creates : ;  ;  hsum.py;   Simple example illustrating how to use the C++ interpreter ;  ;  mrt.py;   Build ROOT Ntuple from other source. ;  ;  na49geomfile.py;  Before executing this macro, the file makegeometry.C must have been executed. ;  ;  na49view.py;  This macro generates two views of the NA49 detector. ;  ;  na49visible.py;  Set visibility attributes for the NA49 geometry Set Shape attributes. ;  ;  ntuple1.py;   Ntuple drawing example. ;  ;  numberEntry.py;  Example frame with one box where the user can increase or decrease a number and the shown value will be updated accordingly. ;  ;  parse_CSV_file_with_TTree_ReadStream.py;  This function provides an example of how one might massage a csv data file to read into a ROOT TTree via TTree::ReadStream. ;  ;  pyroot001_arrayInterface.py;   This tutorial illustrates the conversion of STL vectors and TVec to numpy arrays without copying the data. ;  ;  pyroot002_pythonizationDecorator.py;   This tutorial shows how to use the @pythonization decorator to add extra behaviour to C++ user classes that are used from Python via PyROOT. ;  ;  pyroot003_prettyPrinting.py;   This tutorial illustrates the pretty printing feature of PyRO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_d39463c0be040a84eab8424485bc26d4.html:76,Guid,Guide,76,doc/master/dir_d39463c0be040a84eab8424485bc26d4.html,https://root.cern,https://root.cern/doc/master/dir_d39463c0be040a84eab8424485bc26d4.html,6,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/pyroot/DynamicSlice.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; DynamicSlice.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Example of function called when a mouse event occurs in a pad. ; When moving the mouse in the canvas, a second canvas shows the projection along X of the bin corresponding to the Y position of the mouse. The resulting histogram is fitted with a gaussian. A ""dynamic"" line shows the current bin position in Y. This more elaborated example can be used as a starting point to develop more powerful interactive applications exploiting CINT as a development engine.; Note that a class is used to hold on to the canvas that display the selected slice. ; import sys; import ctypes; ; from ROOT import gRandom, gPad, gROOT, gVirtualX; from ROOT import kTRUE, kRed; from ROOT import TCanvas, TH2, TH2F; ; ; class DynamicExec:; ; def __init__( self ):; self._cX = None; self._cY = None; self._old = None; ; def __call__( self ):; ; h = gPad.GetSelected();; if not h:; return; ; if not isinstance( h, TH2 ):; return; ; gPad.GetCanvas().FeedbackMode( kTRUE ); ; # erase old position and draw a line at current position; px = gPad.GetEventX(); py = gPad.GetEventY(); ; uxmin, uxmax = gPad.GetUxmin(), gPad.GetUxmax(); uymin, uymax = gPad.GetUymin(), gPad.GetUymax(); pxmin, pxmax = gPad.XtoAbsPixel( uxmin ), gPad.XtoAbsPixel( uxmax ); pymin, pymax = gPad.YtoAbsPixel( uymin ), gPad.YtoAbsPixel( uymax ); ; if self._old != None:; gVirtualX.DrawLine( pxmin, self._old[1], pxmax, self._old[1] ); gVirtualX.DrawLine( self._old[0], pymin, self._old[0], pymax ); gVirtualX.DrawLine( pxmin, py, pxmax, py ); gVirtualX.DrawLine( px, pymin, px, pymax ); ; self._old = px, py; ; upx = gPad.AbsPixeltoX( px ); x = gPad.PadtoX( upx ); upy = gPad.AbsPixeltoY( py ); y = gPad.PadtoY( upy ); ; padsav = gPad; ; # create or set the display canvases; if not self._cX:; self._cX = TCanvas( 'c2', 'P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DynamicSlice_8py.html:87,Guid,Guide,87,doc/master/DynamicSlice_8py.html,https://root.cern,https://root.cern/doc/master/DynamicSlice_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/demo.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; demo.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; To run, do ""python <path-to>/demo.py"". ; ; import os, sys; import ROOT; ; # To run, do ""python <path-to>/demo.py""; ; # enable running from another directory than the one where demo.py resides; workdir = os.path.dirname( sys.argv[0] ); if workdir:; os.chdir( workdir ); ; # This macro generates a Controlbar menu.; # To execute an item, click with the left mouse button.; # To see the HELP of a button, click on the right mouse button.; ; ROOT.gStyle.SetScreenFactor(1) # if you have a large screen, select 1.2 or 1.4; ; bar = ROOT.TControlBar( 'vertical', 'Demos', 10, 10 ); ; # The callbacks to python work by having CLING call the python interpreter through; # the ""TPython"" class. Note the use of ""raw strings.""; to_run = 'exec(open(\'{}\').read())'; ; ; bar.AddButton( 'Help on Demos', r'TPython::Exec( ""' + to_run.format('demoshelp.py') + '"" );', 'Click Here For Help on Running the Demos' ); bar.AddButton( 'browser', r'TPython::Exec( ""b = ROOT.TBrowser()"" );', 'Start the ROOT browser' ); bar.AddButton( 'framework', r'TPython::Exec( ""' + to_run.format('../legacy/pyroot/framework.py') + '"" );', 'An Example of Object Oriented User Interface' ); bar.AddButton( 'first', r'TPython::Exec( ""' + to_run.format('../legacy/pyroot/first.py') + '"" );', 'An Example of Slide with Root' ); bar.AddButton( 'hsimple', r'TPython::Exec( ""' + to_run.format('hsimple.py') + '"" );', 'Creating histograms/Ntuples on file', ""button"" ); bar.AddButton( 'hsum', r'TPython::Exec( ""' + to_run.format('hsum.py') + '"" );', 'Filling Histograms and Some Graphics Options' ); bar.AddButton( 'formula1', r'TPython::Exec( ""' + to_run.format('formula1.py') + '"" );', 'Simple Formula and Functions' ); bar.AddButton( 'surfaces', r'TPython::Exec( ""' + to_run.format('surfaces.py') + '"" );', 'Surface Drawing Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/demo_8py.html:79,Guid,Guide,79,doc/master/demo_8py.html,https://root.cern,https://root.cern/doc/master/demo_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/demoshelp.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; demoshelp.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Display demo help. ; ; import os; from ROOT import TCanvas, TPaveText; from ROOT import gROOT; ; ; ; chelp = TCanvas( 'chelp', 'Help to run demos', 200, 10, 700, 500 ); ; welcome = TPaveText( .1, .8, .9, .97 ); welcome.AddText( 'Welcome to the ROOT demos' ); welcome.SetTextFont( 32 ); welcome.SetTextColor( 4 ); welcome.SetFillColor( 24 ); welcome.Draw(); ; hdemo = TPaveText( .05, .05, .95, .7 ); hdemo.SetTextAlign( 12 ); hdemo.SetTextFont( 52 ); ; text = """"""- Run demo hsimple.py first. Then in any order; - Click left mouse button to execute one demo; - Click right mouse button to see the title of the demo; - Click on 'Close Bar' to exit from the demo menu; - Select 'File/Print' to print a Postscript view of the canvas; - You can execute a demo with the mouse or type commands; - During the demo (try on this canvas) you can:; .... Use left button to move/grow/etc objects; .... Use middle button to pop overlapping objects; .... Use right button to get an object sensitive pop-up; """"""; for line in text.split( os.linesep ):; hdemo.AddText( line ); ; hdemo.SetAllWith( '....', 'color', 2 ); hdemo.SetAllWith( '....', 'font', 72 ); hdemo.SetAllWith( '....', 'size', 0.04 ); ; hdemo.Draw(); chelp.Update(); TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; AuthorWim Lavrijsen ; Definition in file demoshelp.py. tutorialspyrootdemoshelp.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/demoshelp_8py.html:84,Guid,Guide,84,doc/master/demoshelp_8py.html,https://root.cern,https://root.cern/doc/master/demoshelp_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/fit1.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; fit1.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Fit example. . TFile** fillrandom-py.root ; TFile* fillrandom-py.root ; KEY: TFormula form1;1 abs(sin(x)/x); KEY: TF1 sqroot;1 x*gaus(0) + [3]*form1; KEY: TH1F h1f;1 Test random numbers; Formula based function: sqroot ; sqroot : x*gaus(0) + [3]*form1 Ndim= 1, Npar= 4, Number= 0 ; Formula expression: ; x*[p0]*exp(-0.5*((x-[p1])/[p2])*((x-[p1])/[p2]))+[p3]*(abs(sin(x)/x)) ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 198.935; NDf = 190; Edm = 1.49283e-07; NCalls = 149; p0 = 33.1658 +/- 0.545703 ; p1 = 4.00667 +/- 0.0165304 ; p2 = 0.984663 +/- 0.0128238 ; p3 = 63.4464 +/- 1.33233 ; fit1 : Real Time = 0.36 seconds Cpu Time = 0.37 seconds; ; import ROOT; from os import path; from ROOT import TCanvas, TFile, TPaveText; from ROOT import gROOT, gBenchmark; ; c1 = TCanvas( 'c1', 'The Fit Canvas', 200, 10, 700, 500 ); c1.SetGridx(); c1.SetGridy(); c1.GetFrame().SetFillColor( 21 ); c1.GetFrame().SetBorderMode(-1 ); c1.GetFrame().SetBorderSize( 5 ); ; gBenchmark.Start( 'fit1' ); #; # We connect the ROOT file generated in a previous tutorial; #; File = ""fillrandom-py.root""; if (ROOT.gSystem.AccessPathName(File)) :; ROOT.Info(""fit1.py"", File+"" does not exist""); exit(); ; fill = TFile(File); ; #; # The function ""ls()"" lists the directory contents of this file; #; fill.ls(); ; #; # Get object ""sqroot"" from the file.; #; ; sqroot = gROOT.FindObject( 'sqroot' ); sqroot.Print(); ; #; # Now fit histogram h1f with the function sqroot; #; h1f = gROOT.FindObject( 'h1f' ); h1f.SetFillColor( 45 ); h1f.Fit( 'sqroot' ); ; # We now annotate the picture by creating a PaveText object; # and displaying the list of commands in this macro; #; fitlabel = TPaveText( 0.6, 0.3, 0.9, 0.80, 'NDC' ); fitlabel.SetTextAlign( 12 ); fitlabel.SetFillColor( 42 ); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit1_8py.html:79,Guid,Guide,79,doc/master/fit1_8py.html,https://root.cern,https://root.cern/doc/master/fit1_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/formula1.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; formula1.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; TF1 example. . ; from ROOT import TCanvas, TFormula, TF1; from ROOT import gROOT, gObjectTable; ; c1 = TCanvas( 'c1', 'Example with Formula', 200, 10, 700, 500 ); ; # We create a formula object and compute the value of this formula; # for two different values of the x variable.; form1 = TFormula( 'form1', 'sqrt(abs(x))' ); form1.Eval( 2 ); form1.Eval( -45 ); ; # Create a one dimensional function and draw it; fun1 = TF1( 'fun1', 'abs(sin(x)/x)', 0, 10 ); c1.SetGridx(); c1.SetGridy(); fun1.Draw(); c1.Update(); ; # Before leaving this demo, we print the list of objects known to ROOT; #; if ( gObjectTable ):; gObjectTable.Print(); TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TFormulaThe Formula class.Definition TFormula.h:89; AuthorWim Lavrijsen ; Definition in file formula1.py. tutorialspyrootformula1.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/formula1_8py.html:83,Guid,Guide,83,doc/master/formula1_8py.html,https://root.cern,https://root.cern/doc/master/formula1_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/geometry.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; geometry.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Geometry ; ; import os; import ROOT; ; macrodir = os.path.join(str(ROOT.gROOT.GetTutorialDir()), 'pyroot'); ; # the na49.C file was generated, so no python conversion is provided; ROOT.gROOT.Macro( ROOT.gSystem.UnixPathName( os.path.join( macrodir, os.pardir, 'geom', 'na49.C' ) ) ); ; exec(open(os.path.join( macrodir, 'na49visible.py')).read()); exec(open(os.path.join( macrodir, 'na49geomfile.py')).read()); AuthorWim Lavrijsen ; Definition in file geometry.py. tutorialspyrootgeometry.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geometry_8py.html:83,Guid,Guide,83,doc/master/geometry_8py.html,https://root.cern,https://root.cern/doc/master/geometry_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/gerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; gerrors.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; A Simple Graph with error bars . ; from ROOT import TCanvas, TGraphErrors; from ROOT import gROOT; from array import array; ; c1 = TCanvas( 'c1', 'A Simple Graph with error bars', 200, 10, 700, 500 ); ; c1.SetGrid(); c1.GetFrame().SetFillColor( 21 ); c1.GetFrame().SetBorderSize( 12 ); ; n = 10;; x = array( 'f', [ -0.22, 0.05, 0.25, 0.35, 0.5, 0.61, 0.7, 0.85, 0.89, 0.95 ] ); ex = array( 'f', [ 0.05, 0.1, 0.07, 0.07, 0.04, 0.05, 0.06, 0.07, 0.08, 0.05 ] ); y = array( 'f', [ 1, 2.9, 5.6, 7.4, 9.0, 9.6, 8.7, 6.3, 4.5, 1 ] ); ey = array( 'f', [ 0.8, 0.7, 0.6, 0.5, 0.4, 0.4, 0.5, 0.6, 0.7, 0.8 ] ); ; gr = TGraphErrors( n, x, y, ex, ey ); gr.SetTitle( 'TGraphErrors Example' ); gr.SetMarkerColor( 4 ); gr.SetMarkerStyle( 21 ); gr.Draw( 'ALP' ); ; c1.Update(); SetFillColorOption_t Option_t SetFillColorDefinition TGWin32VirtualXProxy.cxx:50; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; SetBorderSizec SetBorderSize(2); AuthorWim Lavrijsen ; Definition in file gerrors.py. tutorialspyrootgerrors.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gerrors_8py.html:82,Guid,Guide,82,doc/master/gerrors_8py.html,https://root.cern,https://root.cern/doc/master/gerrors_8py.html,4,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/pyroot/graph.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; graph.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; A Simple Graph Example . i 0 0.000000 1.986693 ; i 1 0.100000 2.955202 ; i 2 0.200000 3.894183 ; i 3 0.300000 4.794255 ; i 4 0.400000 5.646425 ; i 5 0.500000 6.442177 ; i 6 0.600000 7.173561 ; i 7 0.700000 7.833269 ; i 8 0.800000 8.414710 ; i 9 0.900000 8.912074 ; i 10 1.000000 9.320391 ; i 11 1.100000 9.635582 ; i 12 1.200000 9.854497 ; i 13 1.300000 9.974950 ; i 14 1.400000 9.995736 ; i 15 1.500000 9.916648 ; i 16 1.600000 9.738476 ; i 17 1.700000 9.463001 ; i 18 1.800000 9.092974 ; i 19 1.900000 8.632094 ; ; from __future__ import print_function; from ROOT import TCanvas, TGraph; from ROOT import gROOT; from math import sin; from array import array; ; ; c1 = TCanvas( 'c1', 'A Simple Graph Example', 200, 10, 700, 500 ); ; c1.SetFillColor( 42 ); c1.SetGrid(); ; n = 20; x, y = array( 'd' ), array( 'd' ); ; for i in range( n ):; x.append( 0.1*i ); y.append( 10*sin( x[i]+0.2 ) ); print(' i %i %f %f ' % (i,x[i],y[i])); ; gr = TGraph( n, x, y ); gr.SetLineColor( 2 ); gr.SetLineWidth( 4 ); gr.SetMarkerColor( 4 ); gr.SetMarkerStyle( 21 ); gr.SetTitle( 'a simple graph' ); gr.GetXaxis().SetTitle( 'X title' ); gr.GetYaxis().SetTitle( 'Y title' ); gr.Draw( 'ACP' ); ; # TCanvas.Update() draws the frame, after which one can change it; c1.Update(); c1.GetFrame().SetFillColor( 21 ); c1.GetFrame().SetBorderSize( 12 ); c1.Modified(); c1.Update(); # If the graph does not appear, try using the ""i"" flag, e.g. ""python3 -i graph.py""; # This will access the interactive mode after executing the script, and thereby persist; # long enough for the graph to appear.; SetFillColorOption_t Option_t SetFillColorDefinition TGWin32VirtualXProxy.cxx:50; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph_8py.html:80,Guid,Guide,80,doc/master/graph_8py.html,https://root.cern,https://root.cern/doc/master/graph_8py.html,3,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/pyroot/graph.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_pyroot; 3## \notebook; 4## A Simple Graph Example; 5##; 6## \macro_image; 7## \macro_output; 8## \macro_code; 9##; 10## \author Wim Lavrijsen; 11 ; 12from __future__ import print_function; 13from ROOT import TCanvas, TGraph; 14from ROOT import gROOT; 15from math import sin; 16from array import array; 17 ; 18 ; 19c1 = TCanvas( 'c1', 'A Simple Graph Example', 200, 10, 700, 500 ); 20 ; 21c1.SetFillColor( 42 ); 22c1.SetGrid(); 23 ; 24n = 20; 25x, y = array( 'd' ), array( 'd' ); 26 ; 27for i in range( n ):; 28 x.append( 0.1*i ); 29 y.append( 10*sin( x[i]+0.2 ) ); 30 print(' i %i %f %f ' % (i,x[i],y[i])); 31 ; 32gr = TGraph( n, x, y ); 33gr.SetLineColor( 2 ); 34gr.SetLineWidth( 4 ); 35gr.SetMarkerColor( 4 ); 36gr.SetMarkerStyle( 21 ); 37gr.SetTitle( 'a simple graph' ); 38gr.GetXaxis().SetTitle( 'X title' ); 39gr.GetYaxis().SetTitle( 'Y title' ); 40gr.Draw( 'ACP' ); 41 ; 42# TCanvas.Update() draws the frame, after which one can change it; 43c1.Update(); 44c1.GetFrame().SetFillColor( 21 ); 45c1.GetFrame().SetBorderSize( 12 ); 46c1.Modified(); 47c1.Update(); 48# If the graph does not appear, try using the ""i"" flag, e.g. ""python3 -i graph.py""; 49# This will access the interactive mode after executing the script, and thereby persist; 50# long enough for the graph to appear.; SetFillColorOption_t Option_t SetFillColorDefinition TGWin32VirtualXProxy.cxx:50; TCanvasThe Canvas class.Definition TCanvas.h:23; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; SetBorderSizec SetBorderSize(2). tutorialspyrootgraph.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:10 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph_8py_source.html:77,Guid,Guide,77,doc/master/graph_8py_source.html,https://root.cern,https://root.cern/doc/master/graph_8py_source.html,5,"['Guid', 'Simpl', 'simpl']","['Guide', 'Simple', 'simple']"
Usability,". ROOT: tutorials/pyroot/gui_ex.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; gui_ex.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; A Simple GUI Example. ; from __future__ import print_function; ; import os, sys, ROOT; ; def pygaus( x, par ):; import math; if (par[2] != 0.0):; arg1 = (x[0]-par[1])/par[2]; arg2 = (0.01*0.39894228)/par[2]; arg3 = par[0]/(1+par[3]); ; gauss = arg3*arg2*math.exp(-0.5*arg1*arg1); else:; print('returning 0'); gauss = 0.; return gauss; ; tpygaus = ROOT.TF1( 'pygaus', pygaus, -4, 4, 4 ); tpygaus.SetParameters( 1., 0., 1. ); ; def MyDraw():; btn = ROOT.BindObject( ROOT.gTQSender, ROOT.TGTextButton ); if btn.WidgetId() == 10:; global tpygaus, window; tpygaus.Draw(); ROOT.gPad.Update(); ; m = ROOT.TPyDispatcher( MyDraw ); ; ; class pMainFrame( ROOT.TGMainFrame ):; def __init__( self, parent, width, height ):; ROOT.TGMainFrame.__init__( self, parent, width, height ); ; self.Canvas = ROOT.TRootEmbeddedCanvas( 'Canvas', self, 200, 200 ); self.AddFrame( self.Canvas, ROOT.TGLayoutHints(ROOT.kLHintsExpandX | ROOT.kLHintsExpandY) ); self.ButtonsFrame = ROOT.TGHorizontalFrame( self, 200, 40 ); ; self.DrawButton = ROOT.TGTextButton( self.ButtonsFrame, '&Draw', 10 ); self.DrawButton.Connect( 'Clicked()', ""TPyDispatcher"", m, 'Dispatch()' ); self.ButtonsFrame.AddFrame( self.DrawButton, ROOT.TGLayoutHints() ); ; self.ExitButton = ROOT.TGTextButton( self.ButtonsFrame, '&Exit', 20 ); self.ExitButton.SetCommand( 'TPython::Exec( ""raise SystemExit"" )' ); self.ButtonsFrame.AddFrame( self.ExitButton, ROOT.TGLayoutHints() ); ; self.AddFrame( self.ButtonsFrame, ROOT.TGLayoutHints() ); ; self.SetWindowName( 'My first GUI' ); self.MapSubwindows(); self.Resize( self.GetDefaultSize() ); self.MapWindow(); ; def __del__(self):; self.Cleanup(); ; ; if __name__ == '__main__':; window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); AuthorWim Lavrijsen ; Definition in file gui_ex.py. tu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gui__ex_8py.html:81,Guid,Guide,81,doc/master/gui__ex_8py.html,https://root.cern,https://root.cern/doc/master/gui__ex_8py.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/pyroot/h1ReadAndDraw.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; h1ReadAndDraw.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; A Simple histogram drawing example ; ; import ROOT; from ROOT import TCanvas, TPad, TFile, TPaveLabel, TPaveText; from ROOT import gROOT; ; c1 = TCanvas( 'c1', 'Histogram Drawing Options', 200, 10, 700, 900 ); ; pad1 = TPad( 'pad1', 'The pad with the function', 0.03, 0.62, 0.50, 0.92, 21 ); pad2 = TPad( 'pad2', 'The pad with the histogram', 0.51, 0.62, 0.98, 0.92, 21 ); pad3 = TPad( 'pad3', 'The pad with the histogram', 0.03, 0.02, 0.97, 0.57, 21 ); pad1.Draw(); pad2.Draw(); pad3.Draw(); #; # We connect the ROOT file generated in a previous tutorial; #; File = ""py-hsimple.root""; if (ROOT.gSystem.AccessPathName(File)) :; ROOT.Info(""h1ReadAndDraw.py"", File+"" does not exist""); exit(); ; example = TFile(File); example.ls(); ; # Draw a global picture title; title = TPaveLabel( 0.1, 0.94, 0.9, 0.98,; 'Drawing options for one dimensional histograms' ); title.SetFillColor( 16 ); title.SetTextFont( 52 ); title.Draw(); #; # Draw histogram hpx in first pad with the default option.; pad1.cd(); pad1.GetFrame().SetFillColor( 18 ); hpx = gROOT.FindObject( 'hpx' ); hpx.SetFillColor( 45 ); hpx.DrawCopy(); label1 = TPaveLabel( -3.5, 700, -1, 800, 'Default option' ); label1.SetFillColor( 42 ); label1.Draw(); #; # Draw hpx as a lego. Clicking on the lego area will show; # a ""transparent cube"" to guide you rotating the lego in real time.; pad2.cd(); hpx.DrawCopy( 'lego1' ); label2 = TPaveLabel( -0.72, 0.74, -0.22, 0.88, 'option Lego1' ); label2.SetFillColor( 42 ); label2.Draw(); label2a = TPaveLabel( -0.93, -1.08, 0.25, -0.92, 'Click on lego to rotate' ); label2a.SetFillColor( 42 ); label2a.Draw(); #; # Draw hpx with its errors and a marker.; pad3.cd(); pad3.SetGridx(); pad3.SetGridy(); pad3.GetFrame().SetFillColor( 18 ); hpx.SetMarkerStyle( 21 ); hpx.Draw(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/h1ReadAndDraw_8py.html:88,Guid,Guide,88,doc/master/h1ReadAndDraw_8py.html,https://root.cern,https://root.cern/doc/master/h1ReadAndDraw_8py.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/pyroot/hsimple.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; hsimple.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This program creates : . a one dimensional histogram; a two dimensional histogram; a profile histogram; a memory-resident ntuple. These objects are filled with some random numbers and saved on a file. ; from ROOT import TCanvas, TFile, TProfile, TNtuple, TH1F, TH2F; from ROOT import gROOT, gBenchmark, gRandom, gSystem; import ctypes; ; # Create a new canvas, and customize it.; c1 = TCanvas( 'c1', 'Dynamic Filling Example', 200, 10, 700, 500 ); c1.SetFillColor( 42 ); c1.GetFrame().SetFillColor( 21 ); c1.GetFrame().SetBorderSize( 6 ); c1.GetFrame().SetBorderMode( -1 ); ; # Create a new ROOT binary machine independent file.; # Note that this file may contain any kind of ROOT objects, histograms,; # pictures, graphics objects, detector geometries, tracks, events, etc..; # This file is now becoming the current directory.; ; hfile = gROOT.FindObject( 'py-hsimple.root' ); if hfile:; hfile.Close(); hfile = TFile( 'py-hsimple.root', 'RECREATE', 'Demo ROOT file with histograms' ); ; # Create some histograms, a profile histogram and an ntuple; hpx = TH1F( 'hpx', 'This is the px distribution', 100, -4, 4 ); hpxpy = TH2F( 'hpxpy', 'py vs px', 40, -4, 4, 40, -4, 4 ); hprof = TProfile( 'hprof', 'Profile of pz versus px', 100, -4, 4, 0, 20 ); ntuple = TNtuple( 'ntuple', 'Demo ntuple', 'px:py:pz:random:i' ); ; # Set canvas/frame attributes.; hpx.SetFillColor( 48 ); ; gBenchmark.Start( 'hsimple' ); ; # Initialize random number generator.; gRandom.SetSeed(); rannor, rndm = gRandom.Rannor, gRandom.Rndm; ; # For speed, bind and cache the Fill member functions,; histos = [ 'hpx', 'hpxpy', 'hprof', 'ntuple' ]; for name in histos:; exec('%sFill = %s.Fill' % (name,name)); ; # Fill histograms randomly.; px_ref, py_ref = ctypes.c_double(), ctypes.c_double(); kUPDATE = 1000; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hsimple_8py.html:82,Guid,Guide,82,doc/master/hsimple_8py.html,https://root.cern,https://root.cern/doc/master/hsimple_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/hsimple.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hsimple.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_pyroot; 3## \notebook -js; 4## This program creates :; 5## - a one dimensional histogram; 6## - a two dimensional histogram; 7## - a profile histogram; 8## - a memory-resident ntuple; 9##; 10## These objects are filled with some random numbers and saved on a file.; 11##; 12## \macro_image; 13## \macro_code; 14##; 15## \author Wim Lavrijsen, Enric Tejedor; 16 ; 17from ROOT import TCanvas, TFile, TProfile, TNtuple, TH1F, TH2F; 18from ROOT import gROOT, gBenchmark, gRandom, gSystem; 19import ctypes; 20 ; 21# Create a new canvas, and customize it.; 22c1 = TCanvas( 'c1', 'Dynamic Filling Example', 200, 10, 700, 500 ); 23c1.SetFillColor( 42 ); 24c1.GetFrame().SetFillColor( 21 ); 25c1.GetFrame().SetBorderSize( 6 ); 26c1.GetFrame().SetBorderMode( -1 ); 27 ; 28# Create a new ROOT binary machine independent file.; 29# Note that this file may contain any kind of ROOT objects, histograms,; 30# pictures, graphics objects, detector geometries, tracks, events, etc..; 31# This file is now becoming the current directory.; 32 ; 33hfile = gROOT.FindObject( 'py-hsimple.root' ); 34if hfile:; 35 hfile.Close(); 36hfile = TFile( 'py-hsimple.root', 'RECREATE', 'Demo ROOT file with histograms' ); 37 ; 38# Create some histograms, a profile histogram and an ntuple; 39hpx = TH1F( 'hpx', 'This is the px distribution', 100, -4, 4 ); 40hpxpy = TH2F( 'hpxpy', 'py vs px', 40, -4, 4, 40, -4, 4 ); 41hprof = TProfile( 'hprof', 'Profile of pz versus px', 100, -4, 4, 0, 20 ); 42ntuple = TNtuple( 'ntuple', 'Demo ntuple', 'px:py:pz:random:i' ); 43 ; 44# Set canvas/frame attributes.; 45hpx.SetFillColor( 48 ); 46 ; 47gBenchmark.Start( 'hsimple' ); 48 ; 49# Initialize random number generator.; 50gRandom.SetSeed(); 51rannor, rndm = gRandom.Rannor, gRandom.Rndm; 52 ; 53# For speed, bind and cache the Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hsimple_8py_source.html:79,Guid,Guide,79,doc/master/hsimple_8py_source.html,https://root.cern,https://root.cern/doc/master/hsimple_8py_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/hsum.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; hsum.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Simple example illustrating how to use the C++ interpreter . ; from ROOT import TCanvas, TH1F, TSlider; from ROOT import gROOT, gBenchmark, gRandom; ; # Create a new canvas, and customize it.; c1 = TCanvas( 'c1', 'The HSUM example', 200, 10, 600, 400 ); c1.SetGrid();; ; gBenchmark.Start( 'hsum' ); ; # Create some histograms.; total = TH1F( 'total', 'This is the total distribution', 100, -4, 4 ); main = TH1F( 'main', 'Main contributor', 100, -4, 4 ); s1 = TH1F( 's1', 'This is the first signal', 100, -4, 4 ); s2 = TH1F( 's2', 'This is the second signal', 100, -4, 4 ); total.Sumw2() # this makes sure that the sum of squares of weights will be stored; ; # Set canvas/frame attributes.; total.SetMarkerStyle( 21 ); total.SetMarkerSize( 0.7 ); main.SetFillColor( 16 ); s1.SetFillColor( 42 ); s2.SetFillColor( 46 ); ; # Initialize random number generator.; gRandom.SetSeed(); gauss, landau = gRandom.Gaus, gRandom.Landau; ; # for speed, bind and cache the Fill member functions; histos = [ 'total', 'main', 's1', 's2' ]; for name in histos:; exec('%sFill = %s.Fill' % (name,name)); ; # Fill histograms randomly; kUPDATE = 500; for i in range( 10000 ):; # Generate random values.; xmain = gauss( -1, 1.5 ); xs1 = gauss( -0.5, 0.5 ); xs2 = landau( 1, 0.15 ); mainFill( xmain ); ; # Fill histograms.; s1Fill( xs1, 0.3 ); s2Fill( xs2, 0.2 ); totalFill( xmain ); totalFill( xs1, 0.3 ); totalFill( xs2, 0.2 ); ; # Update display every kUPDATE events.; if i and (i%kUPDATE) == 0 :; if i == kUPDATE :; total.Draw( 'e1p' ); main.Draw( 'same' ); s1.Draw( 'same' ); s2.Draw( 'same' ); c1.Update(); slider = TSlider( 'slider', 'test', 4.2, 0, 4.6, total.GetMaximum(), 38 ); slider.SetFillColor( 46 ); ; if slider:; slider.SetRange( 0, float(i) / 10000. ); ; c1.Modified(); c1.Update(); ; # Destr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hsum_8py.html:79,Guid,Guide,79,doc/master/hsum_8py.html,https://root.cern,https://root.cern/doc/master/hsum_8py.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/pyroot/hsum.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. hsum.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_pyroot; 3## \notebook -js; 4## Simple example illustrating how to use the C++ interpreter; 5##; 6## \macro_image; 7## \macro_code; 8##; 9## \author Wim Lavrijsen; 10 ; 11from ROOT import TCanvas, TH1F, TSlider; 12from ROOT import gROOT, gBenchmark, gRandom; 13 ; 14# Create a new canvas, and customize it.; 15c1 = TCanvas( 'c1', 'The HSUM example', 200, 10, 600, 400 ); 16c1.SetGrid();; 17 ; 18gBenchmark.Start( 'hsum' ); 19 ; 20# Create some histograms.; 21total = TH1F( 'total', 'This is the total distribution', 100, -4, 4 ); 22main = TH1F( 'main', 'Main contributor', 100, -4, 4 ); 23s1 = TH1F( 's1', 'This is the first signal', 100, -4, 4 ); 24s2 = TH1F( 's2', 'This is the second signal', 100, -4, 4 ); 25total.Sumw2() # this makes sure that the sum of squares of weights will be stored; 26 ; 27# Set canvas/frame attributes.; 28total.SetMarkerStyle( 21 ); 29total.SetMarkerSize( 0.7 ); 30main.SetFillColor( 16 ); 31s1.SetFillColor( 42 ); 32s2.SetFillColor( 46 ); 33 ; 34# Initialize random number generator.; 35gRandom.SetSeed(); 36gauss, landau = gRandom.Gaus, gRandom.Landau; 37 ; 38# for speed, bind and cache the Fill member functions; 39histos = [ 'total', 'main', 's1', 's2' ]; 40for name in histos:; 41 exec('%sFill = %s.Fill' % (name,name)); 42 ; 43# Fill histograms randomly; 44kUPDATE = 500; 45for i in range( 10000 ):; 46 # Generate random values.; 47 xmain = gauss( -1, 1.5 ); 48 xs1 = gauss( -0.5, 0.5 ); 49 xs2 = landau( 1, 0.15 ); 50 mainFill( xmain ); 51 ; 52 # Fill histograms.; 53 s1Fill( xs1, 0.3 ); 54 s2Fill( xs2, 0.2 ); 55 totalFill( xmain ); 56 totalFill( xs1, 0.3 ); 57 totalFill( xs2, 0.2 ); 58 ; 59 # Update display every kUPDATE events.; 60 if i and (i%kUPDATE) == 0 :; 61 if i == kUPDATE :; 62 total.Draw( 'e1p' ); 63 main.Draw( 'same' ); 64 s1.Draw( 'same' )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hsum_8py_source.html:76,Guid,Guide,76,doc/master/hsum_8py_source.html,https://root.cern,https://root.cern/doc/master/hsum_8py_source.html,2,"['Guid', 'Simpl']","['Guide', 'Simple']"
Usability,". ROOT: tutorials/pyroot/mrt.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; mrt.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Build ROOT Ntuple from other source. ; This program reads the ‘aptuple.txt’ file row by row, then creates the Ntuple by adding row by row.; opening file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master.build/tutorials/pyroot/aptuple.txt ...; writing file aptuple.root ...; done; ; import sys, os; from ROOT import TFile, TNtuple, TROOT; ; ; ifn = os.path.join(str(TROOT.GetTutorialDir()), 'pyroot', 'aptuple.txt'); ofn = 'aptuple.root'; ; print('opening file %s ...' % ifn); infile = open( ifn, 'r' ); lines = infile.readlines(); title = lines[0]; labels = lines[1].split(); ; print('writing file %s ...' % ofn); outfile = TFile( ofn, 'RECREATE', 'ROOT file with an NTuple' ); ntuple = TNtuple( 'ntuple', title, ':'.join( labels ) ); ; for line in lines[2:]:; words = line.split(); row = map( float, words ); ntuple.Fill(*row); ; outfile.Write(); ; print('done'); TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TROOT::GetTutorialDirstatic const TString & GetTutorialDir()Get the tutorials directory in the installation. Static utility function.Definition TROOT.cxx:3119; AuthorWim Lavrijsen ; Definition in file mrt.py. tutorialspyrootmrt.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mrt_8py.html:78,Guid,Guide,78,doc/master/mrt_8py.html,https://root.cern,https://root.cern/doc/master/mrt_8py.html,3,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/pyroot/na49geomfile.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; na49geomfile.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Before executing this macro, the file makegeometry.C must have been executed. ; ; import ROOT; ; ROOT.gBenchmark.Start( 'geometry' ); na = ROOT.TFile( 'py-na49.root', 'RECREATE' ); n49 = ROOT.gROOT.FindObject( 'na49' ); n49.Write(); na.Write(); na.Close(); ROOT.gBenchmark.Show( 'geometry' ); ; AuthorWim Lavrijsen ; Definition in file na49geomfile.py. tutorialspyrootna49geomfile.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49geomfile_8py.html:87,Guid,Guide,87,doc/master/na49geomfile_8py.html,https://root.cern,https://root.cern/doc/master/na49geomfile_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/na49view.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; na49view.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This macro generates two views of the NA49 detector. ; To have a better and dynamic view of any of these pads, you can click with the middle button of your mouse to select it. Then select ""View with x3d"" in the VIEW menu of the Canvas. Once in x3d, you are in wireframe mode by default. You can switch to:; Hidden Line mode by typing E; Solid mode by typing R; Wireframe mode by typing W; Stereo mode by clicking S (and you need special glasses); To leave x3d type Q. ; import ROOT; ; c1 = ROOT.TCanvas( 'c1', 'The NA49 canvas', 200, 10, 700, 780 ); ; ROOT.gBenchmark.Start( 'na49view' ); ; all = ROOT.TPad( 'all', 'A Global view of NA49', 0.02, 0.02, 0.48, 0.82, 28 ); tof = ROOT.TPad( 'tof', 'One Time Of Flight element', 0.52, 0.02, 0.98, 0.82, 28 ); all.Draw();; tof.Draw();; na49title = ROOT.TPaveLabel( 0.04, 0.86, 0.96, 0.98, 'Two views of the NA49 detector' ); na49title.SetFillColor( 32 ); na49title.Draw(); #; nageom = ROOT.TFile( 'py-na49.root' ); n49 = ROOT.gROOT.FindObject( 'na49' ); n49.SetBomb( 1.2 ); n49.cd() # Set current geometry; all.cd() # Set current pad; n49.Draw(); c1.Update(); tof.cd(); TOFR1 = n49.GetNode( 'TOFR1' ); TOFR1.Draw(); c1.Update(); ; ROOT.gBenchmark.Show( 'na49view' ); AuthorWim Lavrijsen ; Definition in file na49view.py. tutorialspyrootna49view.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49view_8py.html:83,Guid,Guide,83,doc/master/na49view_8py.html,https://root.cern,https://root.cern/doc/master/na49view_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/na49visible.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; na49visible.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Set visibility attributes for the NA49 geometry Set Shape attributes. ; ; import ROOT; ; ROOT.YK01.SetVisibility( 0 ); ROOT.YK03.SetLineColor( 2 ); ROOT.YK04.SetLineColor( 5 ); ROOT.SEC1.SetLineColor( 6 ); ROOT.SEC2.SetLineColor( 6 ); ROOT.SEC3.SetLineColor( 3 ); ROOT.SEC4.SetLineColor( 3 ); ROOT.TOFR.SetLineColor( 5 ); ROOT.COI1.SetLineColor( 4 ); ROOT.COI2.SetLineColor( 4 ); ROOT.COI3.SetLineColor( 4 ); ROOT.COI4.SetLineColor( 4 ); ROOT.CS38.SetLineColor( 5 ); ROOT.CS28.SetLineColor( 5 ); ROOT.CS18.SetLineColor( 5 ); ROOT.TF4D.SetLineColor( 3 ); ROOT.OGB4.SetLineColor( 3 ); ROOT.TF3D.SetLineColor( 3 ); ROOT.OGB3.SetLineColor( 3 ); ROOT.TF4A.SetLineColor( 3 ); ROOT.OGB4.SetLineColor( 3 ); ROOT.TF3A.SetLineColor( 3 ); ROOT.OGB3.SetLineColor( 3 ); ; # Copy shape attributes (colors,etc) in nodes referencing the shapse; CAVE1 = ROOT.gGeometry.FindObject( 'CAVE1' ); CAVE1.ImportShapeAttributes( ); ; # Set Node attributes; CAVE1.SetVisibility( 2 ) # node is not drawn but its sons are drawn; ROOT.gGeometry.FindObject( 'VT1_1' ).SetVisibility( -4 ) # Node is not drawn.; # Its immediate sons are drawn; ROOT.gGeometry.FindObject( 'VT2_1' ).SetVisibility( -4 ); ROOT.gGeometry.FindObject( 'MTL_1' ).SetVisibility( -4 ); ROOT.gGeometry.FindObject( 'MTR_1' ).SetVisibility( -4 ); ROOT.gGeometry.FindObject( 'TOFR1' ).SetVisibility( -4 ); ; AuthorWim Lavrijsen ; Definition in file na49visible.py. tutorialspyrootna49visible.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49visible_8py.html:86,Guid,Guide,86,doc/master/na49visible_8py.html,https://root.cern,https://root.cern/doc/master/na49visible_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/ntuple1.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ntuple1.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Ntuple drawing example. ; ; from ROOT import TCanvas, TPad, TFile, TPaveText; from ROOT import gBenchmark, gStyle, gROOT; ; c1 = TCanvas('c1','The Ntuple canvas',200,10,700,780); ; gBenchmark.Start('ntuple1'); ; #; # Connect ROOT histogram/ntuple demonstration file; # generated by example hsimple.C.; f1 = TFile('py-hsimple.root'); ; #; # Inside this canvas, we create 4 pads; pad1 = TPad('pad1','This is pad1',0.02,0.52,0.48,0.98,21); pad2 = TPad('pad2','This is pad2',0.52,0.52,0.98,0.98,21); pad3 = TPad('pad3','This is pad3',0.02,0.02,0.48,0.48,21); pad4 = TPad('pad4','This is pad4',0.52,0.02,0.98,0.48,1); pad1.Draw(); pad2.Draw(); pad3.Draw(); pad4.Draw(); ; #; # Change default style for the statistics box; gStyle.SetStatW(0.30); gStyle.SetStatH(0.20); gStyle.SetStatColor(42); ; #; # Display a function of one ntuple column imposing a condition; # on another column.; pad1.cd(); pad1.SetGrid(); pad1.SetLogy(); pad1.GetFrame().SetFillColor(15); ntuple = gROOT.FindObject('ntuple'); ntuple.SetLineColor(1); ntuple.SetFillStyle(1001); ntuple.SetFillColor(45); ntuple.Draw('3*px+2','px**2+py**2>1'); ntuple.SetFillColor(38); ntuple.Draw('2*px+2','pz>2','same'); ntuple.SetFillColor(5); ntuple.Draw('1.3*px+2','(px^2+py^2>4) && py>0','same'); c1.Update(); ; #; # Display the profile of two columns; # The profile histogram produced is saved in the current directory with; # the name hprofs; pad2.cd(); pad2.SetGrid(); pad2.GetFrame().SetFillColor(32); ntuple.Draw('pz:px>>hprofs','','goffprofs'); hprofs = gROOT.FindObject('hprofs'); hprofs.SetMarkerColor(5); hprofs.SetMarkerSize(0.7); hprofs.SetMarkerStyle(21); hprofs.Fit('pol2'); ; #; # Get pointer to fitted function and modify its attributes; fpol2 = hprofs.GetFunction('pol2'); fpol2.SetLineWidth(4); fpol2.SetLine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ntuple1_8py.html:82,Guid,Guide,82,doc/master/ntuple1_8py.html,https://root.cern,https://root.cern/doc/master/ntuple1_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/numberEntry.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; numberEntry.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Example frame with one box where the user can increase or decrease a number and the shown value will be updated accordingly. ; ; import ROOT; ; ; class pMyMainFrame(ROOT.TGMainFrame):; def __init__(self, parent, width, height):; ROOT.TGMainFrame.__init__(self, parent, width, height); ; self.fHor1 = ROOT.TGHorizontalFrame(self, 60, 20, ROOT.kFixedWidth); self.fExit = ROOT.TGTextButton(self.fHor1, ""&Exit"", ""gApplication->Terminate(0)""); self.fExit.SetCommand('TPython::Exec( ""raise SystemExit"" )'); self.fHor1.AddFrame(self.fExit, ROOT.TGLayoutHints(; ROOT.kLHintsTop | ROOT.kLHintsLeft | ROOT.kLHintsExpandX, 4, 4, 4, 4)); self.AddFrame(self.fHor1, ROOT.TGLayoutHints(ROOT.kLHintsBottom | ROOT.kLHintsRight, 2, 2, 5, 1)); ; self.fNumber = ROOT.TGNumberEntry(self, 0, 9, 999, ROOT.TGNumberFormat.kNESInteger,; ROOT.TGNumberFormat.kNEANonNegative,; ROOT.TGNumberFormat.kNELLimitMinMax,; 0, 99999); self.fLabelDispatch = ROOT.TPyDispatcher(self.DoSetlabel); self.fNumber.Connect(""ValueSet(Long_t)"", ""TPyDispatcher"", self.fLabelDispatch, ""Dispatch()""); self.fNumber.GetNumberEntry().Connect(""ReturnPressed()"", ""TPyDispatcher"", self.fLabelDispatch, ""Dispatch()""); self.AddFrame(self.fNumber, ROOT.TGLayoutHints(ROOT.kLHintsTop | ROOT.kLHintsLeft, 5, 5, 5, 5)); self.fGframe = ROOT.TGGroupFrame(self, ""Value""); self.fLabel = ROOT.TGLabel(self.fGframe, ""No input.""); self.fGframe.AddFrame(self.fLabel, ROOT.TGLayoutHints(ROOT.kLHintsTop | ROOT.kLHintsLeft, 5, 5, 5, 5)); self.AddFrame(self.fGframe, ROOT.TGLayoutHints(ROOT.kLHintsExpandX, 2, 2, 1, 1)); ; self.SetCleanup(ROOT.kDeepCleanup); self.SetWindowName(""Number Entry""); self.MapSubwindows(); self.Resize(self.GetDefaultSize()); self.MapWindow(); ; def __del__(self):; self.Cleanup(); ; def DoSetlabel(self):; self.fLa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/numberEntry_8py.html:86,Guid,Guide,86,doc/master/numberEntry_8py.html,https://root.cern,https://root.cern/doc/master/numberEntry_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/parse_CSV_file_with_TTree_ReadStream.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; parse_CSV_file_with_TTree_ReadStream.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This function provides an example of how one might massage a csv data file to read into a ROOT TTree via TTree::ReadStream. ; This could be useful if the data read out from some DAQ program doesn't 'quite' match the formatting expected by ROOT (e.g. comma- separated, tab-separated with white-space strings, headers not matching the expected format, etc.); This example is shipped with a data file that looks like:; Date/Time Synchro Capacity Temp.Cold Head Temp. Electrode HV Supply Voltage Electrode 1 Electrode 2 Electrode 3 Electrode 4; # Example data to read out. Some data have oddities that might need to; # dealt with, including the 'NaN' in Electrode 4 and the empty string in Date/Time (last row); 08112010.160622 7 5.719000E-10 8.790500 24.237700 -0.008332 0 0 0 0; 8112010.160626 7 5.710000E-10 8.828400 24.237500 -0.008818 0 0 0 0; 08112010.160626 7 5.719000E-10 8.828400 24.237500 -0.008818 0 0 0 0; 08112010.160627 7 5.719000E-10 9.014300 24.237400 -0.028564 0 0 0 NaN; 08112010.160627 7 5.711000E-10 8.786000 24.237400 -0.008818 0 0 0 0; 08112010.160628 7 5.702000E-10 8.786000 24.237400 -0.009141 0 0 0 0; 08112010.160633 7 5.710000E-10 9.016200 24.237200 -0.008818 0 0 0 0; 7 5.710000E-10 8.903400 24.237200 -0.008818 0 0 0 0; NaN#define NaNDefinition RooLagrangianMorphFunc.cxx:87; These data require some massaging, including:. Date/Time has a blank ('') entry that must be handled; The headers are not in the correct format; Tab-separated entries with additional white space; NaN entries. from __future__ import print_function; ; import ROOT; import sys; import os; ; def parse_CSV_file_with_TTree_ReadStream(tree_name, afile):; ; ; ROOT.gROOT.SetBatch(); # The mapping dictionary defines the proper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/parse__CSV__file__with__TTree__ReadStream_8py.html:111,Guid,Guide,111,doc/master/parse__CSV__file__with__TTree__ReadStream_8py.html,https://root.cern,https://root.cern/doc/master/parse__CSV__file__with__TTree__ReadStream_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/pyroot001_arrayInterface.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; pyroot001_arrayInterface.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This tutorial illustrates the conversion of STL vectors and TVec to numpy arrays without copying the data. ; The memory-adoption is achieved by the dictionary array_interface, which is added dynamically to the Python objects by PyROOT.; ; import ROOT; from sys import exit; ; try:; import numpy as np; except:; exit(); ; # Create a vector ROOT object and assign values; # Note that this works as well with a TVec; vec = ROOT.std.vector(""float"")(2); vec[0] = 1; vec[1] = 2; print(""Content of the ROOT vector object: {}"".format([x for x in vec])); ; # Interface ROOT vector with a numpy array; array = np.asarray(vec); print(""Content of the associated numpy array: {}"".format([x for x in array])); ; # The numpy array adopts the memory of the vector without copying the content.; # Note that the first entry of the numpy array changes when assigning a new; # value to the first entry of the ROOT vector.; vec[0] = 42; print(; ""Content of the numpy array after changing the first entry of the ROOT vector: {}"".; format([x for x in array])); ; # Use numpy features on data of ROOT objects; print(""Mean of the numpy array entries: {}"".format(np.mean(array))); formatOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot001__arrayInterface_8py.html:99,Guid,Guide,99,doc/master/pyroot001__arrayInterface_8py.html,https://root.cern,https://root.cern/doc/master/pyroot001__arrayInterface_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/pyroot002_pythonizationDecorator.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; pyroot002_pythonizationDecorator.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This tutorial shows how to use the @pythonization decorator to add extra behaviour to C++ user classes that are used from Python via PyROOT. ; ; import ROOT; from ROOT import pythonization; ; # Let's first define a new C++ class. In this tutorial, we will see how we can; # ""pythonize"" this class, i.e. how we can add some extra behaviour to it to; # make it more pythonic or easier to use from Python.; #; # Note: In this example, the class is defined dynamically for demonstration; # purposes, but it could also be a C++ class defined in some library or header.; # For more information about loading C++ user code to be used from Python with; # PyROOT, please see:; # https://root.cern.ch/manual/python/#loading-user-libraries-and-just-in-time-compilation-jitting; ROOT.gInterpreter.Declare('''; class MyClass {};; '''); ; # Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot002__pythonizationDecorator_8py.html:107,Guid,Guide,107,doc/master/pyroot002__pythonizationDecorator_8py.html,https://root.cern,https://root.cern/doc/master/pyroot002__pythonizationDecorator_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/pyroot002_pythonizationDecorator.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. pyroot002_pythonizationDecorator.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_pyroot; 3## \notebook -nodraw; 4## This tutorial shows how to use the `@pythonization` decorator to add extra; 5## behaviour to C++ user classes that are used from Python via PyROOT.; 6##; 7## \macro_code; 8## \macro_output; 9##; 10## \date November 2021; 11## \author Enric Tejedor; 12 ; 13import ROOT; 14from ROOT import pythonization; 15 ; 16# Let's first define a new C++ class. In this tutorial, we will see how we can; 17# ""pythonize"" this class, i.e. how we can add some extra behaviour to it to; 18# make it more pythonic or easier to use from Python.; 19#; 20# Note: In this example, the class is defined dynamically for demonstration; 21# purposes, but it could also be a C++ class defined in some library or header.; 22# For more information about loading C++ user code to be used from Python with; 23# PyROOT, please see:; 24# https://root.cern.ch/manual/python/#loading-user-libraries-and-just-in-time-compilation-jitting; 25ROOT.gInterpreter.Declare('''; 26class MyClass {};; 27'''); 28 ; 29# Next, we define a pythonizor function: the function that will be responsible; 30# for injecting new behaviour in our C++ class `MyClass`.; 31#; 32# To convert a given Python function into a pythonizor, we need to decorate it; 33# with the @pythonization decorator. Such decorator allows us to define which; 34# which class we want to pythonize by providing its class name and its; 35# namespace (if the latter is not specified, it defaults to the global; 36# namespace, i.e. '::').; 37#; 38# The decorated function - the pythonizor - must accept either one or two; 39# parameters:; 40# 1. The class to be pythonized (proxy object where new behaviour can be; 41# injected); 42# 2. The fully-qualified name of that class (optional).;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot002__pythonizationDecorator_8py_source.html:104,Guid,Guide,104,doc/master/pyroot002__pythonizationDecorator_8py_source.html,https://root.cern,https://root.cern/doc/master/pyroot002__pythonizationDecorator_8py_source.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/pyroot003_prettyPrinting.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; pyroot003_prettyPrinting.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This tutorial illustrates the pretty printing feature of PyROOT, which reveals the content of the object if a string representation is requested, e.g., by Python's print statement. ; The printing behaves similar to the ROOT prompt powered by the C++ interpreter cling.; ; import ROOT; ; # Create an object with PyROOT; obj = ROOT.std.vector(""int"")(3); for i in range(obj.size()):; obj[i] = i; ; # Print the object, which reveals the content. Note that `print` calls the special; # method `__str__` of the object internally.; print(obj); ; # The output can be retrieved as string by any function that triggers the `__str__`; # special method of the object, e.g., `str` or `format`.; print(str(obj)); print(""{}"".format(obj)); ; # Note that the interactive Python prompt does not call `__str__`, it calls; # `__repr__`, which implements a formal and unique string representation of; # the object.; print(repr(obj)); obj; ; # The print output behaves similar to the ROOT prompt, e.g., here for a ROOT histogram.; hist = ROOT.TH1F(""name"", ""title"", 10, 0, 1); print(hist); ; # If cling cannot produce any nice representation for the class, we fall back to a; # ""<ClassName at address>"" format, which is what `__repr__` returns; ROOT.gInterpreter.Declare('class MyClass {};'); m = ROOT.MyClass(); print(m); print(str(m) == repr(m)); ; formatOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot003__prettyPrinting_8py.html:99,Guid,Guide,99,doc/master/pyroot003__prettyPrinting_8py.html,https://root.cern,https://root.cern/doc/master/pyroot003__prettyPrinting_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/pyroot004_NumbaDeclare.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; pyroot004_NumbaDeclare.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This tutorial illustrates how PyROOT supports declaring C++ callables from Python callables making them, for example, usable with RDataFrame. ; The feature uses the numba Python package for just-in-time compilation of the Python callable and supports fundamental types and ROOT::RVec thereof.; ; import ROOT; ; # To mark a Python callable to be used from C++, you have to use the decorator; # provided by PyROOT passing the C++ types of the input arguments and the return; # value.; @ROOT.Numba.Declare(['float', 'int'], 'float'); def pypow(x, y):; return x**y; ; # The Python callable is now available from C++ in the Numba namespace.; # For example, we can use it from the interpreter.; ROOT.gInterpreter.ProcessLine('cout << ""2^3 = "" << Numba::pypow(2, 3) << endl;'); ; # Or we can use the callable as well within a RDataFrame workflow.; data = ROOT.RDataFrame(4).Define('x', '(float)rdfentry_')\; .Define('x_pow3', 'Numba::pypow(x, 3)')\; .AsNumpy(); ; print('pypow({}, 3) = {}'.format(data['x'], data['x_pow3'])); ; # ROOT uses the numba Python package to create C++ functions from python ones.; # We support as input and return types of the callable fundamental types and; # ROOT::RVec thereof. See the following callable computing the power of the; # elements in an array.; @ROOT.Numba.Declare(['RVecF', 'int'], 'RVecF'); def pypowarray(x, y):; return x**y; ; ROOT.gInterpreter.ProcessLine('''; ROOT::RVecF x = {0, 1, 2, 3};; cout << ""pypowarray("" << x << "", 3) = "" << Numba::pypowarray(x, 3) << endl;; '''); ; # and now with RDataFrame; s = ROOT.RDataFrame(1).Define('x', 'ROOT::RVecF{1,2,3}')\; .Define('x2', 'Numba::pypowarray(x, 2)')\; .Sum('x2') # 1 + 4 + 9 == 14; print('sum(pypowarray({ 1, 2, 3 }, 2)) = ', s.GetValue()); formatOption",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot004__NumbaDeclare_8py.html:97,Guid,Guide,97,doc/master/pyroot004__NumbaDeclare_8py.html,https://root.cern,https://root.cern/doc/master/pyroot004__NumbaDeclare_8py.html,2,"['Guid', 'usab']","['Guide', 'usable']"
Usability,". ROOT: tutorials/pyroot/pyroot004_NumbaDeclare.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. pyroot004_NumbaDeclare.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_pyroot; 3## \notebook -nodraw; 4## This tutorial illustrates how PyROOT supports declaring C++ callables from; 5## Python callables making them, for example, usable with RDataFrame. The feature; 6## uses the numba Python package for just-in-time compilation of the Python callable; 7## and supports fundamental types and ROOT::RVec thereof.; 8##; 9## \macro_code; 10## \macro_output; 11##; 12## \date March 2020; 13## \author Stefan Wunsch; 14 ; 15import ROOT; 16 ; 17# To mark a Python callable to be used from C++, you have to use the decorator; 18# provided by PyROOT passing the C++ types of the input arguments and the return; 19# value.; 20@ROOT.Numba.Declare(['float', 'int'], 'float'); 21def pypow(x, y):; 22 return x**y; 23 ; 24# The Python callable is now available from C++ in the Numba namespace.; 25# For example, we can use it from the interpreter.; 26ROOT.gInterpreter.ProcessLine('cout << ""2^3 = "" << Numba::pypow(2, 3) << endl;'); 27 ; 28# Or we can use the callable as well within a RDataFrame workflow.; 29data = ROOT.RDataFrame(4).Define('x', '(float)rdfentry_')\; 30 .Define('x_pow3', 'Numba::pypow(x, 3)')\; 31 .AsNumpy(); 32 ; 33print('pypow({}, 3) = {}'.format(data['x'], data['x_pow3'])); 34 ; 35# ROOT uses the numba Python package to create C++ functions from python ones.; 36# We support as input and return types of the callable fundamental types and; 37# ROOT::RVec thereof. See the following callable computing the power of the; 38# elements in an array.; 39@ROOT.Numba.Declare(['RVecF', 'int'], 'RVecF'); 40def pypowarray(x, y):; 41 return x**y; 42 ; 43ROOT.gInterpreter.ProcessLine('''; 44ROOT::RVecF x = {0, 1, 2, 3};; 45cout << ""pypowarray("" << x << "", 3) = "" << Numba::pypowarray(x, 3) << endl;; 46'''); 47 ; 48# and now w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot004__NumbaDeclare_8py_source.html:94,Guid,Guide,94,doc/master/pyroot004__NumbaDeclare_8py_source.html,https://root.cern,https://root.cern/doc/master/pyroot004__NumbaDeclare_8py_source.html,2,"['Guid', 'usab']","['Guide', 'usable']"
Usability,". ROOT: tutorials/pyroot/pyroot005_tfile_context_manager.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; pyroot005_tfile_context_manager.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This tutorial demonstrates the usage of the TFile class as a Python context manager. ; import os; ; import ROOT; from ROOT import TFile; ; # By default, objects of some ROOT types such as `TH1` and its derived types; # are automatically attached to a ROOT.TDirectory when they are created.; # Specifically, at any given point of a ROOT application, the ROOT.gDirectory; # object tells which is the current directory where objects will be attached to.; # The next line will print 'PyROOT' as the name of the current directory.; # That is the global directory created when using ROOT from Python, which is; # the ROOT.gROOT object.; print(""Current directory: '{}'.\n"".format(ROOT.gDirectory.GetName())); ; # We can check to which directory a newly created histogram is attached.; histo_1 = ROOT.TH1F(""histo_1"", ""histo_1"", 10, 0, 10); print(""Histogram '{}' is attached to: '{}'.\n"".format(histo_1.GetName(), histo_1.GetDirectory().GetName())); ; # For quick saving and forgetting of objects into ROOT files, it is possible to; # open a TFile as a Python context manager. In the context, objects can be; # created, modified and finally written to the file. At the end of the context,; # the file will be automatically closed.; with TFile.Open(""pyroot005_file_1.root"", ""recreate"") as f:; histo_2 = ROOT.TH1F(""histo_2"", ""histo_2"", 10, 0, 10); # Inside the context, the current directory is the open file; print(""Current directory: '{}'.\n"".format(ROOT.gDirectory.GetName())); # And the created histogram is automatically attached to the file; print(""Histogram '{}' is attached to: '{}'.\n"".format(histo_2.GetName(), histo_2.GetDirectory().GetName())); # Before exiting the context, objects can be written to the file; f.WriteObject(hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot005__tfile__context__manager_8py.html:106,Guid,Guide,106,doc/master/pyroot005__tfile__context__manager_8py.html,https://root.cern,https://root.cern/doc/master/pyroot005__tfile__context__manager_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/pyroot006_tcontext_context_manager.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; pyroot006_tcontext_context_manager.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This tutorial demonstrates the usage of the TContext class as a Python context manager. ; This functionality is related with how TFile works, so it is suggested to also take a look at the pyroot005 tutorial.; import os; ; import ROOT; from ROOT import TDirectory, TFile; ; # Sometimes it is useful to have multiple open files at once. In such cases,; # the current directory will always be the file that was open last.; file_1 = TFile(""pyroot006_file_1.root"", ""recreate""); file_2 = TFile(""pyroot006_file_2.root"", ""recreate""); print(""Current directory: '{}'.\n"".format(ROOT.gDirectory.GetName())); # Changing directory into another file can be safely done through a TContext; # context manager.; with TDirectory.TContext(file_1):; # Inside the statement, the current directory is file_1; print(""Current directory: '{}'.\n"".format(ROOT.gDirectory.GetName())); histo_1 = ROOT.TH1F(""histo_1"", ""histo_1"", 10, 0, 10); file_1.WriteObject(histo_1, ""my_histogram""); ; # After the context, the current directory is restored back to file_2. Also, the; # two files are kept open. This means that objects read, written or modified; # inside the context are still available afterwards.; print(""Current directory: '{}'.\n"".format(ROOT.gDirectory.GetName())); if file_1.IsOpen() and file_2.IsOpen():; print(""'{}' and '{}' are open.\n"".format(file_1.GetName(), file_2.GetName())); ; # TContext and TFile context managers can also be used in conjunction, allowing; # for safely:; # - Opening a file, creating, modifying, writing and reading objects in it.; # - Closing the file, storing it on disk.; # - Restoring the previous value of gDirectory to the latest file opened before; # this context, rather than to the global ROOT.gROOT; # Remem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/pyroot006__tcontext__context__manager_8py.html:109,Guid,Guide,109,doc/master/pyroot006__tcontext__context__manager_8py.html,https://root.cern,https://root.cern/doc/master/pyroot006__tcontext__context__manager_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/ratioplot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; ratioplot.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Display two histograms and their ratio. ; This program illustrates how to plot two histograms and their ratio on the same canvas. Original macro by Olivier Couet.; ; from ROOT import TCanvas, TColor, TGaxis, TH1F, TPad; from ROOT import kBlack, kBlue, kRed; ; ; def createH1():; h1 = TH1F(""h1"", (""Two gaussian plots and their ratio; x title; h1 and h2""; "" histograms""), 100, -5, 5); h1.SetLineColor(kBlue+1); h1.SetLineWidth(2); h1.FillRandom(""gaus""); h1.GetYaxis().SetTitleSize(20); h1.GetYaxis().SetTitleFont(43); h1.GetYaxis().SetTitleOffset(1.55); h1.SetStats(0); return h1; ; ; def createH2():; h2 = TH1F(""h2"", ""h2"", 100, -5, 5); h2.FillRandom(""gaus""); h2.SetLineColor(kRed); h2.SetLineWidth(2); return h2; ; ; def createRatio(h1, h2):; h3 = h1.Clone(""h3""); h3.SetLineColor(kBlack); h3.SetMarkerStyle(21); h3.SetTitle(""""); h3.SetMinimum(0.8); h3.SetMaximum(1.35); # Set up plot for markers and errors; h3.Sumw2(); h3.SetStats(0); h3.Divide(h2); ; # Adjust y-axis settings; y = h3.GetYaxis(); y.SetTitle(""ratio h1/h2 ""); y.SetNdivisions(505); y.SetTitleSize(20); y.SetTitleFont(43); y.SetTitleOffset(1.55); y.SetLabelFont(43); y.SetLabelSize(15); ; # Adjust x-axis settings; x = h3.GetXaxis(); x.SetTitleSize(20); x.SetTitleFont(43); x.SetTitleOffset(4.0); x.SetLabelFont(43); x.SetLabelSize(15); ; return h3; ; ; def createCanvasPads():; c = TCanvas(""c"", ""canvas"", 800, 800); # Upper histogram plot is pad1; pad1 = TPad(""pad1"", ""pad1"", 0, 0.3, 1, 1.0); pad1.SetBottomMargin(0) # joins upper and lower plot; pad1.SetGridx(); pad1.Draw(); # Lower ratio plot is pad2; c.cd() # returns to main canvas before defining pad2; pad2 = TPad(""pad2"", ""pad2"", 0, 0.05, 1, 0.3); pad2.SetTopMargin(0) # joins upper and lower plot; pad2.SetBottomMargin(0.2); pad2.SetGridx(); pad2.Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ratioplot_8py.html:84,Guid,Guide,84,doc/master/ratioplot_8py.html,https://root.cern,https://root.cern/doc/master/ratioplot_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/shapes.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; shapes.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Draw the geometry using the x3d viewver. ; Note that this viewver may also be invoked from the ""View"" menu in the canvas tool bar; once in x3d viewer, type m to see the menu. For example typing r will show a solid model of this geometry.; ; import ROOT; ; c1 = ROOT.TCanvas( 'c1', 'Geometry Shapes', 200, 10, 700, 500 ); ; # delete previous geometry objects in case this script is reexecuted; if hasattr(ROOT, 'gGeometry') and ROOT.gGeometry:; ROOT.gGeometry.GetListOfNodes().Delete(); ROOT.gGeometry.GetListOfShapes().Delete(); ; # Define some volumes; brik = ROOT.TBRIK( 'BRIK', 'BRIK', 'void', 200, 150, 150 ); trd1 = ROOT.TTRD1( 'TRD1', 'TRD1', 'void', 200, 50, 100, 100 ); trd2 = ROOT.TTRD2( 'TRD2', 'TRD2', 'void', 200, 50, 200, 50, 100 ); trap = ROOT.TTRAP( 'TRAP', 'TRAP', 'void', 190, 0, 0, 60, 40, 90, 15, 120, 80, 180, 15 ); para = ROOT.TPARA( 'PARA', 'PARA', 'void', 100, 200, 200, 15, 30, 30 ); gtra = ROOT.TGTRA( 'GTRA', 'GTRA', 'void', 390, 0, 0, 20, 60, 40, 90, 15, 120, 80, 180, 15 ); tube = ROOT.TTUBE( 'TUBE', 'TUBE', 'void', 150, 200, 400 ); tubs = ROOT.TTUBS( 'TUBS', 'TUBS', 'void', 80, 100, 100, 90, 235 ); cone = ROOT.TCONE( 'CONE', 'CONE', 'void', 100, 50, 70, 120, 150 ); cons = ROOT.TCONS( 'CONS', 'CONS', 'void', 50, 100, 100, 200, 300, 90, 270 ); sphe = ROOT.TSPHE( 'SPHE', 'SPHE', 'void', 25, 340, 45, 135, 0, 270 ); sphe1 = ROOT.TSPHE( 'SPHE1', 'SPHE1', 'void', 0, 140, 0, 180, 0, 360 ); sphe2 = ROOT.TSPHE( 'SPHE2', 'SPHE2', 'void', 0, 200, 10, 120, 45, 145 ); ; pcon = ROOT.TPCON( 'PCON', 'PCON', 'void', 180, 270, 4 ); pcon.DefineSection( 0, -200, 50, 100 ); pcon.DefineSection( 1, -50, 50, 80 ); pcon.DefineSection( 2, 50, 50, 80 ); pcon.DefineSection( 3, 200, 50, 100 ); ; pgon = ROOT.TPGON( 'PGON', 'PGON', 'void', 180, 270, 8, 4 ); pgon.Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/shapes_8py.html:81,Guid,Guide,81,doc/master/shapes_8py.html,https://root.cern,https://root.cern/doc/master/shapes_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/staff.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; staff.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; example of macro to read data from an ascii file and create a root file with a Tree. ; NOTE: comparing the results of this macro with those of staff.C, you'll notice that the resultant file is a couple of bytes smaller, because the code below strips all white-spaces, whereas the .C version does not.; ; import re, array, os; import ROOT; from ROOT import TFile, TTree, gROOT, addressof; ; ## A C/C++ structure is required, to allow memory based access; gROOT.ProcessLine(; ""struct staff_t {\; Int_t Category;\; UInt_t Flag;\; Int_t Age;\; Int_t Service;\; Int_t Children;\; Int_t Grade;\; Int_t Step;\; Int_t Hrweek;\; Int_t Cost;\; Char_t Division[4];\; Char_t Nation[3];\; };"" );; ; ## Function to read in data from ASCII file and fill the ROOT tree; def staff():; ; staff = ROOT.staff_t(); ; # The input file cern.dat is a copy of the CERN staff data base; # from 1988; ; f = TFile( 'staff.root', 'RECREATE' ); tree = TTree( 'T', 'staff data from ascii file' ); tree.Branch( 'staff', staff, 'Category/I:Flag:Age:Service:Children:Grade:Step:Hrweek:Cost' ); tree.Branch( 'Divisions', addressof( staff, 'Division' ), 'Division/C' ); tree.Branch( 'Nation', addressof( staff, 'Nation' ), 'Nation/C' ); ; # note that the branches Division and Nation cannot be on the first branch; fname = os.path.join(str(ROOT.gROOT.GetTutorialDir()), 'tree', 'cernstaff.dat'); for line in open(fname).readlines():; t = list(filter( lambda x: x, re.split( '\s+', line ) ) ); staff.Category = int(t[0]) # assign as integers; staff.Flag = int(t[1]); staff.Age = int(t[2]); staff.Service = int(t[3]); staff.Children = int(t[4]); staff.Grade = int(t[5]); staff.Step = int(t[6]); staff.Hrweek = int(t[7]); staff.Cost = int(t[8]); staff.Division = t[9] # assign as strings; staff.Nation = t[10]; ; tree.Fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/staff_8py.html:80,Guid,Guide,80,doc/master/staff_8py.html,https://root.cern,https://root.cern/doc/master/staff_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/surfaces.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; surfaces.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Surfaces example . ; from ROOT import TCanvas, TPaveText, TPad, TF2; from ROOT import gROOT, gStyle; ; ; ; c1 = TCanvas( 'c1', 'Surfaces Drawing Options', 200, 10, 700, 900 ); c1.SetFillColor( 42 ); gStyle.SetFrameFillColor( 42 ); title = TPaveText( .2, 0.96, .8, .995 ); title.SetFillColor( 33 ); title.AddText( 'Examples of Surface options' ); title.Draw(); ; pad1 = TPad( 'pad1', 'Gouraud shading', 0.03, 0.50, 0.98, 0.95, 21 ); pad2 = TPad( 'pad2', 'Color mesh', 0.03, 0.02, 0.98, 0.48, 21 ); pad1.Draw(); pad2.Draw(); ; # We generate a 2-D function; f2 = TF2( 'f2', 'x**2 + y**2 - x**3 -8*x*y**4', -1, 1.2, -1.5, 1.5 ); f2.SetContour( 48 ); f2.SetFillColor( 45 ); ; # Draw this function in pad1 with Gouraud shading option; pad1.cd(); pad1.SetPhi( -80 ); pad1.SetLogz(); f2.Draw( 'surf4' ); ; # Draw this function in pad2 with color mesh option; pad2.cd(); pad2.SetTheta( 25 ); pad2.SetPhi( -110 ); pad2.SetLogz(); f2.Draw( 'surf1' ); ; c1.Update(); TCanvasThe Canvas class.Definition TCanvas.h:23; TF2A 2-Dim function with parameters.Definition TF2.h:29; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; AuthorWim Lavrijsen ; Definition in file surfaces.py. tutorialspyrootsurfaces.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/surfaces_8py.html:83,Guid,Guide,83,doc/master/surfaces_8py.html,https://root.cern,https://root.cern/doc/master/surfaces_8py.html,2,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/tornado.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; tornado.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; Tornado example. ; . ; from ROOT import TCanvas, TView, TPolyMarker3D, TPaveText; from ROOT import gROOT, gBenchmark; from math import cos, sin, pi; ; gBenchmark.Start( 'tornado' ); ; d = 16; numberOfPoints = 200; numberOfCircles = 40; ; # create and open a canvas; sky = TCanvas( 'sky', 'Tornado', 300, 10, 700, 500 ); sky.SetFillColor( 14 ); ; # creating view; view = TView.CreateView(); rng = numberOfCircles * d; view.SetRange( 0, 0, 0, 4.0*rng, 2.0*rng, rng ); ; polymarkers = []; for j in range( d, numberOfCircles * d, d ):; ; # create a PolyMarker3D; pm3d = TPolyMarker3D( numberOfPoints ); ; # set points; for i in range( 1, numberOfPoints ) :; csin = sin( 2*pi / numberOfPoints * i ) + 1; ccos = cos( 2*pi / numberOfPoints * i ) + 1; esin = sin( 2*pi / (numberOfCircles*d) * j ) + 1; x = j * ( csin + esin );; y = j * ccos;; z = j;; pm3d.SetPoint( i, x, y, z );; ; # set marker size, color & style; pm3d.SetMarkerSize( 1 ); pm3d.SetMarkerColor( 2 + ( d == ( j & d ) ) ); pm3d.SetMarkerStyle( 3 ); ; # draw; pm3d.Draw(); ; # save a reference; polymarkers.append( pm3d ); ; gBenchmark.Show( 'tornado' ); ; ct = gBenchmark.GetCpuTime( 'tornado' ); timeStr = 'Execution time: %g sec.' % ct; ; text = TPaveText( 0.1, 0.81, 0.9, 0.97 ); text.SetFillColor( 42 ); text.AddText( 'PyROOT example: tornado.py' ); text.AddText( timeStr ); text.Draw(); ; sky.Update(); TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPolyMarker3DA 3D polymarker.Definition TPolyMarker3D.h:33; TView::CreateViewstatic TView * CreateView(Int_t system=1, const Double_t *rmin=nullptr, const Double_t *rmax=nullptr)Create a concrete default 3-d view via the plug-in manager.Definition TView.cxx:27; AuthorWim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tornado_8py.html:82,Guid,Guide,82,doc/master/tornado_8py.html,https://root.cern,https://root.cern/doc/master/tornado_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/pyroot/zdemo.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; zdemo.py File ReferenceTutorials » PyRoot tutorials. Detailed Description; This macro is an example of graphs in log scales with annotations. ; The presented results are predictions of invariant cross-section of Direct Photons produced at RHIC energies, based on the universality of scaling function H(z).; These Figures were published in JINR preprint E2-98-64, Dubna, 1998 and submitted to CPC. ; import ROOT; from array import array; ; NMAX = 20; Z = array( 'f', [0.]*NMAX ); HZ = array( 'f', [0.]*NMAX ); PT = array( 'f', [0.]*NMAX ); INVSIG = array( 'f', [0.]*NMAX ); ; NLOOP = 0; saves = {}; ; #_______________________________________________________________________________; def hz_calc( ENERG, DENS, TGRAD, PTMIN, PTMAX, DELP ):; from math import sin, cos, sqrt; global NLOOP; global Z, HZ, PT, INVSIG; ; CSEFT= 1.; GM1 = 0.00001; GM2 = 0.00001; A1 = 1.; A2 = 1.; ALX = 2.; BETA = 1.; KF1 = 8.E-7; KF2 = 5.215; ; MN = 0.9383; DEGRAD=0.01745329; ; # print 'ENR= %f DENS= %f PTMIN= %f PTMAX= %f DELP= %f ' % (ENERG,DENS,PTMIN,PTMAX,DELP); ; DNDETA= DENS; MB1 = MN*A1; MB2 = MN*A2; EB1 = ENERG/2.*A1; EB2 = ENERG/2.*A2; M1 = GM1; M2 = GM2; THET = TGRAD*DEGRAD; NLOOP = int((PTMAX-PTMIN)/DELP); ; for I in range(NLOOP):; PT[I]=PTMIN+I*DELP; PTOT = PT[I]/sin(THET); ; ETOT = sqrt(M1*M1 + PTOT*PTOT); PB1 = sqrt(EB1*EB1 - MB1*MB1); PB2 = sqrt(EB2*EB2 - MB2*MB2); P2P3 = EB2*ETOT+PB2*PTOT*cos(THET); P1P2 = EB2*EB1+PB2*PB1; P1P3 = EB1*ETOT-PB1*PTOT*cos(THET); ; X1 = P2P3/P1P2; X2 = P1P3/P1P2; Y1 = X1+sqrt(X1*X2*(1.-X1)/(1.-X2)); Y2 = X2+sqrt(X1*X2*(1.-X2)/(1.-X1)); ; S = (MB1*MB1)+2.*P1P2+(MB2*MB2); SMIN = 4.*((MB1*MB1)*(X1*X1) +2.*X1*X2*P1P2+(MB2*MB2)*(X2*X2)); SX1 = 4.*( 2*(MB1*MB1)*X1+2*X2*P1P2); SX2 = 4.*( 2*(MB2*MB2)*X2+2*X1*P1P2); SX1X2= 4.*(2*P1P2); DELM = pow((1.-Y1)*(1.-Y2),ALX); ; Z[I] = sqrt(SMIN)/DELM/pow(DNDETA,BETA); ; Y1X1 = 1. +X2*(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/zdemo_8py.html:80,Guid,Guide,80,doc/master/zdemo_8py.html,https://root.cern,https://root.cern/doc/master/zdemo_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/quadp/portfolio.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. portfolio.C File ReferenceTutorials » Quadratic programming package. Detailed Description; This macro shows in detail the use of the quadratic programming package quadp . ; Running this macro :; .x portfolio.C+; or; gSystem->Load(""libQuadp"");; .L portFolio.C+; portfolio(); gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Loadvirtual int Load(const char *module, const char *entry="""", Bool_t system=kFALSE)Load a shared library.Definition TSystem.cxx:1857; Let's first review what we exactly mean by ""quadratic programming"" :; We want to minimize the following objective function :; \( c^T x + ( 1/2 ) x^T Q x \) wrt. the vector \( x \); \( c \) is a vector and \( Q \) a symmetric positive definite matrix; You might wonder what is so special about this objective which is quadratic in the unknowns, that can not be done by Minuit/Fumili . Well, we have in addition the following boundary conditions on \( x \):. \[; A x = b \\; clo \le C x \le cup \\; xlo \le x \le xup; \]. where A and C are arbitrary matrices and the rest are vectors; Not all these constraints have to be defined . Our example will only use \( xlo \), \( A \) and \( b \) Still, this could be handled by a general non-linear minimizer like Minuit by introducing so-called ""slack"" variables . However, quadp is tailored to objective functions not more complex than being quadratic . This allows usage of solving techniques which are even stable for problems involving for instance 500 variables, 100 inequality conditions and 50 equality conditions .; Enough said about quadratic programming, let's return to our example . Suppose, after a long day of doing physics, you have a look at your investments and realize that an early retirement is not possible, given the returns of your stocks . So what now ? ROOT to the rescue ...; In 1990 Harry Markowitz was awarded the Nobel ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/portfolio_8C.html:82,Guid,Guide,82,doc/master/portfolio_8C.html,https://root.cern,https://root.cern/doc/master/portfolio_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf101_basics.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf101_basics.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: fitting, plotting, toy data generation on one-dimensional PDFs. ; pdf = gauss(x,m,s). ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""RooPlot.h""; #include ""TAxis.h""; using namespace RooFit;; ; void rf101_basics(); {; // S e t u p m o d e l; // ---------------------; ; // Declare variables x,mean,sigma with associated name, title, initial value and allowed range; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);; ; // Build gaussian pdf in terms of x,mean and sigma; RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);; ; // Construct plot frame in 'x'; RooPlot *xframe = x.frame(Title(""Gaussian pdf.""));; ; // P l o t m o d e l a n d c h a n g e p a r a m e t e r v a l u e s; // ---------------------------------------------------------------------------; ; // Plot gauss in frame (i.e. in x); gauss.plotOn(xframe);; ; // Change the value of sigma to 3; sigma.setVal(3);; ; // Plot gauss in frame (i.e. in x) and draw frame on canvas; gauss.plotOn(xframe, LineColor(kRed));; ; // G e n e r a t e e v e n t s; // -----------------------------; ; // Generate a dataset of 1000 events in x from gauss; std::unique_ptr<RooDataSet> data{gauss.generate(x, 10000)};; ; // Make a second plot frame in x and draw both the; // data and the pdf in the frame; RooPlot *xframe2 = x.frame(Title(""Gaussian pdf with data""));; data->plotOn(xframe2);; gauss.plotOn(xframe2);; ; // F i t m o d e l t o d a t a; // -----------------------------; ; // Fit pdf to data; gauss.fitTo(*data, PrintLevel(-1));; ; // Print values of mean and sigma (that now reflect fitted values and errors); mean.Print();; sigm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf101__basics_8C.html:86,Guid,Guide,86,doc/master/rf101__basics_8C.html,https://root.cern,https://root.cern/doc/master/rf101__basics_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf101_basics.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf101_basics.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This tutorial illustrates the basic features of RooFit. . ; import ROOT; ; # Set up model; # ---------------------; # Declare variables x,mean,sigma with associated name, title, initial; # value and allowed range; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); mean = ROOT.RooRealVar(""mean"", ""mean of gaussian"", 1, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 1, 0.1, 10); ; # Build gaussian pdf in terms of x,mean and sigma; gauss = ROOT.RooGaussian(""gauss"", ""gaussian PDF"", x, mean, sigma); ; # Construct plot frame in 'x'; xframe = x.frame(Title=""Gaussian pdf"") # RooPlot; ; # Plot model and change parameter values; # ---------------------------------------------------------------------------; # Plot gauss in frame (i.e. in x); gauss.plotOn(xframe); ; # Change the value of sigma to 3; sigma.setVal(3); ; # Plot gauss in frame (i.e. in x) and draw frame on canvas; gauss.plotOn(xframe, LineColor=""r""); ; # Generate events; # -----------------------------; # Generate a dataset of 1000 events in x from gauss; data = gauss.generate({x}, 10000) # ROOT.RooDataSet; ; # Make a second plot frame in x and draw both the; # data and the pdf in the frame; xframe2 = x.frame(Title=""Gaussian pdf with data"") # RooPlot; data.plotOn(xframe2); gauss.plotOn(xframe2); ; # Fit model to data; # -----------------------------; # Fit pdf to data; gauss.fitTo(data, PrintLevel=-1); ; # Print values of mean and sigma (that now reflect fitted values and; # errors); mean.Print(); sigma.Print(); ; # Draw all frames on a canvas; c = ROOT.TCanvas(""rf101_basics"", ""rf101_basics"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); xframe2.GetYaxis().SetTitleOffset(1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf101__basics_8py.html:87,Guid,Guide,87,doc/master/rf101__basics_8py.html,https://root.cern,https://root.cern/doc/master/rf101__basics_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf102_dataimport.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf102_dataimport.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: importing data from ROOT TTrees and THx histograms. . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""RooPlot.h""; #include ""TTree.h""; #include ""TH1D.h""; #include ""TRandom.h""; using namespace RooFit;; ; TH1 *makeTH1();; TTree *makeTTree();; ; void rf102_dataimport(); {; // ---------------------------------------------------; // I m p o r t i n g R O O T h i s t o g r a m s; // ===================================================; ; // I m p o r t T H 1 i n t o a R o o D a t a H i s t; // ---------------------------------------------------------; ; // Create a ROOT TH1 histogram; TH1 *hh = makeTH1();; ; // Declare observable x; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create a binned dataset that imports contents of TH1 and associates its contents to observable 'x'; RooDataHist dh(""dh"", ""dh"", x, Import(*hh));; ; // P l o t a n d f i t a R o o D a t a H i s t; // ---------------------------------------------------; ; // Make plot of binned dataset showing Poisson error bars (RooFit default); RooPlot *frame = x.frame(Title(""Imported TH1 with Poisson error bars""));; dh.plotOn(frame);; ; // Fit a Gaussian pdf to the data; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""sigma"", 3, 0.1, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, mean, sigma);; gauss.fitTo(dh, PrintLevel(-1));; gauss.plotOn(frame);; ; // P l o t a n d f i t a R o o D a t a H i s t w i t h i n t e r n a l e r r o r s; // ---------------------------------------------------------------------------------------------; ; // If histogram has custom error (i.e. its contents is does not originate from a Poisson process; // but e.g. is a sum of weighted events) you c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf102__dataimport_8C.html:90,Guid,Guide,90,doc/master/rf102__dataimport_8C.html,https://root.cern,https://root.cern/doc/master/rf102__dataimport_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf102_dataimport.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf102_dataimport.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'BASIC FUNCTIONALITY' RooFit tutorial macro #102 Importing data from ROOT TTrees and THx histograms . ; import ROOT; from array import array; ; ; def makeTH1():; ; # Create ROOT ROOT.TH1 filled with a Gaussian distribution; ; hh = ROOT.TH1D(""hh"", ""hh"", 25, -10, 10); for i in range(100):; hh.Fill(ROOT.gRandom.Gaus(0, 3)); return hh; ; ; def makeTTree():; # Create ROOT ROOT.TTree filled with a Gaussian distribution in x and a; # uniform distribution in y; ; tree = ROOT.TTree(""tree"", ""tree""); px = array(""d"", [0]); py = array(""d"", [0]); tree.Branch(""x"", px, ""x/D""); tree.Branch(""y"", py, ""y/D""); for i in range(100):; px[0] = ROOT.gRandom.Gaus(0, 3); py[0] = ROOT.gRandom.Uniform() * 30 - 15; tree.Fill(); return tree; ; ; ############################; # Importing ROOT histograms; ############################; # Import ROOT TH1 into a RooDataHist; # ---------------------------------------------------------; # Create a ROOT TH1 histogram; hh = makeTH1(); ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create a binned dataset that imports contents of ROOT.TH1 and associates; # its contents to observable 'x'; dh = ROOT.RooDataHist(""dh"", ""dh"", [x], Import=hh); ; # Plot and fit a RooDataHist; # ---------------------------------------------------; # Make plot of binned dataset showing Poisson error bars (RooFit default); frame = x.frame(Title=""Imported ROOT.TH1 with Poisson error bars""); dh.plotOn(frame); ; # Fit a Gaussian p.d.f to the data; mean = ROOT.RooRealVar(""mean"", ""mean"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); gauss.fitTo(dh, PrintLevel=-1); gauss.plotOn(frame); ; # Plot and fit a RooDataHist with internal errors; # -----------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf102__dataimport_8py.html:91,Guid,Guide,91,doc/master/rf102__dataimport_8py.html,https://root.cern,https://root.cern/doc/master/rf102__dataimport_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf103_interprfuncs.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf103_interprfuncs.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: interpreted functions and PDFs. . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFitResult.h""; #include ""RooGenericPdf.h""; ; using namespace RooFit;; ; void rf103_interprfuncs(); {; // ----------------------------------------------------; // G e n e r i c i n t e r p r e t e d p . d . f .; // ====================================================; ; // Declare observable x; RooRealVar x(""x"", ""x"", -20, 20);; ; // C o n s t r u c t g e n e r i c p d f f r o m i n t e r p r e t e d e x p r e s s i o n; // -------------------------------------------------------------------------------------------------; ; // To construct a proper pdf, the formula expression is explicitly normalized internally by dividing; // it by a numeric integral of the expression over x in the range [-20,20]; //; RooRealVar alpha(""alpha"", ""alpha"", 5, 0.1, 10);; RooGenericPdf genpdf(""genpdf"", ""genpdf"", ""(1+0.1*abs(x)+sin(sqrt(abs(x*alpha+0.1))))"", RooArgSet(x, alpha));; ; // S a m p l e , f i t a n d p l o t g e n e r i c p d f; // ---------------------------------------------------------------; ; // Generate a toy dataset from the interpreted pdf; std::unique_ptr<RooDataSet> data{genpdf.generate(x, 10000)};; ; // Fit the interpreted pdf to the generated data; genpdf.fitTo(*data, PrintLevel(-1));; ; // Make a plot of the data and the pdf overlaid; RooPlot *xframe = x.frame(Title(""Interpreted expression pdf""));; data->plotOn(xframe);; genpdf.plotOn(xframe);; ; // -----------------------------------------------------------------------------------------------------------; // S t a n d a r d p . d . f a d j u s t w i t h i n t e r p r e t e d h e l p e r ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf103__interprfuncs_8C.html:92,Guid,Guide,92,doc/master/rf103__interprfuncs_8C.html,https://root.cern,https://root.cern/doc/master/rf103__interprfuncs_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf103_interprfuncs.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf103_interprfuncs.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: interpreted functions and pdfs . ; import ROOT; ; # Generic interpreted pdf; # ------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", -20, 20); ; # Construct generic pdf from interpreted expression; # ------------------------------------------------------; ; # ROOT.To construct a proper pdf, the formula expression is explicitly normalized internally by dividing; # it by a numeric integral of the expression over x in the range [-20,20]; #; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", 5, 0.1, 10); genpdf = ROOT.RooGenericPdf(""genpdf"", ""genpdf"", ""(1+0.1*abs(x)+sin(sqrt(abs(x*alpha+0.1))))"", [x, alpha]); ; # Sample, fit and plot generic pdf; # ---------------------------------------------------------------; ; # Generate a toy dataset from the interpreted pdf; data = genpdf.generate({x}, 10000); ; # Fit the interpreted pdf to the generated data; genpdf.fitTo(data, PrintLevel=-1); ; # Make a plot of the data and the pdf overlaid; xframe = x.frame(Title=""Interpreted expression pdf""); data.plotOn(xframe); genpdf.plotOn(xframe); ; # Standard pdf adjust with interpreted helper function; # ------------------------------------------------------------------------------------------------------------; # Make a gauss(x,sqrt(mean2),sigma) from a standard ROOT.RooGaussian #; #; # Construct standard pdf with formula replacing parameter; # ------------------------------------------------------------------------------------------------------------; ; # Construct parameter mean2 and sigma; mean2 = ROOT.RooRealVar(""mean2"", ""mean^2"", 10, 0, 200); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); ; # Construct interpreted function mean = sqrt(mean^2); mean = ROOT.RooFormulaVar(""mean"", ""mean"", ""sq",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf103__interprfuncs_8py.html:93,Guid,Guide,93,doc/master/rf103__interprfuncs_8py.html,https://root.cern,https://root.cern/doc/master/rf103__interprfuncs_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf104_classfactory.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf104_classfactory.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: The class factory for functions and pdfs ; NOTE: This demo uses code that is generated by the macro, therefore it cannot be compiled in one step by ACliC. To run this macro compiled with ACliC do; root>.x rf104_classfactory.C // run interpreted to generate code; root>.L MyPdfV3.cxx+ // Compile and load created class; root>.x rf104_classfactory.C+ // run compiled code; rf104_classfactoryDefinition rf104_classfactory.py:1. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooClassFactory.h""; #include ""TROOT.h""; ; using namespace RooFit;; ; void rf104_classfactory(); {; // W r i t e c l a s s s k e l e t o n c o d e; // --------------------------------------------------; ; // Write skeleton pdf class with variable x,a,b; // To use this class,; // - Edit the file MyPdfV1.cxx and implement the evaluate() method in terms of x,a and b; // - Compile and link class with '.x MyPdfV1.cxx+'; //; RooClassFactory::makePdf(""MyPdfV1"", ""x,A,B"");; ; // W i t h a d d e d i n i t i a l v a l u e e x p r e s s i o n; // ---------------------------------------------------------------------; ; // Write skeleton pdf class with variable x,a,b and given formula expression; // To use this class,; // - Compile and link class with '.x MyPdfV2.cxx+'; //; RooClassFactory::makePdf(""MyPdfV2"", ""x,A,B"", """", ""A*fabs(x)+pow(x-B,2)"");; ; // W i t h a d d e d a n a l y t i c a l i n t e g r a l e x p r e s s i o n; // ---------------------------------------------------------------------------------; ; // Write skeleton pdf class with variable x,a,b, given formula expression _and_; // given expression for analytical integral over x; // To use this class,; // -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf104__classfactory_8C.html:92,Guid,Guide,92,doc/master/rf104__classfactory_8C.html,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf104_classfactory.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf104_classfactory.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: the class factory for functions and pdfs ; NOTE: This demo uses code that is generated by the macro, which can be compiled on the fly (set to MyPdfV3 below). To use MyPdfV1 or MyPdfV2, adjust lines below accordingly. ; import ROOT; ; # Write class skeleton code; # --------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b; # To use this class,; # - Edit the file MyPdfV1.cxx and implement the evaluate() method in terms of x,a and b; # - Compile and link class with '.x MyPdfV1.cxx+'; #; ROOT.RooClassFactory.makePdf(""MyPdfV1"", ""x,A,B""); ; # With added initial value expression; # ---------------------------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b and given formula expression; # To use this class,; # - Compile and link class with '.x MyPdfV2.cxx+'; #; ROOT.RooClassFactory.makePdf(""MyPdfV2"", ""x,A,B"", """", ""A*fabs(x)+pow(x-B,2)""); ; # With added analytical integral expression; # ---------------------------------------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b, given formula expression _and_; # given expression for analytical integral over x; # To use this class,; # - Compile and link class with '.x MyPdfV3.cxx+'; #; ROOT.RooClassFactory.makePdf(; ""MyPdfV3"",; ""x,A,B"",; """",; ""A*fabs(x)+pow(x-B,2)"",; True,; False,; ""x:(A/2)*(pow(x.max(rangeName),2)+pow(x.min(rangeName),2))+(1./3)*(pow(x.max(rangeName)-B,3)-pow(x.min(rangeName)-B,3))"",; ); ; # Use instance of created class; # ---------------------------------------------------------; ; # Compile MyPdfV3 class; ROOT.gROOT.ProcessLineSync("".x MyPdfV3.cxx+""); ; # Creat instance of MyPdfV3 class; a = ROOT.RooRealVar(""a"", ""a"", 1); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf104__classfactory_8py.html:93,Guid,Guide,93,doc/master/rf104__classfactory_8py.html,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf105_funcbinding.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf105_funcbinding.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: binding ROOT math functions as RooFit functions and pdfs . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TMath.h""; #include ""TF1.h""; #include ""Math/DistFunc.h""; #include ""RooTFnBinding.h""; ; using namespace RooFit;; ; void rf105_funcbinding(); {; ; // B i n d T M a t h : : E r f C f u n c t i o n; // ---------------------------------------------------; ; // Bind one-dimensional TMath::Erf function as RooAbsReal function; RooRealVar x(""x"", ""x"", -3, 3);; RooAbsReal *errorFunc = bindFunction(""erf"", TMath::Erf, x);; ; // Print erf definition; errorFunc->Print();; ; // Plot erf on frame; RooPlot *frame1 = x.frame(Title(""TMath::Erf bound as RooFit function""));; errorFunc->plotOn(frame1);; ; // B i n d R O O T : : M a t h : : b e t a _ p d f C f u n c t i o n; // -----------------------------------------------------------------------; ; // Bind pdf ROOT::Math::Beta with three variables as RooAbsPdf function; RooRealVar x2(""x2"", ""x2"", 0, 0.999);; RooRealVar a(""a"", ""a"", 5, 0, 10);; RooRealVar b(""b"", ""b"", 2, 0, 10);; RooAbsPdf *beta = bindPdf(""beta"", ROOT::Math::beta_pdf, x2, a, b);; ; // Perf beta definition; beta->Print();; ; // Generate some events and fit; std::unique_ptr<RooDataSet> data{beta->generate(x2, 10000)};; beta->fitTo(*data, PrintLevel(-1));; ; // Plot data and pdf on frame; RooPlot *frame2 = x2.frame(Title(""ROOT::Math::Beta bound as RooFit pdf""));; data->plotOn(frame2);; beta->plotOn(frame2);; ; // B i n d R O O T T F 1 a s R o o F i t f u n c t i o n; // ---------------------------------------------------------------; ; // Create a ROOT TF1 function; TF1 *fa1 = new TF1(""fa1"", ""sin(x)/x"", 0, 10);; ; // Create an ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf105__funcbinding_8C.html:91,Guid,Guide,91,doc/master/rf105__funcbinding_8C.html,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf105_funcbinding.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf105_funcbinding.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'BASIC FUNCTIONALITY' RooFit tutorial macro #105 Demonstration of binding ROOT Math functions as RooFit functions and pdfs . ; import ROOT; ; # Bind ROOT TMath::Erf C function; # ---------------------------------------------------; ; # Bind one-dimensional ROOT.TMath.Erf function as ROOT.RooAbsReal function; x = ROOT.RooRealVar(""x"", ""x"", -3, 3); erf = ROOT.RooFit.bindFunction(""erf"", ROOT.TMath.Erf, x); ; # Print erf definition; erf.Print(); ; # Plot erf on frame; frame1 = x.frame(Title=""TMath.Erf bound as ROOT.RooFit function""); erf.plotOn(frame1); ; # Bind ROOT::Math::beta_pdf C function; # -----------------------------------------------------------------------; ; # Bind pdf ROOT.Math.Beta with three variables as ROOT.RooAbsPdf function; x2 = ROOT.RooRealVar(""x2"", ""x2"", 0, 0.999); a = ROOT.RooRealVar(""a"", ""a"", 5, 0, 10); b = ROOT.RooRealVar(""b"", ""b"", 2, 0, 10); beta = ROOT.RooFit.bindPdf(""beta"", ROOT.Math.beta_pdf, x2, a, b); ; # Perf beta definition; beta.Print(); ; # Generate some events and fit; data = beta.generate({x2}, 10000); beta.fitTo(data, PrintLevel=-1); ; # Plot data and pdf on frame; frame2 = x2.frame(Title=""ROOT.Math.Beta bound as ROOT.RooFit pdf""); data.plotOn(frame2); beta.plotOn(frame2); ; # Bind ROOT TF1 as RooFit function; # ---------------------------------------------------------------; ; # Create a ROOT TF1 function; fa1 = ROOT.TF1(""fa1"", ""sin(x)/x"", 0, 10); ; # Create an observable; x3 = ROOT.RooRealVar(""x3"", ""x3"", 0.01, 20); ; # Create binding of TF1 object to above observable; rfa1 = ROOT.RooFit.bindFunction(fa1, x3); ; # Print rfa1 definition; rfa1.Print(); ; # Make plot frame in observable, TF1 binding function; frame3 = x3.frame(Title=""TF1 bound as ROOT.RooFit function""); rfa1.plotOn(frame3); ; c = R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf105__funcbinding_8py.html:92,Guid,Guide,92,doc/master/rf105__funcbinding_8py.html,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf106_plotdecoration.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf106_plotdecoration.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: adding boxes with parameters, statistics to RooPlots, decorating with arrows, text etc... . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TText.h""; #include ""TArrow.h""; #include ""TFile.h""; using namespace RooFit;; ; void rf106_plotdecoration(); {; // S e t u p m o d e l; // ---------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create Gaussian; RooRealVar sigma(""sigma"", ""sigma"", 1, 0.1, 10);; RooRealVar mean(""mean"", ""mean"", -3, -10, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, mean, sigma);; ; // Generate a sample of 1000 events with sigma=3; std::unique_ptr<RooDataSet> data{gauss.generate(x, 1000)};; ; // Fit pdf to data; gauss.fitTo(*data, PrintLevel(-1));; ; // P l o t p . d . f a n d d a t a; // -------------------------------------; ; // Overlay projection of gauss on data; RooPlot *frame = x.frame(Name(""xframe""), Title(""RooPlot with decorations""), Bins(40));; data->plotOn(frame);; gauss.plotOn(frame);; ; // A d d b o x w i t h p d f p a r a m e t e r s; // -----------------------------------------------------; ; // Left edge of box starts at 55% of Xaxis); gauss.paramOn(frame, Layout(0.55));; ; // A d d b o x w i t h d a t a s t a t i s t i c s; // -------------------------------------------------------; ; // X size of box is from 55% to 99% of Xaxis range, top of box is at 80% of Yaxis range); data->statOn(frame, Layout(0.55, 0.99, 0.8));; ; // A d d t e x t a n d a r r o w; // -----------------------------------; ; // Add text to frame; TText *txt = new TText(2, 100, ""Signal"");; txt->SetTextSize(0.04);; txt->SetTextColor(kRed);; frame->addObject(txt);; ; // Add arrow to fra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf106__plotdecoration_8C.html:94,Guid,Guide,94,doc/master/rf106__plotdecoration_8C.html,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf106_plotdecoration.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf106_plotdecoration.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: adding boxes with parameters to RooPlots and decorating with arrows, etc... . ; import ROOT; ; # Set up model; # ---------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create Gaussian; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 1, 0.1, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, -10, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); ; # Generate a sample of 1000 events with sigma=3; data = gauss.generate({x}, 1000); ; # Fit pdf to data; gauss.fitTo(data, PrintLevel=-1); ; # Plot pdf and data; # -------------------------------------; ; # Overlay projection of gauss on data; frame = x.frame(Name=""xframe"", Title=""RooPlot with decorations"", Bins=40); data.plotOn(frame); gauss.plotOn(frame); ; # Add box with pdf parameters; # -----------------------------------------------------; ; # Left edge of box starts at 55% of Xaxis); gauss.paramOn(frame, Layout=0.55); ; # Add box with data statistics; # -------------------------------------------------------; ; # X size of box is from 55% to 99% of Xaxis range, of box is at 80% of; # Yaxis range); data.statOn(frame, Layout=(0.55, 0.99, 0.8)); ; # Add text and arrow; # -----------------------------------; ; # Add text to frame; txt = ROOT.TText(2, 100, ""Signal""); txt.SetTextSize(0.04); txt.SetTextColor(ROOT.kRed); frame.addObject(txt); ; # Add arrow to frame; arrow = ROOT.TArrow(2, 100, -1, 50, 0.01, ""|>""); arrow.SetLineColor(ROOT.kRed); arrow.SetFillColor(ROOT.kRed); arrow.SetLineWidth(3); frame.addObject(arrow); ; # Persist frame with all decorations in ROOT file; # ---------------------------------------------------------------------------------------------; ; f = ROOT.TFile(""rf106_plotdecoration.root"", ""RECREA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf106__plotdecoration_8py.html:95,Guid,Guide,95,doc/master/rf106__plotdecoration_8py.html,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf107_plotstyles.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf107_plotstyles.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: various plotting styles of data, functions in a RooPlot . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf107_plotstyles(); {; ; // S e t u p m o d e l; // ---------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create Gaussian; RooRealVar sigma(""sigma"", ""sigma"", 3, 0.1, 10);; RooRealVar mean(""mean"", ""mean"", -3, -10, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, mean, sigma);; ; // Generate a sample of 100 events with sigma=3; std::unique_ptr<RooDataSet> data{gauss.generate(x, 100)};; ; // Fit pdf to data; gauss.fitTo(*data, PrintLevel(-1));; ; // M a k e p l o t f r a m e s; // -------------------------------; ; // Make four plot frames to demonstrate various plotting features; RooPlot *frame1 = x.frame(Name(""xframe""), Title(""Red Curve / SumW2 Histo errors""), Bins(20));; RooPlot *frame2 = x.frame(Name(""xframe""), Title(""Dashed Curve / No XError bars""), Bins(20));; RooPlot *frame3 = x.frame(Name(""xframe""), Title(""Filled Curve / Blue Histo""), Bins(20));; RooPlot *frame4 = x.frame(Name(""xframe""), Title(""Partial Range / Filled Bar chart""), Bins(20));; ; // D a t a p l o t t i n g s t y l e s; // ---------------------------------------; ; // Use sqrt(sum(weights^2)) error instead of Poisson errors; data->plotOn(frame1, DataError(RooAbsData::SumW2));; ; // Remove horizontal error bars; data->plotOn(frame2, XErrorSize(0));; ; // Blue markers and error bors; data->plotOn(frame3, MarkerColor(kBlue), LineColor(kBlue));; ; // Filled bar chart; data->plotOn(frame4, DrawOption(""B""), DataError(RooAbsData::None), XErrorSize(0), FillColor(kGray));; ; // F u n c t i o n p l o t t i n g ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf107__plotstyles_8C.html:90,Guid,Guide,90,doc/master/rf107__plotstyles_8C.html,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf107_plotstyles.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf107_plotstyles.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: demonstration of various plotting styles of data, functions in a RooPlot . ; import ROOT; ; ; # Set up model; # ---------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create Gaussian; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, -10, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); ; # Generate a sample of 100 events with sigma=3; data = gauss.generate({x}, 100); ; # Fit pdf to data; gauss.fitTo(data, PrintLevel=-1); ; # Make plot frames; # -------------------------------; ; # Make four plot frames to demonstrate various plotting features; frame1 = x.frame(Name=""xframe"", Title=""Red Curve / SumW2 Histo errors"", Bins=20); frame2 = x.frame(Name=""xframe"", Title=""Dashed Curve / No XError bars"", Bins=20); frame3 = x.frame(Name=""xframe"", Title=""Filled Curve / Blue Histo"", Bins=20); frame4 = x.frame(Name=""xframe"", Title=""Partial Range / Filled Bar chart"", Bins=20); ; # Data plotting styles; # ---------------------------------------; ; # Use sqrt(sum(weights^2)) error instead of Poisson errors; data.plotOn(frame1, DataError=""SumW2""); ; # Remove horizontal error bars; data.plotOn(frame2, XErrorSize=0); ; # Blue markers and error bors; data.plotOn(frame3, MarkerColor=""b"", LineColor=""b""); ; # Filled bar chart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf107__plotstyles_8py.html:91,Guid,Guide,91,doc/master/rf107__plotstyles_8py.html,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf108_plotbinning.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf108_plotbinning.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: plotting unbinned data with alternate and variable binnings . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooBMixDecay.h""; #include ""RooCategory.h""; #include ""RooBinning.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf108_plotbinning(); {; ; // S e t u p m o d e l; // ---------------------; ; // Build a B decay pdf with mixing; RooRealVar dt(""dt"", ""dt"", -20, 20);; RooRealVar dm(""dm"", ""dm"", 0.472);; RooRealVar tau(""tau"", ""tau"", 1.547);; RooRealVar w(""w"", ""mistag rate"", 0.1);; RooRealVar dw(""dw"", ""delta mistag rate"", 0.);; ; RooCategory mixState(""mixState"", ""B0/B0bar mixing state"");; mixState.defineType(""mixed"", -1);; mixState.defineType(""unmixed"", 1);; RooCategory tagFlav(""tagFlav"", ""Flavour of the tagged B0"");; tagFlav.defineType(""B0"", 1);; tagFlav.defineType(""B0bar"", -1);; ; // Build a gaussian resolution model; RooRealVar bias1(""bias1"", ""bias1"", 0);; RooRealVar sigma1(""sigma1"", ""sigma1"", 0.1);; RooGaussModel gm1(""gm1"", ""gauss model 1"", dt, bias1, sigma1);; ; // Construct Bdecay (x) gauss; RooBMixDecay bmix(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, RooBMixDecay::DoubleSided);; ; // S a m p l e d a t a f r o m m o d e l; // --------------------------------------------; ; // Sample 2000 events in (dt,mixState,tagFlav) from bmix; std::unique_ptr<RooDataSet> data{bmix.generate(RooArgSet(dt, mixState, tagFlav), 2000)};; ; // S h o w d t d i s t r i b u t i o n w i t h c u s t o m b i n n i n g; // -------------------------------------------------------------------------------; ; // Make plot of dt distribution of data in range (-15,15) with fine binning for dt>0 and coa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf108__plotbinning_8C.html:91,Guid,Guide,91,doc/master/rf108__plotbinning_8C.html,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf108_plotbinning.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf108_plotbinning.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: plotting unbinned data with alternate and variable binnings . ; import ROOT; ; # Set up model; # ---------------------; ; # Build a B decay pdf with mixing; dt = ROOT.RooRealVar(""dt"", ""dt"", -20, 20); dm = ROOT.RooRealVar(""dm"", ""dm"", 0.472); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.547); w = ROOT.RooRealVar(""w"", ""mistag rate"", 0.1); dw = ROOT.RooRealVar(""dw"", ""delta mistag rate"", 0.0); ; mixState = ROOT.RooCategory(""mixState"", ""B0/B0bar mixing state"", {""mixed"": -1, ""unmixed"": 1}); tagFlav = ROOT.RooCategory(""tagFlav"", ""Flavour of the tagged B0"", {""B0"": 1, ""B0bar"": -1}); ; # Build a gaussian resolution model; dterr = ROOT.RooRealVar(""dterr"", ""dterr"", 0.1, 1.0); bias1 = ROOT.RooRealVar(""bias1"", ""bias1"", 0); sigma1 = ROOT.RooRealVar(""sigma1"", ""sigma1"", 0.1); gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct Bdecay (x) gauss; bmix = ROOT.RooBMixDecay(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, type=""DoubleSided""); ; # Sample data from model; # --------------------------------------------; ; # Sample 2000 events in (dt,mixState,tagFlav) from bmix; data = bmix.generate({dt, mixState, tagFlav}, 2000); ; # Show dt distribution with custom binning; # -------------------------------------------------------------------------------; ; # Make plot of dt distribution of data in range (-15,15) with fine binning; # for dt>0 and coarse binning for dt<0; ; # Create binning object with range (-15,15); tbins = ROOT.RooBinning(-15, 15); ; # Add 60 bins with uniform spacing in range (-15,0); tbins.addUniform(60, -15, 0); ; # Add 15 bins with uniform spacing in range (0,15); tbins.addUniform(15, 0, 15); ; # Make plot with specified binning; dtframe = dt.frame(Range=(-15, 15), Title=""dt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf108__plotbinning_8py.html:92,Guid,Guide,92,doc/master/rf108__plotbinning_8py.html,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf109_chi2residpull.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf109_chi2residpull.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: Calculating chi^2 from histograms and curves in RooPlots, making histogram of residual and pull distributions . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooHist.h""; using namespace RooFit;; ; void rf109_chi2residpull(); {; ; // S e t u p m o d e l; // ---------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create Gaussian; RooRealVar sigma(""sigma"", ""sigma"", 3, 0.1, 10);; RooRealVar mean(""mean"", ""mean"", 0, -10, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, 0.0, sigma);; ; // Generate a sample of 1000 events with sigma=3; std::unique_ptr<RooDataSet> data{gauss.generate(x, 10000)};; ; // Change sigma to 3.15; sigma.setVal(3.15);; ; // P l o t d a t a a n d s l i g h t l y d i s t o r t e d m o d e l; // ---------------------------------------------------------------------------; ; // Overlay projection of gauss with sigma=3.15 on data with sigma=3.0; RooPlot *frame1 = x.frame(Title(""Data with distorted Gaussian pdf""), Bins(40));; data->plotOn(frame1, DataError(RooAbsData::SumW2));; gauss.plotOn(frame1);; ; // C a l c u l a t e c h i ^ 2; // ------------------------------; ; // Show the chi^2 of the curve w.r.t. the histogram; // If multiple curves or datasets live in the frame you can specify; // the name of the relevant curve and/or dataset in chiSquare(); cout << ""chi^2 = "" << frame1->chiSquare() << endl;; ; // S h o w r e s i d u a l a n d p u l l d i s t s; // -------------------------------------------------------; ; // Construct a histogram with the residuals of the data w.r.t. the curve; RooHist *hresid = frame1->residHist();; ; // Construct a histogram with the pulls of the d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf109__chi2residpull_8C.html:93,Guid,Guide,93,doc/master/rf109__chi2residpull_8C.html,https://root.cern,https://root.cern/doc/master/rf109__chi2residpull_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf109_chi2residpull.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf109_chi2residpull.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'BASIC FUNCTIONALITY' RooFit tutorial macro #109 Calculating chi^2 from histograms and curves in ROOT.RooPlots, making histogram of residual and pull distributions . ; from __future__ import print_function; import ROOT; ; # Set up model; # ---------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create Gaussian; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", 0, -10, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); ; # Generate a sample of 1000 events with sigma=3; data = gauss.generate({x}, 10000); ; # Change sigma to 3.15; sigma.setVal(3.15); ; # Plot data and slightly distorted model; # ---------------------------------------------------------------------------; ; # Overlay projection of gauss with sigma=3.15 on data with sigma=3.0; frame1 = x.frame(Title=""Data with distorted Gaussian pdf"", Bins=40); data.plotOn(frame1, DataError=""SumW2""); gauss.plotOn(frame1); ; # Calculate chi^2; # ------------------------------; ; # Show the chi^2 of the curve w.r.t. the histogram; # If multiple curves or datasets live in the frame you can specify; # the name of the relevant curve and/or dataset in chiSquare(); print(""chi^2 = "", frame1.chiSquare()); ; # Show residual and pull dists; # -------------------------------------------------------; ; # Construct a histogram with the residuals of the data w.r.t. the curve; hresid = frame1.residHist(); ; # Construct a histogram with the pulls of the data w.r.t the curve; hpull = frame1.pullHist(); ; # Create a frame to draw the residual distribution and add the; # distribution to the frame; frame2 = x.frame(Title=""Residual Distribution""); frame2.addPlotable(hresid, ""P""); ; # Create a frame to draw the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf109__chi2residpull_8py.html:94,Guid,Guide,94,doc/master/rf109__chi2residpull_8py.html,https://root.cern,https://root.cern/doc/master/rf109__chi2residpull_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf110_normintegration.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf110_normintegration.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: normalization and integration of pdfs, construction of cumulative distribution monodimensional functions . ; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooAbsReal.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; using namespace RooFit;; ; void rf110_normintegration(); {; // S e t u p m o d e l; // ---------------------; ; // Create observables x,y; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create pdf gaussx(x,-2,3); RooGaussian gx(""gx"", ""gx"", x, -2.0, 3.0);; ; // R e t r i e v e r a w & n o r m a l i z e d v a l u e s o f R o o F i t p . d . f . s; // --------------------------------------------------------------------------------------------------; ; // Return 'raw' unnormalized value of gx; cout << ""gx = "" << gx.getVal() << endl;; ; // Return value of gx normalized over x in range [-10,10]; RooArgSet nset(x);; cout << ""gx_Norm[x] = "" << gx.getVal(&nset) << endl;; ; // Create object representing integral over gx; // which is used to calculate gx_Norm[x] == gx / gx_Int[x]; std::unique_ptr<RooAbsReal> igx{gx.createIntegral(x)};; cout << ""gx_Int[x] = "" << igx->getVal() << endl;; ; // I n t e g r a t e n o r m a l i z e d p d f o v e r s u b r a n g e; // ----------------------------------------------------------------------------; ; // Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5);; ; // Create an integral of gx_Norm[x] over x in range ""signal""; // This is the fraction of of pdf gx_Norm[x] which is in the; // range named ""signal""; std::unique_ptr<RooAbsReal> igx_sig{gx.createIntegral(x, NormSet(x), Range(""signal""))};; cout << ""gx_Int[x|signal]_Norm[x] = "" << igx_sig->getVal() << endl;; ; // C o n s t r u c t c u m u l a t i v e d i s t r i b u t i o n f u ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf110__normintegration_8C.html:95,Guid,Guide,95,doc/master/rf110__normintegration_8C.html,https://root.cern,https://root.cern/doc/master/rf110__normintegration_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf110_normintegration.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf110_normintegration.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: examples on normalization and integration of pdfs, construction of cumulative distribution functions from monodimensional pdfs . ; from __future__ import print_function; import ROOT; ; # Set up model; # ---------------------; ; # Create observables x,y; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create pdf gaussx(x,-2,3); gx = ROOT.RooGaussian(""gx"", ""gx"", x, -2, 3); ; # Retrieve raw & normalized values of RooFit pdfs; # --------------------------------------------------------------------------------------------------; ; # Return 'raw' unnormalized value of gx; print(""gx = "", gx.getVal()); ; # Return value of gx normalized over x in range [-10,10]; nset = {x}; print(""gx_Norm[x] = "", gx.getVal(nset)); ; # Create object representing integral over gx; # which is used to calculate gx_Norm[x] == gx / gx_Int[x]; igx = gx.createIntegral({x}); print(""gx_Int[x] = "", igx.getVal()); ; # Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; ; # Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5); ; # Create an integral of gx_Norm[x] over x in range ""signal""; # ROOT.This is the fraction of of pdf gx_Norm[x] which is in the; # range named ""signal""; xset = {x}; igx_sig = gx.createIntegral(xset, NormSet=xset, Range=""signal""); print(""gx_Int[x|signal]_Norm[x] = "", igx_sig.getVal()); ; # Construct cumulative distribution function from pdf; # -----------------------------------------------------------------------------------------------------; ; # Create the cumulative distribution function of gx; # i.e. calculate Int[-10,x] gx(x') dx'; gx_cdf = gx.createCdf({x}); ; # Plot cdf of gx versus x; frame = x.frame(Title=""cdf of Gaussian pd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf110__normintegration_8py.html:96,Guid,Guide,96,doc/master/rf110__normintegration_8py.html,https://root.cern,https://root.cern/doc/master/rf110__normintegration_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf111_derivatives.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf111_derivatives.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: numerical 1st,2nd and 3rd order derivatives w.r.t. ; observables and parameters; pdf = gauss(x,m,s); xDouble_t x[n]Definition legend1.C:17; mTMarker mDefinition textangle.C:8. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf111_derivatives(); {; // S e t u p m o d e l; // ---------------------; ; // Declare variables x,mean,sigma with associated name, title, initial value and allowed range; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);; ; // Build gaussian pdf in terms of x,mean and sigma; RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);; ; // C r e a t e a n d p l o t d e r i v a t i v e s w . r . t . x; // ----------------------------------------------------------------------; ; // Derivative of normalized gauss(x) w.r.t. observable x; RooAbsReal *dgdx = gauss.derivative(x, 1);; ; // Second and third derivative of normalized gauss(x) w.r.t. observable x; RooAbsReal *d2gdx2 = gauss.derivative(x, 2);; RooAbsReal *d3gdx3 = gauss.derivative(x, 3);; ; // Construct plot frame in 'x'; RooPlot *xframe = x.frame(Title(""d(Gauss)/dx""));; ; // Plot gauss in frame (i.e. in x); gauss.plotOn(xframe);; ; // Plot derivatives in same frame; dgdx->plotOn(xframe, LineColor(kMagenta));; d2gdx2->plotOn(xframe, LineColor(kRed));; d3gdx3->plotOn(xframe, LineColor(kOrange));; ; // C r e a t e a n d p l o t d e r i v a t i v e s w . r . t . s i g m a; // ------------------------------------------------------------------------------; ; // Derivative of normalized gauss(x) w.r.t. parameter sigma; RooAbsReal ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf111__derivatives_8C.html:91,Guid,Guide,91,doc/master/rf111__derivatives_8C.html,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf111_derivatives.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf111_derivatives.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: numerical 1st, and 3rd order derivatives w.r.t. ; observables and parameters; pdf = gauss(x,m,s). ; import ROOT; ; # Set up model; # ---------------------; ; # Declare variables x,mean, with associated name, title, value and allowed; # range; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); mean = ROOT.RooRealVar(""mean"", ""mean of gaussian"", 1, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 1, 0.1, 10); ; # Build gaussian pdf in terms of x, and sigma; gauss = ROOT.RooGaussian(""gauss"", ""gaussian PDF"", x, mean, sigma); ; # Create and plot derivatives w.r.t. x; # ----------------------------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. observable x; dgdx = gauss.derivative(x, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. observable x; d2gdx2 = gauss.derivative(x, 2); d3gdx3 = gauss.derivative(x, 3); ; # Construct plot frame in 'x'; xframe = x.frame(Title=""d(Gauss)/dx""); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(xframe); ; # Plot derivatives in same frame; dgdx.plotOn(xframe, LineColor=""m""); d2gdx2.plotOn(xframe, LineColor=""r""); d3gdx3.plotOn(xframe, LineColor=""kOrange""); ; # Create and plot derivatives w.r.t. sigma; # ------------------------------------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. parameter sigma; dgds = gauss.derivative(sigma, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. parameter sigma; d2gds2 = gauss.derivative(sigma, 2); d3gds3 = gauss.derivative(sigma, 3); ; # Construct plot frame in 'sigma'; sframe = sigma.frame(Title=""d(Gauss)/d(sigma)"", Range=(0.0, 2.0)); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(sframe); ; # Plot derivatives in same fram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf111__derivatives_8py.html:92,Guid,Guide,92,doc/master/rf111__derivatives_8py.html,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf201_composite.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf201_composite.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: composite pdf with signal and background component ; pdf = f_bkg * bkg(x,a0,a1) + (1-fbkg) * (f_sig1 * sig1(x,m,s1 + (1-f_sig1) * sig2(x,m,s2))); s1#define s1(x)Definition RSha256.hxx:91; xDouble_t x[n]Definition legend1.C:17; mTMarker mDefinition textangle.C:8. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf201_composite(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; ; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg(""bkg"", ""Background"", x, RooArgSet(a0, a1));; ; // ---------------------------------------------; // M E T H O D 1 - T w o R o o A d d P d f s; // =============================================; ; // A d d s i g n a l c o m p o n e n t s; // ------------------------------------------; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; // A d d s i g n a l a n d b a c k g r o u n d; // --------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf201__composite_8C.html:89,Guid,Guide,89,doc/master/rf201__composite_8C.html,https://root.cern,https://root.cern/doc/master/rf201__composite_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf201_composite.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf201_composite.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: composite pdf with signal and background component ; pdf = f_bkg * bkg(x,a0,a1) + (1-fbkg) * (f_sig1 * sig1(x,m,s1 + (1-f_sig1) * sig2(x,m,s2))). ; import ROOT; ; # Setup component pdfs; # ---------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; ; # Method 1 - Two RooAddPdfs; # ------------------------------------------; # Add signal components; ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Add signal and background; # ------------------------------------------------; ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Sample, fit and plot model; # ---------------------------------------------------; ; # Generate a data sample of 1000 events in x from model; data = model.generate({x}, 1000); ; # Fit model to data; model.fitTo(data, PrintLevel=-1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf201__composite_8py.html:90,Guid,Guide,90,doc/master/rf201__composite_8py.html,https://root.cern,https://root.cern/doc/master/rf201__composite_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf202_extendedmlfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf202_extendedmlfit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Setting up an extended maximum likelihood fit. . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf202_extendedmlfit(); {; ; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; ; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg(""bkg"", ""Background"", x, RooArgSet(a0, a1));; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; //----------------; // M E T H O D 1; //================; ; // C o n s t r u c t e x t e n d e d c o m p o s i t e m o d e l; // -------------------------------------------------------------------; ; // Sum the composite signal and background into an extended pdf nsig*sig+nbkg*bkg; RooRealVar nsig(""nsig"", ""number of signal events"", 500, 0., 10000);; RooRealVar nbkg(""nbkg"", ""number of background events"", 500, 0, 10000);; RooAddPdf model(""model"", ""(g1+g2)+a"", RooArgList(bkg, sig), RooArgList(nbkg, nsig));; ; // ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf202__extendedmlfit_8C.html:93,Guid,Guide,93,doc/master/rf202__extendedmlfit_8C.html,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf202_extendedmlfit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf202_extendedmlfit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: setting up an extended maximum likelihood fit . ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Method 1 - Construct extended composite model; # -------------------------------------------------------------------; ; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg; nsig = ROOT.RooRealVar(""nsig"", ""number of signal events"", 500, 0.0, 10000); nbkg = ROOT.RooRealVar(""nbkg"", ""number of background events"", 500, 0, 10000); model = ROOT.RooAddPdf(""model"", ""(g1+g2)+a"", [bkg, sig], [nbkg, nsig]); ; # Sample, fit and plot extended model; # ---------------------------------------------------------------------; ; # Generate a data sample of expected number events in x from model; # = model.expectedEvents() = nsig+nbkg; data = model.generate({x}); ; # Fit model ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf202__extendedmlfit_8py.html:94,Guid,Guide,94,doc/master/rf202__extendedmlfit_8py.html,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf203_ranges.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf203_ranges.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Fitting and plotting in sub ranges. . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""RooFitResult.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf203_ranges(); {; // S e t u p m o d e l; // ---------------------; ; // Construct observables x; RooRealVar x(""x"", ""x"", -10, 10);; ; // Construct gaussx(x,mx,1); RooRealVar mx(""mx"", ""mx"", 0, -10, 10);; RooGaussian gx(""gx"", ""gx"", x, mx, 1.0);; ; // Construct px = 1 (flat in x); RooPolynomial px(""px"", ""px"", x);; ; // Construct model = f*gx + (1-f)px; RooRealVar f(""f"", ""f"", 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(gx, px), f);; ; // Generated 10000 events in (x,y) from pdf model; std::unique_ptr<RooDataSet> modelData{model.generate(x, 10000)};; ; // F i t f u l l r a n g e; // ---------------------------; ; // Fit pdf to all data; std::unique_ptr<RooFitResult> r_full{model.fitTo(*modelData, Save(true), PrintLevel(-1))};; ; // F i t p a r t i a l r a n g e; // ----------------------------------; ; // Define ""signal"" range in x as [-3,3]; x.setRange(""signal"", -3, 3);; ; // Fit pdf only to data in ""signal"" range; std::unique_ptr<RooFitResult> r_sig{model.fitTo(*modelData, Save(true), Range(""signal""), PrintLevel(-1))};; ; // P l o t / p r i n t r e s u l t s; // ---------------------------------------; ; // Make plot frame in x and add data and fitted model; RooPlot *frame = x.frame(Title(""Fitting a sub range""));; modelData->plotOn(frame);; model.plotOn(frame, Range(""""), LineStyle(kDashed), LineColor(kRed)); // Add shape in full ranged dashed; model.plotOn(frame); // By default only fitted range is shown; ; // Print fit results; cout << ""res",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf203__ranges_8C.html:86,Guid,Guide,86,doc/master/rf203__ranges_8C.html,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf203_ranges.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf203_ranges.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: fitting and plotting in sub ranges . ; from __future__ import print_function; import ROOT; ; # Set up model; # ---------------------; ; # Construct observables x; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Construct gaussx(x,mx,1); mx = ROOT.RooRealVar(""mx"", ""mx"", 0, -10, 10); gx = ROOT.RooGaussian(""gx"", ""gx"", x, mx, 1.0); ; # px = 1 (flat in x); px = ROOT.RooPolynomial(""px"", ""px"", x); ; # model = f*gx + (1-f)px; f = ROOT.RooRealVar(""f"", ""f"", 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gx, px], [f]); ; # Generated 10000 events in (x,y) from pdf model; modelData = model.generate({x}, 10000); ; # Fit full range; # ---------------------------; ; # Fit pdf to all data; r_full = model.fitTo(modelData, Save=True, PrintLevel=-1); ; # Fit partial range; # ----------------------------------; ; # Define ""signal"" range in x as [-3,3]; x.setRange(""signal"", -3, 3); ; # Fit pdf only to data in ""signal"" range; r_sig = model.fitTo(modelData, Save=True, Range=""signal"", PrintLevel=-1); ; # Plot/print results; # ---------------------------------------; ; # Make plot frame in x and add data and fitted model; frame = x.frame(Title=""Fitting a sub range""); modelData.plotOn(frame); model.plotOn(frame, Range=""Full"", LineColor=""r"", LineStyle=""--"") # Add shape in full ranged dashed; model.plotOn(frame) # By default only fitted range is shown; ; # Print fit results; print(""result of fit on all data ""); r_full.Print(); print(""result of fit in in signal region (note increased error on signal fraction)""); r_sig.Print(); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf203_ranges.png""); [#1] INFO:Fittin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf203__ranges_8py.html:87,Guid,Guide,87,doc/master/rf203__ranges_8py.html,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf204a_extendedLikelihood.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204a_extendedLikelihood.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Extended maximum likelihood fit in multiple ranges. ; When an extended pdf and multiple ranges are used, the RooExtendPdf cannot correctly interpret the coefficients used for extension. This can be solved by using a RooAddPdf for extending the model.; ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""RooFitResult.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit ;; ; ; void rf204a_extendedLikelihood(); {; ; ; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Declare observable x; RooRealVar x(""x"",""x"",0,11) ;; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"",""mean of gaussians"",5) ;; RooRealVar sigma1(""sigma1"",""width of gaussians"",0.5) ;; RooRealVar sigma2(""sigma2"",""width of gaussians"",1) ;; ; RooGaussian sig1(""sig1"",""Signal component 1"",x,mean,sigma1) ;; RooGaussian sig2(""sig2"",""Signal component 2"",x,mean,sigma2) ;; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"",""a0"",0.5,0.,1.) ;; RooRealVar a1(""a1"",""a1"",0.2,0.,1.) ;; RooChebychev bkg(""bkg"",""Background"",x,RooArgSet(a0,a1)) ;; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"",""fraction of component 1 in signal"",0.8,0.,1.) ;; RooAddPdf sig(""sig"",""Signal"",RooArgList(sig1,sig2),sig1frac) ;; ; ; // E x t e n d t h e p d f s; // -----------------------------; ; ; // Define signal range in which events counts are to be defined; x.setRange(""signalRange"",4,6) ;; ; // Associated nsig/nbkg as expected number of events with sig/bkg _in_the_range_ ""signalRange""; RooRealVar nsig(""nsi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:99,Guid,Guide,99,doc/master/rf204a__extendedLikelihood_8C.html,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf204a_extendedLikelihood.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204a_extendedLikelihood.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Extended maximum likelihood fit in multiple ranges. ; ; import ROOT; ; ; # Setup component pdfs; # ---------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 11); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], sig1frac); ; ; # Extend the pdfs; # -----------------------------; ; # Define signal range in which events counts are to be defined; x.setRange(""signalRange"", 4, 6); ; # Associated nsig/nbkg as expected number of events with sig/bkg _in_the_range_ ""signalRange""; nsig = ROOT.RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000); nbkg = ROOT.RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000); ; # Use AddPdf to extend the model. Giving as many coefficients as pdfs switches on extension.; model = ROOT.RooAddPdf(""model"", ""(g1+g2)+a"", [bkg, sig], [nbkg, nsig]); ; # Sample data, fit model; # -------------------------------------------; ; # Generate 1000 events from model so that nsig,nbkg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:100,Guid,Guide,100,doc/master/rf204a__extendedLikelihood_8py.html,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model paramet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:109,Guid,Guide,109,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,2,"['Guid', 'intuit']","['Guide', 'intuition']"
Usability,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:110,Guid,Guide,110,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,2,"['Guid', 'intuit']","['Guide', 'intuition']"
Usability,". ROOT: tutorials/roofit/rf205_compplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf205_compplot.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: options for plotting components of composite pdfs. . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooChebychev.h""; #include ""RooExponential.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf205_compplot(); {; // S e t u p c o m p o s i t e p d f; // --------------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", {sig1, sig2}, sig1frac);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg1(""bkg1"", ""Background 1"", x, {a0, a1});; ; // Build exponential pdf; RooRealVar alpha(""alpha"", ""alpha"", -1);; RooExponential bkg2(""bkg2"", ""Background 2"", x, alpha);; ; // Sum the background components into a composite background pdf; RooRealVar bkg1frac(""bkg1frac"", ""fraction of component 1 in background"", 0.8, 0., 1.);; RooAddPdf bkg(""bkg"", ""Total background"", {bkg1, bkg2}, bkg1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", {bkg, sig}, bkgfrac);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf205__compplot_8C.html:88,Guid,Guide,88,doc/master/rf205__compplot_8C.html,https://root.cern,https://root.cern/doc/master/rf205__compplot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf205_compplot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf205_compplot.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: options for plotting components of composite pdfs. . ; import ROOT; ; # Set up composite pdf; # --------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg1 = ROOT.RooChebychev(""bkg1"", ""Background 1"", x, [a0, a1]); ; # Build expontential pdf; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -1); bkg2 = ROOT.RooExponential(""bkg2"", ""Background 2"", x, alpha); ; # Sum the background components into a composite background pdf; bkg1frac = ROOT.RooRealVar(""bkg1frac"", ""fraction of component 1 in background"", 0.8, 0.0, 1.0); bkg = ROOT.RooAddPdf(""bkg"", ""Total background"", [bkg1, bkg2], [bkg1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Set up basic plot with data and full pdf; # ------------------------------------------------------------------------------; ; # Generate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf205__compplot_8py.html:89,Guid,Guide,89,doc/master/rf205__compplot_8py.html,https://root.cern,https://root.cern/doc/master/rf205__compplot_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf206_treevistools.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf206_treevistools.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: tools for visualization of RooAbsArg expression trees ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExponential.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf206_treevistools(); {; // S e t u p c o m p o s i t e p d f; // --------------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg1(""bkg1"", ""Background 1"", x, RooArgSet(a0, a1));; ; // Build expontential pdf; RooRealVar alpha(""alpha"", ""alpha"", -1);; RooExponential bkg2(""bkg2"", ""Background 2"", x, alpha);; ; // Sum the background components into a composite background pdf; RooRealVar bkg1frac(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0., 1.);; RooAddPdf bkg(""bkg"", ""Signal"", RooArgList(bkg1, bkg2), bkg1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf206__treevistools_8C.html:92,Guid,Guide,92,doc/master/rf206__treevistools_8C.html,https://root.cern,https://root.cern/doc/master/rf206__treevistools_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf206_treevistools.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf206_treevistools.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: tools for visualization of ROOT.RooAbsArg expression trees ; ; import ROOT; ; # Set up composite pdf; # --------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg1 = ROOT.RooChebychev(""bkg1"", ""Background 1"", x, [a0, a1]); ; # Build expontential pdf; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -1); bkg2 = ROOT.RooExponential(""bkg2"", ""Background 2"", x, alpha); ; # Sum the background components into a composite background pdf; bkg1frac = ROOT.RooRealVar(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0.0, 1.0); bkg = ROOT.RooAddPdf(""bkg"", ""Signal"", [bkg1, bkg2], [bkg1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Print composite tree in ASCII; # -----------------------------------------------------------; ; # Print tree to stdout; model.Prin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf206__treevistools_8py.html:93,Guid,Guide,93,doc/master/rf206__treevistools_8py.html,https://root.cern,https://root.cern/doc/master/rf206__treevistools_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf207_comptools.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf207_comptools.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: tools and utilities for manipulation of composite objects ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooExponential.h""; #include ""RooAddPdf.h""; #include ""RooPlot.h""; #include ""RooCustomizer.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf207_comptools(); {; ; // S e t u p c o m p o s i t e p d f, d a t a s e t; // --------------------------------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma(""sigma"", ""width of gaussians"", 0.5);; RooGaussian sig(""sig"", ""Signal component 1"", x, mean, sigma);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg1(""bkg1"", ""Background 1"", x, RooArgSet(a0, a1));; ; // Build exponential pdf; RooRealVar alpha(""alpha"", ""alpha"", -1);; RooExponential bkg2(""bkg2"", ""Background 2"", x, alpha);; ; // Sum the background components into a composite background pdf; RooRealVar bkg1frac(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0., 1.);; RooAddPdf bkg(""bkg"", ""Signal"", RooArgList(bkg1, bkg2), bkg1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // Create dummy dataset that has more observables than the above pdf; RooRealVar y(""y"", ""y"", -10, 10);; RooDataSet data(""data"", ""data"", RooArgSet(x, y));; ; // ---------------------------------------------------; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf207__comptools_8C.html:89,Guid,Guide,89,doc/master/rf207__comptools_8C.html,https://root.cern,https://root.cern/doc/master/rf207__comptools_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf207_comptools.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf207_comptools.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ADDITION AND CONVOLUTION' RooFit tutorial macro #207 Tools and utilities for manipulation of composite objects ; ; import ROOT; ; # Set up composite pdf dataset; # --------------------------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussians"", 0.5); sig = ROOT.RooGaussian(""sig"", ""Signal component 1"", x, mean, sigma); ; # Build Chebychev polynomial p.d.f.; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0.2, 0.0, 1.0); bkg1 = ROOT.RooChebychev(""bkg1"", ""Background 1"", x, [a0, a1]); ; # Build expontential pdf; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -1); bkg2 = ROOT.RooExponential(""bkg2"", ""Background 2"", x, alpha); ; # Sum the background components into a composite background p.d.f.; bkg1frac = ROOT.RooRealVar(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0.0, 1.0); bkg = ROOT.RooAddPdf(""bkg"", ""Signal"", [bkg1, bkg2], [bkg1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Create dummy dataset that has more observables than the above pdf; y = ROOT.RooRealVar(""y"", ""y"", -10, 10); data = ROOT.RooDataSet(""data"", ""data"", {x, y}); ; # Basic information requests; # ---------------------------------------------; ; ; # Get list of observables; # ---------------------------------------------; ; # Get list of observables of pdf in context of a dataset; #; # Observables are define each context as the variable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf207__comptools_8py.html:90,Guid,Guide,90,doc/master/rf207__comptools_8py.html,https://root.cern,https://root.cern/doc/master/rf207__comptools_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf208_convolution.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf208_convolution.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: one-dimensional numeric convolution ; pdf = landau(t) (x) gauss(t); xDouble_t x[n]Definition legend1.C:17; This tutorial requires FFT3 to be enabled. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooLandau.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf208_convolution(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Construct observable; RooRealVar t(""t"", ""t"", -10, 30);; ; // Construct landau(t,ml,sl) ;; RooRealVar ml(""ml"", ""mean landau"", 5., -20, 20);; RooRealVar sl(""sl"", ""sigma landau"", 1, 0.1, 10);; RooLandau landau(""lx"", ""lx"", t, ml, sl);; ; // Construct gauss(t,mg,sg); RooRealVar mg(""mg"", ""mg"", 0);; RooRealVar sg(""sg"", ""sg"", 2, 0.1, 10);; RooGaussian gauss(""gauss"", ""gauss"", t, mg, sg);; ; // C o n s t r u c t c o n v o l u t i o n p d f; // ---------------------------------------; ; // Set #bins to be used for FFT sampling to 10000; t.setBins(10000, ""cache"");; ; // Construct landau (x) gauss; RooFFTConvPdf lxg(""lxg"", ""landau (X) gauss"", t, landau, gauss);; ; // S a m p l e , f i t a n d p l o t c o n v o l u t e d p d f; // ----------------------------------------------------------------------; ; // Sample 1000 events in x from gxlx; std::unique_ptr<RooDataSet> data{lxg.generate(t, 10000)};; ; // Fit gxlx to data; lxg.fitTo(*data, PrintLevel(-1));; ; // Plot data, landau pdf, landau (X) gauss pdf; RooPlot *frame = t.frame(Title(""landau (x) gauss convolution""));; data->plotOn(frame);; lxg.plotOn(frame);; landau.plotOn(frame, LineStyle(kDashed));; ; // Draw frame on canvas; new TCanvas(""rf208_convolution"", ""rf208_convolution"", 60",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf208__convolution_8C.html:91,Guid,Guide,91,doc/master/rf208__convolution_8C.html,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf208_convolution.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf208_convolution.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ADDITION AND CONVOLUTION' RooFit tutorial macro #208 One-dimensional numeric convolution (require ROOT to be compiled with –enable-fftw3) ; pdf = landau(t) (x) gauss(t). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Construct observable; t = ROOT.RooRealVar(""t"", ""t"", -10, 30); ; # Construct landau(t,ml,sl); ml = ROOT.RooRealVar(""ml"", ""mean landau"", 5.0, -20, 20); sl = ROOT.RooRealVar(""sl"", ""sigma landau"", 1, 0.1, 10); landau = ROOT.RooLandau(""lx"", ""lx"", t, ml, sl); ; # Construct gauss(t,mg,sg); mg = ROOT.RooRealVar(""mg"", ""mg"", 0); sg = ROOT.RooRealVar(""sg"", ""sg"", 2, 0.1, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", t, mg, sg); ; # Construct convolution pdf; # ---------------------------------------; ; # Set #bins to be used for FFT sampling to 10000; t.setBins(10000, ""cache""); ; # Construct landau (x) gauss; lxg = ROOT.RooFFTConvPdf(""lxg"", ""landau (X) gauss"", t, landau, gauss); ; # Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf208__convolution_8py.html:92,Guid,Guide,92,doc/master/rf208__convolution_8py.html,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf209_anaconv.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf209_anaconv.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: decay function pdfs with optional B physics effects (mixing and CP violation) ; that can be analytically convolved with e.g. Gaussian resolution functions; pdf1 = decay(t,tau) (x) delta(t); pdf2 = decay(t,tau) (x) gauss(t,m,s); pdf3 = decay(t,tau) (x) (f*gauss1(t,m1,s1) + (1-f)*gauss2(t,m1,s1)); f#define f(i)Definition RSha256.hxx:104; s1#define s1(x)Definition RSha256.hxx:91; xDouble_t x[n]Definition legend1.C:17; mTMarker mDefinition textangle.C:8. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussModel.h""; #include ""RooAddModel.h""; #include ""RooTruthModel.h""; #include ""RooDecay.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf209_anaconv(); {; // B - p h y s i c s p d f w i t h t r u t h r e s o l u t i o n; // ---------------------------------------------------------------------; ; // Variables of decay pdf; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar tau(""tau"", ""tau"", 1.548);; ; // Build a truth resolution model (delta function); RooTruthModel tm1(""tm"", ""truth model"", dt);; ; // Construct decay(t) (x) delta(t); RooDecay decay_tm(""decay_tm"", ""decay"", dt, tau, tm1, RooDecay::DoubleSided);; ; // Plot pdf (dashed); RooPlot *frame = dt.frame(Title(""Bdecay (x) resolution""));; decay_tm.plotOn(frame, LineStyle(kDashed));; ; // B - p h y s i c s p d f w i t h G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------; ; // Build a gaussian resolution model; RooRealVar bias1(""bias1"", ""bias1"", 0);; RooRealVar sigma1(""sigma1"", ""sigma1"", 1);; RooGaussModel gm1(""gm1"", ""gauss model 1"", dt, bias1, sigma1);; ; // Construct decay(t) (x) gauss1(t); RooDecay decay_gm1(""decay_gm1"", ""decay"", ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf209__anaconv_8C.html:87,Guid,Guide,87,doc/master/rf209__anaconv_8C.html,https://root.cern,https://root.cern/doc/master/rf209__anaconv_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf209_anaconv.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf209_anaconv.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: decay function pdfs with optional B physics effects (mixing and CP violation) that can be analytically convolved with e.g. ; Gaussian resolution functions; pdf1 = decay(t,tau) (x) delta(t); pdf2 = decay(t,tau) (x) gauss(t,m,s); pdf3 = decay(t,tau) (x) (f*gauss1(t,m1,s1) + (1-f)*gauss2(t,m1,s1)). ; import ROOT; ; # B-physics pdf with truth resolution; # ---------------------------------------------------------------------; ; # Variables of decay pdf; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); ; # Build a truth resolution model (delta function); tm = ROOT.RooTruthModel(""tm"", ""truth model"", dt); ; # Construct decay(t) (x) delta(t); decay_tm = ROOT.RooDecay(""decay_tm"", ""decay"", dt, tau, tm, type=""DoubleSided""); ; # Plot pdf (dashed); frame = dt.frame(Title=""Bdecay (x) resolution""); decay_tm.plotOn(frame, LineStyle=""--""); ; # B-physics pdf with Gaussian resolution; # ----------------------------------------------------------------------------; ; # Build a gaussian resolution model; bias1 = ROOT.RooRealVar(""bias1"", ""bias1"", 0); sigma1 = ROOT.RooRealVar(""sigma1"", ""sigma1"", 1); gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct decay(t) (x) gauss1(t); decay_gm1 = ROOT.RooDecay(""decay_gm1"", ""decay"", dt, tau, gm1, type=""DoubleSided""); ; # Plot pdf; decay_gm1.plotOn(frame); ; # B-physics pdf with double Gaussian resolution; # ------------------------------------------------------------------------------------------; ; # Build another gaussian resolution model; bias2 = ROOT.RooRealVar(""bias2"", ""bias2"", 0); sigma2 = ROOT.RooRealVar(""sigma2"", ""sigma2"", 5); gm2 = ROOT.RooGaussModel(""gm2"", ""gauss model 2"", dt, bias2, sigma2); ; # Build a composite reso",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf209__anaconv_8py.html:88,Guid,Guide,88,doc/master/rf209__anaconv_8py.html,https://root.cern,https://root.cern/doc/master/rf209__anaconv_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf210_angularconv.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf210_angularconv.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: convolution in cyclical angular observables theta ; and construction of pdf in terms of transformed angular coordinates, e.g. cos(theta), where the convolution is performed in theta rather than cos(theta); pdf(theta) = T(theta) (x) gauss(theta); pdf(cosTheta) = T(acos(cosTheta)) (x) gauss(acos(cosTheta)); xDouble_t x[n]Definition legend1.C:17; This tutorial requires FFT3 to be enabled. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGenericPdf.h""; #include ""RooFormulaVar.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf210_angularconv(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Define angle psi; RooRealVar psi(""psi"", ""psi"", 0, 3.14159268);; ; // Define physics pdf T(psi); RooGenericPdf Tpsi(""Tpsi"", ""1+sin(2*@0)"", psi);; ; // Define resolution R(psi); RooRealVar gbias(""gbias"", ""gbias"", 0.2, 0., 1);; RooRealVar greso(""greso"", ""greso"", 0.3, 0.1, 1.0);; RooGaussian Rpsi(""Rpsi"", ""Rpsi"", psi, gbias, greso);; ; // Define cos(psi) and function psif that calculates psi from cos(psi); RooRealVar cpsi(""cpsi"", ""cos(psi)"", -1, 1);; RooFormulaVar psif(""psif"", ""acos(cpsi)"", cpsi);; ; // Define physics pdf also as function of cos(psi): T(psif(cpsi)) = T(cpsi) ;; RooGenericPdf Tcpsi(""T"", ""1+sin(2*@0)"", psif);; ; // C o n s t r u c t c o n v o l u t i o n p d f i n p s i; // --------------------------------------------------------------; ; // Define convoluted pdf as function of psi: M=[T(x)R](psi) = M(psi); RooFFTConvPdf Mpsi(""Mf"", ""Mf"", psi, Tpsi, Rpsi);; ; // Set the buffer fraction to zero to obtain a true cyclical convolution; Mpsi.setBuffer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf210__angularconv_8C.html:91,Guid,Guide,91,doc/master/rf210__angularconv_8C.html,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf210_angularconv.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf210_angularconv.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Convolution in cyclical angular observables theta, and construction of p.d.f in terms of transformed angular coordinates, e.g. ; cos(theta), the convolution is performed in theta rather than cos(theta); (require ROOT to be compiled with –enable-fftw3); pdf(theta) = ROOT.T(theta) (x) gauss(theta) pdf(cosTheta) = ROOT.T(acos(cosTheta)) (x) gauss(acos(cosTheta)). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Define angle psi; psi = ROOT.RooRealVar(""psi"", ""psi"", 0, 3.14159268); ; # Define physics p.d.f T(psi); Tpsi = ROOT.RooGenericPdf(""Tpsi"", ""1+sin(2*@0)"", [psi]); ; # Define resolution R(psi); gbias = ROOT.RooRealVar(""gbias"", ""gbias"", 0.2, 0.0, 1); greso = ROOT.RooRealVar(""greso"", ""greso"", 0.3, 0.1, 1.0); Rpsi = ROOT.RooGaussian(""Rpsi"", ""Rpsi"", psi, gbias, greso); ; # Define cos(psi) and function psif that calculates psi from cos(psi); cpsi = ROOT.RooRealVar(""cpsi"", ""cos(psi)"", -1, 1); psif = ROOT.RooFormulaVar(""psif"", ""acos(cpsi)"", [cpsi]); ; # Define physics p.d.f. also as function of cos(psi): T(psif(cpsi)) = T(cpsi); Tcpsi = ROOT.RooGenericPdf(""T"", ""1+sin(2*@0)"", [psif]); ; # Construct convolution pdf in psi; # --------------------------------------------------------------; ; # Define convoluted p.d.f. as function of psi: M=[T(x)R](psi) = M(psi); Mpsi = ROOT.RooFFTConvPdf(""Mf"", ""Mf"", psi, Tpsi, Rpsi); ; # Set the buffer fraction to zero to obtain a ROOT.True cyclical; # convolution; Mpsi.setBufferFraction(0); ; # Sample, fit and plot convoluted pdf (psi); # --------------------------------------------------------------------------------; ; # Generate some events in observable psi; data_psi = Mpsi.generate({psi}, 10000); ; # Fit convoluted model as function of angle psi; Mpsi.fitTo(dat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf210__angularconv_8py.html:92,Guid,Guide,92,doc/master/rf210__angularconv_8py.html,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf211_paramconv.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf211_paramconv.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: working with a pdf with a convolution operator in terms of a parameter ; This tutorial requires FFT3 to be enabled. ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooGenericPdf.h""; #include ""RooFormulaVar.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH2.h""; using namespace RooFit;; ; void rf211_paramconv(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Gaussian g(x ; mean,sigma); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", -3, 3);; RooRealVar sigma(""sigma"", ""sigma"", 0.5, 0.1, 10);; RooGaussian modelx(""gx"", ""gx"", x, mean, sigma);; ; // Block function in mean; RooRealVar a(""a"", ""a"", 2, 1, 10);; RooGenericPdf model_mean(""model_mean"", ""abs(mean)<a"", RooArgList(mean, a));; ; // Convolution in mean parameter model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache"");; mean.setBins(50, ""cache"");; RooFFTConvPdf model(""model"", ""model"", mean, modelx, model_mean);; ; // Configure convolution to construct a 2-D cache in (x,mean); // rather than a 1-d cache in mean that needs to be recalculated; // for each value of x; model.setCacheObservables(x);; model.setBufferFraction(1.0);; ; // Integrate model over mean projModel = Int model dmean; RooAbsPdf *projModel = model.createProjection(mean);; ; // Generate 1000 toy events; std::unique_ptr<RooDataHist> d{projModel->generateBinned(x, 1000)};; ; // Fit pdf to toy data; projModel->fitTo(*d, Verbose(), PrintLevel(-1));; ; // Plot data and fitted pdf; RooPlot *frame = x.frame(Bins(25));; d->plotOn(frame);; projModel->plotOn(frame);; ; // Make 2d histogram of model(x;mean); TH1 *hh = model.createHistogram(""hh"", x, Bin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf211__paramconv_8C.html:89,Guid,Guide,89,doc/master/rf211__paramconv_8C.html,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf211_paramconv.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf211_paramconv.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ADDITION AND CONVOLUTION' RooFit tutorial macro #211 Working a with a p.d.f. ; with a convolution operator in terms of a parameter; (require ROOT to be compiled with –enable-fftw3). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Gaussian g(x ; mean,sigma); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, 3); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 0.5, 0.1, 10); modelx = ROOT.RooGaussian(""gx"", ""gx"", x, mean, sigma); ; # Block function in mean; a = ROOT.RooRealVar(""a"", ""a"", 2, 1, 10); model_mean = ROOT.RooGenericPdf(""model_mean"", ""abs(mean)<a"", [mean, a]); ; # Convolution in mean model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache""); mean.setBins(50, ""cache""); model = ROOT.RooFFTConvPdf(""model"", ""model"", mean, modelx, model_mean); ; # Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x; model.setCacheObservables({x}); model.setBufferFraction(1.0); ; # Integrate model over projModel = Int model dmean; projModel = model.createProjection({mean}); ; # Generate 1000 toy events; d = projModel.generateBinned({x}, 1000); ; # Fit p.d.f. to toy data; projModel.fitTo(d, Verbose=True, PrintLevel=-1); ; # Plot data and fitted p.d.f.; frame = x.frame(Bins=25); d.plotOn(frame); projModel.plotOn(frame); ; # Make 2d histogram of model(x;mean); hh = model.createHistogram(; ""hh"",; x,; Binning=50,; YVar=dict(var=mean, Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf211__paramconv_8py.html:90,Guid,Guide,90,doc/master/rf211__paramconv_8py.html,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf212_plottingInRanges_blinding.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf212_plottingInRanges_blinding.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Plot a PDF in disjunct ranges, and get normalisation right. ; Usually, when comparing a fit to data, one should first plot the data, and then the PDF. In this case, the PDF is automatically normalised to match the number of data events in the plot. However, when plotting only a sub-range, when e.g. a signal region has to be blinded, one has to exclude the blinded region from the computation of the normalisation.; In this tutorial, we show how to explicitly choose the normalisation when plotting using NormRange().; Thanks to Marc Escalier for asking how to do this correctly. ; #include <RooDataSet.h>; #include <RooExponential.h>; #include <RooPlot.h>; #include <RooRealVar.h>; #include <TCanvas.h>; ; using namespace RooFit;; ; void rf212_plottingInRanges_blinding(); {; // Make a fit model; RooRealVar x(""x"", ""The observable"", 1, 30);; RooRealVar tau(""tau"", ""The exponent"", -0.1337, -10., -0.1);; RooExponential expo(""expo"", ""A falling exponential function"", x, tau);; ; // Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30);; x.setRange(""left"", 1, 10);; x.setRange(""right"", 20, 30);; ; // Generate toy data, and cut out the blinded region.; std::unique_ptr<RooDataSet> data{expo.generate(x, 1000)};; std::unique_ptr<RooAbsData> blindedData{data->reduce(CutRange(""left,right""))};; ; // Kick tau a bit, and run an unbinned fit where the blinded data are missing.; // ----------------------------------------------------------------------------------------------------------; // The fit should be done only in the unblinded regions, otherwise it would; // try to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.);; expo.fitTo(*blindedData, Range(""left,right""), PrintLevel(-1));; ; // Cle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:105,Guid,Guide,105,doc/master/rf212__plottingInRanges__blinding_8C.html,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf212_plottingInRanges_blinding.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf212_plottingInRanges_blinding.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Plot a PDF in disjunct ranges, and get normalisation right. ; Usually, when comparing a fit to data, one should first plot the data, and then the PDF. In this case, the PDF is automatically normalised to match the number of data events in the plot. However, when plotting only a sub-range, when e.g. a signal region has to be blinded, one has to exclude the blinded region from the computation of the normalisation.; In this tutorial, we show how to explicitly choose the normalisation when plotting using NormRange(). ; import ROOT; ; # Make a fit model; x = ROOT.RooRealVar(""x"", ""The observable"", 1, 30); tau = ROOT.RooRealVar(""tau"", ""The exponent"", -0.1337, -10.0, -0.1); expo = ROOT.RooExponential(""expo"", ""A falling exponential function"", x, tau); ; # Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30); x.setRange(""left"", 1, 10); x.setRange(""right"", 20, 30); ; # Generate toy data, and cut out the blinded region.; data = expo.generate(x, 1000); blindedData = data.reduce(CutRange=""left,right""); ; # Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.0); expo.fitTo(blindedData, Range=""left,right"", PrintLevel=-1); ; # Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.; expo.removeStringAt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:106,Guid,Guide,106,doc/master/rf212__plottingInRanges__blinding_8py.html,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf301_composition.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf301_composition.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: multi-dimensional pdfs through composition e.g. ; substituting a pdf parameter with a function that depends on other observables; pdf = gauss(x,f(y),s) with f(y) = a0 + a1*y. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolyVar.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf301_composition(); {; // S e t u p c o m p o s e d m o d e l g a u s s ( x , m ( y ) , s ); // -----------------------------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", -0.5, -5, 5);; RooRealVar a1(""a1"", ""a1"", -0.5, -1, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gauss(x,f(y),s); RooRealVar sigma(""sigma"", ""width of gaussian"", 0.5);; RooGaussian model(""model"", ""Gaussian with shifting mean"", x, fy, sigma);; ; // S a m p l e d a t a , p l o t d a t a a n d p d f o n x a n d y; // ---------------------------------------------------------------------------------; ; // Generate 10000 events in x and y from model; std::unique_ptr<RooDataSet> data{model.generate({x, y}, 10000)};; ; // Plot x distribution of data and projection of model on x = Int(dy) model(x,y); RooPlot *xframe = x.frame();; data->plotOn(xframe);; model.plotOn(xframe);; ; // Plot x distribution of data and projection of model on y = Int(dx) model(x,y); RooPlot *yframe = y.frame();; data->plotOn(yframe);; model.plotOn(yframe);; ; // Make two-dimensional plot in x vs y; TH1 *hh_model = model.createHistogram(""hh_model"", x, Binning(50), YVar(y, Binning(50)));; hh_model->SetLineColor(kBlue);; ; // Make can",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf301__composition_8C.html:91,Guid,Guide,91,doc/master/rf301__composition_8C.html,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf301_composition.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf301_composition.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: multi-dimensional pdfs through composition, e.g. ; substituting a pdf parameter with a function that depends on other observables; pdf = gauss(x,f(y),s) with f(y) = a0 + a1*y. ; import ROOT; ; # Setup composed model gauss(x, m(y), s); # -----------------------------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", -0.5, -5, 5); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.5, -1, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Creat gauss(x,f(y),s); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 0.5); model = ROOT.RooGaussian(""model"", ""Gaussian with shifting mean"", x, fy, sigma); ; # Sample data, plot data and pdf on x and y; # ---------------------------------------------------------------------------------; ; # Generate 10000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, Binning=50, YVar=dict(var=y, Binning=50)); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf301__composition_8py.html:92,Guid,Guide,92,doc/master/rf301__composition_8py.html,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf302_utilfuncs.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf302_utilfuncs.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: utility functions classes available for use in tailoring of composite (multidimensional) pdfs . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFormulaVar.h""; #include ""RooAddition.h""; #include ""RooProduct.h""; #include ""RooPolyVar.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; ; using namespace RooFit;; ; void rf302_utilfuncs(); {; // C r e a t e o b s e r v a b l e s , p a r a m e t e r s; // -----------------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; // Create parameters; RooRealVar a0(""a0"", ""a0"", -1.5, -5, 5);; RooRealVar a1(""a1"", ""a1"", -0.5, -1, 1);; RooRealVar sigma(""sigma"", ""width of gaussian"", 0.5);; ; // U s i n g R o o F o r m u l a V a r t o t a i l o r p d f; // -----------------------------------------------------------------------; ; // Create interpreted function f(y) = a0 - a1*sqrt(10*abs(y)); RooFormulaVar fy_1(""fy_1"", ""a0-a1*sqrt(10*abs(y))"", RooArgSet(y, a0, a1));; ; // Create gauss(x,f(y),s); RooGaussian model_1(""model_1"", ""Gaussian with shifting mean"", x, fy_1, sigma);; ; // U s i n g R o o P o l y V a r t o t a i l o r p d f; // -----------------------------------------------------------------------; ; // Create polynomial function f(y) = a0 + a1*y; RooPolyVar fy_2(""fy_2"", ""fy_2"", y, RooArgSet(a0, a1));; ; // Create gauss(x,f(y),s); RooGaussian model_2(""model_2"", ""Gaussian with shifting mean"", x, fy_2, sigma);; ; // U s i n g R o o A d d i t i o n t o t a i l o r p d f; // -----------------------------------------------------------------------; ; // Create sum function f(y) = a0 + y; RooAdd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf302__utilfuncs_8C.html:89,Guid,Guide,89,doc/master/rf302__utilfuncs_8C.html,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf302_utilfuncs.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf302_utilfuncs.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: utility functions classes available for use in tailoring of composite (multidimensional) pdfs . ; import ROOT; ; # Create observables, parameters; # -----------------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; # Create parameters; a0 = ROOT.RooRealVar(""a0"", ""a0"", -1.5, -5, 5); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.5, -1, 1); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 0.5); ; # Using RooFormulaVar to tailor pdf; # -----------------------------------------------------------------------; ; # Create interpreted function f(y) = a0 - a1*sqrt(10*abs(y)); fy_1 = ROOT.RooFormulaVar(""fy_1"", ""a0-a1*sqrt(10*abs(y))"", [y, a0, a1]); ; # Create gauss(x,f(y),s); model_1 = ROOT.RooGaussian(""model_1"", ""Gaussian with shifting mean"", x, fy_1, sigma); ; # Using RooPolyVar to tailor pdf; # -----------------------------------------------------------------------; ; # Create polynomial function f(y) = a0 + a1*y; fy_2 = ROOT.RooPolyVar(""fy_2"", ""fy_2"", y, [a0, a1]); ; # Create gauss(x,f(y),s); model_2 = ROOT.RooGaussian(""model_2"", ""Gaussian with shifting mean"", x, fy_2, sigma); ; # Using RooAddition to tailor pdf; # -----------------------------------------------------------------------; ; # Create sum function f(y) = a0 + y; fy_3 = ROOT.RooAddition(""fy_3"", ""a0+y"", [a0, y]); ; # Create gauss(x,f(y),s); model_3 = ROOT.RooGaussian(""model_3"", ""Gaussian with shifting mean"", x, fy_3, sigma); ; # Using RooProduct to tailor pdf; # -----------------------------------------------------------------------; ; # Create product function f(y) = a1*y; fy_4 = ROOT.RooProduct(""fy_4"", ""a1*y"", [a1, y]); ; # Create gauss(x,f(y),s); model_4 = ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf302__utilfuncs_8py.html:90,Guid,Guide,90,doc/master/rf302__utilfuncs_8py.html,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf303_conditional.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf303_conditional.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: use of tailored pdf as conditional pdfs.s ; pdf = gauss(x,f(y),sx | y ) with f(y) = a0 + a1*y. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooPolyVar.h""; #include ""RooProdPdf.h""; #include ""RooPlot.h""; #include ""TRandom.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; ; using namespace RooFit;; ; RooDataSet *makeFakeDataXY();; ; void rf303_conditional(); {; // S e t u p c o m p o s e d m o d e l g a u s s ( x , m ( y ) , s ); // -----------------------------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", -10, 10);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", -0.5, -5, 5);; RooRealVar a1(""a1"", ""a1"", -0.5, -1, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gauss(x,f(y),s); RooRealVar sigma(""sigma"", ""width of gaussian"", 0.5, 0.1, 2.0);; RooGaussian model(""model"", ""Gaussian with shifting mean"", x, fy, sigma);; ; // Obtain fake external experimental dataset with values for x and y; RooDataSet *expDataXY = makeFakeDataXY();; ; // G e n e r a t e d a t a f r o m c o n d i t i o n a l p . d . f m o d e l ( x | y ); // ---------------------------------------------------------------------------------------------; ; // Make subset of experimental data with only y values; std::unique_ptr<RooAbsData> expAbsDataY{expDataXY->reduce(y)};; RooDataSet *expDataY = static_cast<RooDataSet*>(expAbsDataY.get());; ; // Generate 10000 events in x obtained from _conditional_ model(x|y) with y values taken from experimental data; std::unique_ptr<RooDataSet> data{model.generate(x, ProtoData(*expDataY))};; data->Print();; ; // F i t c o n d i t i o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf303__conditional_8C.html:91,Guid,Guide,91,doc/master/rf303__conditional_8C.html,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf303_conditional.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf303_conditional.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'MULTIDIMENSIONAL MODELS' RooFit tutorial macro #303 Use of tailored p.d.f as conditional p.d.fs.s ; pdf = gauss(x,f(y),sx | y ) with f(y) = a0 + a1*y. ; import ROOT; ; ; def makeFakeDataXY():; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); coord = {x, y}; ; d = ROOT.RooDataSet(""d"", ""d"", coord); ; for i in range(10000):; tmpy = ROOT.gRandom.Gaus(0, 10); tmpx = ROOT.gRandom.Gaus(0.5 * tmpy, 1); if (abs(tmpy) < 10) and (abs(tmpx) < 10):; x.setVal(tmpx); y.setVal(tmpy); d.add(coord); ; return d; ; ; # Set up composed model gauss(x, m(y), s); # -----------------------------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", -0.5, -5, 5); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.5, -1, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Creat gauss(x,f(y),s); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 0.5, 0.1, 2.0); model = ROOT.RooGaussian(""model"", ""Gaussian with shifting mean"", x, fy, sigma); ; # Obtain fake external experimental dataset with values for x and y; expDataXY = makeFakeDataXY(); ; # Generate data from conditional p.d.f. model(x|y); # ---------------------------------------------------------------------------------------------; ; # Make subset of experimental data with only y values; expDataY = expDataXY.reduce({y}); ; # Generate 10000 events in x obtained from _conditional_ model(x|y) with y; # values taken from experimental data; data = model.generate({x}, ProtoData=expDataY); data.Print(); ; # Fit conditional p.d.f model(x|y) to data; # ---------------------------------------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf303__conditional_8py.html:92,Guid,Guide,92,doc/master/rf303__conditional_8py.html,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf304_uncorrprod.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf304_uncorrprod.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: simple uncorrelated multi-dimensional pdfs ; pdf = gauss(x,mx,sx) * gauss(y,my,sy). ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf304_uncorrprod(); {; ; // C r e a t e c o m p o n e n t p d f s i n x a n d y; // ----------------------------------------------------------------; ; // Create two pdfs gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its variables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; RooRealVar meanx(""mean1"", ""mean of gaussian x"", 2);; RooRealVar meany(""mean2"", ""mean of gaussian y"", -2);; RooRealVar sigmax(""sigmax"", ""width of gaussian x"", 1);; RooRealVar sigmay(""sigmay"", ""width of gaussian y"", 5);; ; RooGaussian gaussx(""gaussx"", ""gaussian PDF"", x, meanx, sigmax);; RooGaussian gaussy(""gaussy"", ""gaussian PDF"", y, meany, sigmay);; ; // C o n s t r u c t u n c o r r e l a t e d p r o d u c t p d f; // -------------------------------------------------------------------; ; // Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; RooProdPdf gaussxy(""gaussxy"", ""gaussx*gaussy"", RooArgList(gaussx, gaussy));; ; // S a m p l e p d f , p l o t p r o j e c t i o n o n x a n d y; // ---------------------------------------------------------------------------; ; // Generate 10000 events in x and y from gaussxy; std::unique_ptr<RooDataSet> data{gaussxy.generate({x, y}, 10000)};; ; // Plot x distribution of data and projection of gaussxy on x = Int(dy) gaussxy(x,y); RooPlot *xframe = x.frame(Title(""X projection of gauss(x)*gauss(y)""));; data->plotOn(xframe);; gaussxy.plotOn(xframe);; ; // Plot x distribution of data and projection of ga",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf304__uncorrprod_8C.html:90,Guid,Guide,90,doc/master/rf304__uncorrprod_8C.html,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/roofit/rf304_uncorrprod.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf304_uncorrprod.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: simple uncorrelated multi-dimensional pdfs ; pdf = gauss(x,mx,sx) * gauss(y,my,sy). ; import ROOT; ; ; # Create component pdfs in x and y; # ----------------------------------------------------------------; ; # Create two pdfs gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its; # variables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; meanx = ROOT.RooRealVar(""mean1"", ""mean of gaussian x"", 2); meany = ROOT.RooRealVar(""mean2"", ""mean of gaussian y"", -2); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian x"", 1); sigmay = ROOT.RooRealVar(""sigmay"", ""width of gaussian y"", 5); ; gaussx = ROOT.RooGaussian(""gaussx"", ""gaussian PDF"", x, meanx, sigmax); gaussy = ROOT.RooGaussian(""gaussy"", ""gaussian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf304__uncorrprod_8py.html:91,Guid,Guide,91,doc/master/rf304__uncorrprod_8py.html,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/roofit/rf305_condcorrprod.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf305_condcorrprod.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: multi-dimensional pdfs with conditional pdfs in product ; pdf = gauss(x,f(y),sx | y ) * gauss(y,ms,sx) with f(y) = a0 + a1*y. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolyVar.h""; #include ""RooProdPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf305_condcorrprod(); {; // C r e a t e c o n d i t i o n a l p d f g x ( x | y ); // -----------------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", -0.5, -5, 5);; RooRealVar a1(""a1"", ""a1"", -0.5, -1, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gaussx(x,f(y),sx); RooRealVar sigmax(""sigma"", ""width of gaussian"", 0.5);; RooGaussian gaussx(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax);; ; // C r e a t e p d f g y ( y ); // -----------------------------------------------------------; ; // Create gaussy(y,0,5); RooGaussian gaussy(""gaussy"", ""Gaussian in y"", y, 0.0, 3.0);; ; // C r e a t e p r o d u c t g x ( x | y ) * g y ( y ); // -------------------------------------------------------; ; // Create gaussx(x,sx|y) * gaussy(y); RooProdPdf model(""model"", ""gaussx(x|y)*gaussy(y)"", gaussy, Conditional(gaussx, x));; ; // S a m p l e , f i t a n d p l o t p r o d u c t p d f; // ---------------------------------------------------------------; ; // Generate 1000 events in x and y from model; std::unique_ptr<RooDataSet> data{model.generate({x, y}, 10000)};; ; // Plot x distribution of data and projection of model on x = Int(dy) model(x,y); RooPlot *xframe = x.frame();; data->plotOn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf305__condcorrprod_8C.html:92,Guid,Guide,92,doc/master/rf305__condcorrprod_8C.html,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf305_condcorrprod.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf305_condcorrprod.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: multi-dimensional pdfs with conditional pdfs in product ; pdf = gauss(x,f(y),sx | y ) * gauss(y,ms,sx) with f(y) = a0 + a1*y. ; import ROOT; ; # Create conditional pdf gx(x|y); # -----------------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", -0.5, -5, 5); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.5, -1, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Create gaussx(x,f(y),sx); sigmax = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 0.5); gaussx = ROOT.RooGaussian(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax); ; # Create pdf gy(y); # -----------------------------------------------------------; ; # Create gaussy(y,0,5); gaussy = ROOT.RooGaussian(""gaussy"", ""Gaussian in y"", y, 0.0, 3.0); ; # Create product gx(x|y)*gy(y); # -------------------------------------------------------; ; # Create gaussx(x,sx|y) * gaussy(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf305__condcorrprod_8py.html:93,Guid,Guide,93,doc/master/rf305__condcorrprod_8py.html,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf306_condpereventerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf306_condpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: conditional pdf with per-event errors . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf306_condpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t f a k e ' e x t e r n a l ' d a t a w i t h p e r - e v e n t e r r o r; // ------------------------------------------------------------------------------------------------------; ; // Use landau pdf to get somewhat realistic distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // S a m p l e d a t a f r o m c o n d i t i o n a l d e c a y _ g m ( d t | d t e r r ); // ---------------------------------------------------------------------------------------------; ; // Specify",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf306__condpereventerrors_8C.html:98,Guid,Guide,98,doc/master/rf306__condpereventerrors_8C.html,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf306_condpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf306_condpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: complete example with use of conditional pdf with per-event errors . ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; ; # Use landau pdf to get somewhat realistic distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Sample data from conditional decay_gm(dt|dterr); # ---------------------------------------------------------------------------------------------; ; # Specify external dataset with dterr values to use decay_dm as; # conditional pdf; data = decay_gm.generate({dt}, ProtoData=expDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, Pri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf306__condpereventerrors_8py.html:99,Guid,Guide,99,doc/master/rf306__condpereventerrors_8py.html,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf307_fullpereventerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf307_fullpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: full pdf with per-event errors ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooProdPdf.h""; #include ""RooHistPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf307_fullpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t e m p i r i c a l p d f f o r p e r - e v e n t e r r o r; // -----------------------------------------------------------------; ; // Use landau pdf to get empirical distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // Construct a histogram pdf to describe the shape of the dtErr distribution; std::unique_ptr<RooDataHist> expHistDterr{expDataDterr->binnedClone()};; RooHistPdf pdfErr(""pdfErr"", ""pdfErr"", dterr, *expHistDterr);; ; //",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html:98,Guid,Guide,98,doc/master/rf307__fullpereventerrors_8C.html,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf307_fullpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf307_fullpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: usage of full pdf with per-event errors ; ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct empirical pdf for per-event error; # -----------------------------------------------------------------; ; # Use landau pdf to get empirical distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Construct a histogram pdf to describe the shape of the dtErr distribution; expHistDterr = expDataDterr.binnedClone(); pdfErr = ROOT.RooHistPdf(""pdfErr"", ""pdfErr"", {dterr}, expHistDterr); ; # Construct conditional product decay_dm(dt|dterr)*pdf(dterr); # ----------------------------------------------------------------------------------------------------------------------; ; # Construct production of conditional decay_dm(dt|dterr) with empirical; # pdfErr(dterr); model = ROOT.RooProdPdf(""model"", ""model"", {pdfErr}, Conditional=({decay_gm}, {dt})); ; # (Alternatively you could als",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf307__fullpereventerrors_8py.html:99,Guid,Guide,99,doc/master/rf307__fullpereventerrors_8py.html,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf308_normintegration2d.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf308_normintegration2d.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: normalization and integration of pdfs, construction of cumulative distribution functions from pdfs in two dimensions . ; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooAbsReal.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf308_normintegration2d(); {; // S e t u p m o d e l; // ---------------------; ; // Create observables x,y; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", -10, 10);; ; // Create pdf gaussx(x,-2,3), gaussy(y,2,2); RooGaussian gx(""gx"", ""gx"", x, -2.0, 3.0);; RooGaussian gy(""gy"", ""gy"", y, +2.0, 2.0);; ; // Create gxy = gx(x)*gy(y); RooProdPdf gxy(""gxy"", ""gxy"", RooArgSet(gx, gy));; ; // R e t r i e v e r a w & n o r m a l i z e d v a l u e s o f R o o F i t p . d . f . s; // --------------------------------------------------------------------------------------------------; ; // Return 'raw' unnormalized value of gx; cout << ""gxy = "" << gxy.getVal() << endl;; ; // Return value of gxy normalized over x _and_ y in range [-10,10]; RooArgSet nset_xy(x, y);; cout << ""gx_Norm[x,y] = "" << gxy.getVal(&nset_xy) << endl;; ; // Create object representing integral over gx; // which is used to calculate gx_Norm[x,y] == gx / gx_Int[x,y]; std::unique_ptr<RooAbsReal> igxy{gxy.createIntegral(RooArgSet(x, y))};; cout << ""gx_Int[x,y] = "" << igxy->getVal() << endl;; ; // NB: it is also possible to do the following; ; // Return value of gxy normalized over x in range [-10,10] (i.e. treating y as parameter); RooArgSet nset_x(x);; cout << ""gx_Norm[x] = "" << gxy.getVal(&nset_x) << endl;; ; // Return value of gxy normalized over y in range [-10,10] (i.e. treating x as parameter); RooArgSet nset_y(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf308__normintegration2d_8C.html:97,Guid,Guide,97,doc/master/rf308__normintegration2d_8C.html,https://root.cern,https://root.cern/doc/master/rf308__normintegration2d_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf308_normintegration2d.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf308_normintegration2d.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: normalization and integration of pdfs, construction of cumulative distribution functions from pdfs in two dimensions . ; from __future__ import print_function; import ROOT; ; # Set up model; # ---------------------; ; # Create observables x,y; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); ; # Create pdf gaussx(x,-2,3), gaussy(y,2,2); gx = ROOT.RooGaussian(""gx"", ""gx"", x, -2.0, 3.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, +2.0, 2.0); ; # gxy = gx(x)*gy(y); gxy = ROOT.RooProdPdf(""gxy"", ""gxy"", [gx, gy]); ; # Retrieve raw & normalized values of RooFit pdfs; # --------------------------------------------------------------------------------------------------; ; # Return 'raw' unnormalized value of gx; print(""gxy = "", gxy.getVal()); ; # Return value of gxy normalized over x _and_ y in range [-10,10]; nset_xy = {x, y}; print(""gx_Norm[x,y] = "", gxy.getVal(nset_xy)); ; # Create object representing integral over gx; # which is used to calculate gx_Norm[x,y] == gx / gx_Int[x,y]; x_and_y = {x, y}; igxy = gxy.createIntegral(x_and_y); print(""gx_Int[x,y] = "", igxy.getVal()); ; # NB: it is also possible to do the following; ; # Return value of gxy normalized over x in range [-10,10] (i.e. treating y; # as parameter); nset_x = {x}; print(""gx_Norm[x] = "", gxy.getVal(nset_x)); ; # Return value of gxy normalized over y in range [-10,10] (i.e. treating x; # as parameter); nset_y = {y}; print(""gx_Norm[y] = "", gxy.getVal(nset_y)); ; # Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; ; # Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5); y.setRange(""signal"", -3, 3); ; # Create an integral of g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf308__normintegration2d_8py.html:98,Guid,Guide,98,doc/master/rf308__normintegration2d_8py.html,https://root.cern,https://root.cern/doc/master/rf308__normintegration2d_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf309_ndimplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf309_ndimplot.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: making 2/3 dimensional plots of pdfs and datasets . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf309_ndimplot(); {; ; // C r e a t e 2 D m o d e l a n d d a t a s e t; // -----------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; // Create parameters; RooRealVar a0(""a0"", ""a0"", -3.5, -5, 5);; RooRealVar a1(""a1"", ""a1"", -1.5, -1, 1);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1.5);; ; // Create interpreted function f(y) = a0 - a1*sqrt(10*abs(y)); RooFormulaVar fy(""fy"", ""a0-a1*sqrt(10*abs(y))"", RooArgSet(y, a0, a1));; ; // Create gauss(x,f(y),s); RooGaussian model(""model"", ""Gaussian with shifting mean"", x, fy, sigma);; ; // Sample dataset from gauss(x,y); std::unique_ptr<RooDataSet> data{model.generate({x, y}, 10000)};; ; // M a k e 2 D p l o t s o f d a t a a n d m o d e l; // -------------------------------------------------------------; ; // Create and fill ROOT 2D histogram (20x20 bins) with contents of dataset; TH1 *hh_data = data->createHistogram(""x,y"", Binning(20), Binning(20));; ; // Create and fill ROOT 2D histogram (50x50 bins) with sampling of pdf; // TH2D* hh_pdf = model.createHistogram(""hh_model"",x,Binning(50),YVar(y,Binning(50))) ;; TH1 *hh_pdf = model.createHistogram(""x,y"", 50, 50);; hh_pdf->SetLineColor(kBlue);; ; // C r e a t e 3 D m o d e l a n d d a t a s e t; // -----------------------------------------------------; ; // Create observables; RooRealVar z(""z"", ""z"", -5, 5);; ; RooGaussian gz(""gz"", ""gz"", z, 0.0, 2.0);; RooProdPdf model3(""model3"", ""mode",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf309__ndimplot_8C.html:88,Guid,Guide,88,doc/master/rf309__ndimplot_8C.html,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf309_ndimplot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf309_ndimplot.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: making 2/3 dimensional plots of pdfs and datasets . ; import ROOT; ; # Create 2D model and dataset; # -----------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; # Create parameters; a0 = ROOT.RooRealVar(""a0"", ""a0"", -3.5, -5, 5); a1 = ROOT.RooRealVar(""a1"", ""a1"", -1.5, -1, 1); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 1.5); ; # Create interpreted function f(y) = a0 - a1*sqrt(10*abs(y)); fy = ROOT.RooFormulaVar(""fy"", ""a0-a1*sqrt(10*abs(y))"", [y, a0, a1]); ; # Create gauss(x,f(y),s); model = ROOT.RooGaussian(""model"", ""Gaussian with shifting mean"", x, fy, sigma); ; # Sample dataset from gauss(x,y); data = model.generate({x, y}, 10000); ; # Make 2D plots of data and model; # -------------------------------------------------------------; ; # Create and fill ROOT 2D histogram (20x20 bins) with contents of dataset; hh_data = data.createHistogram(""x,y"", x, Binning=20, YVar=dict(var=y, Binning=20)); ; # Create and fill ROOT 2D histogram (50x50 bins) with sampling of pdf; # hh_pdf = model.createHistogram(""hh_model"", x, Binning=50, YVar=dict(var=y, Binning=50)); hh_pdf = model.createHistogram(""x,y"", 50, 50); hh_pdf.SetLineColor(ROOT.kBlue); ; # Create 3D model and dataset; # -----------------------------------------------------; ; # Create observables; z = ROOT.RooRealVar(""z"", ""z"", -5, 5); ; gz = ROOT.RooGaussian(""gz"", ""gz"", z, 0.0, 2.0); model3 = ROOT.RooProdPdf(""model3"", ""model3"", [model, gz]); ; data3 = model3.generate({x, y, z}, 10000); ; # Make 3D plots of data and model; # -------------------------------------------------------------; ; # Create and fill ROOT 2D histogram (8x8x8 bins) with contents of dataset",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf309__ndimplot_8py.html:89,Guid,Guide,89,doc/master/rf309__ndimplot_8py.html,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf310_sliceplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf310_sliceplot.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: projecting pdf and data slices in discrete observables . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooBMixDecay.h""; #include ""RooCategory.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf310_sliceplot(); {; ; // C r e a t e B d e c a y p d f w it h m i x i n g; // ----------------------------------------------------------; ; // Decay time observables; RooRealVar dt(""dt"", ""dt"", -20, 20);; ; // Discrete observables mixState (B0tag==B0reco?) and tagFlav (B0tag==B0(bar)?); RooCategory mixState(""mixState"", ""B0/B0bar mixing state"");; RooCategory tagFlav(""tagFlav"", ""Flavour of the tagged B0"");; ; // Define state labels of discrete observables; mixState.defineType(""mixed"", -1);; mixState.defineType(""unmixed"", 1);; tagFlav.defineType(""B0"", 1);; tagFlav.defineType(""B0bar"", -1);; ; // Model parameters; RooRealVar dm(""dm"", ""delta m(B)"", 0.472, 0., 1.0);; RooRealVar tau(""tau"", ""B0 decay time"", 1.547, 1.0, 2.0);; RooRealVar w(""w"", ""Flavor Mistag rate"", 0.03, 0.0, 1.0);; RooRealVar dw(""dw"", ""Flavor Mistag rate difference between B0 and B0bar"", 0.01);; ; // Build a gaussian resolution model; RooRealVar bias1(""bias1"", ""bias1"", 0);; RooRealVar sigma1(""sigma1"", ""sigma1"", 0.01);; RooGaussModel gm1(""gm1"", ""gauss model 1"", dt, bias1, sigma1);; ; // Construct a decay pdf, smeared with single gaussian resolution model; RooBMixDecay bmix_gm1(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, RooBMixDecay::DoubleSided);; ; // Generate BMixing data with above set of event errors; std::unique_ptr<RooDataSet> data{bmix_gm1.generate({dt, tagFlav, mixState}, 20000)};; ; // P l o t f u l l d e c a y d i s t r i b u t i o n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf310__sliceplot_8C.html:89,Guid,Guide,89,doc/master/rf310__sliceplot_8C.html,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf310_sliceplot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf310_sliceplot.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: projecting pdf and data slices in discrete observables . ; import ROOT; ; # Create B decay pdf with mixing; # ----------------------------------------------------------; ; # Decay time observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -20, 20); ; # Discrete observables mixState (B0tag==B0reco?) and tagFlav; # (B0tag==B0(bar)?); # Define state labels of discrete observables; mixState = ROOT.RooCategory(""mixState"", ""B0/B0bar mixing state"", {""mixed"": -1, ""unmixed"": 1}); tagFlav = ROOT.RooCategory(""tagFlav"", ""Flavour of the tagged B0"", {""B0"": 1, ""B0bar"": -1}); ; # Model parameters; dm = ROOT.RooRealVar(""dm"", ""delta m(B)"", 0.472, 0.0, 1.0); tau = ROOT.RooRealVar(""tau"", ""B0 decay time"", 1.547, 1.0, 2.0); w = ROOT.RooRealVar(""w"", ""Flavor Mistag rate"", 0.03, 0.0, 1.0); dw = ROOT.RooRealVar(""dw"", ""Flavor Mistag rate difference between B0 and B0bar"", 0.01); ; # Build a gaussian resolution model; bias1 = ROOT.RooRealVar(""bias1"", ""bias1"", 0); sigma1 = ROOT.RooRealVar(""sigma1"", ""sigma1"", 0.01); gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct a decay pdf, with single gaussian resolution model; bmix_gm1 = ROOT.RooBMixDecay(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, type=""DoubleSided""); ; # Generate BMixing data with above set of event errors; data = bmix_gm1.generate({dt, tagFlav, mixState}, 20000); ; # Plot full decay distribution; # ----------------------------------------------------------; ; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState); frame = dt.frame(Title=""Inclusive decay distribution""); data.plotOn(frame); bmix_gm1.plotOn(frame); ; # Plot decay distribution for mixed and unmixed slice of mixState; # ------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf310__sliceplot_8py.html:90,Guid,Guide,90,doc/master/rf310__sliceplot_8py.html,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf311_rangeplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf311_rangeplot.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: projecting pdf and data ranges in continuous observables . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooConstVar.h""; #include ""RooProdPdf.h""; #include ""RooAddPdf.h""; #include ""RooPolynomial.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf311_rangeplot(); {; ; // C r e a t e 3 D p d f a n d d a t a; // -------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; RooRealVar z(""z"", ""z"", -5, 5);; ; // Create signal pdf gauss(x)*gauss(y)*gauss(z); RooGaussian gx(""gx"", ""gx"", x, 0.0, 1.0);; RooGaussian gy(""gy"", ""gy"", y, 0.0, 1.0);; RooGaussian gz(""gz"", ""gz"", z, 0.0, 1.0);; RooProdPdf sig(""sig"", ""sig"", RooArgSet(gx, gy, gz));; ; // Create background pdf poly(x)*poly(y)*poly(z); RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));; RooPolynomial py(""py"", ""py"", y, RooArgSet(0.1, -0.004));; RooPolynomial pz(""pz"", ""pz"", z);; RooProdPdf bkg(""bkg"", ""bkg"", RooArgSet(px, py, pz));; ; // Create composite pdf sig+bkg; RooRealVar fsig(""fsig"", ""signal fraction"", 0.1, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), fsig);; ; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 20000)};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // P r o j e c t p d f a n d d a t a o n x i n s i g n a l r a n g e; // ----------------------------------------------------------------------------------; ; // Define signal regi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf311__rangeplot_8C.html:89,Guid,Guide,89,doc/master/rf311__rangeplot_8C.html,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf311_rangeplot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf311_rangeplot.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: projecting pdf and data ranges in continuous observables . ; import ROOT; ; # Create 3D pdf and data; # -------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); z = ROOT.RooRealVar(""z"", ""z"", -5, 5); ; # Create signal pdf gauss(x)*gauss(y)*gauss(z); gx = ROOT.RooGaussian(""gx"", ""gx"", x, 0.0, 1.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, 0.0, 1.0); gz = ROOT.RooGaussian(""gz"", ""gz"", z, 0.0, 1.0); sig = ROOT.RooProdPdf(""sig"", ""sig"", [gx, gy, gz]); ; # Create background pdf poly(x)*poly(y)*poly(z); px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.1, -0.004]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", [px, py, pz]); ; # Create composite pdf sig+bkg; fsig = ROOT.RooRealVar(""fsig"", ""signal fraction"", 0.1, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [fsig]); ; data = model.generate({x, y, z}, 20000); ; # Project pdf and data on x; # -------------------------------------------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf311__rangeplot_8py.html:90,Guid,Guide,90,doc/master/rf311__rangeplot_8py.html,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf312_multirangefit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf312_multirangefit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: performing fits in multiple (disjoint) ranges in one or more dimensions ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooAddPdf.h""; #include ""RooPolynomial.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFitResult.h""; using namespace RooFit;; ; void rf312_multirangefit(); {; ; // C r e a t e 2 D p d f a n d d a t a; // -------------------------------------------; ; // Define observables x,y; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", -10, 10);; ; // Construct the signal pdf gauss(x)*gauss(y); RooRealVar mx(""mx"", ""mx"", 1, -10, 10);; RooRealVar my(""my"", ""my"", 1, -10, 10);; ; RooGaussian gx(""gx"", ""gx"", x, mx, 1.0);; RooGaussian gy(""gy"", ""gy"", y, my, 1.0);; ; RooProdPdf sig(""sig"", ""sig"", gx, gy);; ; // Construct the background pdf (flat in x,y); RooPolynomial px(""px"", ""px"", x);; RooPolynomial py(""py"", ""py"", y);; RooProdPdf bkg(""bkg"", ""bkg"", px, py);; ; // Construct the composite model sig+bkg; RooRealVar f(""f"", ""f"", 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), f);; ; // Sample 10000 events in (x,y) from the model; std::unique_ptr<RooDataSet> modelData{model.generate({x, y}, 10000)};; ; // D e f i n e s i g n a l a n d s i d e b a n d r e g i o n s; // -------------------------------------------------------------------; ; // Construct the SideBand1,SideBand2,Signal regions; //; // |; // +-------------+-----------+; // | | |; // | Side | Sig |; // | Band1 | nal |; // | | |; // --+-------------+-----------+--; // | |; // | Side |; // | Band2 |; // | |; // +-------------+-----------+; // |; ; x.setRange(""SB1"", -10, +10);; y.setRange(""SB1"", -10, 0);; ; x.setRange(""SB2"", -10, 0);; y.setRang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf312__multirangefit_8C.html:93,Guid,Guide,93,doc/master/rf312__multirangefit_8C.html,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf312_multirangefit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf312_multirangefit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: performing fits in multiple (disjoint) ranges in one or more dimensions ; ; import ROOT; ; ; # Create 2D pdf and data; # -------------------------------------------; ; # Define observables x,y; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); ; # Construct the signal pdf gauss(x)*gauss(y); mx = ROOT.RooRealVar(""mx"", ""mx"", 1, -10, 10); my = ROOT.RooRealVar(""my"", ""my"", 1, -10, 10); ; gx = ROOT.RooGaussian(""gx"", ""gx"", x, mx, 1.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, my, 1.0); ; sig = ROOT.RooProdPdf(""sig"", ""sig"", gx, gy); ; # Construct the background pdf (flat in x,y); px = ROOT.RooPolynomial(""px"", ""px"", x); py = ROOT.RooPolynomial(""py"", ""py"", y); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", px, py); ; # Construct the composite model sig+bkg; f = ROOT.RooRealVar(""f"", ""f"", 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [f]); ; # Sample 10000 events in (x,y) from the model; modelData = model.generate({x, y}, 10000); ; # Define signal and sideband regions; # -------------------------------------------------------------------; ; # Construct the SideBand1,SideBand2, regions; #; # |; # +-------------+-----------+; # | | |; # | Side | Sig |; # | Band1 | nal |; # | | |; # --+-------------+-----------+--; # | |; # | Side |; # | Band2 |; # | |; # +-------------+-----------+; # |; ; x.setRange(""SB1"", -10, +10); y.setRange(""SB1"", -10, 0); ; x.setRange(""SB2"", -10, 0); y.setRange(""SB2"", 0, +10); ; x.setRange(""SIG"", 0, +10); y.setRange(""SIG"", 0, +10); ; x.setRange(""FULL"", -10, +10); y.setRange(""FULL"", -10, +10); ; # Perform fits in individual sideband regions; # -------------------------------------------------------------------------------------; ; # Perform fit in SideBand1 re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf312__multirangefit_8py.html:94,Guid,Guide,94,doc/master/rf312__multirangefit_8py.html,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf313_paramranges.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf313_paramranges.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parametrized ranges to define non-rectangular regions for fitting and integration . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf313_paramranges(); {; ; // C r e a t e 3 D p d f; // -------------------------; ; // Define observable (x,y,z); RooRealVar x(""x"", ""x"", 0, 10);; RooRealVar y(""y"", ""y"", 0, 10);; RooRealVar z(""z"", ""z"", 0, 10);; ; // Define 3 dimensional pdf; RooRealVar z0(""z0"", ""z0"", -0.1, 1);; RooPolynomial px(""px"", ""px"", x, RooConst(0.0));; RooPolynomial py(""py"", ""py"", y, RooConst(0.0));; RooPolynomial pz(""pz"", ""pz"", z, z0);; RooProdPdf pxyz(""pxyz"", ""pxyz"", RooArgSet(px, py, pz));; ; // D e f i n e d n o n - r e c t a n g u l a r r e g i o n R i n ( x , y , z ); // -------------------------------------------------------------------------------------; ; //; // R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; //; ; // Construct range parametrized in ""R"" in y [ 0.1*x, 0.9*x ]; RooFormulaVar ylo(""ylo"", ""0.1*x"", x);; RooFormulaVar yhi(""yhi"", ""0.9*x"", x);; y.setRange(""R"", ylo, yhi);; ; // Construct parametrized ranged ""R"" in z [ 0, 0.1*y^2 ]; RooFormulaVar zlo(""zlo"", ""0.0*y"", y);; RooFormulaVar zhi(""zhi"", ""0.1*y*y"", y);; z.setRange(""R"", zlo, zhi);; ; // C a l c u l a t e i n t e g r a l o f n o r m a l i z e d p d f i n R; // ----------------------------------------------------------------------------------; ; // Create integral over normalized pdf model over x,y,z in ""R"" region; std::unique_ptr<RooAbsReal> intPdf{pxyz.createIntegral(RooArgSet(x, y, z), RooArgSet(x, y, z), ""R"")};; ; // Plot value of integral as function ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf313__paramranges_8C.html:91,Guid,Guide,91,doc/master/rf313__paramranges_8C.html,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf313_paramranges.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf313_paramranges.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parameterized ranges to define non-rectangular regions for fitting and integration . ; import ROOT; ; ; # Create 3D pdf; # -------------------------; ; # Define observable (x,y,z); x = ROOT.RooRealVar(""x"", ""x"", 0, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 10); z = ROOT.RooRealVar(""z"", ""z"", 0, 10); ; # Define 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf313__paramranges_8py.html:92,Guid,Guide,92,doc/master/rf313__paramranges_8py.html,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf314_paramfitrange.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf314_paramfitrange.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parametrized ranges in a fit. ; This an example of a fit with an acceptance that changes per-event; pdf = exp(-t/tau) with t[tmin,5]; where t and tmin are both observables in the dataset. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooConstVar.h""; #include ""RooExponential.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFitResult.h""; ; using namespace RooFit;; ; void rf314_paramfitrange(); {; ; // D e f i n e o b s e r v a b l e s a n d d e c a y p d f; // ---------------------------------------------------------------; ; // Declare observables; RooRealVar t(""t"", ""t"", 0, 5);; RooRealVar tmin(""tmin"", ""tmin"", 0, 0, 5);; ; // Make parametrized range in t : [tmin,5]; t.setRange(tmin, RooConst(t.getMax()));; ; // Make pdf; RooRealVar tau(""tau"", ""tau"", -1.54, -10, -0.1);; RooExponential model(""model"", ""model"", t, tau);; ; // C r e a t e i n p u t d a t a; // ------------------------------------; ; // Generate complete dataset without acceptance cuts (for reference); std::unique_ptr<RooDataSet> dall{model.generate(t, 10000)};; ; // Generate a (fake) prototype dataset for acceptance limit values; std::unique_ptr<RooDataSet> tmp{RooGaussian(""gmin"", ""gmin"", tmin, 0.0, 0.5).generate(tmin, 5000)};; ; // Generate dataset with t values that observe (t>tmin); std::unique_ptr<RooDataSet> dacc{model.generate(t, ProtoData(*tmp))};; ; // F i t p d f t o d a t a i n a c c e p t a n c e r e g i o n; // -----------------------------------------------------------------------; ; std::unique_ptr<RooFitResult> r{model.fitTo(*dacc, Save(), PrintLevel(-1))};; ; // P l o t f i t t e d p d f o n f u l l a n d a c c e p t e d d a t a; // --------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf314__paramfitrange_8C.html:93,Guid,Guide,93,doc/master/rf314__paramfitrange_8C.html,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf314_paramfitrange.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf314_paramfitrange.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parameterized ranges in a fit. ; This an example of a fit with an acceptance that changes per-event; pdf = exp(-t/tau) with t[tmin,5]; where t and tmin are both observables in the dataset. ; import ROOT; ; ; # Define observables and decay pdf; # ---------------------------------------------------------------; ; # Declare observables; t = ROOT.RooRealVar(""t"", ""t"", 0, 5); tmin = ROOT.RooRealVar(""tmin"", ""tmin"", 0, 0, 5); ; # Make parameterized range in t : [tmin,5]; t.setRange(tmin, ROOT.RooFit.RooConst(t.getMax())); ; # Make pdf; tau = ROOT.RooRealVar(""tau"", ""tau"", -1.54, -10, -0.1); model = ROOT.RooExponential(""model"", ""model"", t, tau); ; # Create input data; # ------------------------------------; ; # Generate complete dataset without acceptance cuts (for reference); dall = model.generate({t}, 10000); ; # Generate a (fake) prototype dataset for acceptance limit values; tmp = ROOT.RooGaussian(""gmin"", ""gmin"", tmin, 0.0, 0.5).generate({tmin}, 5000); ; # Generate dataset with t values that observe (t>tmin); dacc = model.generate({t}, ProtoData=tmp); ; # Fit pdf to data in acceptance region; # -----------------------------------------------------------------------; ; r = model.fitTo(dacc, Save=True, PrintLevel=-1); ; # Plot fitted pdf on full and accepted data; # ---------------------------------------------------------------------------------; ; # Make plot frame, datasets and overlay model; frame = t.frame(Title=""Fit to data with per-event acceptance""); dall.plotOn(frame, MarkerColor=""r"", LineColor=""r""); model.plotOn(frame); dacc.plotOn(frame); ; # Print fit results to demonstrate absence of bias; r.Print(""v""); ; c = ROOT.TCanvas(""rf314_paramranges"", ""rf314_paramranges"", 600, 600); ROOT.gPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf314__paramfitrange_8py.html:94,Guid,Guide,94,doc/master/rf314__paramfitrange_8py.html,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf315_projectpdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf315_projectpdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooPolyVar.h""; #include ""TH1.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooNumIntConfig.h""; using namespace RooFit;; ; void rf315_projectpdf(); {; // C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; ; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision; RooAbsPdf::defaultIntegratorConfig()->setEpsRel(1e-8);; RooAbsPdf::defaultIntegratorConfig()->setEpsAbs(1e-8);; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -2, 2);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", 0);; RooRealVar a1(""a1"", ""a1"", -1.5, -3, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gaussx(x,f(y),sx); RooRealVar sigmax(""sigmax"", ""width of gaussian"", 0.5);; RooGaussian gaussx(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax);; ; // Create gaussy(y,0,2); RooGaussian gaussy(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0);; ; // Create gaussx(x,sx|y) * gaussy(y); RooProdPdf model(""model"", ""gaussx(x|y)*gaussy(y)"", gaussy, Conditional(gaussx, x));; ; // M a r g i n a l i z e m ( x , y ) t o m ( x ); // ----------------------------------------------------; ; // modelx(x) = Int model(x,y) dy; RooAbsPdf *modelx = model.createProjection(y);; ; // U s e m a r g i n a l i z e d p . d . f . a s r e g u l a r 1 - D p . d . f .; // ------------------------------------------------------------------------------------------; ; // Samp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf315__projectpdf_8C.html:90,Guid,Guide,90,doc/master/rf315__projectpdf_8C.html,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf315_projectpdf.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf315_projectpdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; import ROOT; ; ; # Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; ; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision; ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsRel(1e-8); ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsAbs(1e-8); ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -2, 2); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -1.5, -3, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Create gaussx(x,f(y),sx); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian"", 0.5); gaussx = ROOT.RooGaussian(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax); ; # Create gaussy(y,0,2); gaussy = ROOT.RooGaussian(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0); ; # Create gaussx(x,sx|y) * gaussy(y); model = ROOT.RooProdPdf(; ""model"",; ""gaussx(x|y)*gaussy(y)"",; {gaussy},; Conditional=({gaussx}, {x}),; ); ; # Marginalize m(x,y) to m(x); # ----------------------------------------------------; ; # modelx(x) = Int model(x,y) dy; modelx = model.createProjection({y}); ; # Use marginalized pdf as regular 1D pdf; # -----------------------------------------------; ; # Sample 1000 events from modelx; data = modelx.generateBinned({x}, 1000); ; # Fit modelx to toy data; modelx.fitTo(data, Verbose=True, PrintLevel=-1); ; # Plot modelx over data; frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf315__projectpdf_8py.html:91,Guid,Guide,91,doc/master/rf315__projectpdf_8py.html,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf316_llratioplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf316_llratioplot.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf316_llratioplot(); {; ; // C r e a t e 3 D p d f a n d d a t a; // -------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; RooRealVar z(""z"", ""z"", -5, 5);; ; // Create signal pdf gauss(x)*gauss(y)*gauss(z); RooGaussian gx(""gx"", ""gx"", x, 0.0, 1.0);; RooGaussian gy(""gy"", ""gy"", y, 0.0, 1.0);; RooGaussian gz(""gz"", ""gz"", z, 0.0, 1.0);; RooProdPdf sig(""sig"", ""sig"", RooArgSet(gx, gy, gz));; ; // Create background pdf poly(x)*poly(y)*poly(z); RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));; RooPolynomial py(""py"", ""py"", y, RooArgSet(0.1, -0.004));; RooPolynomial pz(""pz"", ""pz"", z);; RooProdPdf bkg(""bkg"", ""bkg"", RooArgSet(px, py, pz));; ; // Create composite pdf sig+bkg; RooRealVar fsig(""fsig"", ""signal fraction"", 0.1, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), fsig);; ; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 20000)};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // --------------------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf316__llratioplot_8C.html:91,Guid,Guide,91,doc/master/rf316__llratioplot_8C.html,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf316_llratioplot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf316_llratioplot.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf . ; import ROOT; ; ; # Create 3D pdf and data; # -------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); z = ROOT.RooRealVar(""z"", ""z"", -5, 5); ; # Create signal pdf gauss(x)*gauss(y)*gauss(z); gx = ROOT.RooGaussian(""gx"", ""gx"", x, 0.0, 1.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, 0.0, 1.0); gz = ROOT.RooGaussian(""gz"", ""gz"", z, 0.0, 1.0); sig = ROOT.RooProdPdf(""sig"", ""sig"", [gx, gy, gz]); ; # Create background pdf poly(x)*poly(y)*poly(z); px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.1, -0.004]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", [px, py, pz]); ; # Create composite pdf sig+bkg; fsig = ROOT.RooRealVar(""fsig"", ""signal fraction"", 0.1, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [fsig]); ; data = model.generate({x, y, z}, 20000); ; # Project pdf and data on x; # -------------------------------------------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; ; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); ; # Construct the log of the signal / signal+background probability; llratio_func = ROOT.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf316__llratioplot_8py.html:92,Guid,Guide,92,doc/master/rf316__llratioplot_8py.html,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf401_importttreethx.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf401_importttreethx.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: advanced options for importing data from ROOT TTree and THx histograms ; Basic import options are demonstrated in rf102_dataimport.C; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooDataHist.h""; #include ""RooCategory.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TH1.h""; #include ""TTree.h""; #include ""TRandom.h""; #include <map>; ; using namespace RooFit;; ; TH1 *makeTH1(const char *name, double mean, double sigma);; TTree *makeTTree();; ; void rf401_importttreethx(); {; // I m p o r t m u l t i p l e T H 1 i n t o a R o o D a t a H i s t; // --------------------------------------------------------------------------; ; // Create thee ROOT TH1 histograms; TH1 *hh_1 = makeTH1(""hh1"", 0, 3);; TH1 *hh_2 = makeTH1(""hh2"", -3, 1);; TH1 *hh_3 = makeTH1(""hh3"", +3, 4);; ; // Declare observable x; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create category observable c that serves as index for the ROOT histograms; RooCategory c(""c"", ""c"", {{""SampleA"",0}, {""SampleB"",1}, {""SampleC"",2}});; ; // Create a binned dataset that imports contents of all TH1 mapped by index category c; RooDataHist *dh = new RooDataHist(""dh"", ""dh"", x, Index(c), Import(""SampleA"", *hh_1), Import(""SampleB"", *hh_2),; Import(""SampleC"", *hh_3));; dh->Print();; ; // Alternative constructor form for importing multiple histograms; std::map<std::string, TH1 *> hmap;; hmap[""SampleA""] = hh_1;; hmap[""SampleB""] = hh_2;; hmap[""SampleC""] = hh_3;; RooDataHist *dh2 = new RooDataHist(""dh"", ""dh"", x, c, hmap);; dh2->Print();; ; // I m p o r t i n g a T T r e e i n t o a R o o D a t a S e t w i t h c u t s; // -----------------------------------------------------------------------------------------; ; TTree *tree ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf401__importttreethx_8C.html:94,Guid,Guide,94,doc/master/rf401__importttreethx_8C.html,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf401_importttreethx.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf401_importttreethx.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'DATA AND CATEGORIES' RooFit tutorial macro #401 ; Overview of advanced option for importing data from ROOT ROOT.TTree and ROOT.THx histograms Basic import options are demonstrated in rf102_dataimport.py; ; import ROOT; from array import array; ; ; def makeTH1(name, mean, sigma):; """"""Create ROOT TH1 filled with a Gaussian distribution.""""""; ; hh = ROOT.TH1D(name, name, 100, -10, 10); for i in range(1000):; hh.Fill(ROOT.gRandom.Gaus(mean, sigma)); ; return hh; ; ; def makeTTree():; """"""Create ROOT ROOT.TTree filled with a Gaussian distribution in x and a uniform distribution in y.""""""; ; tree = ROOT.TTree(""tree"", ""tree""); px = array(""d"", [0]); py = array(""d"", [0]); pz = array(""d"", [0]); pi = array(""i"", [0]); tree.Branch(""x"", px, ""x/D""); tree.Branch(""y"", py, ""y/D""); tree.Branch(""z"", pz, ""z/D""); tree.Branch(""i"", pi, ""i/I""); for i in range(100):; px[0] = ROOT.gRandom.Gaus(0, 3); py[0] = ROOT.gRandom.Uniform() * 30 - 15; pz[0] = ROOT.gRandom.Gaus(0, 5); pi[0] = i % 3; tree.Fill(); ; return tree; ; ; # Import multiple TH1 into a RooDataHist; # ----------------------------------------------------------; ; # Create thee ROOT ROOT.TH1 histograms; hh_1 = makeTH1(""hh1"", 0, 3); hh_2 = makeTH1(""hh2"", -3, 1); hh_3 = makeTH1(""hh3"", +3, 4); ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create category observable c that serves as index for the ROOT histograms; c = ROOT.RooCategory(""c"", ""c""); c.defineType(""SampleA""); c.defineType(""SampleB""); c.defineType(""SampleC""); ; # Create a binned dataset that imports contents of all ROOT.TH1 mapped by; # index category c; dh = ROOT.RooDataHist(""dh"", ""dh"", [x], Index=c, Import={""SampleA"": hh_1, ""SampleB"": hh_2, ""SampleC"": hh_3}); dh.Print(); ; dh2 = ROOT.RooDataHist(""dh"", ""dh"", [x]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf401__importttreethx_8py.html:95,Guid,Guide,95,doc/master/rf401__importttreethx_8py.html,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf402_datahandling.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf402_datahandling.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooCategory.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TFile.h""; using namespace RooFit;; ; // WVE Add reduction by range; ; void rf402_datahandling(); {; ; // Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format; ; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", 0, 40);; RooCategory c(""c"", ""c"");; c.defineType(""Plus"", +1);; c.defineType(""Minus"", -1);; ; // B a s i c O p e r a t i o n s o n u n b i n n e d d a t a s e t s; // --------------------------------------------------------------; ; // RooDataSet is an unbinned dataset (a collection of points in N-dimensional space); RooDataSet d(""d"", ""d"", RooArgSet(x, y, c));; ; // Unlike RooAbsArgs (RooAbsPdf,RooFormulaVar,....) datasets are not attached to; // the variables they are constructed from. Instead they are attached to an internal; // clone of the supplied set of arguments; ; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf402__datahandling_8C.html:92,Guid,Guide,92,doc/master/rf402__datahandling_8C.html,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf402_datahandling.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf402_datahandling.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; from __future__ import print_function; import ROOT; import math; ; # WVE Add reduction by range; ; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format; ; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 40); c = ROOT.RooCategory(""c"", ""c""); c.defineType(""Plus"", +1); c.defineType(""Minus"", -1); ; # Basic operations on unbinned datasetss; # --------------------------------------------------------------; ; # ROOT.RooDataSet is an unbinned dataset (a collection of points in; # N-dimensional space); d = ROOT.RooDataSet(""d"", ""d"", {x, y, c}); ; # Unlike ROOT.RooAbsArgs (ROOT.RooAbsPdf, ROOT.RooFormulaVar,....) datasets are not attached to; # the variables they are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; ; # Fill d with dummy values; for i in range(1000):; x.setVal(i / 50 - 10); y.setVal(math.sqrt(1.0 * i)); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf402__datahandling_8py.html:93,Guid,Guide,93,doc/master/rf402__datahandling_8py.html,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf403_weightedevts.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf403_weightedevts.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: using weights in unbinned datasets . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooFormulaVar.h""; #include ""RooGenericPdf.h""; #include ""RooPolynomial.h""; #include ""RooMinimizer.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFitResult.h""; using namespace RooFit;; ; void rf403_weightedevts(); {; // C r e a t e o b s e r v a b l e a n d u n w e i g h t e d d a t a s e t; // -------------------------------------------------------------------------------; ; // Declare observable; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(40);; ; // Construction a uniform pdf; RooPolynomial p0(""px"", ""px"", x);; ; // Sample 1000 events from pdf; std::unique_ptr<RooDataSet> data{p0.generate(x, 1000)};; ; // C a l c u l a t e w e i g h t a n d m a k e d a t a s e t w e i g h t e d; // -----------------------------------------------------------------------------------; ; // Construct formula to calculate (fake) weight for events; RooFormulaVar wFunc(""w"", ""event weight"", ""(x*x+10)"", x);; ; // Add column with variable w to previously generated dataset; RooRealVar *w = (RooRealVar *)data->addColumn(wFunc);; ; // Dataset d is now a dataset with two observable (x,w) with 1000 entries; data->Print();; ; // Instruct dataset wdata in interpret w as event weight rather than as observable; RooDataSet wdata(data->GetName(), data->GetTitle(), data.get(), *data->get(), 0, w->GetName());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf403__weightedevts_8C.html:92,Guid,Guide,92,doc/master/rf403__weightedevts_8C.html,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf403_weightedevts.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf403_weightedevts.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'DATA AND CATEGORIES' RooFit tutorial macro #403 ; Using weights in unbinned datasets. ; from __future__ import print_function; import ROOT; ; ; # Create observable and unweighted dataset; # -------------------------------------------; ; # Declare observable; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); x.setBins(40); ; # Construction a uniform pdf; p0 = ROOT.RooPolynomial(""px"", ""px"", x); ; # Sample 1000 events from pdf; data = p0.generate({x}, 1000); ; # Calculate weight and make dataset weighted; # --------------------------------------------------; ; # Construct formula to calculate (fake) weight for events; wFunc = ROOT.RooFormulaVar(""w"", ""event weight"", ""(x*x+10)"", [x]); ; # Add column with variable w to previously generated dataset; w = data.addColumn(wFunc); ; # Dataset d is now a dataset with two observable (x,w) with 1000 entries; data.Print(); ; # Instruct dataset wdata in interpret w as event weight rather than as; # observable; wdata = ROOT.RooDataSet(data.GetName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf403__weightedevts_8py.html:93,Guid,Guide,93,doc/master/rf403__weightedevts_8py.html,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf404_categories.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf404_categories.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: working with RooCategory objects to describe discrete variables ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooPolynomial.h""; #include ""RooCategory.h""; #include ""Roo1DTable.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include <iostream>; using namespace RooFit;; ; void rf404_categories(); {; ; // C o n s t r u c t a c a t e g o r y w i t h l a b e l s; // ----------------------------------------------------------------; ; // Define a category with labels only; RooCategory tagCat(""tagCat"", ""Tagging category"");; tagCat.defineType(""Lepton"");; tagCat.defineType(""Kaon"");; tagCat.defineType(""NetTagger-1"");; tagCat.defineType(""NetTagger-2"");; tagCat.Print();; ; // C o n s t r u c t a c a t e g o r y w i t h l a b e l s a n d i n d i c e s; // ----------------------------------------------------------------------------------------; ; // Define a category with explicitly numbered states; RooCategory b0flav(""b0flav"", ""B0 flavour eigenstate"");; b0flav[""B0""] = -1;; b0flav[""B0bar""] = 1;; // Print it in ""verbose"" mode to see all states.; b0flav.Print(""V"");; ; ; // Alternatively, define many states at once. The function takes; // a map with std::string --> index mapping.; RooCategory largeCat(""largeCat"", ""A category with many states"");; largeCat.defineTypes({; {""A"", 0}, {""b"", 2}, {""c"", 8}, {""dee"", 4},; {""F"", 133}, {""g"", 15}, {""H"", -20}; });; ; ; // I t e r a t e, q u e r y a n d s e t s t a t e s; // --------------------------------------------------------; ; // One can iterate through the {index,name} pair of category objects; std::cout << ""\nThis is the for loop over states of 'largeCat':"";; for (const auto& idxAndName : largeCat); std::cout << ""\n\t"" << idxAndName.fir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf404__categories_8C.html:90,Guid,Guide,90,doc/master/rf404__categories_8C.html,https://root.cern,https://root.cern/doc/master/rf404__categories_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf404_categories.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf404_categories.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: working with ROOT.RooCategory objects to describe discrete variables ; ; from __future__ import print_function; import ROOT; ; ; # Construct a category with labels; # --------------------------------------------; ; # Define a category with labels only; tagCat = ROOT.RooCategory(""tagCat"", ""Tagging category""); tagCat.defineType(""Lepton""); tagCat.defineType(""Kaon""); tagCat.defineType(""NetTagger-1""); tagCat.defineType(""NetTagger-2""); tagCat.Print(); ; # Construct a category with labels and indices; # ------------------------------------------------; ; # Define a category with explicitly numbered states; b0flav = ROOT.RooCategory(""b0flav"", ""B0 flavour eigenstate"", {""B0"": -1, ""B0bar"": 1}); b0flav.Print(); ; # Generate dummy data for tabulation demo; # ------------------------------------------------; ; # Generate a dummy dataset; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); data = ROOT.RooPolynomial(""p"", ""p"", x).generate({x, b0flav, tagCat}, 10000); ; # Print tables of category contents of datasets; # --------------------------------------------------; ; # Tables are equivalent of plots for categories; btable = data.table(b0flav); btable.Print(); btable.Print(""v""); ; # Create table for subset of events matching cut expression; ttable = data.table(tagCat, ""x>8.23""); ttable.Print(); ttable.Print(""v""); ; # Create table for all (tagCat x b0flav) state combinations; bttable = data.table({tagCat, b0flav}); bttable.Print(""v""); ; # Retrieve number of events from table; # Number can be non-integer if source dataset has weighed events; nb0 = btable.get(""B0""); print(""Number of events with B0 flavor is "", nb0); ; # Retrieve fraction of events with ""Lepton"" tag; fracLep = ttable.getFrac(""Lepton""); print(""Fraction of events tagged with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf404__categories_8py.html:91,Guid,Guide,91,doc/master/rf404__categories_8py.html,https://root.cern,https://root.cern/doc/master/rf404__categories_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf405_realtocatfuncs.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf405_realtocatfuncs.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: demonstration of real-->discrete mapping functions . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooCategory.h""; #include ""RooThresholdCategory.h""; #include ""RooBinningCategory.h""; #include ""Roo1DTable.h""; #include ""RooArgusBG.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf405_realtocatfuncs(); {; ; // D e f i n e p d f i n x , s a m p l e d a t a s e t i n x; // ------------------------------------------------------------------------; ; // Define a dummy PDF in x; RooRealVar x(""x"", ""x"", 0, 10);; RooArgusBG a(""a"", ""argus(x)"", x, 10.0, -1.0);; ; // Generate a dummy dataset; std::unique_ptr<RooDataSet> data{a.generate(x, 10000)};; ; // C r e a t e a t h r e s h o l d r e a l - > c a t f u n c t i o n; // --------------------------------------------------------------------------; ; // A RooThresholdCategory is a category function that maps regions in a real-valued; // input observable observables to state names. At construction time a 'default'; // state name must be specified to which all values of x are mapped that are not; // otherwise assigned; RooThresholdCategory xRegion(""xRegion"", ""region of x"", x, ""Background"");; ; // Specify thresholds and state assignments one-by-one.; // Each statement specifies that all values _below_ the given value; // (and above any lower specified threshold) are mapped to the; // category state with the given name; //; // Background | SideBand | Signal | SideBand | Background; // 4.23 5.23 8.23 9.23; xRegion.addThreshold(4.23, ""Background"");; xRegion.addThreshold(5.23, ""SideBand"");; xRegion.addThreshold(8.23, ""Signal"");; xRegion.addThreshold(9.23, ""SideBand"");; ; // U s e t h r e s h o l d ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf405__realtocatfuncs_8C.html:94,Guid,Guide,94,doc/master/rf405__realtocatfuncs_8C.html,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf405_realtocatfuncs.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf405_realtocatfuncs.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: demonstration of real-discrete mapping functions . ; import ROOT; ; ; # Define pdf in x, sample dataset in x; # ------------------------------------------------------------------------; ; # Define a dummy PDF in x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); a = ROOT.RooArgusBG(""a"", ""argus(x)"", x, 10.0, -1.0); ; # Generate a dummy dataset; data = a.generate({x}, 10000); ; # Create a threshold real -> cat function; # --------------------------------------------------------------------------; ; # A RooThresholdCategory is a category function that maps regions in a real-valued; # input observable observables to state names. At construction time a 'default'; # state name must be specified to which all values of x are mapped that are not; # otherwise assigned; xRegion = ROOT.RooThresholdCategory(""xRegion"", ""region of x"", x, ""Background""); ; # Specify thresholds and state assignments one-by-one.; # Each statement specifies that all values _below_ the given value; # (and above any lower specified threshold) are mapped to the; # category state with the given name; #; # Background | SideBand | Signal | SideBand | Background; # 4.23 5.23 8.23 9.23; xRegion.addThreshold(4.23, ""Background""); xRegion.addThreshold(5.23, ""SideBand""); xRegion.addThreshold(8.23, ""Signal""); xRegion.addThreshold(9.23, ""SideBand""); ; # Use threshold function to plot data regions; # ----------------------------------------------; ; # Add values of threshold function to dataset so that it can be used as; # observable; data.addColumn(xRegion); ; # Make plot of data in x; xframe = x.frame(Title=""Demo of threshold and binning mapping functions""); data.plotOn(xframe); ; # Use calculated category to select sideband data; data.plotOn(xframe, Cut=""xRegi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf405__realtocatfuncs_8py.html:95,Guid,Guide,95,doc/master/rf405__realtocatfuncs_8py.html,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf406_cattocatfuncs.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf406_cattocatfuncs.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: demonstration of discrete-->discrete (invertible) functions ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooPolynomial.h""; #include ""RooCategory.h""; #include ""RooMappedCategory.h""; #include ""RooMultiCategory.h""; #include ""RooSuperCategory.h""; #include ""Roo1DTable.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf406_cattocatfuncs(); {; // C o n s t r u c t t w o c a t e g o r i e s; // ----------------------------------------------; ; // Define a category with labels only; RooCategory tagCat(""tagCat"", ""Tagging category"");; tagCat.defineType(""Lepton"");; tagCat.defineType(""Kaon"");; tagCat.defineType(""NetTagger-1"");; tagCat.defineType(""NetTagger-2"");; tagCat.Print();; ; // Define a category with explicitly numbered states; RooCategory b0flav(""b0flav"", ""B0 flavour eigenstate"");; b0flav.defineType(""B0"", -1);; b0flav.defineType(""B0bar"", 1);; b0flav.Print();; ; // Construct a dummy dataset with random values of tagCat and b0flav; RooRealVar x(""x"", ""x"", 0, 10);; RooPolynomial p(""p"", ""p"", x);; std::unique_ptr<RooDataSet> data{p.generate({x, b0flav, tagCat}, 10000)};; ; // C r e a t e a c a t - > c a t m a p p i n g c a t e g o r y; // ---------------------------------------------------------------------; ; // A RooMappedCategory is category->category mapping function based on string expression; // The constructor takes an input category an a default state name to which unassigned; // states are mapped; RooMappedCategory tcatType(""tcatType"", ""tagCat type"", tagCat, ""Cut based"");; ; // Enter fully specified state mappings; tcatType.map(""Lepton"", ""Cut based"");; tcatType.map(""Kaon"", ""Cut based"");; ; // Enter a wildcard expression mapping; tcatType.map(""NetTagger*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf406__cattocatfuncs_8C.html:93,Guid,Guide,93,doc/master/rf406__cattocatfuncs_8C.html,https://root.cern,https://root.cern/doc/master/rf406__cattocatfuncs_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf406_cattocatfuncs.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf406_cattocatfuncs.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: demonstration of discrete-discrete (invertable) functions ; ; import ROOT; ; ; # Construct two categories; # ----------------------------------------------; ; # Define a category with labels only; tagCat = ROOT.RooCategory(""tagCat"", ""Tagging category""); tagCat.defineType(""Lepton""); tagCat.defineType(""Kaon""); tagCat.defineType(""NetTagger-1""); tagCat.defineType(""NetTagger-2""); tagCat.Print(); ; # Define a category with explicitly numbered states; b0flav = ROOT.RooCategory(""b0flav"", ""B0 flavour eigenstate"", {""B0"": -1, ""B0bar"": 1}); b0flav.Print(); ; # Construct a dummy dataset with random values of tagCat and b0flav; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); p = ROOT.RooPolynomial(""p"", ""p"", x); data = p.generate({x, b0flav, tagCat}, 10000); ; # Create a cat -> cat mapping category; # ---------------------------------------------------------------------; ; # A RooMappedCategory is category.category mapping function based on string expression; # The constructor takes an input category an a default state name to which unassigned; # states are mapped; tcatType = ROOT.RooMappedCategory(""tcatType"", ""tagCat type"", tagCat, ""Cut based""); ; # Enter fully specified state mappings; tcatType.map(""Lepton"", ""Cut based""); tcatType.map(""Kaon"", ""Cut based""); ; # Enter a wildcard expression mapping; tcatType.map(""NetTagger*"", ""Neural Network""); ; # Make a table of the mapped category state multiplicit in data; mtable = data.table(tcatType); mtable.Print(""v""); ; # Create a cat X cat product category; # ----------------------------------------------------------------------; ; # A SUPER-category is 'product' of _lvalue_ categories. The state names of a super; # category is a composite of the state labels of the input categories; b0X",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf406__cattocatfuncs_8py.html:94,Guid,Guide,94,doc/master/rf406__cattocatfuncs_8py.html,https://root.cern,https://root.cern/doc/master/rf406__cattocatfuncs_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf407_latextables.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf407_latextables.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: latex printing of lists and sets of RooArgSets ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExponential.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf407_latextables(); {; // S e t u p c o m p o s i t e p d f; // --------------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg1(""bkg1"", ""Background 1"", x, RooArgSet(a0, a1));; ; // Build expontential pdf; RooRealVar alpha(""alpha"", ""alpha"", -1);; RooExponential bkg2(""bkg2"", ""Background 2"", x, alpha);; ; // Sum the background components into a composite background pdf; RooRealVar bkg1frac(""sig1frac"", ""fraction of component 1 in background"", 0.2, 0., 1.);; RooAddPdf bkg(""bkg"", ""Signal"", RooArgList(bkg1, bkg2), sig1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf407__latextables_8C.html:91,Guid,Guide,91,doc/master/rf407__latextables_8C.html,https://root.cern,https://root.cern/doc/master/rf407__latextables_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf407_latextables.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf407_latextables.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: latex printing of lists and sets of RooArgSets ; ; import ROOT; ; ; # Setup composite pdf; # --------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg1 = ROOT.RooChebychev(""bkg1"", ""Background 1"", x, [a0, a1]); ; # Build expontential pdf; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -1); bkg2 = ROOT.RooExponential(""bkg2"", ""Background 2"", x, alpha); ; # Sum the background components into a composite background pdf; bkg1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in background"", 0.2, 0.0, 1.0); bkg = ROOT.RooAddPdf(""bkg"", ""Signal"", [bkg1, bkg2], [sig1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Make list of parameters before and after fit; # ----------------------------------------------------------------------------------------; ; # Make l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf407__latextables_8py.html:92,Guid,Guide,92,doc/master/rf407__latextables_8py.html,https://root.cern,https://root.cern/doc/master/rf407__latextables_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf408_RDataFrameToRooFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf408_RDataFrameToRooFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Fill RooDataSet/RooDataHist in RDataFrame. ; This tutorial shows how to fill RooFit data classes directly from RDataFrame. Using two small helpers, we tell RDataFrame where the data has to go.; ; #include <RooAbsDataHelper.h>; ; #include <TRandom.h>; ; /// Print the first few entries and summary statistics.; void printData(const RooAbsData& data) {; std::cout << ""\n"";; data.Print();; ; for (int i=0; i < data.numEntries() && i < 20; ++i) {; std::cout << ""("";; for (const auto var : *data.get(i)) {; std::cout << std::setprecision(3) << std::right << std::fixed << std::setw(8) << static_cast<const RooAbsReal*>(var)->getVal() << "", "";; }; std::cout << "")\tweight="" << std::setw(10) << data.weight() << std::endl;; }; ; // Get the x and y variables from the dataset:; const auto & x = static_cast<const RooRealVar&>(*(*data.get())[0]);; const auto & y = static_cast<const RooRealVar&>(*(*data.get())[1]);; ; std::cout << ""mean(x) = "" << data.mean(x) << ""\tsigma(x) = "" << std::sqrt(data.moment(x, 2.)); << ""\n"" << ""mean(y) = "" << data.mean(y) << ""\tsigma(y) = "" << std::sqrt(data.moment(y, 2.)) << std::endl;; }; ; void rf408_RDataFrameToRooFit(); {; // Set up; // ------------------------; ; // We create an RDataFrame with two columns filled with 2 million random numbers.; auto df = ROOT::RDataFrame{2000000}.Define(""x"", []() { return gRandom->Uniform(-5., 5.); }).Define(""y"", []() {; return gRandom->Gaus(1., 3.);; });; ; ; // We create RooFit variables that will represent the dataset.; RooRealVar x(""x"", ""x"", -5., 5.);; RooRealVar y(""y"", ""y"", -50., 50.);; x.setBins(10);; y.setBins(20);; ; ; ; // Booking the creation of RooDataSet / RooDataHist in RDataFrame; // ----------------------------------------------------------------; ; // Method 1:; // --",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html:98,Guid,Guide,98,doc/master/rf408__RDataFrameToRooFit_8C.html,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf408_RDataFrameToRooFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf408_RDataFrameToRooFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Fill RooDataSet/RooDataHist in RDataFrame. ; This tutorial shows how to fill RooFit data classes directly from RDataFrame. Using two small helpers, we tell RDataFrame where the data has to go.; ; import ROOT; import math; ; ; # Set up; # ------------------------; ; # We create an RDataFrame with two columns filled with 2 million random numbers.; df = ROOT.RDataFrame(2000000).Define(""x"", ""gRandom->Uniform(-5., 5.)"").Define(""y"", ""gRandom->Gaus(1., 3.)""); ; ; # We create RooFit variables that will represent the dataset.; x = ROOT.RooRealVar(""x"", ""x"", -5.0, 5.0); y = ROOT.RooRealVar(""y"", ""y"", -50.0, 50.0); x.setBins(10); y.setBins(20); ; ; # Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; ; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; ; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions; roo_data_set_result = df.Book(; ROOT.std.move(ROOT.RooDataSetHelper(""dataset"", ""Title of dat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html:99,Guid,Guide,99,doc/master/rf408__RDataFrameToRooFit_8py.html,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf409_NumPyPandasToRooFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf409_NumPyPandasToRooFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Convert between NumPy arrays or Pandas DataFrames and RooDataSets. ; This tutorials first how to export a RooDataSet to NumPy arrays or a Pandas DataFrame, and then it shows you how to create a RooDataSet from a Pandas DataFrame.; ; import ROOT; ; import numpy as np; ; ; # The number of events that we use for the datasets created in this tutorial.; n_events = 10000; ; ; # Creating a RooDataSet and exporting it to the Python ecosystem; # --------------------------------------------------------------; ; # Define the observable.; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Define a Gaussian model with its parameters.; mean = ROOT.RooRealVar(""mean"", ""mean of gaussian"", 1, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 1, 0.1, 10); gauss = ROOT.RooGaussian(""gauss"", ""gaussian PDF"", x, mean, sigma); ; # Create a RooDataSet.; data = gauss.generate(ROOT.RooArgSet(x), 10000); ; # Use RooDataSet.to_numpy() to export dataset to a dictionary of NumPy arrays.; # Real values will be of type `double`, categorical values of type `int`.; arrays = data.to_numpy(); ; # We can verify that the mean and standard deviation matches our model specification.; print(""Mean of numpy array:"", np.mean(arrays[""x""])); print(""Standard deviation of numpy array:"", np.std(arrays[""x""])); ; # It is also possible to create a Pandas DataFrame directly from the numpy arrays:; df = data.to_pandas(); ; # Now you can use the DataFrame e.g. for plotting. You can even combine this; # with the RooAbsReal.bins PyROOT function, which returns the binning from; # RooFit as a numpy array!; try:; import matplotlib.pyplot as plt; ; df.hist(column=""x"", bins=x.bins()); except Exception:; print(; 'Skipping `df.hist(column=""x"", bins=x.bins())` because mat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html:100,Guid,Guide,100,doc/master/rf409__NumPyPandasToRooFit_8py.html,https://root.cern,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf501_simultaneouspdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf501_simultaneouspdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organisation and simultaneous fits: using simultaneous pdfs to describe simultaneous fits to multiple datasets . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooSimultaneous.h""; #include ""RooCategory.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf501_simultaneouspdf(); {; // C r e a t e m o d e l f o r p h y s i c s s a m p l e; // -------------------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -8, 8);; ; // Construct signal pdf; RooRealVar mean(""mean"", ""mean"", 0, -8, 8);; RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);; RooGaussian gx(""gx"", ""gx"", x, mean, sigma);; ; // Construct background pdf; RooRealVar a0(""a0"", ""a0"", -0.1, -1, 1);; RooRealVar a1(""a1"", ""a1"", 0.004, -1, 1);; RooChebychev px(""px"", ""px"", x, RooArgSet(a0, a1));; ; // Construct composite pdf; RooRealVar f(""f"", ""f"", 0.2, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(gx, px), f);; ; // C r e a t e m o d e l f o r c o n t r o l s a m p l e; // --------------------------------------------------------------; ; // Construct signal pdf.; // NOTE that sigma is shared with the signal sample model; RooRealVar mean_ctl(""mean_ctl"", ""mean_ctl"", -3, -8, 8);; RooGaussian gx_ctl(""gx_ctl"", ""gx_ctl"", x, mean_ctl, sigma);; ; // Construct the background pdf; RooRealVar a0_ctl(""a0_ctl"", ""a0_ctl"", -0.1, -1, 1);; RooRealVar a1_ctl(""a1_ctl"", ""a1_ctl"", 0.5, -0.1, 1);; RooChebychev px_ctl(""px_ctl"", ""px_ctl"", x, RooArgSet(a0_ctl, a1_ctl));; ; // Construct the composite model; RooRealVar f_ctl(""f_ctl"", ""f_ctl"", 0.5, 0., 1.);; RooAddPdf model_ctl(""model_ctl"", ""model_ctl"", RooArgList(gx_ctl, px_ct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:95,Guid,Guide,95,doc/master/rf501__simultaneouspdf_8C.html,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf501_simultaneouspdf.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf501_simultaneouspdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: using simultaneous pdfs to describe simultaneous fits to multiple datasets . ; import ROOT; ; ; # Create model for physics sample; # -------------------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -8, 8); ; # Construct signal pdf; mean = ROOT.RooRealVar(""mean"", ""mean"", 0, -8, 8); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 0.3, 0.1, 10); gx = ROOT.RooGaussian(""gx"", ""gx"", x, mean, sigma); ; # Construct background pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", -0.1, -1, 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0.004, -1, 1); px = ROOT.RooChebychev(""px"", ""px"", x, [a0, a1]); ; # Construct composite pdf; f = ROOT.RooRealVar(""f"", ""f"", 0.2, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gx, px], [f]); ; # Create model for control sample; # --------------------------------------------------------------; ; # Construct signal pdf.; # NOTE that sigma is shared with the signal sample model; mean_ctl = ROOT.RooRealVar(""mean_ctl"", ""mean_ctl"", -3, -8, 8); gx_ctl = ROOT.RooGaussian(""gx_ctl"", ""gx_ctl"", x, mean_ctl, sigma); ; # Construct the background pdf; a0_ctl = ROOT.RooRealVar(""a0_ctl"", ""a0_ctl"", -0.1, -1, 1); a1_ctl = ROOT.RooRealVar(""a1_ctl"", ""a1_ctl"", 0.5, -0.1, 1); px_ctl = ROOT.RooChebychev(""px_ctl"", ""px_ctl"", x, [a0_ctl, a1_ctl]); ; # Construct the composite model; f_ctl = ROOT.RooRealVar(""f_ctl"", ""f_ctl"", 0.5, 0.0, 1.0); model_ctl = ROOT.RooAddPdf(""model_ctl"", ""model_ctl"", [gx_ctl, px_ctl], [f_ctl]); ; # Generate events for both samples; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x}, 1000); data_ctl = model_ctl.generate({x}, 2000); ; # Create index catego",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:96,Guid,Guide,96,doc/master/rf501__simultaneouspdf_8py.html,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf502_wspacewrite.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf502_wspacewrite.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organisation and simultaneous fits: creating and writing a workspace ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooWorkspace.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TFile.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf502_wspacewrite(); {; // C r e a t e m o d e l a n d d a t a s e t; // -----------------------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5, 0, 10);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; ; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0, 1.);; RooChebychev bkg(""bkg"", ""Background"", x, RooArgSet(a0, a1));; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // Generate a data sample of 1000 events in x from model; std::unique_ptr<RooDataSet> data{model.generate(x, 1000)};; ; // C r e a t e w o r k s p a c e , i m p o r t d a t a a n d m o d e l; // --------------------------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf502__wspacewrite_8C.html:91,Guid,Guide,91,doc/master/rf502__wspacewrite_8C.html,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf502_wspacewrite.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf502_wspacewrite.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: creating and writing a workspace ; ; import ROOT; ; ; # Create model and dataset; # -----------------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5, 0, 10); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Generate a data sample of 1000 events in x from model; data = model.generate({x}, 1000); ; # Create workspace, import data and model; # -----------------------------------------------------------------------------; ; # Create a empty workspace; w = ROOT.RooWorkspace(""w"", ""workspace""); ; # Import model and all its components into the workspace; w.Import(model); ; # Import data into the workspace; w.Import(data); ; # Print workspace contents; w.Print(); ; # Save workspace in file; # -------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf502__wspacewrite_8py.html:92,Guid,Guide,92,doc/master/rf502__wspacewrite_8py.html,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf503_wspaceread.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf503_wspaceread.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organisation and simultaneous fits: reading and using a workspace ; The input file for this macro is generated by rf502_wspacewrite.C. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooWorkspace.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TFile.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf503_wspaceread(); {; // R e a d w o r k s p a c e f r o m f i l e; // -----------------------------------------------; ; // Open input file with workspace (generated by rf503_wspacewrite); TFile *f = new TFile(""rf502_workspace.root"");; ; // Retrieve workspace from file; RooWorkspace *w = (RooWorkspace *)f->Get(""w"");; ; // R e t r i e v e p d f , d a t a f r o m w o r k s p a c e; // -----------------------------------------------------------------; ; // Retrieve x,model and data from workspace; RooRealVar *x = w->var(""x"");; RooAbsPdf *model = w->pdf(""model"");; RooAbsData *data = w->data(""modelData"");; ; // Print structure of composite pdf; model->Print(""t"");; ; // F i t m o d e l t o d a t a , p l o t m o d e l; // ---------------------------------------------------------; ; // Fit model to data; model->fitTo(*data, PrintLevel(-1));; ; // Plot data and PDF overlaid; RooPlot *xframe = x->frame(Title(""Model and data read from workspace""));; data->plotOn(xframe);; model->plotOn(xframe);; ; // Overlay the background component of model with a dashed line; model->plotOn(xframe, Components(""bkg""), LineStyle(kDashed));; ; // Overlay the background+sig2 components of model with a dotted line; model->plotOn(xframe, Components(""bkg,sig2""), LineStyle(kDotted));; ; // Draw the frame on the canvas; new TCanvas(""rf503_wspaceread"", ""rf503_wsp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf503__wspaceread_8C.html:90,Guid,Guide,90,doc/master/rf503__wspaceread_8C.html,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf503_wspaceread.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf503_wspaceread.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ORGANIZATION AND SIMULTANEOUS FITS' RooFit tutorial macro #503 ; Reading and using a workspace; The input file for self macro is generated by rf502_wspaceread.py. ; import ROOT; ; ; # Read workspace from file; # -----------------------------------------------; ; # Open input file with workspace (generated by rf503_wspacewrite); f = ROOT.TFile(""rf502_workspace_py.root""); ; # Retrieve workspace from file; w = f.Get(""w""); ; # Retrieve pdf, data from workspace; # -----------------------------------------------------------------; ; # Retrieve x, and data from workspace; x = w[""x""]; model = w[""model""]; data = w[""modelData""]; ; # Print structure of composite p.d.f.; model.Print(""t""); ; # Fit model to data, plot model; # ---------------------------------------------------------; ; # Fit model to data; model.fitTo(data, PrintLevel=-1); ; # Plot data and PDF overlaid; xframe = x.frame(Title=""Model and data read from workspace""); data.plotOn(xframe); model.plotOn(xframe); ; # Overlay the background component of model with a dashed line; model.plotOn(xframe, Components=""bkg"", LineStyle=""--""); ; # Overlay the background+sig2 components of model with a dotted line; model.plotOn(xframe, Components=""bkg,sig2"", LineStyle="":""); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf503_wspaceread"", ""rf503_wspaceread"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf503_wspaceread.png""); 0x8fdb600 RooAddPdf::model = 1/1 [Auto,Clean] ; 0x91994b0/V- RooChebychev::bkg = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x27be9c0/V- RooRealVar::a0 = 0.5; 0x2765460/V- RooRealVar::a1 = 0; 0x9279200/V- RooRealVar::bkgfrac = 0.5; 0x926e430/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x91f8100/V- RooGau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf503__wspaceread_8py.html:91,Guid,Guide,91,doc/master/rf503__wspaceread_8py.html,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf504_simwstool.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf504_simwstool.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organisation and simultaneous fits: using RooSimWSTool to construct a simultaneous pdf that is built of variations of an input pdf ; ; #include ""RooRealVar.h""; #include ""RooCategory.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooSimultaneous.h""; #include ""RooAddPdf.h""; #include ""RooWorkspace.h""; #include ""RooSimWSTool.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TFile.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf504_simwstool(); {; // C r e a t e m a s t e r p d f; // ---------------------------------; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // C r e a t e c a t e g o r y o b s e r v a b l e s f o r s p l i t t i n g; // ----------------------------------------------------------------------------------; ; // Define two categories that can be used for splitting; RooCategory c(""c"", ""c"");; c.defineType(""run1"");; c.defineType(""run2"");; ; RooCategory d(""d"", ""d"");; d.defineType(""foo"");; d.defineType(""bar"");; ; // S e t u p S i m W S T o o l; // -----------------------------; ; // Import ingredients in a workspace; RooWorkspace w(""w"", ""w"");; w.import(RooArgSet(model, c, d));; ; // Make Sim builder tool; RooSimWSTool sct(w);; ; // B u i l d a s i m u l t a n e o u s m o d e l w i t h o n e s p l i t; // ------------------------------------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf504__simwstool_8C.html:89,Guid,Guide,89,doc/master/rf504__simwstool_8C.html,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf504_simwstool.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf504_simwstool.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: using RooSimWSTool to construct a simultaneous pdf that is built of variations of an input pdf ; ; import ROOT; ; ; # Create master pdf; # ---------------------------------; ; # Construct gauss(x,m,s); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); m = ROOT.RooRealVar(""m"", ""m"", 0, -10, 10); s = ROOT.RooRealVar(""s"", ""s"", 1, -10, 10); gauss = ROOT.RooGaussian(""g"", ""g"", x, m, s); ; # Construct poly(x,p0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Create category observables for splitting; # ----------------------------------------------------------------------------------; ; # Define two categories that can be used for splitting; c = ROOT.RooCategory(""c"", ""c""); c.defineType(""run1""); c.defineType(""run2""); ; d = ROOT.RooCategory(""d"", ""d""); d.defineType(""foo""); d.defineType(""bar""); ; # Set up SimWSTool; # -----------------------------; ; # Import ingredients in a workspace; w = ROOT.RooWorkspace(""w"", ""w""); w.Import({model, c, d}); ; # Make Sim builder tool; sct = ROOT.RooSimWSTool(w); ; # Build a simultaneous model with one split; # ---------------------------------------------------------------------------------; ; # Construct a simultaneous pdf with the following form; #; # model_run1(x) = f*gauss_run1(x,m_run1,s) + (1-f)*poly; # model_run2(x) = f*gauss_run2(x,m_run2,s) + (1-f)*poly; # simpdf(x,c) = model_run1(x) if c==""run1""; # = model_run2(x) if c==""run2""; #; # Returned pdf is owned by the workspace; model_sim = sct.build(""model_sim"", ""model"", SplitParam=(""m"", ""c"")); ; # Print tree structure of model; mo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf504__simwstool_8py.html:90,Guid,Guide,90,doc/master/rf504__simwstool_8py.html,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf505_asciicfg.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf505_asciicfg.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organisation and simultaneous fits: reading and writing ASCII configuration files ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf505_asciicfg(); {; // C r e a t e p d f; // ------------------; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // F i t m o d e l t o t o y d a t a; // -----------------------------------------; ; std::unique_ptr<RooDataSet> d{model.generate(x, 1000)};; model.fitTo(*d, PrintLevel(-1));; ; // W r i t e p a r a m e t e r s t o a s c i i f i l e; // -----------------------------------------------------------; ; // Obtain set of parameters; std::unique_ptr<RooArgSet> params{model.getParameters(x)};; ; // Write parameters to file; params->writeToFile(""rf505_asciicfg_example.txt"");; ; TString dir1 = gROOT->GetTutorialDir() ;; dir1.Append(""/roofit/rf505_asciicfg.txt"") ;; TString dir2 = ""rf505_asciicfg_example.txt"";; ; // R e a d p a r a m e t e r s f r o m a s c i i f i l e; // ----------------------------------------------------------------; ; // Read parameters from file; params->readFromFile(dir2);; params->Print(""v"");; ; // Read parameters from section 'Section2' of file; params->readFromFile(dir1, 0, ""Section2"");; params->Print(""v"");; ; // Read parameters from se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf505__asciicfg_8C.html:88,Guid,Guide,88,doc/master/rf505__asciicfg_8C.html,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf505_asciicfg.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf505_asciicfg.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: reading and writing ASCII configuration files ; ; from __future__ import print_function; import ROOT; ; ; # Create pdf; # ------------------; ; # Construct gauss(x,m,s); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); m = ROOT.RooRealVar(""m"", ""m"", 0, -10, 10); s = ROOT.RooRealVar(""s"", ""s"", 1, -10, 10); gauss = ROOT.RooGaussian(""g"", ""g"", x, m, s); ; # Construct poly(x,p0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.select",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf505__asciicfg_8py.html:89,Guid,Guide,89,doc/master/rf505__asciicfg_8py.html,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf506_msgservice.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf506_msgservice.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organisation and simultaneous fits: tuning and customizing the RooFit message logging facility ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooMsgService.h""; ; using namespace RooFit;; ; void rf506_msgservice(); {; // C r e a t e p d f; // --------------------; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; std::unique_ptr<RooDataSet> data{model.generate(x, 10)};; ; // P r i n t c o n f i g u r a t i o n o f m e s s a g e s e r v i c e; // ---------------------------------------------------------------------------; ; // Print streams configuration; RooMsgService::instance().Print();; cout << endl;; ; // A d d i n g I n t e g r a t i o n t o p i c t o e x i s t i n g I N F O s t r e a m; // -----------------------------------------------------------------------------------------------; ; // Print streams configuration; RooMsgService::instance().Print();; cout << endl;; ; // Add Integration topic to existing INFO stream; RooMsgService::instance().getStream(1).addTopic(Integration);; ; // Construct integral over gauss to demonstrate new message stream; std::unique_ptr<RooAbsReal> igauss{gauss.createIntegral(x)};; igauss->Print();; ; // Print streams configuration in verbose, which also shows inactive streams",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf506__msgservice_8C.html:90,Guid,Guide,90,doc/master/rf506__msgservice_8C.html,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf506_msgservice.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf506_msgservice.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: tuning and customizing the ROOT.RooFit message logging facility ; ; import ROOT; ; # Create pdf; # --------------------; ; # Construct gauss(x,m,s); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); m = ROOT.RooRealVar(""m"", ""m"", 0, -10, 10); s = ROOT.RooRealVar(""s"", ""s"", 1, -10, 10); gauss = ROOT.RooGaussian(""g"", ""g"", x, m, s); ; # Construct poly(x,p0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; data = model.generate({x}, 10); ; # Print configuration of message service; # ------------------------------------------; ; # Print streams configuration; ROOT.RooMsgService.instance().Print(); ; # Adding integration topic to existing INFO stream; # ---------------------------------------------------; ; # Print streams configuration; ROOT.RooMsgService.instance().Print(); ; # Add Integration topic to existing INFO stream; ROOT.RooMsgService.instance().getStream(1).addTopic(ROOT.RooFit.Integration); ; # Construct integral over gauss to demonstrate message stream; igauss = gauss.createIntegral({x}); igauss.Print(); ; # Print streams configuration in verbose, also shows inactive streams; ROOT.RooMsgService.instance().Print(); ; # Remove stream; ROOT.RooMsgService.instance().getStream(1).removeTopic(ROOT.RooFit.Integration); ; # Examples of pdf value tracing; # -----------------------------------------------------------------------; ; # Show DEBUG level message on function tracing, ROOT.RooGaussian only; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.DEBUG, Topic=ROOT.RooFit.Tracing, ClassName=""RooGaussian""); ; # ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf506__msgservice_8py.html:91,Guid,Guide,91,doc/master/rf506__msgservice_8py.html,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf508_listsetmanip.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf508_listsetmanip.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: RooArgSet and RooArgList tools and tricks ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooArgSet.h""; #include ""RooArgList.h""; #include ""RooCategory.h""; using namespace RooFit;; ; void rf508_listsetmanip(); {; ; // C r e a t e d u m m y o b j e c t s; // ---------------------------------------; ; // Create some variables; RooRealVar a(""a"", ""a"", 1, -10, 10);; RooRealVar b(""b"", ""b"", 2, -10, 10);; RooRealVar c(""c"", ""c"", 3, -10, 10);; RooRealVar d(""d"", ""d"", 4, -10, 10);; RooRealVar x(""x"", ""x"", 0, -10, 10);; c.setError(0.5);; a.setConstant();; b.setConstant();; ; // Create a category; RooCategory e(""e"", ""e"");; e.defineType(""sig"");; e.defineType(""bkg"");; ; // Create a pdf; RooGaussian g(""g"", ""g"", x, a, b);; ; // C r e a t i n g , f i l l i n g R o o A r g S e t s; // -------------------------------------------------------; ; // A RooArgSet is a set of RooAbsArg objects. Each object in the set must have; // a unique name; ; // Set constructors exists with up to 9 initial arguments; RooArgSet s(a, b);; ; // At any time objects can be added with add(); s.add(e);; ; // Add up to 9 additional arguments in one call; s.add(RooArgSet(c, d));; ; // Sets can contain any type of RooAbsArg, also pdf and functions; s.add(g);; ; // Remove element d; s.remove(d);; ; // A c c e s s i n g R o o A r g S e t c o n t e n t s; // -------------------------------------------------------; ; // You can look up objects by name; RooAbsArg *aptr = s.find(""a"");; ; // Construct a subset by name; RooArgSet *subset1 = (RooArgSet *)s.selectByName(""a,b,c"");; ; // Construct asubset by attribute; RooArgSet *subset2 = (RooArgSet *)s.selectByA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf508__listsetmanip_8C.html:92,Guid,Guide,92,doc/master/rf508__listsetmanip_8C.html,https://root.cern,https://root.cern/doc/master/rf508__listsetmanip_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf508_listsetmanip.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf508_listsetmanip.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ORGANIZATION AND SIMULTANEOUS FITS' RooFit tutorial macro #508 ; RooArgSet and RooArgList tools and tricks; ; from __future__ import print_function; import ROOT; ; ; # Create dummy objects; # ---------------------------------------; ; # Create some variables; a = ROOT.RooRealVar(""a"", ""a"", 1, -10, 10); b = ROOT.RooRealVar(""b"", ""b"", 2, -10, 10); c = ROOT.RooRealVar(""c"", ""c"", 3, -10, 10); d = ROOT.RooRealVar(""d"", ""d"", 4, -10, 10); x = ROOT.RooRealVar(""x"", ""x"", 0, -10, 10); c.setError(0.5); a.setConstant(); b.setConstant(); ; # Create a category; e = ROOT.RooCategory(""e"", ""e""); e.defineType(""sig""); e.defineType(""bkg""); ; # Create a pdf; g = ROOT.RooGaussian(""g"", ""g"", x, a, b); ; # Creating, killing RooArgSets; # -------------------------------------------------------; ; # A ROOT.RooArgSet is a set of RooAbsArg objects. Each object in the set must have; # a unique name; ; # Set constructors exists with up to 9 initial arguments; s = ROOT.RooArgSet(a, b); ; # At any time objects can be added with add(); s.add(e); ; # Add up to 9 additional arguments in one call; # s.add(ROOT.RooArgSet(c, d)); s.add(c); s.add(d); ; # Sets can contain any type of RooAbsArg, pdf and functions; s.add(g); ; # Remove element d; s.remove(d); ; # Accessing RooArgSet contents; # -------------------------------------------------------; ; # You can look up objects by name; aptr = s.find(""a""); ; # Construct a subset by name; subset1 = s.selectByName(""a,b,c""); ; # Construct asubset by attribute; subset2 = s.selectByAttrib(""Constant"", ROOT.kTRUE); ; # Construct the subset of overlapping contents with another set; s1 = ROOT.RooArgSet(a, b, c); s2 = ROOT.RooArgSet(c, d, e); subset3 = s1.selectCommon(s2); ; # Owning RooArgSets; # ---------------------------------; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf508__listsetmanip_8py.html:93,Guid,Guide,93,doc/master/rf508__listsetmanip_8py.html,https://root.cern,https://root.cern/doc/master/rf508__listsetmanip_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf509_wsinteractive.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf509_wsinteractive.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: easy interactive access to workspace contents - CINT to CLING code migration . ; using namespace RooFit;; ; void fillWorkspace(RooWorkspace &w);; ; void rf509_wsinteractive(); {; // C r e a t e a n d f i l l w o r k s p a c e; // ------------------------------------------------; ; // Create a workspace named 'w'; // With CINT w could exports its contents to; // a same-name C++ namespace in CINT 'namespace w'.; // but this does not work anymore in CLING.; // so this tutorial is an example on how to; // change the code; RooWorkspace *w1 = new RooWorkspace(""w"", true);; ; // Fill workspace with pdf and data in a separate function; fillWorkspace(*w1);; ; // Print workspace contents; w1->Print();; ; // this does not work anymore with CLING; // use normal workspace functionality; ; // U s e w o r k s p a c e c o n t e n t s; // ----------------------------------------------; ; // use normal workspace methods; RooAbsPdf *model = w1->pdf(""model"");; RooRealVar *x = w1->var(""x"");; ; std::unique_ptr<RooDataSet> d{ model->generate(*x, 1000)};; std::unique_ptr<RooFitResult> r{model->fitTo(*d, PrintLevel(-1))};; ; // old syntax to access the variable x; // RooPlot* frame = w::x.frame() ;; ; RooPlot *frame = x->frame();; d->plotOn(frame);; ; // OLD syntax to omit x::; // NB: The 'w::' prefix can be omitted if namespace w is imported in local namespace; // in the usual C++ way; //; // using namespace w;; // model.plotOn(frame) ;; // model.plotOn(frame,Components(bkg),LineStyle(kDashed)) ;; ; // new correct syntax; RooAbsPdf *bkg = w1->pdf(""bkg"");; model->plotOn(frame);; model->plotOn(frame, Components(*bkg), LineStyle(kDashed));; ; // Draw the frame on the canvas; new TCanvas(""rf509_wsinteractive"", ""rf509_wsinteractive"",",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf509__wsinteractive_8C.html:93,Guid,Guide,93,doc/master/rf509__wsinteractive_8C.html,https://root.cern,https://root.cern/doc/master/rf509__wsinteractive_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf509_wsinteractive.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf509_wsinteractive.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: easy interactive access to workspace contents - CINT to CLING code migration . ; import ROOT; ; ; def fillWorkspace(w):; # Create pdf and fill workspace; # --------------------------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5, 0, 10); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; w.Import(model); ; ; # Create and fill workspace; # ------------------------------------------------; ; ; # Create a workspace named 'w'; # With CINT w could exports its contents to; # a same-name C++ namespace in CINT 'namespace w'.; # but self does not work anymore in CLING.; # so self tutorial is an example on how to; # change the code; w = ROOT.RooWorkspace(""w"", True); ; # Fill workspace with pdf and da",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf509__wsinteractive_8py.html:94,Guid,Guide,94,doc/master/rf509__wsinteractive_8py.html,https://root.cern,https://root.cern/doc/master/rf509__wsinteractive_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf510_wsnamedsets.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf510_wsnamedsets.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: working with named parameter sets and parameter snapshots in workspaces . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooWorkspace.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TFile.h""; #include ""TH1.h""; ; using namespace RooFit;; ; void fillWorkspace(RooWorkspace &w);; ; void rf510_wsnamedsets(); {; // C r e a t e m o d e l a n d d a t a s e t; // -----------------------------------------------; ; RooWorkspace *w = new RooWorkspace(""w"");; fillWorkspace(*w);; ; // Exploit convention encoded in named set ""parameters"" and ""observables""; // to use workspace contents w/o need for introspected; RooAbsPdf *model = w->pdf(""model"");; ; // Generate data from pdf in given observables; std::unique_ptr<RooDataSet> data{model->generate(*w->set(""observables""), 1000)};; ; // Fit model to data; model->fitTo(*data, PrintLevel(-1));; ; // Plot fitted model and data on frame of first (only) observable; RooPlot *frame = ((RooRealVar *)w->set(""observables"")->first())->frame();; data->plotOn(frame);; model->plotOn(frame);; ; // Overlay plot with model with reference parameters as stored in snapshots; w->loadSnapshot(""reference_fit"");; model->plotOn(frame, LineColor(kRed));; w->loadSnapshot(""reference_fit_bkgonly"");; model->plotOn(frame, LineColor(kRed), LineStyle(kDashed));; ; // Draw the frame on the canvas; new TCanvas(""rf510_wsnamedsets"", ""rf503_wsnamedsets"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; ; // Print workspace contents; w->Print();; ; // Workspace will remain in memory after macro finishes; gDirectory->Add(w);; }; ; void fillWorkspace(R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf510__wsnamedsets_8C.html:91,Guid,Guide,91,doc/master/rf510__wsnamedsets_8C.html,https://root.cern,https://root.cern/doc/master/rf510__wsnamedsets_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf510_wsnamedsets.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf510_wsnamedsets.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ORGANIZATION AND SIMULTANEOUS FITS' RooFit tutorial macro #510 ; Working with named parameter sets and parameter snapshots in workspaces. ; ; import ROOT; ; ; def fillWorkspace(w):; # Create model; # -----------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5, 0, 10); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial p.d.f.; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal p.d.f.; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Import model into p.d.f.; w.Import(model); ; # Encode definition of parameters in workspace; # ---------------------------------------------------------------------------------------; ; # Define named sets ""parameters"" and ""observables"", list which variables should be considered; # parameters and observables by the users convention; #; # Variables appearing in sets _must_ live in the workspace already, the autoImport flag; # o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf510__wsnamedsets_8py.html:92,Guid,Guide,92,doc/master/rf510__wsnamedsets_8py.html,https://root.cern,https://root.cern/doc/master/rf510__wsnamedsets_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf511_wsfactory_basic.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf511_wsfactory_basic.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: basic use of the 'object factory' associated with a workspace to rapidly build pdfs functions and their parameter components ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooWorkspace.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; using namespace RooFit;; ; void rf511_wsfactory_basic(bool compact = false); {; RooWorkspace *w = new RooWorkspace(""w"");; ; // C r e a t i n g a n d a d d i n g b a s i c p . d . f . s; // ----------------------------------------------------------------; ; // Remake example pdf of tutorial rs502_wspacewrite.C:; //; // Basic pdf construction: ClassName::ObjectName(constructor arguments); // Variable construction : VarName[x,xlo,xhi], VarName[xlo,xhi], VarName[x]; // P.d.f. addition : SUM::ObjectName(coef1*pdf1,...coefM*pdfM,pdfN); //; ; if (!compact) {; ; // Use object factory to build pdf of tutorial rs502_wspacewrite; w->factory(""Gaussian::sig1(x[-10,10],mean[5,0,10],0.5)"");; w->factory(""Gaussian::sig2(x,mean,1)"");; w->factory(""Chebychev::bkg(x,{a0[0.5,0.,1],a1[0.2,0.,1.]})"");; w->factory(""SUM::sig(sig1frac[0.8,0.,1.]*sig1,sig2)"");; w->factory(""SUM::model(bkgfrac[0.5,0.,1.]*bkg,sig)"");; ; } else {; ; // Use object factory to build pdf of tutorial rs502_wspacewrite but; // - Contracted to a single line recursive expression,; // - Omitting explicit names for components that are not referred to explicitly later; ; w->factory(""SUM::model(bkgfrac[0.5,0.,1.]*Chebychev::bkg(x[-10,10],{a0[0.5,0.,1],a1[0.2,0.,1.]}),""; ""SUM(sig1frac[0.8,0.,1.]*Gaussian(x,mean[5,0,10],0.5), Gaussian(x,mean,1)))"");; }; ; // A d v a n c e d p . d . f . c o n s t r u c t o r a r g u m e n ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf511__wsfactory__basic_8C.html:95,Guid,Guide,95,doc/master/rf511__wsfactory__basic_8C.html,https://root.cern,https://root.cern/doc/master/rf511__wsfactory__basic_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf511_wsfactory_basic.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf511_wsfactory_basic.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: basic use of the 'object factory' associated with a workspace to rapidly build pdfs functions and their parameter components ; ; import ROOT; ; ; compact = False; w = ROOT.RooWorkspace(""w""); ; # Creating and adding basic pdfs; # ----------------------------------------------------------------; ; # Remake example pdf of tutorial rs502_wspacewrite.C:; #; # Basic pdf construction: ClassName.ObjectName(constructor arguments); # Variable construction : VarName[x,xlo,xhi], VarName[xlo,xhi], VarName[x]; # P.d.f. addition : SUM.ObjectName(coef1*pdf1,...coefM*pdfM,pdfN); #; ; if not compact:; # Use object factory to build pdf of tutorial rs502_wspacewrite; w.factory(""Gaussian::sig1(x[-10,10],mean[5,0,10],0.5)""); w.factory(""Gaussian::sig2(x,mean,1)""); w.factory(""Chebychev::bkg(x,{a0[0.5,0.,1],a1[-0.2,0.,1.]})""); w.factory(""SUM::sig(sig1frac[0.8,0.,1.]*sig1,sig2)""); w.factory(""SUM::model(bkgfrac[0.5,0.,1.]*bkg,sig)""); ; else:; ; # Use object factory to build pdf of tutorial rs502_wspacewrite but; # - Contracted to a single line recursive expression,; # - Omitting explicit names for components that are not referred to explicitly later; ; w.factory(; ""SUM::model(bkgfrac[0.5,0.,1.]*Chebychev::bkg(x[-10,10],{a0[0.5,0.,1],a1[-0.2,0.,1.]}), ""; ""SUM(sig1frac[0.8,0.,1.]*Gaussian(x,mean[5,0,10],0.5), Gaussian(x,mean,1)))""; ); ; # Advanced pdf constructor arguments; # ----------------------------------------------------------------; #; # P.d.f. constructor arguments may by any type of ROOT.RooAbsArg, also; #; # Double_t -. converted to ROOT.RooConst(...); # {a,b,c} -. converted to ROOT.RooArgSet() or ROOT.RooArgList() depending on required ctor arg; # dataset name -. converted to ROOT.RooAbsData reference ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf511__wsfactory__basic_8py.html:96,Guid,Guide,96,doc/master/rf511__wsfactory__basic_8py.html,https://root.cern,https://root.cern/doc/master/rf511__wsfactory__basic_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf512_wsfactory_oper.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf512_wsfactory_oper.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: operator expressions and expression-based basic pdfs in the workspace factory syntax ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooWorkspace.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; using namespace RooFit;; ; void rf512_wsfactory_oper(); {; RooWorkspace *w = new RooWorkspace(""w"");; ; // You can define typedefs for even shorter construction semantics; w->factory(""$Typedef(Gaussian,Gaus)"");; w->factory(""$Typedef(Chebychev,Cheby)"");; ; // O p e r a t o r p . d . f . e x a m p l e s; // ------------------------------------------------; ; // PDF addition is done with SUM (coef1*pdf1,pdf2); w->factory(""SUM::summodel( f[0,1]*Gaussian::gx(x[-10,10],m[0],1.0), Chebychev::ch(x,{0.1,0.2,-0.3}) )"");; ; // Extended PDF addition is done with SUM (yield1*pdf1,yield2*pdf2); w->factory(""SUM::extsummodel( Nsig[0,1000]*gx, Nbkg[0,1000]*ch )"");; ; // PDF multiplication is done with PROD ( pdf1, pdf2 ); w->factory(""PROD::gxz( gx, Gaussian::gz(z[-10,10],0,1) )"");; ; // Conditional pdf multiplication is done with PROD ( pdf1|obs, pdf2 ); w->factory(""Gaussian::gy( y[-10,10], x, 1.0 )"");; w->factory(""PROD::gxycond( gy|x, gx )"");; ; // Convolution (numeric/ fft) is done with NCONV/FCONV (obs,pdf1,pdf2); w->factory(""FCONV::lxg( x, Gaussian::g(x,mg[0],1), Landau::lc(x,0,1) )"");; ; // Simultaneous pdfs are constructed with SIMUL( index, state1=pdf1, state2=pdf2,...); w->factory(""SIMUL::smodel( c[A=0,B=1], A=Gaussian::gs(x,m,s[1.0, 0.01, 10.0]), B=Landau::ls(x,0,1) )"");; ; // O p e r a t o r f u n c t i o n e x a m p l e s; // ---------------------------------------------------; ; // Function multiplication i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf512__wsfactory__oper_8C.html:94,Guid,Guide,94,doc/master/rf512__wsfactory__oper_8C.html,https://root.cern,https://root.cern/doc/master/rf512__wsfactory__oper_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf512_wsfactory_oper.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf512_wsfactory_oper.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ORGANIZATION AND SIMULTANEOUS FITS' RooFit tutorial macro #512 ; Illustration of operator expressions and expression-based basic p.d.f.s in the workspace factory syntax; ; ; import ROOT; ; ; w = ROOT.RooWorkspace(""w""); ; # You can define typedefs for even shorter construction semantics; w.factory(""$Typedef(Gaussian,Gaus)""); w.factory(""$Typedef(Chebychev,Cheby)""); ; # Operator pdf examples; # ------------------------------------------------; ; # PDF addition is done with SUM (coef1*pdf1,pdf2); w.factory(""SUM::summodel( f[0,1]*Gaussian::gx(x[-10,10],m[0],1.0), Chebychev::ch(x,{0.1,0.2,-0.3}) )""); ; # Extended PDF addition is done with SUM (yield1*pdf1,yield2*pdf2); w.factory(""SUM::extsummodel( Nsig[0,1000]*gx, Nbkg[0,1000]*ch )""); ; # PDF multiplication is done with PROD ( pdf1, pdf2 ); w.factory(""PROD::gxz( gx, Gaussian::gz(z[-10,10],0,1) )""); ; # Conditional p.d.f multiplication is done with PROD ( pdf1|obs, pdf2 ); w.factory(""Gaussian::gy( y[-10,10], x, 1.0 )""); w.factory(""PROD::gxycond( gy|x, gx )""); ; # Convolution (numeric/ fft) is done with NCONV/FCONV (obs,pdf1,pdf2); w.factory(""FCONV::lxg( x, Gaussian::g(x,mg[0],1), Landau::lc(x,0,1) )""); ; # Simultaneous p.d.f.s are constructed with SIMUL( index, state1=pdf1,; # state2=pdf2,...); w.factory(""SIMUL::smodel( c[A=0,B=1], A=Gaussian::gs(x,m,s[1.0, 0.01, 10.0]), B=Landau::ls(x,0,1) )""); ; # Operator function examples; # ---------------------------------------------------; ; # Function multiplication is done with prod (func1, func2,...); w.factory(""prod::uv(u[10],v[10])""); ; # Function addition is done with sum(func1,func2); w.factory(""sum::uv2(u,v)""); ; # Lagrangian morphing function for the example shown in rf711_lagrangianmorph; infilename = ROOT.gROOT.GetTutorialDir(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf512__wsfactory__oper_8py.html:95,Guid,Guide,95,doc/master/rf512__wsfactory__oper_8py.html,https://root.cern,https://root.cern/doc/master/rf512__wsfactory__oper_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf513_wsfactory_tools.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf513_wsfactory_tools.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: RooCustomizer and RooSimWSTool interface in factory workspace tool in a complex standalone B physics example ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooWorkspace.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; using namespace RooFit;; ; void rf513_wsfactory_tools(); {; RooWorkspace *w = new RooWorkspace(""w"");; ; // B u i l d a c o m p l e x e x a m p l e p . d . f .; // -----------------------------------------------------------; ; // Make signal model for CPV: A bmixing decay function in t (convoluted with a triple Gaussian resolution model); // times a Gaussian function the reconstructed mass; w->factory(""PROD::sig( BMixDecay::sig_t( dt[-20,20], mixState[mixed=1,unmix=-1], tagFlav[B0=1,B0bar=-1], ""; ""tau[1.54], dm[0.472], w[0.05], dw[0],""; ""AddModel::gm({GaussModel(dt,biasC[-10,10],sigmaC[0.1,3],dterr[0.01,0.2]),""; ""GaussModel(dt,0,sigmaT[3,10]),""; ""GaussModel(dt,0,20)},{fracC[0,1],fracT[0,1]}),""; ""DoubleSided ),""; ""Gaussian::sig_m( mes[5.20,5.30], mB0[5.20,5.30], sigmB0[0.01,0.05] ))"");; ; // Make background component: A plain decay function in t times an Argus function in the reconstructed mass; w->factory(""PROD::bkg( Decay::bkg_t( dt, tau, gm, DoubleSided),""; ""ArgusBG::bkg_m( mes, 5.291, k[-100,-10]))"");; ; // Make composite model from the signal and background component; w->factory(""SUM::model( Nsig[5000,0,10000]*sig, NBkg[500,0,10000]*bkg )"");; ; // E x a m p l e o f R o o S i m W S T o o l i n t e r f a c e; // ------------------------------------------------------------------; ; // Introduce a flavour tagging category tagCat as observable with 4 states corresponding; // to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf513__wsfactory__tools_8C.html:95,Guid,Guide,95,doc/master/rf513__wsfactory__tools_8C.html,https://root.cern,https://root.cern/doc/master/rf513__wsfactory__tools_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf513_wsfactory_tools.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf513_wsfactory_tools.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: illustration use of ROOT.RooCustomizer and ROOT.RooSimWSTool interface in factory workspace tool in a complex standalone B physics example ; ; import ROOT; ; ; w = ROOT.RooWorkspace(""w""); ; # Build a complex example pdf; # -----------------------------------------------------------; ; # Make signal model for CPV: A bmixing decay function in t (convoluted with a triple Gaussian resolution model); # times a Gaussian function the reconstructed mass; w.factory(; ""PROD::sig( BMixDecay::sig_t( dt[-20,20], mixState[mixed=1,unmix=-1], tagFlav[B0=1,B0bar=-1], ""; ""tau[1.54], dm[0.472], w[0.05], dw[0], ""; ""AddModel::gm({GaussModel(dt,biasC[-10,10],sigmaC[0.1,3],dterr[0.01,0.2]), ""; ""GaussModel(dt,0,sigmaT[3,10]), ""; ""GaussModel(dt,0,20)},{fracC[0,1],fracT[0,1]}), ""; ""DoubleSided ), ""; ""Gaussian::sig_m( mes[5.20,5.30], mB0[5.20,5.30], sigmB0[0.01,0.05] ))""; ); ; # Make background component: A plain decay function in t times an Argus; # function in the reconstructed mass; w.factory(""PROD::bkg( Decay::bkg_t( dt, tau, gm, DoubleSided), "" ""ArgusBG::bkg_m( mes, 5.291, k[-100,-10]))""); ; # Make composite model from the signal and background component; w.factory(""SUM::model( Nsig[5000,0,10000]*sig, NBkg[500,0,10000]*bkg )""); ; # Example of RooSimWSTool interface; # ------------------------------------------------------------------; ; # Introduce a flavour tagging category tagCat as observable with 4 states corresponding; # to 4 flavour tagging techniques with different performance that require different; # parameterizations of the fit model; #; # ROOT.RooSimWSTool operation:; # - Make 4 clones of model (for each tagCat) state, will gain an individual; # copy of parameters w, and biasC. The other paramete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf513__wsfactory__tools_8py.html:96,Guid,Guide,96,doc/master/rf513__wsfactory__tools_8py.html,https://root.cern,https://root.cern/doc/master/rf513__wsfactory__tools_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf514_RooCustomizer.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf514_RooCustomizer.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Using the RooCustomizer to create multiple PDFs that share a lot of properties, but have unique parameters for each category. ; As an extra complication, some of the new parameters need to be functions of a mass parameter.; ; ; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""RooCustomizer.h""; #include ""RooCategory.h""; #include ""RooFormulaVar.h""; #include <iostream>; ; void rf514_RooCustomizer() {; ; // Define a proto model that will be used as the template for each category; // ---------------------------------------------------------------------------; ; RooRealVar E(""Energy"",""Energy"",0,3000);; ; RooRealVar meanG(""meanG"",""meanG"", 100., 0., 3000.);; RooRealVar sigmaG(""sigmaG"",""sigmaG"", 3.);; RooGaussian gauss(""gauss"", ""gauss"", E, meanG, sigmaG);; ; RooRealVar pol1(""pol1"", ""Constant of the polynomial"", 1, -10, 10);; RooPolynomial linear(""linear"", ""linear"", E, pol1);; ; RooRealVar yieldSig(""yieldSig"", ""yieldSig"", 1, 0, 1.E4);; RooRealVar yieldBkg(""yieldBkg"", ""yieldBkg"", 1, 0, 1.E4);; ; RooAddPdf model(""model"", ""S + B model"",; RooArgList(gauss,linear),; RooArgList(yieldSig, yieldBkg));; ; std::cout << ""The proto model before customisation:"" << std::endl;; model.Print(""T""); // ""T"" prints the model as a tree; ; ; // Build the categories; RooCategory sample(""sample"",""sample"");; sample[""Sample1""] = 1;; sample[""Sample2""] = 2;; sample[""Sample3""] = 3;; ; ; // Start to customise the proto model that was defined above.; // ---------------------------------------------------------------------------; ; // We need two sets for bookkeeping of PDF nodes:; RooArgSet newLeaves; // This set collects leaves that are created in the process.; RooArgSet allCustomiserNodes; // This set lists leaves t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf514__RooCustomizer_8C.html:93,Guid,Guide,93,doc/master/rf514__RooCustomizer_8C.html,https://root.cern,https://root.cern/doc/master/rf514__RooCustomizer_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf514_RooCustomizer.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf514_RooCustomizer.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Using the RooCustomizer to create multiple PDFs that share a lot of properties, but have unique parameters for each category. ; As an extra complication, some of the new parameters need to be functions of a mass parameter.; ; import ROOT; ; E = ROOT.RooRealVar(""Energy"", ""Energy"", 0, 3000); ; meanG = ROOT.RooRealVar(""meanG"", ""meanG"", 100.0, 0.0, 3000.0); sigmaG = ROOT.RooRealVar(""sigmaG"", ""sigmaG"", 3.0); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", E, meanG, sigmaG); ; pol1 = ROOT.RooRealVar(""pol1"", ""Constant of the polynomial"", 1, -10, 10); linear = ROOT.RooPolynomial(""linear"", ""linear"", E, pol1); ; yieldSig = ROOT.RooRealVar(""yieldSig"", ""yieldSig"", 1, 0, 1.0e4); yieldBkg = ROOT.RooRealVar(""yieldBkg"", ""yieldBkg"", 1, 0, 1.0e4); ; model = ROOT.RooAddPdf(""model"", ""S + B model"", [gauss, linear], [yieldSig, yieldBkg]); ; print(""The proto model before customisation:\n""); model.Print(""T"") # ""T"" prints the model as a tree; ; ; # Build the categories; sample = ROOT.RooCategory(""sample"", ""sample"", {""Sample1"": 1, ""Sample2"": 2, ""Sample3"": 3}); ; ; # Start to customise the proto model that was defined above.; # ---------------------------------------------------------------------------; ; # We need two sets for bookkeeping of PDF nodes:; newLeaves = ROOT.RooArgSet(); allCustomiserNodes = ROOT.RooArgSet(); ; ; # 1. Each sample should have its own mean for the gaussian; # The customiser will make copies of `meanG` for each category.; # These will all appear in the set `newLeaves`, which will own the new nodes.; cust = ROOT.RooCustomizer(model, sample, newLeaves, allCustomiserNodes); cust.splitArg(meanG, sample); ; ; # 2. Each sample should have its own signal yield, but there is an extra complication:; # We need the yields 1 and 2 to be a fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf514__RooCustomizer_8py.html:94,Guid,Guide,94,doc/master/rf514__RooCustomizer_8py.html,https://root.cern,https://root.cern/doc/master/rf514__RooCustomizer_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf515_hfJSON.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf515_hfJSON.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Code HistFactory Models in JSON. ; With the HS3 standard, it is possible to code RooFit-Models of any kind as JSON files. In this tutorial, you can see how to code up a (simple) HistFactory-based model in JSON and import it into a RooWorkspace.; ; import ROOT; ; # start by creating an empty workspace; ws = ROOT.RooWorkspace(""workspace""); ; # the RooJSONFactoryWSTool is responsible for importing and exporting things to and from your workspace; tool = ROOT.RooJSONFactoryWSTool(ws); ; # use it to import the information from your JSON file; tool.importJSON(ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf515_hfJSON.json""); ws.Print(); ; # now, you can easily use your workspace to run your fit (as you usually would); # the model config is named after your pdf, i.e. <the pdf name>_modelConfig; model = ws[""ModelConfig""]; ; # for resetting the parameters after the fit; params = model.GetPdf().getParameters(ws[""observed""]); ROOT.SetOwnership(params, True); params_initial = params.snapshot(); ROOT.SetOwnership(params_initial, True); ; # we are fitting a clone of the model now,; result = model.fitTo(ws[""observed""], ROOT.RooFit.Save(), ROOT.RooFit.PrintLevel(-1)); ROOT.SetOwnership(result, True); result.Print(); # reset parameters, such that we are not double-fitting the model in the; # closure check.; params.assign(params_initial); ; # in the end, you can again write to json; # the result will be not completely identical to the JSON file you used as an input, but it will work just the same; tool.exportJSON(""myWorkspace.json""); ; # You can again import it if you want and check for closure; ws_2 = ROOT.RooWorkspace(""workspace""); tool_2 = ROOT.RooJSONFactoryWSTool(ws_2); tool_2.importJSON(""myWorkspace.json""); ws_2.Print(); model_2 = ws_2[""ModelConfig""];",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf515__hfJSON_8py.html:87,Guid,Guide,87,doc/master/rf515__hfJSON_8py.html,https://root.cern,https://root.cern/doc/master/rf515__hfJSON_8py.html,2,"['Guid', 'simpl']","['Guide', 'simple']"
Usability,". ROOT: tutorials/roofit/rf601_intminuit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf601_intminuit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: interactive minimization with MINUIT . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooAddPdf.h""; #include ""RooMinimizer.h""; #include ""RooFitResult.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf601_intminuit(); {; // S e t u p p d f a n d l i k e l i h o o d; // -----------------------------------------------; ; // Observable; RooRealVar x(""x"", ""x"", -20, 20);; ; // Model (intentional strong correlations); RooRealVar mean(""mean"", ""mean of g1 and g2"", 0);; RooRealVar sigma_g1(""sigma_g1"", ""width of g1"", 3);; RooGaussian g1(""g1"", ""g1"", x, mean, sigma_g1);; ; RooRealVar sigma_g2(""sigma_g2"", ""width of g2"", 4, 3.0, 6.0);; RooGaussian g2(""g2"", ""g2"", x, mean, sigma_g2);; ; RooRealVar frac(""frac"", ""frac"", 0.5, 0.0, 1.0);; RooAddPdf model(""model"", ""model"", RooArgList(g1, g2), frac);; ; // Generate 1000 events; std::unique_ptr<RooDataSet> data{model.generate(x, 1000)};; ; // Construct unbinned likelihood of model w.r.t. data; std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};; ; // I n t e r a c t i v e m i n i m i z a t i o n , e r r o r a n a l y s i s; // -------------------------------------------------------------------------------; ; // Create MINUIT interface object; RooMinimizer m(*nll);; ; // Activate verbose logging of MINUIT parameter space stepping; m.setVerbose(true);; ; // Call MIGRAD to minimize the likelihood; m.migrad();; ; // Print values of all parameters, that reflect values (and error estimates); // that are back propagated from MINUIT; std::unique_ptr<RooArgSet>{model.getParameters(x)}->Print(""s"");; ; // Disable verbose logging; m.setVerbose(false);; ; // Run HESS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf601__intminuit_8C.html:89,Guid,Guide,89,doc/master/rf601__intminuit_8C.html,https://root.cern,https://root.cern/doc/master/rf601__intminuit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf601_intminuit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf601_intminuit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'LIKELIHOOD AND MINIMIZATION' RooFit tutorial macro #601 ; Interactive minimization with MINUIT. ; ; import ROOT; ; ; # Setup pdf and likelihood; # -----------------------------------------------; ; # Observable; x = ROOT.RooRealVar(""x"", ""x"", -20, 20); ; # Model (intentional strong correlations); mean = ROOT.RooRealVar(""mean"", ""mean of g1 and g2"", 0); sigma_g1 = ROOT.RooRealVar(""sigma_g1"", ""width of g1"", 3); g1 = ROOT.RooGaussian(""g1"", ""g1"", x, mean, sigma_g1); ; sigma_g2 = ROOT.RooRealVar(""sigma_g2"", ""width of g2"", 4, 3.0, 6.0); g2 = ROOT.RooGaussian(""g2"", ""g2"", x, mean, sigma_g2); ; frac = ROOT.RooRealVar(""frac"", ""frac"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [g1, g2], [frac]); ; # Generate 1000 events; data = model.generate({x}, 1000); ; # Construct unbinned likelihood of model w.r.t. data; nll = model.createNLL(data); ; # Interactive minimization, error analysis; # -------------------------------------------------------------------------------; ; # Create MINUIT interface object; m = ROOT.RooMinimizer(nll); ; # Activate verbose logging of MINUIT parameter space stepping; m.setVerbose(True); ; # Call MIGRAD to minimize the likelihood; m.migrad(); ; # Print values of all parameters, reflect values (and error estimates); # that are back propagated from MINUIT; model.getParameters({x}).Print(""s""); ; # Disable verbose logging; m.setVerbose(False); ; # Run HESSE to calculate errors from d2L/dp2; m.hesse(); ; # Print value (and error) of sigma_g2 parameter, reflects; # value and error back propagated from MINUIT; sigma_g2.Print(); ; # Run MINOS on sigma_g2 parameter only; m.minos({sigma_g2}); ; # Print value (and error) of sigma_g2 parameter, reflects; # value and error back propagated from MINUIT; sigma_g2.Print(); ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf601__intminuit_8py.html:90,Guid,Guide,90,doc/master/rf601__intminuit_8py.html,https://root.cern,https://root.cern/doc/master/rf601__intminuit_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf602_chi2fit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf602_chi2fit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: setting up a chi^2 fit to a binned dataset ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf602_chi2fit(); {; ; // S e t u p m o d e l; // ---------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; ; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg(""bkg"", ""Background"", x, RooArgSet(a0, a1));; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // C r e a t e b i n n e d d a t a s e t; // -----------------------------------------; ; std::unique_ptr<RooDataSet> d{model.generate(x, 10000)};; std::unique_ptr<RooDataHist> dh{d->binnedClone()};; ; // Construct a chi^2 of the data and the model.; // When a pdf is used in a chi^2 fit, the probability density scaled; // by the number of events in the dataset to obtain the fit fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf602__chi2fit_8C.html:87,Guid,Guide,87,doc/master/rf602__chi2fit_8C.html,https://root.cern,https://root.cern/doc/master/rf602__chi2fit_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf602_chi2fit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf602_chi2fit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'LIKELIHOOD AND MINIMIZATION' RooFit tutorial macro #602 ; Setting up a chi^2 fit to a binned dataset; ; from __future__ import print_function; import ROOT; ; ; # Set up model; # ---------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial p.d.f.; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal p.d.f.; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Create biuned dataset; # -----------------------------------------; ; d = model.generate({x}, 10000); dh = d.binnedClone(); ; # Construct a chi^2 of the data and the model.; # When a p.d.f. is used in a chi^2 fit, probability density scaled; # by the number of events in the dataset to obtain the fit function; # If model is an extended p.d.f, expected number events is used; # instead of the observed number of events.; ll = ROOT.RooLinkedList(); model.chi2FitTo(dh, ll",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf602__chi2fit_8py.html:88,Guid,Guide,88,doc/master/rf602__chi2fit_8py.html,https://root.cern,https://root.cern/doc/master/rf602__chi2fit_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf603_multicpu.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf603_multicpu.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: setting up a multi-core parallelized unbinned maximum likelihood fit . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf603_multicpu(); {; ; // C r e a t e 3 D p d f a n d d a t a; // -------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; RooRealVar z(""z"", ""z"", -5, 5);; ; // Create signal pdf gauss(x)*gauss(y)*gauss(z); RooGaussian gx(""gx"", ""gx"", x, 0.0, 1.0);; RooGaussian gy(""gy"", ""gy"", y, 0.0, 1.0);; RooGaussian gz(""gz"", ""gz"", z, 0.0, 1.0);; RooProdPdf sig(""sig"", ""sig"", RooArgSet(gx, gy, gz));; ; // Create background pdf poly(x)*poly(y)*poly(z); RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));; RooPolynomial py(""py"", ""py"", y, RooArgSet(0.1, -0.004));; RooPolynomial pz(""pz"", ""pz"", z);; RooProdPdf bkg(""bkg"", ""bkg"", RooArgSet(px, py, pz));; ; // Create composite pdf sig+bkg; RooRealVar fsig(""fsig"", ""signal fraction"", 0.1, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), fsig);; ; // Generate large dataset; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 200000)};; ; // P a r a l l e l f i t t i n g; // -------------------------------; ; // In parallel mode the likelihood calculation is split in N pieces,; // that are calculated in parallel and added a posteriori before passing; // it back to MINUIT.; ; // Use four processes and time results both in wall time and CPU time; model.fitTo(*data, NumCPU(4), Timer(true), PrintLevel(-1));; ; // P a r a l l e l M C p r o j e c t i o n s; // ---------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf603__multicpu_8C.html:88,Guid,Guide,88,doc/master/rf603__multicpu_8C.html,https://root.cern,https://root.cern/doc/master/rf603__multicpu_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf603_multicpu.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf603_multicpu.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: setting up a multi-core parallelized unbinned maximum likelihood fit . ; import ROOT; ; ; # Create 3D pdf and data; # -------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); z = ROOT.RooRealVar(""z"", ""z"", -5, 5); ; # Create signal pdf gauss(x)*gauss(y)*gauss(z); gx = ROOT.RooGaussian(""gx"", ""gx"", x, 0.0, 1.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, 0.0, 1.0); gz = ROOT.RooGaussian(""gz"", ""gz"", z, 0.0, 1.0); sig = ROOT.RooProdPdf(""sig"", ""sig"", [gx, gy, gz]); ; # Create background pdf poly(x)*poly(y)*poly(z); px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.1, -0.004]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", [px, py, pz]); ; # Create composite pdf sig+bkg; fsig = ROOT.RooRealVar(""fsig"", ""signal fraction"", 0.1, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [fsig]); ; # Generate large dataset; data = model.generate({x, y, z}, 200000); ; # Parallel fitting; # -------------------------------; ; # In parallel mode the likelihood calculation is split in N pieces,; # that are calculated in parallel and added a posteriori before passing; # it back to MINUIT.; ; # Use four processes and time results both in wall time and CPU time; model.fitTo(data, NumCPU=4, Timer=True, PrintLevel=-1); ; # Parallel MC projections; # ----------------------------------------------; ; # Construct signal, likelihood projection on (y,z) observables and; # likelihood ratio; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); llratio_func = ROOT.RooFormulaVar(""llratio"", ""log10(@0)-log10(@1)"", [sigyz, totyz]); ; # Calculate likelihood rat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf603__multicpu_8py.html:89,Guid,Guide,89,doc/master/rf603__multicpu_8py.html,https://root.cern,https://root.cern/doc/master/rf603__multicpu_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf604_constraints.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf604_constraints.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: fitting with constraints ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""RooProdPdf.h""; #include ""RooFitResult.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf604_constraints(); {; ; // C r e a t e m o d e l a n d d a t a s e t; // ----------------------------------------------; ; // Construct a Gaussian pdf; RooRealVar x(""x"", ""x"", -10, 10);; ; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 2, 0.1, 10);; RooGaussian gauss(""gauss"", ""gauss(x,m,s)"", x, m, s);; ; // Construct a flat pdf (polynomial of 0th order); RooPolynomial poly(""poly"", ""poly(x)"", x);; ; // Construct model = f*gauss + (1-f)*poly; RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // Generate small dataset for use in fitting below; std::unique_ptr<RooDataSet> d{model.generate(x, 50)};; ; // C r e a t e c o n s t r a i n t p d f; // -----------------------------------------; ; // Construct Gaussian constraint pdf on parameter f at 0.8 with resolution of 0.1; RooGaussian fconstraint(""fconstraint"", ""fconstraint"", f, 0.8, 0.2);; ; // M E T H O D 1 - A d d i n t e r n a l c o n s t r a i n t t o m o d e l; // -------------------------------------------------------------------------------------; ; // Multiply constraint term with regular pdf using RooProdPdf; // Specify in fitTo() that internal constraints on parameter f should be used; ; // Multiply constraint with pdf; RooProdPdf modelc(""modelc"", ""model with constraint"", RooArgSet(model, fconstraint));; ; // Fit model (without use of constraint term); std::unique_ptr<RooFitResu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf604__constraints_8C.html:91,Guid,Guide,91,doc/master/rf604__constraints_8C.html,https://root.cern,https://root.cern/doc/master/rf604__constraints_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf604_constraints.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf604_constraints.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: fitting with constraints ; ; from __future__ import print_function; import ROOT; ; ; # Create model and dataset; # ----------------------------------------------; ; # Construct a Gaussian pdf; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; m = ROOT.RooRealVar(""m"", ""m"", 0, -10, 10); s = ROOT.RooRealVar(""s"", ""s"", 2, 0.1, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss(x,m,s)"", x, m, s); ; # Construct a flat pdf (polynomial of 0th order); poly = ROOT.RooPolynomial(""poly"", ""poly(x)"", x); ; # model = f*gauss + (1-f)*poly; f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Generate small dataset for use in fitting below; d = model.generate({x}, 50); ; # Create constraint pdf; # -----------------------------------------; ; # Construct Gaussian constraint pdf on parameter f at 0.8 with; # resolution of 0.1; fconstraint = ROOT.RooGaussian(""fconstraint"", ""fconstraint"", f, 0.8, 0.1); ; # Method 1 - add internal constraint to model; # -------------------------------------------------------------------------------------; ; # Multiply constraint term with regular pdf using ROOT.RooProdPdf Specify in; # fitTo() that internal constraints on parameter f should be used; ; # Multiply constraint with pdf; modelc = ROOT.RooProdPdf(""modelc"", ""model with constraint"", [model, fconstraint]); ; # Fit model (without use of constraint term); r1 = model.fitTo(d, Save=True, PrintLevel=-1); ; # Fit modelc with constraint term on parameter f; r2 = modelc.fitTo(d, Constrain={f}, Save=True, PrintLevel=-1); ; # Method 2 - specify external constraint when fitting; # ------------------------------------------------------------------------------------------; ; # Construct another Gaus",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf604__constraints_8py.html:92,Guid,Guide,92,doc/master/rf604__constraints_8py.html,https://root.cern,https://root.cern/doc/master/rf604__constraints_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf605_profilell.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf605_profilell.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: working with the profile likelihood estimator . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooMinimizer.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf605_profilell(); {; // C r e a t e m o d e l a n d d a t a s e t; // -----------------------------------------------; ; // Observable; RooRealVar x(""x"", ""x"", -20, 20);; ; // Model (intentional strong correlations); RooRealVar mean(""mean"", ""mean of g1 and g2"", 0, -10, 10);; RooRealVar sigma_g1(""sigma_g1"", ""width of g1"", 3);; RooGaussian g1(""g1"", ""g1"", x, mean, sigma_g1);; ; RooRealVar sigma_g2(""sigma_g2"", ""width of g2"", 4, 3.0, 6.0);; RooGaussian g2(""g2"", ""g2"", x, mean, sigma_g2);; ; RooRealVar frac(""frac"", ""frac"", 0.5, 0.0, 1.0);; RooAddPdf model(""model"", ""model"", RooArgList(g1, g2), frac);; ; // Generate 1000 events; std::unique_ptr<RooDataSet> data{model.generate(x, 1000)};; ; // C o n s t r u c t p l a i n l i k e l i h o o d; // ---------------------------------------------------; ; // Construct unbinned likelihood; std::unique_ptr<RooAbsReal> nll{model.createNLL(*data, NumCPU(2))};; ; // Minimize likelihood w.r.t all parameters before making plots; RooMinimizer(*nll).migrad();; ; // Plot likelihood scan frac; RooPlot *frame1 = frac.frame(Bins(10), Range(0.01, 0.95), Title(""LL and profileLL in frac""));; nll->plotOn(frame1, ShiftToZero());; ; // Plot likelihood scan in sigma_g2; RooPlot *frame2 = sigma_g2.frame(Bins(10), Range(3.3, 5.0), Title(""LL and profileLL in sigma_g2""));; nll->plotOn(frame2, ShiftToZero());; ; // C o n s t r u c t p r o f i l e l i k e l i h o o d i n f r a c; // -------------------------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf605__profilell_8C.html:89,Guid,Guide,89,doc/master/rf605__profilell_8C.html,https://root.cern,https://root.cern/doc/master/rf605__profilell_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf605_profilell.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf605_profilell.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'LIKELIHOOD AND MINIMIZATION' RooFit tutorial macro #605 ; Working with the profile likelihood estimator. ; ; import ROOT; ; ; # Create model and dataset; # -----------------------------------------------; ; # Observable; x = ROOT.RooRealVar(""x"", ""x"", -20, 20); ; # Model (intentional strong correlations); mean = ROOT.RooRealVar(""mean"", ""mean of g1 and g2"", 0, -10, 10); sigma_g1 = ROOT.RooRealVar(""sigma_g1"", ""width of g1"", 3); g1 = ROOT.RooGaussian(""g1"", ""g1"", x, mean, sigma_g1); ; sigma_g2 = ROOT.RooRealVar(""sigma_g2"", ""width of g2"", 4, 3.0, 6.0); g2 = ROOT.RooGaussian(""g2"", ""g2"", x, mean, sigma_g2); ; frac = ROOT.RooRealVar(""frac"", ""frac"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [g1, g2], [frac]); ; # Generate 1000 events; data = model.generate({x}, 1000); ; # Construct plain likelihood; # ---------------------------------------------------; ; # Construct unbinned likelihood; nll = model.createNLL(data, NumCPU=2); ; # Minimize likelihood w.r.t all parameters before making plots; ROOT.RooMinimizer(nll).migrad(); ; # Plot likelihood scan frac; frame1 = frac.frame(Bins=10, Range=(0.01, 0.95), Title=""LL and profileLL in frac""); nll.plotOn(frame1, ShiftToZero=True); ; # Plot likelihood scan in sigma_g2; frame2 = sigma_g2.frame(Bins=10, Range=(3.3, 5.0), Title=""LL and profileLL in sigma_g2""); nll.plotOn(frame2, ShiftToZero=True); ; # Construct profile likelihood in frac; # -----------------------------------------------------------------------; ; # The profile likelihood estimator on nll for frac will minimize nll w.r.t; # all floating parameters except frac for each evaluation; ; pll_frac = nll.createProfile({frac}); ; # Plot the profile likelihood in frac; pll_frac.plotOn(frame1, LineColor=""r""); ; # Adjust frame maximu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf605__profilell_8py.html:90,Guid,Guide,90,doc/master/rf605__profilell_8py.html,https://root.cern,https://root.cern/doc/master/rf605__profilell_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf606_nllerrorhandling.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf606_nllerrorhandling.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: understanding and customizing error handling in likelihood evaluations . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooArgusBG.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf606_nllerrorhandling(); {; // C r e a t e m o d e l a n d d a t a s e t; // ----------------------------------------------; ; // Observable; RooRealVar m(""m"", ""m"", 5.20, 5.30);; ; // Parameters; RooRealVar m0(""m0"", ""m0"", 5.291, 5.20, 5.30);; RooRealVar k(""k"", ""k"", -30, -50, -10);; ; // Pdf; RooArgusBG argus(""argus"", ""argus"", m, m0, k);; ; // Sample 1000 events in m from argus; std::unique_ptr<RooDataSet> data{argus.generate(m, 1000)};; ; // P l o t m o d e l a n d d a t a; // --------------------------------------; ; RooPlot *frame1 = m.frame(Bins(40), Title(""Argus model and data""));; data->plotOn(frame1);; argus.plotOn(frame1);; ; // F i t m o d e l t o d a t a; // ---------------------------------; ; // The ARGUS background shape has a sharp kinematic cutoff at m=m0; // and is prone to evaluation errors if the cutoff parameter m0; // is floated: when the pdf cutoff value is lower than that in data; // events with m>m0 will have zero probability; ; // Perform unbinned ML fit. Print detailed error messages for up to; // 10 events per likelihood evaluation. The default error handling strategy; // is to return a very high value of the likelihood to MINUIT if errors occur,; // which will force MINUIT to retreat from the problematic area; ; argus.fitTo(*data, PrintEvalErrors(10));; ; // Perform another fit. In this configuration only the number of errors per; // likelihood evaluation is shown, if it is greater than zero. The; // EvalErrorWall(false) arguments disabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:96,Guid,Guide,96,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf606_nllerrorhandling.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf606_nllerrorhandling.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'LIKELIHOOD AND MINIMIZATION' RooFit tutorial macro #606 ; Understanding and customizing error handling in likelihood evaluations. ; ; import ROOT; ; ; # Create model and dataset; # ----------------------------------------------; ; # Observable; m = ROOT.RooRealVar(""m"", ""m"", 5.20, 5.30); ; # Parameters; m0 = ROOT.RooRealVar(""m0"", ""m0"", 5.291, 5.20, 5.30); k = ROOT.RooRealVar(""k"", ""k"", -30, -50, -10); ; # Pdf; argus = ROOT.RooArgusBG(""argus"", ""argus"", m, m0, k); ; # Sample 1000 events in m from argus; data = argus.generate({m}, 1000); ; # Plot model and data; # --------------------------------------; ; frame1 = m.frame(Bins=40, Title=""Argus model and data""); data.plotOn(frame1); argus.plotOn(frame1); ; # Fit model to data; # ---------------------------------; ; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; ; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area; ; argus.fitTo(data, PrintEvalErrors=10); ; # Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8py.html:97,Guid,Guide,97,doc/master/rf606__nllerrorhandling_8py.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf607_fitresult.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf607_fitresult.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: demonstration of options of the RooFitResult class . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooChebychev.h""; #include ""RooFitResult.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TFile.h""; #include ""TStyle.h""; #include ""TH2.h""; #include ""TMatrixDSym.h""; ; using namespace RooFit;; ; void rf607_fitresult(); {; // C r e a t e p d f , d a t a; // --------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5, -10, 10);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5, 0.1, 10);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1, 0.1, 10);; ; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", -0.2);; RooChebychev bkg(""bkg"", ""Background"", x, RooArgSet(a0, a1));; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // Generate 1000 events; std::unique_ptr<RooDataSet> data{model.generate(x, 1000)};; ; // F i t p d f t o d a t a , s a v e f i t r e s u l t; // -------------------------------------------------------------; ; // Perf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf607__fitresult_8C.html:89,Guid,Guide,89,doc/master/rf607__fitresult_8C.html,https://root.cern,https://root.cern/doc/master/rf607__fitresult_8C.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf607_fitresult.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf607_fitresult.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: demonstration of options of the RooFitResult class . ; from __future__ import print_function; import ROOT; ; ; # Create pdf, data; # --------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5, -10, 10); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5, 0.1, 10); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1, 0.1, 10); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Generate 1000 events; data = model.generate({x}, 1000); ; # Fit pdf to data, save fit result; # -------------------------------------------------------------; ; # Perform fit and save result; r = model.fitTo(data, Save=True, PrintLevel=-1); ; # Print fit results; # ---------------------------------; ; # Summary printing: Basic info plus final values of floating fit parameters; r.Print(); ; # Verbose printing: Basic info, of constant parameters, and; # fina",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf607__fitresult_8py.html:90,Guid,Guide,90,doc/master/rf607__fitresult_8py.html,https://root.cern,https://root.cern/doc/master/rf607__fitresult_8py.html,1,['Guid'],['Guide']
Usability,". ROOT: tutorials/roofit/rf608_fitresultaspdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf608_fitresultaspdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Likelihood and minimization: representing the parabolic approximation of the fit as a multi-variate Gaussian on the parameters of the fitted pdf . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooChebychev.h""; #include ""RooFitResult.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TFile.h""; #include ""TStyle.h""; #include ""TH2.h""; #include ""TH3.h""; ; using namespace RooFit;; ; void rf608_fitresultaspdf(); {; // C r e a t e m o d e l a n d d a t a s e t; // -----------------------------------------------; ; // Observable; RooRealVar x(""x"", ""x"", -20, 20);; ; // Model (intentional strong correlations); RooRealVar mean(""mean"", ""mean of g1 and g2"", 0, -1, 1);; RooRealVar sigma_g1(""sigma_g1"", ""width of g1"", 2);; RooGaussian g1(""g1"", ""g1"", x, mean, sigma_g1);; ; RooRealVar sigma_g2(""sigma_g2"", ""width of g2"", 4, 3.0, 5.0);; RooGaussian g2(""g2"", ""g2"", x, mean, sigma_g2);; ; RooRealVar frac(""frac"", ""frac"", 0.5, 0.0, 1.0);; RooAddPdf model(""model"", ""model"", RooArgList(g1, g2), frac);; ; // Generate 1000 events; std::unique_ptr<RooDataSet> data{model.generate(x, 1000)};; ; // F i t m o d e l t o d a t a; // ----------------------------------; ; std::unique_ptr<RooFitResult> r{model.fitTo(*data, Save(), PrintLevel(-1))};; ; // C r e a t e M V G a u s s i a n p d f o f f i t t e d p a r a m e t e r s; // ------------------------------------------------------------------------------------; ; RooAbsPdf *parabPdf = r->createHessePdf(RooArgSet(frac, mean, sigma_g2));; ; // S o m e e x e c e r c i s e s w i t h t h e p a r a m e t e r p d f; // -----------------------------------------------------------------------------; ; // Generate 100K points in the parameter ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf608__fitresultaspdf_8C.html:94,Guid,Guide,94,doc/master/rf608__fitresultaspdf_8C.html,https://root.cern,https://root.cern/doc/master/rf608__fitresultaspdf_8C.html,1,['Guid'],['Guide']
