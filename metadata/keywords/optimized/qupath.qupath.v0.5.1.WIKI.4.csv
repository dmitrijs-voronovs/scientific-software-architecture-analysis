quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"nnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathInteractivePlugin<T>; extends PathPlugin<T>; Interface to define a PathPlugin that requires a list of (user-adjustable) parameters.; ; By using this interface, QuPath is able to show a standardized dialog box within which ; the parameters are set. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Method Details. getDefaultParameterList; ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList.; ; Each time the method is invoked, a new ParameterList should be created. Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. alwaysPromptForObjects; boolean alwaysPromptForObjects(); If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html:2051,interface,interface,2051,javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,1,['interface'],['interface']
Integrability,"notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value under getLastDirectory() should be used; Returns:; selected directory, or null if no directory was selected. promptForDirectory; public static File promptForDirectory(String title,; File dirBase); Depre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10757,message,message,10757,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"notifyAll, toString, wait, wait, wait. Constructor Details. MoveToolEventHandler; public MoveToolEventHandler(). Method Details. mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html:3660,depend,depend,3660,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,1,['depend'],['depend']
Integrability,"notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:4468,wrap,wrapTextProperty,4468,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['wrap'],['wrapTextProperty']
Integrability,"ns the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10655,interface,interface,10655,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"ns to paint on this overlay. getRegionRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the region request. getRegionRequest() - Method in class qupath.lib.images.servers.TileRequest. Get the RegionRequest that this tile represents. getRegions() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Get an unmodifiable collection for all available regions. getRelativePathOrNull(String) - Method in class qupath.lib.gui.UserDirectoryManager;  ; getRenderer() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageRenderer used with this overlay, which may be null. getRenderer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request a renderer that converts image tiles into RGB images. getReplacements() - Method in class qupath.lib.io.UriUpdater. Get a map of all replacements. getRepo() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the repo. getRepository() - Method in interface qupath.lib.gui.extensions.GitHubProject. Get the GitHub repository associated with the project. getRepresentedPathClasses(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:498631,interface,interface,498631,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ns.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anyth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:3401,interface,interface,3401,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['interface'],['interface']
Integrability,"ns.menus.FileMenuActions.Actions;  ; reloadImageData(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Reload the specified image data from a previously saved version,if available. remove(String) - Method in interface qupath.lib.measurements.MeasurementList. Remove a named measurement. remove(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Remove a resource within the project. REMOVE_COLUMN - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; REMOVE_FRAGMENTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; REMOVE_ROW - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeActions - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RemoveActions() - Constructor for class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeAllImages(Collection<ProjectImageEntry<T>>, boolean) - Method in interface qupath.lib.projects.Project. Remove multiple images from the project, optionally including associated data. removeByAreas(ByteProcessor, double, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects containing < minPixels or > maxPixels. removeChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Remove a single object from the child list of this object. removeChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Remove multiple objects from the child list of this object. removeColumn(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Try to remove the column containing the specified viewer, notifying the user if this isn't possible. REMOVED - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. An object has been removed. removeEmptyParameters() - Method in class qupath.lib.pl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:843552,interface,interface,843552,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ns:. addRow; public void addRow(QuPathViewer viewer). addColumn; public void addColumn(QuPathViewer viewer). splitViewer; public void splitViewer(QuPathViewer viewer,; boolean splitVertical). resetGridSize; public void resetGridSize(). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10303,interface,interface,10303,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"ns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:9319,interface,interface,9319,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"ns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:4328,interface,interface,4328,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability,"nsions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:4290,interface,interface,4290,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"nt objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2825,interface,interface,2825,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"nt. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; getROI() - Method in class qupath.lib.roi.RoiEditor. Retrieve the ROI currently being edited (may be null). getROI(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:501760,interface,interfaces,501760,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"ntItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freely afterwards.; . Parameters:; stage - ; proportion - ; See Also:. showWithSizeConstraints(Stage, double, double). showWithSizeConstraints; public static void showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight); Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:16307,message,messages,16307,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['message'],['messages']
Integrability,"ntROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8772,interface,interface,8772,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ntage to scale scroll speed for zooming etc. static BooleanProperty; selectionMode. Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptions. Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitle. Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptions. Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDs. Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessage. Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptions. Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coord",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:7760,message,message,7760,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['message'],['message']
Integrability,"ntation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6963,interface,interface,6963,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ntensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:101541,depend,depending,101541,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability,"nterface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample value supported by this viewer. getMinFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute minimum features from all four rotations. getMinor() - Method in class qupath.lib.common.Version. Get the minor version number (0.X.0). getMinSizeForTiling() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:443512,interface,interface,443512,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"nterface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:5141,interface,interface,5141,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"nterface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDescription; public String getDescription(); Description copied from i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:3620,interface,interface,3620,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['interface'],['interface']
Integrability,"nterface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<BufferedImage>; Overrides:; alwaysPromptForObjects in class AbstractInteractivePlugin<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:6328,interface,interface,6328,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,3,['interface'],['interface']
Integrability,"nterface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7067,interface,interface,7067,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"nterface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:9540,interface,interface,9540,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"nts); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:7411,interface,interfaces,7411,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['interface'],['interfaces']
Integrability,"num class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in class qupath.opencv.ops.ImageOps.Channels. Apply the (fixed) color deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:240391,message,messages,240391,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['messages']
Integrability,"ny annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array contai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2423,interface,interface,2423,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['interface'],['interface']
Integrability,"n isLocked(); Query the locked status for the object, indicating whether it should be editable or not. Overrides:; isLocked in class PathObject; Returns:. isEditable; @Deprecated; public boolean isEditable(); Deprecated.; since v0.4.0. Return true if isLocked() is false, otherwise returns false.; ; This method existed before isLocked() to try to automatically determine whether ; an object should be locked or not. Now the isLocked() flag should be used instead. Specified by:; isEditable in class PathObject; Returns:. setPathClass; public void setPathClass(PathClass pathClass,; double classProbability); Description copied from class: PathObject; Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Specified by:; setPathClass in class PathObject; Parameters:; pathClass - ; classProbability - . getClassProbability; public double getClassProbability(); Description copied from class: PathObject; Request the classification probability, or Double.NaN if no probability is available. Specified by:; getClassProbability in class PathObject; Returns:. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of the object. Specified by:; getPathClass in class PathObject; Returns:. getROI; public ROI getROI(); Description copied from class: PathObject; Get the region of interest (ROI) for the object. Specified by:; getROI in class PathObject; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html:5157,interface,interface,5157,javadoc/docs/qupath/lib/objects/PathROIObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html,2,['interface'],['interface']
Integrability,"o a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:2829,interface,interface,2829,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"o a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supports",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:3384,interface,interface,3384,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"o add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). RichScriptEditorExtension() - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; RIGID_OBJECT_EDITOR - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ROI - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a ROI. ROI - Interface in qupath.lib.roi.interfaces. Base interface for defining regions of interest (ROIs) within QuPath. ROI_AREA - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has an area ROI. ROI_LINE - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a line ROI. ROI_POINT - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a points ROI. ROI.RoiType - Enum Class in qupath.lib.roi.interfaces. Enum representing the major different types of ROI. roiBounds() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. roiBounds(double, double) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. RoiEditor - Class in qupath.lib.roi. Helper class for interactively modifying existing ROIs. RoiLabeling - Class in qupath.imagej.processing. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. RoiLabeling() - Constructor for class qupath.imagej.processing.RoiLabeling;  ; ROIs - Class in qupath.lib.roi. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). ROIs() - Constructor for class qupath.lib.roi.ROIs;  ; roiToGeometry(ROI) - Method in class qupath.lib.roi.GeometryTools",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:869784,interface,interfaces,869784,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"o coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:5404,interface,interface,5404,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"o or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String ti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3390,message,message,3390,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"o repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, z of 0 and t of 0. getDefaultPyramidCompression() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default compression type when writing OME-TIFF images. getDefaultQuPathUserDirectory() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get the default location for extensions. getDefaultResolutions(ImageData<?>, ClassificationResolution) - Static method in class qupath.process.gui.commands.ml.ClassificationResolution. Get a list of default resolutions to show, derived from PixelCalibration objects. getDefaultRGBChannels() - Static method in class qupath.lib.images.servers.ImageChannel. Get d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:373317,interface,interface,373317,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"o repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2849,interface,interface,2849,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['interface'],['interface']
Integrability,"o the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:5564,interface,interface,5564,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"o; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9111,interface,interface,9111,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"oJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1603,wrap,wrapped,1603,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,1,['wrap'],['wrapped']
Integrability,"object that defines how a counting grid may be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.HistogramChart. Request that the chart is automatically hidden (visibility set to false) when there is no data. setHierarchy(PathObjectHierarchy) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the contents of this hierarchy to be the same as that of another hierarchy. setID(UUID) - Method in class qupath.lib.objects.PathObject. Set the ID for this object. setImageData(ImageData<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:928126,interface,interface,928126,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ocale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script that should be run immediately after QuPath's launch. Returns:. showToolBarBadgesProperty; public static BooleanProperty showToolBarBadgesProperty(); Show badges on the toolbar, e.g. to provide messages or warnings. Returns:. hasJavaPreferences; public static boolean hasJavaPreferences(); Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:45295,message,messages,45295,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['message'],['messages']
Integrability,"od in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). getLanguageFromName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Given a file name, determine the associated language - or null if no suitable (supported) language can be found. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:421101,interface,interface,421101,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"od in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Method in class qupath.lib.objects.classes.PathClass. Get the 'base' class, i.e. getBaseDirectory(Project<?>) - Static method in class qupath.lib.projects.Projects. Get the base directory of a project stored on the local file system. getBasePathClass(PathObject) - Static method in class qupath.lib.scripting.QP. Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null. getBaseStyle() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. getBaseStyle() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Optionally return a base style for the code area. getBatchIndex() - Method in class qupath.lib.scripting.ScriptParameters. Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. getBatchSaveResult() - Method in class qupath.lib.scripting.ScriptParameters. Get whether changes to the image data should be saved. getBatchSize() - Method in class qupath.lib.scripting.ScriptParameters. Get the number of images being batch processed, or 1 if just a single image is being processed. getBinIndexForValue(double, double) - Method in class qupath.lib.analysis.stats.Histogram. Get the index of the bin that should contain the specified value. getBinLeftEdge(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the lower edge for a specified bin. getBinRightEdge(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the upper edge for a specified bin.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:334860,interface,interface,334860,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"od in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:103834,interface,interface,103834,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measurement list for this object is not empty. hasNucleus() - Method in class qupath.lib.objects.PathCellObject. Returns true if a n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:571096,interface,interface,571096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"odel. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested input resolution for the image. getInputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the requested inputs and their shapes. getInputs() - Method in interface qupath.opencv.dnn.PredictionFunction. Get the required inputs. getInputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer input shape. getInputWidth() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested width of input image, or -1 if the classifier is not fussy. getInsertion(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the string to insert, given the provided text and position. getInstallationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to install this version of QuPath. getInstalledImageServerBuilders() - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders. getInstalledImageServerBuilders(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders supporting a given image class. getInstan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:413880,interface,interface,413880,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"odsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Legacy method to turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; server - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:. createObjectsFromROIs; public static List<PathObject> createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; downsample - ; asDetection - ; includeMeas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html:1905,interface,interface,1905,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,1,['interface'],['interface']
Integrability,"of a single point. createPolylineROI(List<Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a polyline ROI from a list of points. createPreferencesDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to adjust QuPath preferences. createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S, T>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProcessor(MeasurementProcessor.CustomMeasurement<S, T>...) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProject(File, Class<T>) - Static method in class qupath.lib.projects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:212696,depend,depends,212696,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['depends']
Integrability,"of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeome",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10754,interface,interface,10754,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"of neighbors for all objects. getAllObjects() - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy, including the root object. getAllObjects(boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all the objects in the hierarchy, optionally including the root object. getAllObjects(boolean) - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy. getAllPathClassesVisible() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getAllPoints() - Method in class qupath.lib.roi.AreaROI. Beware this method! This will return all polygon points (useful e.g. getAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). getAllPoints() - Method in class qupath.lib.roi.GeometryROI;  ; getAllPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get a list of points representing the vertices of the ROI. getAllPoints() - Method in class qupath.lib.roi.LineROI;  ; getAllPoints() - Method in class qupath.lib.roi.PointsROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolygonROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolylineROI;  ; getAllPoints() - Method in class qupath.lib.roi.RectangleROI;  ; getAllSelectedObjects() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get all currently-selected objects from the hierarchy. getAllThumbnails() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get thumbnails for all z-slices & time points. getAllTileRequests() - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports. getAllTimes() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing all times where 'something happened' (observed or censored). getAllViewers() - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:326565,interface,interfaces,326565,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"of objects with ROIs that intersect the specified region. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Overrides:; createDefaultRGBImage in class AbstractTileableImageServer; Parameters:; width - ; height - ; Returns:. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:8095,interface,interface,8095,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,"of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. Parameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:2864,interface,interface,2864,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['interface'],['interface']
Integrability,"of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2926,interface,interface,2926,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"og box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7761,message,message,7761,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConnectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showDeprecatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964494,message,message,964494,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"oidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:5054,interface,interface,5054,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"oid writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; stream - ; Throws:; IOException. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImagePlus imp,; String pathOutput); throws IOException. Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:6590,interface,interface,6590,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,12,['interface'],['interface']
Integrability,"oject. put0(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair without rotation. put135(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 135 degree rotation. put45(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 45 degree rotation. put90(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 90 degree rotation. putActionProperty(MenuItem, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a MenuItem, so that it may be retrieved later. putActionProperty(Node, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a Node, so that it may be retrieved later. putAll(Map<String, ? extends Number>) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified map into this list. putAll(MeasurementList) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified list into this one. putMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.put(String, double). putMeasurement(Measurement) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. putMetadataValue(String, String) - Method in interface qupath.lib.objects.MetadataStore. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:801327,interface,interface,801327,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeConsoleStyles(String text,; boolean logConsole); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the console. Specified by:; computeConsoleStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; logConsole - if true, the console prints to the log rather than directly; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:1938,interface,interface,1938,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,15,['interface'],['interface']
Integrability,"olean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a Serve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:4121,interface,interface,4121,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"ols. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:502349,interface,interface,502349,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ols.GroovyCV. Apply a greater than or equal to threshold between two arrays. GESTURES_ALL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_NONE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ROTATE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_SCROLL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ZOOM - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; get(int) - Method in interface qupath.lib.geom.Point. Get the value of the ordinate for the specified dimension. get(int) - Method in class qupath.lib.geom.Point2;  ; get(int) - Method in class qupath.opencv.dnn.DnnShape. Get the length of the specified dimension. get(String) - Method in interface qupath.lib.measurements.MeasurementList. Get value for the measurement with the specified name. get(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Retrieve a resource by name. get2D(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 2D Gaussian scale. get3DAnisotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D anisotropic Gaussian scale. get3DIsotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D isotropic Gaussian scale. getAcceleratorText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of any accelerator for the command. getActionProperty(MenuItem) - Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a menu item, or null if no action is found. getActionProperty(Node) - Static method in class qupath.lib.gui.actions.ActionTools. Retrieve an Action stored within the properties of a node, or null if no action is foun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:322434,interface,interface,322434,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ols; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7727,message,message,7727,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['message'],['message']
Integrability,"olsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selecta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:5284,message,message,5284,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['message'],['message']
Integrability,"olution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35483,interface,interface,35483,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability,"om a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.StainVector. Get the stain vector as a 3 element array (red, green, blue). getArray(boolean) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getArray(boolean) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Request the pixel array representing all the pixels in this image, returned row-wise. getAssociatedImage(String) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImage(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImage(String) - Method in interface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImageList() - Method in interface qupath.lib.images.servers.ImageServer. Get a list of 'associated images', e.g. getAssociatedImageList() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImages() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a list of all associated image names. getAtRisk(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierDa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:330702,interface,interface,330702,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"om interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; decimalPlaces - ; Returns:. getMetadataNames; public ReadOnlyListWrapper<String> getMetadataNames(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7704,interface,interface,7704,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability,"om interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:8007,interface,interface,8007,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ommands. numDimensions() - Method in class qupath.opencv.dnn.DnnShape. The total number of dimensions, i.e. NumericParameter<S> - Class in qupath.lib.plugins.parameters. Abstract parameter to represent a numeric value. numNaNs(double[]) - Static method in class qupath.lib.common.GeneralTools. Count the number of NaN values in an array. NumpyTools - Class in qupath.opencv.tools. Read .npy and .npz files from NumPy. NumpyTools() - Constructor for class qupath.opencv.tools.NumpyTools;  ; numThreads - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; nValues() - Method in class qupath.lib.analysis.stats.Histogram. Number of values represented in the histogram (i.e. nVertices() - Method in class qupath.lib.roi.AreaROI. Get the number of vertices used to represent this area. nVertices() - Method in class qupath.lib.roi.PolygonROI. Get the total number of vertices in the polygon. nZSlices() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nZSlices() - Method in interface qupath.lib.images.servers.ImageServer. Number of slices in a z-stack. O. OBJECT_IMPORT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ObjectClassifier<T> - Interface in qupath.lib.classifiers.object. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand - Class in qupath.process.gui.commands. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ObjectClassifierCommand. Constructor. ObjectClassifierLoadCommand - Class in qupath.process.gui.commands. Command to apply a pre-trained object classifier to an image. ObjectClassifierLoadCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ObjectClassifierLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:716189,interface,interface,716189,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:3289,interface,interface,3289,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['interface'],['interface']
Integrability,"on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeConsoleStyles(String text,; boolean logConsole); Description copied from interface: ScriptStyler; Compute styling for the specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html:1639,interface,interface,1639,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,1,['interface'],['interface']
Integrability,"on copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11675,interface,interface,11675,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,2,['interface'],['interface']
Integrability,"on feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingXProperty; public static DoubleProperty gridSpacingXProperty(); Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingYProperty; public static DoubleProperty gridSpacingYProperty(); Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridScaleMicronsProperty; public static BooleanProperty gridScaleMicronsProperty(); Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. Returns:. autoBrightnessContrastSaturationPercentProperty; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty(); Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. Returns:. keepDisplaySettingsProperty; public static BooleanProperty keepDisplaySettingsProperty(); Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). Returns:. doubleClickToZoomProperty; public static BooleanProperty doubleClickToZoomProperty(); Request that double-clicking the viewer can be used to zoom in. Returns:. imageTypeSetting",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:52415,depend,depends,52415,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['depends']
Integrability,"on of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:4769,interface,interface,4769,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"on using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in class qupath.lib.gui.charts.HistogramChart. Get the current counts transform. getCountSum() - Method in class qupath.lib.analysis.stats.Histogram. Sum of all histogram counts. getCreationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was created. getCropRegion() - Method in class qupath.lib.images.servers.CroppedImageServer. Get the region being cropped, in terms of the bounding box within the base ImageServer. getCropToParent() - Method in class qupath.lib.objects.utils.Tiler. Check if the tiler is set to crop the output to the input parent. getCssStylesPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where user directory for storing CSS styles. getCurrentConsoleControl() - Method in class qupath.lib.gui.scriptin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:363582,message,message,363582,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"on, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4092,interface,interface,4092,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['interface'],['interface']
Integrability,"on. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:4477,interface,interface,4477,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"on. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4289,interface,interface,4289,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"on. selected(ObservableValue<Boolean>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the selected property of the action to an ObservableValue, bidirectionally if possible. selectedChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. The channel to which the sliders are applied. selectedChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently selected for display. selectedColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; SelectedMeasurementTableView - Class in qupath.lib.gui.panes. Component to show measurements for a currently-selected object. SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>>) - Constructor for class qupath.lib.gui.panes.SelectedMeasurementTableView. Constructor. selectedObjectChanged(QuPathViewer, PathObject) - Method in class qupath.lib.gui.UndoRedoManager;  ; selectedObjectChanged(QuPathViewer, PathObject) - Method in interface qupath.lib.gui.viewer.QuPathViewerListener. Called when the primary selected object has changed in a viewer. selectedObjectChanged(QuPathViewer, PathObject) - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; selectedObjectChanged(QuPathViewer, PathObject) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:895978,interface,interface,895978,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"on.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1877,interface,interface,1877,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,2,['interface'],['interface']
Integrability,on.svg.SvgTools.SvgBuilder. Specify an array of objects to export. PathObjects - Class in qupath.lib.objects. Helper class to create PathObject. PathObjects() - Constructor for class qupath.lib.objects.PathObjects;  ; PathObjectSelectionListener - Interface in qupath.lib.objects.hierarchy.events. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel - Class in qupath.lib.objects.hierarchy.events. Model for handling selection of single and multiple PathObjects. PathObjectSelectionModel() - Constructor for class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel;  ; PathObjectTools - Class in qupath.lib.objects. A collection of static methods to help work with PathObjects. PathObjectTools() - Constructor for class qupath.lib.objects.PathObjectTools;  ; PathOverlay - Interface in qupath.lib.gui.viewer.overlays. Interface defining an overlay to paint on top of a viewer. PathPlugin<T> - Interface in qupath.lib.plugins. Primary interface for defining a 'plugin' command. PathPrefs - Class in qupath.lib.gui.prefs. Central storage of QuPath preferences. PathPrefs() - Constructor for class qupath.lib.gui.prefs.PathPrefs;  ; PathPrefs.AutoUpdateType - Enum Class in qupath.lib.gui.prefs. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes - Enum Class in qupath.lib.gui.prefs. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize - Enum Class in qupath.lib.gui.prefs. Enum to control font size. PathPrefs.ImageTypeSetting - Enum Class in qupath.lib.gui.prefs. Enum defining how setting the image type should be handled for new images. PathROIObject - Class in qupath.lib.objects. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject - Class in qupath.lib.objects. The root object used at the base of a PathObjectHierarchy. PathRootObject() - Constructor for class qupath.lib.objects.PathRootObject;  ; paths(Path..,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:758667,interface,interface,758667,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2201,wrap,wrapStatModel,2201,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,10,['wrap'],"['wrapStatModel', 'wrapping']"
Integrability,"onding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != nul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143529,depend,depends,143529,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depends']
Integrability,"onger supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11107,interface,interface,11107,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"only Geometries of the same type (Polygonal, Lineal or Puntal). HOVER - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Display only when the cursor hovers nearby. HtmlRenderer - Interface in qupath.lib.gui.scripting.languages. Marker interface that indicates an executable language renders HTML. hue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract hue value from RGB-to-HSB transform. Hue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Hue value (from RGB-HSB transform). HUGE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  . I. IconFactory - Class in qupath.lib.gui.tools. Factory class for creating icons. IconFactory() - Constructor for class qupath.lib.gui.tools.IconFactory;  ; IconFactory.PathIcons - Enum Class in qupath.lib.gui.tools. Default icons for QuPath commands. iconProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; iconProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the icon that should be used for the tool. identity() - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform representing the identity transform. identity() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns its input unchanged. IGNORE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Ignore classification, indicating what should not be further measured (e.g. IGNORE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Ignore classification, indicating what should not be further measured (e.g. IJExtension - Class in qupath.imagej.gui. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension() - Constructor for class qupath.imagej.gui.IJExtension;  ; IJExtension.IJExtensionCommands - Class in qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:583359,interface,interface,583359,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"onnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Remove a connections group. removeImage(ProjectImageEntry<?>, boolean) - Method in interface qupath.lib.projects.Project. Remove an image from the project, optionally including associated data. removeInteriorRings(Geometry, double) - Static method in class qupath.lib.roi.GeometryTools. Fill all interior rings for the specified geometry that have an area < a specified threshold. removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Remove a JSON DropHandler. removeListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a hierarchy change listener. removeMeasurements(Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the current image data. removeMeasurements(String...) - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements with the specified names. removeMeasurements(PathObjectHierarchy, Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the specified hierarchy. removeMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Remove a metadata value. removeNames(PathClass, String...) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeNames(PathClass, Collection<String>) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a single object from the hierarchy, firing a re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:845949,interface,interface,845949,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"onnectionGroup. Get all the connections to a specified PathObject stored in this group. getConnectedObjects(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getConnectionGroups() - Method in class qupath.lib.objects.PathObjectConnections. Get an unmodifiable list containing all connections groups. getConnections(PathObject) - Method in class qupath.lib.objects.PathObjectConnections. Get all the connections to a specified PathObject. getContents(Parent, Collection<Node>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively. getContentsOfType(Parent, Class<T>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. getContextMenu() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getContextMenu() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the context menu for the control. getContextMenu() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getConvexHull() - Method in class qupath.lib.roi.AreaROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.GeometryROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolygonROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:362143,interface,interface,362143,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ons - Enum Class in qupath.lib.gui.tools. Default icons for QuPath commands. iconProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; iconProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the icon that should be used for the tool. identity() - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform representing the identity transform. identity() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns its input unchanged. IGNORE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Ignore classification, indicating what should not be further measured (e.g. IGNORE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Ignore classification, indicating what should not be further measured (e.g. IJExtension - Class in qupath.imagej.gui. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension() - Constructor for class qupath.imagej.gui.IJExtension;  ; IJExtension.IJExtensionCommands - Class in qupath.imagej.gui. Commands to install with the ImageJ extension. IJTools - Class in qupath.imagej.tools. Collection of static methods to help with using ImageJ with QuPath. IJTools() - Constructor for class qupath.imagej.tools.IJTools;  ; IMAGE - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Accept all requests for the image where the region is non-empty. IMAGE_ROOT - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Root object classification. IMAGE_ROOT - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Root object classification. ImageChannel - Class in qupath.lib.images.servers. The name and display color for a single image channel. imageData - Variable in class qupath.lib.gui.charts.Chart",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:584191,integrat,integration,584191,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['integrat'],['integration']
Integrability,"ons() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getActions() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getActiveTool() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the active PathTool for this viewer. getActiveToolIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getActiveViewer() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the value of ViewerManager.activeViewerProperty(). getAlignment() - Method in class qupath.lib.objects.utils.Tiler. Get the tiling alignment. getAllFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the collection of recorded frames. getAllImageSupports(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get all ImageServerBuilder.UriImageSupport that claim to be able to open the specified URI with optional args. getAllNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getAllNames() - Method in interface qupath.lib.gui.measure.PathTableData. Return an ordered list of all names, including both numeric measurements and String values. getAllNeighbors() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a list of neighbors for all objects. getAllObjects() - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy, including the root object. getAllObjects(boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all the objects in the hierarchy, optionally including the root object. getAllObjects(boolean) - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy. getAllPathClassesVisible() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getAllPoints() - Method in class qupath.lib.roi.AreaROI. Beware this method! This will return all polygon points (useful e.g. getAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't rep",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:325336,interface,interface,325336,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"onsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html:1952,interface,interface,1952,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,2,['interface'],['interface']
Integrability,onstr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailab,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1296,interface,interface,1296,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['interface'],['interface']
Integrability,"ontrol; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7504,interface,interface,7504,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ontrol<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified te",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7866,interface,interface,7866,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"oolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728137,interface,interface,728137,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,oolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition prope,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7684,interface,interface,7684,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"oolean removeColumn(QuPathViewer viewer); Try to remove the column containing the specified viewer, notifying the user if this isn't possible. Parameters:; viewer - ; Returns:; true if the column was removed, false otherwise. setGridSize; public boolean setGridSize(int nRows,; int nCols); Set the grid to have a specific number of rows and columns. Parameters:; nRows - ; nCols - ; Returns:. addRow; public void addRow(QuPathViewer viewer). addColumn; public void addColumn(QuPathViewer viewer). splitViewer; public void splitViewer(QuPathViewer viewer,; boolean splitVertical). resetGridSize; public void resetGridSize(). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:9865,interface,interface,9865,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features expected in the output. getOutputPixelType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Pixel type of output; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageDataOp. Get the output pixel type. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageOp. Get the output pixel type. getOverlayActions() - Method in class qupath.lib.gui.QuPathGUI. Get the actions associated with the viewer overlay options. getOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an unmodifiable list containing the overlay layers, in order. getOverlayOptions() - Method in class qupath.lib.gui.actions.OverlayActions. Get the overlay options controlled by these actions. getOverlayOptions() - Method in class qupath.lib.gui.QuPathGUI. Return the global OverlayOptions instance, used to control display within viewers by default. getOverlayOptions() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get the overlay options, which may influence the display of this overlay. getOverlayOptions() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the overlay options that control the viewer display. getOverlayOptions() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:468126,interface,interface,468126,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"operty description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; te",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9617,interface,interface,9617,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"operty giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; public void deregisterTool(QuPathViewer viewer); Description copied from interface: PathTool; Deregister the tool from the viewer. It is essential that tools clean up properly ; and do not impact other tools that may be registered for the viewer later. Specified by:; deregisterTool in interface PathTool; Parameters:; viewer - the viewer from which this tool should be deregistered. nameProperty; public ReadOnlyStringProperty nameProperty(); Description copied from interface: PathTool; Property giving the name of the tool. Specified by:; nameProperty in interface PathTool; Returns:; the name property. iconProperty; public Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:2081,interface,interface,2081,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,1,['interface'],['interface']
Integrability,"opied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4285,interface,interface,4285,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"or ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6709,interface,interface,6709,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"or display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is ne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:3940,depend,depending,3940,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['depend'],['depending']
Integrability,"or message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2559,message,message,2559,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"or, Roi) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. INACTIVE_SERVER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INCLUDE_IGNORED - Enum constant in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Generate objects for ignored classes (default is not to). includeOnlyColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be included in the export. includeOverlays(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether overlays should be included. includePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:600603,message,message,600603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"orLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvectors, returned in the same order as the eigenvalues. getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:387610,interface,interface,387610,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ores; Class AbstractImageRenderer. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; of this class, and a timestamp derived from the last change. Specified by:; getUniqueID in in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html:1372,interface,interface,1372,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,1,['interface'],['interface']
Integrability,"orizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9670,interface,interface,9670,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"orkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109825,wrap,wrap,1109825,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability,"ormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; public String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns a builder capable of creating a server like this one. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getSeries; public int getSeries(); Get the series index, as used by Bio-Formats. Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:4554,depend,depend,4554,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['depend'],['depend']
Integrability,"ortedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:3837,interface,interface,3837,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,6,['interface'],['interface']
Integrability,"ortedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:3709,interface,interface,3709,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,4,['interface'],['interface']
Integrability,"ortsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:4686,interface,interface,4686,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ortsRGB() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle RGB (it probably can...). supportsRGB() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsT() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsT() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsT() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsT() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsT() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle multiple timepoints. supportsT() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsZ() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsZ() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsZ() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsZ() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsZ() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle multiple z-slices. supportsZ() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; SvgBuilder() - Constructor for class qupath.lib.extension.svg.SvgTools.SvgBuilder. Create a new builder, which will later be customized. SvgBuilder(QuPathViewer) - Constructor for class qupath.lib.extension.svg.SvgTools.SvgBuilder. Create a builder initialized according to the current viewer. SvgExtension - Class in qupath.lib.extension.svg. Extension for SVG image export. SvgExtension() - Constructor for class qupath.lib.extension.svg.SvgExtension;  ; SvgExtension.SvgActions - Class in qupath.lib.extension.svg;  ; SvgTools - Class in qupath.lib.extension.svg. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools() - Constructor for class qupath.lib.extension.svg.SvgTools;  ; SvgTools.SvgBuilder - Class in qupath.lib.extension.svg. Builder class to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1013981,interface,interface,1013981,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ory.StandardPathClasses (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.classes; Enum Class PathClassFactory.StandardPathClasses. java.lang.Object; java.lang.Enum<PathClassFactory.StandardPathClasses>; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. All Implemented Interfaces:; Serializable, Comparable<PathClassFactory.StandardPathClasses>, Constable. Enclosing class:; PathClassFactory. public static enum PathClassFactory.StandardPathClasses; extends Enum<PathClassFactory.StandardPathClasses>; Enum representing standard classifications. Exists mostly to ensure consisting naming (including capitalization). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html:1005,interface,interfaces,1005,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,2,['interface'],['interfaces']
Integrability,"ot be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:5748,interface,interface,5748,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"otation. put45(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 45 degree rotation. put90(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 90 degree rotation. putActionProperty(MenuItem, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a MenuItem, so that it may be retrieved later. putActionProperty(Node, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a Node, so that it may be retrieved later. putAll(Map<String, ? extends Number>) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified map into this list. putAll(MeasurementList) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified list into this one. putMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.put(String, double). putMeasurement(Measurement) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. putMetadataValue(String, String) - Method in interface qupath.lib.objects.MetadataStore. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a byte array. pyramidalize(ImageServer<BufferedImage>, double...) - Static method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:801624,interface,interface,801624,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ouble x,; double y,; ImagePlane plane); Create a new ROI with the given starting coordinates. Parameters:; e - ; x - ; y - ; plane - ; Returns:. createNewAnnotation; protected PathObject createNewAnnotation(MouseEvent e,; double x,; double y); Create a new annotation and set it in the current viewer. Parameters:; e - ; x - ; y - ; Returns:. ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html:5612,depend,depend,5612,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,1,['depend'],['depend']
Integrability,"oundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9928,interface,interface,9928,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"oundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8105,interface,interface,8105,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoint",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:2891,interface,interface,2891,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['interface'],['interface']
Integrability,"ow-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build a ImageServer for the specified URI path and optional args.; ; See buildServer(URI, String...) for more information about how args are applied. Parameters:; path - path for the image; it should be possible to convert this to a URI; args - ; Returns:; Throws:; IOException. buildServer; public static ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws IOException; Build a ImageServer for the specified URI and optional args.; This differs from ImageServerProvider.buildServer(String, Class, String...) in two main ways:; ; it always uses BufferedImage as the server class; where possible, args that request a transformed server are applied. ; Supported arguments include; ; --classname to request an image provi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:4145,wrap,wrap,4145,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['wrap'],['wrap']
Integrability,"owless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:9309,interface,interface,9309,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"own in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:5070,interface,interface,5070,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,16,['interface'],['interface']
Integrability,"ows IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:4921,wrap,wrap,4921,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,2,['wrap'],['wrap']
Integrability,"ows IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; stream - ; Throws:; IOException. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:6258,interface,interface,6258,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"p navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class PixelClassificationOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. All Implemented Interfaces:; PathOverlay. public class PixelClassificationOverlay; extends AbstractImageOverlay; PathOverlay that gives the results of pixel classification. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageRenderer>; renderer. Get the ImageRenderer property used with this overlay. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearCache(). Clear any cached tiles. static PixelClassificationOverlay; create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:1082,interface,interfaces,1082,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['interface'],['interfaces']
Integrability,"pCommand;  ; run() - Method in class qupath.process.gui.commands.ExportTrainingRegionsCommand;  ; run() - Method in class qupath.process.gui.commands.ObjectClassifierCommand;  ; run() - Method in class qupath.process.gui.commands.ObjectClassifierLoadCommand;  ; run() - Method in class qupath.process.gui.commands.PixelClassifierCommand;  ; run() - Method in class qupath.process.gui.commands.SimpleThresholdCommand;  ; run() - Method in class qupath.process.gui.commands.SingleMeasurementClassificationCommand;  ; run() - Method in class qupath.process.gui.commands.SplitProjectTrainingCommand;  ; run() - Method in class qupath.process.gui.commands.ui.LoadResourceCommand;  ; run(String) - Method in class qupathj.QuPath_Send_Overlay_to_QuPath;  ; run(String) - Method in class qupathj.QuPath_Send_ROI_to_QuPath;  ; run(ImageData<?>) - Method in class qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand. Run the command for the specified image data. runDetection(ImageData<T>, ParameterList, ROI) - Method in interface qupath.lib.plugins.ObjectDetector. Detect objects. runGeoJsonExport(QuPathGUI) - Static method in class qupath.lib.gui.commands.ExportObjectsCommand. Run the path object GeoJSON export command. runGeoJsonObjectExport(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to export object(s) to a GeoJSON file. RunningStatistics - Class in qupath.lib.analysis.stats. Helper class for computing basic statistics from values as they are added. RunningStatistics() - Constructor for class qupath.lib.analysis.stats.RunningStatistics. Default constructor. runObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Apply an object classifier to the current ImageData. runObjectClassifier(ImageData, String...) - Static method in class qupath.lib.scripting.QP. Apply an object classifier to the specified ImageData. runObjectImport(QuPathGUI, ImageData<BufferedImage>) - Static method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:875243,interface,interface,875243,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"pOp that can perform any requested gamma correction in this viewer. getGaussianDeriv(double, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGaussianDerivKernel(double, int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGeoJsonDataFormat() - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Get a DataFormat suitable for storing GeoJSON data on a clipboard. getGeometry() - Method in class qupath.lib.roi.EllipseROI;  ; getGeometry() - Method in class qupath.lib.roi.LineROI;  ; getGeometry() - Method in class qupath.lib.roi.PointsROI;  ; getGeometry() - Method in class qupath.lib.roi.PolylineROI;  ; getGeometry() - Method in class qupath.lib.roi.RectangleROI;  ; getGeometry() - Method in class qupath.lib.roi.AreaROI;  ; getGeometry() - Method in class qupath.lib.roi.GeometryROI;  ; getGeometry() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.Default",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:397966,interface,interface,397966,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"pTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:4323,wrap,wrapTextProperty,4323,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,2,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"parate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class qupath.lib.geom.Point2. Point constructor. PointIO - Class in qupath.lib.io. Helper class for reading/writing point objects in terms of their x,y coordinates. PointIO() - Constructor for class qupath.lib.io.PointIO;  ; pointRadius - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pointRadiusProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Radius of the circle used to draw individual points in a point annotation (in pixels). POINTS - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Points annotation and counting tool. POINTS_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POINTS_TOOL - Variable in class qupath.lib.gui.ToolManager;  ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:770422,interface,interfaces,770422,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"path.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces, convered to ROI objects. getWandSensitivity() - Static method in class qupath.process.gui.WandToolEventHandler. Query the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. getWandSigmaPixels() - Static method in class qupath.process.gui.WandToolEventHandler. Query the Gaussian sigma value used to smooth the image when applying the wand. getWandUseOverlays() - Static method in class qupath.process.gui.WandToolEventHandler. Query whether the wand tool should be influenced by pixel values painted on image overlays. getWidth() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getWidth() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image width. getWidth() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension width. getWidth() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getWidth() - Method in interface qupath.lib.images.servers.ImageServer. Width of the full-resolution image in pixels. getWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image width. getWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image width at this level. getWidth() - Method in class qupath.lib.regions.ImageRegion. Get the width of the region bounding box. getWindow(String) - Static method in class qupath.lib.gui.scripting.QPEx. Access a window currently open within QuPath by its title. getWrappedServer() - Method in class qupath.lib.images.servers.TransformingImageServer. Get underlying ImageServer, i.e. getWriter() - Method in class qupath.lib.scripting.ScriptParameters. Get the main writer for script output. getX() - Method in class qupath.lib.geom.Point2. Get the x coordinate of this point. getX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the region bou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:552913,interface,interface,552913,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,path.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.g,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:450184,interface,interface,450184,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"path.lib.extension.svg.SvgTools.SvgBuilder. Specify the PathObjectHierarchy. HIERARCHY_COMPARATOR - Static variable in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Comparator to use when looking for a parent annotation in the hierarchy. hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.UndoRedoManager;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.images.ImageData;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in interface qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener. Notify listeners of a change in the hierarchy or its objects. hierarchyContainsObject(PathObjectHierarchy, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Check if a hierarchy contains a specified PathObject. hierarchyDisplayMode - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; HierarchyOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). HierarchyOverlay(DefaultImageRegionStore, OverlayOptions, ImageData<BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Constructor. Histogram - Class in qupath.lib.analysis.stats. Class for storing histogram data & basic statistics. Histogram(double[], int) - Constructor for class qupath.lib.analysis.stats.Histogram. Create histogram from a double",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:579031,interface,interface,579031,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"path.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775235,interface,interface,775235,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"path.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:3554,interface,interface,3554,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"path.lib.objects.PathObjectTools. Get a list of objects with line ROIs from a collection of objects. getLineWidth() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get the threshold line width. getLivePrediction() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:429452,interface,interface,429452,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"path.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io - package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml - package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects - package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features - package qupath.opencv.ml.objects.features. Extract object features using OpenCV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814970,interface,interfaces,814970,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"path.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> ta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:3168,interface,interface,3168,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['interface'],['interface']
Integrability,"path.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:2333,interface,interface,2333,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,2,['interface'],['interface']
Integrability,"pathModel - ; Returns:. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. getBlobFunction; public BlobFunction<Mat> getBlobFunction(); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Specified by:; getBlobFunction in class AbstractDnnModel<Mat>; Returns:. getBlobFunction; public BlobFunction<Mat> getBlobFunction(String name); Description copied from class: AbstractDnnModel; Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Specified by:; getBlobFunction in class AbstractDnnModel<Mat>; Parameters:; name - ; Returns:. getPredictionFunction; public PredictionFunction<Mat> getPredictionFunction(); Description copied from class: AbstractDnnModel; Get the prediction function that c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:6315,interface,interface,6315,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['interface'],['interface']
Integrability,"pe(Parent, Class<T>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. getContextMenu() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getContextMenu() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the context menu for the control. getContextMenu() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getConvexHull() - Method in class qupath.lib.roi.AreaROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.GeometryROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolygonROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in class qupath.lib.gui.charts.HistogramChart.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:362813,interface,interfaces,362813,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"pe); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11103,synchroniz,synchronizeViewersProperty,11103,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,2,['synchroniz'],['synchronizeViewersProperty']
Integrability,"pecified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:6064,interface,interface,6064,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"pencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual names. fromBlob(T) - Method in interface qupath.opencv.dnn.BlobFunction. Convert a blob (generally the result of a prediction) to a list of mats. fromCollection(Collection<String>) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass using all the name elements specified in the collection, ; without providing a default color. fromCollection(Collection<String>, Integer) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass instance using all the name elements specified in ; the collection, with optional default color if a new instance is created. fromColumns(double...) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. fromFriendlyString(String) - Static method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get the CompressionType corresponding to the given input. fromJTS(AffineTransformation) - Static me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:314202,interface,interface,314202,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"pencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier has already been trained and is ready to predict. isTranslating() - Method in class qupath.lib.roi.RoiEditor. Query if a ROI is currently being translated through this editor. isTransparent() - Method in class qupath.lib.images.servers.ImageChannel. Check if the color is 'transparent'; this is used for background/ignored channels. isTwoPlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""2+"", indicating a moderately-positive staining. isUnbounded() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this neither a lower nor an upper bound constraining valid values. isUndoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isUndoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'undo' can be applied to the control. isUndoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isUnknown() - Method in class qupath.opencv.dnn.DnnShape. Returns true if the shape is unknown. isUnsignedInteger() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is an unsigned integer representation. isURL() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return true if URI has a scheme beginning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:636369,interface,interface,636369,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"pencv.ops.ImageOps.Filters. Apply a 2D morphological opening filter. openingByReconstruction(ImageProcessor, double) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply opening by reconstruction, with the specified minimum filter radius. openingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D opening filter (erosion followed by dilation) to all channels of an image. openSavedData(QuPathViewer, File, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:727683,interface,interface,727683,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"pend the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.opencv.ops.ImageDataOp. Apply the operation to the requested region of the image. applyClassification(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Apply pixel classifier to a specified region of an image. applyCompletion(EditableText, AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Insert the text from the completion to the editable text. applyDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings with the specified name or file path to the current version. applyDisplaySettings(ImageDisplaySettings) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings to the current viewer. applyDisplaySettings(QuPathViewer, ImageDisplaySettings) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings to the specified viewer. applyLastAnnotationToActiveViewer() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; applyReplacements() - Method in class qupath.lib.io.UriUpdater. Apply all current replace",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:42116,interface,interface,42116,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"per for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728395,interface,interface,728395,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"perationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8695,interface,interface,8695,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"perty change listener. Parameters:; listener - . getProperty; public Object getProperty(String key); Get a specified property. Parameters:; key - ; Returns:. setProperty; public Object setProperty(String key,; Object value); Set a property. Note that if properties are Serializable, they will be included in ; associated data files - otherwise they are stored only transiently. Parameters:; key - ; value - ; Returns:. removeProperty; public Object removeProperty(String key); Remove a specified property. Parameters:; key - ; Returns:. getProperties; public Map<String,Object> getProperties(); Get an unmodifiable map representing all known properties for this ImageData. Returns:. getLastSavedPath; public String getLastSavedPath(); Get the last path used to save this object;. Returns:. isChanged; public boolean isChanged(); Returns true if changes have been recorded since the last time this object was notified that it was saved. Returns:; See Also:. setLastSavedPath(java.lang.String, boolean). setChanged; public void setChanged(boolean isChanged); Set isChanged() status. Parameters:; isChanged - . setLastSavedPath; public void setLastSavedPath(String path,; boolean resetChanged); Set the last path used to save this object;. Parameters:; path - ; resetChanged - If true, then the isChanged() flag will be reset to false;. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:8313,interface,interface,8313,javadoc/docs/qupath/lib/images/ImageData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html,4,['interface'],['interface']
Integrability,"perty. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient information associated with them (including a menu path). Parameters:; actions - . getCommonActions; public CommonActions getCommonActions(); Get the common actions associated with this QuPath instance. Returns:. getAutomateActions; public AutomateActions getAutomateActions(); Get the automated actions associated with this QuPath instance. Returns:. lookupActionByText; public org.controlsfx.control.action.Action lookupActionByText(String text); Search for an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:33678,depend,depends,33678,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depends']
Integrability,"pe in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more effic",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11801,interface,interface,11801,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,2,['interface'],['interface']
Integrability,"pied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:6090,interface,interface,6090,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"pied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6119,interface,interface,6119,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method in class qupath.lib.gui.viewer.ViewerManager. Match the display resolutions (downsamples) of all viewers to match the current viewer. matToBufferedImage(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a Mat to a BufferedImage. matToBufferedImage(Mat, ColorModel) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a Mat to a BufferedImage. matToImagePlus(String, Mat...) - Static method in class qupath.opencv.tools.OpenCVTools. Convert an OpenCV MatVector into an ImageJ ImagePlus. matToImagePlus(Mat, String) - Static method in class qupath.opencv.tools.OpenCVTools. Convert an OpenCV Mat into an ImageJ ImagePlus. matToImageProcessor(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Convert ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:674224,interface,interface,674224,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8236,interface,interface,8236,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"pleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; public String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:4011,Depend,DependencyException,4011,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['Depend'],['DependencyException']
Integrability,"pletions. getCompatibleObjects(ImageData<T>) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; getCompatibleObjects(ImageData<T>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the objects from an ImageData that are compatible with this classifier. getCompatibleWriters(Class<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangulation. Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). getConnectedObjects(PathObject) - Method in class qupath.lib.objects.Defa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:360018,interface,interface,360018,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden inste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:3164,interface,interface,3164,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['interface'],['interface']
Integrability,plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getURIs() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServer. Get the URIs for images required for this server. getURIs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Get a list of URIs required by this builder. getURIs() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getU,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:543818,interface,interface,543818,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Returns:; the padding requested by this operation. getChannels; default List<ImageChannel> getChannels(List<ImageChannel> channels); Get appropriate channels to reflect the output of this transform.; ; The default is to return the input list unchanged.; ; Classes that change the meaning or number of channels should override this.; In particular, the number of channels in the output list should match the ; number of channels output by this transformer, given the input channels. Parameters:; channels - ; Returns:. getOutputType; default PixelType getOutputType(PixelType inputType); Get the output pixel type.; ; The default is to return the pixel type unchanged. Parameters:; inputType - the input pixel type; Returns:; the output pixel type. getURIs; default Collection<URI> getURIs(); throws IOException; Default implementation returns an empty list; classes should override this if necessary. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; default boolean updateURIs(Map<URI,URI> replacements); throws IOException; Default implementation makes no changes; classes should override this if necessary. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:3527,interface,interface,3527,javadoc/docs/qupath/opencv/ops/ImageOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html,4,['interface'],['interface']
Integrability,"portsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:5315,interface,interface,5315,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ppendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:9603,interface,interface,9603,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"pplied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:4042,interface,interface,4042,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['interface'],['interface']
Integrability,"pportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11033,interface,interface,11033,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"precated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.logging; Enum Class LogManager.LogLevel. java.lang.Object; java.lang.Enum<LogManager.LogLevel>; qupath.lib.gui.logging.LogManager.LogLevel. All Implemented Interfaces:; Serializable, Comparable<LogManager.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static fina",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1151,message,messages,1151,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['message'],['messages']
Integrability,"preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method in class qupath.lib.roi.RectangleROI;  ; getRootLogLevel() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level, as set by this manager. getRootObject() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the root object. getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, RotatedImageServer.Rotation) - Static method in class qupath.lib.images.servers.RotatedImageServer. Get a ServerBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:502374,interface,interfaces,502374,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"preting it as GeoJSON. parseRegion(String, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Attempt to parse a RegionRequest corresponding to an image region from the file name. parseShape(MatShapeVector) - Static method in class qupath.opencv.dnn.DnnTools. Extract Mat dimensions from a MatShapeVector. parseStainValues(Locale, String) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Parses 3 values, suitable for use as a stain vector. parseStrings(StringVector) - Static method in class qupath.opencv.dnn.DnnTools. Extract Strings from a StringVector. parseTMALabelString(String) - Static method in class qupath.lib.objects.PathObjectTools. Parse a string input representing potential TMA core labels. parseTransformMatrix(String) - Static method in class qupath.lib.roi.GeometryTools. Parse the matrix (String) to create and return an AffineTransformation. paste() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; paste() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request paste from the system clipboard. paste() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; PASTE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; PASTE_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; pasteAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteAndEscapeAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteFromClipboard(QuPathGUI, boolean) - Static method in class qupath.lib.gui.commands.Commands. Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. pasteFromClipboard(ScriptEditorControl<?>, boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; PatchClassifierParams - Class in qupath.opencv.ml. Parameters required to bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:750279,interface,interface,750279,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails() - Method in class qupath.lib.images.writers.PngWriter;  ; getDetectionDisplayMode() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the current OverlayOptions.DetectionDisplayMode. getDetectionObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all detection objects in the hierarchy (including sub-classes of detections). getDetectionObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current detection objects. getDeterminant() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the determinant for each pixel. getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getDeterminant() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getDisplayableImageName(ImageServer<?>) - Static method in class qupath.lib.images.servers.ServerTools. Get an ImageServer name suitable for displaying. getDisplayedClipShape(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer. Transform a clip shape into image coordinates for this viewer. getDisplayedColor(PathObject) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color appropriate for displaying an object. getDisplayedColorARGB(PathObject) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get the color with which an object should be displayed, as a packaged ARGB integer. getDisplayedImageName(ImageData<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Get the image n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:382958,interface,interface,382958,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ps(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ; Returns:. isEmpty; public boolean isEmpty(); Returns true if the group is empty. Returns:. clear; public void clear(); Clear all existing connections. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:2838,interface,interface,2838,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html,2,['interface'],['interface']
Integrability,"pths). KEY_CASE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key to store a case identify for the TMA core. KEY_OBJECT_CONNECTIONS - Static variable in class qupath.lib.objects.DefaultPathObjectConnectionGroup. Key to use when storing object connections as a property of an ImageData object. KEY_OS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival censored flag. KEY_OVERALL_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival (temporal) value. KEY_RECURRENCE_FREE_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival (temporal) value. KEY_RFS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival censored flag. KEYPOINTS - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to KeypointsModel. keySet() - Method in interface qupath.lib.measurements.MeasurementList. Get all available names as a set. killRunningScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  . L. LAB_DISTANCE - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image converted to CIELAB, Euclidean distance calculated. label(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. label(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. labeledImageExtension(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a file extension for the labelled image, which determines the export file format. labeledImageId(String) - Method in class qupath.lib.images.writers.TileExporter. Specify an identifier appended to the filename for labeled images. LabeledImageServer - Class in qupath.lib.images.servers. A sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:642821,interface,interface,642821,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"pting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.clearChildObjects(). clearReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Clear all reader options, returning these to their defaults. clearRootMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearRootMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for the root object. clearSelectedObjects() - Static method in class qupath.lib.scripting.QP. Clear selected objects, but keep child (descendant) objects. clearSelecte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110670,interface,interface,110670,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ption copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:6428,interface,interface,6428,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,2,['interface'],['interface']
Integrability,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:2454,interface,interface,2454,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['interface'],['interface']
Integrability,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2843,interface,interface,2843,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['interface'],['interface']
Integrability,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2534,interface,interface,2534,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['interface'],['interface']
Integrability,"ption(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:; Throws:; Exception. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:2461,interface,interface,2461,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,1,['interface'],['interface']
Integrability,"ption:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6488,interface,interface,6488,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ption; Set the current image for this viewer. Parameters:; imageDataNew - ; Throws:; IOException. resetImageData; public void resetImageData(); Reset the image data to null. fireImageDataChanged; protected void fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew). fireVisibleRegionChangedEvent; protected void fireVisibleRegionChangedEvent(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:25694,depend,depends,25694,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['depend'],['depends']
Integrability,"public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:8520,interface,interfaces,8520,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['interface'],['interfaces']
Integrability,"public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notifica",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8533,message,message,8533,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:4130,interface,interface,4130,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:10187,interface,interface,10187,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10615,synchroniz,synchronizeViewers,10615,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewers']
Integrability,"putHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle single/double quotes. handleRightParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle right parentheses ). handleTabPress(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle tab key. HaralickFeatureComputer - Class in qupath.lib.analysis.features. Static methods for computing Haralick texture features. HaralickFeatureComputer() - Constructor for class qupath.lib.analysis.features.HaralickFeatureComputer;  ; HaralickFeatures - Class in qupath.lib.analysis.features. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating Haralick texture features, within or around detections or tiles. HaralickFeaturesPlugin() - Constructor for class qupath.lib.algorithms.HaralickFeaturesPlugin. Default constructor. hasActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Returns true if a handle is currently active, for example being reposition. hasActiveToolT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:566895,interface,interface,566895,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"quired. readPatch(ImageServer<BufferedImage>, ROI, double, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size. readPathObjects() - Method in class qupath.imagej.images.servers.ImageJServer;  ; readPathObjects() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readPathObjects() - Method in interface qupath.lib.objects.PathObjectReader. Read a collection of objects from the source. readPoints(File) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a file. readPoints(InputStream) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a stream. readPointsObjectList(File) - Static method in class qupath.lib.io.PointIO. Deprecated. readRegion(double, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region from the default ImagePlane (i.e. readRegion(double, int, int, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region for a specified z-plane and timepoint. readRegion(RegionRequest) - Method in class qupath.imagej.images.servers.ImageJServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.CroppedImageServer;  ; readRegion(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region for a specified RegionRequest. readRegion(RegionRequest) - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; readRegion(RegionReque",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:827304,interface,interface,827304,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1076570,interface,interface,1076570,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:3789,interface,interface,3789,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['interface'],['interface']
Integrability,"qupath.lib.scripting.QP. Make a packed int representation of an ARGB color. makeBinaryImage(ImageProcessor, double, Roi, boolean) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Make a binary image depicting (hopefully) the TMA cores. makeChartInteractive(Chart, NumberAxis, NumberAxis) - Static method in class qupath.lib.gui.charts.ChartTools. Make it possible to select chart regions to zoom in, and scroll to navigate around it. makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). makeDefaultStainVector(StainVector.DefaultStains) - Static method in class qupath.lib.color.StainVector. Get a default stain vector. makeDoubleArrayWrapper(double[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a double array, returning values (predictably) as doubles. makeFileInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file path relative to the current project, and create a File object. makeFloatArrayWrapper(float[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a float array, returning values as doubles. makeFullScreenshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the full screen. makeIntArrayWrapper(int[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for an int array, returning values as doubles. makeInverseAnnotation() - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the current ImageData and its current selected objects. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Make an inverse annotation for the selected objects, storing the command in the history workflow. m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:663892,wrap,wrapper,663892,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,r a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsample factor is scaled for one increment of QuPathViewer.zoomIn() or ; QuPathViewer.zoomOut(). getDensityType() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the normalization type of the density map. getDerivedBoundaryStrategy(double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation bound,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:375976,interface,interface,375976,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax - package qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma - package qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools - package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:810730,interface,interface,810730,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4415,interface,interface,4415,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['interface'],['interface']
Integrability,"r images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:4922,interface,interface,4922,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability,"r in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5157,interface,interface,5157,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['interface'],['interface']
Integrability,"r list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(Boolean value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:4152,interface,interface,4152,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability,"r list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4867,interface,interface,4867,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"r(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Query if one object is the ancestor of another. isAncestorOf(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class is equal to the specified child class, ; or an ancestor of that class. isAnnotation() - Method in class qupath.lib.objects.PathObject. Returns true if the object is an annotation. isArea() - Method in class qupath.lib.roi.AreaROI;  ; isArea() - Method in class qupath.lib.roi.EllipseROI;  ; isArea() - Method in class qupath.lib.roi.GeometryROI;  ; isArea() - Method in class qupath.lib.roi.LineROI;  ; isArea() - Method in class qupath.lib.roi.PointsROI;  ; isArea() - Method in class qupath.lib.roi.PolygonROI;  ; isArea() - Method in class qupath.lib.roi.PolylineROI;  ; isArea() - Method in class qupath.lib.roi.RectangleROI;  ; isArea() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI encloses an area. isBigTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a BigTIFF image. isBrightfield() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to brightfield. isBrightnessContrastRescaled() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isBrightnessContrastRescaled() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. isCancelled() - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; isCancelled() - Method in interface qupath.lib.plugins.TaskRunner. Query if the plugin can be cancelled while running. isCell() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). isCensored() - Method in class qupath.lib.analysis.stats.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:615259,interface,interface,615259,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1632,interface,interface,1632,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,1,['interface'],['interface']
Integrability,"r. Build a PixelProcessor from the current state of the builder. build() - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Create an Action with this builder. build() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Build a chart according to the specified parameters. build() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Build the dialog. build() - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Create the rendered image server. build() - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder. Creates a new OMEPixelParser instance. build() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; build() - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Build a new ImageServer instance. build() - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Build an ImageServerMetadata. build() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. build() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Build the ImageServer with the requested parameters. build() - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Build PixelCalibration object. build() - Method in class qupath.lib.images.servers.SparseImageServer.Builder. Build a new SparseImageServer. build() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Get the ImageServer that applies all the requested transforms. build() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:69483,interface,interface,69483,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r. Deprecated.; Create an confirmation alert dialog. constrainCellByNucleusDistance(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. constrainCellByScaledNucleus(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Compute the intersection of a Geometry and a specified bounding box. consumeOutput() - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contain",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:136281,interface,interface,136281,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:403068,interface,interface,403068,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working with semantic versioning. ViewerActions. Actions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:59554,depend,depend,59554,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['depend'],['depend']
Integrability,"r.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:5795,interface,interface,5795,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"r.DefaultImageServerBuilder;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Get a list of URIs required by this builder. getURIs() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.TransformingImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getURIs() - Method in interface qupath.lib.io.UriResource. Get all the URIs required for this resource. getURIs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the URIs associated with the model (e.g. getURIs() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getURIs() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getURIs() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getURIs() - Method in interface qupath.opencv.ops.ImageOp. Default implementation returns an empty list; classes should override this if necessary. getUrlString() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the URL for the main repo. getUseAlwaysExtensions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should always be used. getUsefulValue(PathObject, double) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:545495,interface,interface,545495,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r;  ; getPathClasses() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getPathClassUnclassified() - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. getPathMemoization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be set. getPathObjects() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:481140,interface,interface,481140,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; writeImage(ImageServer<T>, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(ImageServer<T>, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImage(ImageServer<T>, RegionRequest, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified output stream. writeImage(ImageServer<T>, RegionRequest, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified path. writeImage(T, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(T, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(OutputStream, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Serialize an ImageData object to an output stream. writeImageData(Path, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Write a 2D image region using the default writer based on the file path. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.scripting.QP. Write an image region image to the specified path. writePoints(File, Collection<? extends PathObject>) - Static method in class qupath.lib.io.PointIO. Write ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1119822,interface,interface,1119822,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"r<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Specified by:; getDefaultThumbnail in interface ImageServer<T>; Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; public TileRequestManager getTileRequestManager(); Description copied from interface: ImageServer; Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:11437,interface,interface,11437,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"rBuilder that applies a rotation to another server. getRotation() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current rotation; angle in radians. getRotation() - Method in class qupath.lib.images.servers.RotatedImageServer. Get the rotation applied by this server. getSaturationPercent() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. getScale() - Method in class qupath.opencv.dnn.OpenCVDnn. Get scale factors to be applied to preprocess input. getScale(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the scale factor for the specified feature. getScaledArea(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledArea(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get scaled area of the ROI, for use with calibrated pixel sizes. getScaledArea(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:504168,interface,interfaces,504168,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"rDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally us",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:4610,wrap,wrap,4610,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,2,['wrap'],['wrap']
Integrability,"rModel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. ColorModel; getColorModel(). Get the ColorModel for this renderer (may be null). long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. void; setColorModel(ColorModel model). Set the color model to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModelRenderer; public ColorModelRenderer(ColorModel colorModel); Constructor. Parameters:; colorModel - . Method Details. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Description copied from interface: ImageRenderer; Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Specified by:; applyTransforms in interface ImageRenderer; Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. setColorModel; public void setColorModel(ColorModel model); Set the color model to use. Parameters:; model - . getColorModel; public ColorModel getColorModel(); Get the ColorModel for this renderer (may be null). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html:1755,interface,interface,1755,javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,1,['interface'],['interface']
Integrability,"rProperty maxUndoHierarchySizeProperty; The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. See Also:. maxUndoHierarchySizeProperty(). invertScrolling; public static BooleanProperty invertScrollingProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartYProperty(). gridSpacingX; public static DoubleProperty gridSpacingXProperty; Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingXProperty(). gridSpacingY; public static DoubleProperty gridSpacingYProperty; Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingYProperty(). gridScaleMicrons; public static BooleanProperty gridScaleMicronsProperty; Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. See Also:. gridScaleMicronsProperty(). autoBrightnessContrastSaturationPercent; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty; Controls pe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:30738,depend,depends,30738,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['depends']
Integrability,"ractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:3576,Depend,DependencyException,3576,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['Depend'],['DependencyException']
Integrability,"racted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8644,interface,interface,8644,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"rain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Compute the intersection of a Geometry and a specified bounding box. consumeOutput() - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:136699,interface,interfaces,136699,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"raining data samples. normalize(Normalization) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Define normalization type. Normalize() - Constructor for class qupath.opencv.ops.ImageOps.Normalize;  ; NORMALIZED - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Normalized bin counts, so that the sum of all counts is 1.0. normalizeFeature(int, double) - Method in class qupath.opencv.ml.objects.features.Normalizer. Normalize a single feature. normalizeFloats(boolean) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; Normalizer - Class in qupath.opencv.ml.objects.features. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. noSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if no objects are selected. nResolutions() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nResolutions() - Method in interface qupath.lib.images.servers.ImageServer. Number of resolutions for the image. nTimepoints() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nTimepoints() - Method in interface qupath.lib.images.servers.ImageServer. Number of time points in a time series. nTimepoints() - Method in class qupath.lib.images.servers.PixelCalibration. Get the number of known time points. NUCLEI_AND_BOUNDARIES - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell nuclei. NUCLEUS - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Nucleus only. NUCLEUS_CELL_RATIO - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:713808,interface,interface,713808,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:4409,interface,interface,4409,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"ramidWriter.Builder. Parallelize tile export, if possible. parallelize(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the default number of threads (current 4). parallelize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the requested number of threads. ParallelTileObject - Class in qupath.lib.plugins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:744619,interface,interface,744619,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ranslate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6151,interface,interface,6151,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"rap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3406,wrap,wrap,3406,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['wrap'],['wrap']
Integrability,"rap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request wordwrap. wrapTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; write(JsonWriter, ColorTransforms.ColorTransform) - Method in class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; write(JsonWriter, T) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; writeClassifier(ObjectClassifier<T>, Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Write the classifier to a file. writeClassifier(PixelClassifier, Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Write a pixel classifier to a file. writeDensityMapImage(String, String) - Static method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1110961,wrap,wrapStatModel,1110961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapStatModel']
Integrability,"rapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535);. Parameters:; array - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2223,wrap,wrapper,2223,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,4,['wrap'],['wrapper']
Integrability,"rapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; G",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7415,interface,interface,7415,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability,"ray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424086,interface,interface,424086,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io - package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml - package qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814638,interface,interfaces,814638,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"rchy. getSelectedObject() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the current primary selected object. getSelectedObject() - Static method in class qupath.lib.scripting.QP. Get the primary selected object within the current PathObjectHierarchy. getSelectedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get an unmodifiable set containing all the currently-selected objects. getSelectedObjects() - Static method in class qupath.lib.scripting.QP. Get the selected objects within the current PathObjectHierarchy. getSelectedROI() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the ROI of the selected object, if available, or null. getSelectedROI() - Static method in class qupath.lib.scripting.QP. Get the ROI for the primary selected object within the current PathObjectHierarchy. getSelectedText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:508167,interface,interface,508167,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rcles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1076694,interface,interface,1076694,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rdinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6495,interface,interface,6495,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"re moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:7188,interface,interface,7188,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"re or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.writers.TileExporter. Create a builder to export tiles. tileHeight(int) - Method in class qupath.lib.objects.utils.Tiler.Builder. Change the height of output tiles. TileListener<T> - Interface in qupath.lib.gui.images.stores. Interface for anything that needs to know when image tiles become available. tileListeners - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; tiler(Tiler) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a tiler to use. Tiler - Class in qupath.lib.objects.utils. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder - Class in qupath.lib.objects.utils;  ; Tiler.TileAlignment - Enum Class in qupath.lib.objects.utils. Enum representing the possible alignments for tiles. TileRequest - Class in qupath.lib.images.servers. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager - Interface in qupath.lib.images.servers. Helper class to manage tile requests from an ImageServer. TilerPlugin<T> - Class in qupath.lib.algorithms. Simple plugin to create square tiles, which may later have measurements added. TilerPlugin() - Constructor for class qupath.lib.algorithms.TilerPlugin. Default constructor. tiles() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept tile objects only. TILES - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept tiles. tileSize(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Set tile width and height (square tiles). tileSize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the requested tile size (width == height). tileSize(int) - Method in class qupath.lib.images.writers.TileExporter. Define the tile size in pixel units ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1026547,wrap,wrapper,1026547,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,"reObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface: TMAGrid; Get the TMACoreObject for a specified grid location. Specified by:; getTMACore in interface TMAGrid; Parameters:; row - ; col - ; Returns:. getTMACoreList; public List<TMACoreObject> getTMACoreList(); Description copied from interface: TMAGrid; Get an unmodifiable list of all TMA core objects. Specified by:; getTMACoreList in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(String coreName); Description copied from interface: TMAGrid; Retrieve a TMA core based upon its name.; ; The behavior is undefined if multiple cores have the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html:2054,interface,interface,2054,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,2,['interface'],['interface']
Integrability,"reads; public int getMaxThreads(); Get the maximum number of threads that may be used during live prediction. Returns:. setRenderer; public void setRenderer(ImageRenderer renderer); Set the ImageRenderer to be used with this overlay. Parameters:; renderer - . getLivePrediction; public boolean getLivePrediction(); Query whether live prediction is turned on. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:9067,interface,interface,9067,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['interface'],['interface']
Integrability,"ream); throws IOException; Read the entire contents of an InputStream into a single String.; ; Note that from QuPath v0.3 this assumes UTF8 encoding. ; Previously, platform-specific encoding was assumed. Parameters:; stream - ; Returns:; Throws:; IOException. checkExtensions; public static boolean checkExtensions(String path,; String... extensions); Check whether a path ends with one of a number of specified extensions (case insensitive). Parameters:; path - ; extensions - ; Returns:. isMac; public static boolean isMac(); Return true if running on macOS. Returns:. isLinux; public static boolean isLinux(); Return true if running on Linux. Returns:. isWindows; public static boolean isWindows(); Return true if running on Windows. Returns:. deleteFile; public static boolean deleteFile(File fileToDelete,; boolean preferTrash); Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted.; ; Note that the behavior of this method is system-dependent, and there is no guarantee the file will ; indeed be moved to the trash. Parameters:; fileToDelete - ; preferTrash - ; Returns:; true if the file is successfully deleted, false otherwise. readURLAsString; public static String readURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:19267,depend,dependent,19267,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['depend'],['dependent']
Integrability,"reate a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an ImageSupplier that returns an OpenCV Mat. createMatMaskSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a MaskSupplier that returns an OpenCV Mat. createMaximumChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the maximum of all channels. createMeanChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the mean of all channels. createMeasurement(String, double) - Static method in class qupath.lib.measurements.MeasurementFactory. Deprecated.; Create a measurement with a doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:195568,interface,interface,195568,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"reateStringMeasurement(PathObject pathObject,; String column); Deprecated.; Create a specific String measurement.; ; Warning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:6593,interface,interface,6593,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability,"recatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified dat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964623,message,message,964623,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['message'],['message']
Integrability,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2775,interface,interface,2775,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,2,['interface'],['interface']
Integrability,"redImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJServerBuilder; public ImageJServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html:2300,interface,interface,2300,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,1,['interface'],['interface']
Integrability,"redImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:3023,interface,interface,3023,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['interface'],['interface']
Integrability,"related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax - package qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma - package qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:810556,interface,interface,810556,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rementMapper(MeasurementMapper) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. setMemoizationTimeMillis(int) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the number of milliseconds that must elapse when opening an image before a memoization file is generated. setMemoryThreshold(double) - Static method in class qupath.imagej.tools.IJTools;  ; setMetadata(ImageServerMetadata) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Not allowed - throws an UnsupportedOperationException. setMetadata(ImageServerMetadata) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Throws an exception - metadata should not be set for a hierarchy image server directly. setMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; setMetadata(ImageServerMetadata) - Method in interface qupath.lib.images.servers.ImageServer. Set the metadata to use, e.g. setMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.LabeledImageServer. Throws an exception - metadata should not be set for a hierarchy image server directly. setMinDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMinDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the min display value for this channel. setMinHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the min height property for the specified regions. setMinimumRepaintSpacingMillis(long) - Method in class qupath.lib.gui.viewer.QuPathViewer. Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. setMinMaxAllowed(float, float) - Method in class qupath.lib.display.Direc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:935689,interface,interface,935689,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interface AutoCloseable. removeMeasurements; void removeMeasurements(String... measurementNames); Remove all the measurements with the specified names. Parameters:; measurementNames - . clear; void clear(); Remove all the measurements from the list. asMap; default Map<String,Number> asMap(); Get a map view of this measurements list. ; This is a map that is backed by the list, which means that putting or retrieving elements ; modifies the list. It also means that there can be some loss of precision if the list does ; not support Double (e.g. it uses a float array for storage).; . Returns:; a map view of this measurement list. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:9157,interface,interface,9157,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['interface'],['interface']
Integrability,"removeAllData); Remove multiple images from the project, optionally including associated data. Parameters:; entries - ; removeAllData - . syncChanges; void syncChanges(); throws IOException; Save the project. Throws:; IOException. getImageList; List<ProjectImageEntry<T>> getImageList(); Get a list of image entries for the project. Returns:. getName; String getName(); Get the name of the project. Returns:. getCreationTimestamp; long getCreationTimestamp(); Request a timestamp from when the project was created. Returns:. getModificationTimestamp; long getModificationTimestamp(); Request a timestamp from when the project was last synchronized. Returns:; See Also:. syncChanges(). getScripts; default ResourceManager.Manager<String> getScripts(); Get a manager for scripts saved within this project. Returns:; See Also:. getResources(String, Class, String). getObjectClassifiers; default ResourceManager.Manager<ObjectClassifier<T>> getObjectClassifiers(); Get a manager for object classifiers saved within this project. Returns:; See Also:. getResources(String, Class, String). getPixelClassifiers; default ResourceManager.Manager<PixelClassifier> getPixelClassifiers(); Get a manager for pixel classifiers saved within this project. Returns:; See Also:. getResources(String, Class, String). getResources; default <S,; R extends S> ResourceManager.Manager<R> getResources(String location,; Class<S> cls,; String ext); Get a manager for objects of a specified class within this project. Type Parameters:; S - ; Parameters:; location - a location relative to the project where the resources should be stored, e.g. ""classifiers/pixel classifiers"".; Projects may use this location in an implementation-dependent way.; cls - class of the resource to return; ext - extension to use with the resource. This is used for determining the type. Usually it should be ""json"".; Returns:; a ResourceManager.Manager for the specified resource, or null if the project does not support the resource or extension. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:8642,depend,dependent,8642,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['depend'],['dependent']
Integrability,"rences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:547485,interface,interface,547485,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface Scrip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6968,interface,interface,6968,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. getTileRequests(RegionRequest) - Method in interface qupath.lib.images.servers.TileRequestManager. Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. getTileRequestsForLevel(int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. getTilesToRequest(ImageServer<?>, Shape, double, int, int, List<RegionRequest>) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). getTileWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of the bounding box for this tile at the tile resolution. getTileWidth() - Method in class qupath.lib.objects.utils.Tiler. Get the width of output tiles. getTileX() - Method in class qupath.lib.images.servers.TileRequest. Get the x-coordinate of the bounding box for this tile at the tile resolution. getTileY() - Method in class qupath.lib.images.servers.TileRequest. Get the y-coordinate of the bounding box for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:535452,interface,interface,535452,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. hasAlpha; protected boolean hasAlpha(). createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:5796,interface,interface,5796,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['interface'],['interface']
Integrability,"resources of different kinds, for example from projects ; or a user directory. RichScriptEditor. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditorExtension. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. RoiEditor. Helper class for interactively modifying existing ROIs. RoiLabeling. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:50347,wrap,wraps,50347,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wraps']
Integrability,"rest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currentl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:51161,interface,interface,51161,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a ne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:5399,interface,interface,5399,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"rface qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator;  ; getStatistic() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing the value corresponding to a time from KaplanMeierData.getAllTimes(). getStatus() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI status. getStatus() - Method in class qupath.lib.plugins.ParallelTileObject. Get the current status (pending, processing or done). getStdDev() - Method in class qupath.lib.analysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(PathObject, String, int) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:522636,interface,interface,522636,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10415,interface,interface,10415,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"rface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4729,interface,interface,4729,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"rface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:11014,interface,interface,11014,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"rface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10008,interface,interface,10008,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"rfaces:; PathTool. public class ExtendedPathTool; extends Object; implements PathTool. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; public void deregisterTool(QuPathViewer vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:1480,interface,interface,1480,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,1,['interface'],['interface']
Integrability,"rface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6004,interface,interface,6004,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"rge images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:3451,depend,depend,3451,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,4,"['depend', 'interface']","['depend', 'interface']"
Integrability,"rgs - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuilder<BufferedImage>; Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:3384,interface,interface,3384,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,15,['interface'],['interface']
Integrability,"rid. void; attachViewerToGrid(QuPathViewer viewer). Attach the specified viewer to the viewer grid, if possible. static ViewerManager; create(QuPathGUI qupath). Create a new instance. protected QuPathViewerPlus; createViewer(). Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). void; detachActiveViewerFromGrid(). Detach the currently active viewer from the viewer grid, if possible. void; detachViewerFromGrid(QuPathViewer viewer). Detach the specified viewer from the viewer grid, if possible. QuPathViewer; getActiveViewer(). Get the value of activeViewerProperty(). ObservableList<QuPathViewer>; getAllViewers(). Get an observable list of viewers. OverlayOptions; getOverlayOptions(). Get the overlay options shared by all viewers created by this manager. Region; getRegion(). Get the region node that can be added to a scene graph to display the viewers. boolean; getSynchronizeViewers(). Gets the value of the synchronizeViewers property. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:2674,synchroniz,synchronizeViewers,2674,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewers']
Integrability,"riented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in interface SimpleModifiableImage; Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getWidth; public int getWidth(); Description copied from interface: SimpleImage; Get the image width. Specified by:; getWidth in interface SimpleImage; Returns:. getHeight; public int getHeight(); Description copied from interface: SimpleImage; Get the image height. Specified by:; getHeight in interface SimpleImage; Returns:. getArray; public float[] getArray(boolean direct); Description copied from interface: SimpleModifiableImage; Request the pixel array representin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:1622,interface,interface,1622,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['interface'],['interface']
Integrability,"riginX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:4317,interface,interface,4317,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ring> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:3988,interface,interface,3988,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"ring path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this method will ; only encode the Query part of the URI (i.e. Fragments, if present, will be ignored ).; ; E.g. ""https://host?query=first|second"" will return ""https://host?query%3Dfirst%7Csecond"". Parameters:; path - ; Returns:; encodedURI; Throws:; URISyntaxException; UnsupportedEncodingException; MalformedURLException. toPath; public static Path toPath(URI uri); Try to identify a Path from a URI, dropping any query or fragment elements.; ; This returns the Path if successful and null otherwise (e.g. if the URI does not correspond to a file). ; There is no check whether the Path exists, and support for an authority is platform-dependent. Parameters:; uri - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces); Convert a double array to string, with a specified number of decimal places.; Trailing zeros are not included. Parameters:; locale - ; array - ; delimiter - ; nDecimalPlaces - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; int nDecimalPlaces); Convert a double array to a String using a space as a delimiter. Parameters:; locale - ; array - ; nDecimalPlaces - ; Returns:. arrayToString; public static String arrayToString(Object[] array,; String delimiter); Convert a String array to a single string, with a specified delimiter string. Parameters:; array - ; delimiter - ; Returns:. splitLines; public static String[] splitLines(String s); Split new lines (in a cross-platform way... i.e. not with s.split(""\n""), which is asking for trouble). Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:15115,depend,dependent,15115,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['depend'],['dependent']
Integrability,"ring text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4181,wrap,wrapText,4181,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,2,['wrap'],"['wrapText', 'wrapTextProperty']"
Integrability,"ring text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2997,message,message,2997,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"rior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8824,interface,interface,8824,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"ription copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractDetectionPlugin; Get all selected objects that are instances of a supported class. Overrides:; getParentObjects in class AbstractDetectionPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:3954,interface,interface,3954,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['interface'],['interface']
Integrability,"ription copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:4828,interface,interface,4828,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['interface'],['interface']
Integrability,"ription copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:4808,interface,interface,4808,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,5,['interface'],['interface']
Integrability,"ription copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:4241,interface,interface,4241,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,3,['interface'],['interface']
Integrability,"ription copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Descri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4963,interface,interface,4963,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"ription copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10134,interface,interface,10134,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"ription of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2356,interface,interface,2356,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"ription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<?",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2493,interface,interface,2493,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"riteImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4191,interface,interface,4191,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"rited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJServerBuilder; public ImageJServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html:2814,interface,interface,2814,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,1,['interface'],['interface']
Integrability,"rited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> ta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2833,interface,interface,2833,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['interface'],['interface']
Integrability,"riter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:4774,interface,interface,4774,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"rkdownStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Markdown syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. String; getBaseStyle(). Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. getBaseStyle; public String getBaseStyle(); Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Specified by:; getBaseStyle in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html:1546,interface,interface,1546,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,5,['interface'],['interface']
Integrability,"rkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:3869,interface,interface,3869,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['interface'],['interface']
Integrability,"rning! This binding is not guaranteed to update its value automatically upon changes to the ; underlying object or data. Parameters:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:6729,interface,interface,6729,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability,"rns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:7720,interface,interface,7720,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"rns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8233,interface,interface,8233,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"rocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:488702,interface,interface,488702,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,roi.EllipseROI;  ; getCentroidX() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidX() - Method in class qupath.lib.roi.AreaROI. Get the x coordinate of the ROI centroid;. getCentroidX() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the ROI centroid. getCentroidX() - Method in class qupath.lib.roi.LineROI;  ; getCentroidX() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getCentroidY() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidY() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidY() - Method in class qupath.lib.roi.AreaROI. Get the y coordinate of the ROI centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getChangedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The objects that were affected by whichever changes were made. getChannel() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the channel to threshold. getChannel() - Method in class qupath.lib.display.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:349247,interface,interface,349247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"roi.GeometryTools. Fill all interior rings for the specified geometry that have an area < a specified threshold. removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Remove a JSON DropHandler. removeListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a hierarchy change listener. removeMeasurements(Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the current image data. removeMeasurements(String...) - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements with the specified names. removeMeasurements(PathObjectHierarchy, Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the specified hierarchy. removeMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Remove a metadata value. removeNames(PathClass, String...) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeNames(PathClass, Collection<String>) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a single object from the hierarchy, firing a remove event. removeObject(PathObject, boolean) - Static method in class qupath.lib.scripting.QP. Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. removeObjects(Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Rem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:846306,interface,interface,846306,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"roid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - ve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:6659,interface,interface,6659,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,rol; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void cl,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7715,interface,interface,7715,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"rollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8578,interface,interface,8578,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,2,['interface'],['interface']
Integrability,"rom interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10071,interface,interface,10071,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"rom interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:9735,interface,interface,9735,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"ropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public DragDropImportListener(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. setupTarget; public void setupTarget(Node target); Prepare a target node to accept drag and drop events. Parameters:; target - . setupTarget; public void setupTarget(Scene target); Prepare a target scene to accept drag and drop events. Parameters:; target - . handle; public void handle(DragEvent event). Specified by:; handle in interface EventHandler<DragEvent>. addFileDropHandler; public void addFileDropHandler(DragDropImportListener.DropHandler<File> handler); Add a new File DropHandler.; ; This may be called on a drag-and-drop application on the main window, if no other ; handler deals with the event. Parameters:; handler - . removeFileDropHandler; public void removeFileDropHandler(DragDropImportListener.DropHandler<File> handler); Remove a File DropHandler. Parameters:; handler - . addJsonDropHandler; public void addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler); Add a new DropHandler specifically for JSON elements.; ; This may be called when a json file is dropped on the main QuPath window.; Handlers should quickly inspect the element and return if they cannot handle it. Parameters:; handler - . removeJsonDropHandler; public void removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler); Remove a JSON DropHandler. Parameters:; handler - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:2453,interface,interface,2453,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,1,['interface'],['interface']
Integrability,"roperty Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:4198,interface,interface,4198,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['interface'],['interface']
Integrability,"roperty for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script that should be run immediately after QuPath's launch. Returns:. showToolBarBadgesProperty; public static BooleanProperty showToolBarBadgesProperty(); Show badges on the toolbar, e.g. to provide messages or warnings. Returns:. hasJavaPreferences; public static boolean hasJavaPreferences(); Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:44956,message,message,44956,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['message'],['message']
Integrability,"roperty representing the currently-open project. ReadOnlyBooleanProperty; readOnly. Property indicating whether QuPath is in 'read-only' mode. BooleanProperty; showAnalysisPane;  ; BooleanProperty; showInputDisplay. Property to indicate whether the input display is currently showing. ReadOnlyObjectProperty<QuPathViewer>; viewer. Property representing the viewer currently active. Field Summary; Fields. Modifier and Type; Field; Description; static final int; TOOLBAR_ICON_SIZE. Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectActio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:1784,depend,depends,1784,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depends']
Integrability,"rorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9895,message,message,9895,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"roviderClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. Type Parameters:; T - ; Parameters:; providerClass - ; uri - ; args - ; Returns:. getURI; public URI getURI(); Get the URI used by this builder. Returns:. getArgs; public String[] getArgs(); Get the args array. This returns a clone of any original array. Returns:. buildOriginal; protected ImageServer<T> buildOriginal(); throws Exception. Specified by:; buildOriginal in class ImageServerBuilder.AbstractServerBuilder<T>; Throws:; Exception. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServerBuilder.ServerBuilder; Get a list of URIs required by this builder.; The purpose is to identify resources that are required. Returns:; See Also:. ImageServerBuilder.ServerBuilder.updateURIs(Map). updateURIs; public ImageServerBuilder.ServerBuilder<T> updateURIs(Map<URI,URI> updateMap); Description copied from interface: ImageServerBuilder.ServerBuilder; Update the URIs required by this builder.; The purpose is to handle resources that may have moved (e.g. files).; Because ServerBuilder should be immutable, this returns a new builder. Parameters:; updateMap - ; Returns:; See Also:. ImageServerBuilder.ServerBuilder.getURIs(). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:3641,interface,interface,3641,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,2,['interface'],['interface']
Integrability,"rrection in this viewer. getGaussianDeriv(double, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGaussianDerivKernel(double, int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Get filter coefficients for a 1D Gaussian (derivative) kernel. getGeoJsonDataFormat() - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Get a DataFormat suitable for storing GeoJSON data on a clipboard. getGeometry() - Method in class qupath.lib.roi.EllipseROI;  ; getGeometry() - Method in class qupath.lib.roi.LineROI;  ; getGeometry() - Method in class qupath.lib.roi.PointsROI;  ; getGeometry() - Method in class qupath.lib.roi.PolylineROI;  ; getGeometry() - Method in class qupath.lib.roi.RectangleROI;  ; getGeometry() - Method in class qupath.lib.roi.AreaROI;  ; getGeometry() - Method in class qupath.lib.roi.GeometryROI;  ; getGeometry() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:397991,interface,interfaces,397991,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"rrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Depre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4292,message,message,4292,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"rs for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1478,wrap,wrapper,1478,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['wrap'],['wrapper']
Integrability,"rs.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401531,interface,interface,401531,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rs.ParameterList. Add an 'empty' parameter, that is one that does not take any values. addEvent(double, boolean) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Insert a new event. addEvents(Collection<KaplanMeierData.KaplanMeierEvent>) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Add a collection of events. addFileDropHandler(DragDropImportListener.DropHandler<File>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Add a new File DropHandler. addFullResolutionLevel() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add the full-resolution image as a level of the pyramid. addGridRow(GridPane, int, int, String, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Add a row of nodes. addGroup(PathObjectConnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Add a new connections group. addImage(ImageServerBuilder.ServerBuilder<T>) - Method in interface qupath.lib.projects.Project. Add an image for a particular ImageServer. addIntensityMeasurements(ImageServer<BufferedImage>, PathObject, double, Collection<ObjectMeasurements.Measurements>, Collection<ObjectMeasurements.Compartments>) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Measure all channels of an image for one individual object or cell. addIntParameter(String, String, int) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter. addIntParameter(String, String, int, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded int parameter, with optional unit and help text. addIntParameter(String, String, int, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter, with optional unit and help text. addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:17031,interface,interface,17031,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rs.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideDisposedException() - Constructor for exception class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException;  ; OpenSlideExtension - Class in qupath.ext.openslide;  ; OpenSlideExtension() - Construct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728734,interface,interface,728734,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rs:; T - . All Superinterfaces:; PathPlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathInteractivePlugin<T>; extends PathPlugin<T>; Interface to define a PathPlugin that requires a list of (user-adjustable) parameters.; ; By using this interface, QuPath is able to show a standardized dialog box within which ; the parameters are set. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Method Details. getDefaultParameterList; ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList.; ; Each time the method is invoked, a new ParameterList should be created. Parameters:; imageData - ; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html:1373,interface,interface,1373,javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,1,['interface'],['interface']
Integrability,"rseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a server for any arbitrary region; rather, ; a server must exist for the specified region and downsample, otherwise this will return null. Parameters:; region - specified region to which the server should correspond (must be found within getRegions()); downsample - specified downsample for the server (must be found within getDownsamples()); Returns:; Throws:; IOException. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html:2444,interface,interface,2444,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,2,['interface'],['interface']
Integrability,"rther details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Write OME-TIFF image to an output stream. Note that this must be able to write the image in-memory first, ; and therefore is not suitable for very large images. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:6017,interface,interface,6017,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"rtsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Write OME-TIFF image to an output stream. Note that this must be able to write the image in-memory first, ; and therefore is not suitable for very large images",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:5695,interface,interface,5695,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"rty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorContr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4247,wrap,wrapTextProperty,4247,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,2,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"rty(). setParallelism(int) - Static method in class qupath.lib.common.ThreadTools. Set the requested level of parallelism. setParameterEnabled(String, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of a parameter by key, to determine if it can be edited. setParameterEnabled(Parameter<?>, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of a parameter, to determine if it can be edited. setPathClass(PathClass) - Method in class qupath.lib.objects.PathObject. Set the classification of the object, without specifying any classification probability. setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathObject. Set the classification of the object, specifying a classification probability. setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathROIObject;  ; setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathRootObject;  ; setPathClasses(Collection<? extends PathClass>) - Method in interface qupath.lib.projects.Project. Update the available PathClasses. setPathClassHidden(PathClass, boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Request that objects with a particular PathClass not be displayed. setPathMemoization(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the directory where memoization files should be written. setPathObject(PathObject) - Method in class qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Set the PathObject to display (may be null). setPenManager(QuPathPenManager.PenInputManager) - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Set the PenInputManager. setPieChartData(PieChart, Map<T, ? extends Number>, Function<T, String>, Function<T, Color>, boolean, boolean) - Static method in class qupath.lib.gui.charts.ChartTools. Set pie chart data from a count map. setPixelClassificationRegionFilter(RegionFilter) - Method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:939975,interface,interface,939975,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. imageDataProperty(). activeViewer; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty). See Also:. getActiveViewer(); setActiveViewer(QuPathViewer); activeViewerProperty(). synchronizeViewers; public ReadOnlyBooleanProperty synchronizeViewersProperty. See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean); synchronizeViewersProperty(). Method Details. create; public static ViewerManager create(QuPathGUI qupath); Create a new instance. Parameters:; qupath - ; Returns:. refreshTitles; public void refreshTitles(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:. showScalebarProperty; public BooleanProperty sho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:5856,synchroniz,synchronizeViewersProperty,5856,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewersProperty']
Integrability,"ructure. PathTool. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers;  ; PathTools. Default PathTool implementations. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassificationOverlay. PathOverlay that gives the results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for pla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:43015,interface,interface,43015,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"rue also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object has a ROI this should not be moved or resized ; (e.g. because child objects depend upon it). Returns:. getChildObjects; public Collection<PathObject> getChildObjects(); Get a collection of child objects.; ; In the current implementation, this is immutable - it cannot be modified directly. Returns:. getChildObjects; public Collection<PathObject> getChildObjects(Collection<PathObject> children); Get a collection containing all child objects. Parameters:; children - optional collection to which the children should be added; Returns:; collection containing all child object (the same as children if provided). getDescendantObjects; public Collection<PathObject> getDescendantObjects(Collection<PathObject> descendants); Get a collection containing all descendant objects. Parameters:; descendants - optional collection to which the descendants should be added; Returns:; collection containing all descendant object (the same as descendants if provided). getChildObjectsAsArray; public PathObject[] getChildObjectsAsArray(); Get a defensive copy of child objects as an arr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:14308,depend,depend,14308,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['depend'],['depend']
Integrability,"rue otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotificati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8075,message,message,8075,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"rvableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3260,message,message,3260,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"rver.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. hasAlpha; protected boolean hasAlpha(). createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:5631,interface,interface,5631,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['interface'],['interface']
Integrability,"rver.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels() was selected. getBoundaryLabels; public Map<PathClass,Integer> getBoundaryLabels(); Get an unmodifiable map of classifications and their corresponding boundary labels, if available.; Note that multiple classifications may use the same integer label. Returns:; a map of boundary labels, or empty map if none are available or useInstanceLabels() was selected. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region.; . Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:5461,interface,interface,5461,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,"rver<BufferedImage>) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Query whether this transform can be applied to the specified image. supportsImage(PixelType, int, boolean) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.PngWriter;  ; supportsImageType(ImageServer<T>) - Method in interface qupath.lib.images.writers.ImageWriter. Test whether images provided by a specified ImageServer can be successfully written. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Tree classifiers in OpenCV support missing values, others do not. supportsMissingValues() - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1007766,interface,interface,1007766,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rverBuilders, one for each image that can be read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:343377,interface,interfaces,343377,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"rverMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the top left of the region bounding box. getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Check for missing features, returning the names and number of input objects missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.Col",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:445603,interface,interface,445603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rvers.ImageChannel. Check if the color is 'transparent'; this is used for background/ignored channels. isTwoPlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""2+"", indicating a moderately-positive staining. isUnbounded() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this neither a lower nor an upper bound constraining valid values. isUndoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isUndoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'undo' can be applied to the control. isUndoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isUnknown() - Method in class qupath.opencv.dnn.DnnShape. Returns true if the shape is unknown. isUnsignedInteger() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is an unsigned integer representation. isURL() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return true if URI has a scheme beginning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:636815,interface,interface,636815,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"rvers.bioformats.BioFormatsServerOptions. Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. getMenu(String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. getMenu(List<Menu>, String, boolean) - Static method in class qupath.lib.gui.tools.MenuTools. Get a reference to an existing menu, optionally creating a new menu if it is not present. getMenuBar() - Method in class qupath.lib.gui.QuPathGUI. Get the menubar for the main QuPath application. getMenuItem() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the menu item corresponding to this command. getMenuPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of the menu containing this command. getMessageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an un",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:440548,message,message,440548,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ry, ImagePlane) - Static method in class qupath.lib.roi.GeometryTools. Convert a JTS Geometry to a QuPath ROI. geometryToShape(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Convert a JTS Geometry to a java.awt.Shape. geq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold. geq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than or equal to threshold between two arrays. GESTURES_ALL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_NONE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ROTATE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_SCROLL - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; GESTURES_ZOOM - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; get(int) - Method in interface qupath.lib.geom.Point. Get the value of the ordinate for the specified dimension. get(int) - Method in class qupath.lib.geom.Point2;  ; get(int) - Method in class qupath.opencv.dnn.DnnShape. Get the length of the specified dimension. get(String) - Method in interface qupath.lib.measurements.MeasurementList. Get value for the measurement with the specified name. get(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Retrieve a resource by name. get2D(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 2D Gaussian scale. get3DAnisotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D anisotropic Gaussian scale. get3DIsotropic(double) - Static method in class qupath.opencv.tools.LocalNormalization.SmoothingScale. Get a 3D isotropic Gaussian scale. getAcceleratorText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:322036,interface,interface,322036,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ryManager. Set the user path where additional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:955076,interface,interface,955076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getManager; public SparseImageServer.SparseImageServerManager getManager(); Get the manager, which defines from whence the regions originate. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:4885,interface,interface,4885,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,2,['interface'],['interface']
Integrability,"s Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Get the x coordinate of the ROI centroid;. double; getCentroidY(). Get the y coordinate of the ROI centroid;. ROI; getConv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:1466,interface,interfaces,1466,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,2,['interface'],"['interface', 'interfaces']"
Integrability,"s ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Other classes that make use of thread pools can use this to help balance multithreading with memory use.; The default value is ForkJoinPool.getCommonPoolParallelism(). Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html:2061,interface,interface,2061,javadoc/docs/qupath/lib/common/ThreadTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html,1,['interface'],['interface']
Integrability,"s an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4111,interface,interface,4111,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"s an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3860,interface,interface,3860,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"s an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:4014,interface,interface,4014,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"s and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:4152,interface,interface,4152,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"s disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class ImageServerMetadata.ChannelType. java.lang.Object; java.lang.Enum<ImageServerMetadata.ChannelType>; qupath.lib.images.servers.ImageServerMetadata.ChannelType. All Implemented Interfaces:; Serializable, Comparable<ImageServerMetadata.ChannelType>, Constable. Enclosing class:; ImageServerMetadata. public static enum ImageServerMetadata.ChannelType; extends Enum<ImageServerMetadata.ChannelType>; Enum representing possible channel (band) types for an image.; The purpose of this is to support images where channels have different interpretations, ; such as probabilities or classifications. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Each channel represents a classification, such as in a labelled image. DEFAULT. Default channel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageServerMetadata.ChannelType[]; values(). Returns an array co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html:1052,interface,interfaces,1052,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,1,['interface'],['interfaces']
Integrability,"s disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html:1235,interface,interface,1235,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,2,['interface'],['interface']
Integrability,"s equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help clean up after some forgotten servers. Overrides:; finalize in class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untruste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:7159,interface,interface,7159,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"s qupath.imagej.tools.PixelImageIJ;  ; getArray(boolean) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Request the pixel array representing all the pixels in this image, returned row-wise. getAssociatedImage(String) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImage(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImage(String) - Method in interface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImageList() - Method in interface qupath.lib.images.servers.ImageServer. Get a list of 'associated images', e.g. getAssociatedImageList() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImages() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a list of all associated image names. getAtRisk(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number at risk at a specified time. getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.CssLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.JsonLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.PlainLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:331268,interface,interface,331268,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.getInstance(String, Integer) or ; PathClass.fromString(String, Integer). getPathClass(String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name and color. getPathClass(String, String...) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). getPathClass(List<String>) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.fromCollection(java.util.Collection). getPathClass(PathClassFactory.StandardPathClasses) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. getPathClassColor(PathClass) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color appropriate for displaying a PathClass. getPathClasses() - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the classifications set by this classifier. getPathClasses() - Method in interface qupath.lib.projects.Project. Get an unmodifiable list representing the PathClasses associated with this project. getPathClasses() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getPathClassUnclassified() - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. getPathMemoization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:479786,interface,interface,479786,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be di",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:2789,interface,interface,2789,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"s supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenslideServerBuilder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typical",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:2601,interface,interface,2601,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,2,['interface'],['interface']
Integrability,"s the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10002,interface,interface,10002,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"s the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5362,interface,interface,5362,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"s tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:5062,interface,interface,5062,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['interface'],['interface']
Integrability,"s true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3569,interface,interface,3569,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"s true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10481,interface,interface,10481,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"s unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8479,interface,interface,8479,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"s() - Method in class qupath.lib.gui.viewer.ViewerManager. Gets the value of the synchronizeViewers property. getSyntaxFromName(String) - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get a script syntax from a specified language name. getT() - Method in class qupath.lib.images.servers.TileRequest. Get the time point index for this request. getT() - Method in class qupath.lib.regions.ImagePlane. Get the time point index. getT() - Method in class qupath.lib.regions.ImageRegion. Get the time point index for the region. getT() - Method in class qupath.lib.roi.AreaROI;  ; getT() - Method in class qupath.lib.roi.EllipseROI;  ; getT() - Method in class qupath.lib.roi.GeometryROI;  ; getT() - Method in class qupath.lib.roi.LineROI;  ; getT() - Method in class qupath.lib.roi.PointsROI;  ; getT() - Method in class qupath.lib.roi.PolygonROI;  ; getT() - Method in class qupath.lib.roi.PolylineROI;  ; getT() - Method in class qupath.lib.roi.RectangleROI;  ; getT() - Method in interface qupath.lib.roi.interfaces.ROI. Get time point index. getTable() - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:528896,interface,interface,528896,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. getClassProbability() - Method in class qupath.lib.objects.PathObject. Request the classification probability, or Double.NaN if no probability is available. getClassProbability() - Method in class qupath.lib.objects.PathROIObject;  ; getClassProbability() - Method in class qupath.lib.objects.PathRootObject;  ; getClipboardText(boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getClusters(BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get clusters of connected objects, where connections are made between neighboring objects that meet the specified predicate. getColor() - Method in class qupath.lib.color.StainVector. Get a Color that (roughly) corresponds to color represented by this stain vector. getColor() - Method in interface qupath.lib.display.ChannelDisplayInfo. Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. getColor() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getColor() - Method in class qupath.lib.display.settings.ChannelSettings. Get the color used to display the channel, or null if a color is not relevant. getColor() - Method in class qupath.lib.images.servers.ImageChannel. Color used to display the output channel. getColor() - Method in class qupath.lib.objects.classes.PathClass. Get the color that should be used to display objects with this classification. getColor() - Method in class qupath.lib.objects.PathObject. Return any stored color as a packed RGB value. getColor(double, double, double) - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get a packed ARGB representation of the (interpolated) color at the specified value,. getColorDeconvolutionStains() - Method in class qupath.lib.images.ImageData. Get the stains defined fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:355007,interface,interface,355007,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. dumpMetadata; public String dumpMetadata(); Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. Returns:. getServerType; public String getServerType(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:3701,depend,depend,3701,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,2,['depend'],['depend']
Integrability,"s. Classes to aid with analysis. qupath.lib.analysis.algorithms - package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features - package qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps - package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images - package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats - package qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival - package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common - package qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers - package qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object - package qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel - package qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color - package qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common - package qupath.lib.common. General-purpose helper classes. qupath.lib.display - package qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings - package qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels - package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg - package qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:807696,interface,interfaces,807696,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"s. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractDetectionPlugin; Get all selected objects that are instances of a supported class. Overrides:; getParentObjects in class AbstractDetectionPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<BufferedImage>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:5067,interface,interface,5067,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,2,['interface'],['interface']
Integrability,"s. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:4794,interface,interface,4794,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"s.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4999,interface,interface,4999,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"s.ActionTools. Add an Action to the properties of a MenuItem, so that it may be retrieved later. putActionProperty(Node, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a Node, so that it may be retrieved later. putAll(Map<String, ? extends Number>) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified map into this list. putAll(MeasurementList) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified list into this one. putMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.put(String, double). putMeasurement(Measurement) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. putMetadataValue(String, String) - Method in interface qupath.lib.objects.MetadataStore. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a byte array. pyramidalize(ImageServer<BufferedImage>, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid. pyramidalizeTiled(ImageServer<BufferedImage>, int, int, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. PYTHON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.Script",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:802024,interface,interface,802024,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s.Actions;  ; saveAnnotationMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save annotation measurements for the current image. saveAnnotationMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save annotation measurements for the specified image. saveChannelColorProperties() - Method in class qupath.lib.display.ImageDisplay. Save color channels in the ImageData properties. saveDetectionMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the current image. saveDetectionMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the specified image. savedName(StringProperty) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Property to store the saved name; this is useful if the name is required externally. saveImageData(ImageData<T>) - Method in interface qupath.lib.projects.ProjectImageEntry. Save the ImageData for this entry using the default storage location for the project. saveImageMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the current image. saveImageMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the specified image. saveMeasurements(Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the current image for objects of a fixed type. saveMeasurements(ImageData<?>, Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the specified image for objects of a fixed type. savePreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Save the preferences. SaveResourcePaneBuilder<T> - Class in qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:881603,interface,interface,881603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,s.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:452505,interface,interface,452505,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453849,interface,interface,453849,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s.MeasurementExporter. Returns the list of columns to exclude from export. getExcludeOutsideRange() - Method in class qupath.lib.gui.tools.MeasurementMapper. Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. getExpandToWindow() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Query whether the image is allowed to expand beyond its preferred width and height to fill the window. getExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get filename extension. getExtension(String) - Static method in class qupath.lib.common.GeneralTools. Get extension from a filename. getExtensionManager() - Method in class qupath.lib.gui.QuPathGUI. Get an ExtensionManager to facilitating working with extensions. getExtensions() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getExtensions() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getExtensions() - Method in interface qupath.lib.images.writers.ImageWriter. Get the file extensions used by the image writer. getExtensions() - Method in class qupath.lib.images.writers.JpegWriter;  ; getExtensions() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getExtensions() - Method in class qupath.lib.images.writers.PngWriter;  ; getExtensions() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get an unmodifiable set containing the possible extensions for this language. getExtensionsDirectory() - Method in class qupath.lib.gui.ExtensionClassLoader. Directory containing extensions. getExtensionsPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where extensions should be stored. getEyeFixatedIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getEyePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getFailedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:390586,interface,interface,390586,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11232,interface,interface,11232,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"s.openslide.OpenslideServerBuilder;  ; getImageWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of the bounding box for this tile in the full resolution image. getImageX() - Method in class qupath.lib.images.servers.TileRequest. Get the x-coordinate of the bounding box for this tile in the full resolution image. getImageY() - Method in class qupath.lib.images.servers.TileRequest. Get the y-coordinate of the bounding box for this tile in the full resolution image. getImportStatementGenerator() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get an DefaultScriptLanguage.ImportStatementGenerator. getImportStatementGenerator() - Method in class qupath.lib.gui.scripting.languages.GroovyLanguage;  ; getImportStatements(Collection<Class<?>>) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get the import statements as a String, to add at the beginning of the executed script. getImportStatments(Collection<Class<?>>) - Method in interface qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator;  ; getIncludeChildren() - Method in class qupath.lib.io.FeatureCollection. If true, include child objects nested within the output. getIncludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:411384,interface,interface,411384,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Returns true if the array wrapper only supports integer values. isInteractive() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Returns the value of ChartThresholdPane.isInteractiveProperty(). isInteractiveProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Property indicating whether thresholds can be adjusted interactively. isInterleaved(boolean) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; isLastFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the specified frame is the last one recorded. isLine() - Method in class qupath.lib.roi.AreaROI;  ; isLine() - Method in class qupath.lib.roi.EllipseROI;  ; isLine() - Method in class qupath.lib.roi.GeometryROI;  ; isLine() - Method in class qupath.lib.roi.LineROI;  ; isLine() - Method in class qupath.lib.roi.PointsROI;  ; isLine() - Method in class qupath.lib.roi.PolygonROI;  ; isLine() - Method in class qupath.lib.roi.PolylineROI;  ; isLine() - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:624666,wrap,wrapper,624666,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,"s.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class qupath.lib.geom.Point2. Point constructor. PointIO - Class in qupath.lib.io. Helper class for reading/writing point objects in terms of their x,y coordinates. PointIO() - Constructor for class qupath.lib.io.PointIO;  ; pointRadius - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pointRadiusProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Radius of the circle used to draw individual points in a point annotation (in pixels). POINTS - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Points annotation and counting tool. POINTS_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:770343,interface,interface,770343,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"s:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageW",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:5019,interface,interface,5019,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"s:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Descripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8032,interface,interface,8032,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"s:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:1425,interface,interface,1425,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,1,['interface'],['interface']
Integrability,"sampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:5562,interface,interface,5562,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:4935,interface,interface,4935,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"scription copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:11176,interface,interface,11176,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"scription copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:9800,interface,interface,9800,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"scription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in class qupath.lib.gui.BuildInfo. Get reference to the latest git commit, if known, or null if this has not be preserved. getLayout() - Method in class qupath.opencv.dnn.DnnModelParams. Get a string representing the axes layout that the model expects as input. getLength() - Method in class qupath.lib.roi.EllipseROI;  ; getLength() - Method in class qupath.lib.roi.RectangleROI;  ; getLength() - Method in class qupath.lib.roi.AreaROI;  ; getLength() - Method in class qupath.lib.roi.GeometryROI;  ; getLength() - Method in interface qupath.lib.roi.interfaces.ROI. Get ROI length. getLength() - Method in class qupath.lib.roi.LineROI;  ; getLength() - Method in class qupath.lib.roi.PointsROI;  ; getLength() - Method in class qupath.lib.roi.PolygonROI;  ; getLength() - Method in class qupath.lib.roi.PolylineROI;  ; getLevel() - Method in class qupath.lib.images.servers.TileRequest. Get the resolution level. getLevel() - Method in class qupath.lib.objects.PathObject. The level of the object in a hierarchy. getLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get resolution information for a specified pyramidal level. getLevel0Height() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the height of the full-resolution image (level 0). getLevel0Width() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the width of the full-resolution image (level 0). getLevelCount() - Method in class qupath.lib.images.servers.openslide.jna.OpenSl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:426621,interface,interface,426621,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"scription; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in interface SimpleModifiableImage; Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getWidth; public int getWidth(); Description copied from interface: SimpleImage; Get the image width. Specified by:; getWidth in interface SimpleImage; Returns:. getHeight; public int getHeight(); Description copied from interface: SimpleImage; Get the image height. Specified by:; getHeight in interface SimpleImage; Returns:. getArray; public float[] getArray(boolean direct); Description copied from interface: SimpleModifiableImage; Request the pixel array representing all the pixels in this image, returned row-wise. Specified by:; getArray in interface SimpleModifiableImage; Parameters:; direct - if tr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:1717,interface,interface,1717,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['interface'],['interface']
Integrability,"seArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:3207,interface,interface,3207,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['interface'],['interface']
Integrability,seVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:451775,interface,interface,451775,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6383,interface,interface,6383,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"sect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:2847,interface,interface,2847,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,1,['interface'],['interface']
Integrability,"sed for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any preprocessing steps that should be applied. getPressure() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Returns a pressure value, between 0 and 1. getPreviousSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getPreviousURI() - Method in interface qupath.lib.projects.Project. Sometimes projects move (unfortunately). getProbabilityColorModel32Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. getProbabilityColorModel8Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels. getProbabilityThreshold(WritableRaster) - Static method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get a suitable threshold assuming a raster contains probability values. getProject() - Method in class qupath.lib.gui.Q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:491086,interface,interface,491086,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"sed on the packed RGB values in an Integer. getColorWithOpacity(Color, double) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Derived a Color from an existing one, setting the alpha component to match the desired opacity. getColorWithOpacityFX(Integer, double) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. getCommandPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a string representation of the menu path for this command, including the menu path and the text. getCommonActions() - Method in class qupath.lib.gui.QuPathGUI. Get the common actions associated with this QuPath instance. getComparator() - Static method in class qupath.lib.scripting.languages.AutoCompletions. Get a comparator to order completions. getCompatibleObjects(ImageData<T>) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; getCompatibleObjects(ImageData<T>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the objects from an ImageData that are compatible with this classifier. getCompatibleWriters(Class<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:359179,interface,interface,359179,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"sed to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String). getImageJInstance; public static ImageJ getImageJInstance(); Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). Returns:; an ImageJ instance, or null if ImageJ could not be started. extractROI; public static PathImage<ImagePlus> extractROI(ImageServer<BufferedImage> server,; ROI pathROI,; RegionRequest request,; boolean setROI); throws IOException; Extract a region of interest from an image as an ImageJ ImagePlus. Parameters:; server - the image; pathROI - ; request - ; setROI - true if a ROI should be converted to the closest matching ImageJ Roi & set on the image, false otherwise; Returns:; an ImagePlus wrapped in a PathImage to give additional calibration information; Throws:; IOException. extractROI; public static PathImage<ImagePlus> extractROI(ImageServer<BufferedImage> server,; PathObject pathObject,; RegionRequest request,; boolean setROI); throws IOException; Similar to extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI).; Specifically, if a TMA core is passed as a parent, then the core name will be included in the title. Parameters:; server - ; pathObject - ; request - ; setROI - ; Returns:; Throws:; IOException; See Also:. extractROI(ImageServer, ROI, RegionRequest, boolean). extractROIWithOverlay; public static PathImage<ImagePlus> extractROIWithOverlay(ImageServer<BufferedImage> server,; PathObject pathObject,; PathObjectHierarchy hierarchy,; RegionRequest request,; boolean setROI,; OverlayOptions options); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:4880,wrap,wrapped,4880,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['wrap'],['wrapped']
Integrability,"server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:3303,interface,interface,3303,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['interface'],['interface']
Integrability,"server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:2876,interface,interface,2876,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,2,['interface'],['interface']
Integrability,"servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Thro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:6241,interface,interface,6241,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"ses and Interfaces. SEARCH. Package qupath.opencv.ml. package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. Classes. Class; Description; BioimageIoTools. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. OpenCVClassifiers. QuPath wrappers for OpenCV classifiers, which are instances of StatModel. OpenCVClassifiers.BoostClassifier. Classifier based on Boost. OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. OpenCVClassifiers.EMClusterer. Clusterer based on EM. OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html:1346,wrap,wrappers,1346,javadoc/docs/qupath/opencv/ml/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/package-summary.html,3,"['Wrap', 'wrap']","['Wrapper', 'wrappers']"
Integrability,"setExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classify",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2463,interface,interface,2463,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['interface'],['interface']
Integrability,"setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:3917,depend,depending,3917,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['depend'],['depending']
Integrability,"settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(Boolean value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:4252,interface,interface,4252,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability,"settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4967,interface,interface,4967,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"shCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:3593,interface,interface,3593,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['interface'],['interface']
Integrability,"shCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:3444,interface,interface,3444,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"sholding. Generate a QuPath ROI by thresholding an image channel image. thresholdToROI(Raster, double, double, int, TileRequest) - Static method in class qupath.imagej.processing.SimpleThresholding. Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest. thumbnailCache - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; TiffWriterIJ - Class in qupath.imagej.images.writers. ImageWriter implementation to write TIFF images using ImageJ. TiffWriterIJ() - Constructor for class qupath.imagej.images.writers.TiffWriterIJ;  ; tile(int, int) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a default tiler to use, with a specified tile size. tile(TileRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the tile relevant for processing. tileAvailable(String, ImageRegion, BufferedImage) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; tileAvailable(String, ImageRegion, T) - Method in interface qupath.lib.gui.images.stores.TileListener. Notify a listener that an image tile has been received read & is available. tileBrush - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; tileCache - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; tileCachePercentageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested percentage of available memory to use for tile caching. TileClassificationsToAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to merge classified tiles into annotation objects. TileClassificationsToAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; TileExporter - Class in qupath.lib.images.writers. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1024730,interface,interface,1024730,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"sholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Nega",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102041,depend,depending,102041,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability,"sificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output).; ; If the input is a processor that is already known to have this behavior, it is returned unchanged. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; processor - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:8392,wrap,wrapInPointerScope,8392,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,2,['wrap'],['wrapInPointerScope']
Integrability,"sifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:3410,interface,interface,3410,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['interface'],['interface']
Integrability,"sion. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.lib.roi.AreaROI;  ; getImagePlane() - Method in class qupath.lib.roi.EllipseROI;  ; getImagePlane() - Method in class qupath.lib.roi.GeometryROI;  ; getImagePlane() - Method in class qupath.lib.roi.LineROI;  ; getImagePlane() - Method in class qupath.lib.roi.PointsROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolygonROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolylineROI;  ; getImagePlane() - Method in class qupath.lib.roi.RectangleROI;  ; getImagePlane() - Method in interface qupath.lib.roi.interfaces.ROI. Get the ImagePlane, which contains the values for c, z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the region store used by t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:407850,interface,interfaces,407850,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"sis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1067819,interface,interface,1067819,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"slide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideDisposedException() - Constructor for exception class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728631,interface,interface,728631,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request wordwrap. wrapTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; write(JsonWriter, ColorTransforms.ColorTransform) - Method in class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; write(JsonWriter, T) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; writeClassifier(ObjectClassifier<T>, Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Write the classifier to a file. writeClassifier(PixelClassifier, Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Write a pixel classifier to a file. writeDensityMapImage(String, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a density map to the current image image. writeDens",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1111094,wrap,wrapping,1111094,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapping']
Integrability,"so:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4483,message,message,4483,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"sociated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> ser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:4511,interface,interface,4511,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"solveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - ; transform - ; Since:; v0.4.0. resetTMAMetadata; public static void resetTMAMetadata(boolean includeMeasurements); Remove all TMA metadata from the current TMA grid. Parameters:; includeMeasurements - remove measurements in addition to textual metadata. resetTMAMetadata; public static void resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements); Remove all TMA metadata from the TMA grid of the specified hierarchy. Parameters:; hierarchy - ; includeMeasurements - remove measurements in addition to textual metadata. relabelTMAGrid; public static boolean relabelTMAGrid(PathObjectHierarchy hierarchy,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst); Relabel a TMA grid. This will only be effective if enough labels are supplied for the full grid - otherwise no changes will be made.; ; For a TMA core at column c and row r, the label format will be 'Hc-Vr' or 'Hc-Vr', where H is the horizontal label and V the vertical label, ; depending upon the status of the 'rowFirst' flag.; ; An examples of label would be 'A-1', 'A-2', 'B-1', 'B-2' etc. Parameters:; hierarchy - The hierarchy containing the TMA grid to be relabelled.; labelsHorizontal - A String containing labels for each TMA column, separated by spaces, or a numeric or alphabetic range (e.g. 1-10, or A-G); labelsVertical - A String containing labels for each TMA row, separated by spaces, or a numeric or alphabetic range (e.g. 1-10, or A-G); rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; Returns:; true if there were sufficient horizontal and vertical labels to label the entire grid, false otherwise. relabelTMAGrid; public static boolean relabelTMAGrid(String labelsHorizontal,; String labelsVertical,; boolean rowFirst); Relabel the current TMA grid. See relabelTMAGrid(PathObjectHierarchy, String, String, boolean). Parameters:; labelsHorizontal - ; labelsVer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:78703,depend,depending,78703,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability,"sonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:381373,interface,interface,381373,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method in class qupath.lib.gui.viewer.ViewerManager. Match the display resolutions (downsamples) of all viewers to match the current viewer. matToBufferedImage(Mat) - Static method in class qupath.opencv.tool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:673659,interface,interface,673659,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Descript",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11290,interface,interface,11290,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuild",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:3258,interface,interface,3258,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,3,['interface'],['interface']
Integrability,"splay in the QuPath viewer; Returns:; Throws:; IOException. extractOverlay; public static Overlay extractOverlay(PathObjectHierarchy hierarchy,; RegionRequest request,; OverlayOptions options,; Predicate<PathObject> filter); Extract an ImageJ overlay for the specified region. Parameters:; hierarchy - ; request - ; options - options to control which objects are being displayed; filter - optional additional filter used to determine which objects will be included (may be used in combination with options); Returns:. getImageJIcon; public static Image getImageJIcon(int width,; int height); Try to read the ImageJ icon from its jar. Parameters:; width - ; height - ; Returns:. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:7575,interface,interface,7575,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,6,['interface'],['interface']
Integrability,"splay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gui.actions.menus;  ; AnalyzeMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; and(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise AND of two arrays. and(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through AND. andThen(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one. annotatedCentroidTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles without any annotations over the tile centroid should be included. annotatedTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles that do not overlap with any annotations should be included. ANNOTATION_COPY_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ANNOTATION_DUPLICATE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; annotationActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; AnnotationActions() - Cons",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:37519,interface,interface,37519,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"square or rectangle (unrotated). red(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit red value from a packed RGB value. Red - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel only. RED - Static variable in class qupath.lib.common.ColorTools. Packed int representing red. RED - Static variable in class qupath.lib.images.servers.ImageChannel. Default red channel for RGB images. Red_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red chromaticity value, red / max(1, red + green + blue). Red_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel optical densities. redChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). redo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; redo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request redo. redo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; REDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; redoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; redoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'redo' the last 'undone' hierarchy change for the current active viewer. RefineAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. RefineAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; refineAreas(Geometry, double, double) - Static method in class qupath.lib.roi.GeometryTools. Remove small fragments and fill small interior rings within a Geometry. refineColorDeconvolutionStains(int[], ColorDeconvolutionStains, double, double) - Static method in class qupath.lib.color.Colo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:832638,interface,interface,832638,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ss for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Fil",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:21914,wrap,wraps,21914,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wraps']
Integrability,"ss qupath.lib.analysis.DelaunayTools.Subdivision. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.lib.roi.AreaROI;  ; getImagePlane() - Method in class qupath.lib.roi.EllipseROI;  ; getImagePlane() - Method in class qupath.lib.roi.GeometryROI;  ; getImagePlane() - Method in class qupath.lib.roi.LineROI;  ; getImagePlane() - Method in class qupath.lib.roi.PointsROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolygonROI;  ; getImagePlane() - Method in class qupath.lib.roi.PolylineROI;  ; getImagePlane() - Method in class qupath.lib.roi.RectangleROI;  ; getImagePlane() - Method in interface qupath.lib.roi.interfaces.ROI. Get the ImagePlane, which contains the values for c, z and t in a single object. getImagePlane(Roi, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Get the ImagePlane of an ImageJ Roi, based upon its stored positions. getImageRegion() - Method in interface qupath.lib.images.PathImage. The region within the (original, possibly larger) image that this particular image corresponds to. getImageRegion(Rectangle, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a specified Rectangle bounding box. getImageRegion(Shape, int, int) - Static method in class qupath.lib.awt.common.AwtTools. Create an ImageRegion corresponding to a the bounding box of a Shape. getImageRegionStore() - Method in class qupath.lib.gui.QuPathGUI. Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. getImageRegionStore() - Method in class qupath.lib.gui.viewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:407825,interface,interface,407825,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ss qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installGroovyCommand(String, String) - Method in class qupath.lib.gui.QuPathGUI. Install a Groovy script as a new command in QuPath. installImageDataCommand(String, Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath that takes the current ImageData as input. installInfoMessage(Action, ObjectExpression<InfoMessage>) - Static method in class qupath.lib.gui.actions.ActionT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:607994,interface,interface,607994,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ss qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1068524,interface,interface,1068524,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ss qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103662,message,message,1103662,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:4063,interface,interface,4063,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,2,['interface'],['interface']
Integrability,"ssage. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2882,message,message,2882,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"ssifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. tRange(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the range of timepoints to process. TRANSFER_ANNOTATION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; transform(AffineTransform) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply an AffineTransform to the server. transformAllObjects(AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all selected objects in the current hierarchy. transformAllObjects(PathObjectHierarchy, AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all selected objects in the specified hierarchy. TransformedServerBuilder - Class in qupath.lib.images.servers. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformedServerBuilder(ImageServer<BufferedImage>) - Constructor for class qupath.lib.images.servers.TransformedServerBuilder. Create a transformed ImageServer. TransformingImageServer<T> - Class in qupath.lib.images.servers. An ImageServer implementation used to apply transforms to another ImageServer. TransformingImageServer(ImageServer<T>) - Constructor for class qupath.lib.images.servers.TransformingImageServer;  ; transformObject(PathObject, AffineTransform, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Create a transformed version of a PathObject with a new ID. transformObject(PathObject, AffineTransform, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Create a transformed version of a PathObject, optionally with a new ID. transformObjectRecursive(PathObject, AffineTransform, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Create (optionally) tran",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1050003,wrap,wrapped,1050003,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapped']
Integrability,"ssing.RoiLabeling. Convert a traced outline from the ImageJ Wand into a PolygonRoi. wandType - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; wandTypeProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Construct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103242,message,message,1103242,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ss qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get all selected objects that are instances of a supported class. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:2302,interface,interface,2302,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,2,['interface'],['interface']
Integrability,"ss qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anyth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:3066,interface,interface,3066,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['interface'],['interface']
Integrability,"st is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; pub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10352,interface,interface,10352,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"st required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9770,interface,interface,9770,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"st); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. getMetadataStore; public OMEPyramidStore getMetadataStore(); Get the MetadataStore, as used by Bio-Formats. This can be used to query metadata values not otherwise accessible. Returns:. dumpMetadata; public String dumpMetadata(); Retrieve a string representation of the metadata OME-XML. Returns:. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImage in class AbstractImageServer<BufferedImage>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getFile; public File getFile(); Get the underlying file. Returns:. getOriginalMetadata; public ImageServerMetadata getOrigin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:6608,interface,interface,6608,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['interface'],['interface']
Integrability,"st,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a specified data column. Parameters:; column - the name of the column to show. parameterChanged; public void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Description copied from interface: ParameterChangeListener; Notify listener that a parameter value has changed. Specified by:; parameterChanged in interface ParameterChangeListener; Parameters:; parameterList - list containing the parameter; key - key to identify the parameter; isAdjusting - if the parameter is in the process of being changed. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:2952,interface,interface,2952,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,2,['interface'],['interface']
Integrability,"stValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:3589,interface,interface,3589,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using areas or bars. HistogramChart.CountsTransformMode; getCountsTransform(). Get the current counts transform. HistogramChart.DisplayMode; getDisplayMode(). Get the histogram display mode. boolean; getHideIfEmpty(). Query whether the chart is automatically hidden (visibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(Histogr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:5040,wrap,wrap,5040,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['wrap'],['wrap']
Integrability,"static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10130,message,message,10130,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"sting selection. replaceSelection(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; replaceSelection(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; replaceValues(Mat, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Replace a specific value in an array. requestAutomaticUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request an automated update check in a background thread. requestCancelDirection(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Requests that the viewer cancels either the x- or y-axis direction. requestDecelerate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that a viewer decelerate any existing panning smoothly. requestedPixelSize(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a pixel size in calibrated units. requestFocus() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFocus() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the control is focused. requestFocus() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; requestFollowCaret() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFollowCaret() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the X and Y scrolls are adjusted to ensure the caret is visible. requestFullUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request a manual update check in a background thread. requestHierarchyUpdate() - Method in class qupath.lib.plugins.AbstractPlugin. Optionally request a hierarchy update after the tasks have run. requestImageTile(ImageServer<BufferedImage>, RegionRequest, Map<RegionRequest, BufferedImage>, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Request an image tile. requestLazyInitialize() - Method in class qupath.opencv.dnn.DnnModelParams. Request that",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:857038,interface,interface,857038,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"stogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.lib.images.writers.JpegWriter;  ; getImageClass() - Method in class qupath.lib.images.writers.PngWriter;  ; getImageClass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:403728,interface,interface,403728,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"stored units. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel height in microns, if available - or Double.NaN otherwise. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel height in microns, or Double.NaN if this is unknown. getPixelHeightUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel height unit. getPixelLayer(ImageData<?>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Request the pixel layer from an ImageData. getPixels(SimpleImage, boolean) - Static method in class qupath.lib.analysis.images.SimpleImages. Get the pixel values for the image. getPixelSize() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the requested pixel size for the density map. getPixelType() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getPixelType() - Method in interface qupath.lib.images.servers.ImageServer. The bit-depth and type of the image. getPixelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns the bit-depth for individual pixels in the image. getPixelValue(int, ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method. getPixelValue(int, ColorTransformer.ColorTransformMethod, ColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method, with color deconvolution stains provided. getPixelWidth() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel width, in the stored units. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel width in micro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:484052,interface,interface,484052,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"st params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:4082,interface,interface,4082,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['interface'],['interface']
Integrability,"t a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:32230,interface,interface,32230,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"t based on pixel classification. PixelClassificationMeasurementManager(ImageServer<BufferedImage>) - Constructor for class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Constructor. PixelClassificationOverlay - Class in qupath.lib.gui.viewer.overlays. PathOverlay that gives the results of pixel classification. PixelClassifier - Interface in qupath.lib.classifiers.pixel. Interface defining a pixel classifier. PixelClassifierCommand - Class in qupath.process.gui.commands. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierCommand() - Constructor for class qupath.process.gui.commands.PixelClassifierCommand;  ; PixelClassifierMetadata - Class in qupath.lib.classifiers.pixel. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder - Class in qupath.lib.classifiers.pixel. Builder to create PixelClassifierMetadata objects. PixelClassifierPane - Class in qupath.process.gui.commands.ml. Main user interface for interactively training a PixelClassifier. PixelClassifierPane(QuPathGUI) - Constructor for class qupath.process.gui.commands.ml.PixelClassifierPane. Constructor. PixelClassifiers - Class in qupath.opencv.ml.pixel. Static methods and classes for working with pixel classifiers. PixelClassifiers() - Constructor for class qupath.opencv.ml.pixel.PixelClassifiers;  ; PixelClassifierTools - Class in qupath.opencv.ml.pixel. Helper methods for working with pixel classification. PixelClassifierTools() - Constructor for class qupath.opencv.ml.pixel.PixelClassifierTools;  ; PixelClassifierTools.CreateObjectOptions - Enum Class in qupath.opencv.ml.pixel. Options when creating objects from a pixel classifier. PixelClassifierTraining - Class in qupath.process.gui.commands.ml. Helper class for training a pixel classifier. PixelClassifierTraining(ImageDataOp) - Constructor for class qupath.process.gui.commands.ml.PixelClassifierTraining. Create a new pixel classifier helper, to support generating training data",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:764750,interface,interface,764750,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"t be displayed with others. isAdditive() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isAncestor(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Query if one object is the ancestor of another. isAncestorOf(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class is equal to the specified child class, ; or an ancestor of that class. isAnnotation() - Method in class qupath.lib.objects.PathObject. Returns true if the object is an annotation. isArea() - Method in class qupath.lib.roi.AreaROI;  ; isArea() - Method in class qupath.lib.roi.EllipseROI;  ; isArea() - Method in class qupath.lib.roi.GeometryROI;  ; isArea() - Method in class qupath.lib.roi.LineROI;  ; isArea() - Method in class qupath.lib.roi.PointsROI;  ; isArea() - Method in class qupath.lib.roi.PolygonROI;  ; isArea() - Method in class qupath.lib.roi.PolylineROI;  ; isArea() - Method in class qupath.lib.roi.RectangleROI;  ; isArea() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI encloses an area. isBigTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a BigTIFF image. isBrightfield() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to brightfield. isBrightnessContrastRescaled() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isBrightnessContrastRescaled() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. isCancelled() - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; isCancelled() - Method in interface qupath.lib.plugins.TaskRunner. Query if the plugin can be cancelled while running. isCell() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a cell object (a special type of d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:615151,interface,interface,615151,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"t constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3060,interface,interface,3060,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,1,['interface'],['interface']
Integrability,"t doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. ExecutableLanguage. Functional interface for scripting languages that are runnable (e.g. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExtendedPathTool;  ; ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. ExtensionsMenuActions;  ; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T>. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors. Helper class for extracting features from objects, used along with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing anno",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:17481,wrap,wrap,17481,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrap']
Integrability,"t from a file. readObjectsFromClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.InteractiveObjectImporter. Try to read objects from the system clipboard. readObjectsFromGeoJSON(InputStream) - Static method in class qupath.lib.io.PathIO. Read a list of PathObject from an input stream. readOnlyProperty() - Method in class qupath.lib.gui.QuPathGUI. Property indicating whether QuPath is in 'read-only' mode. readPatch(ImageServer<BufferedImage>, ROI, double, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size and using zero-padding if required. readPatch(ImageServer<BufferedImage>, ROI, double, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size. readPathObjects() - Method in class qupath.imagej.images.servers.ImageJServer;  ; readPathObjects() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readPathObjects() - Method in interface qupath.lib.objects.PathObjectReader. Read a collection of objects from the source. readPoints(File) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a file. readPoints(InputStream) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a stream. readPointsObjectList(File) - Static method in class qupath.lib.io.PointIO. Deprecated. readRegion(double, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region from the default ImagePlane (i.e. readRegion(double, int, int, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region for a specified z-plane and timepoint. readRegion(RegionRequest) - Method in class qupath.imagej.images.servers.ImageJServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readRegion(RegionRequest) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:826671,interface,interface,826671,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"t has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationString; public String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Description copied from interface: PathOverlay; Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Specified by:; getLocationString in interface PathOverlay; Overrides:; getLocationString in class AbstractOverlay; Parameters:; imageData - ; x - x-coordinate, in the image space (not the viewer component space); y - y-coordinate, in the image space (not the viewer component space); z - z-index for the region currently being viewed; t - t-index for the region currently being viewed; Returns:. getDefaultLocationString; public static String getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t); Default method for getting a location string from an ImageServer using cached tiles.; If tiles are not cached, no string is returned.; ; May be used by classes implementing PathOverlay.getLocationString(ImageData, double, double, int, int). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; location String based upon pixel values and cached tiles, or null if no String is available. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:10810,interface,interface,10810,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['interface'],['interface']
Integrability,"t of a hierarchy with a root). getAncestorTMACore(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. getAnnotatedActions(Object) - Static method in class qupath.lib.gui.actions.ActionTools. Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. getAnnotationObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all annotation objects in the hierarchy. getAnnotationObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current annotation objects. getArea() - Method in class qupath.lib.roi.EllipseROI;  ; getArea() - Method in class qupath.lib.roi.RectangleROI;  ; getArea() - Method in class qupath.lib.roi.AreaROI;  ; getArea() - Method in class qupath.lib.roi.GeometryROI;  ; getArea() - Method in interface qupath.lib.roi.interfaces.ROI. Get the area of this ROI. getArea() - Method in class qupath.lib.roi.LineROI;  ; getArea() - Method in class qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with area ROIs from a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.StainVector. Get the stain vector as a 3 elem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:329175,interface,interfaces,329175,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:11107,interface,interface,11107,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,16,['interface'],['interface']
Integrability,"t settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4966,interface,interface,4966,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"t settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:4473,interface,interface,4473,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"t settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:4181,interface,interface,4181,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"t the String representation understood by OMETiffWriter. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived 1+ classification, indicating weak positivity. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getOnePlus(PathClass). getOpacity() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the global opacity for overlay drawing. getOpacity() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get opacity, between 0 (completely transparent) and 1 (completely opaque). getOpenCVPixelType(PixelType) - Static method in class qupath.opencv.tools.OpenCVTools. Get the OpenCV type code corresponding to a PixelType. getOpenCVTypeAdaptorFactory() - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. getOrDefault(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Get the specified measurement, or the provided default value if it is not contained in the list. getOriginalImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get the original image name, without any randomization. getOriginalMetadata() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getOriginalMetadata() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getOriginalMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:464578,interface,interface,464578,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"t the second y co-ordinate (end of the line). int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:3871,interface,interface,3871,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"t value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can be trained interactively (i.e. supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsDynamicMeasurements() - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. supportsFile(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Query whether a file represents a supported script. supportsFile(File) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Check if the script editor supports a particular file. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Query whether the classifier supports a particular image. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Query whether this transform can be applied to the specified image. supportsImage(ImageServer<?>) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific image server, or false ; if it is incompatible. supportsImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1005759,interface,interface,1005759,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"t(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4298,interface,interface,4298,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"t) - Static method in class qupath.lib.color.ColorTransformer. Extract mean of RGB values from a packed RGB pixel. RichScriptEditor - Class in qupath.lib.gui.scripting.richtextfx. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditor(QuPathGUI) - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Constructor. RichScriptEditorExtension - Class in qupath.lib.gui.scripting.richtextfx. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). RichScriptEditorExtension() - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; RIGID_OBJECT_EDITOR - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ROI - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a ROI. ROI - Interface in qupath.lib.roi.interfaces. Base interface for defining regions of interest (ROIs) within QuPath. ROI_AREA - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has an area ROI. ROI_LINE - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a line ROI. ROI_POINT - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a points ROI. ROI.RoiType - Enum Class in qupath.lib.roi.interfaces. Enum representing the major different types of ROI. roiBounds() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. roiBounds(double, double) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. RoiEditor - Class in qupath.lib.roi. Helper class for interactively modifying existing ROIs.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:869310,interface,interfaces,869310,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"t). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:3193,interface,interface,3193,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['interface'],['interface']
Integrability,"t, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParamete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:3335,interface,interface,3335,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['interface'],['interface']
Integrability,"t, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:3186,interface,interface,3186,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"t, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; Cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:3079,interface,interface,3079,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,2,['interface'],['interface']
Integrability,"t-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:4940,interface,interface,4940,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"t. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:524670,interface,interface,524670,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"t.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from interface: ObjectClassifier; Get the objects from an ImageData that are compatible with this classifier. Specified by:; getCompatibleObjects in interface ObjectClassifier<T>; Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1989,interface,interface,1989,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,4,['interface'],['interface']
Integrability,"t; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1400,interface,interface,1400,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,1,['interface'],['interface']
Integrability,"tAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). getAllPoints() - Method in class qupath.lib.roi.GeometryROI;  ; getAllPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get a list of points representing the vertices of the ROI. getAllPoints() - Method in class qupath.lib.roi.LineROI;  ; getAllPoints() - Method in class qupath.lib.roi.PointsROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolygonROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolylineROI;  ; getAllPoints() - Method in class qupath.lib.roi.RectangleROI;  ; getAllSelectedObjects() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get all currently-selected objects from the hierarchy. getAllThumbnails() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get thumbnails for all z-slices & time points. getAllTileRequests() - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports. getAllTimes() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing all times where 'something happened' (observed or censored). getAllViewers() - Method in class qupath.lib.gui.QuPathGUI. Get an unmodifiable observable list of all viewers. getAllViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Get an observable list of viewers. getAlphaComposite() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getAnalysisTabPane() - Method in class qupath.lib.gui.QuPathGUI. Access the main tab pane shown in the QuPath window. getAncestorList(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). getAncestorTMACore(Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:327240,interface,interface,327240,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"tArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the sel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8817,interface,interface,8817,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"tAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:3196,interface,interface,3196,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability,"tClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:4481,interface,interface,4481,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,4,"['depend', 'interface']","['depending', 'interface']"
Integrability,"tConverter to convert Mat binary or labeled images; to path objects. createObjectConverter(Function<ROI, PathObject>, Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. createObjectDescriptionsDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to display object descriptions. createObjectFunction(Function<ROI, PathObject>, BiConsumer<PathObject, Number>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a (bi)function to generate an object from a ROI and a number. createObjectInputStream(InputStream) - Static method in class qupath.lib.io.PathIO. Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask. createObjectRemovedEvent(Object, PathObjectHierarchy, PathObject, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects were removed. createObjects(Raster, int, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from one band of a raster containing integer labels. createObjects(Mat, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.opencv.tools.OpenCVTools. Create objects by tracing contours in a labelled image. createObjects(SimpleImage, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from a la",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:202907,interface,interface,202907,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"tImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:3305,interface,interface,3305,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability,"tImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. dumpMetadata; public String dumpMetadata(); Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getAssociatedImage; public Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:5231,interface,interface,5231,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,2,['interface'],['interface']
Integrability,"tInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:3636,interface,interface,3636,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['interface'],['interface']
Integrability,"tList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1002,interface,interfaces,1002,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,1,['interface'],['interfaces']
Integrability,"tLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleDisplayProperty(). showStartupMessage; public static BooleanProperty showStartupMessageProperty; Show a startup message when QuPath is launched. See Also:. showStartupMessageProperty(). startupScript; public static StringProperty startupScriptProperty; Path to a startup script that should be run immediately after QuPath's launch. See Also:. startupScriptProperty(). showToolBarBadges; public static BooleanProperty showToolBarBadgesProperty; Show badges on the toolbar, e.g. to provide messages or warnings. See Also:. showToolBarBadgesProperty(). maxMemoryMB; public static IntegerProperty maxMemoryMBProperty; Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. See Also:. maxMemoryMBProperty(). scrollSpeed; public static IntegerProperty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:26039,message,message,26039,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['message'],['message']
Integrability,"tMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:432826,interface,interface,432826,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,tName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTran,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:450611,interface,interface,450611,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,tName() - Method in class qupath.lib.gui.actions.menus.FileMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.HelpMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.MeasureMenuActions;  ; getName() - Method in interface qupath.lib.gui.actions.menus.MenuActions. Get the name of the menu. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupa,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:450933,interface,interface,450933,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"tProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:5825,interface,interface,5825,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"tProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6055,interface,interface,6055,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"tStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:2874,interface,interface,2874,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability,"tText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextAre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6621,interface,interface,6621,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"tThresholdPane. Returns the value of ChartThresholdPane.isInteractiveProperty(). isInteractiveProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Property indicating whether thresholds can be adjusted interactively. isInterleaved(boolean) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; isLastFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the specified frame is the last one recorded. isLine() - Method in class qupath.lib.roi.AreaROI;  ; isLine() - Method in class qupath.lib.roi.EllipseROI;  ; isLine() - Method in class qupath.lib.roi.GeometryROI;  ; isLine() - Method in class qupath.lib.roi.LineROI;  ; isLine() - Method in class qupath.lib.roi.PointsROI;  ; isLine() - Method in class qupath.lib.roi.PolygonROI;  ; isLine() - Method in class qupath.lib.roi.PolylineROI;  ; isLine() - Method in class qupath.lib.roi.RectangleROI;  ; isLine() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI consists of line segments and does not enclose an area. isLinux() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Linux. isLocationVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the cursor location is visible, false otherwise. isLocked() - Method in class qupath.lib.objects.PathObject. Query the locked status. isLocked() - Method in class qupath.lib.objects.PathROIObject. Query the locked status for the object, indicating whether it should be editable or not. isMac() - Static method in class qupath.lib.common.GeneralTools. Return true if running on macOS. isMemorySufficient(RegionRequest, ImageData<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. isMissing() - Method in class qupath.lib.objects.TMACoreObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:625759,interface,interfaces,625759,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"tValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3692,interface,interface,3692,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['interface'],['interface']
Integrability,"taOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; Returns:; the ImageDataServer. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally using a specified array of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageDataOp. buildImageDataOp; public static ImageDataOp buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels); Create an ImageDataOp, optionally using a specified collection of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageData",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:5279,wrap,wrap,5279,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,2,['wrap'],['wrap']
Integrability,"tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:968750,message,message,968750,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"tains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:7425,interface,interface,7425,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"tant Field Values. Constructor Details. TMACoreObject; public TMACoreObject(); Default constructor. Should not be used directly, instead use PathObjects.createTMACoreObject(double, double, double, boolean). Method Details. isMissing; public boolean isMissing(); Query the 'missing' flag for this core. Returns:. setMissing; public void setMissing(boolean missing); Set the missing flag for this core, for example because insufficient tissue is present.; 'Missing' cores are typically ignored during analysis. Parameters:; missing - . getCaseID; public String getCaseID(); Get the case ID metadata value. Returns:; See Also:. setCaseID(String). setCaseID; public void setCaseID(String caseID); Set the case ID metadata value. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:5770,interface,interface,5770,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['interface'],['interface']
Integrability,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:5116,wrap,wrapTextProperty,5116,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,3,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"tatic void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10343,message,message,10343,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"tation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Get the x coordinate of the ROI centroid;. double; getCentroidY(). Get the y coordinate of the ROI centroid;. ROI; getConvexHull(). Default implementation using JTS.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:1517,interface,interfaces,1517,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interfaces']
Integrability,"tation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:2846,wrap,wrappers,2846,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrappers']
Integrability,"tations of the given class. addLevel(double, int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level by providing a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Add measurements to specified objects. addMeasurements(Collection<? extends PathObject>, PixelClassificationMeasurementManager, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to specified objects from a PixelClassificationMeasurementManager. addMeasurementsToSelectedObjects(ImageData<BufferedImage>, PixelClassifier, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to selected objects based upon the output of a PixelClassifier. addMenuItems(List<MenuItem>, Object...) - Static method in class qupath.lib.gui.tools.MenuTools. Add menu items to the specified list. addMenuItems(Menu, Object...) - Static method in class qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:20558,interface,interface,20558,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"tats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrapp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1335,wrap,wrapper,1335,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['wrap'],['wrapper']
Integrability,"te a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6324,interface,interface,6324,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"te an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2656,message,message,2656,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"te that the legacy options should be shown to the user - normally not desirable. showLocationProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the cursor location. showLocationProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the cursor location. showMeasurementTableObjectIDs - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableObjectIDsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show object IDs by default or not. showMeasurementTableThumbnails - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOvervie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:967935,message,message,967935,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"teID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9864,interface,interface,9864,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"teImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2853,depend,depends,2853,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depends']
Integrability,"ted with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Propert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2158,message,message,2158,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,2,['message'],"['message', 'messages']"
Integrability,"ted.; Prompt user to select a file. static File; promptForFile(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt the user for a file with some kind of file dialog. static String; promptForFilePathOrURL(String title,; String defaultPath,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt user to select a file or input a URL. static List<File>; promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt to open a list of files. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; String filterName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:2499,message,message,2499,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ter a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Parameters:; tasks - . isCancelled; public boolean isCancelled(); Description copied from interface: TaskRunner; Query if the plugin can be can",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:2677,interface,interface,2677,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['interface'],['interface']
Integrability,"ter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4866,interface,interface,4866,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"ter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to nu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:4373,interface,interface,4373,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"ter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:4081,interface,interface,4081,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"terface qupath.lib.objects.hierarchy.TMAGrid. Retrieve a TMA core based upon its name. getTMACoreForPixel(TMAGrid, double, double) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. getTMACoreList() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACoreList() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get an unmodifiable list of all TMA core objects. getTMACoreList() - Static method in class qupath.lib.scripting.QP. Get the list of TMA core objects for the current hierarchy. getTMACoreObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Extract a list of TMA cores from an object hierarchy. getTMAGrid() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. getToken(String, int) - Method in interface qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer. Get the token needed for the completion. getTokenizer() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. getTool(String) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Return the PathTool corresponding to the specified String. getToolAction(PathTool) - Method in class qupath.lib.gui.ToolManager. Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. getToolBar() - Method in class qupath.lib.gui.QuPathGUI. Get the main toolbar. getToolManager() - Method in class qupath.lib.gui.QuPathGUI. Get the ToolManager that handles available and selected tools. getTools() - Method in class qupath.lib.gui.ToolManager. Get a read-only list of all available tools. getTPosition() - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:538550,interface,interface,538550,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"terface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface Scrip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10059,wrap,wrapTextProperty,10059,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,3,"['interface', 'wrap']","['interface', 'wrapText', 'wrapTextProperty']"
Integrability,"terface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:10805,interface,interface,10805,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"terface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:6291,interface,interface,6291,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"terface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7963,interface,interface,7963,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"terface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:4022,interface,interface,4022,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,2,['interface'],['interface']
Integrability,"terface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLeng",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10737,interface,interface,10737,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the message. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5567,message,message,5567,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,6,['message'],['message']
Integrability,"text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10522,wrap,wrapTextProperty,10522,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,2,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9909,wrap,wrapTextProperty,9909,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,3,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"th of a Java array. isMissing() - Method in class qupath.lib.objects.TMACoreObject. Query the 'missing' flag for this core. isModified() - Method in class qupath.lib.gui.scripting.ScriptTab. Return. isModifiedProperty() - Method in class qupath.lib.gui.scripting.ScriptTab. Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. isMultipartExtension(String) - Static method in class qupath.lib.common.GeneralTools. Returns true for file extensions containing multiple parts (or 'dots'). isMutable() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isMutable() - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. isNegativeClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass has the name ""Negative"". isNotRGB() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if we can say with reasonable confidence that the image is not RGB. isNullClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass is null, its name is null or if it is equal ; to the special case of 'Unclassified' path object. isNumericMeasurement(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Query whether a named measurement returns a numeric value only. isObjectClassificationEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the event indicates that object classifications have changed. isObjectMeasurementEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the event indicates that object measurements have changed. isOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:627689,interface,interface,627689,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,th of the density map. getMaxX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the bottom right of the region bounding box. getMaxY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the bottom right of the region bounding box. getMean() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the mean of all non-NaN values that were added. getMean() - Method in class qupath.opencv.dnn.OpenCVDnn. Get means which should be subtracted for preprocessing. getMeanFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute averaged features over all four rotations. getMeanValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the mean of all the values being histogrammed. getMeasurementList() - Method in class qupath.lib.objects.PathObject. Retrieve the list stored measurements for the object. getMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getMeasurementName(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is pref,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:436931,interface,interface,436931,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"th(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the threshold line width. setLivePrediction(boolean) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Turn on or off live prediction. setLocationStringFunction(AbstractOverlay.LocationStringFunction) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a custom function to calculate a location string for the overlay. setLocked(boolean) - Method in class qupath.lib.objects.PathObject. Set locked status, if possible. setLocked(boolean) - Method in class qupath.lib.objects.PathROIObject. Set locked flag, indicating that the object ROI should not be modified. setLUTColor(int, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo. Set the 'maximum' color, which defines the lookup table to use. setMagnification(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor based upon magnification values. setMaskImageNames(boolean) - Method in interface qupath.lib.projects.Project. Request that entries return masked image names, rather than the 'true' image names. setMaxDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMaxDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the max display value for this channel. setMaxHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max height property for the specified regions. setMaxThreads(int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the maximum number of threads that may be used during live prediction. setMaxWidth(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max width property for the specified regions. setMeasurementMapper(MeasurementMapper) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the MeasurementMapper that defines how det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:933808,interface,interface,933808,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"th.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus - package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts - package qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes - package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs - package qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting - package qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scrip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:809991,depend,depend,809991,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"th.lib.gui.prefs. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize - Enum Class in qupath.lib.gui.prefs. Enum to control font size. PathPrefs.ImageTypeSetting - Enum Class in qupath.lib.gui.prefs. Enum defining how setting the image type should be handled for new images. PathROIObject - Class in qupath.lib.objects. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject - Class in qupath.lib.objects. The root object used at the base of a PathObjectHierarchy. PathRootObject() - Constructor for class qupath.lib.objects.PathRootObject;  ; paths(Path...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as path objects. PathTableData<T> - Interface in qupath.lib.gui.measure. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask - Interface in qupath.lib.plugins. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject - Class in qupath.lib.objects. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTileObject() - Constructor for class qupath.lib.objects.PathTileObject. Default constructor. PathTileObject(ROI) - Constructor for class qupath.lib.objects.PathTileObject;  ; PathTool - Interface in qupath.lib.gui.viewer.tools. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers - Class in qupath.lib.gui.viewer.tools.handlers;  ; PathToolEventHandlers() - Constructor for class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; PathTools - Class in qupath.lib.gui.viewer.tools. Default PathTool implementations. PathTools() - Constructor for class qupath.lib.gui.viewer.tools.PathTools;  ; pca(double, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Perform PCA to r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:760011,interface,interface,760011,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"th.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.switchToGrayscaleChannelProperty(). getSynchronizeViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Gets the value of the synchronizeViewers property. getSyntaxFromName(String) - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get a script syntax from a specified language name. getT() - Method in class qupath.lib.images.servers.TileRequest. Get the time point index for this request. getT() - Method in class qupath.lib.regions.ImagePlane. Get the time point index. getT() - Method in class qupath.lib.regions.ImageRegion. Get the time point index for the region. getT() - Method in class qupath.lib.roi.AreaROI;  ; getT() - Method in class qupath.lib.roi.EllipseROI;  ; getT() - Method in class qupath.lib.roi.GeometryROI;  ; getT() - Method in class qupath.lib.roi.LineROI;  ; getT() - Method in class qupath.lib.roi.PointsROI;  ; getT() - Method in class qupath.lib.roi.PolygonROI;  ; getT() - Method in class qupath.lib.roi.PolylineROI;  ; getT() - Method in class qupath.lib.roi.RectangleROI;  ; getT() - Method in interface qupath.lib.roi.interfaces.ROI. Get time point index. getTable() ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:527967,synchroniz,synchronizeViewers,527967,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['synchroniz'],['synchronizeViewers']
Integrability,"th.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:3754,interface,interface,3754,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['interface'],['interface']
Integrability,"th.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570940,interface,interface,570940,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"th.lib.roi.AreaROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.GeometryROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolygonROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolylineROI. True if the bounding box has zero area. isEmpty() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if the ROI bounds have zero width and height. isEmpty() - Method in class qupath.lib.roi.LineROI;  ; isEmpty() - Method in class qupath.lib.roi.PointsROI. A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... isEmptyRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns true if there are no objects to be painted within the requested region. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Always returns false. isEmptyRegion(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Test whether a region is empty, i.e. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.LabeledImageServer. Returns true if there are no objects to be painted within the requested region. isEosin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). isEraser() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Query if there is a pen currently being used as an eraser. iseScrollGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; isFloat(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Returns true if a Mat is a floating point (rather than int) type. isFloatingPoint() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is a floating point representation. isFluorescence() - Method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:621400,interface,interface,621400,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"th.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing URI. relative(Path, Path) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing paths. relativeToUserDirectory() - Method in class qupath.lib.gui.FileCopier. Specify that the copying is relative to the QuPath user directory. RELOAD_DATA - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; reloadImageData(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Reload the specified image data from a previously saved version,if available. remove(String) - Method in interface qupath.lib.measurements.MeasurementList. Remove a named measurement. remove(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Remove a resource within the project. REMOVE_COLUMN - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; REMOVE_FRAGMENTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; REMOVE_ROW - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeActions - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RemoveActions() - Constructor for class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeAllImages(Collection<ProjectImageEntry<T>>, boolean) - Method in interface qupath.lib.projects.Project. Remove multiple images from the project, optionally including associated data. removeByAreas(ByteProcessor, double, double, boolean) - Static method in class qupath.imagej.pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:842770,interface,interface,842770,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"th; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10954,interface,interface,10954,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"thIcons;  ; INCLUDE_IGNORED - Enum constant in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Generate objects for ignored classes (default is not to). includeOnlyColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be included in the export. includeOverlays(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether overlays should be included. includePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:600878,message,message,600878,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['message'],"['message', 'messages']"
Integrability,"thObjectHierarchy. getSelectedROI() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the ROI of the selected object, if available, or null. getSelectedROI() - Static method in class qupath.lib.scripting.QP. Get the ROI for the primary selected object within the current PathObjectHierarchy. getSelectedText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:508741,interface,interface,508741,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"thPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:5756,depend,depending,5756,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['depend'],['depending']
Integrability,"than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); thr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5602,depend,depend,5602,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['depend'],['depend']
Integrability,"that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:3900,interface,interface,3900,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,2,['interface'],['interface']
Integrability,"that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:2737,interface,interface,2737,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,2,['interface'],['interface']
Integrability,"that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9026,interface,interface,9026,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:9812,interface,interface,9812,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help clean up after some forgotten servers. Overrides:; finalize in class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:6589,interface,interface,6589,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:6935,interface,interface,6935,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"the image represented by the specified ProjectImageEntry. openInBrowser(String) - Static method in class qupath.lib.gui.QuPathGUI. Try to launch a browser window for a specified URL. opening(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological opening filter. openingByReconstruction(ImageProcessor, double) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply opening by reconstruction, with the specified minimum filter radius. openingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D opening filter (erosion followed by dilation) to all channels of an image. openSavedData(QuPathViewer, File, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:727421,interface,interface,727421,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2377,interface,interface,2377,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['interface'],['interface']
Integrability,"the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:4148,interface,interface,4148,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max display value. getMaxDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. getMaxDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum downsample value supported by this viewer. getMaxF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:433281,interface,interface,433281,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static interface ; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. float; getMaxAllowed(). Get the max allowed display value. float; getMaxDisplay(). Get the max display value. default ColorTransformer.ColorTransformMethod; getMethod(). Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. float; getMinAllowed(). Get the min allowed display value. float; getMinDisplay(). Get the min display value. String; getName(). Get the channel name. int[]; getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Get the RGB values that would be used to displa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:3846,interface,interface,3846,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,1,['interface'],['interface']
Integrability,"the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Parameters:; lastValue - ; Returns:. setDoubleLastValue; public abstract boolean setDoubleLastValue(double val); A class for setting the numeric value as a double (subclasses should convert this as needed). Parameters:; val - ; Returns:. isValidInput; public boolean isValidInput(S value); Numbers are considered valid if they are not NaN. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:5829,depend,depending,5829,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,2,['depend'],['depending']
Integrability,"the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:6444,interface,interface,6444,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"thing/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:4555,interface,interface,4555,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['interface'],['interface']
Integrability,"thing/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:4535,interface,interface,4535,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,5,['interface'],['interface']
Integrability,"this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Descripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7806,interface,interface,7806,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12899,interface,interface,12899,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13008,interface,interface,13008,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"thod in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1067077,interface,interface,1067077,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"thod in class qupath.lib.gui.panes.MeasurementMapPane. Get the pane, which can be added to a scene for display. getPane() - Method in class qupath.lib.gui.panes.PathObjectHierarchyView. Get the pane for display. getPane() - Method in class qupath.lib.gui.panes.PreferencePane. Get a pane to display. getPane() - Method in class qupath.lib.gui.panes.ProjectBrowser. Get the Pane component for addition to a scene. getPane() - Method in class qupath.lib.gui.panes.WorkflowCommandLogView. Get the pane to add to a scene. getParallelism() - Static method in class qupath.lib.common.ThreadTools. Get the requested level of parallelism. getParameterEnabled(String) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Returns true if a parameter exists with the given key and is enabled (and is therefore editable). getParameterEnabled(Parameter<?>) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Returns true if a parameter is enabled (and is therefore editable). getParameterList() - Method in interface qupath.lib.plugins.parameters.Parameterizable. Get the parameter list associated with the class. getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:472079,interface,interface,472079,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"thod in class qupath.lib.gui.viewer.QuPathViewerPlus. Sets the Z and T sliders' position to allow space for command bar. setSpaceDown(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Notify this viewer that the isSpaceDown status should be changed. setSpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.script",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:949418,interface,interface,949418,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"thod in class qupath.lib.images.writers.JpegWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, OutputStream) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, OutputStream) - Method in class qupath.lib.images.writers.ome.OMETiffWriter. Write OME-TIFF image to an output stream. writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.JpegWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; writeImage(ImageServer<T>, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(ImageServer<T>, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImage(ImageServer<T>, RegionRequest, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified output stream. writeImage(ImageServer<T>, RegionRequest, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified path. writeImage(T, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(T, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(Ou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1119093,interface,interface,1119093,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"thod in class qupath.lib.io.PointIO. Deprecated. readRegion(double, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region from the default ImagePlane (i.e. readRegion(double, int, int, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region for a specified z-plane and timepoint. readRegion(RegionRequest) - Method in class qupath.imagej.images.servers.ImageJServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.CroppedImageServer;  ; readRegion(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region for a specified RegionRequest. readRegion(RegionRequest) - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.RotatedImageServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.TransformingImageServer;  ; readResolve() - Method in class qupath.lib.objects.classes.PathClass. Called during deserialization to ensure that only a single instance of each PathClass exists. readSerializedServerPath(File) - Static method in class qupath.lib.io.PathIO. Deprecated.; This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path. ; In v0.2 and later, the server path is in general not sufficient to construct a server, and this method lingers ; only for backwards compatibility. It will be removed in a later version. readTile(TileRequest)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:828055,interface,interface,828055,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"thod in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSemanticVersion() - Static method in class qupath.lib.common.GeneralTools. Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. getSeparator() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the separator used in between measurements. getSerializationExtension() - Static method in class qupath.lib.gui.prefs.PathPrefs. File extension used for serialization of ImageData (without the dot). getSeries() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the series index, as used by Bio-Formats. getServer() - Method in class qupath.lib.experimental.pixels.Parameters. Get the server. getServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageServer for the current ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:509741,interface,interface,509741,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"th in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10880,interface,interface,10880,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"tic InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only propert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2390,message,message,2390,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"tical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6605,interface,interface,6605,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"tic ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleDisplayProperty(). showStartupMessage; public static BooleanProperty showStartupMessageProperty; Show a startup message when QuPath is launched. See Also:. showStartupMessageProperty(). startupScript; public static StringProperty startupScriptProperty; Path to a startup script that should be run immediately after QuPath's launch. See Also:. startupScriptProperty(). showToolBarBadges; public static BooleanProperty showToolBarBadgesProperty; Show badges on the toolbar, e.g. to provide messages or warnings. See Also:. showToolBarBadgesProperty(). maxMemoryMB; public static IntegerProperty maxMemoryMBProperty; Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. See Also:. maxMemoryMBProperty(). scrollSpeed; public static IntegerProperty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. See Also:. scrollSpeedProperty(). navigationSpeed; public static IntegerProperty navigationSpeedProperty; Percentage to scale navigation speed. See Also:. navigationSpeedProperty(). navigationAcceleration; public static BooleanProperty navigationAccelerationProperty; Apply acceleration/deceleration effects when holding and releasing navig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:26415,message,messages,26415,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['message'],['messages']
Integrability,"tic void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value under getLastDirectory() should be used; Returns:; selected directory, or null if no directory was selected. pro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10689,message,message,10689,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"tifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.objects.PathObjectConnectionGroup; getPathObjectsForRegion. Constructor Details. DelaunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getConnectedNodes; public Collection<PathObject> getConnectedNodes(PathObject pathObject,; Collection<PathObject> list); Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:3215,interface,interface,3215,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,2,['interface'],['interface']
Integrability,"tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:9046,interface,interfaces,9046,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,2,['interface'],['interfaces']
Integrability,"tion copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:6336,interface,interface,6336,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['interface'],['interface']
Integrability,"tion copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:4409,interface,interface,4409,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['interface'],['interface']
Integrability,"tion copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9169,interface,interface,9169,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"tion copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Descr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8477,interface,interface,8477,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"tion of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:2482,interface,interface,2482,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['interface'],['interface']
Integrability,"tion that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient informa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:33231,depend,depends,33231,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depends']
Integrability,"tion<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that anal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2567,interface,interface,2567,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"tion<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9372,message,message,9372,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"tionModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2813,wrap,wrapper,2813,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['wrap'],['wrapper']
Integrability,tionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); DefaultROIComparator (QuPath 0.5.0); EllipseROI (QuPath 0.5.0); GeometryROI (QuPath 0.5.0); GeometryTools.GeometryConverter.Builder (QuPath 0.5.0); GeometryTools.GeometryConverter (QuPath 0.5.0); GeometryTools (QuPath 0.5.0); LineROI (QuPath 0.5.0); qupath.lib.roi (QuPath 0.5.0); qupath.lib.roi Class Hierarchy (QuPath 0.5.0); PointsROI (QuPath 0.5.0); PolygonROI (QuPath 0.5.0); PolylineROI (QuPath 0.5.0); RectangleROI (QuPath 0.5.0); RoiEditor (QuPath 0.5.0); ROIs (QuPath 0.5.0); RoiTools.CombineOp (QuPath 0.5.0); RoiTools (QuPath 0.5.0); ShapeSimplifier (QuPath 0.5.0). /scripting; . /languages; ; AutoCompletions.Completion (QuPath 0.5.0); AutoCompletions.CompletionTokenizer (QuPath 0.5.0); AutoCompletions (QuPath 0.5.0); ExecutableLanguage (QuPath 0.5.0); qupath.lib.scripting.languages (QuPath 0.5.0); qupath.lib.scripting.languages Class Hierarchy (QuPath 0.5.0); ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:30562,interface,interfaces,30562,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['interface'],['interfaces']
Integrability,"title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9543,message,message,9543,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"title,; File dirBase,; String defaultName,; String filterName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3116,message,message,3116,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:3362,interface,interface,3362,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['interface'],['interface']
Integrability,"to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:1596,interface,interface,1596,javadoc/docs/qupath/opencv/ops/ImageOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html,2,['interface'],['interface']
Integrability,"tor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDef",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:3571,interface,interface,3571,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"tor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:4257,wrap,wrapText,4257,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,2,['wrap'],"['wrapText', 'wrapTextProperty']"
Integrability,"tors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1827,message,message,1827,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,2,"['interface', 'message']","['interface', 'message']"
Integrability,"tput stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoint",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:2891,interface,interface,2891,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['interface'],['interface']
Integrability,"tput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. sup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:4237,interface,interface,4237,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"tract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. extractZStack(ImageServer<BufferedImage>, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract a list of Mats, where each Mat corresponds to a z-slice. eyeTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the eyeTracking property of this tracker. F. factory(GeometryFactory) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the GeometryFactory, which can define a precision model in JTS. FEATURE - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a feature for a pixel classifier. FEATURE_COLLECTION - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request that objects are export as a FeatureCollection. FeatureCollection - Class in qupath.lib.io. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". FeatureExtractor<T> - Interface in qupath.opencv.ml.objects.features. Interface for extracting features from PathObjects for the purpose of object classification. FeatureExtractors - Class in qupath.opencv.ml.objects.features. Helper class for extracting features from objects, used along with ObjectClassifiers. FeatureExtractors() - Constructor for class qupath.opencv.ml.objects.features.FeatureExtractors;  ; FeaturePreprocessor - Class in qupath.opencv.ml. Create a preprocessor for an image or training matrix. FeaturePreprocessor() - Constructor for class qupath.opencv.ml.FeaturePreprocessor;  ; FeaturePreprocessor.Builder - Class in qupath.opencv.ml. Builder to create a custom FeaturePreprocessor. features(Collection<MultiscaleFeatures.MultiscaleFeature>, double, double) - Static method in class qupath.opencv.ops.ImageOps.Filters. Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:298862,wrap,wrap,298862,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability,"tracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7136,interface,interface,7136,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"tring) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of the text property. setText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl. Sets the value of the text property. setTextFieldFromNumber(TextField, Number, String) - Static method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; setThickness(BoundaryStrategy, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy with the specified thickness. setThresholdColor(ObservableNumberValue, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the color of a specified threshold line. setThresholds(Color, double...) - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:950049,synchroniz,synchronizeViewers,950049,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['synchroniz'],['synchronizeViewers']
Integrability,"tring) - Static method in class qupath.imagej.tools.IJTools. Based on a value and its units, try to get something suitable in microns. TUMOR - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Tumor classification. TUMOR - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Tumor classification. type(DensityMaps.DensityMapType) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. The type of the density map, which determines any associated normalization. typeToChannels(int) - Static method in class qupath.opencv.tools.OpenCVTools. Determine the number of channels from a specified Mat type (which also encodes depth). typeToDepth(int) - Static method in class qupath.opencv.tools.OpenCVTools. Determine the depth from a specified Mat type (which may also encode the number of channels). U. uiBlocked() - Method in class qupath.lib.gui.QuPathGUI. Observable value indicating that the user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1056586,interface,interface,1056586,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"tring; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4485,interface,interface,4485,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"tring title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String messag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4195,message,message,4195,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"tructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; contai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3411,interface,interface,3411,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,1,['interface'],['interface']
Integrability,"true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:5599,interface,interface,5599,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"ts representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8192,interface,interface,8192,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ts the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6384,interface,interface,6384,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"ts() - Method in class qupath.lib.gui.panes.MeasurementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1064723,interface,interface,1064723,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ts. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:4520,interface,interface,4520,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"tsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; stream - ; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:6324,interface,interface,6324,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,12,['interface'],['interface']
Integrability,"tsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:6002,interface,interface,6002,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"ts in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:6682,interface,interface,6682,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ttempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). Import preferences from a stream. static BooleanProperty; invertScrollingProperty(). Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMBProperty(). Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboardProperty(). The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySizeProperty(). The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevelsProperty(). The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimensionProperty(). Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointToolProperty(). Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAccelerationProperty(). Apply acceleration/deceleration effects when holding and releasing navigation key. sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:18084,interface,interface,18084,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['interface'],['interface']
Integrability,"tternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:28067,interface,interface,28067,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"turns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4204,interface,interface,4204,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"turns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; parentObject - ; tasks - . runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:5299,interface,interface,5299,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['interface'],['interface']
Integrability,"turns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:4369,interface,interface,4369,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"turns:; Throws:; IOException. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. getMetadataStore; public OMEPyramidStore getMetadataStore(); Get the MetadataStore, as used by Bio-Formats. This can be used to query metadata values not otherwise accessible. Returns:. dumpMetadata; public String dumpMetadata(); Retrieve a string representation of the metadata OME-XML. Returns:. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImage in class AbstractImageServer<BufferedImage>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getFile; public File getFile(); Get the underlying file. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:6885,interface,interface,6885,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,8,['interface'],['interface']
Integrability,"turns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendTex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7344,interface,interface,7344,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ty; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new script with the specified name. Specified by:; showScript in interface ScriptEditor; Parameters:; name - name of the script to show; script - content of the script. showScript; public void showScript(File file); Description copied from interface: ScriptEditor; Show the script editor, opening an existing script file. Specified by:; showScript in interface ScriptEditor; Parameters:; file - the script file. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:10847,interface,interface,10847,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,6,['interface'],['interface']
Integrability,"tyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of the text property. setText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl. Sets the value of the text property. setTextFieldFromNumber(TextField, Number, String) - Static method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; setThickness(BoundaryStrategy, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy with the specified thickness. setThresholdColor(ObservableNumberValue, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the color of a specified threshold line. setThresholds(Color, double...) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set thresholds, which are visualized as vertical lines. setThumbnail(T) - Method in interface qupath.lib.projects.ProjectImageEntry. Set a thu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:950257,interface,interface,950257,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"tyling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> tex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1945,message,message,1945,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"t in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8055,interface,interface,8055,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,u. getName() - Method in class qupath.lib.gui.actions.menus.ObjectsMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.TMAMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ViewMenuActions;  ; getName() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the ima,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:451262,interface,interface,451262,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"uals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might not appear; to make a difference. If shown through a ParameterPanel (in QuPath's JavaFX GUI) it is better to; set limits via the panel rather than directly using this method. Parameters:; minValue - ; maxValue - . hasLowerBound; public boolean hasLowerBound(); Returns true if the parameter has a valid lower bound. Returns:. hasUpperBound; public boolean hasUpperBound(); Returns true if the parameter has a valid upper bound. Returns:. getUnit; public String getUnit(); Get the unit to display for this parameter (may be null if no unit is available). Returns:. setValueWithBoundsCheck; public abstract boolean setValueWithBoundsCheck(S lastValue); Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Parameters:; lastValue - ; Returns:. setDoubleLastValue; public abstract boolean setDoubleLastValue(double val); A class for setting the numeric value as a double (subclasses should convert this as needed). Parameters:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:4079,depend,depending,4079,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,2,['depend'],['depending']
Integrability,"uble originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplica",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4242,interface,interface,4242,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"uble pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:5979,interface,interface,5979,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"ublic static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9270,message,message,9270,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ublic DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:3754,interface,interface,3754,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['interface'],['interface']
Integrability,"ublic ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:7598,interface,interface,7598,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"ublic String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendTex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7184,interface,interface,7184,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ublic boolean removeRow(QuPathViewer viewer); Try to remove the row containing the specified viewer, notifying the user if this isn't possible. Parameters:; viewer - ; Returns:; true if the row was removed, false otherwise. removeColumn; public boolean removeColumn(QuPathViewer viewer); Try to remove the column containing the specified viewer, notifying the user if this isn't possible. Parameters:; viewer - ; Returns:; true if the column was removed, false otherwise. setGridSize; public boolean setGridSize(int nRows,; int nCols); Set the grid to have a specific number of rows and columns. Parameters:; nRows - ; nCols - ; Returns:. addRow; public void addRow(QuPathViewer viewer). addColumn; public void addColumn(QuPathViewer viewer). splitViewer; public void splitViewer(QuPathViewer viewer,; boolean splitVertical). resetGridSize; public void resetGridSize(). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the sync",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:9741,interface,interface,9741,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"ublic boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:3500,interface,interface,3500,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"ublic double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5909,interface,interface,5909,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"ue; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8074,interface,interface,8074,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"ue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the edito",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4992,wrap,wrap,4992,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['wrap'],['wrap']
Integrability,"ues; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsStrin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:8360,interface,interface,8360,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"uest - the region being requested; setROI - if true, the ROI of the pathObject will be set on the image as the 'main' ROI (i.e. not an overlay); options - options determining which kinds of objects will have ROIs added, to match with the display in the QuPath viewer; Returns:; Throws:; IOException. extractOverlay; public static Overlay extractOverlay(PathObjectHierarchy hierarchy,; RegionRequest request,; OverlayOptions options,; Predicate<PathObject> filter); Extract an ImageJ overlay for the specified region. Parameters:; hierarchy - ; request - ; options - options to control which objects are being displayed; filter - optional additional filter used to determine which objects will be included (may be used in combination with options); Returns:. getImageJIcon; public static Image getImageJIcon(int width,; int height); Try to read the ImageJ icon from its jar. Parameters:; width - ; height - ; Returns:. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:7205,interface,interface,7205,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['interface'],['interface']
Integrability,"uest undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8300,interface,interface,8300,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"uestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the caretPosition property; See Also:. getCaretPosition(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:12066,interface,interface,12066,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,6,['interface'],['interface']
Integrability,"uested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:3192,interface,interface,3192,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"uested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:3796,interface,interface,3796,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,"ufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToAc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10694,synchroniz,synchronizeViewers,10694,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewers']
Integrability,"ufferedImageServer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class WrappedBufferedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.WrappedBufferedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class WrappedBufferedImageServer; extends AbstractTileableImageServer; Implementation of an ImageServer that simply wraps an existing BufferedImage.; ; This may help whenever requiring a server, but only having a BufferedImage. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WrappedBufferedImageServer(String imageName,; BufferedImage img). Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels). Create an ImageServer<BufferedImage> using an image that has been provided directly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:991,Wrap,WrappedBufferedImageServer,991,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['Wrap'],['WrappedBufferedImageServer']
Integrability,"ugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:4362,interface,interface,4362,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['interface'],['interface']
Integrability,"ugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any informat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:3409,interface,interface,3409,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"ui.ExtensionControlPane. Handle a URL that might be an extension hosted on GitHub. handleLeftParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle single/double quotes. handleRightParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle right parentheses ). handleTabPress(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle tab key. HaralickFeatureComputer - Class in qupath.lib.analysis.features. Static methods for computing Haralick texture features. HaralickFeatureComputer() - Constructor for class qupath.lib.analysis.features.HaralickFeature",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:566345,interface,interface,566345,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scripting. Simple text area control (JavaFX) with basic operations and no styling support. TextAreaControl(boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea, boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to wrap an existing text area and wrap it in a TextAreaControl. textFieldPrompt(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. textProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing the message text. textProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; textProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently in the editor control. textProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; textProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getText(). theme - Variable in class qupath.lib.gui.panes.PreferencePane.Appearance",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1019710,wrap,wrap,1019710,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability,"ui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle single/double quotes. handleRightParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle right parentheses ). handleTabPress(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle tab key. HaralickFeatureComputer - Class in qupath.lib.analysis.features. Static methods for computing Haralick texture features. HaralickFeatureComputer() - Constructor for class qupath.lib.analysis.features.HaralickFeatureComputer;  ; HaralickFeatures - Class in qupath.lib.analysis.features. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating Haralick texture features, within or around detections or tiles. HaralickFeaturesPlugin() - Constructor for class qupath.lib.algorithms.HaralickFeaturesPlugin. Default constructor. hasActiveH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:566752,interface,interface,566752,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"uilder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using a specific field in the JSON representation. Type Parameters:; T - ; Parameters:; baseType - the base type, i.e. the class or interface that all types descend from; typeFieldName - a field name to include within the serialized JSON object to identify the specific type; Returns:. getInstance; public static Gson getInstance(); Get default Gson, capable of serializing/deserializing some key QuPath classes. Returns:; See Also:. getInstance(boolean). getInstance; public static Gson getInstance(boolean pretty); Get default Gson, optionally with pretty printing enabled. Parameters:; pretty - if true, write using pretty-printing (i.e. more whitespace for formatting); Returns:; See Also:. getInstance(). parseObjectsFromGeoJSON; public static List<PathObject> parseObjectsFromGeoJSON(JsonElement element); throws JsonParseException; Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON.; ; This deals with the fact that objects can be stored in different forms: as a Feature, FeatureCollection, or; array of Features.; ; This method can be provided with other JsonElements, and provided they do not contain characteristic; GeoJSON fields (i.e. a ""type"" of ""Feature"", ""Featur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:2900,interface,interface,2900,javadoc/docs/qupath/lib/io/GsonTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html,1,['interface'],['interface']
Integrability,"uilder.UriImageSupport. Get a list of ServerBuilders, one for each image that can be read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:343352,interface,interface,343352,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"uilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region.; . Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note that this does not take into consideration line thickness, and therefore results are not guaranteed ; to match isEmptyRegion(RegionRequest); in other worse, an object might fall outside the region ; but still influence an image type because of thick lines being drawn.; If thicker lines should influence the result, the region should be padded accordingly. Parameters:; region - ; Returns:; a list of objects with ROIs that intersect the specified region. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:6277,interface,interface,6277,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,"uish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8997,interface,interface,8997,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"uld show object IDs by default or not. showMeasurementTableThumbnails - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:968472,message,message,968472,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ull image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:2913,interface,interface,2913,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"ultiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; pro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:5160,interface,interface,5160,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['interface'],['interface']
Integrability,"ultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the deter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1609,interface,interface,1609,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,2,['interface'],['interface']
Integrability,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1875,interface,interface,1875,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,4,['interface'],['interface']
Integrability,"ument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:2740,interface,interface,2740,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['interface'],['interface']
Integrability,"ummary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; public void deregisterTool(QuPathViewer viewer); Description copied from interface: PathTool; Deregister the tool from the viewer. It is essential that tools clean up properly ; and do not impact other tools that may be registered for the viewer later. Specified by:; deregisterTool in interface PathTool; Parameters:; viewer - the viewer from which this too",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:1789,interface,interface,1789,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,1,['interface'],['interface']
Integrability,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:2107,interface,interface,2107,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,1,['interface'],['interface']
Integrability,"um ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1875,message,message,1875,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"unningStatistics. Get the range, i.e. getReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get a map representing additional arguments that should be passed to readers. getRecentProjectList() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a list of the most recent projects that were opened. getRecentScriptsList() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a list of the most recent scripts that were opened. getRed() - Method in class qupath.lib.color.StainVector. Get the red component of the (normalized) stain vector. getRed() - Method in class qupath.lib.display.settings.ChannelColor. Get the red value. getRedOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getRegion() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getRegion() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the region representing this control, so it may be added to a scene. getRegion() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getRegion() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the region node that can be added to a scene graph to display the viewers. getRegionMap() - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Get an unmodifiable Map containing image regions to paint on this overlay. getRegionRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the region request. getRegionRequest() - Method in class qupath.lib.images.servers.TileRequest. Get the RegionRequest that this tile represents. getRegions() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Get an unmodifiable collection for all available regions. getRelativePathOrNull(String) - Method in class qupath.lib.gui.UserDirectoryManager;  ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:497143,interface,interface,497143,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"unt. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4039,message,message,4039,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"upath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:380165,interface,interface,380165,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"upath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.opencv.ops.ImageDataOp. Apply the operation to the requested region of the image. applyClassification(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Apply pixel classifier to a specified region of an image. applyCompletion(EditableText, AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Insert the text from the completion to the editable text. applyDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings with the specified name or file path to the current version. applyDisplaySettings(ImageDisplaySettings) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings to the current viewer. applyDisplaySettings(QuPathViewer, ImageDisplaySettings) - Static method in class qupath.lib.gui.scripting.QPEx. Apply the display settings to the specified viewer. applyLastAnnotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:41944,interface,interface,41944,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"upath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gui.actions.menus;  ; AnalyzeMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; and(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise AND of two arrays. and(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through AND. andThen(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one. annotatedCentroidTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles without any annotations over the tile centroid should be included. annotatedTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles that do not overlap with any annotations should be included. ANNOTATION_COPY_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ANNOTATION_DUPLICATE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; annotationActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; AnnotationActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; AnnotationPane - Class in qupath.lib.gui.panes. Component for displaying annotations within the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:37709,interface,interface,37709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"upath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html:984,wrap,wrap,984,javadoc/docs/qupath/lib/gui/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html,1,['wrap'],['wrap']
Integrability,"upath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:429687,interface,interface,429687,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"upath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.disp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:442647,interface,interface,442647,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"upath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below the threshold. belowEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:54046,interface,interface,54046,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"upath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in class qupath.lib.gui.charts.HistogramChart. Get the current counts transform. getCountSum() - Method in class qupath.lib.analysis.stats.Histogram. Sum of all histogram counts. getCreationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was created. getCropRegion() - Method in class qupath.lib.images.servers.CroppedImageServer. Get the region being cropped, in terms of the bounding box within the base ImageServer. getCropToParent() - Method in class qupath.lib.objects.utils.Tiler. Check if the tiler is set to crop the output to the input parent. getCssStylesPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where user directory for storing CSS styles. getCurrentConsoleControl() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the current preferred data file version. getCurrentEditorControl() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentHierarchy() - Static method in class qupath.lib.scripting.QP. Get the PathObjectHierarchy of the current ImageData. getCurrentImageData() - Sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:363987,interface,interface,363987,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"upath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283496,message,message,283496,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"upportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:2625,interface,interface,2625,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:1053,interface,interfaces,1053,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interfaces']
Integrability,"urce; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Description copied from interface: ImageOp; Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Specified by:; apply in interface ImageOp; Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. ImageOp.getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; public Padding getPadding(); Description copied from interface: ImageOp; Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when ImageOp.apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was input. Specified by:; getPadding in interface ImageOp; Returns:; the padding requested by this operation. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:2716,interface,interface,2716,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,6,['interface'],['interface']
Integrability,"urementMapPane. Update the measurements according to the current image. updateObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Update an object that is already in the hierarchy (e.g. updateParameterList(ParameterList, Map<String, String>, Locale) - Static method in class qupath.lib.plugins.parameters.ParameterList. Update a ParameterList with the values specified in a map. updatePath(String) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated path. updatePlane(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object. updatePlane(ImagePlane) - Method in class qupath.lib.roi.AreaROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.EllipseROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.GeometryROI;  ; updatePlane(ImagePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonito",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1064748,interface,interfaces,1064748,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:; Throws:; Exception. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:2235,interface,interface,2235,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,1,['interface'],['interface']
Integrability,"urns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3923,interface,interface,3923,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['interface'],['interface']
Integrability,"urns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9728,interface,interface,9728,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"urns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; Th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6225,interface,interface,6225,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"urns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4972,message,message,4972,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"urns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8203,interface,interface,8203,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"urns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9301,interface,interface,9301,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"us. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:3950,interface,interface,3950,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interface']
Integrability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; public double prefHeight(double width). Overrides:; prefHeight in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9612,interface,interface,9612,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['interface'],['interface']
Integrability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. disableToggleMenuItems; public BooleanProperty disableToggleMenuItemsProperty; Property to disable options to toggle the visibility of channels. See Also:. disableToggleMenuItemsProperty(). currentChannel; public ReadOnlyObjectProperty<ChannelDisplayInfo> currentChannelProperty; Get the currently-selected channel.; This is not necessarily showing in the image; see #currentChannelVisible() for that. See Also:. currentChannelProperty(). imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; Property for the image display that should be shown and managed by this pane. See Also:. imageDisplayProperty(). Constructor Details. BrightnessContrastChannelPane; public BrightnessContrastChannelPane(). Method Details. disableToggleMenuItemsProperty; public BooleanProperty disableToggleMenuItemsProperty(); Property to disable options to toggle the visibility of channels. Returns:. currentChannelVisible; public Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:12486,interface,interface,12486,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['interface'],['interface']
Integrability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. Returns:. m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:11793,interface,interface,11793,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['interface'],['interface']
Integrability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details. HistogramChart; public HistogramChart(). Method Details. hideIfEmptyProperty; public BooleanProperty hideIfEmptyProperty(); Proper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15827,interface,interface,15827,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['interface'],['interface']
Integrability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12228,interface,interface,12228,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['interface'],['interface']
Integrability,"useEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler;  ; handleBackspace(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a backspace. handleDrop(QuPathViewer, List<T>) - Method in interface qupath.lib.gui.viewer.DragDropImportListener.DropHandler. Handle drop onto a viewer. handleGitHubURL(String) - Static method in class qupath.lib.gui.ExtensionControlPane. Handle a URL that might be an extension hosted on GitHub. handleLeftParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:565830,interface,interface,565830,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Returns:; Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo). setSwitchToGrayscaleChannel; public void setSwitchToGrayscaleChannel(ChannelDisplayInfo channel); Set the value of switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:10185,interface,interfaces,10185,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['interface'],['interfaces']
Integrability,"used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:3842,interface,interface,3842,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interface']
Integrability,"ut classifications if outputType == OutputType.Classification. getOutputChannelType() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested output channel type. getOutputClasses() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the classifications for the output. getOutputLayerNames(Net) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLayers(Net, DnnShape...) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features expected in the output. getOutputPixelType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Pixel type of output; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageDataOp. Get the output pixel type. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageOp. Get the output pixel type. getOverlayActions() - Method in class qupath.lib.gui.QuPathGUI. Get the actions associated with the viewer overlay options. getOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an unmodifiable list containing the overlay layers, in order. getOverlayOptions() - Method in class qupath.lib.gui.actions.OverlayActions. Get the overlay options controlled by these actions. getOverlayOptions() - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:467622,interface,interface,467622,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"v.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in class qupath.lib.gui.BuildInfo. Get reference to the latest git commit, if known, or null if this has not be preserved. getLayout() - Method in class qupath.opencv.dnn.DnnModelParams. Get a string representing the axes layout that the model expects as input. getLength() - Method in class qupath.lib.roi.EllipseROI;  ; getLength() - Method in class qupath.lib.roi.RectangleROI;  ; getLength() - Method in class qupath.lib.roi.AreaROI;  ; getLength() - Method in class qupath.lib.roi.GeometryROI;  ; getLength() - Method in interface qupath.lib.roi.interfaces.ROI. Get ROI length. getLength() - Method in class qupath.lib.roi.LineROI;  ; getLength() - Method in class qupath.lib.roi.PointsROI;  ; getLength() - Method in class qupath.lib.roi.PolygonROI;  ; getLength() - Method in class qupath.lib.roi.PolylineROI;  ; getLevel() - Method in class qupath.lib.images.servers.TileRequest. Get the resolution level. getLevel() - Method in class qupath.lib.objects.PathObject. The level of the object in a hierarchy. getLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get resolution information for a specified pyramidal level. getLevel0Height() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the height of the full-resolution image (level 0). getLevel0Width() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the width of the full-resolution image (level 0). getLevelCount() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the total number of pyramid level",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:426646,interface,interfaces,426646,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"va.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Parameters:; tasks - . isCancelled; public boolean isCancelled(); Description copied from interface: TaskRunner; Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Specified by:; isCancelled in interface TaskRunner; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:3613,interface,interface,3613,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,2,['interface'],['interface']
Integrability,"va.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundExc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:2993,interface,interface,2993,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,2,['interface'],['interface']
Integrability,"ve no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:4059,interface,interface,4059,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (normalized) stain vector. boolean; isResidual(). Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. static StainVector; makeDefaultStainVector(StainVector.DefaultStains stain). Get a default stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. StainVector; public StainVector(); Default constructor, required for Externalizable interface. Method Details. makeDefaultStainVector; public static StainVector makeDefaultStainVector(StainVector.DefaultStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static StainVector createStainVector(String name,; double r,; double g,; double b); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public double getRed(); Get the red component of the (normalized) stain vector. Returns:. getGreen; public double getGreen(); Get the green component of the (normalized) stain vector. Return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:2633,interface,interface,2633,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['interface'],['interface']
Integrability,"ver<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:5891,interface,interface,5891,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"verBuilder; public ImageJServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may ov",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html:2994,interface,interface,2994,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,1,['interface'],['interface']
Integrability,"vers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:2962,Wrap,WrappedBufferedImageServer,2962,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,2,['Wrap'],['WrappedBufferedImageServer']
Integrability,"view; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1112,interface,interfaces,1112,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,2,['interface'],"['interface', 'interfaces']"
Integrability,"viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. canUndo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that ceils floating point values. ceil(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Ceil values in a floating point Mat. CELL - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region. CELL_NUCLEI_BOTH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CELL_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CellCountsCV - Class in qupath.opencv. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellCountsCV() - Constructor for class qupath.opencv.CellCountsCV;  ; cellDisplayActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:85262,interface,interface,85262,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach the specified viewer from the viewer grid, if possible.; This will remove the viewer from the grid, and create a new window to contain it. Parameters:; viewer - ; See Also:. detachViewerFromGrid(QuPathViewer). attachViewerToGrid; public void attachViewerToGrid(QuPathViewer viewer); Attach the specified viewer to the viewer grid, if possible.; It will be inserted in place of the first available empty viewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11837,interface,interface,11837,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8148,interface,interface,8148,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"wCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringPrope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3814,interface,interface,3814,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"wStep step); Append a new step to the end of the workflow, firing an update event. Parameters:; step - . addSteps; public void addSteps(Collection<WorkflowStep> steps); Append multiple steps to the end of the workflow, firing a single update event. Parameters:; steps - . removeStep; public void removeStep(int ind); Remove a single step, identified by its list index. Parameters:; ind - . removeStep; public void removeStep(WorkflowStep step); Remove a single step, firing an update event if the step was successfully removed. Parameters:; step - . removeSteps; public void removeSteps(Collection<WorkflowStep> steps); Remove a collection of steps, firing an update event if the workflow was changed. Parameters:; steps - . replaceLastStep; public void replaceLastStep(WorkflowStep step); Replace the most recently added step with this one. Parameters:; step - . size; public int size(); Total number of steps in the workflow. Returns:. isEmpty; public boolean isEmpty(); Returns true if the workflow does not contain any steps. Returns:. clear; public void clear(); Remove all steps, firing an update event if the workflow was not previously empty. fireWorkflowUpdatedEvent; protected void fireWorkflowUpdatedEvent(). addWorkflowListener; public void addWorkflowListener(WorkflowListener listener); Add a listener for changes to the workflow. Parameters:; listener - . removeWorkflowListener; public void removeWorkflowListener(WorkflowListener listener); Remove a listener for changes to the workflow. Parameters:; listener - . createScript; public String createScript(); Generate a script from the current workflow steps. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html:4737,interface,interface,4737,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,4,['interface'],['interface']
Integrability,"wapRGBOrder(BufferedImage, String) - Static method in class qupath.lib.awt.common.BufferedImageTools. Swap the order of pixels in an RGB image. switchToGrayscaleChannelProperty() - Method in class qupath.lib.display.ImageDisplay. Property indicating which channel should be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFacto",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1016333,interface,interface,1016333,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"wer.DragDropImportListener. Prepare a target node to accept drag and drop events. setupTarget(Scene) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target scene to accept drag and drop events. setUseCuda(boolean) - Static method in class qupath.opencv.dnn.DnnTools. Request that CUDA is used. setUseGrayscaleLuts(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useGrayscaleLutProperty(). setUseInvertedBackground(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useInvertedBackgroundProperty(). setUseMicrons(boolean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:954248,interface,interface,954248,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"wer.ViewerManager. Gets the value of the synchronizeViewers property. getSyntaxFromName(String) - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get a script syntax from a specified language name. getT() - Method in class qupath.lib.images.servers.TileRequest. Get the time point index for this request. getT() - Method in class qupath.lib.regions.ImagePlane. Get the time point index. getT() - Method in class qupath.lib.regions.ImageRegion. Get the time point index for the region. getT() - Method in class qupath.lib.roi.AreaROI;  ; getT() - Method in class qupath.lib.roi.EllipseROI;  ; getT() - Method in class qupath.lib.roi.GeometryROI;  ; getT() - Method in class qupath.lib.roi.LineROI;  ; getT() - Method in class qupath.lib.roi.PointsROI;  ; getT() - Method in class qupath.lib.roi.PolygonROI;  ; getT() - Method in class qupath.lib.roi.PolylineROI;  ; getT() - Method in class qupath.lib.roi.RectangleROI;  ; getT() - Method in interface qupath.lib.roi.interfaces.ROI. Get time point index. getTable() - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:528921,interface,interfaces,528921,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"wer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5519,interface,interface,5519,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,6,['interface'],['interface']
Integrability,"when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:4869,interface,interface,4869,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['interface'],['interface']
Integrability,"whether the wand tool should be influenced by pixel values painted on image overlays. wandUseOverlaysProperty() - Static method in class qupath.process.gui.WandToolEventHandler. Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. WARN - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Warning. WARN - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Warn logging (only if something is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cyt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103514,message,message,1103514,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static tex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1677,message,message,1677,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A colle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:36256,interface,interface,36256,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"wo ROIs. rootLogLevelProperty() - Static method in class qupath.lib.gui.logging.LogManager. Property representing the current requested root log level. rotate(RotatedImageServer.Rotation) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Rotate the image, using an increment of 90 degrees. ROTATE_180 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 180 degrees. ROTATE_270 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 270 degrees clockwise. ROTATE_90 - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. Rotate 90 degrees clockwise. ROTATE_IMAGE - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ROTATE_NONE - Enum constant in enum class qupath.lib.images.servers.RotatedImageServer.Rotation. No rotation. RotatedImageServer - Class in qupath.lib.images.servers. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer(ImageServer<BufferedImage>, RotatedImageServer.Rotation) - Constructor for class qupath.lib.images.servers.RotatedImageServer. Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. RotatedImageServer.Rotation - Enum Class in qupath.lib.images.servers. Enum for rotations in increments of 90 degrees. rotationProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Return the rotation property of this viewer. round() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that rounds floating point values. round(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Round values in a floating point Mat. ROUND - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Round cap. roundCoordinates(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Round coordinates in a Geome",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:872141,wrap,wraps,872141,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wraps']
Integrability,"writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:4662,interface,interface,4662,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:4377,interface,interface,4377,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of the text property. setText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl. Sets the value of the text property. setTextFieldFromNumber(TextField, Number, String) - Static method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; setThickness(BoundaryStrategy, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy with the specified thickness. setThresholdColor(ObservableNumberValue, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the color of a specified threshold line. setThresholds(Color, double...) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set thresholds, which are visualized as vertical lines. setThumbnail(T) - Method in interface qupath.lib.projects.ProjectImageEntry. Set a thumbnail for the image. settings(ImageDisplaySettings) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageDisplaySettings that control conversion to RGB. settingsCompatibleWithDisplay(ImageDisplay, ImageDisplaySettings) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Check if the settings are compatible with the display. setTitleFromObject(PathImage<ImagePlus>, PathObject) - Static method in class qupath.imagej.tools.IJTools. Set the name of an image based on a PathObject. setTMAEntriesFromImageData(ImageData<BufferedImage>) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. setTMAGrid(TMAGrid) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the tma grid for this hierarchy. setToExpandGridPaneHeight(Node...) - Static method in class qupath.lib.gui.t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:951193,interface,interface,951193,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"wtTools. Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. getBoundsHeight() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsHeight() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the height of the ROI bounding box. getBoundsHeight() - Method in class qupath.lib.roi.LineROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:340093,interface,interface,340093,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Descripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:8075,interface,interface,8075,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not encl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10113,interface,interface,10113,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8158,interface,interface,8158,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"x. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:6247,interface,interface,6247,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"xel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetada",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:441625,interface,interface,441625,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"xt(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:2514,interface,interface,2514,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['interface'],['interface']
Integrability,"xt; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9757,interface,interface,9757,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"xtAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:9495,interface,interface,9495,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"xtfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:421955,interface,interface,421955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currentl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:9253,interface,interface,9253,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"y ImageServer metadata fields. ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:25491,message,message,25491,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['message'],['message']
Integrability,"y need the diameter for calculations here, but it's helpful for setting the cursor. Overrides:; getBrushDiameter in class BrushToolEventHandler. createNewAnnotation; protected PathObject createNewAnnotation(MouseEvent e,; double x,; double y); Create a new annotation and set it in the current viewer. Parameters:; e - ; x - ; y - ; Returns:. ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:10781,depend,depend,10781,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,2,['depend'],['depend']
Integrability,"y open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10969,synchroniz,synchronizeViewers,10969,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,2,['synchroniz'],['synchronizeViewers']
Integrability,"y property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9361,depend,depends,9361,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['depend'],['depends']
Integrability,"y work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:2997,interface,interface,2997,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['interface'],['interface']
Integrability,"y() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get the default location for extensions. getDefaultResolutions(ImageData<?>, ClassificationResolution) - Static method in class qupath.process.gui.commands.ml.ClassificationResolution. Get a list of default resolutions to show, derived from PixelCalibration objects. getDefaultRGBChannels() - Static method in class qupath.lib.images.servers.ImageChannel. Get default channel list for RGB images. getDefaultScriptName() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; getDefaultShortServerName(URI) - Static method in class qupath.lib.images.servers.ServerTools. Get the default shortened server name given the server's path. getDefaultStaticImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default static imports that should be included with the script, where possible. getDefaultThumbnail(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDefaultThumbnail(int, int) - Method in interface qupath.lib.images.servers.ImageServer. Get the default thumbnail for a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:374882,interface,interface,374882,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"y(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3809,interface,interface,3809,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:10070,interface,interface,10070,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"y-positive staining. isOpenSlideAvailable() - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Query whether OpenSlide has already been loaded. isOverviewVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the image overview is visible, false otherwise. isPathClassHidden(PathClass) - Method in class qupath.lib.gui.viewer.OverlayOptions. Query whether objects with a specified classification should be displayed or hidden. isPoint() - Method in class qupath.lib.roi.AreaROI;  ; isPoint() - Method in class qupath.lib.roi.EllipseROI;  ; isPoint() - Method in class qupath.lib.roi.GeometryROI;  ; isPoint() - Method in class qupath.lib.roi.LineROI;  ; isPoint() - Method in class qupath.lib.roi.PointsROI;  ; isPoint() - Method in class qupath.lib.roi.PolygonROI;  ; isPoint() - Method in class qupath.lib.roi.PolylineROI;  ; isPoint() - Method in class qupath.lib.roi.RectangleROI;  ; isPoint() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI represents distinct (unconnected) points. isPositiveClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass has the name ""Positive"". isPositiveOrGradedIntensityClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""Positive"", ""1+"", ""2+"" or ""3+"", indicating positive staining. isProcessing() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setIsProcessing(true) has recently been called. isReadOnly() - Method in class qupath.lib.gui.QuPathGUI. Query whether QuPath is in 'read-only' mode. isRecording() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this is currently recording. isRedoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isRedoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'redo' can be app",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:629739,interface,interfaces,629739,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"y. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:403247,interface,interface,403247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"y.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12107,interface,interface,12107,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"y:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEdi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:9000,interface,interface,9000,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"y:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Descriptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9344,interface,interface,9344,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"yAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:6005,interface,interface,6005,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"yEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:2454,interface,interface,2454,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,5,['interface'],['interface']
Integrability,"yTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectPrope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4261,interface,interfaces,4261,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['interface'],['interfaces']
Integrability,"ylerProvider. Styler for Groovy. GROOVY - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; GroovyAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Groovy. GroovyAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.GroovyAutoCompletor. Constructor. GroovyCV - Class in qupath.opencv.tools. Category class for enhanced Groovy scripting with OpenCV. GroovyCV() - Constructor for class qupath.opencv.tools.GroovyCV;  ; GroovyLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of the Groovy programming language in QuPath. GroovyLanguage() - Constructor for class qupath.lib.gui.scripting.languages.GroovyLanguage. Constructor for Groovy Language. GroovyStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools - Class in qupath.lib.io. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools() - Constructor for class qupath.lib.io.GsonTools;  ; GsonTools.SubTypeAdapterFactory<T> - Class in qupath.lib.io. A TypeAdapterFactory that is suitable for handling class hierarchies. gt(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold. gt(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold between two arrays. GuiTools - Class in qupath.lib.gui.tools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools() - Constructor for class qupath.lib.gui.tools.GuiTools;  ; GuiTools.SnapshotType - Enum Class in qupath.lib.gui.tools. Kinds of snapshot image that can be created for QuPath. H. H_DAB - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Hematoxylin and DAB. H_E - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:563247,adapter,adapters,563247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['adapter'],['adapters']
Integrability,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.utils; Enum Class Tiler.TileAlignment. java.lang.Object; java.lang.Enum<Tiler.TileAlignment>; qupath.lib.objects.utils.Tiler.TileAlignment. All Implemented Interfaces:; Serializable, Comparable<Tiler.TileAlignment>, Constable. Enclosing class:; Tiler. public static enum Tiler.TileAlignment; extends Enum<Tiler.TileAlignment>; Enum representing the possible alignments for tiles.; A tile alignment of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tile",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html:1054,interface,interfaces,1054,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,2,['interface'],['interfaces']
Integrability,"ype() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. getShape() - Method in class qupath.lib.roi.AreaROI;  ; getShape() - Method in class qupath.lib.roi.EllipseROI;  ; getShape() - Method in class qupath.lib.roi.GeometryROI;  ; getShape() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnShape. Get a copy of the internal dimensions array. getShape(ROI) - Static method in class qupath.lib.roi.RoiTools. Get a Shape object representing a ROI. getShapeROI(Area, ImagePlane) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape. getShapeROI(Shape, ImagePlane, double) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape with a specified 'flatness'. getShowAllRGBTransforms() - Static method in class qupath.lib.gui.prefs.Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:513802,interface,interface,513802,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ype(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This beh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:2712,interface,interface,2712,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability,"ype(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertica",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:7513,interface,interface,7513,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerCha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:442491,interface,interface,442491,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ysis.DelaunayTools.Subdivision. Get a list of neighbors for all objects. getAllObjects() - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy, including the root object. getAllObjects(boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all the objects in the hierarchy, optionally including the root object. getAllObjects(boolean) - Static method in class qupath.lib.scripting.QP. Get all objects in the current hierarchy. getAllPathClassesVisible() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getAllPoints() - Method in class qupath.lib.roi.AreaROI. Beware this method! This will return all polygon points (useful e.g. getAllPoints() - Method in class qupath.lib.roi.EllipseROI. Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). getAllPoints() - Method in class qupath.lib.roi.GeometryROI;  ; getAllPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get a list of points representing the vertices of the ROI. getAllPoints() - Method in class qupath.lib.roi.LineROI;  ; getAllPoints() - Method in class qupath.lib.roi.PointsROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolygonROI;  ; getAllPoints() - Method in class qupath.lib.roi.PolylineROI;  ; getAllPoints() - Method in class qupath.lib.roi.RectangleROI;  ; getAllSelectedObjects() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get all currently-selected objects from the hierarchy. getAllThumbnails() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get thumbnails for all z-slices & time points. getAllTileRequests() - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports. getAllTimes() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing all times where 'something happened' (observed ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:326540,interface,interface,326540,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(PathObject, String, int) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:523175,interface,interface,523175,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ysisPane;  ; BooleanProperty; showInputDisplay. Property to indicate whether the input display is currently showing. ReadOnlyObjectProperty<QuPathViewer>; viewer. Property representing the viewer currently active. Field Summary; Fields. Modifier and Type; Field; Description; static final int; TOOLBAR_ICON_SIZE. Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:1952,depend,depends,1952,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depends']
Integrability,"| ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. Tas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1282,interface,interface,1282,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,1,['interface'],['interface']
Integrability,"| ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class DirectServerChannelInfo. java.lang.Object; qupath.lib.display.DirectServerChannelInfo. All Implemented Interfaces:; ChannelDisplayInfo, ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. public class DirectServerChannelInfo; extends Object; ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used. ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; clipToAllowed;  ; protected static final IndexColorModel; CM_GRAYSCALE;  ; protected static final IndexColorModel; CM_GRAYSCALE_INVERTED;  ; protected static final DecimalFormat; df;  ; protected float; maxAllowed;  ; protected float; maxDisplay;  ; protected float; minAllowed;  ; protected float; minDisplay;  . Constructor Summary; Constructors. Constructor; Description; DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. int; getChannel(). Get the channel number. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. protected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:1245,interface,interfaces,1245,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,2,['interface'],"['interface', 'interfaces']"
Integrability," ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathInteractivePlugin<T>. Type Parameters:; T - . All Superinterfaces:; PathPlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathInteractivePlugin<T>; extends PathPlugin<T>; Interface to define a PathPlugin that requires a list of (user-adjustable) parameters.; ; By using this interface, QuPath is able to show a standardized dialog box within which ; the parameters are set. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Method Details. getDefaultParameterList; ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html:1210,interface,interface,1210,javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,1,['interface'],['interface']
Integrability," ; getFailedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getFeature(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the value of the specified feature. getFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Request the variable importance values from the last trained RTrees classifier, if available. getFeatureName(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the name of the specified feature. getFeatureNames() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; getFeatureOp() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get an ImageDataOp used for feature calculation. getFile() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the file associated with this ViewTracker. getFile() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the underlying file. getFile() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get a File object representing the local image file - or null if no file could be found. getFile() - Method in class qupath.lib.scripting.ScriptParameters. Get the file where the script is located. getFilesOnly() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if Bio-Formats is restricted to support only local files, not other URLs. getFill() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram fill color. getFillAnnotations() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getFillDetections() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getFilledPolygonROIs(ImageProcessor, int) - Static method in class qupath.imagej.processing.RoiLabeling. Get filled PolygonRois for connected pixels with the same value in an image. getFilledPolygonROIsExperimental(ImageProcessor) - Static method in class qupath.imagej.processing.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:392496,interface,interface,392496,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. O",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728509,interface,interface,728509,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability," <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8811,message,message,8811,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,2,['message'],['message']
Integrability," Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7645,message,message,7645,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability," ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:5184,interface,interface,5184,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability," ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; stream - ; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:6332,interface,interface,6332,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,12,['interface'],['interface']
Integrability," ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10680,interface,interface,10680,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability," ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5742,interface,interface,5742,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:5473,interface,interface,5473,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability," getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The orig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4920,interface,interface,4920,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability," getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:5606,interface,interface,5606,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability," getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9979,interface,interface,9979,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability," hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(Boolean value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3991,interface,interface,3991,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability," hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as oppos",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4706,interface,interface,4706,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability," in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuild",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:3341,interface,interface,3341,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,2,['interface'],['interface']
Integrability," in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Descript",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7918,interface,interface,7918,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability," originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the sc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:4626,interface,interface,4626,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability," thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity classifications for all specified objects.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; pathObjects - . resetIntensityClassifications; public static void resetIntensityClassifications(PathObjectHierarchy hierarchy); Reset the intensity classifications for all detections in the specified hierarchy.; ; This means setting the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:103750,depend,depending,103750,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability," title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4007,message,message,4007,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability," title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9974,message,message,9974,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability," tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:5695,interface,interface,5695,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['interface'],['interface']
Integrability," value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boole",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:2632,interface,interface,2632,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability," | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Parameters:; input - ; Returns:. apply; public Mat apply(Mat input); Des",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1315,interface,interface,1315,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,2,['interface'],['interface']
Integrability,"  ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.localization; Class QuPathResources. java.lang.Object; qupath.lib.gui.localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1104,interface,interface,1104,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,1,['interface'],['interface']
Modifiability," & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:2475,plugin,plugins,2475,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['plugin'],['plugins']
Modifiability," & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2864,plugin,plugins,2864,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['plugin'],['plugins']
Modifiability," & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2555,plugin,plugins,2555,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['plugin'],['plugins']
Modifiability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Enum Class PixelClassifierTools.CreateObjectOptions. java.lang.Object; java.lang.Enum<PixelClassifierTools.CreateObjectOptions>; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. All Implemented Interfaces:; Serializable, Comparable<PixelClassifierTools.CreateObjectOptions>, Constable. Enclosing class:; PixelClassifierTools. public static enum PixelClassifierTools.CreateObjectOptions; extends Enum<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1043,inherit,inherited,1043,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,2,['inherit'],['inherited']
Modifiability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class InteractiveObjectImporter. java.lang.Object; qupath.lib.gui.commands.InteractiveObjectImporter. public final class InteractiveObjectImporter; extends Object; Static methods to import object(s) from different sources. Author:; Melvin Gelbard, Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; MIME_TYPE_GEOJSON. Mime type for GeoJson. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DataFormat; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:1053,extend,extends,1053,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,1,['extend'],['extends']
Modifiability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1122,inherit,inherited,1122,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,1,['inherit'],['inherited']
Modifiability, (implements java.util.Comparator<T>); qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep (implements qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor). qupath.lib.gui.scripting.richtextfx.RichScriptEditor. qupath.lib.objects.hierarchy.DefaultTMAGrid (implements qupath.lib.objects.hierarchy.TMAGrid); qupath.lib.analysis.DelaunayTools; qupath.lib.analysis.DelaunayTools.Builder; qupath.lib.analysis.DelaunayTools.Subdivision; qupath.opencv.features.DelaunayTriangulation (implements qupath.lib.objects.PathObjectConnectionGroup); qupath.process.gui.commands.DensityMapCommand (implements java.lang.Runnable); qupath.process.gui.commands.density.DensityMapDialog; qupath.lib.analysis.heatmaps.DensityMaps; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters; qupath.process.gui.commands.density.DensityMapUI; qupath.lib.plugins.DetectionPluginTools; qupath.lib.gui.dialogs.Dialogs; qupath.lib.gui.dialogs.Dialogs.Builder; qupath.lib.display.DirectServerChannelInfo; qupath.lib.display.settings.DisplaySettingUtils; qupath.lib.analysis.DistanceTools; qupath.opencv.dnn.DnnModelParams; qupath.opencv.dnn.DnnModelParams.Builder; qupath.opencv.dnn.DnnModels; qupath.opencv.dnn.DnnShape; qupath.opencv.dnn.DnnTools; qupath.opencv.dnn.DnnTools.DNNLayer; qupath.lib.gui.tools.DocGenerator (implements java.lang.Runnable); qupath.lib.gui.viewer.DragDropImportListener (implements javafx.event.EventHandler<T>); qupath.lib.gui.actions.menus.EditMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.EditMenuActions.Actions; qupath.lib.gui.actions.menus.EditMenuActions.CopyActions; qupath.lib.roi.EllipseROI (implements java.io.Serializable); qupath.lib.plugins.parameters.EmptyParameter; qupath.lib.analysis.algorithms.EstimateStainVectors; qupath.lib.gui.commands.ExportObjectsCommand; qup,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:13567,plugin,plugins,13567,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability," + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976002,adapt,adapted,976002,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['adapt', 'plugin']","['adapted', 'plugin']"
Modifiability," - ; See Also:. setChannelNames(ImageData, String...). setChannels; public static void setChannels(ImageChannel... channels); Set the channels for the current ImageData. Parameters:; channels - ; See Also:. setChannels(ImageData, ImageChannel...). setChannels; public static void setChannels(ImageData<?> imageData,; ImageChannel... channels); Set the channels for the specified ImageData.; Note that number of channels provided must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageDa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:64665,plugin,plugin,64665,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['plugin'],['plugin']
Modifiability," - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. duplicate() - Method in class qupath.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.common.BufferedImageTools. Duplicate a Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:273569,plugin,plugins,273569,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:955013,plugin,plugins,955013,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the URL for the main repo. getUseAlwaysExtensions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should always be used. getUsefulValue(PathObject, double) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:546631,plugin,plugins,546631,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570961,plugin,plugins,570961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401466,plugin,plugins,401466,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," ; Throws:; IOException. exportSelectedObjectsToGeoJson; public static void exportSelectedObjectsToGeoJson(String path,; String option,; String... additionalOptions); throws IOException; Export the selected objects to an output file as GeoJSON. Parameters:; path - ; option - ; additionalOptions - ; Throws:; IOException. exportSelectedObjectsToGeoJson; public static void exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export the selected objects to an output file as GeoJSON. Parameters:; path - ; options - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; option - ; additionalOptions - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; options - ; Throws:; IOException. importObjectsFromFile; public static boolean importObjectsFromFile(String path); throws FileNotFoundException,; IllegalArgumentException,; IOException,; ClassNotFoundException; Import all PathObjects from the given file. ; IllegalArgumentException is thrown if the file is not compatible. ; FileNotFoundException is thrown if the file is not found. ; IOException is thrown if an error occurs while reading the file. ; ClassNotFoundException should never occur naturally (except through a change in the code). Parameters:; path - ; Returns:; success; Throws:; FileNotFoundException; IllegalArgumentException; ClassNotFoundException; IOException. deselectAll; public static void deselectAll(); Clear the selection for the current hierarchy, so that no ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:93001,extend,extends,93001,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability," AbstractTileableDetectionPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractTileableDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; CellCountsCV, DoGSuperpixelsPlugin, SLICSuperpixelsPlugin, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public abstract class AbstractTileableDetectionPlugin<T>; extends AbstractDetectionPlugin<T>; Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps.; ; Particularly useful for tasks such as cell detection. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractTileableDetectionPlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:935,extend,extends,935,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability," All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Parameters:; cls - class of the resource to save, e.g. PixelClassifier; resource - expression containing the results. Method Details. project; public SaveResourcePaneBuilder<T> project(ObjectExpression<Project<BufferedImage>> project); Current project. Parameters:; project - ; Returns:; this builder. labelText; public SaveResourcePaneBuilder<T> labelText(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. textFieldPrompt; public SaveResourcePaneBuilder<T> textFieldPrompt(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. tooltip; public SaveResourcePaneBuilder<T> tooltip(ObservableValue<String> tooltip); Text to include in any tooltip. Parameters:; tooltip - ; Returns:. title; public SaveResourcePaneBuilder<T> title(String title); Title to display in any dialogs. Parameters:; title - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:1958,extend,extends,1958,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,2,['extend'],['extends']
Modifiability," Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1077230,variab,variable,1077230,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability, Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); De,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:29689,plugin,plugins,29689,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['plugin'],['plugins']
Modifiability," Class for the representation of the Groovy programming language in QuPath.; ; This class stores the QuPath implementation of Groovy syntaxing and Groovy auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.scripting.languages.ExecutableLanguage; execute. Constructor Details. GroovyLanguage; public GroovyLanguage(); Constructor for Groovy Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static GroovyLanguage getInstance(); Get the static instance of this class. Returns:; instance. getImportStatementGenerator; protected DefaultScriptLanguage.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html:1699,inherit,inherited,1699,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,1,['inherit'],['inherited']
Modifiability," Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1017730,plugin,plugins,1017730,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Class<? extends PathObject> cls); Get the PathObjects in a collection that are instances of a specified class. Parameters:; pathObjects - ; cls - ; Returns:. createImageRegionPredicate; public static Predicate<PathObject> createImageRegionPredicate(ImageRegion region); Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. Parameters:; region - ; Returns:. getLineObjects; public static <T extends PathObject> List<T> getLineObjects(Collection<T> pathObjects); Get a list of objects with line ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getAreaObjects; public static <T extends PathObject> List<T> getAreaObjects(Collection<T> pathObjects); Get a list of objects with area ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getPointObjects; public static <T extends PathObject> List<T> getPointObjects(Collection<T> pathObjects); Get a list of objects with point ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getFlattenedObjectList; public static List<PathObject> getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent); Get all descendant objects as a flattened list. Parameters:; parentObject - the parent objects whose children and descendants should be added to the list; list - output list, optional; includeParent - if true, parentObject will be included in the output list; Returns:; either list, or a new list created if necessary. countDescendants; public static int countDescendants(PathObject pathObject); Count the descendants of a PathObject recursively. Parameters:; pathObject - ; Returns:. containsROI; @Deprecated; public static boolean containsROI(ROI parentROI,; ROI childROI); Deprecated.; Test whether one ROI is can completely contain a second ROI.; Returns false if either ROI is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:16972,extend,extends,16972,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability," CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126279,plugin,plugins,126279,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static PathPrefs.FontSize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.FontSize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:1587,inherit,inherited,1587,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,1,['inherit'],['inherited']
Modifiability," Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant Field Values. Method Details. getFramework; public String getFramework(); Get the name of the deep learning framework that may be used.; If null, consumers may try to infer this from any URIs. Returns:. getURIs; public List<URI> getURIs(); Get the URIs associated with the model (e.g. weights and/or config files). Returns:. getInputs; public Map<String,DnnShape> getInputs(); Get the requested inputs and their shapes. Returns:; the inputs, if known, or null otherwise. getOutputs; public Map<String,DnnShape> getOutputs(); Get the expected outputs and their shapes. Returns:; the outputs, if known, or null otherwise. getLayout; public String getLayout(); Get a string representing the axes layout that the model expects as input.; This should follow the Bioimage Model Zoo spec, and include only the characters ""bixyczt"". Returns:. requestLazyInitialize; public boolean requestLazyInitialize(); Request that any model is loaded lazily on demand.; ; This can be useful to avoid blocking at some inopportune point in the code, ; but means that any exceptions associated with model initialization will ; probably not be thrown until the model is used. Returns:. builder; public static DnnModelParams.Builder builder(DnnModelParams params); Create a new params builder, initialized with the values fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:3672,config,config,3672,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,2,['config'],['config']
Modifiability," Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Class PathObjectSelectionModel. java.lang.Object; qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. public class PathObjectSelectionModel; extends Object; Model for handling selection of single and multiple PathObjects. Author:; Pete Bankhead; See Also:. PathObjectHierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectSelectionModel();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPathObjectSelectionListener(PathObjectSelectionListener listener). Add listener for selection changes. void; clearSelection(). Clear selection so that no objects are selected. void; deselectObject(PathObject pathObject). Ensure that the specified object is removed from the selection. void; deselectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are deselected. PathObject; getSelectedObject(). Get the current primary selected object. Set<PathObject>; getSelectedObjects(). Get an unmodifiable set containing all the currently-selected objects. ROI; getSelectedROI(). Get the ROI of the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:1194,extend,extends,1194,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,2,['extend'],['extends']
Modifiability," Constructor for class qupath.lib.gui.scripting.QPEx;  ; quickShowImage(String, Roi, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). quickShowImage(String, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). QUIT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; qupath - package qupath. Package containing the main QuPath launcher. QuPath - Class in qupath. Main QuPath launcher. QuPath() - Constructor for class qupath.QuPath;  ; QUPATH_AND_EXTENSIONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:804926,plugin,plugin,804926,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability," Constructor for class qupath.lib.gui.scripting.languages.YamlLanguage. Constructor for YAML language. YamlStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on YAML syntax. yAxisMax(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the upper bound for the y-axis. yAxisMax(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the upper bound for the y-axis. yAxisMin(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the lower bound for the y-axis. yAxisMin(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the lower bound for the y-axis. yAxisRange(double, double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the lower and upper bounds for the y-axis. yAxisRange(double, double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the lower and upper bounds for the y-axis. YELLOW - Static variable in class qupath.lib.common.ColorTools. Packed int representing yellow. YES - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""Yes"" option. yLabel - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; yLabel - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; yLabel(String) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the y-axis label. yLabel(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the y-axis label. Z. Z_SLICE - Static variable in class qupath.lib.images.servers.PixelCalibration. String to represent 'z-slice' units. zapGremlins(String) - Static method in class qupath.lib.common.GeneralTools. Remove non-printable characters from a String. zeroMeanUnitVariance(boolean) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize a Mat by subtracting the mean value and dividing by the standard deviation. zeroMeanUnitVariance(boole",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1126732,variab,variable,1126732,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DirectServerChannelInfo(ImageData<BufferedImage>, int) - Constructor for class qupath.lib.display.DirectServerChannelInfo. Constructor. disabled(boolean) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the disabled property of the action. disabled(ObservableValue<Boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:260478,variab,variable,260478,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," Constructor for class qupath.opencv.ops.ImageOps.Filters;  ; filterSingleZ(List<Mat>, double[], int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. filterZ(List<Mat>, Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Filter filter along entries in the input list. finalize() - Method in class qupath.lib.images.servers.AbstractImageServer. Attempt to close the server. findAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; findByStringID(Collection<String>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on a String representation of their IDs. findByUUID(Collection<UUID>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on their IDs. FindConvexHullDetectionsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to identify/remove detections from the convex hull of all detections. FindConvexHullDetectionsPlugin() - Constructor for class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; findDensityMapHotspots(String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map for the current image. findDensityMapHotspots(ImageData<BufferedImage>, String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDensityMapHotspots(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDirectionalMaxima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary image for pixels that have a higher value than their neighbors. findDirectionalMinima(ImageProcessor) - Static method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:305952,plugin,plugins,305952,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Constructor; Description; TMADearrayerPluginIJ(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:1856,extend,extends,1856,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['extend'],['extends']
Modifiability," Constr | ; Method. SEARCH. Package qupath.lib.objects; Class CellTools. java.lang.Object; qupath.lib.objects.CellTools. public class CellTools; extends Object; Helper class for working with PathObjects that represent cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scalin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1313,extend,extends,1313,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['extend'],['extends']
Modifiability," Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1320,plugin,plugin,1320,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['plugin'],['plugin']
Modifiability," Create a named thread factory with Thread.NORM_PRIORITY. createThreadFactory(String, boolean, int) - Static method in class qupath.lib.common.ThreadTools. Create a named thread factory with a specified priority. createThresholdClassifier(PixelCalibration, int, double, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a new PixelClassifier that applies a threshold to one channel of an image. createThresholdClassifier(PixelCalibration, Map<Integer, ? extends Number>, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a new PixelClassifier that applies a threshold to one or more channels of an image. createThresholdServer(ImageServer<BufferedImage>, int, double, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create a new ImageServer by applying a threshold to one channel of another server. createThresholdServer(ImageServer<BufferedImage>, Map<Integer, ? extends Number>, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create a new ImageServer by applying a threshold to one or more channels of another server. createTileObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified tile object. createTileObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a tile object. createTileObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a tile object, with a classification and measurements list. createTiles(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of PathTileObject tiles from the input. createTileWorker(ImageServer<BufferedImage>, RegionRequest, Map<RegionRequest, BufferedImage>, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; createTMACoreObject(double, double, double, boolean) - Static method in class qupath.lib.objects.Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:228702,extend,extends,228702,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," DefaultScriptLanguage, JsonLanguage, MarkdownLanguage, PlainLanguage, PropertiesLanguage, XmlLanguage, YamlLanguage. public abstract class ScriptLanguage; extends Object; Abstract class to represent languages supported by the script editor. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; ScriptLanguage(String name,; String ext). Default constructor for a ScriptLanguage. protected ; ScriptLanguage(String name,; Collection<String> exts). Default constructor for a ScriptLanguage. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. Set<String>; getExtensions(). Get an unmodifiable set containing the possible extensions for this language. String; getName(). Get the name of this language. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ScriptLanguage; protected ScriptLanguage(String name,; Collection<String> exts); Default constructor for a ScriptLanguage. Parameters:; name - the language name; exts - all supported file extensions for this language, in the form .ext (lowercase). ScriptLanguage; protected ScriptLanguage(String name,; String ext); Default constructor for a ScriptLanguage. Parameters:; name - the language name; ext - the file extensions for this language, in the form .ext (lowercase). Method Details. getName; public String getName(); Get the name of this language. Returns:; name. getExtensions; public Set<String> getExtensions(); Get an unmodifiable set containing the possible extensions for this language. Returns:; extension array. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Get the ScriptAutoCompletor object that takes care of this language's auto-co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html:1486,inherit,inherited,1486,javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html,2,['inherit'],['inherited']
Modifiability," DelaunayClusteringPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.features; Class DelaunayClusteringPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.opencv.features.DelaunayClusteringPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class DelaunayClusteringPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin for calculating Delaunay clustering, and associated features.; ; Warning! Because the implementation will have to change in the future, it is best not to rely on this class!. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DelaunayClusteringPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:997,plugin,plugins,997,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['plugin'],['plugins']
Modifiability," Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:4575,plugin,plugin,4575,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['plugin'],['plugin']
Modifiability," Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is prov",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2277,plugin,plugin,2277,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['plugin'],['plugin']
Modifiability," Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:1713,extend,extends,1713,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['extend'],['extends']
Modifiability," Description; static enum ; DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. Constructor Summary; Constructors. Constructor; Description; DilateAnnotationPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:1933,Plugin,PluginRunner,1933,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['Plugin'],['PluginRunner']
Modifiability," FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<String,DnnShape>; getInputs(). Get the requested inputs and their shapes. String; getLayout(). Get a string representing the axes layout that the model expects as input. Map<String,DnnShape>; getOutputs(). Get the expected outputs and their shapes. List<URI>; getURIs(). Get the URIs associated with the model (e.g. boolean; requestLazyInitialize(). Request that any model is loaded lazily on demand. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. FRAMEWORK_TENSORFLOW; public static final String FRAMEWORK_TENSORFLOW; Default name to identify TensorFlow. See Also:. Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant Field Values. Method Details. getFramework; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:2407,inherit,inherited,2407,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,2,['inherit'],['inherited']
Modifiability," Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class ProcessingCV. java.lang.Object; qupath.opencv.tools.ProcessingCV. public class ProcessingCV; extends Object; Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProcessingCV();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(Mat mat,; Mat matLabels,; boolean conn8). Apply a watershed transform. static void; doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8). Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. static boolean; morphologicalReconstruction(Mat matMarker,; Mat matMask). Compute morphological reconstruction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingCV; public ProcessingCV(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(Mat matMarker,; Mat matMask); Compute morphological reconstruction. Parameters:; matMarker - ; matMask - ; Returns:. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; boolean conn8); Apply a watershed transform. Parameters:; mat - intensity image; matLabels - starting locations; conn8 - if true, use 8-connectivity rather than 4-connectivity. doWatershed; public static void doWatershed(Mat mat,; Mat matLabels,; double minThreshold,; boolean conn8); Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. Parameters:; mat - intensity image; matLabels - starting locations; minThreshold - minimum threshold; conn8 - if true, u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html:1242,inherit,inherited,1242,javadoc/docs/qupath/opencv/tools/ProcessingCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/ProcessingCV.html,2,['inherit'],['inherited']
Modifiability," Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MenuTools. java.lang.Object; qupath.lib.gui.tools.MenuTools. public class MenuTools; extends Object; Static methods to help with creating and populating JavaFX menus. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MenuTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:1280,extend,extends,1280,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html,1,['extend'],['extends']
Modifiability," FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2169,plugin,plugin,2169,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['plugin'],['plugin']
Modifiability," Get the selection model for the channels. ObjectProperty<ImageDisplay>; imageDisplayProperty(). Property for the image display that should be shown and managed by this pane. boolean; isEmpty(). Query if the table is empty, i.e. void; setHideChannel(ChannelDisplayInfo channel). Request that the specified channel is hidden. void; setShowChannel(ChannelDisplayInfo channel). Request that the specified channel is shown. void; toggleShowHideChannel(ChannelDisplayInfo channel). Toggle the visibility of the specified channel. void; updateTable(). Ensure the table is up-to-date. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:4813,inherit,inherited,4813,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability," Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2132,inherit,inherited,2132,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['inherit'],['inherited']
Modifiability," Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using a specific field in the JSON representation. Type Parameters:; T - ; Parameters:; baseType - the base type, i.e. the class or interface that all types descend from; typeFieldName - a field name to include within the serialized JSON object to identify the specific type; Returns:. getInstance; public static Gson getInstance(); Get default Gson, capable of serializing/deserializing some key QuPath classes. Returns:; See Also:. getInstance(boolean). getInstance; public static Gson getInstance(boolean pretty); Get default Gson, optionally with pretty printing enabled. Parameters:; pretty - if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:2353,inherit,inherits,2353,javadoc/docs/qupath/lib/io/GsonTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html,1,['inherit'],['inherits']
Modifiability," ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; public RenderedImageServer.Builder downsamples(double... downsamples); Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. Parameters:; downsamples - ; Returns:. display; @Deprecated; public RenderedImageServer.Builder display(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; displa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:2559,inherit,inherited,2559,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['inherit'],['inherited']
Modifiability," ImageServer<BufferedImage>; createRenderedServer(QuPathViewer viewer). Create an ImageServer that returns tiles based on how approximately they would appear within the viewer. static ImageServer<BufferedImage>; createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer). Create an ImageServer that converts the image to RGB using the specified ImageRenderer. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:2571,inherit,inherited,2571,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['inherit'],['inherited']
Modifiability," Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; minThreshold - minimum threshold; labels will not expand into pixels with values below the threshold; conn8 - true",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html:1131,inherit,inherited,1131,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,1,['inherit'],['inherited']
Modifiability," Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same preprocessing defined here (i.e. input size, mean, scale, crop, swapRB). Parameters:; model - . getName; public String getName(); Get a user-readable name for this model, or null if no name is specified. Returns:. getScale; public Double getScale(); Get scale factors to be applied to preprocess input. Returns:; the scale value if specified, or null if default scaling should be used; See Also:. getMean(). getModelType; public OpenCVDnn.ModelType getModelType(); Get the type of the model that would be built with buildModel(). Returns:. getMean; public Scalar getMean(); Get means which should be subtracted for preprocessing. Returns:; the mean value if specified, or null if OpenCV's default should be used (likely to be zero); See Also:. g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3966,extend,extends,3966,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['extend'],['extends']
Modifiability," Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify the background label (0 by default) and color. badges - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; BAR - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as bars. barChart() - Static method in class qupath.lib.gui.charts.Charts. Create a Charts.ScatterChartBuilder for generating a custom scatter plot. baseClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:53506,variab,variable,53506,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the ful",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65775,plugin,plugin,65775,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability," Match tiles to the center left of the ROI bounding box. Tiler.Builder; alignCenterRight(). Match tiles to the center left of the ROI bounding box. Tiler.Builder; alignment(Tiler.TileAlignment alignment). Set the tile alignment. Tiler.Builder; alignTopCenter(). Start tiles at the top center of the ROI bounding box. Tiler.Builder; alignTopLeft(). Start tiles at the top left of the ROI bounding box. Tiler.Builder; alignTopRight(). Match tiles to the top right of the ROI bounding box. Tiler; build(). Build a tiler object with the current settings. Tiler.Builder; cropTiles(boolean cropToParent). Set whether the tiler is set to crop the output to the input parent. Tiler.Builder; filterByCentroid(boolean filterByCentroid). Set if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Tiler.Builder; tileHeight(int tileHeight). Change the height of output tiles. Tiler.Builder; tileWidth(int tileWidth). Change the width of output tiles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. tileHeight; public Tiler.Builder tileHeight(int tileHeight); Change the height of output tiles. Parameters:; tileHeight - the new height in pixels; Returns:; this builder. tileWidth; public Tiler.Builder tileWidth(int tileWidth); Change the width of output tiles. Parameters:; tileWidth - the new width in pixels; Returns:; this builder. cropTiles; public Tiler.Builder cropTiles(boolean cropToParent); Set whether the tiler is set to crop the output to the input parent.; Using this option can result in smaller and non-rectangular tiles. Parameters:; cropToParent - the new setting; Returns:; this builder. alignment; public Tiler.Builder alignment(Tiler.TileAlignment alignment); Set the tile alignment. Parameters:; alignment - the new setting; Returns:; this builder. alignTopLeft; public Tiler.Builder alignTopLeft(); Start tiles at the top left of the ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html:1991,inherit,inherited,1991,javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html,2,['inherit'],['inherited']
Modifiability," MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.MeasurementListType GENERAL; A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. DOUBLE; public static final MeasurementList.MeasurementListType DOUBLE; A list backed by an array of doubles. FLOAT; public static final MeasurementList.MeasurementListType FLOAT; A list backed by an array of floats. Method Details. values; public static MeasurementList.MeasurementListType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static MeasurementList.MeasurementListType va",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1747,inherit,inherited,1747,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,1,['inherit'],['inherited']
Modifiability," Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; blobs - ; Returns:. predict; public Mat predict(Mat mat); Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; mat - ; Returns:. batchPredict; public List<Mat> batchPredict(List<? extends Mat> mats); Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats.; This method is intended for cases where the batch size should be greater than one; for a batch size of one, predict(Mat) can; be used instead. Specified by:; batchPredict in interface DnnModel; Parameters:; mats - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:4462,extend,extends,4462,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,2,['extend'],['extends']
Modifiability," Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDetectionPlugin. Get all selected objects that are instances of a supported class. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of objects to process, based on the contents of the PluginRunner. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:476495,plugin,plugins,476495,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Method in class qupath.lib.gui.charts.HistogramChart. Request that tick labels are visible or not for both x and y axis. setShowTMACoreLabels(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show TMA core names on top of the image. setShowTMAGrid(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the TMA grid on the image, if present. setSlidersPosition(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Sets the Z and T sliders' position to allow space for command bar. setSpaceDown(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Notify this viewer that the isSpaceDown status should be changed. setSpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:948983,plugin,plugins,948983,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SlideLabelView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay;  ; changeMaxValues(double, double, double) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object with the same StainVectors but new max (background) values. changeName(String) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object with the same StainVectors but a new name. changeStain(StainVector, int) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object, identical to this one but for one StainVector having been changed. changeTimestampProperty() - Method in class qupath.lib.display.ImageDisplay. Timestamp for the most recent change. CHANNEL_ALL_OBJECTS - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Channel name for the channel with all object counts (not always present). CHANNEL_VIEWER - Variable in class qupath.lib.gui.actions.menus.Vie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:91943,extend,extends,91943,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the full-resolution image width. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Title to use for the window, if the chart is shown. WITH_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections with ROI icons. WITHOUT_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections without ROI icons. workerComplete(TileWorker<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1108268,plugin,plugins,1108268,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. duplicate() - Method in class qupath.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.common.BufferedImageTools. Duplicate a BufferedImage. duplicateAllSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:273693,plugin,plugins,273693,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Method in class qupath.lib.regions.RegionRequest. Intersect to the specified 2D region. intersect2D(ImageRegion) - Method in class qupath.lib.regions.RegionRequest. Intersect to the specified 2D region, ignoring z and t. intersection(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create intersection of multiple ROIs from a collection. intersection(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create intersection of multiple ROIs. intersects(double, double, double, double) - Method in class qupath.lib.regions.ImageRegion. Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. intersects(ImageRegion) - Method in class qupath.lib.regions.ImageRegion. Returns true if the region specified by this region overlaps with another. intersectsRegion(ROI, ImageRegion) - Static method in class qupath.lib.roi.RoiTools. Test whether a ROI and an ImageRegion intersect. IntParameter - Class in qupath.lib.plugins.parameters. Parameter to represent an integer numeric value. inverse() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the 3x3 matrix inverse. invertBackground() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get whether the background should be shown 'inverted'. invertBinary(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Invert a binary image. invertColors() - Method in enum class qupath.lib.display.ChannelDisplayMode;  ; INVERTED_COLOR - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using color LUT with an inverted background. INVERTED_GRAYSCALE - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using an inverted grayscale LUT (white to black). invertScrolling - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; invertScrollingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Invert the scrolling direction of the mouse applied to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:612337,plugin,plugins,612337,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class WorkflowCommandLogView. java.lang.Object; qupath.lib.gui.panes.WorkflowCommandLogView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, WorkflowListener. public class WorkflowCommandLogView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, WorkflowListener; Show logged commands, and optionally generate a script. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:1227,extend,extends,1227,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,1,['extend'],['extends']
Modifiability," Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PropertiesStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html:1306,inherit,inherited,1306,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,1,['inherit'],['inherited']
Modifiability," Method; Description; void; addPathObjectSelectionListener(PathObjectSelectionListener listener). Add listener for selection changes. void; clearSelection(). Clear selection so that no objects are selected. void; deselectObject(PathObject pathObject). Ensure that the specified object is removed from the selection. void; deselectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are deselected. PathObject; getSelectedObject(). Get the current primary selected object. Set<PathObject>; getSelectedObjects(). Get an unmodifiable set containing all the currently-selected objects. ROI; getSelectedROI(). Get the ROI of the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? exten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:1844,extend,extends,1844,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,2,['extend'],['extends']
Modifiability," MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2210,inherit,inherited,2210,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['inherit'],['inherited']
Modifiability," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools.handlers; Class MoveToolEventHandler.ViewerMover. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Enclosing class:; MoveToolEventHandler. public static class MoveToolEventHandler.ViewerMover; extends Object; Helper class for panning a QuPathViewer (reasonably) smoothly. Constructor Summary; Constructors. Constructor; Description; ViewerMover(QuPathViewer viewer). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; cancelDirection(boolean xAxis). Cancel either the x- or y-axis direction of the movement. void; decelerate(). Stop moving, by smoothly decelerating. void; startMoving(double dx,; double dy,; boolean constantVelocity). Start moving, with initial velocity given by dx and dy. void; stopMoving(). Stop moving immediately. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewerMover; public ViewerMover(QuPathViewer viewer); Constructor. Parameters:; viewer - the viewer that will be controlled by this object. Method Details. startMoving; public void startMoving(double dx,; double dy,; boolean constantVelocity); Start moving, with initial velocity given by dx and dy. Parameters:; dx - ; dy - ; constantVelocity - . cancelDirection; public void cancelDirection(boolean xAxis); Cancel either the x- or y-axis direction of the movement. ; ; E.g. This can be used to change the direction from diagonal to straight ; (horizontal/vertical) when releasing an arrow key while another arrow key ; is pressed. Parameters:; xAxis - . decelerate; public void decelerate(); Stop moving, by smoothly decelerating. stopMoving; public void stopMoving(); Stop moving immediately. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html:1237,inherit,inherited,1237,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html,1,['inherit'],['inherited']
Modifiability," Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1236,inherit,inherited,1236,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,1,['inherit'],['inherited']
Modifiability," Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1048,plugin,plugin,1048,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['plugin'],['plugin']
Modifiability," Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem acces",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:1105,inherit,inherited,1105,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,1,['inherit'],['inherited']
Modifiability," ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2493,plugin,plugins,2493,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['plugin'],['plugins']
Modifiability," ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2182,inherit,inherited,2182,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['inherit'],['inherited']
Modifiability," Parameters:; source - ; hierarchy - ; parentObject - ; Returns:. createObjectAddedEvent; public static PathObjectHierarchyEvent createObjectAddedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectAdded); Create a hierarchy event indicated objects were added. Parameters:; source - ; hierarchy - ; parentObject - ; pathObjectAdded - ; Returns:. createObjectRemovedEvent; public static PathObjectHierarchyEvent createObjectRemovedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectRemoved); Create a hierarchy event indicating objects were removed. Parameters:; source - ; hierarchy - ; parentObject - ; pathObjectRemoved - ; Returns:. createObjectsChangedEvent; public static PathObjectHierarchyEvent createObjectsChangedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObjectHierarchyEvent.HierarchyEventType type,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. Parameters:; source - ; hierarchy - ; type - ; pathObjects - ; isChanging - ; Returns:. isChanging; public boolean isChanging(); Returns true if changes are still being made, so more events will be fired.; This enables listeners to postpone expensive operations that could be called often until ; this flag is false. Returns:. getHierarchy; public PathObjectHierarchy getHierarchy(); The hierarchy to which this event refers. Returns:. getChangedObjects; public List<PathObject> getChangedObjects(); The objects that were affected by whichever changes were made. Returns:. getEventType; public PathObjectHierarchyEvent.HierarchyEventType getEventType(); Get the hierarchy event type. Returns:. getSource; public Object getSource(); Get the source that triggered the event. Returns:. isStructureChangeEvent; public boolean isStructureChangeEvent(); Returns true if the hierarchy structure has changed",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html:4375,extend,extends,4375,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,2,['extend'],['extends']
Modifiability," PathPlugin<T>. public class TilerPlugin<T>; extends AbstractDetectionPlugin<T>; Simple plugin to create square tiles, which may later have measurements added. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TilerPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractiveP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:1629,extend,extends,1629,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['extend'],['extends']
Modifiability," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2205,extend,extends,2205,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,2,['extend'],['extends']
Modifiability," Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExtensions(boolean) instead. static List<String>; getObjectFileExtensions(boolean includeCompressed). Get a list of known file extensions that may contain objects, optionally including compressed files. static int; getRequestedDataFileVersion(). Get the requested version for .qpdata files. static PathObjectHierarchy; readHierarchy(File file). Read a hierarchy from a .qpdata file. static PathObjectHierarchy; readHierarchy(InputStream fileIn). Read a PathObjectHierarchy from a saved data file (o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:1506,extend,extends,1506,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['extend'],['extends']
Modifiability," Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stain after color deconvolution. Stain_2. Second stain after color deconvolution. Stain_3. Third stain after color deconvolution. White. All pixels white. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorTransformer.ColorTransformMethod; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorTransformer.ColorTransformMethod[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. Original; public static final ColorTransformer.ColorTransformMethod Original; Original image. Red; public static final ColorTransformer.ColorTransformMethod Red; Red channel only. Green; public static final ColorTransformer.ColorTransformMethod Green; Green channel only. Blue; public static final ColorTransformer.ColorTransformMethod Blue; Blue channel only. Red_OD; public static final ColorTransformer.ColorTransformMethod Red_OD; Red channel optical densities. Green_OD; public static final ColorTransformer.ColorTransformMethod Green_OD; Green channel optical densities. Blue_OD; public static final ColorTransformer.ColorTransformMethod Blue_OD; Blue channel optical densities. RGB_mean; public static final ColorTransformer.ColorTransformMethod RGB_mean; Mean of red, green and blue channels. Hue; public static final ColorTransformer.ColorTransformMethod Hue; Hue value (from RGB-HSB transfo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:3517,inherit,inherited,3517,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['inherit'],['inherited']
Modifiability," Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataVa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1547,inherit,inherited,1547,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,1,['inherit'],['inherited']
Modifiability," Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractInteractivePlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; AbstractDetectionPlugin, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DilateAnnotationPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TMADearrayerPluginIJ. public abstract class AbstractInteractivePlugin<T>; extends AbstractPlugin<T>; implements PathInteractivePlugin<T>; Abstract class to help with implementing an interactive plugin. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected ParameterList; params;  . Constructor Summary; Constructors. Constructor; Description; AbstractInteractivePlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageDa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:1051,extend,extends,1051,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability," Specify the region to use for processing. region(RegionRequest) - Method in class qupath.lib.images.writers.TileExporter. Define the region to be processed, including downsample. REGION - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Region class. REGION - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Region class. RegionFilter - Interface in qupath.lib.gui.viewer. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters - Enum Class in qupath.lib.gui.viewer. Standard classification regions (hopefully all you will ever need). RegionRequest - Class in qupath.lib.regions. Class for defining an image region that can also be used to request these region from an ImageServer. regionToGeometry(ImageRegion) - Static method in class qupath.lib.roi.GeometryTools. Convert an ImageRegion to a rectangular Geometry. registerAlias(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register an alias label for a specified subtype. registerBuilder(DnnModelBuilder) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModelBuilder. registerDataOp(Class<? extends ImageDataOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageDataOp class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModel class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnTools. Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. registerOp(Class<? extends ImageOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:839441,extend,extends,839441,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," SplitAnnotationsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SplitAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:1652,extend,extends,1652,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,['extend'],['extends']
Modifiability," Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DirectServerChannelInfo(ImageData",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:260219,variab,variable,260219,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scriptin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:878125,plugin,plugins,878125,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Static method in class qupath.opencv.ops.ImageOps.Channels. Extract or rearrange channels by index. EXTRACT_REGION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; extractBand(Raster, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Extract a band from a a raster as a SimpleImage. extractChannel(ImageServer<BufferedImage>, BufferedImage, float[]) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Extract a (row-wise) array containing the pixels extracted from a BufferedImage. extractChannels(int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractChannels(String...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Extract specified channels for an image. extractDoubles(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractFeatures(ImageData<T>, Collection<? extends PathObject>, FloatBuffer) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:294439,extend,extends,294439,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," String value only. isStructureChangeEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the hierarchy structure has changed, e.g. isSubtractMode(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; isSymmetric() - Method in class qupath.lib.regions.Padding. Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). isThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""3+"", indicating a weakly-positive staining. isTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a TIFF image. isTile() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents an image tile. isTitle - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; isTitle() - Method in class qupath.lib.plugins.parameters.EmptyParameter. Returns true if the parameter should be considered a title. isTMACore() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents a TMA core. isTMADearrayed() - Static method in class qupath.lib.scripting.QP. Returns true if TMA cores are available. isToolSwitchingEnabled() - Method in class qupath.lib.gui.ToolManager. Returns true if the user is able to activate another PathTool, false otherwise. isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; isTrained",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:634322,plugin,plugins,634322,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addUnclassifiedLabel(int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addValue(double) - Method in class qupath.lib.analysis.stats.RunningStatistics. Add another value; NaN values are counted but do not contribute to the statistics. addViewerListener(QuPathViewerListener) - Method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:31503,plugin,plugins,31503,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (draw",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:57894,plugin,plugin,57894,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability," Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem accessing the URIs. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:1289,extend,extends,1289,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,1,['extend'],['extends']
Modifiability," Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; void pluginCompleted(String message); Notify the monitor that the plugin has completed its work. This is called automatically by updateProgress if progress >= 1,; but may also be called if the plugin was cancelled or otherwise terminated abnormally. Parameters:; message - message to show upon completion. cancelled; boolean cancelled(); Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:2678,plugin,pluginCompleted,2678,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,4,['plugin'],"['plugin', 'pluginCompleted']"
Modifiability," URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResour",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:4128,extend,extends,4128,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['extend'],['extends']
Modifiability," WorkflowStep. public class DefaultScriptableWorkflowStep; extends Object; implements ScriptableWorkflowStep; A scriptable workflow step where the script is provided directly as an argument. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; DefaultScriptableWorkflowStep(String name,; String script). Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script). Constructor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap - ; script - . DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; String script); Create a workflow step using a provided script string that will be called as-is. Parameters:; name - ; script - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html:1553,inherit,inherited,1553,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,2,['inherit'],['inherited']
Modifiability," a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:6242,inherit,inherited,6242,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,2,['inherit'],['inherited']
Modifiability," a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:2583,inherit,inherited,2583,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,2,['inherit'],['inherited']
Modifiability," a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immed",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:2895,plugin,plugins,2895,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugins']
Modifiability," a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:2919,inherit,inherited,2919,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['inherit'],['inherited']
Modifiability," a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:2771,plugin,plugins,2771,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugins']
Modifiability," a level of confidence.; This may be used to select which ImageServerBuilder is used to open the image(s). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:1750,extend,extends,1750,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['extend'],['extends']
Modifiability," a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - Constructor for class qupath.lib.plugins.AbstractInteractivePlugin;  ; AbstractObjectClassifier<T> - Class in qupath.lib.classifiers.object. Abstract class to help with the creation of object classifiers. AbstractObjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:2194,variab,variable,2194,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<Buffered",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109656,extend,extends,1109656,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:11438,config,configured,11438,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['config'],['configured']
Modifiability," added. createObjectConverter(Class<U>, Function<ROI, PathObject>) - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter for one specify type. createObjectConverter(BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. createObjectConverter(Function<ROI, PathObject>) - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. createObjectConverter(Function<ROI, PathObject>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. createObjectConverter(Function<ROI, PathObject>, Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. createObjectDescriptionsDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to display object descriptions. createObjectFunction(Function<ROI, PathObject>, BiConsumer<PathObject, Number>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a (bi)function to generate an object from a ROI and a number. createObjectInputStream(InputStream) - Static method in class qupath.lib.io.PathIO. Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:202013,extend,extends,202013,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," all associated metadata. String; getCaseID(). Get the case ID metadata value. Set<String>; getMetadataKeys(). Get all metadata keys. Map<String,String>; getMetadataMap(). Returns an unmodifiable map containing the metadata. String; getMetadataString(String key). Get a metadata value, cast as a String if possible. Object; getMetadataValue(String key). Get a metadata value of any kind. boolean; isMissing(). Query the 'missing' flag for this core. Object; putMetadataValue(String key,; String value). Store a new metadata value. void; readExternal(ObjectInput in);  ; void; setCaseID(String caseID). Set the case ID metadata value. void; setMissing(boolean missing). Set the missing flag for this core, for example because insufficient tissue is present. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Fie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:2650,inherit,inherited,2650,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['inherit'],['inherited']
Modifiability," an Shape with a specified 'flatness'. static ROI; intersection(Collection<? extends ROI> rois). Create intersection of multiple ROIs from a collection. static ROI; intersection(ROI... rois). Create intersection of multiple ROIs. static boolean; intersectsRegion(ROI roi,; ImageRegion region). Test whether a ROI and an ImageRegion intersect. static boolean; isShapeROI(ROI roi). Returns true if the ROI is not null and is not a point ROI. static List<ROI>; makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI). Make fixed-size rectangular tile ROIs for a specified area. static ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5124,extend,extends,5124,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability," and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class Abs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:2007,plugin,plugins,2007,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['plugin'],['plugins']
Modifiability," and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class Abs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2396,plugin,plugins,2396,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['plugin'],['plugins']
Modifiability," and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2087,plugin,plugins,2087,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['plugin'],['plugins']
Modifiability," and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tiler.TileAlignment TOP_CENTER. TOP_RIGHT; public static final Tiler.TileAlignment TOP_RIGHT. CENTER_LEFT; public static final Tiler.TileAlignment CENTER_LEFT. CENTER; public static final Tiler.TileAlignment CENTER. CENTER_RIGHT; public static final Tiler.TileAlignment CENTER_RIGHT. BOTTOM_LEFT; public static final Tiler.TileAlignment BOTTOM_LEFT. BOTTOM_CENTER; public static final Tiler.TileAlignment BOTTOM_CENTER. BOTTOM_RIGHT; public static final Tiler.TileAlignment BOTTOM_RIGHT. Method Details. values; public static Tiler.TileAlignment[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Tiler.TileAlignment valueOf(String n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html:1860,inherit,inherited,1860,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,2,['inherit'],['inherited']
Modifiability," and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:5205,extend,extends,5205,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability," annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. Constructor Summary; Constructors. Constructor; Description; DilateAnnotationPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:1758,plugin,plugin,1758,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['plugin'],['plugin']
Modifiability," annotations to be repainted. formatNumber(double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using the default Locale. formatNumber(Locale, double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual names. fromBlob(T) - Method in interface qupath.opencv.dnn.BlobFunction. Convert a blob (generally the result of a prediction) to a list of mats. fromCollection(Collection<String>) - Static method in class qupath.lib.objects.classes.Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:313409,variab,variable,313409,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," applied. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:5311,inherit,inherited,5311,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability," appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts); Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). Convert an image to RGB by applying the specified ChannelDisplayInfos. Parameters:; imgInput - ; imgOutput - ; selectedChannels - ; useGrayscaleLuts - ; Returns:. applyTransforms; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode); Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. Parameters:; imgInput - the input image to transform; imgOutput - optional output image (must be the same size as the input image, and RGB); selectedChannels - the channels to use; mode - the mode used to determine RGB colors for each channel; Returns:; an RGB image determined by transforming the input image using the specified channels. getTransformedValueAsString; public String getTransformedValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a transformed pixel value, using the currently-selected channels. Parameters:; img - image providing the value; x - x-coordinate of the pixel; y - y-coordinate of the pixels; Returns:; a String representation of the pixel's transformed value. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info); Automatically set the display range for a channel, using",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:13428,extend,extends,13428,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['extend'],['extends']
Modifiability," area geometries, this provides the perimeter. leq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold. leq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold between two arrays. levels(Collection<ImageServerMetadata.ImageResolutionLevel>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify resolution levels, where the largest image should come first. levelsFromDownsamples(double...) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify downsample values for pyramidal levels. LICENSE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; limitDatapoints(int) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Choose the maximum number of supported datapoints. LINE - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a line or polyline. LINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Line drawing tool. LINE_OR_ARROW - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Extended PathTool that can switch between drawing lines or arrows. LINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:652054,variab,variable,652054,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any infor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3694,plugin,plugin,3694,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugin']
Modifiability," argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2357,plugin,plugins,2357,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['plugin'],['plugins']
Modifiability," arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argume",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66177,plugin,plugin,66177,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability," based on https://today.java.net/article/2007/03/30/perils-imagegetscaledinstance. Parameters:; img - ; targetWidth - ; targetHeight - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer); Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. Parameters:; menuTitle - ; recentItems - ; consumer - ; Returns:. createRecentItemsMenu; public static Menu createRecentItemsMenu(String menuTitle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:15949,extend,extends,15949,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability," boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1814,extend,extend,1814,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['extend'],['extend']
Modifiability," boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. protected double; getUsefulValue(PathObject pathObject,; double nanValue);  ; boolean; isValid(). Query if the mapper is valid. void; setColorMapper(ColorMaps.ColorMap mapper). Set a new color mapper. void; setDisplayMaxValue(double maxValue). Set the measurement value that maps to the last color in the color mapper. void; setDisplayMinValue(double minValue). Set the measurement value that maps to the first color in the color mapper. void; setExcludeOutsideRange(boolean excludeOutsideRange). Specify whether out-of-range values should be excluded. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapper; public MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects); Constructor. Parameters:; mapper - color mapper (lookup table); measurement - the measurement to colorize; pathObjects - an initial collection of objects used to determine display ranges (i.e. find the min/max values of the specified measurement). Method Details. setColorMapper; public void setColorMapper(ColorMaps.ColorMap mapper); Set a new color mapper. Parameters:; mapper - . getExcludeOutsideRange; public boolean getExcludeOutsideRange(); Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. Returns:. setExcludeOutsideRange; public void setExcludeOutsideRange(boolean excludeOutsideRange); Specify whether out-of-range values should be excluded. Parameters:; excludeOutsideRange - . isValid; public boolean isValid(); Query if the mapper is valid. This returns true if the mapper has been initialized with objects to ; determine an appropriate display range.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:2821,extend,extends,2821,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,1,['extend'],['extends']
Modifiability," boolean isChanging). Fire a hierarchy update indicating objects have changed, and may still be changing. Collection<PathObject>; getAllObjects(boolean includeRoot). Get all the objects in the hierarchy, optionally including the root object. Collection<PathObject>; getAnnotationObjects(). Get all annotation objects in the hierarchy. Collection<PathObject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; getDetectionObjects(). Get all detection objects in the hierarchy (including sub-classes of detections). List<PathObject>; getFlattenedObjectList(List<PathObject> list). Get a flattened list containing all PathObjects in the hierarchy (including from the root object). Collection<PathObject>; getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. Collection<PathObject>; getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects). Get the objects overlapping or close to a specified region. Collection<PathObject>; getObjectsForROI(Class<? extends PathObject> cls,; ROI roi). Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. Collection<PathObject>; getPointObjects(Class<? extends PathObject> cls). Get objects that contain Point ROIs. PathObject; getRootObject(). Get the root object. PathObjectSelectionModel; getSelectionModel(). Get the selection model, which handles the selection status of objects. Collection<PathObject>; getTileObjects(). Get all tile objects in the hierarchy. TMAGrid; getTMAGrid(). Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. boolean; hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region). Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:5481,extend,extends,5481,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability," brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3050,plugin,plugins,3050,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugins']
Modifiability," by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:3855,extend,extends,3855,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,1,['extend'],['extends']
Modifiability," by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Overrides:; addWorkflowStep in class AbstractPl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:5019,extend,extends,5019,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['extend'],['extends']
Modifiability," cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1506,extend,extends,1506,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['extend'],['extends']
Modifiability," class GeometryTools.GeometryConverter.Builder; extends Object; Builder to help define how ROIs and Geometry objects should be converted. Constructor Summary; Constructors. Constructor; Description; Builder(). Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; GeometryTools.GeometryConverter; build(). Build a new converter with the specified parameters. GeometryTools.GeometryConverter.Builder; factory(GeometryFactory factory). Specify the GeometryFactory, which can define a precision model in JTS. GeometryTools.GeometryConverter.Builder; flatness(double flatness). Specify the flatness for any operation where a PathIterator is required. GeometryTools.GeometryConverter.Builder; pixelSize(double pixelWidth,; double pixelHeight). Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Details. pixelSize; public GeometryTools.GeometryConverter.Builder pixelSize(double pixelWidth,; double pixelHeight); Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Parameters:; pixelWidth - ; pixelHeight - ; Returns:. flatness; public GeometryTools.GeometryConverter.Builder flatness(double flatness); Specify the flatness for any operation where a PathIterator is required. Parameters:; flatness - ; Returns:. factory; public GeometryTools.GeometryConverter.Builder factory(GeometryFactory factory); Specify the GeometryFactory, which can define a precision model in JTS. Parameters:; factory - ; Returns:. build; public GeometryTools.GeometryConverter build(); Build a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html:1555,inherit,inherited,1555,javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html,1,['inherit'],['inherited']
Modifiability, class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.CellCountsCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.WatershedNucleiCV;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. This should return a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:372625,plugin,plugins,372625,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," class qupath.lib.gui.commands.Commands. Prompt to edit the selected annotation by translation and rotation. effectiveNChannels(int) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; ELLIPSE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Ellipse drawing tool. ELLIPSE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ELLIPSE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; EllipseROI - Class in qupath.lib.roi. ROI implementing a circle, or (unrotated) ellipse. EMBED - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Embed the image (as Base64-encoded PNG). embedImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be embedded in any export. empty() - Static method in class qupath.lib.regions.Padding. Get an empty padding object (0 on all sides). EmptyParameter - Class in qupath.lib.plugins.parameters. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. enableBioformats - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; enableFreehand - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; enableFreehandToolsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). ensureBufferedImage(Image) - Static method in class qupath.lib.awt.common.BufferedImageTools. Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. ensureBufferedImageType(BufferedImage, int) - Static method in class qupath.lib.awt.common.BufferedImageTools. Convert a BufferedImage to h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:277410,plugin,plugins,277410,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupath.opencv.dnn.OpenCVDnn. Initialize the model with the same preprocessing defined here (i.e. input(String, long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape as a long array for a single input with a specified name. input(String, DnnShape) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single input with a specified name. INPUT_DISPLAY - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; inputChannels(int...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the input channels using (zero-based) channel numbers. inputChannels(String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the input channels using channel names. inputChannels(Collection<? extends ColorTransforms.ColorTransform>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the input channels from a collection of color transforms. inputFiles(Collection<File>) - Method in class qupath.lib.gui.FileCopier. Collection of files to copy. InputOutputPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; inputPadding(int) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Amount of padding requested for the left, right, top and bottom of the image tile being classified. inputPaths(Collection<Path>) - Method in class qupath.lib.gui.FileCopier. Collection of paths representing files to copy. inputResolution(PixelCalibration) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Pixel size defining the resolution at which the classifier should operate. inputResolution(PixelCalibration) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:603152,extend,extends,603152,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io - package qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml - package qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects - package qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features - package qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel - package qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops - package qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools - package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui - package qupath.process.gui. Gener",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:815320,plugin,plugins,815320,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:3731,plugin,plugin,3731,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugin']
Modifiability," clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3646,inherit,inherited,3646,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['inherit'],['inherited']
Modifiability," close();  ; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. boolean; isEmptyRegion(RegionRequest request). Returns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:2434,inherit,inherited,2434,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['inherit'],['inherited']
Modifiability," collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:3974,variab,variables,3974,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['variab'],['variables']
Modifiability," colormodel that may be used. SparseImageServer.SparseImageServerManager; getManager(). Get the manager, which defines from whence the regions originate. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. static List<SparseImageServer>; splitConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap). Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:2794,inherit,inherited,2794,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,2,['inherit'],['inherited']
Modifiability," command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient information associated with them (including a menu path). Parameters:; actions - . getCommonActions; public CommonActions getCommonActions(); Get the common actions associated with this QuPath instance. Returns:. getAutomateActions; public AutomateActions getAutomateActions(); Get the automated actions associated with this QuPath instance. Returns:. lookupActionByText; public org.controlsfx.control.action.Action lookupActionByText(String text); Search for an action based upon its text (name) property. Parameters:; text - the text to search for; Returns:; the action, if found, or null otherwise. lookupMenuItem; public MenuItem lookupMenuItem(String menuPath); Search for a menu item based upon its path. Parameters:; menuPath - path to the menu item, in the form ""Main menu>Submenu>Name; R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:34000,extend,extends,34000,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['extend'],['extends']
Modifiability," createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. String; dumpMetadata(). Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. BufferedImage; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:2111,inherit,inherited,2111,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,2,['inherit'],['inherited']
Modifiability," createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2700,plugin,plugin,2700,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['plugin'],['plugin']
Modifiability," createShowSystemInfoDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a window summarizing key system information relevant for QuPath. createSingleStageAction(Supplier<Stage>) - Static method in class qupath.lib.gui.commands.Commands. Create a command that generates a persistent single dialog on demand. createSingleStageAction(Supplier<Stage>, String) - Static method in class qupath.lib.gui.commands.Commands. Create a named command that generates a persistent single dialog on demand. createSingleThreadExecutor(Object) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSpecifyAnnotationDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to prompt the user to specify an annotation to add. createStainVector(String, double, double, double) - Static method in class qupath.lib.color.StainVector. Create a stain vector. createStatModel(Class<? extends StatModel>) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. createStringMeasurement(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Deprecated. createStructureChangeEvent(Object, PathObjectHierarchy, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating that the hierarchy structure has been changed. createSubProject(String, Collection<ProjectImageEntry<T>>) - Method in interface qupath.lib.projects.Project. Create a sub-project that provides a view on the specified entries. createSubTypeAdapterFactory(Class<T>, String) - Static method in class qupath.lib.io.GsonTools. Create a TypeAdapterFactory that is suitable for handling class hierarchies. createTaskRunner() - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the default number of threads defin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:226099,extend,extends,226099,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31897,plugin,plugin,31897,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability," current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double sca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31148,plugin,plugin,31148,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability," currentLanguageProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; currentSyntaxProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; cursorTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the cursorTracking property of this tracker. cut() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; cut() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request cut the current selection. cut() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; cutAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; CYAN - Static variable in class qupath.lib.common.ColorTools. Packed int representing cyan. CYTOPLASM - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:239594,variab,variable,239594,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," default Locale. DefaultPathObjectComparator - Class in qupath.lib.objects. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectComparator() - Constructor for class qupath.lib.objects.DefaultPathObjectComparator;  ; DefaultPathObjectConnectionGroup - Class in qupath.lib.objects. Simple, default implementation of PathObjectConnectionGroup. DefaultPathObjectConnectionGroup() - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup) - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Create a connections group, copying the connections from an existing group. DefaultROIComparator - Class in qupath.lib.roi. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultROIComparator() - Constructor for class qupath.lib.roi.DefaultROIComparator;  ; DefaultScriptableWorkflowStep - Class in qupath.lib.plugins.workflow. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptableWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String, Map<String, ?>, String) - Constructor for class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. Constructor that takes a parameter map for display. DefaultScriptEditor - Class in qupath.lib.gui.scripting. Default multilingual script editor. DefaultScriptEditor(QuPathGUI) - Constructor for class qupath.lib.gui.scripting.DefaultScriptEditor. Constructor. DefaultScriptLanguage - Class in qupath.lib.gui.scripting.languages. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage(String, Collection<String>, ScriptAutoCompletor) - Constructor for class qupath.lib.gui.scripting.languages.DefaultScriptLanguage.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:244660,plugin,plugins,244660,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public Strin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:2800,inherit,inherited,2800,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability," default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3295,inherit,inherited,3295,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability," description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2617,inherit,inherited,2617,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['inherit'],['inherited']
Modifiability," description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2674,inherit,inherited,2674,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['inherit'],['inherited']
Modifiability," detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interfa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:1894,extend,extends,1894,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['extend'],['extends']
Modifiability," deviation filter to all channels of an image, with symmetric boundary padding. stdDevFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D local standard deviation filter to all channels of an image. stop() - Method in class qupath.lib.common.Timeit. Stop the Timeit. stop() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Stop the overlap, halting any pending tile requests. stopMoving() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving immediately. stopWaiting(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; store(DefaultImageRegionStore) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the region store used to paint the underlying image. storeMetadataValue(String, String) - Method in class qupath.lib.objects.PathObject. Store a metadata value. StringParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a String value. stripExtension(String) - Static method in class qupath.lib.common.GeneralTools. Strip the extension from a file name or path, leaving the rest of the string unchanged. stripInvalidFilenameChars(String) - Static method in class qupath.lib.common.GeneralTools. Strip characters that would make a String invalid as a filename. STROMA - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Stroma classification. STROMA - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Stroma classification. STRUCTURE_TENSOR_COHERENCE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.Mul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:998871,plugin,plugins,998871,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServer<T>. Type Parameters:; T - . All Superinterfaces:; AutoCloseable. All Known Subinterfaces:; GeneratingImageServer<T>, ImageDataServer<T>. All Known Implementing Classes:; AbstractImageServer, AbstractTileableImageServer, AffineTransformImageServer, BioFormatsImageServer, ChannelDisplayTransformServer, ChannelTransformFeatureServer, CroppedImageServer, ImageJServer, LabeledImageServer, OpenslideImageServer, PathHierarchyImageServer, PixelClassificationImageServer, RearrangeRGBImageServer, RenderedImageServer, RotatedImageServer, SparseImageServer, TransformingImageServer, WrappedBufferedImageServer. public interface ImageServer<T>; extends AutoCloseable; Generic ImageServer, able to return pixels and metadata.; ; The idea behind making this generic was that it could be used on various platforms and with different UIs, e.g. Swing, JavaFX, ; or with different kinds of image reader.; In practice, the generic parameter is almost always BufferedImage.; ; Important! The readBufferedImage(RegionRequest) method was replaced by readRegion(RegionRequest) in ; v0.4.0. Implementing classes need only to worry about overriding readRegion(RegionRequest) - and legacy implementations ; should be updated to override the new method rather than the old one.; Default implementations of both methods exist to try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:1021,extend,extends,1021,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['extend'],['extends']
Modifiability," display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:5871,plugin,plugin,5871,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability," double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7232,extend,extends,7232,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,3,['extend'],['extends']
Modifiability," enable nearest neighbor searching for a collection of coordinates. createDefaultRGBImage(int, int) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; createDefaultRGBImage(int, int) - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create the default (blank) RGB image for this server. createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer;  ; createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:173516,extend,extends,173516,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," ensure they are drawn within a parent annotation. static DoubleProperty; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, preferReturnToMove. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. wandType; public static ObjectProperty<WandToolEventHandler.WandType> wandTypeProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. wandTypeProperty(). wandUseOverlays; public static BooleanProperty wandUseOverlaysProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. getWandUseOverlays(); setWandUseOverlays(boolean); wandUseOverlaysProperty(). wandSigmaPixels; public static DoubleProperty wandSigmaPixelsProperty; Property representing the Gaussian sigma value used to smooth the image when applying the wand. See Also:. getWandSigmaPixels(); setWandSigmaPixels(double); wandSigmaPixelsProperty(). wandSensitivity; public static DoubleProperty wandSensitivityProperty; Property representing the wand sensitivity",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:5412,inherit,inherited,5412,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,2,['inherit'],['inherited']
Modifiability," equal to the specified child class, ; or an ancestor of that class. boolean; isDerivedClass(). Returns true if #getParentClass() != null. boolean; isDerivedFrom(PathClass parentClass). Returns true if this class, or any ancestor class, is equal to the specified parent class. boolean; isValid(). A PathClass is valid if its name is not null. protected Object; readResolve(). Called during deserialization to ensure that only a single instance of each PathClass exists. void; setColor(int red,; int green,; int blue). Set the color as 8-bit RGB values. void; setColor(Integer colorRGB). Set the color that should be used to display objects with this classification. Set<String>; toSet(). Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names. String; toString();  ; String; toString(String delimiter). Create a string representation, using the specified delimiter between ; elements of derived PathClasses. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. NAME_POSITIVE; public static final String NAME_POSITIVE; Default name for a class representing ""Positive"" staining intensity. See Also:. Constant Field Values. NAME_NEGATIVE; public static final String NAME_NEGATIVE; Default name for a class representing ""Negative"" staining intensity. See Also:. Constant Field Values. NAME_ONE_PLUS; public static final String NAME_ONE_PLUS; Default name for a class representing ""1+"" staining intensity (i.e. weakly positive). See Also:. Constant Field Values. NAME_TWO_PLUS; public static final String NAME_TWO_PLUS; Default name for a class representing ""2+"" staining intensity (i.e. moderately positive). See Also:. Constant Field Values. NAME_THREE_PLUS; public static final String NAME_THREE_PLUS; Default name for a class representing ""3+"" staining intensity (i.e. strongly positive). See Also:. Constant Field Values. DELIMITER; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:5948,inherit,inherited,5948,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,2,['inherit'],['inherited']
Modifiability," event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. Returns:. getPane; public Pane getPane(); Get the pane for display. Returns:. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:3784,extend,extends,3784,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,1,['extend'],['extends']
Modifiability," exported. MeasurementExporter; filter(Predicate<PathObject> filter). Filter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:2227,inherit,inherited,2227,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,1,['inherit'],['inherited']
Modifiability," extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2935,plugin,plugin,2935,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['plugin'],['plugin']
Modifiability," extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static List<PathObject>; createAnnotationsFromSubdivision(DelaunayTools.Subdivision subdivision,; ROI bounds). Create annotations surrounding objects within a specified subdivision based on Voronoi faces. static DelaunayTools.Subdivision; createFromCentroids(Collection<PathObject> pathObjects,; boolean preferNucleusROI). Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs. static DelaunayTools.Subdivision; createFromGeometryCoordinates(Collection<PathObject> pathObjects,; boolean preferNucleusROI,; double densifyFactor). Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object names based upon pre-computed clusters. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static DelaunayTools.Builder; newBuilder(Collection<PathObject> pathObjects). Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. static BiPredicate<PathObject,PathObject>; sameClassificationPredicate(). BiPredicate that returns true for objects that share the same classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DelaunayTools; public DelaunayTools(). Method Details. newBuilder; public static DelaunayTools.Builder newBuilder(Collection<PathObject> pathObjects); Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. Parameters:; pathObjects - ; Returns:. createFromCentroids; public static DelaunayTools.Subdivision createFromCentroids(Collection<PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:2762,extend,extends,2762,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability," fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1017614,plugin,plugins,1017614,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - ; isChanging - . fireObjectClassificationsChangedEvent; public void fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object classifications have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating objects have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating objects have changed, and may still be changing. Parameters:; source - ; pathObjects - ; isChanging - is true, listeners may choose not to respond until an event is fired with isChanging false. fireHierarchyChangedEvent; public void fireHierarchyChangedEvent(Object source,; PathObject pathObject); Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. Parameters:; source - ; pathObject - . fireHierarchyChangedEvent; public void fireHierarchyChangedEvent(Object source); Fire a hierarchy update indicating the hierarchy structure has changed.; This is often a good choice of event if multiple changes may have occurred, of i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:20379,extend,extends,20379,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability," for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptions.DetectionDisplayMode valueOf(String name); Returns the enum constant of this",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1840,inherit,inherited,1840,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['inherit'],['inherited']
Modifiability," for class qupath.lib.measurements.MeasurementFactory. Deprecated.;  ; MeasurementList - Interface in qupath.lib.measurements. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType - Enum Class in qupath.lib.measurements. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory - Class in qupath.lib.measurements. Factory for creating new measurement lists. MeasurementMapPane - Class in qupath.lib.gui.panes. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapPane(QuPathGUI) - Constructor for class qupath.lib.gui.panes.MeasurementMapPane. Constructor. MeasurementMapper - Class in qupath.lib.gui.tools. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementMapper(ColorMaps.ColorMap, String, Collection<? extends PathObject>) - Constructor for class qupath.lib.gui.tools.MeasurementMapper. Constructor. measurementMapperProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; MeasurementPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; MeasurementProcessor - Class in qupath.lib.experimental.pixels. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor() - Constructor for class qupath.lib.experimental.pixels.MeasurementProcessor;  ; MeasurementProcessor.CustomMeasurement<S,T> - Interface in qupath.lib.experimental.pixels. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions - Class in qupath.lib.experimental.pixels. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements - Class in qupath.lib.experimental.pixels. Methods to create custom measurements. measurements(Collection<? extends PathObject>, Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:683626,extend,extends,683626,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:3414,inherit,inherited,3414,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['inherit'],['inherited']
Modifiability," from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefau",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:1894,inherit,inherited,1894,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['inherit'],['inherited']
Modifiability," from clustering all connected objects. void; addNodeMeasurements(). Add Delaunay measurements to each pathObject. boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<Set<PathObject>>; getConnectedClusters(). Get a list of PathObjects that are connected to each other in this triangulation. Collection<double[]>; getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections). Deprecated. Collection<PathObject>; getConnectedNodes(PathObject pathObject,; Collection<PathObject> list). Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.objects.PathObjectConnectionGroup; getPathObjectsForRegion. Constructor Details. DelaunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:2138,inherit,inherited,2138,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,2,['inherit'],['inherited']
Modifiability," future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. Legacy method to request pixels for a RegionRequest, now replaced by readRegion(RegionRequest).; This method is deprecated; if the generic parameter <T> represented ; anything other than a BufferedImage then its name became misleading. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException. readRegion; default T readRegion(RegionRequest request); throws IOException; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(double, int, int, int, int, int, int); readRegion(double, int, int, int, int); readBufferedImage(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t); throws IOException; Read ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:8882,extend,extends,8882,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['extend'],['extends']
Modifiability," getDefaultThumbnail(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDefaultThumbnail(int, int) - Method in interface qupath.lib.images.servers.ImageServer. Get the default thumbnail for a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsample factor is scaled for one increment of QuPathViewer.zoomIn() or ; QuPathViewer.zoomOut(). getDensityType() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the normalization type of the density map. getDerivedBoundaryS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:375737,plugin,plugins,375737,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:380744,plugin,plugins,380744,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:473559,plugin,plugins,473559,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thick",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:3230,inherit,inherited,3230,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['inherit'],['inherited']
Modifiability," getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<B",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526537,plugin,plugins,526537,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... paths). Install colormaps from the specified paths. static boolean; installColorMaps(ColorMaps.ColorMap... colorMaps). Install colormaps. static void; setDefaultColorMap(ColorMaps.ColorMap colorMap). Set the default ColorMaps.ColorMap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorMaps; public ColorMaps(). Method Details. installColorMaps; public static boolean installColorMaps(Path... paths); Install colormaps from the specified paths. Parameters:; paths - optional paths containing either .tsv files containing colormaps, or directories that contain such .tsv files.; Returns:; true if changes were made, false otherwise. installColorMaps; public static boolean installColorMaps(ColorMaps.ColorMap... colorMaps); Install colormaps. Parameters:; colorMaps - one or more colormaps.; Returns:; true if changes were made, false otherwise. getColors; public static int[] getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert); Get an array of packed RGB values for a specific colormap. Parameters:; map - the colormap providing colors; nValues - the number of colors to extract; doInvert - if true, reverse the order of t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:2243,inherit,inherited,2243,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['inherit'],['inherited']
Modifiability," hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:1993,inherit,inherited,1993,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,1,['inherit'],['inherited']
Modifiability," if the writer is capable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:2471,inherit,inherited,2471,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['inherit'],['inherited']
Modifiability, image to objects. labelText(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. LAPLACIAN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Laplacian of Gaussian filter. laplacianOfGaussian(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the Laplacian of Gaussian image. LARGE - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; LARGE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; lastChangeTimestamp() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get a property representing the timestamp of the last recorded change for any property. lastValue - Variable in class qupath.lib.plugins.parameters.BooleanParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers. layout(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:647724,plugin,plugins,647724,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," image, with symmetric boundary padding. filter2D(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D filter to all channels of an image. filterByCentroid(boolean) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Filters() - Constructor for class qupath.opencv.ops.ImageOps.Filters;  ; filterSingleZ(List<Mat>, double[], int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. filterZ(List<Mat>, Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Filter filter along entries in the input list. finalize() - Method in class qupath.lib.images.servers.AbstractImageServer. Attempt to close the server. findAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; findByStringID(Collection<String>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on a String representation of their IDs. findByUUID(Collection<UUID>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on their IDs. FindConvexHullDetectionsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to identify/remove detections from the convex hull of all detections. FindConvexHullDetectionsPlugin() - Constructor for class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; findDensityMapHotspots(String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map for the current image. findDensityMapHotspots(ImageData<BufferedImage>, String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDensityMapHotspots(ImageData<BufferedImage>, DensityMaps.DensityMapBuilde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:305597,extend,extends,305597,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," in class qupath.lib.gui.scripting.DefaultScriptEditor. Update the font size for the script editor and console. promptToSetGridLineSpacing(OverlayOptions) - Static method in class qupath.lib.gui.commands.Commands. Prompt to input the spacing for the grid lines optionally displayed on viewers. promptToSetImageType(ImageData<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.panes.ImageDetailsPane. Prompt the user to set the ImageData.ImageType for the image. promptToSimplifySelectedAnnotations(ImageData<?>, double) - Static method in class qupath.lib.gui.commands.Commands. Show a prompt to selected annotations in a hierarchy. promptToUpdateUris(Collection<T>, URI, URI, boolean) - Static method in class qupath.lib.gui.commands.UpdateUrisCommand. Show dialog prompting the user to update URIs for missing files. PROP_JAVADOC_PATH - Static variable in class qupath.lib.gui.JavadocViewer. Name of the system property used to set the javadoc path. PROPERTIES - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java properties files. PROPERTIES - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PropertiesLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:797991,variab,variable,797991,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsArray() - Method in class qupath.lib.objects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a choice parameter value (or its default) for the specified key. getChoices() - Method in class qupath.lib.plugins.parameters.ChoiceParameter. Get a list of available choices. getChooser(Window) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Get a QuPathChooser instance linked to a specific window. getCircularity(ROI) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). getCircularity(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). getCircularStructuringElement(int) - Static method in class qupath.opencv.tools.OpenCVTools. Deprecated.; OpenCVTools.createDisk(int, boolean) gives more reliable shapes. getCitationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. getClassification(ImageServer<BufferedImage>, int, int, int, int) - Static method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:352305,plugin,plugins,352305,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series will be written. allZSlices() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all z-slices are exported. almostTheSame(double, double, double) - Static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:35182,variab,variable,35182,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:955362,plugin,plugins,955362,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," in class qupath.opencv.DetectCytokeratinCV;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractPlugin. For a specified parent object, generate a task to run. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:28011,plugin,plugins,28011,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," in the future, but is not currently supported. Field Summary; Fields. Modifier and Type; Field; Description; static long; UNKNOWN_LENGTH. Constant to represent an unknown dimension length. static DnnShape; UNKNOWN_SHAPE. Constant to represent an unknown shape. static long; UNKNOWN_SIZE. Constant to represent an unknown size (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final long; get(int i). Get the length of the specified dimension. final long[]; getShape(). Get a copy of the internal dimensions array. final boolean; isUnknown(). Returns true if the shape is unknown. final int; numDimensions(). The total number of dimensions, i.e. static DnnShape; of(long... shape). Create a new DnnShape with the specified dimension lengths. final long; size(). Total number of elements in a blob with this shape; This is the product of the lengths returned by getShape() or UNKNOWN_SHAPE. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. UNKNOWN_SHAPE; public static DnnShape UNKNOWN_SHAPE; Constant to represent an unknown shape. UNKNOWN_LENGTH; public static long UNKNOWN_LENGTH; Constant to represent an unknown dimension length. UNKNOWN_SIZE; public static long UNKNOWN_SIZE; Constant to represent an unknown size (i.e. number of elements within a blob, mat or tensor). Method Details. getShape; public final long[] getShape(); Get a copy of the internal dimensions array. Returns:. get; public final long get(int i); Get the length of the specified dimension. Parameters:; i - ; Returns:. of; public static DnnShape of(long... shape); Create a new DnnShape with the specified dimension lengths. Parameters:; shape - ; Returns:. numDimensions; public final int numDimensions(); The total number of dimensions, i.e. the length of the array returned by getShape(). Returns:. isUnknown; public final boolean is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnShape.html:1818,inherit,inherited,1818,javadoc/docs/qupath/opencv/dnn/DnnShape.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnShape.html,2,['inherit'],['inherited']
Modifiability," inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADDED; public static final PathObjectHierarchyEvent.HierarchyEventType ADDED; An object has been added. REMOVED; public static final PathObjectHierarchyEvent.HierarchyEventType REMOVED; An object has been removed. OTHER_STRUCTURE_CHANGE; public static final PathObjectHierarchyEvent.HierarchyEventType OTHER_STRUCTURE_CHANGE; A more complex structural change was made than simply either adding or removing objects. CHANGE_CLASSIFICATION; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_CLASSIFICATION; A change was made to one or more object classifications. CHANGE_MEASUREMENTS; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_MEASUREMENTS; A change was made to one or more object measureme",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html:2047,inherit,inherited,2047,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,2,['inherit'],['inherited']
Modifiability," inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:2210,plugin,plugins,2210,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,4,['plugin'],"['plugin', 'plugins']"
Modifiability," int; getSeries(). Get the series index, as used by Bio-Formats. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:3169,inherit,inherited,3169,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['inherit'],['inherited']
Modifiability," int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3818,inherit,inherited,3818,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['inherit'],['inherited']
Modifiability," int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageDa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3312,inherit,inherited,3312,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['inherit'],['inherited']
Modifiability," interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the varianc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548480,plugin,plugins,548480,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," int minT,; int maxT,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. static List<PathObject>; getAncestorList(PathObject pathObject). Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). static TMACoreObject; getAncestorTMACore(PathObject pathObject). Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. static <T extends PathObject>List<T>; getAreaObjects(Collection<T> pathObjects). Get a list of objects with area ROIs from a collection of objects. static Set<String>; getAvailableFeatures(Collection<? extends PathObject> pathObjects). Get a set containing the names of all measurements found in the measurement lists of a specified object collection. static Collection<PathObject>; getDescendantObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all descendant objects with a specified type. static List<PathObject>; getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent). Get all descendant objects as a flattened list. static <T extends PathObject>List<T>; getLineObjects(Collection<T> pathObjects). Get a list of objects with line ROIs from a collection of objects. static ROI; getNucleusOrMainROI(PathObject pathObject). Get the nucleus ROI for a cell, or the main ROI if no nucleus is found. static ROI; getNucleusROI(PathObject pathObject). Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. static Collection<PathObject>; getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:5506,extend,extends,5506,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability," is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1042,extend,extends,1042,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['extend'],['extends']
Modifiability," is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects; Class OpenCVMLClassifier<T>. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<T>; qupath.opencv.ml.objects.OpenCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1066,extend,extends,1066,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,2,['extend'],['extends']
Modifiability," is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:4027,inherit,inherited,4027,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['inherit'],['inherited']
Modifiability," is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5146,extend,extends,5146,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability," java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; of this class, and a timestamp derived from the last change. Specified by:; getUniqueID in interface ImageRenderer; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html:1505,variab,variable,1505,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,1,['variab'],['variable']
Modifiability," later have measurements added. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TilerPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:1766,inherit,inherited,1766,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['inherit'],['inherited']
Modifiability," layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastChannelPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannelProperty(). Get the currently-selected channel. ReadOnlyBooleanProperty; currentChannelVisible(). Read-only property indicating whether the currently-selected channel is visible,; i.e. BooleanProperty; disableToggleMenuItemsProperty(). Property to disable options to toggle the visibility of channels. MultipleSelectionModel<ChannelDisplayInfo>; getSelectionModel(). Get the selection model for the channels. ObjectProperty<ImageDisplay>; imageDisplayProperty(). Property for the image display that should be shown and managed by this pane. boolean; isEmpty(). Query if the table is empty, i.e. void; setHideChannel(ChannelDisplayInfo channel). Request that the specified channel is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:3128,inherit,inherited,3128,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability," layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChild",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:2981,inherit,inherited,2981,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability," layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableNumberValue; addThreshold(double x). Add a threshold value. ObservableNumberValue; addThreshold(double x,; Color color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). L",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:2698,inherit,inherited,2698,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability," layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxW",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:2565,inherit,inherited,2565,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['inherit'],['inherited']
Modifiability," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3434,inherit,inherited,3434,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['inherit'],['inherited']
Modifiability," library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3076,inherit,inherited,3076,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['inherit'],['inherited']
Modifiability," lines from the object hierarchy. splitSelectedAnnotationAreasByLines(double, boolean) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSelectedAnnotationAreasByLines(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. splitSelectedAnnotationAreasByLines(PathObjectHierarchy, double, boolean) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSpecifiedAreasByLines(PathObjectHierarchy, Collection<? extends PathObject>, double, boolean) - Static method in class qupath.lib.scripting.QP. Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSubtract(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. splitViewer(QuPathViewer, boolean) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; sqrt() - Static method in class qupath.opencv.ops.ImageOps.Core. Calculate the square root of all pixel values. SQUARE - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Square cap. Stain_1 - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. First stain after color deconvolution. Stain_2 - Enum constant in enum class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:993363,extend,extends,993363,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. Type Parameters:; T - ; Parameters:; providerClass - ; uri - ; args - ; Returns:. getURI; public URI getURI(); Get the URI used by this builder. Returns:. getArgs; public String[] getArgs(); Get the args array. This returns a clone of any original array. Returns:. buildOriginal; protected ImageServer<T> buildOriginal(); throws Exception. Specified by:; buildOriginal in class ImageServerBuilder.AbstractServerBuilder<T>; Throws:; Exception. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServerBuilder.ServerBuilder; Get a list of URIs required by this builder.; The purpose is to identify resources that are required. Returns:; See Also:. ImageServerBuilder.ServerBuilder.updateURIs(Map). updateURIs; public ImageServerBuilder.ServerBuilder<T> updateURIs(Map<URI,URI> updateMap); D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:2939,extend,extends,2939,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,1,['extend'],['extends']
Modifiability," lists of Strings (entries). readCSV(Scanner) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). readExternal(ObjectInput) - Method in class qupath.lib.color.ColorDeconvolutionStains;  ; readExternal(ObjectInput) - Method in class qupath.lib.color.StainVector;  ; readExternal(ObjectInput) - Method in class qupath.lib.geom.Point2;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathCellObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathObjectConnections;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathROIObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.TMACoreObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.Workflow;  ; readFile(File) - Method in class qupath.lib.gui.scripting.ScriptTab. Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). readFileAsString(File) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file into a single String. readFileAsString(String) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file given by the specified path into a single String. readHierarchy() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. readHierarchy(File) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readHierarchy(InputStream) - Static method in class qupath.lib.io.PathIO. Read a Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:822436,plugin,plugins,822436,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods inherited from class qupath.lib.gui.viewer.QuPathViewer; addViewerListener, centerImage, centerROI, componentContains, componentPointToImagePoint, componentPointToImagePoint, fireImageDataChanged, fireVisibleRegionChangedEvent, forceOverlayUpdate, gammaProperty, getActiveTool, getAllSelectedObjects, getAllThumbnails, getBorderColor, getCenterPixelX, getCenterPixelY, getCurrentROI, getCursor, getCustomOverlayLayers, getCustomPixelLayerOverlay, getDefaultZoomFactor, getDisplayedClipShape, getDisplayedRegionShape, getDownsampleFactor, getFullLocationString, getFullMagnification, getGamma, getGammaOp, getHierarchy, getImageData, getImageDisplay, getImageObjectClassificationString, getImagePlane, getImageRegionStore, getMagnification, getMaxDownsample, getMaxROIHandleSize, getMinDownsample, getMousePosition, getObjectClassificationString, getOverlayLayers, getOverlayOptions, getRenderer, getRGBThumbnail, getROIEditor, getRotation, getSelectedObject, getServer, getServerBounds, getServerHeight, getSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:1999,inherit,inherited,1999,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,1,['inherit'],['inherited']
Modifiability," matrices for computation of Haralick features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CoocurranceMatrices(int n). Initialize coocurrence matrices. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; computeFeatures(). Compute features. HaralickFeatures; getMaxFeatures(). Compute maximum features from all four rotations. HaralickFeatures; getMeanFeatures(). Compute averaged features over all four rotations. HaralickFeatures; getMinFeatures(). Compute minimum features from all four rotations. void; put0(int i,; int j). Record coocurrence for a (binned) value pair without rotation. void; put135(int i,; int j). Record coocurrence for a (binned) value pair with 135 degree rotation. void; put45(int i,; int j). Record coocurrence for a (binned) value pair with 45 degree rotation. void; put90(int i,; int j). Record coocurrence for a (binned) value pair with 90 degree rotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CoocurranceMatrices; public CoocurranceMatrices(int n); Initialize coocurrence matrices. Parameters:; n - number of bins. Method Details. put0; public void put0(int i,; int j); Record coocurrence for a (binned) value pair without rotation. Parameters:; i - ; j - . put45; public void put45(int i,; int j); Record coocurrence for a (binned) value pair with 45 degree rotation. Parameters:; i - ; j - . put90; public void put90(int i,; int j); Record coocurrence for a (binned) value pair with 90 degree rotation. Parameters:; i - ; j - . put135; public void put135(int i,; int j); Record coocurrence for a (binned) value pair with 135 degree rotation. Parameters:; i - ; j - . computeFeatures; public void computeFeatures(); Compute features. getMeanFeatures; public HaralickFeatures getMeanFeatures(); Compute averaged features over all four rotations. Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html:1544,inherit,inherited,1544,javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,1,['inherit'],['inherited']
Modifiability," means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). tryToClassify; protected int tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing featur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:4794,extend,extends,4794,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['extend'],['extends']
Modifiability," menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTask",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:4271,extend,extends,4271,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,6,"['Plugin', 'extend']","['PluginRunner', 'extends']"
Modifiability," method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid and set it as active on the hierarchy for an image. addUnclassifiedLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addUnclassifiedLabel(int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addValue(double) - Method in class qupath.lib.analysis.stats.RunningStatistics. Add another value; NaN values are counted but do not contribute to the statistics. addViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Add a viewer listener. addWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Add a listener for changes to the workflow. addWorkflowStep(ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addWorkflowStep(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Add a workflow step to the ImageData indicating the argument that this plugin was run with. AffineTransformImageServer - Class in qupath.lib.images.servers. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransformImageServer(ImageServer<BufferedImage>, AffineTransform) - Constructor for class qupath.lib.images.servers.AffineTransformImageServer;  ; AffineTransforms - Class in qupath.lib.awt.common. Helper class for working with affine transforms. AffineTransforms() - Constructor for class qupath.lib.awt.common.AffineTransforms;  ; alertType(Alert.AlertType) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a dialog styled as a specified aler",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:32622,plugin,plugins,32622,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDispatcher, getId, getInitialCursor, getInitialFocusTraversable, getInputMethodRequests, getLayoutBounds, getLayoutX, getLayoutY,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:4992,inherit,inherited,4992,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,3,['inherit'],['inherited']
Modifiability," modality(Modality modality). Deprecated.; Specify the modality of the dialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable (but default it is not). void; show(). Deprecated.; Show the dialog. Optional<ButtonType>; showAndWait(). Deprecated.; Show the dialog. Dialogs.Builder; size(double width,; double height). Deprecated.; Specify the dialog height. Dialogs.Builder; title(String title). Deprecated.; Specify the dialog title. Dialogs.Builder; warning(). Deprecated.; Create a warning alert dialog. Dialogs.Builder; width(double width). Deprecated.; Specify the dialog width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Deprecated. Method Details. title; public Dialogs.Builder title(String title); Deprecated.; Specify the dialog title. Parameters:; title - dialog title; Returns:; this builder. headerText; public Dialogs.Builder headerText(String header); Deprecated.; Specify the dialog header text.; This is text that is displayed prominently within the dialog. Parameters:; header - dialog header; Returns:; this builder; See Also:. contentText(String). contentText; public Dialogs.Builder contentText(String content); Deprecated.; Specify the dialog content text.; This is text that is displayed within the dialog. Parameters:; content - dialog content text; Returns:; this builder; See Also:. headerText(String). content; public Dialogs.Builder content(Node content); Deprecated.; Specify a Node to display within the dialog. Parameters:; con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:2943,inherit,inherited,2943,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,1,['inherit'],['inherited']
Modifiability," nTimepoints() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nTimepoints() - Method in interface qupath.lib.images.servers.ImageServer. Number of time points in a time series. nTimepoints() - Method in class qupath.lib.images.servers.PixelCalibration. Get the number of known time points. NUCLEI_AND_BOUNDARIES - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell nuclei. NUCLEUS - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Nucleus only. NUCLEUS_CELL_RATIO - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Nucleus/cell area ratio (only relevant to cell objects). NULL_CLASS - Static variable in class qupath.lib.objects.classes.PathClass. Default PathClass that represents no classification. numCommandThreadsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying the preferred number of threads QuPath should use for multithreaded commands. numDimensions() - Method in class qupath.opencv.dnn.DnnShape. The total number of dimensions, i.e. NumericParameter<S> - Class in qupath.lib.plugins.parameters. Abstract parameter to represent a numeric value. numNaNs(double[]) - Static method in class qupath.lib.common.GeneralTools. Count the number of NaN values in an array. NumpyTools - Class in qupath.opencv.tools. Read .npy and .npz files from NumPy. NumpyTools() - Constructor for class qupath.opencv.tools.NumpyTools;  ; numThreads - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; nValues() - Method in class qupath.lib.analysis.stats.Histogram. Number of values represented in the histogram (i.e. nVertices() - Method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:714891,variab,variable,714891,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," names of all numeric measurements. ReadOnlyListWrapper<String>; getMetadataNames(). Get the names of all columns corresponding to metadata (String) values. double; getNumericValue(PathObject pathObject,; String column). Get the numeric value from an object for the specific measurement. static ImageServer<BufferedImage>; getPixelLayer(ImageData<?> imageData). Request the pixel layer from an ImageData. String; getStringValue(PathObject pathObject,; String column). Get a string representation of the value. String; getStringValue(PathObject pathObject,; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:2848,extend,extends,2848,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['extend'],['extends']
Modifiability," navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Serialized Form. Package qupath.lib.color. Class qupath.lib.color.ColorDeconvolutionStains; class ColorDeconvolutionStains extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.color.StainVector; class StainVector extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.geom. Class qupath.lib.geom.Point2; class Point2 extends qupath.lib.geom.AbstractPoint implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.images.servers.openslide.jna. Exception Class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException; class OpenSlideDisposedException extends RuntimeException implements Serializable. Package qupath.lib.measurements. Class qupath.lib.measurements.NumericMeasurementList.DoubleList; class DoubleList extends qupath.lib.measurements.NumericMeasurementList.AbstractNumericMeasurementList implements Serializable. serialVersionUID:; 1L. Serialized Fields. values; double[] values. Class qupath.lib.measurements.NumericMeasurementList.FloatList; class FloatList extends qupath.lib.measurements.NumericMeasurementList.Abstra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:1086,extend,extends,1086,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability," needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2321,inherit,inherited,2321,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['inherit'],['inherited']
Modifiability," new ActionTools.ActionBuilder. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(Consumer<ActionEvent> handler); Create an ActionTools.ActionBuilder with the specified event handler. Parameters:; handler - ; Returns:; a new ActionTools.ActionBuilder. createMenuItem; public static MenuItem createMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:11051,config,configured,11051,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['config'],['configured']
Modifiability," number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. renderer; public ObjectProperty<ImageRenderer> rendererProperty; Get the ImageRenderer property used with this overlay. See Also:. getRenderer(); setRenderer(ImageRenderer); rendererProperty(). Method Details. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier); Create an overlay to display the live application of a PixelClassifier to an image, using the default numbe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:4038,inherit,inherited,4038,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['inherit'],['inherited']
Modifiability," of PathRootObjects). Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). Deprecated.; since v0.4.0. boolean; isLocked(). Query the locked status for the object, indicating whether it should be editable or not. void; readExternal(ObjectInput in);  ; void; setLocked(boolean locked). Set locked flag, indicating that the object ROI should not be modified. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. void; setROI(ROI roi). Set the ROI for this object. void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html:1798,inherit,inherited,1798,javadoc/docs/qupath/lib/objects/PathROIObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html,1,['inherit'],['inherited']
Modifiability," of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; Unsu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3548,inherit,inherited,3548,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['inherit'],['inherited']
Modifiability," of painting a TMA Grid. Author:; Pete Bankhead; See Also:. HierarchyOverlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Grap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:1610,inherit,inherited,1610,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,1,['inherit'],['inherited']
Modifiability," of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2841,plugin,plugins,2841,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['plugin'],['plugins']
Modifiability," of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2707,plugin,plugins,2707,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugins']
Modifiability," of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSuppor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:524232,extend,extends,524232,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:2384,extend,extends,2384,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,6,"['extend', 'plugin']","['extends', 'plugin', 'pluginClass']"
Modifiability," parallelize(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the default number of threads (current 4). parallelize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the requested number of threads. ParallelTileObject - Class in qupath.lib.plugins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.experimental.pixels. Parameters for use with a PixelProcess",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:744640,plugin,plugins,744640,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParamete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:3220,plugin,plugin,3220,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,2,['plugin'],['plugin']
Modifiability," pixels provide ; classification or probability information. Parameters:; classifierServer - the classification image server; Returns:; the PixelClassificationMeasurementManager. addMeasurementsToSelectedObjects; public static boolean addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID); Add measurements to selected objects based upon the output of a PixelClassifier. Parameters:; imageData - the image data, which will be input to the classifier and which contains the selected objects to measure. ; If no objects are selected, measurements will be applied to the entire image.; classifier - the pixel classifier; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise. addMeasurements; public static boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID); Add measurements to specified objects from a PixelClassificationMeasurementManager. Parameters:; objectsToMeasure - the objects to measure.; manager - the manager used to generate measurements; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Apply classification from a server to a collection of objects. Parameters:; classifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:16644,extend,extends,16644,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,2,['extend'],['extends']
Modifiability," possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. caretPositionProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; caretPositionProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Property for the current caret position. caretPositionProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; ceil() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that ceils floating point values. ceil(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Ceil values in a floating point Mat. CELL - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region. CELL_NUCLEI_BOTH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CELL_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CellCountsCV - Class in qupath.opencv. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellCountsCV() - Constructor for class qupath.opencv.CellCountsCV;  ; cellDisplayActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; CellDisplayActions() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions;  ; CellIntensityClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellIntensityClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.CellIntensityClassificationCommand. Constructor. cells() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept cell objects only. CELLS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept cells. CellTools - Class in qupath.lib.objects. Helper class for working with PathObjects that r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:86005,plugin,plugin,86005,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability," process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2936,plugin,plugins,2936,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['plugin'],['plugins']
Modifiability," processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976391,plugin,plugins,976391,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors are regenerated.; This is useful if the Locale has changed, and so the text may need to be updated. addPropertyPreference; @Deprecated; public <T> void addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; name - ; category - ; description - . addColorPropertyPreference; @Deprecated; public void addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified StringProperty. Parameters:; prop - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:3706,extend,extends,3706,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,1,['extend'],['extends']
Modifiability," protected ; RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order);  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). static ImageServerBuilder.ServerBuilder<BufferedImage>; getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:2000,inherit,inherited,2000,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['inherit'],['inherited']
Modifiability," protected ScriptEditorControl<?>; getNewEditor();  ; protected String; getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:4978,inherit,inherited,4978,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['inherit'],['inherited']
Modifiability," public class BioFormatsOptionsExtension; extends Object; implements QuPathExtension; A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; BioFormatsOptionsExtension.BioFormatsPreferences;  ; static class ; BioFormatsOptionsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getNam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html:1541,inherit,inherited,1541,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,2,['inherit'],['inherited']
Modifiability," public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. showStartupMessageProperty; public static BooleanProperty showStartupMessageProperty(); Show a startup message when QuPath is launched. Returns:. startupScriptProperty; public static StringProperty startupScriptProperty(); Path to a startup script that should be run immediately after QuPath's launch. Returns:. showToolBarBadgesProperty; public static BooleanProperty showToolBarBadgesProperty(); Show badges on the toolbar, e.g. to provide messages or warnings. Returns:. hasJavaPreferences; public static boolean hasJavaPreferences(); Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. Returns:. getConfigPath; public static Path getConfigPath(); throws IOException,; URISyntaxException; Try to get the path to the config file.; Editing this is sometimes needed for preferences that need to be fixed during starting, ; such as the java.library.path or max memory settings. Returns:; Throws:; IOException; URISyntaxException. maxMemoryMBProperty; public static IntegerProperty maxMemoryMBProperty(); Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application.; ; Setting this will attempt to set -Xmx by writing to a .cfg file in the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. Returns:. getUserPreferences; @Deprecated; public static Preferences getUserPreferences(); Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). Get the Preferences object for storing user preferences.; ; Note that the preferences object returned by this method must n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:45628,config,config,45628,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['config'],['config']
Modifiability," qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774434,extend,extends,774434,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis - package qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms - package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features - package qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps - package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images - package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats - package qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival - package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common - package qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:806658,plugin,plugins,806658,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," qupath.lib.gui.measure.PathTableData<T>; qupath.lib.gui.viewer.tools.PathTool; qupath.lib.classifiers.pixel.PixelClassifier; qupath.lib.geom.Point; java.util.function.Predicate<T>. qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. qupath.opencv.dnn.PredictionFunction<T>; qupath.lib.experimental.pixels.Processor<S,T,U>; qupath.lib.projects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.lib.images.servers.TileRequestManager; qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp; qupath.lib.projects.ProjectImageEntry<T>. qupath.lib.plugins.workflow.WorkflowListener. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionConfig (implements java.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:42397,plugin,plugins,42397,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability," qupath.lib.gui.prefs.PathPrefs. Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. createPixelClassificationServer(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassificationServer(ImageData<BufferedImage>, PixelClassifier, String, ColorModel, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<PixelClassifier>, StringExpression) - Static method in class qupath.process.gui.commands.ml.PixelClassifierUI. Create a standard button pane for pixel classifiers, to create, measure and classify objects. createPlugin(Class<? extends PathPlugin>) - Method in class qupath.lib.gui.QuPathGUI. Create a plugin from a specified class. createPluginAction(String, Class<? extends PathPlugin>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an action for a plugin to be run through this QuPath instance. createPluginAction(String, PathPlugin<BufferedImage>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action to call the specified plugin for the current image. createPointsEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPointsROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from an array of x and y coordinates. createPointsROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI containing a single point. createPointsROI(List<? extends Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from a list of points. createPoi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:209620,extend,extends,209620,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class qupath.lib.geom.Point2. Point constructor. PointI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769736,plugin,plugins,769736,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.open",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6321,plugin,plugins,6321,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['plugin'],['plugins']
Modifiability," qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measurement list for this object is not empty. hasNucleus() - Method in class qupath.lib.objects.PathCellObject. Returns true if a nucleus ROI is stored for this cell. hasObjectsForRegion(Class<? extends PathObject>, ImageRegion) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. hasPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the pixel width and height information in microns is known. hasPointROI(PathObject) - Static method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:571616,plugin,plugins,571616,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," qupath.lib.regions.Padding. Add this padding to another. ADD - Enum constant in enum class qupath.lib.roi.RoiTools.CombineOp. Add ROIs (union). ADD_COLUMN_AFTER - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; ADD_COLUMN_BEFORE - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; ADD_ROW_AFTER - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; ADD_ROW_BEFORE - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; addActions - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; AddActions() - Constructor for class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; addAllRegions(ImageServer<BufferedImage>, int) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Add all regions for a specific level of an ImageServer. addBooleanParameter(String, String, boolean) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter. addBooleanParameter(String, String, boolean, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter, with help text. addChartExportMenu(XYChart<Number, Number>, ContextMenu) - Static method in class qupath.lib.gui.charts.ChartTools. Add a menu item to a context menu for displaying a chart for export. addChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Add an object to the child list of this object. addChildObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Add a collection of objects to the child list of this object. addChoiceParameter(String, String, S, List<S>) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices. addChoiceParameter(String, String, S, List<S>, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:12547,plugin,plugins,12547,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," qupath.lib.scripting.QP. Clear the selected objects for the current PathObjectHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; resolveHierarchy() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Attempt to resolve the parent-child relationships between all obje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:864834,plugin,plugins,864834,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," qupath.opencv.tools.GroovyCV. Multiply elements of an array by -1. NEGATIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'negative'. NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'negative'. nEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events, either observed or censored. NEVER - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Don't use the system menubar for any windows. NEVER - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Never display. newBuilder(Collection<PathObject>) - Static method in class qupath.lib.analysis.DelaunayTools. Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. newInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Create a new instance. nFeatures() - Method in class qupath.lib.analysis.features.HaralickFeatures. Total number of Haralick features. nFeatures() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; nFeatures() - Method in class qupath.opencv.ml.objects.features.Normalizer. The total number of features supported by this Normalizer. nFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the number of recorded frames. nImages() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return an estimate of the number of images if known, or -1 if unknown. nImagesLargest() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return the number of images with the largest image size, if known, or -1 if unknown. nLevels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the number of resolution levels. nMissingValues() - Method in class qupath.lib.analysis.s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:710201,plugin,plugins,710201,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," qupath.process.gui.commands.CreateChannelTrainingImagesCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateCompositeClassifierCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateRegionAnnotationsCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateTrainingImageCommand; qupath.lib.gui.scripting.completors.DefaultAutoCompletor (implements qupath.lib.scripting.languages.ScriptAutoCompletor). qupath.lib.gui.scripting.completors.GroovyAutoCompletor; qupath.lib.gui.scripting.completors.PythonAutoCompletor. qupath.lib.gui.images.stores.DefaultImageRegionStore (implements qupath.lib.gui.images.stores.ImageRegionRenderer); qupath.lib.objects.DefaultPathObjectComparator (implements java.util.Comparator<T>); qupath.lib.objects.DefaultPathObjectConnectionGroup (implements java.io.Externalizable, qupath.lib.objects.PathObjectConnectionGroup); qupath.lib.roi.DefaultROIComparator (implements java.util.Comparator<T>); qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep (implements qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor). qupath.lib.gui.scripting.richtextfx.RichScriptEditor. qupath.lib.objects.hierarchy.DefaultTMAGrid (implements qupath.lib.objects.hierarchy.TMAGrid); qupath.lib.analysis.DelaunayTools; qupath.lib.analysis.DelaunayTools.Builder; qupath.lib.analysis.DelaunayTools.Subdivision; qupath.opencv.features.DelaunayTriangulation (implements qupath.lib.objects.PathObjectConnectionGroup); qupath.process.gui.commands.DensityMapCommand (implements java.lang.Runnable); qupath.process.gui.commands.density.DensityMapDialog; qupath.lib.analysis.heatmaps.DensityMaps; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters; qupath.process.gui.commands.density.DensityMapUI; qupath.lib.plugins.DetectionPluginTools; qupath.lib.gui.dialogs.Dialo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:12621,plugin,plugins,12621,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability," refreshIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy. static boolean; relabelTMAGrid(String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel the current TMA grid. static boolean; relabelTMAGrid(PathObjectHierarchy hierarchy,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static void; removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the current image data. static void; removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the specified hierarchy. static void; removeObject(PathObject pathObject,; boolean keepChildren). Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(PathObject[] pathObjects,; boolean keepChildren). Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static boolean; removeObjectsOutsideImage(). Remove objects that are entirely outside the current image. static boolean; removeObjectsOutsideImage(boolean ignoreIntersecting). Remove objects that are entirely or partially outside the current image. static boolean; removeObjectsOutsideImage(ImageData<?> imageData). Remove objects that are entirely or outside the specified image. static boolean; removeObjectsOutsideImage(ImageData<?> imageData,; boolean ignoreIntersecting). Remove objects that are entirely or partially outside the specified image. static boolean; removeOrClipObjectsOutsideImage(). Remove o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:26896,extend,extends,26896,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability," results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3061,inherit,inherited,3061,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability," results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3556,inherit,inherited,3556,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability," selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Set one or more objects to be selected within the specified hierarchy. Parameters:; hierarchy - ; pathObjects - . selectObjects; public static void selectObjects(PathObject... pathObjects); Set one or more objects to be selected within the current hierarchy. Parameters:; pathObjects - . getObjects; public static List<PathObject> getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Get a list of all objects in the specified hierarchy according to a specified predicate. Parameters:; hierarchy - ; predicate - ; Returns:. selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. Parameters:; hierarchy - ; predicate - . selectObjectsByClass; public static void selectObjectsByClass(Class<? extends PathObject> cls); Set objects that are a subclass of a specified class.; Not to be confused with selectObjectsByPathClass(PathClass...) and selectObjectsByClassification(String...). Parameters:; cls - . selectObjectsByClass; public static void selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Set objects that are a subclass of a specified class.; Not to be confused with selectObjectsByPathClass(PathObjectHierarchy, PathClass...) and selectObjectsByClassification(PathObjectHierarchy, String...). Parameters:; hierarchy - ; cls - . selectAnnotations; public static void selectAnnotations(PathObjectHierarchy hierarchy); Select all annotation objects in the specified hierarchy. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectHierarchy hierarchy); Select all TMA core objects in the specified hierarchy, excluding missing cores. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:86907,extend,extends,86907,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability," set; if a set is provided ; as input then a defensive copy will be made.. void; setColor(int red,; int green,; int blue). Set the display color as 8-bit RGB values. void; setColor(Integer color). Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). void; setColorRGB(Integer color). Deprecated.; since v0.4.0, use setColor(Integer) instead. void; setID(UUID id). Set the ID for this object. void; setLocked(boolean locked). Set locked status, if possible. void; setName(String name). Set the stored object name. void; setPathClass(PathClass pc). Set the classification of the object, without specifying any classification probability. abstract void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. protected Object; storeMetadataValue(String key,; String value). Store a metadata value. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathObject; public PathObject(MeasurementList measurements); Create a PathObject with a specific measurement list.; ; This can be used e.g. to create an object with a more memory-efficient list,; at the cost of generality/mutability. Parameters:; measurements - . PathObject; public PathObject(); Default constructor. Used for Externalizable support, not intended to be used by other consumers. Method Details. getParent; public PathObject getParent(); Request the parent object. Each PathObject may have only one parent. Returns:. setLocked; public void setLocked(boolean locked); Set locked status, if possible.; ; Subclasses should override this method to support locking or unlocking.; Default implementation throws an UnsupportedOperationException if an ; attempt is made to unlock the object. Parameters:; locked - . isLocked; public boolean isLocked(); Query t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:6851,inherit,inherited,6851,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['inherit'],['inherited']
Modifiability," setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2607,inherit,inherited,2607,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['inherit'],['inherited']
Modifiability," should be preferred to color lookup tables. BooleanProperty; useInvertedBackground. Property that specifies whether the background should be inverted (i.e. Field Summary. Fields inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; timestamp. Constructor Summary; Constructors. Constructor; Description; ImageDisplay(). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:2181,extend,extends,2181,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['extend'],['extends']
Modifiability," specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual names. fromBlob(T) - Method in interface qupath.opencv.dnn.BlobFunction. Convert a blob (generally the result of a prediction) to a list of mats. fromCollection(Collection<String>) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass using all the name elements specified in the collection, ; without providing a default color. fromCollection(Collection<String>, Integer) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass instance using all the name elements specified in ; the collection, with optional default color if a new ins",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:313757,variab,variable,313757,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," specified ROI. static ByteProcessor; findDirectionalMaxima(ImageProcessor ip). Create a binary image for pixels that have a higher value than their neighbors. static ByteProcessor; findDirectionalMinima(ImageProcessor ip). Create a binary image for pixels that have a lower value than their neighbors. static List<PolygonRoi>; getFilledPolygonROIs(ImageProcessor ip,; int wandMode). Get filled PolygonRois for connected pixels with the same value in an image. static List<PolygonRoi>; getFilledPolygonROIsExperimental(ImageProcessor ip). Experimental 8-connected ROI creation; non-zero pixels considered within objects. static Map<Float,PolygonRoi>; getFilledPolygonROIsFromLabels(ImageProcessor ip,; int wandMode). Get filled Polygon ROIs using distinct labels, creating a map between labels and ROIs. static ImageProcessor; labelImage(ImageProcessor ip,; float threshold,; boolean conn8). Create a labelled image from above-threshold pixels for an image. static ImageProcessor; labelROIs(ImageProcessor ipLabels,; List<? extends Roi> rois). Label ROIs by filling each pixel with an integer value corresponding to the index of the Roi ; in the list + 1. static Roi[]; labelsToConnectedROIs(ImageProcessor ipLabels,; int n). Create ROIs from labels in an image. static List<PolygonRoi>; labelsToFilledRoiList(ImageProcessor ipLabels,; boolean conn8). Convert a labelled image into a list of PolygonRois by tracing. static PolygonRoi[]; labelsToFilledROIs(ImageProcessor ipLabels,; int n). Convert a labelled image into a list of PolygonRois by tracing. static int; removeByAreas(ByteProcessor bp,; double minPixels,; double maxPixels,; boolean conn8). Remove objects containing < minPixels or > maxPixels. static void; removeSmallAreas(ByteProcessor bp,; double minPixels,; boolean conn8). Remove objects having small areas, defined in terms of pixels. static PolygonRoi; wandToRoi(Wand wand). Convert a traced outline from the ImageJ Wand into a PolygonRoi. Methods inherited from class java.lang.O",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:2288,extend,extends,2288,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,1,['extend'],['extends']
Modifiability," static ImageOp; divide(double... values). Divide all pixels by a constant. static ImageOp; ensureType(PixelType type). Convert the Mat to match a specified pixel type. static ImageOp; exp(). Create an op that returns Euler's number e raise to the power of the Mat values. static ImageOp; floor(). Create an op that floors floating point values. static ImageOp; identity(). Create an op that returns its input unchanged. static ImageOp; log(). Create an op that returns the natural logarithm of values. static ImageOp; multiply(double... values). Multiply all pixels by a constant. static ImageOp; power(double value). Raise every pixel element to a power. static ImageOp; replace(double originalValue,; double newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. static ImageOp; splitDivide(ImageOp opTop,; ImageOp opBottom). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by dividing corresponding values. static ImageOp; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:1963,extend,extends,1963,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,2,['extend'],['extends']
Modifiability," static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.Multiscale",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1756,inherit,inherited,1756,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,2,['inherit'],['inherited']
Modifiability," static interface ; DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public DragDropImportListener(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. setupTarget; public void setupTarget(Node target); Prepare a target node to accept drag and drop events. Parameters:; target - . setupTarget; public void setupTarget(Scene target); Prepare a target scene to accept drag and drop events. Parameters:; target - . handle; public void handle(DragEvent event). Specified by:; handle in interface EventHandler<DragEvent>. addFileDropHandler; public void addFileDropHandler(DragDropImportListener.DropHandler<File> handler); Add a new File DropHandler.; ; This may be called on a drag-and-drop application on the main window, if no other ; handler deals with the event. Parameters:; handler - . removeFileDropHandler; public void removeFileDropHandler(DragDropIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:1818,inherit,inherited,1818,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,1,['inherit'],['inherited']
Modifiability," static methods for working with ROIs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; RoiTools.CombineOp. Methods of combining two ROIs. Constructor Summary; Constructors. Constructor; Description; RoiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1399,extend,extends,1399,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability," static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all the masked pixels within an image. static int; getOpenCVPixelType(PixelType pixelType). Get the OpenCV type code corresponding to a PixelType. static Mat; hConcat(Collection<? extends Mat> mats,; Mat dest). Horizontal concatenation for a Mat. static Mat; imageToMat(BufferedImage img). Convert a BufferedImage to an OpenCV Mat. static Mat; imageToMatBGR(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. static Mat; imageToMatRGB(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. static void; invertBinary(Mat matBinary,; Mat matDest). Invert a binary image. static boolean; isFloat(Mat mat). Returns true if a Mat is a floating point (rather than int) type. static Mat; label(Mat matBinary,; int connectivity). Label connected components for non-zero pixels in an image. static int; label(Mat matBinary,; Mat matLabels,; int connectivity). Label connected components for non-zero pixels in an image. static void; labelImage(Mat matBinary,; Mat matLabels,; int contourRetrievalMode). Deprecated.; Use label(Mat, Mat, int) inst",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:7098,extend,extends,7098,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['extend'],['extends']
Modifiability," static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showY",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5466,inherit,inherited,5466,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['inherit'],['inherited']
Modifiability," static boolean isCudaAvailable(); Query whether CUDA is reported as available by OpenCV.; If it is, it will be used by default until setUseCuda(boolean) is used to turn if off. Returns:. setUseCuda; public static void setUseCuda(boolean requestUseCuda); Request that CUDA is used.; This will be ignored if isCudaAvailable() returns false, therefore the main purpose of ; this method is to disable the use of CUDA if it would otherwise be employed. Parameters:; requestUseCuda - . useCuda; public static boolean useCuda(); Returns true if CUDA is available and requested.; Classes that could potentially use CUDA should query this request before attempting to use it. Returns:; true if CUDA should be used, false otherwise. getOutputLayerNames; public static List<String> getOutputLayerNames(Net net); Get the names of all unconnected output layers. Parameters:; net - ; Returns:. getOutputLayers; public static Map<String,DnnShape> getOutputLayers(Net net,; DnnShape... inputShape); Get the names of all unconnected output layers. Parameters:; net - ; inputShape - ; Returns:. parseLayers; public static List<DnnTools.DNNLayer> parseLayers(Net net,; int width,; int height,; int channels,; int batchSize); Parse the layers for a Net, which allows inspection of names and sizes. Parameters:; net - the Net to parse; width - input width; height - input height; channels - input channels; batchSize - input batch size; Returns:. parseStrings; public static List<String> parseStrings(StringVector vector); Extract Strings from a StringVector. Parameters:; vector - ; Returns:. parseShape; public static List<DnnShape> parseShape(MatShapeVector vector); Extract Mat dimensions from a MatShapeVector. Parameters:; vector - ; Returns:. summarize; public static String summarize(Net net,; int width,; int height,; int nChannels); throws IOException; Create a (multiline) summary String for a Net, given the specified image input dimensions. Parameters:; net - the Net to summarize; width - input width; heigh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:6747,layers,layers,6747,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['layers'],['layers']
Modifiability," structure. PathTileObject() - Constructor for class qupath.lib.objects.PathTileObject. Default constructor. PathTileObject(ROI) - Constructor for class qupath.lib.objects.PathTileObject;  ; PathTool - Interface in qupath.lib.gui.viewer.tools. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers - Class in qupath.lib.gui.viewer.tools.handlers;  ; PathToolEventHandlers() - Constructor for class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; PathTools - Class in qupath.lib.gui.viewer.tools. Default PathTool implementations. PathTools() - Constructor for class qupath.lib.gui.viewer.tools.PathTools;  ; pca(double, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Perform PCA to reduce features. pearsonsCorrelation() - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate Pearson's correlation coefficient. PENDING - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile waiting to be processed. PERCENT - Enum constant in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Maps contain at least two channels. percentile(double) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate a percentile. percentile(double, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the image, per channel, using low and high percentiles. percentile(double, double, boolean, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the image using low and high percentiles. percentiles(Mat, double...) - Static method in class qupath.opencv.tools.OpenCVTools. Get percentile values for all pixels in a Mat, ignoring NaNs. physicalMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class. pieChart() - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:761292,plugin,plugins,761292,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runSelectedAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runTasks(Collec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:878253,plugin,plugins,878253,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability," supported by BufferedImage). UINT8. 8-bit unsigned integer. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBitsPerPixel(). Number of bits per pixel. int; getBytesPerPixel(). Number of bytes per pixel. Number; getLowerBound(). Get a number representing the minimum value permitted by this type (may be negative). Number; getUpperBound(). Get a number representing the maximum value permitted by this type. boolean; isFloatingPoint(). Returns true if the type is a floating point representation. boolean; isSignedInteger(). Returns true if the type is a signed integer representation. boolean; isUnsignedInteger(). Returns true if the type is an unsigned integer representation. static PixelType; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UINT8; public static final PixelType UINT8; 8-bit unsigned integer. INT8; public static final PixelType INT8; 8-bit signed integer. UINT16; public static final PixelType UINT16; 16-bit unsigned integer. INT16; public static final PixelType INT16; 16-bit signed integer. UINT32; public static final PixelType UINT32; 32-bit unsigned integer (not supported by BufferedImage). INT32; public static final PixelType INT32; 32-bit signed integer. FLOAT32; public static final PixelType FLOAT32; 32-bit floating point. FLOAT64; public static final PixelType FLOAT64; 64-bit floating point. Method Details. values; public static PixelType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html:2168,inherit,inherited,2168,javadoc/docs/qupath/lib/images/servers/PixelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html,1,['inherit'],['inherited']
Modifiability," the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outside parent. fillHoles; public static ROI fillHoles(ROI roi); Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. Parameters:; roi - ; Returns:. removeSmallPieces; public static ROI removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels); Remove small fragments and fill small holes of an area ROI. Parameters:; roi - the ROI to refine; minAreaPixels - the minimum size of a fragment to retain; minHoleAreaPixels - the minimum size of a hole to retain, or -1 if all holes should be retained; Returns:; an updated ROI - which may be empty if the modifications caused the ROI t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:9646,extend,extends,9646,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability," the density map. getDerivedBoundaryStrategy(double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. getDerivedPathClass(PathClass, String) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getInstance(PathClass, String, Integer). getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDescendantObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all descendant objects. getDescendantObjects(PathObject, Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get all descendant objects with a specified type. getDescription() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:377711,extend,extends,377711,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:104179,extend,extends,104179,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," the image display that should be shown and managed by this pane. imageDisplayProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. The image display to which the sliders are applied. ImageDisplaySettings - Class in qupath.lib.display.settings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageDisplaySettings() - Constructor for class qupath.lib.display.settings.ImageDisplaySettings;  ; imageExtension(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a file extension for the original pixels, which determines the export file format. imageFunction(ImageSupplier<S>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used ot lazily read the image. ImageInterpolation - Enum Class in qupath.lib.gui.viewer. Supported interpolation methods when displaying images. ImageJMacroRunner - Class in qupath.imagej.gui. QuPath plugin for running ImageJ macros & returning detected regions. ImageJMacroRunner(QuPathGUI) - Constructor for class qupath.imagej.gui.ImageJMacroRunner. Constructor. imageJPathProperty() - Static method in class qupath.imagej.gui.IJExtension. Property representing the path to a local ImageJ installation, or null if no path has been set. ImageJProcessor - Class in qupath.lib.experimental.pixels. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJProcessor() - Constructor for class qupath.lib.experimental.pixels.ImageJProcessor;  ; ImageJServer - Class in qupath.imagej.images.servers. ImageServer that uses ImageJ's image-reading capabilities. ImageJServer(URI, String...) - Constructor for class qupath.imagej.images.servers.ImageJServer. Constructor. ImageJServerBuilder - Class in qupath.imagej.images.servers. Builder for ImageServers that use ImageJ to read images. ImageJServerBuilder() - Constructor for class qupath.imagej.images.servers.ImageJServerBuilder;  ; imageL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:589961,plugin,plugin,589961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability," the legend should be shown. Charts.PieChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.PieChartBuilder; title(String title). Specify the chart title. Charts.PieChartBuilder; tooltips(boolean showTooltips). Request tooltips to be shown when the cursor hovers over the pie chart. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(PieChart chart). Method that applies properties of this builder to the chart. Charts.PieChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.PieChartBuilder; width(double width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:3079,inherit,inherited,3079,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,1,['inherit'],['inherited']
Modifiability," the main object. selectObjects(Collection<? extends PathObject>, PathObject) - Static method in class qupath.lib.scripting.QP. Set all objects in a collection to be selected, including a specified main selected object. selectObjects(Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the specified hierarchy. selectObjects(PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClass(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. selectObjectsByClass(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClassification(String...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified classifications. selectObjectsByClassification(ImageData<?>, PathClass...) - Static method in class qupath.lib.gui.commands.Commands. Select objects by classification, logging the step (if performed) in the history workflow. selectObjectsByClassification(PathObjectHierarchy, String...) - Static method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:899554,extend,extends,899554,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:3754,inherit,inherited,3754,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['inherit'],['inherited']
Modifiability," the processing within QuPath. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. BooleanParameter. Parameter that can take on true of false value - or null. BoundaryStrategy. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BrightnessContrastChannelPane. A pane responsible for the display and selection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:5132,adapt,adapting,5132,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['adapt'],['adapting']
Modifiability," the processor. Processor<S,T,U> - Interface in qupath.lib.experimental.pixels. A generic processor designed to work with Parameters and provide an output. project(ObjectExpression<Project<BufferedImage>>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Current project. project(Mat, Mat) - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Apply the projection. Project<T> - Interface in qupath.lib.projects. Data structure to manage images and associated data in QuPath. PROJECT_ADD_IMAGES - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_BASE_DIR - Static variable in class qupath.lib.scripting.QP. Placeholder for the path to the current project. PROJECT_CLOSE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_LOCATION - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Default location to use when storing density maps in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.object.ObjectClassifier. Default location to use when storing object classifiers in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.pixel.PixelClassifier. Default location to use when storing object classifiers in a project. PROJECT_NEW - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_NEW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; projectActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ProjectActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; ProjectBrowser - Class in qupath.lib.gui.panes. Component for previewing and selecting images within a project. ProjectBrowser(QuPathGUI) - Constructor for clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:785240,variab,variable,785240,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability," the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). Parameters:; pathObject - ; Returns:. swapNameAndClass; public static void swapNameAndClass(PathObject pathObject,; boolean includeColor); Swap the name and PathClass of an object.; This can be used as a simple way to preserve a classification that might be required later. Parameters:; pathObject - the object to adjust; includeColor - optionally set the color of the object to the color of the classification. parseTMALabelString; public static String[] parseTMALabelString(String labelString); Parse a string input representing potential TMA core labels.; This can be a space-separated list, or an ascending or descending numeric or alphabetic range.; ; Examples:; ; ""A-H""; ""1-9""; ""H-A""; ""A B D E"". Parameters:; labelString - ; Returns:. getSupportedObjects; public static Collection<? extends PathObject> getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses); From a collection of available objects, extract those that are instances of specified supported classes. Parameters:; availableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. Parameters:; pathObject - ; preferNucleus - ; Returns:. getNucleusOrMainROI; public static ROI getNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:31020,extend,extends,31020,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,3,['extend'],['extends']
Modifiability," their current PathClasses.; This can be useful to preserve a classification so that it may be reset later.; ; Note: classification probabilities are not retained using this approach. Parameters:; pathObjects - the objects containing classifications; Returns:; a mapping between objects and their current classifications; See Also:. restoreClassificationsFromMap(Map). restoreClassificationsFromMap; public static Collection<PathObject> restoreClassificationsFromMap(Map<PathObject,PathClass> classificationMap); Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). Parameters:; classificationMap - the map containing objects and the classifications that should be applied; Returns:; a collection containing all objects with classifications that were changed. This can be used to fire update events.; See Also:. createClassificationMap(Collection). getRepresentedPathClasses; public static Set<PathClass> getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Get a set of the represented path classes, i.e. those with at least 1 manually-labelled object. Parameters:; hierarchy - ; cls - ; Returns:. setIntensityClassification; public static PathClass setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds); Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins.; ; An IllegalArgumentException is thrown if < 1 or > 3 intensity thresholds are provided.; If the object does not have the required measurement, its PathClass will be set to its ; first 'non-intensity' ancestor PathClass.; ; Note that as of v0.3.0, all ignored classes (see PathClassTools.isIgnoredClass(PathClass) are ignored and therefore ; will not be 'intensity classified'. Parameters:; pathObject - the object to classify.; measurementName - the name of the measurement to use for thresholding.; thresholds - between 1 and 3 intensi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:54073,extend,extends,54073,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability," throws IllegalArgumentException; Get a Shape object representing a ROI.; Previously this did more work; now it only calls ROI.getShape(). Parameters:; roi - ; Returns:; Throws:; IllegalArgumentException - if the ROI is a Point ROI, which cannot be converted to a java.awtshape. getArea; public static Area getArea(ROI roi); Get an Area object representing a ROI. Parameters:; roi - ; Returns:. makeTiles; public static List<ROI> makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI); Make fixed-size rectangular tile ROIs for a specified area. Parameters:; roi - area to be tiled; tileWidth - requested tile width, in pixels; tileHeight - requested tile height, in pixels; trimToROI - if true, trim tiles at the ROI boundary according to the ROI shape, otherwise retain full tiles that may only partially overlap; Returns:. computeTiledROIs; public static Collection<? extends ROI> computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap); Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:14940,extend,extends,14940,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability," time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the vie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15591,plugin,plugin,15591,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['plugin'],['plugin']
Modifiability," to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:2454,plugin,plugin,2454,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugin']
Modifiability," true if the horizontal label should be added before the vertical label, false otherwise; diameterCalibrated - the diameter of each core, in calibrated units; See Also:. PathObjectTools.addTMAGrid(ImageData, String, String, boolean, double). createTMAGrid; public static void createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated); Create a new regular TMAGrid and set it as active on the hierarchy for the current image.; ; For the label string format, see see PathObjectTools.parseTMALabelString(String). Parameters:; hLabels - a String representing horizontal labels; vLabels - a String representing vertical labels; rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; diameterCalibrated - the diameter of each core, in calibrated units; See Also:. PathObjectTools.addTMAGrid(ImageData, String, String, boolean, double). resetClassifications; public static void resetClassifications(Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the current hierarchy. Parameters:; cls - . refreshIDs; public static void refreshIDs(); Refresh all object IDs for the current hierarchy. Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. refreshIDs; public static void refreshIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy. Parameters:; hierarchy - the object hierarchy; Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Parameters:; hierarchy - the object hierarchy; Returns:; true if object IDs were changed, false o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:81322,extend,extends,81322,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability," unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height). Read an image patch, optionally with a fixed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:4031,extend,extends,4031,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['extend'],['extends']
Modifiability," use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request). Convert a BufferedImage into a PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a single band of a BufferedImage. static FloatProcessor; convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue). Calculate opt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:3331,extend,extends,3331,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['extend'],['extends']
Modifiability," using createClassificationMap(Collection). Parameters:; classificationMap - the map containing objects and the classifications that should be applied; Returns:; a collection containing all objects with classifications that were changed. This can be used to fire update events.; See Also:. createClassificationMap(Collection). getRepresentedPathClasses; public static Set<PathClass> getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Get a set of the represented path classes, i.e. those with at least 1 manually-labelled object. Parameters:; hierarchy - ; cls - ; Returns:. setIntensityClassification; public static PathClass setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds); Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins.; ; An IllegalArgumentException is thrown if < 1 or > 3 intensity thresholds are provided.; If the object does not have the required measurement, its PathClass will be set to its ; first 'non-intensity' ancestor PathClass.; ; Note that as of v0.3.0, all ignored classes (see PathClassTools.isIgnoredClass(PathClass) are ignored and therefore ; will not be 'intensity classified'. Parameters:; pathObject - the object to classify.; measurementName - the name of the measurement to use for thresholding.; thresholds - between 1 and 3 intensity thresholds, used to indicate negative/positive, or negative/1+/2+/3+; Returns:; the PathClass of the object after running this method. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:55274,extend,extends,55274,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability," value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might not appear; to make a difference. If shown through a ParameterPanel (in QuPath's JavaFX GUI) it is better to; set limits via the panel rather than directly using this me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:3326,extend,extends,3326,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,2,['extend'],['extends']
Modifiability," values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live measurements.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; layerServer - server to return the pixel layer data; if null, the property will be removed. getPixelLayer; public static ImageServer<BufferedImage> getPixelLayer(ImageData<?> imageData); Request the pixel layer from an ImageData.; ; Note that this method is subject to change (in location and behavior). Parameters:; imageData - ; Returns:. updateMeasu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:3776,extend,extends,3776,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['extend'],['extends']
Modifiability," very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1725,inherit,inherited,1725,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,1,['inherit'],['inherited']
Modifiability," was made to one or more object classifications. CHANGE_MEASUREMENTS - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more object measurements. CHANGE_OTHER - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more objects that is more complex than the other changes allow for. changed(ObservableValue<? extends QuPathViewer>, QuPathViewer, QuPathViewer) - Method in class qupath.lib.gui.UndoRedoManager;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.CountingDialogCommand;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SlideLabelView;  ; changed",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:90713,extend,extends,90713,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability," which handles the selection status of objects. Returns:. setTMAGrid; public void setTMAGrid(TMAGrid tmaGrid); Set the tma grid for this hierarchy.; If identical to the current TMA grid, nothing will happen.; Otherwise, if null then any existing TMA grid will be removed. Parameters:; tmaGrid - . insertPathObject; public boolean insertPathObject(PathObject pathObject,; boolean fireChangeEvents); Insert an object into the hierarchy. This differs from addObject(PathObject, boolean) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObject - the object to add; fireChangeEvents - if true, an event will be added after adding the object. Choose false if a single event should be added after making multiple changes.; Returns:; true if the hierarchy changed as a result of this call, false otherwise. insertPathObjects; public boolean insertPathObjects(Collection<? extends PathObject> pathObjects); Insert a collection of objects into the hierarchy, firing a change event on completion.; This differs from addObjects(Collection) in that it will seek to ; place the object in an appropriate location relative to existing objects, using the logic of HIERARCHY_COMPARATOR. Parameters:; pathObjects - the objects to add; Returns:; true if the hierarchy changed as a result of this call, false otherwise. resolveHierarchy; public void resolveHierarchy(); Attempt to resolve the parent-child relationships between all objects within the hierarchy. removeObject; public boolean removeObject(PathObject pathObject,; boolean keepChildren); Remove a single object from the hierarchy, firing a remove event. Parameters:; pathObject - the object to remove; keepChildren - if true, retain all children and descendants of the object being removed; if false, remove these also; Returns:. removeObjectWithoutUpdate; public boolean removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren); Remov",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:11623,extend,extends,11623,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability," which may contain overlapping objects; comparator - comparator, which determines which object is retained when overlaps are found.; Considering the collection to be sorted by the comparator, the 'first' object is the one that will be kept.; overlapTolerance - amount of overlap to permit; Returns:; collection of objects, which should have smaller overlapping objects removed. mergeObjects; public static PathObject mergeObjects(Collection<? extends PathObject> pathObjects); Merge objects by calculating the union of their ROIs. Parameters:; pathObjects - a collection of annotations, cells, detections or tiles. Note that all objects must be of the same type.; Returns:; a single object with ROI(s) determined by union. The classification and name will be taken from the first ROI in the collection.; Throws:; IllegalArgumentException - if no objects are provided (either null or empty list). mergeObjects; public static <K> List<PathObject> mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier); Merge objects that share a property in common.; ; Note that objects must all be of the same type (e.g. cells, detections, annotations). Parameters:; pathObjects - ; classifier - function extracting the shared property, e.g. p -> p.getName(); Returns:; a new list of objects generated by merging grouped objects.; See Also:. mergeObjects(Collection). createLike; public static PathObject createLike(PathObject pathObject,; ROI roiNew); Create a new object with the same type and classification as the input object, but a new ROI and ID.; ; Note that TMA core objects are not supported. Parameters:; pathObject - the template object; roiNew - the new ROI; Returns:; a new object with the same type and classification as the input object, but different ROI and ID.; Since:; v0.5.0. createLike; public static PathObject createLike(PathObject pathObject,; ROI roiNew,; ROI roiNucleus); Create a new object with the same type and classification as",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:49505,extend,extends,49505,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['extend'],['extends']
Modifiability," will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:137008,extend,extends,137008,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2381,inherit,inherited,2381,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['inherit'],['inherited']
Modifiability,"  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. interpolation; public ObjectProperty<ImageInterpolation> interpolationProperty; The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:2264,inherit,inherited,2264,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,1,['inherit'],['inherited']
Modifiability,"  ; cutAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; CYAN - Static variable in class qupath.lib.common.ColorTools. Packed int representing cyan. CYTOPLASM - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pie chart as a map. DEBUG - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Debug logging (a lot of messages). decelerate() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Stop moving, by smoothly decelerating. deconvolve(ColorDeconvolutionStains) - Static method in class qupath.opencv.ops.ImageOps.Channels. Apply the (fixed) color deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum cons",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:240165,extend,extends,240165,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"  ; forceOverlayUpdate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Force the overlay displaying detections and annotations to be repainted. formatNumber(double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using the default Locale. formatNumber(Locale, double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual names. fromBlob(T) - Method in interface qupath.opencv.dnn.BlobFunction. Convert a blob (generally the result of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:313288,variab,variable,313288,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.Detec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424472,plugin,plugins,424472,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"  ; static boolean; runPlugin(String className,; ImageData<?> imageData,; String args);  ; static void; saveAnnotationMeasurements(String path,; String... includeColumns). Save annotation measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save TMA measurements for the specified image. static void; setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the current ImageData for a channel identified by number. static void; setChannelDisplayRange(String channelName,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the current ImageData for a channel identified by name. static b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:3879,extend,extends,3879,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['extend'],['extends']
Modifiability,"'s JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenCVTypeAdaptorFactory; public static TypeAdapterFactory getOpenCVTypeAdaptorFactory(); Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. Mat, StatModel). Returns:. getTypeAdaptor; public static <T> TypeAdapter<T> getTypeAdaptor(Class<T> cls); Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Mat, SparseMat or StatModel. Parameters:; cls - ; Returns:; the required TypeAdaptor, or null if no supported adapter is available for the class. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html:1776,inherit,inherited,1776,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,4,"['adapt', 'inherit']","['adapter', 'inherited']"
Modifiability,"() on demand. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:3635,inherit,inherited,3635,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['inherit'],['inherited']
Modifiability,"(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2809,inherit,inherited,2809,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['inherit'],['inherited']
Modifiability,"(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2675,inherit,inherited,2675,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['inherit'],['inherited']
Modifiability,"(). Get the second x co-ordinate (end of the line). double; getY1(). Get the first y co-ordinate (start of the line). double; getY2(). Get the second y co-ordinate (end of the line). int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:3728,inherit,inherited,3728,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['inherit'],['inherited']
Modifiability,"(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:2420,inherit,inherited,2420,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,2,['inherit'],['inherited']
Modifiability,"();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:2389,inherit,inherited,2389,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['inherit'],['inherited']
Modifiability,"(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more objects to be selected within the current hierarchy. static void; selectObjectsByClass(Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClassification(String... pathClassNames). Select objects for the current hierarchy that have one of the specified classifications. static void; selectObjectsByClassification(PathObjectHierarchy hierarchy,; String... pathClassNames). Select objects for the specified hierarchy that have one of the specified classifications. static void; selectObjectsByMeasurement(ImageData<?> imageData,; String command). Deprecated. static void; selectObjectsByPathClass(PathClass... pathClasses). Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. static void; selectObjectsByPathClass(PathObjectHierarchy hierarchy,; PathClass... pathClasses). Select objects for the specified hierarchy that have one of the specified PathClass classifications assigned. static void; selectObjectsByPlane(int z,; int t). Selected objects in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:34431,extend,extends,34431,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a density map to an image. writeExternal(ObjectOutput) - Method in class qupath.lib.color.ColorDeconvolutionStains;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.color.StainVector;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.geom.Point2;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.PathCellObject;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.PathObject;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.PathObjectConnections;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.PathROIObject;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.TMACoreObject;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.plugins.workflow.Workflow;  ; writeImage(ImagePlus, OutputStream) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(ImagePlus, OutputStream) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(ImagePlus, String) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(ImagePlus, String) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.lib.images.writers.JpegWriter;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.lib.images.write",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1113107,plugin,plugins,1113107,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:103986,extend,extends,103986,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2358,inherit,inherited,2358,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['inherit'],['inherited']
Modifiability,"(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief descr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2592,inherit,inherited,2592,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['inherit'],['inherited']
Modifiability,"(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2323,inherit,inherited,2323,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['inherit'],['inherited']
Modifiability,"(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the current image. addShapeMeasurements(Collection<? extends PathObject>, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for multiple objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, String, String...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:28670,plugin,plugins,28670,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(ImageDisplaySettings settings); Specify the ImageDisplaySettings that control conversion to RGB.; This will only be applied if no renderer has been set. Parameters:; settings - ; Returns:; Since:; v0.5.0; See Also:. renderer(ImageRenderer). renderer; public RenderedImageServer.Builder renderer(ImageRenderer renderer); Specify the ImageRenderer that controls conversion to RGB. Parameters:; renderer - ; Returns:; See Also:. settings(ImageDisplaySettings). overlayOpacity; public RenderedImageServer.Builder overlayOpacity(double opacity); Specify the opacity for overlay layers.; This will be clipped to the range 0 (transparent) and 1 (opaque). Parameters:; opacity - ; Returns:. layers; public RenderedImageServer.Builder layers(PathOverlay... layers); Specify one or more overlay layers. Parameters:; layers - ; Returns:. layers; public RenderedImageServer.Builder layers(Collection<PathOverlay> layers); Specify one or more overlay layers as a collection. Parameters:; layers - ; Returns:. store; public RenderedImageServer.Builder store(DefaultImageRegionStore store); Specify the region store used to paint the underlying image. Parameters:; store - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(Color color); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; color - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(int rgb,; boolean keepAlpha); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; rgb - packed (A)RGB version of the color; keepAlpha - true if the packed color contains an alpha value; Returns:. build; public ImageServer<BufferedImage> build",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:4364,layers,layers,4364,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.roi. Class qupath.lib.roi.AreaROI; class AreaROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.EllipseROI; class EllipseROI extends qupath.lib.roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.GeometryROI; class GeometryROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. writeReplace; private Object writeReplace(). Serialized Fields. checkValid; boolean checkValid. geometry; Geometry geometry. Class qupath.lib.roi.LineROI; class LineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. x; double x. x2; double x2. y; double y. y2; double y2. Class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:11332,extend,extends,11332,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"(OverlayOptions) - Static method in class qupath.lib.gui.commands.Commands. Prompt to input the spacing for the grid lines optionally displayed on viewers. promptToSetImageType(ImageData<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.panes.ImageDetailsPane. Prompt the user to set the ImageData.ImageType for the image. promptToSimplifySelectedAnnotations(ImageData<?>, double) - Static method in class qupath.lib.gui.commands.Commands. Show a prompt to selected annotations in a hierarchy. promptToUpdateUris(Collection<T>, URI, URI, boolean) - Static method in class qupath.lib.gui.commands.UpdateUrisCommand. Show dialog prompting the user to update URIs for missing files. PROP_JAVADOC_PATH - Static variable in class qupath.lib.gui.JavadocViewer. Name of the system property used to set the javadoc path. PROPERTIES - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java properties files. PROPERTIES - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PropertiesLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:798129,variab,variable,798129,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"(QuPathViewer viewer). Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:1877,layers,layers,1877,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,2,['layers'],['layers']
Modifiability,"(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3329,extend,extends,3329,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['extend'],['extends']
Modifiability,"(String densityMapName,; String path). Write the output of applying a density map to the current image image. static void; writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path). Write the output of applying a density map to an image. static void; writeImage(BufferedImage img,; String path). Write an image to the specified path. static void; writeImage(ImageServer<BufferedImage> server,; String path). Write a full image to the specified path. static void; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write an image region image to the specified path. static void; writePredictionImage(String classifierName,; String path). Write the output of applying a pixel classifier to the current image image. static void; writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path). Write the output of applying a pixel classifier to an image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image type with hematoxylin and DAB staining. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image type with hematoxylin and eosin staining. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image type. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image type. OTHER; public static final ImageData.ImageType OTHER; Any other image type (neither brightfield nor fluorescence). PROJECT_BASE_DIR; public static final String PROJECT_BASE_DIR; Placeholder for the path to the current project.; May be used as follows:; ; var path = buildFilePath(PROJECT_BASE_DIR, 'subdir', 'name.txt'); . See Also:. Constant Field Values. VERSION; public static final Version VERS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:45009,inherit,inherited,45009,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['inherit'],['inherited']
Modifiability,"(regardless of channels), ignoring NaNs. static void; sumFilter(Mat mat,; int radius). Apply a circular 2D sum filter to all channels of an image, with symmetric boundary padding. static void; sumFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D sum filter to all channels of an image. static String; trackedMemory(). Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:12865,extend,extends,12865,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['extend'],['extends']
Modifiability,"(the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). boolean; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0; use addObjects(Collection) instead. boolean; addPathObjectWithoutUpdate(PathObject pathObject). Deprecated.; since v0.4.0, use addObject(PathObject, boolean) instead (for naming consistency). void; clearAll(). Remove all objects from the hierarchy. void; fireHierarchyChangedEvent(Object source). Fire a hierarchy update indicating the hierarchy structure has changed. void; fireHierarchyChangedEvent(Object source,; PathObject pathObject). Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. void; fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object classifications have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating objects have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating objects have changed, and may still be changing. Collection<PathObject>; getAllObjects(boolean includeRoot). Get all the objects in the hierarchy, optionally including the root object. Collection<PathObject>; getAnnotationObjects(). Get all annotation objects in the hierarchy. Collection<PathObject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:3957,extend,extends,3957,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability,") - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, z of 0 and t of 0. getDefaultPyramidCompression() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default compression type when writing OME-TIFF images. getDefaultQuPathUserDirectory() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get the default location for extensions. getDefaultResolutions(ImageData<?>, ClassificationResolution) - Static method in class qupath.process.gui.commands.ml.ClassificationResolution. Get a list of default resolutions to show, derived from PixelCalibration objects. getDefaultRGBChannels() - Static method in class qupath.lib.images.servers.ImageChannel. Get default channel list for RGB images. getDefaultScriptName() - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:373338,plugin,plugins,373338,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compression. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossy JPEG-2000 compression. JAVA - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java. JAVA_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Java-like import statements. JAVA_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that extracts a token used to determine Java completions. JavadocViewer - Class in qupath.lib.gui. Command to show javadocs in a WebView. JPEG - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. JPEG compression (only for single channel or RGB 8-bit images). JpegWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write JPEG images using ImageIO. JpegWriter() - Constructor for class qupath.lib.images.writers.JpegWriter;  ; JSON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for JSON. JSON - Static variable in class qupath.lib.gui.scripting.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:638961,variab,variable,638961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,") - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangulation. Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). getConnectedObjects(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getConnectedObjects(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the connections to a specified PathObject stored in this group. getConnectedObjects(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getConnectionGroups() - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:360350,config,configuration,360350,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['configuration']
Modifiability,") - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData. runPlugin(String, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, using a map for arguments. runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData. runPlugin(String, ImageData<?>, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, using a map for arguments. runPlugin(Map<String, ?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:877383,plugin,plugin,877383,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
