quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Performance,". ROOT: TSessionFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSessionFrame Class Reference. . Definition at line 246 of file TSessionViewer.h. Public Member Functions;  TSessionFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionFrame () override;  Destructor. ;  ; void Build (TSessionViewer *gui);  Build session frame. ;  ; void CheckAutoEnPack (Bool_t checked=kTRUE);  ; Int_t GetLogLevel () const;  ; TGTab * GetTab () const;  ; TClass * IsA () const override;  ; void OnApplyLogLevel ();  Apply selected log level on current session. ;  ; void OnApplyParallel ();  Apply selected number of workers on current Proof session. ;  ; void OnBtnAddClicked ();  Open file dialog and add selected package file to the list. ;  ; void OnBtnDisconnectClicked ();  Disconnect from current Proof session. ;  ; void OnBtnDownClicked ();  Move selected package entry one position down in the list. ;  ; void OnBtnGetQueriesClicked ();  Get list of queries from current Proof server and populate the list tree. ;  ; void OnBtnNewQueryClicked ();  Call ""New Query"" Dialog. ;  ; void OnBtnRemoveClicked ();  Remove selected package from the list. ;  ; void OnBtnRemoveDSet ();  Remove dataset from the list and from the cluster. ;  ; void OnBtnShowLogClicked ();  Show session log. ;  ; void OnBtnUpClicked ();  Move selected package entry one position up in the list. ;  ; void OnBtnUploadDSet ();  Open Upload Dataset dialog. ;  ; void OnBtnVerifyDSet ();  Verify that the files in the selected dataset are present on the cluster. ;  ; void OnClearPackages ();  Clear (disable) all packages in the current session. ;  ; void OnCommandLine ();  Command line handling. ;  ; void OnDisablePackages ();  Disable selected package(s) in the current session. ;  ; void OnEnablePackages ();  Enable selected pac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionFrame.html:82,Load,Loading,82,doc/master/classTSessionFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionFrame.html,1,['Load'],['Loading']
Performance,". ROOT: TSessionInputFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSessionInputFrame Class Reference. . Definition at line 488 of file TSessionViewer.h. Public Member Functions;  TSessionInputFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionInputFrame () override;  Destructor. ;  ; void AddObject (TObject *obj);  Add object to input list view. ;  ; void Build (TSessionViewer *gui);  Build query input information frame. ;  ; TGLVContainer * GetLVContainer ();  ; TClass * IsA () const override;  ; void RemoveAll () override;  Remove all frames from composite frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionInputFrame.html:87,Load,Loading,87,doc/master/classTSessionInputFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionInputFrame.html,1,['Load'],['Loading']
Performance,". ROOT: TSessionOutputFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSessionOutputFrame Class Reference. . Definition at line 459 of file TSessionViewer.h. Public Member Functions;  TSessionOutputFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionOutputFrame () override;  Destructor. ;  ; void AddObject (TObject *obj);  Add object to output list view. ;  ; void Build (TSessionViewer *gui);  Build query output information frame. ;  ; TGLVContainer * GetLVContainer ();  ; TClass * IsA () const override;  ; void OnElementClicked (TGLVEntry *entry, Int_t btn, Int_t x, Int_t y);  Handle mouse clicks on list view items. ;  ; void OnElementDblClicked (TGLVEntry *entry, Int_t btn, Int_t x, Int_t y);  Handle double-clicks on list view items. ;  ; void RemoveAll () override;  Remove all frames from composite frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionOutputFrame.html:88,Load,Loading,88,doc/master/classTSessionOutputFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionOutputFrame.html,1,['Load'],['Loading']
Performance,". ROOT: TSessionQueryFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; TSessionQueryFrame Class Reference. . Definition at line 377 of file TSessionViewer.h. Public Member Functions;  TSessionQueryFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionQueryFrame () override;  Destructor. ;  ; void Build (TSessionViewer *gui);  Build query information frame. ;  ; void Feedback (TList *objs);  Feedback function connected to Feedback signal. ;  ; TEditQueryFrame * GetQueryEditFrame () const;  ; TCanvas * GetStatsCanvas () const;  ; TGTab * GetTab () const;  ; void IndicateStop (Bool_t aborted);  Indicate that Cancel or Stop was clicked. ;  ; TClass * IsA () const override;  ; void Modified (Bool_t mod=kTRUE);  Notify changes in query editor settings. ;  ; void OnBtnAbort ();  Abort processing query. ;  ; void OnBtnFinalize ();  Finalize query. ;  ; void OnBtnRetrieve ();  Retrieve query. ;  ; void OnBtnShowLog ();  Show query log. ;  ; void OnBtnStop ();  Stop processing query. ;  ; void OnBtnSubmit ();  Submit query. ;  ; void Progress (Long64_t total, Long64_t processed);  Update progress bar and status labels. ;  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti);  ; void Progress (Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses);  New version of Progress (just forward to the old version for the time being). ;  ; void ProgressLocal (Long64_t total, Long64_t processed);  Update progress bar and status labels. ;  ; void ResetProgressDialog (const char *selec, Int_t files, Long64_t first, Long64_t entries);  Reset progress frame information fields. ;  ; void S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionQueryFrame.html:87,Load,Loading,87,doc/master/classTSessionQueryFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionQueryFrame.html,1,['Load'],['Loading']
Performance,". ROOT: TSessionServerFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSessionServerFrame Class Reference. . Definition at line 180 of file TSessionViewer.h. Public Member Functions;  TSessionServerFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionServerFrame () override;  Destructor. ;  ; void Build (TSessionViewer *gui);  Build server configuration frame. ;  ; const char * GetAddress () const;  ; const char * GetConfigText () const;  ; Int_t GetLogLevel () const;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; Int_t GetPortNumber () const;  ; const char * GetUserName () const;  ; Bool_t HandleExpose (Event_t *event) override;  Handle expose event in server frame. ;  ; TClass * IsA () const override;  ; Bool_t IsSync () const;  ; void OnBtnAddClicked ();  Add newly created session configuration in the list of sessions. ;  ; void OnBtnConnectClicked ();  Connect to selected server. ;  ; void OnBtnDeleteClicked ();  Delete selected session configuration (remove it from the list). ;  ; void OnBtnNewServerClicked ();  Reset server configuration fields. ;  ; void OnConfigFileClicked ();  Browse configuration files. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for session server frame. ;  ; void SetAddEnabled (Bool_t on=kTRUE);  ; void SetAddress (const char *str);  ; void SetConfigText (const char *str);  ; void SetConnectEnabled (Bool_t on=kTRUE);  ; void SetLogLevel (Int_t log);  ; void SetName (const char *str) override;  ; void SetPortNumber (Int_t port);  ; void SetSync (Bool_t sync);  ; void SettingsChanged ();  Settings have changed, update GUI accordingly. ;  ; void SetUserName (const char *str);  ; void Streamer (TBuffer &) override;  Stream an obje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionServerFrame.html:88,Load,Loading,88,doc/master/classTSessionServerFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionServerFrame.html,1,['Load'],['Loading']
Performance,". ROOT: TSessionViewer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSessionViewer Class ReferenceGUI » Session Viewer. ; Widget used to manage PROOF or local sessions, PROOF connections, queries construction and results handling. ; Definition at line 515 of file TSessionViewer.h. Public Member Functions;  TSessionViewer (const char *title, Int_t x, Int_t y, UInt_t w, UInt_t h);  Main Session viewer constructor. ;  ;  TSessionViewer (const char *title=""ROOT Session Viewer"", UInt_t w=550, UInt_t h=320);  Main Session viewer constructor. ;  ;  ~TSessionViewer () override;  Destructor. ;  ; virtual void Build ();  Build main session viewer frame and subframes. ;  ; void ChangeRightLogo (const char *name);  Change the right logo (used for animation). ;  ; void CleanupSession ();  Clean-up Proof session. ;  ; void CloseWindow () override;  Close main Session Viewer window. ;  ; void DeleteQuery ();  Delete query from list tree and ask user if they want to delete it also from server. ;  ; void DisableTimer ();  Disable animation timer. ;  ; void EditQuery ();  Edit currently selected query. ;  ; void EnableTimer ();  Enable animation timer. ;  ; TSessionDescription * GetActDesc () const;  ; const TGPicture * GetBasePict () const;  ; TGPopupMenu * GetCascadeMenu () const;  ; TGHProgressBar * GetConnectProg () const;  ; TContextMenu * GetContextMenu () const;  ; TSessionInputFrame * GetInputFrame () const;  ; const TGPicture * GetLocalPict () const;  ; TGPopupMenu * GetOptionsMenu () const;  ; TSessionOutputFrame * GetOutputFrame () const;  ; TGPopupMenu * GetPopupQry () const;  ; TGPopupMenu * GetPopupSrv () const;  ; const TGPicture * GetProofConPict () const;  ; const TGPicture * GetProofDisconPict () const;  ; const TGPicture * GetQueryConPict () const;  ; const TGPicture * GetQueryDisconPict ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionViewer.html:83,Load,Loading,83,doc/master/classTSessionViewer.html,https://root.cern,https://root.cern/doc/master/classTSessionViewer.html,1,['Load'],['Loading']
Performance,". ROOT: TShape Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TShape Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; This is the base class for all geometry shapes. ; /The list of shapes currently supported correspond to the shapes in Geant version 3:; TBRIK,TCONE,TCONS,TGTRA,TPARA,TPCON,TPGON; TTRAP,TTRD1,TTRD2,THYPE, TTUBE and TTUBS.; TBRIKA box with faces perpendicular to the axes.Definition TBRIK.h:26; TCONEA conical tube.Definition TCONE.h:28; TCONSA segment of a conical tube.Definition TCONS.h:27; TGTRAA general twisted trapezoid.Definition TGTRA.h:27; THYPEAn hyperboloid (not implemented)Definition THYPE.h:28; TPARAA parallelepiped.Definition TPARA.h:30; TPCONA polycone.Definition TPCON.h:33; TPGONA polygon.Definition TPGON.h:30; TTRAPA general trapezoid.Definition TTRAP.h:33; TTRD1A trapezoid with the x dimension varying along z.Definition TTRD1.h:28; TTRD2A trapezoid with both x and y dimensions varying along z.Definition TTRD2.h:29; TTUBEA tube.Definition TTUBE.h:32; TTUBSA segment of a tube.Definition TTUBS.h:29; The figure below shows instances of all these shapes. This figure is generated by the ROOT 3-D viewer. Definition at line 35 of file TShape.h. Public Member Functions;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Shape default destructor. ;  ; virtual const TBuffer3D & GetBuffer3D (Int_t reqSections) const;  Stub to avoid forcing implementation at this stage. ;  ; TMaterial * GetMaterial () const;  ; virtual Int_t GetNumber () const;  ; Int_t GetVisibility () const;  ; TClass * IsA () const override;  ; TShape & operator= (const TShape &);  assignment operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTShape.html:75,Load,Loading,75,doc/master/classTShape.html,https://root.cern,https://root.cern/doc/master/classTShape.html,1,['Load'],['Loading']
Performance,". ROOT: TShutdownTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TShutdownTimer Class Reference. . Definition at line 416 of file TProofServ.h. Public Member Functions;  TShutdownTimer (TProofServ *p, Int_t delay);  Construtor. ;  ; Bool_t Notify () override;  Handle expiration of the shutdown timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTShutdownTimer.html:83,Load,Loading,83,doc/master/classTShutdownTimer.html,https://root.cern,https://root.cern/doc/master/classTShutdownTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TSignalHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSignalHandler Class Reference. . Definition at line 127 of file TSysEvtHandler.h. Public Member Functions;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSignalHandler.html:83,Load,Loading,83,doc/master/classTSignalHandler.html,https://root.cern,https://root.cern/doc/master/classTSignalHandler.html,1,['Load'],['Loading']
Performance,". ROOT: TSingleShotCleaner Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TSingleShotCleaner Class Reference. . Definition at line 54 of file TTimer.cxx. Public Member Functions;  TSingleShotCleaner ();  ; virtual ~TSingleShotCleaner ();  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void TurnOn () override;  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSingleShotCleaner.html:87,Load,Loading,87,doc/master/classTSingleShotCleaner.html,https://root.cern,https://root.cern/doc/master/classTSingleShotCleaner.html,1,['Load'],['Loading']
Performance,". ROOT: TSlave Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Static Private Member Functions |; Static Private Attributes |; Friends |; List of all members ; TSlave Class ReferencePROOF » PROOF kernel Libraries. ; Class describing a PROOF worker server. ; It contains information like the workers host name, ordinal number, performance index, socket, etc. Objects of this class can only be created via TProof member functions. ; Definition at line 46 of file TSlave.h. Public Types; enum  ESlaveStatus { kInvalid; , kActive; , kInactive; };  ; enum  ESlaveType { kMaster; , kSlave; };  ; enum  EStatusBits { kOutputRequested = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TSlave () override;  Destroy slave. ;  ; virtual void Close (Option_t *opt="""");  Close slave socket. ;  ; Int_t Compare (const TObject *obj) const override;  Used to sort slaves by performance index. ;  ; const char * GetArchCompiler () const;  ; Long64_t GetBytesRead () const;  ; Float_t GetCpuTime () const;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TFileHandler * GetInputHandler () const;  ; const char * GetMsd () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlave.html:75,Load,Loading,75,doc/master/classTSlave.html,https://root.cern,https://root.cern/doc/master/classTSlave.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: TSlaveInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TSlaveInfo Class Reference. . Definition at line 212 of file TProof.h. Public Types; enum  ESlaveStatus { kActive; , kNotActive; , kBad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSlaveInfo (const char *ordinal="""", const char *host="""", Int_t perfidx=0, const char *msd="""", const char *datadir="""");  ; Int_t Compare (const TObject *obj) const override;  Used to sort slaveinfos by ordinal. ;  ; const char * GetDataDir () const;  ; const char * GetMsd () const;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetOrdinal () const;  ; SysInfo_t GetSysInfo () const;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Used to compare slaveinfos by ordinal. ;  ; Bool_t IsSortable () const override;  ; void Print (Option_t *option="""") const override;  Print slave info. ;  ; void SetOrdinal (const char *ord);  ; void SetStatus (ESlaveStatus stat);  ; void SetSysInfo (SysInfo_t si);  Setter for fSysInfo. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlaveInfo.html:79,Load,Loading,79,doc/master/classTSlaveInfo.html,https://root.cern,https://root.cern/doc/master/classTSlaveInfo.html,1,['Load'],['Loading']
Performance,". ROOT: TSlaveLite Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TSlaveLite Class ReferencePROOF » PROOF kernel Libraries. ; Version of TSlave for local worker servers. ; See TSlave for details. ; Definition at line 31 of file TSlaveLite.h. Public Member Functions;  TSlaveLite (const char *ord, Int_t perf, const char *image, TProof *proof, Int_t stype, const char *workdir, const char *msd, Int_t=1);  Create a PROOF slave object. Called via the TProof ctor. ;  ;  ~TSlaveLite () override;  Destroy slave. ;  ; void Close (Option_t *opt="""") override;  Close slave socket. ;  ; void DoError (int level, const char *location, const char *fmt, va_list va) const override;  Interface to ErrorHandler (protected). ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Printf info about slave. ;  ; Int_t SetupServ (Int_t stype, const char *conffile) override;  Init a PROOF slave object. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSlave;  ~TSlave () override;  Destroy slave. ;  ; Int_t Compare (const TObject *obj) const override;  Used to sort slaves by performance index. ;  ; const char * GetArchCompiler () const;  ; Long64_t GetBytesRead () const;  ; Float_t GetCpuTime () const;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TFileHandler * GetInputHandler () const;  ; const char * GetMsd () const;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetOrdinal () const;  ; Int_t GetParallel () const;  ; Int_t GetPerfIdx () const;  ; Int_t GetPort () const;  ; TProof * GetProof () const;  ; const char * GetProofWorkDir () const;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlaveLite.html:79,Load,Loading,79,doc/master/classTSlaveLite.html,https://root.cern,https://root.cern/doc/master/classTSlaveLite.html,1,['Load'],['Loading']
Performance,". ROOT: TSlider Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TSlider Class ReferenceGraphics » 2D Graphics » Graphics pad. ; A specialized TPad including a TSliderBox object. ; The TSliderBox can be moved in the pad.; Slider drawing options include the possibility to change the slider starting and ending positions or only one of them.; The current slider position can be retrieved via the functions TSlider::GetMinimum and TSlider::GetMaximum These two functions return numbers in the range [0,1].; If a method has been set (via TSlider::SetMethod), the expression is executed via the interpreter when the button 1 is released.; if no method has been set, and an object is referenced (TSlider::SetObject has been called), while the slider is being moved/resized, the object ExecuteEvent function is called. Example 1 using TSlider::SetMethod; macro xyslider.C; void xyslider(); {; // Example of macro featuring two sliders; TFile *f = new TFile(""hsimple.root"");; TH2F *hpxpy = (TH2F*)f->Get(""hpxpy"");; TCanvas *c1 = new TCanvas(""c1"");; TPad *pad = new TPad(""pad"",""Color plot pad"",0.1,0.1,0.98,0.98);; pad->Draw();; pad->cd();; hpxpy->Draw(""COLZ"");; c1->cd();; ; // Create two sliders in main canvas. When button1 will be released; // the macro action.C will be called.; TSlider *xslider = new TSlider(""xslider"",""x"",0.1,0.02,0.98,0.08);; xslider->SetMethod("".x action.C"");; TSlider *yslider = new TSlider(""yslider"",""y"",0.02,0.1,0.06,0.98);; yslider->SetMethod("".x action.C"");; }; f#define f(i)Definition RSha256.hxx:104; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlider.html:76,Load,Loading,76,doc/master/classTSlider.html,https://root.cern,https://root.cern/doc/master/classTSlider.html,1,['Load'],['Loading']
Performance,". ROOT: TSliderBox Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSliderBox Class ReferenceGraphics » 2D Graphics » Graphics pad. ; The moving box in a TSlider. ; Definition at line 20 of file TSliderBox.h. Public Member Functions;  TSliderBox ();  SliderBox default constructor. ;  ;  TSliderBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color=18, Short_t bordersize=2, Short_t bordermode=-1);  SliderBox normal constructor. ;  ;  ~TSliderBox () override;  SliderBox default destructor. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Interaction with a slider. ;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void SetSlider (TSlider *slider);  ; void Streamer (TBuffer &) override;  Stream an object of class TBox. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TWbox;  TWbox ();  ;  TWbox (const TWbox &wbox);  wbox copy constructor. ;  ;  TWbox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color=18, Short_t bordersize=5, Short_t bordermode=1);  wbox normal constructor. ;  ;  ~TWbox () override=default;  ; void Copy (TObject &wbox) const override;  Copy this wbox to wbox. ;  ; void Draw (Option_t *option="""") override;  Draw this wbox with its current attributes. ;  ; virtual TWbox * DrawWbox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color=33, Short_t bordersize=5, Short_t bordermode=-1);  Draw this wbox with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Short_t GetBorderMode () const;  ; Short_t GetBorderSize () const;  ; In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSliderBox.html:79,Load,Loading,79,doc/master/classTSliderBox.html,https://root.cern,https://root.cern/doc/master/classTSliderBox.html,1,['Load'],['Loading']
Performance,". ROOT: TSocket Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TSocket Class Reference. . Definition at line 41 of file TSocket.h. Public Types; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSocket.html:76,Load,Loading,76,doc/master/classTSocket.html,https://root.cern,https://root.cern/doc/master/classTSocket.html,1,['Load'],['Loading']
Performance,". ROOT: TSocketHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TSocketHandler Class Reference. . Definition at line 39 of file TMonitor.cxx. Public Member Functions;  TSocketHandler (TMonitor *m, TSocket *s, Int_t interest, Bool_t mainloop=kTRUE);  ; TSocket * GetSocket () const;  ; Bool_t Notify () override;  Notify when event occurred on descriptor associated with this handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ; Bool_t WriteNotify () override;  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSocketHandler.html:83,Load,Loading,83,doc/master/classTSocketHandler.html,https://root.cern,https://root.cern/doc/master/classTSocketHandler.html,1,['Load'],['Loading']
Performance,". ROOT: TSortedList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TSortedList Class ReferenceCore ROOT classes » Containers. ; A sorted doubly linked list. ; All sortable classes inheriting from TObject can be inserted in a TSortedList. ; Definition at line 28 of file TSortedList.h. Public Member Functions;  TSortedList (Bool_t order=kSortAscending);  ; void Add (TObject *obj) override;  Add object in sorted list. ;  ; void Add (TObject *obj, Option_t *opt) override;  Add object in sorted list. ;  ; void AddAfter (const TObject *, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *, TObject *obj) override;  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *, TObject *obj) override;  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; void AddFirst (TObject *obj, Option_t *opt) override;  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; TClass * IsA () const override;  ; Bool_t IsSorted () const override;  ; void Sort (Bool_t=kSortAscending) override;  Sort linked list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSortedList.html:80,Load,Loading,80,doc/master/classTSortedList.html,https://root.cern,https://root.cern/doc/master/classTSortedList.html,1,['Load'],['Loading']
Performance,". ROOT: TSpectrum Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; TSpectrum Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced Spectra Processing. ; AuthorMiroslav Morhac; Legacy Code TSpectrum is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrum might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; This class contains advanced spectra processing functions for:. One-dimensional background estimation; One-dimensional smoothing; One-dimensional deconvolution; One-dimensional peak search. The algorithms in this class have been published in the following references:. M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125. . Definition at line 18 of file TSpectrum.h. Public Types; enum  { ;   kBackOrder2 =0; , kBackOrder4 =1; , kBackOrder6 =2; , kBackOrder8 =3; , ;   kBackIncreasingWindow =0; , kBackDecreasingWindow =1; , kBackSmoothing3 =3; , kBackSmoothing5 =5; , ;   kBackSmoothing7 =7; , kBackSmoothing9 =9; , kBackSmoothing11 =11; , kBackSmoothing13 =13",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum.html:78,Load,Loading,78,doc/master/classTSpectrum.html,https://root.cern,https://root.cern/doc/master/classTSpectrum.html,1,['Load'],['Loading']
Performance,". ROOT: TSpectrum2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TSpectrum2 Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced 2-dimensional spectra processing. ; AuthorMiroslav Morhac; Legacy Code TSpectrum2 is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrum2 might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; This class contains advanced spectra processing functions. One-dimensional background estimation functions; Two-dimensional background estimation functions; One-dimensional smoothing functions; Two-dimensional smoothing functions; One-dimensional deconvolution functions; Two-dimensional deconvolution functions; One-dimensional peak search functions; Two-dimensional peak search functions. The algorithms in this class have been published in the following references:. M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125. These NIM papers are also available as doc or ps files from:. SpectrumDec.ps.gz; SpectrumSrc.ps.gz; SpectrumBck.ps.gz. See also the online documenta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2.html:79,Load,Loading,79,doc/master/classTSpectrum2.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2.html,1,['Load'],['Loading']
Performance,". ROOT: TSpectrum2Fit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpectrum2Fit Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced 2-dimensional spectra fitting functions. ; AuthorMiroslav Morhac; Legacy Code TSpectrum2Fit is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrum2Fit might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class for fitting 2D spectra using AWMI (algorithm without matrix inversion) and conjugate gradient algorithms for symmetrical matrices (Stiefel-Hestens method). AWMI method allows to fit simultaneously 100s up to 1000s peaks. Stiefel method is very stable, it converges faster, but is more time consuming.; The algorithms in this class have been published in the following references:. M. Morhac et al.: Efficient fitting algorithms applied to analysis of coincidence gamma-ray spectra. Computer Physics Communications, Vol 172/1 (2005) pp. 19-41.; M. Morhac et al.: Study of fitting algorithms applied to simultaneous analysis of large number of peaks in gamma-ray spectra. Applied Spectroscopy, Vol. 57, No. 7, pp. 753-760, 2003. . Definition at line 16 of file TSpectrum2Fit.h. Public Types; enum  { ;   kFitOptimChiCounts =0; , kFitOptimChiFuncValues =1; , kFitOptimMaxLikelihood =2; , kFitAlphaHalving =0; , ;   kFitAlphaOptimal =1; , kFitPower2 =2; , kFitPower4 =4; , kFitPower6 =6; , ;   kFitPower8 =8; , kFitPower10 =10; , kFitPower12 =12; , kFitTaylorOrderFirst =0; , ;   kFitTaylorOrderSecond =1; , kFitNumRegulCycles =100. };  ;  P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Fit.html:82,Load,Loading,82,doc/master/classTSpectrum2Fit.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Fit.html,1,['Load'],['Loading']
Performance,". ROOT: TSpectrum2Painter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TSpectrum2Painter Class ReferenceHistogram Library » Painting classes » TSpectrum painting class. ; Legacy Code TSpectrum2Painter is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrum2Painter might still be a valid solution. ; Two-dimensional graphics function; TSpectrum2Painter is a set of graphical functions developed by Miroslav Morhac to paint 2D-histograms in three dimensions. This package is accessed via THistPainter in a transparent way. For the ROOT user it is enough to use the ""SPEC"" option to draw a 2D-Histogram. This option offers many functionalities detailed in the header of the PaintSpectrum function.; Reference:; Morhac M., Kliman J., Matousek V., Turzo I.: Sophisticated visualization algorithms for analysis of multidimensional experimental nuclear data. Acta Pysica Slovaca Vol. 54/ 4 (2004), pp. 385-400. ; Definition at line 30 of file TSpectrum2Painter.h. Public Types; enum  { ;   kModeGroupSimple =0; , kModeGroupHeight =1; , kModeGroupLight =2; , kModeGroupLightHeight =3; , ;   kDisplayModePoints =1; , kDisplayModeGrid =2; , kDisplayModeContours =3; , kDisplayModeBars =4; , ;   kDisplayModeLinesX =5; , kDisplayModeLinesY =6; , kDisplayModeBarsX =7; , kDisplayModeBarsY =8; , ;   kDisplayModeNeedles =9; , kDisplayModeSurface =10; , kDisplayModeTriangles =11; , kZScaleLinear =0; , ;   kZScaleLog =1; , kZScaleSqrt =2; , kColorAlgRgbSmooth =0; , kColorAlgRgbModulo =1; , ;   kColorAlgCmySmooth =2; , kColorAlgCmyModulo =3; , kColorAlgCieSmooth =4; , kColorAlgCieModulo =5; , ;   kColorAlgYiqSmooth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Painter.html:86,Load,Loading,86,doc/master/classTSpectrum2Painter.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Painter.html,1,['Load'],['Loading']
Performance,". ROOT: TSpectrum2Transform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpectrum2Transform Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced 2-dimensional orthogonal transform functions. ; AuthorMiroslav Morhac; Legacy Code TSpectrum2Transform is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrum2Transform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 2D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353 (1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 16 of file TSpectrum2Transform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:88,Load,Loading,88,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['Load'],['Loading']
Performance,". ROOT: TSpectrum3 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TSpectrum3 Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced 3-dimensional spectra processing functions. ; AuthorMiroslav Morhac; Legacy Code TSpectrum3 is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrum3 might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; This class contains advanced spectra processing functions. Three-dimensional background estimation functions; Three-dimensional smoothing functions; Three-dimensional deconvolution functions; Three-dimensional peak search functions. The algorithms in this class have been published in the following references:; [1] M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; [2] M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; [3] M. Morhac et al.: Efficient algorithm of multidimensional deconvolution and its application to nuclear data processing. Digital Signal Processing, Vol. 13, No. 1, (2003), 144-171.; [4] M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125.; These NIM papers are also available as Postscript files from:. SpectrumDec.ps.gz; SpectrumSrc.ps.gz; SpectrumBck.ps.gz. See also ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum3.html:79,Load,Loading,79,doc/master/classTSpectrum3.html,https://root.cern,https://root.cern/doc/master/classTSpectrum3.html,1,['Load'],['Loading']
Performance,". ROOT: TSpectrumFit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpectrumFit Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced 1-dimensional spectra fitting functions. ; AuthorMiroslav Morhac; Legacy Code TSpectrumFit is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrumFit might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class for fitting 1D spectra using AWMI (algorithm without matrix inversion) and conjugate gradient algorithms for symmetrical matrices (Stiefel-Hestens method). AWMI method allows to fit simultaneously 100s up to 1000s peaks. Stiefel method is very stable, it converges faster, but is more time consuming; The algorithms in this class have been published in the following references:; M. Morhac et al.: Efficient fitting algorithms applied to analysis of coincidence gamma-ray spectra. Computer Physics Communications, Vol 172/1 (2005) pp. 19-41.; M. Morhac et al.: Study of fitting algorithms applied to simultaneous analysis of large number of peaks in gamma-ray spectra. Applied Spectroscopy, Vol. 57, No. 7, pp. 753-760, 2003. . Definition at line 18 of file TSpectrumFit.h. Public Types; enum  { ;   kFitOptimChiCounts =0; , kFitOptimChiFuncValues =1; , kFitOptimMaxLikelihood =2; , kFitAlphaHalving =0; , ;   kFitAlphaOptimal =1; , kFitPower2 =2; , kFitPower4 =4; , kFitPower6 =6; , ;   kFitPower8 =8; , kFitPower10 =10; , kFitPower12 =12; , kFitTaylorOrderFirst =0; , ;   kFitTaylorOrderSecond =1; , kFitNumRegulCycles =100. };  ;  Public ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumFit.html:81,Load,Loading,81,doc/master/classTSpectrumFit.html,https://root.cern,https://root.cern/doc/master/classTSpectrumFit.html,1,['Load'],['Loading']
Performance,". ROOT: TSpectrumTransform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpectrumTransform Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced 1-dimensional orthogonal transform functions. ; AuthorMiroslav Morhac; Legacy Code TSpectrumTransform is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrumTransform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 1D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 18 of file TSpectrumTransform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:87,Load,Loading,87,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['Load'],['Loading']
Performance,". ROOT: TSpider Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TSpider Class Reference. ; Spider class. ; A spider view is a handy way to visualize a set of data stored in a TTree. It draws as many polar axes as selected data members. For each of them, it draws on the axis the position of the present event between the min and max of the data member. Two modes are available:. The spider view: With each points on the axes is drawn a polyline.; The segment view: For each data member is drawn an arc segment with the radius corresponding to the event. The spider plot is available from the treeviewer called by ""atree->StartViewer()"", or simply by calling its constructor and defining the variables to display.; {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; f#define f(i)Definition RSha256.hxx:104; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TSpiderSpider class.Definition TSpider.h:40; TSpider::Drawvoid Draw(Option_t *options="""") overrideDraw the spider.Definition TSpider.cxx:454; TSpider::TSpiderTSpider()Default co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:76,Load,Loading,76,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['Load'],['Loading']
Performance,". ROOT: TSpline Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpline Class ReferenceabstractHistogram Library. ; Base class for spline implementation containing the Draw/Paint methods. ; Definition at line 29 of file TSpline.h. Public Member Functions;  TSpline ();  ;  TSpline (const char *title, Double_t delta, Double_t xmin, Double_t xmax, Int_t np, Bool_t step);  ;  ~TSpline () override;  Destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a spline. ;  ; void Draw (Option_t *option="""") override;  Draw this function with its current attributes. ;  ; virtual Double_t Eval (Double_t x) const =0;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual Double_t GetDelta () const;  ; TH1F * GetHistogram () const;  ; virtual void GetKnot (Int_t i, Double_t &x, Double_t &y) const =0;  ; virtual Int_t GetNp () const;  ; virtual Int_t GetNpx () const;  ; virtual Double_t GetXmax () const;  ; virtual Double_t GetXmin () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint this function with its current attributes. ;  ; void SaveAs (const char *="""", Option_t *="""") const override;  Save this object in the file specified by filename. ;  ; void SetNpx (Int_t n);  ; void Streamer (TBuffer &) override;  Stream an object of class TSpline. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline.html:76,Load,Loading,76,doc/master/classTSpline.html,https://root.cern,https://root.cern/doc/master/classTSpline.html,1,['Load'],['Loading']
Performance,". ROOT: TSpline3 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpline3 Class ReferenceHistogram Library. ; Class to create third splines to interpolate knots Arbitrary conditions can be introduced for first and second derivatives at beginning and ending points. ; Definition at line 181 of file TSpline.h. Public Member Functions;  TSpline3 ();  ;  TSpline3 (const char *title, const TGraph *g, const char *opt=nullptr, Double_t valbeg=0, Double_t valend=0);  Third spline creator given a TGraph with abscissa in increasing order and possibly end point conditions. ;  ;  TSpline3 (const char *title, Double_t x[], const TF1 *func, Int_t n, const char *opt=nullptr, Double_t valbeg=0, Double_t valend=0);  Third spline creator given an array of arbitrary abscissas in increasing order and a function to interpolate and possibly end point conditions. ;  ;  TSpline3 (const char *title, Double_t x[], Double_t y[], Int_t n, const char *opt=nullptr, Double_t valbeg=0, Double_t valend=0);  Third spline creator given an array of arbitrary knots in increasing abscissa order and possibly end point conditions. ;  ;  TSpline3 (const char *title, Double_t xmin, Double_t xmax, const TF1 *func, Int_t n, const char *opt=nullptr, Double_t valbeg=0, Double_t valend=0);  Third spline creator given a function to be evaluated on n equidistant abscissa points between xmin and xmax and possibly end point conditions. ;  ;  TSpline3 (const char *title, Double_t xmin, Double_t xmax, Double_t y[], Int_t n, const char *opt=nullptr, Double_t valbeg=0, Double_t valend=0);  Third spline creator given an array of arbitrary function values on equidistant n abscissa values from xmin to xmax and possibly end point conditions. ;  ;  TSpline3 (const TH1 *h, const char *opt=nullptr, Double_t valbeg=0, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline3.html:77,Load,Loading,77,doc/master/classTSpline3.html,https://root.cern,https://root.cern/doc/master/classTSpline3.html,1,['Load'],['Loading']
Performance,". ROOT: TSpline5 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpline5 Class ReferenceHistogram Library. ; Class to create quintic natural splines to interpolate knots Arbitrary conditions can be introduced for first and second derivatives using double knots (see BuildCoeff) for more on this. ; Double knots are automatically introduced at ending points ; Definition at line 237 of file TSpline.h. Public Member Functions;  TSpline5 ();  ;  TSpline5 (const char *title, const TGraph *g, const char *opt=nullptr, Double_t b1=0, Double_t e1=0, Double_t b2=0, Double_t e2=0);  Quintic natural spline creator given a TGraph with abscissa in increasing order and possibly end point conditions. ;  ;  TSpline5 (const char *title, Double_t x[], const TF1 *func, Int_t n, const char *opt=nullptr, Double_t b1=0, Double_t e1=0, Double_t b2=0, Double_t e2=0);  Quintic natural spline creator given an array of arbitrary abscissas in increasing order and a function to interpolate and possibly end point conditions. ;  ;  TSpline5 (const char *title, Double_t x[], Double_t y[], Int_t n, const char *opt=nullptr, Double_t b1=0, Double_t e1=0, Double_t b2=0, Double_t e2=0);  Quintic natural spline creator given an array of arbitrary knots in increasing abscissa order and possibly end point conditions. ;  ;  TSpline5 (const char *title, Double_t xmin, Double_t xmax, const TF1 *func, Int_t n, const char *opt=nullptr, Double_t b1=0, Double_t e1=0, Double_t b2=0, Double_t e2=0);  Quintic natural spline creator given a function to be evaluated on n equidistant abscissa points between xmin and xmax and possibly end point conditions. ;  ;  TSpline5 (const char *title, Double_t xmin, Double_t xmax, Double_t y[], Int_t n, const char *opt=nullptr, Double_t b1=0, Double_t e1=0, Double_t b2=0, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline5.html:77,Load,Loading,77,doc/master/classTSpline5.html,https://root.cern,https://root.cern/doc/master/classTSpline5.html,1,['Load'],['Loading']
Performance,". ROOT: TSplinePoly Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TSplinePoly Class ReferenceHistogram Library. ; Base class for TSpline knot. ; Definition at line 74 of file TSpline.h. Public Member Functions;  TSplinePoly ();  ;  TSplinePoly (Double_t x, Double_t y);  ;  TSplinePoly (TSplinePoly const &other);  ; virtual Double_t Eval (Double_t) const;  ; void GetKnot (Double_t &x, Double_t &y) const;  ; TClass * IsA () const override;  ; TSplinePoly & operator= (TSplinePoly const &other);  Assignment operator. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t & X ();  ; Double_t & Y ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly.html:80,Load,Loading,80,doc/master/classTSplinePoly.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly.html,1,['Load'],['Loading']
Performance,". ROOT: TSplinePoly3 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TSplinePoly3 Class ReferenceHistogram Library. ; Class for TSpline3 knot. ; Definition at line 104 of file TSpline.h. Public Member Functions;  TSplinePoly3 ();  ;  TSplinePoly3 (Double_t x, Double_t y, Double_t b, Double_t c, Double_t d);  ;  TSplinePoly3 (TSplinePoly3 const &other);  ; Double_t & B ();  ; Double_t & C ();  ; Double_t & D ();  ; Double_t Derivative (Double_t x) const;  ; Double_t Eval (Double_t x) const override;  ; TClass * IsA () const override;  ; TSplinePoly3 & operator= (TSplinePoly3 const &other);  Assignment operator. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSplinePoly;  TSplinePoly ();  ;  TSplinePoly (Double_t x, Double_t y);  ;  TSplinePoly (TSplinePoly const &other);  ; void GetKnot (Double_t &x, Double_t &y) const;  ; TSplinePoly & operator= (TSplinePoly const &other);  Assignment operator. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t & X ();  ; Double_t & Y ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly3.html:81,Load,Loading,81,doc/master/classTSplinePoly3.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly3.html,1,['Load'],['Loading']
Performance,". ROOT: TSplinePoly5 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TSplinePoly5 Class ReferenceHistogram Library. ; Class for TSpline5 knot. ; Definition at line 139 of file TSpline.h. Public Member Functions;  TSplinePoly5 ();  ;  TSplinePoly5 (Double_t x, Double_t y, Double_t b, Double_t c, Double_t d, Double_t e, Double_t f);  ;  TSplinePoly5 (TSplinePoly5 const &other);  ; Double_t & B ();  ; Double_t & C ();  ; Double_t & D ();  ; Double_t Derivative (Double_t x) const;  ; Double_t & E ();  ; Double_t Eval (Double_t x) const override;  ; Double_t & F ();  ; TClass * IsA () const override;  ; TSplinePoly5 & operator= (TSplinePoly5 const &other);  Assignment operator. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSplinePoly;  TSplinePoly ();  ;  TSplinePoly (Double_t x, Double_t y);  ;  TSplinePoly (TSplinePoly const &other);  ; void GetKnot (Double_t &x, Double_t &y) const;  ; TSplinePoly & operator= (TSplinePoly const &other);  Assignment operator. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t & X ();  ; Double_t & Y ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly5.html:81,Load,Loading,81,doc/master/classTSplinePoly5.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly5.html,1,['Load'],['Loading']
Performance,". ROOT: TSqlCmdsBuffer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TSqlCmdsBuffer Class Reference. . Definition at line 787 of file TSQLStructure.cxx. Public Member Functions;  TSqlCmdsBuffer (TSQLFile *f, TSQLClassInfo *info);  ;  ~TSqlCmdsBuffer () override;  ; void AddValues (Bool_t isnorm, const char *values);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option=""""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSqlCmdsBuffer.html:83,Load,Loading,83,doc/master/classTSqlCmdsBuffer.html,https://root.cern,https://root.cern/doc/master/classTSqlCmdsBuffer.html,1,['Load'],['Loading']
Performance,". ROOT: TSqlRawBuffer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TSqlRawBuffer Class Reference. . Definition at line 1077 of file TSQLStructure.cxx. Public Member Functions;  TSqlRawBuffer (TSqlRegistry *reg, TSQLClassInfo *sqlinfo);  ;  ~TSqlRawBuffer () override;  ; void AddLine (const char *name, const char *value, const char *topname=nullptr, const char *ns=nullptr);  ; Bool_t IsAnyData () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSqlRawBuffer.html:82,Load,Loading,82,doc/master/classTSqlRawBuffer.html,https://root.cern,https://root.cern/doc/master/classTSqlRawBuffer.html,1,['Load'],['Loading']
Performance,". ROOT: TSqlRegistry Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TSqlRegistry Class Reference. . Definition at line 821 of file TSQLStructure.cxx. Public Member Functions;  TSqlRegistry ();  ;  ~TSqlRegistry () override;  ; Int_t AddLongString (const char *strvalue);  ; void AddRegCmd (Long64_t objid, TClass *cl);  ; void AddSqlCmd (const char *query);  ; void ConvertPoolValues ();  ; void ConvertSqlValues (TObjArray &values, const char *tablename);  ; TSqlCmdsBuffer * GetCmdsBuffer (TSQLClassInfo *sqlinfo);  ; Long64_t GetNextObjId ();  ; void InsertToNormalTable (TSQLTableData *columns, TSQLClassInfo *sqlinfo);  ; Bool_t InsertToNormalTableOracle (TSQLTableData *columns, TSQLClassInfo *sqlinfo);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSqlRegistry.html:81,Load,Loading,81,doc/master/classTSqlRegistry.html,https://root.cern,https://root.cern/doc/master/classTSqlRegistry.html,1,['Load'],['Loading']
Performance,". ROOT: TStatistic Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStatistic Class ReferenceMath » MathCore. ; Statistical variable, defined by its mean and variance (RMS). ; Named, streamable, storable and mergeable. ; Definition at line 33 of file TStatistic.h. Public Member Functions;  TStatistic (const char *name, Int_t n, const Double_t *val, const Double_t *w=nullptr);  Constructor from a vector of values. ;  ;  TStatistic (const char *name="""");  ;  ~TStatistic () override;  TStatistic destructor. ;  ; void Fill (Double_t val, Double_t w=1.);  Increment the entries in the object by one value-weight pair. ;  ; Double_t GetM2 () const;  ; Double_t GetMax () const;  ; Double_t GetMean () const;  ; Double_t GetMeanErr () const;  ; Double_t GetMin () const;  ; Long64_t GetN () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Long64_t GetNeff () const;  ; Double_t GetRMS () const;  ; Double_t GetVar () const;  ; Double_t GetW () const;  ; Double_t GetW2 () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; Int_t Merge (TCollection *in);  Merge implementation of TStatistic. ;  ; void Print (Option_t *="""") const override;  Print the content of the object. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatistic.html:79,Load,Loading,79,doc/master/classTStatistic.html,https://root.cern,https://root.cern/doc/master/classTStatistic.html,1,['Load'],['Loading']
Performance,". ROOT: TStatsFeedback Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TStatsFeedback Class ReferencePROOF » PROOF kernel Libraries. ; Utility class to display PROOF stats feedback histos during queries. ; Definition at line 32 of file TStatsFeedback.h. Public Member Functions;  TStatsFeedback (TProof *proof=0);  Constructor. ;  ;  ~TStatsFeedback () override;  Destructor. ;  ; void Feedback (TList *objs);  Display feedback. ;  ; const char * GetName () const override;  Returns name of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatsFeedback.html:83,Load,Loading,83,doc/master/classTStatsFeedback.html,https://root.cern,https://root.cern/doc/master/classTStatsFeedback.html,1,['Load'],['Loading']
Performance,". ROOT: TStatus Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStatus Class ReferencePROOF » PROOF kernel Libraries. ; This class holds the status of an ongoing operation and collects error messages. ; It provides a Merge() operation allowing it to be used in PROOF to monitor status in the slaves. No messages indicates success. ; Definition at line 32 of file TStatus.h. Public Types; enum  EProcStatus { kNotOk = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStatus ();  Default constructor. ;  ;  ~TStatus () override;  ; void Add (const char *mesg);  Add an error message. ;  ; void AddInfo (const char *mesg);  Add an info message. ;  ; Int_t GetExitStatus () const;  ; Long_t GetResMemMax (Bool_t master=kFALSE) const;  ; Long_t GetVirtMemMax (Bool_t master=kFALSE) const;  ; TClass * IsA () const override;  ; Bool_t IsOk () const;  ; virtual Int_t Merge (TCollection *list);  PROOF Merge() function. ;  ; const char * NextMesg ();  Return the next message or 0. ;  ; void Print (Option_t *option="""") const override;  Standard print function. ;  ; void Reset ();  Reset the iterator on the messages. ;  ; void SetExitStatus (Int_t est);  ; void SetMemVal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatus.html:76,Load,Loading,76,doc/master/classTStatus.html,https://root.cern,https://root.cern/doc/master/classTStatus.html,1,['Load'],['Loading']
Performance,". ROOT: TStdExceptionHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; List of all members ; TStdExceptionHandler Class Referenceabstract. . Definition at line 172 of file TSysEvtHandler.h. Public Types; enum  EStatus { kSEProceed; , kSEHandled; , kSEAbort; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStdExceptionHandler ();  Handle standard C++ exceptions intercepted by the TSystem::Run(). ;  ; virtual ~TStdExceptionHandler ();  ; void Add () override;  Add std::exception handler to system handler list. ;  ; virtual EStatus Handle (std::exception &exc)=0;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove std::exception handler from system handler list. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStdExceptionHandler.html:89,Load,Loading,89,doc/master/classTStdExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTStdExceptionHandler.html,1,['Load'],['Loading']
Performance,". ROOT: TStopTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TStopTimer Class Reference. . Definition at line 169 of file TProofPlayer.cxx. Public Member Functions;  TStopTimer (TProofPlayer *p, Bool_t abort, Int_t to);  Constructor for the timer to stop/abort processing. ;  ; Bool_t Notify () override;  Handle the signal coming from the expiration of the timer associated with an abort or stop request. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStopTimer.html:79,Load,Loading,79,doc/master/classTStopTimer.html,https://root.cern,https://root.cern/doc/master/classTStopTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TStopwatch Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Static Private Member Functions |; Private Attributes |; List of all members ; TStopwatch Class ReferenceCore ROOT classes » Base ROOT classes. ; Stopwatch class. ; This class returns the real and cpu time between the start and stop events. ; Definition at line 28 of file TStopwatch.h. Public Member Functions;  TStopwatch ();  Create a stopwatch and start it. ;  ; void Continue ();  Resume a stopped stopwatch. ;  ; Int_t Counter () const;  ; Double_t CpuTime ();  Stop the stopwatch (if it is running) and return the cputime (in seconds) passed between the start and stop events. ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print the real and cpu time passed between the start and stop events. ;  ; Double_t RealTime ();  Stop the stopwatch (if it is running) and return the realtime (in seconds) passed between the start and stop events. ;  ; void Reset ();  ; void ResetCpuTime (Double_t time=0);  ; void ResetRealTime (Double_t time=0);  ; void Start (Bool_t reset=kTRUE);  Start the stopwatch. ;  ; void Stop ();  Stop the stopwatch. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStopwatch.html:79,Load,Loading,79,doc/master/classTStopwatch.html,https://root.cern,https://root.cern/doc/master/classTStopwatch.html,1,['Load'],['Loading']
Performance,". ROOT: TStorage Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Private Types |; Static Private Attributes |; List of all members ; TStorage Class ReferenceCore ROOT classes » Base ROOT classes. ; Storage manager. ; The storage manager works best in conjunction with the custom ROOT new and delete operators defined in the file NewDelete.cxx (libNew.so). Only when using the custom allocation operators will memory usage statistics be gathered using the TStorage EnterStat(), RemoveStat(), etc. functions. Memory checking is by default enabled (when using libNew.so) and usage statistics is gathered. Using the resource (in .rootrc): Root.MemStat one can toggle statistics gathering on or off. More specifically on can trap the allocation of a block of memory of a certain size. This can be specified using the resource: Root.MemStat.size, using the resource Root.MemStat.cnt one can specify after how many allocations of this size the trap should occur.; Set the compile option R__NOSTATS to de-activate all memory checking and statistics gathering in the system. ; Definition at line 33 of file TStorage.h. Public Member Functions; virtual ~TStorage ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void * Alloc (size_t size);  Allocate a block of memory, that later can be resized using TStorage::ReAlloc(). ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void Dealloc (void *ptr);  De-allocate block of memory, that was allocated via TStorage::Alloc(). ;  ; static const char * DeclFileName ();  ; static void EnableStatistics (int size=-1, int ix=-1);  Enable memory usage statistics gathering. ;  ; static void EnterSta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStorage.html:77,Load,Loading,77,doc/master/classTStorage.html,https://root.cern,https://root.cern/doc/master/classTStorage.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerArtificial Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerArtificial Class Reference. . Definition at line 449 of file TStreamerElement.h. Public Member Functions;  TStreamerArtificial (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  ; ROOT::TSchemaRule::ReadFuncPtr_t GetReadFunc ();  ; ROOT::TSchemaRule::ReadRawFuncPtr_t GetReadRawFunc ();  ; TClass * IsA () const override;  ; void SetReadFunc (ROOT::TSchemaRule::ReadFuncPtr_t val);  ; void SetReadRawFunc (ROOT::TSchemaRule::ReadRawFuncPtr_t val);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; virtual const char * GetInclude () const;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerArtificial.html:88,Load,Loading,88,doc/master/classTStreamerArtificial.html,https://root.cern,https://root.cern/doc/master/classTStreamerArtificial.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerBase Class Reference. . Definition at line 150 of file TStreamerElement.h. Public Member Functions;  TStreamerBase ();  ;  TStreamerBase (const char *name, const char *title, Int_t offset, Bool_t isTransient=kFALSE);  ; virtual ~TStreamerBase ();  TStreamerBase dtor. ;  ; UInt_t GetBaseCheckSum ();  ; TVirtualStreamerInfo * GetBaseStreamerInfo () const;  ; Int_t GetBaseVersion ();  ; TClass * GetClassPointer () const override;  Returns a pointer to the TClass of this element. ;  ; const char * GetErrorMessage () const;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; ULongptr_t GetMethod () const override;  ; TClass * GetNewBaseClass ();  ; Int_t GetSize () const override;  Returns size of baseclass in bytes. ;  ; void Init (Bool_t isTransient=kFALSE);  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; Int_t ReadBuffer (TBuffer &b, char *pointer);  Read the content of the buffer. ;  ; void SetBaseCheckSum (UInt_t cs);  ; void SetBaseVersion (Int_t v);  ; void SetErrorMessage (const char *msg);  ; void SetNewBaseClass (TClass *cl);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerBase. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (const TClass *oldClass, TClass *newClass) override;  Function called by the TClass constructor when replacing an emulated class by the real class. ;  ; Int_t WriteBuffer (TBuffer &b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerBase.html:82,Load,Loading,82,doc/master/classTStreamerBase.html,https://root.cern,https://root.cern/doc/master/classTStreamerBase.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerBasicPointer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerBasicPointer Class Reference. . Definition at line 198 of file TStreamerElement.h. Public Member Functions;  TStreamerBasicPointer ();  pointer to basic type counter ;  ;  TStreamerBasicPointer (const char *name, const char *title, Int_t offset, Int_t dtype, const char *countName, const char *countClass, Int_t version, const char *typeName);  Create a TStreamerBasicPointer object. ;  ; virtual ~TStreamerBasicPointer ();  TStreamerBasicPointer dtor. ;  ; TClass * GetClassPointer () const override;  Returns a pointer to the TClass of this element. ;  ; const char * GetCountClass () const;  ; const char * GetCountName () const;  ; Int_t GetCountVersion () const;  ; ULongptr_t GetMethod () const override;  return offset of counter ;  ; Int_t GetSize () const override;  Returns size of basicpointer in bytes. ;  ; Bool_t HasCounter () const override;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  ; void SetArrayDim (Int_t dim) override;  Set number of array dimensions. ;  ; void SetCountClass (const char *clname);  ; void SetCountName (const char *name);  ; void SetCountVersion (Int_t count);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerBasicPointer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (const TClass *, TClass *) override;  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerBasicPointer.html:90,Load,Loading,90,doc/master/classTStreamerBasicPointer.html,https://root.cern,https://root.cern/doc/master/classTStreamerBasicPointer.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerBasicType Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerBasicType Class Reference. . Definition at line 269 of file TStreamerElement.h. Public Member Functions;  TStreamerBasicType ();  value of data member when referenced by an array ;  ;  TStreamerBasicType (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerBasicType object. ;  ; virtual ~TStreamerBasicType ();  TStreamerBasicType dtor. ;  ; TClass * GetClassPointer () const override;  Returns a pointer to the TClass of this element. ;  ; Int_t GetCounter () const;  ; ULongptr_t GetMethod () const override;  return address of counter ;  ; Int_t GetSize () const override;  Returns size of this element in bytes. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerBasicType. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (const TClass *, TClass *) override;  function called by the TClass constructor when replacing an emulated class by the real class ;  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerBasicType.html:87,Load,Loading,87,doc/master/classTStreamerBasicType.html,https://root.cern,https://root.cern/doc/master/classTStreamerBasicType.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerElement Class Reference. . Definition at line 32 of file TStreamerElement.h. Public Types; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( 9 )); , kRepeat = (1ULL << ( 10 )); , kRead = (1ULL << ( 11 )); , ;   kWrite = (1ULL << ( 12 )); , kDoNotDelete = (1ULL << ( 13 )); , kWholeObject = (1ULL << ( 14 )); , kWarned = (1ULL << ( 21 )). };  ; enum class  EStatusBitsDupExceptions { kDoNotDelete = TStreamerElement::kDoNotDelete; , kHasRange = TStreamerElement::kHasRange; };  ; enum  ESTLtype { ;   kSTL = ROOT::kSTLany; , kSTLstring = ROOT::kSTLstring; , kSTLvector = ROOT::kSTLvector; , kSTLlist = ROOT::kSTLlist; , ;   kSTLforwardlist = ROOT::kSTLforwardlist; , kSTLdeque = ROOT::kSTLdeque; , kSTLmap = ROOT::kSTLmap; , kSTLmultimap = ROOT::kSTLmultimap; , ;   kSTLset = ROOT::kSTLset; , kSTLmultiset = ROOT::kSTLmultiset; , kSTLunorderedset = ROOT::kSTLunorderedset; , kSTLunorderedmultiset = ROOT::kSTLunorderedmultiset; , ;   kSTLunorderedmap = ROOT::kSTLunorderedmap; , kSTLunorderedmultimap = ROOT::kSTLunorderedmultimap; , kSTLbitset = ROOT::kSTLbitset. };  Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin) More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerElement.html:85,Load,Loading,85,doc/master/classTStreamerElement.html,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TStreamerInfo Class ReferenceInput/Output Library. ; Describes a persistent version of a class. ; A ROOT file contains the list of TStreamerInfo objects for all the class versions written to this file. When reading a file, all the TStreamerInfo objects are read back in memory and registered to the TClass list of TStreamerInfo. One can see the list and contents of the TStreamerInfo on a file with, e.g., TFile f(""myfile.root"");; f.ShowStreamerInfo();; f#define f(i)Definition RSha256.hxx:104; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; A TStreamerInfo is a list of TStreamerElement objects (one per data member or base class). When streaming an object, the system (TClass) loops on all the TStreamerElement objects and calls the appropriate function for each element type. ; Definition at line 39 of file TStreamerInfo.h. Classes; class  TCompInfo;  ; class  TPointerCollectionAdapter;  . Public Types; typedef TCompInfo TCompInfo_t;  ;  Public Types inherited from TVirtualStreamerInfo; enum  EReadWrite { ;   kBase = 0; , kOffsetL = 20; , kOffsetP = 40; , kCounter = 6; , ;   kCharStar = 7; , kChar = 1; , kShort = 2; , kInt = 3; , ;   kLong = 4; , kFloat = 5; , kDouble = 8; , kDouble32 = 9; , ;   kLegacyChar = 10; , kUChar = 11; , kUShort = 12; , kUInt = 13; , ;   kULong = 14; , kBits = 15; , kLong64 = 16; , kULong64 = 17; , ;   kBool = 18; , kFloat16 = 19; , kObject = 61; , kAny = 62; , ;   kObjectp = 63; , kObjectP = 64; , kTString = 65; , kTObject = 66; , ;   kTNamed = 67; , kAnyp = 68; , kAnyP = 69; , kAnyPnoVT = 70; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo.html:82,Load,Loading,82,doc/master/classTStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerInfo::TCompInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TStreamerInfo::TCompInfo Class Reference. . Definition at line 41 of file TStreamerInfo.h. Public Member Functions;  TCompInfo ();  ;  ~TCompInfo ();  ; void Update (const TClass *oldcl, TClass *newcl);  Update the TClass pointer cached in this object. ;  . Public Attributes; TClass * fClass;  Not Owned. ;  ; TString fClassName;  ; TStreamerElement * fElem;  Not Owned. ;  ; Int_t fLength;  ; ULongptr_t fMethod;  ; TClass * fNewClass;  Not Owned. ;  ; Int_t fNewType;  ; Int_t fOffset;  ; TMemberStreamer * fStreamer;  Not Owned. ;  ; Int_t fType;  . Constructor & Destructor Documentation. ◆ TCompInfo(). TStreamerInfo::TCompInfo::TCompInfo ; (; ). inline . Definition at line 57 of file TStreamerInfo.h. ◆ ~TCompInfo(). TStreamerInfo::TCompInfo::~TCompInfo ; (; ). inline . Definition at line 59 of file TStreamerInfo.h. Member Function Documentation. ◆ Update(). void TStreamerInfo::TCompInfo::Update ; (; const TClass * ; oldcl, . TClass * ; newcl . ). Update the TClass pointer cached in this object. ; Definition at line 5644 of file TStreamerInfo.cxx. Member Data Documentation. ◆ fClass. TClass* TStreamerInfo::TCompInfo::fClass. Not Owned. ; Definition at line 53 of file TStreamerInfo.h. ◆ fClassName. TString TStreamerInfo::TCompInfo::fClassName. Definition at line 55 of file TStreamerInfo.h. ◆ fElem. TStreamerElement* TStreamerInfo::TCompInfo::fElem. Not Owned. ; Definition at line 51 of file TStreamerInfo.h. ◆ fLength. Int_t TStreamerInfo::TCompInfo::fLength. Definition at line 50 of file TStreamerInfo.h. ◆ fMethod. ULongptr_t TStreamerInfo::TCompInfo::fMethod. Definition at line 52 of file TStreamerInfo.h. ◆ fNewClass. TClass* TStreamerInfo::TCompInfo::fNewClass. Not Owned. ; Definition at line 54 of file TStreamerInfo.h. ◆ fNewType. Int_t TStreamerI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo_1_1TCompInfo.html:93,Load,Loading,93,doc/master/classTStreamerInfo_1_1TCompInfo.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo_1_1TCompInfo.html,2,"['Load', 'cache']","['Loading', 'cached']"
Performance,. ROOT: TStreamerInfo::TPointerCollectionAdapter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TStreamerInfo::TPointerCollectionAdapter Class Reference. . Definition at line 72 of file TStreamerInfo.h. Public Member Functions;  TPointerCollectionAdapter (TVirtualCollectionProxy *proxy);  ; char * operator[] (UInt_t idx) const;  . Private Attributes; TVirtualCollectionProxy * fProxy;  . #include <TStreamerInfo.h>; Constructor & Destructor Documentation. ◆ TPointerCollectionAdapter(). TStreamerInfo::TPointerCollectionAdapter::TPointerCollectionAdapter ; (; TVirtualCollectionProxy * ; proxy). inline . Definition at line 75 of file TStreamerInfo.h. Member Function Documentation. ◆ operator[](). char * TStreamerInfo::TPointerCollectionAdapter::operator[] ; (; UInt_t ; idx); const. inline . Definition at line 78 of file TStreamerInfo.h. Member Data Documentation. ◆ fProxy. TVirtualCollectionProxy* TStreamerInfo::TPointerCollectionAdapter::fProxy. private . Definition at line 84 of file TStreamerInfo.h. Libraries for TStreamerInfo::TPointerCollectionAdapter:. [legend]; The documentation for this class was generated from the following file:; io/io/inc/TStreamerInfo.h. TStreamerInfoTPointerCollectionAdapter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:33 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo_1_1TPointerCollectionAdapter.html:109,Load,Loading,109,doc/master/classTStreamerInfo_1_1TPointerCollectionAdapter.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo_1_1TPointerCollectionAdapter.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerInfoActions Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Enumerations |; Functions ; TStreamerInfoActions Namespace Reference. Classes; struct  AssociativeLooper;  ; struct  BitsMarker;  ; struct  ConvertBasicType;  ; struct  ConvertBasicType< BitsMarker, To >;  ; struct  ConvertBasicType< NoFactorMarker< From >, To >;  ; struct  ConvertBasicType< WithFactorMarker< From >, To >;  ; struct  GenericLooper;  ; struct  NoFactorMarker;  ; class  TActionSequence;  ; class  TAssocLoopConfig;  ; struct  TBitsConfiguration;  ; class  TConfigSTL;  ; class  TConfiguration;  Base class of the Configurations. More...;  ; class  TConfigurationPushDataCache;  ; class  TConfigurationUseCache;  ; class  TConfiguredAction;  ; class  TConfNoFactor;  ; class  TConfSTLNoFactor;  ; class  TConfSTLWithFactor;  ; class  TConfWithFactor;  ; struct  TGenericConfiguration;  ; class  TGenericLoopConfig;  ; struct  TIDNode;  ; class  TLoopConfiguration;  Base class of the Configurations for the member wise looping routines. More...;  ; struct  TNestedIDs;  ; class  TVectorLoopConfig;  ; struct  VectorLooper;  ; struct  VectorPtrLooper;  ; struct  WithFactorMarker;  . Typedefs; typedef std::vector< TConfiguredAction > ActionContainer_t;  ; typedef TVirtualCollectionProxy::Next_t Next_t;  ; using TIDs = std::vector< TIDNode >;  ; typedef Int_t(* TStreamerInfoAction_t) (TBuffer &buf, void *obj, const TConfiguration *conf);  ; typedef Int_t(* TStreamerInfoLoopAction_t) (TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *conf);  ; typedef Int_t(* TStreamerInfoVecPtrLoopAction_t) (TBuffer &buf, void *iter, const void *end, const TConfiguration *conf);  . Enumerations; enum  ESelectLooper { kVectorLooper; , kVectorPtrLooper; , kAssociativeLooper; , kGenericLooper; };  . Functions; Int_t GenericReadAction (TBuffer &buf, void *addr, const TConfiguration *confi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:93,Load,Loading,93,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerInfoActions::TActionSequence Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TStreamerInfoActions::TActionSequence Class Reference. . Definition at line 177 of file TStreamerInfoActions.h. Classes; struct  SequencePtr;  . Public Types; enum class  EStatusBits { kVectorPtrLooper = (1ULL << ( 14 )); };  ; using SequenceGetter_t = SequencePtr(*)(TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TActionSequence (TVirtualStreamerInfo *info, UInt_t maxdata, Bool_t isForVecPtr=kFALSE);  ;  ~TActionSequence () override;  ; template<typename action_t > ; void AddAction (action_t action, TConfiguration *conf);  ; void AddAction (const TConfiguredAction &action);  ; void AddToOffset (Int_t delta);  ; void AddToSubSequence (TActionSequence *sequence, const TIDs &element_ids, Int_t offset, SequenceGetter_t create);  ; TActionSequence * CreateCopy ();  ; TActionSequence * CreateSubSequence (const std::vector< Int_t > &element_ids, size_t offset);  ; TActionSequence * CreateSubSequence (const TIDs &element_ids, size_t offset, SequenceGetter_t crea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:106,Load,Loading,106,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerInfoActions::TConfiguredAction Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TStreamerInfoActions::TConfiguredAction Class Reference. . Definition at line 74 of file TStreamerInfoActions.h. Public Member Functions;  TConfiguredAction ();  ;  TConfiguredAction (const TConfiguredAction &rval);  ;  TConfiguredAction (TStreamerInfoAction_t action, TConfiguration *conf);  ;  TConfiguredAction (TStreamerInfoLoopAction_t action, TConfiguration *conf);  ;  TConfiguredAction (TStreamerInfoVecPtrLoopAction_t action, TConfiguration *conf);  ;  ~TConfiguredAction () override;  ; TClass * IsA () const override;  ; Int_t operator() (TBuffer &buffer, void *object) const;  ; Int_t operator() (TBuffer &buffer, void *start_collection, const void *end_collection) const;  ; Int_t operator() (TBuffer &buffer, void *start_collection, const void *end_collection, const TLoopConfiguration *loopconf) const;  ; TConfiguredAction & operator= (const TConfiguredAction &rval);  ; void PrintDebug (TBuffer &buffer, void *object) const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html:108,Load,Loading,108,doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TConfiguredAction.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerLoop Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerLoop Class Reference. . Definition at line 235 of file TStreamerElement.h. Public Member Functions;  TStreamerLoop ();  pointer to basic type counter ;  ;  TStreamerLoop (const char *name, const char *title, Int_t offset, const char *countName, const char *countClass, Int_t version, const char *typeName);  Create a TStreamerLoop object. ;  ; virtual ~TStreamerLoop ();  TStreamerLoop dtor. ;  ; const char * GetCountClass () const;  ; const char * GetCountName () const;  ; Int_t GetCountVersion () const;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; ULongptr_t GetMethod () const override;  return address of counter ;  ; Int_t GetSize () const override;  Returns size of counter in bytes. ;  ; Bool_t HasCounter () const override;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  ; void SetCountClass (const char *clname);  ; void SetCountName (const char *name);  ; void SetCountVersion (Int_t count);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerLoop. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerLoop.html:82,Load,Loading,82,doc/master/classTStreamerLoop.html,https://root.cern,https://root.cern/doc/master/classTStreamerLoop.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerObject Class Reference. . Definition at line 293 of file TStreamerElement.h. Public Member Functions;  TStreamerObject ();  Default ctor. ;  ;  TStreamerObject (const char *name, const char *title, Int_t offset, const char *typeName);  Create a TStreamerObject object. ;  ; virtual ~TStreamerObject ();  TStreamerObject dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of object class in bytes. ;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerObject.html:84,Load,Loading,84,doc/master/classTStreamerObject.html,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerObjectAny Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerObjectAny Class Reference. . Definition at line 312 of file TStreamerElement.h. Public Member Functions;  TStreamerObjectAny ();  Default ctor. ;  ;  TStreamerObjectAny (const char *name, const char *title, Int_t offset, const char *typeName);  Create a TStreamerObjectAny object. ;  ; virtual ~TStreamerObjectAny ();  TStreamerObjectAny dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerObjectAny. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerObjectAny.html:87,Load,Loading,87,doc/master/classTStreamerObjectAny.html,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerObjectAnyPointer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerObjectAnyPointer Class Reference. . Definition at line 352 of file TStreamerElement.h. Public Member Functions;  TStreamerObjectAnyPointer ();  Default ctor. ;  ;  TStreamerObjectAnyPointer (const char *name, const char *title, Int_t offset, const char *typeName);  Create a TStreamerObjectAnyPointer object. ;  ; virtual ~TStreamerObjectAnyPointer ();  TStreamerObjectAnyPointer dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of objectpointer in bytes. ;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  ; void SetArrayDim (Int_t dim) override;  Set number of array dimensions. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerObjectAnyPointer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:94,Load,Loading,94,doc/master/classTStreamerObjectAnyPointer.html,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerObjectPointer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerObjectPointer Class Reference. . Definition at line 331 of file TStreamerElement.h. Public Member Functions;  TStreamerObjectPointer ();  Default ctor. ;  ;  TStreamerObjectPointer (const char *name, const char *title, Int_t offset, const char *typeName);  Create a TStreamerObjectPointer object. ;  ; virtual ~TStreamerObjectPointer ();  TStreamerObjectPointer dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of objectpointer in bytes. ;  ; void Init (TVirtualStreamerInfo *obj=nullptr) override;  Setup the element. ;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  ; void SetArrayDim (Int_t dim) override;  Set number of array dimensions. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerObjectPointer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFull",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerObjectPointer.html:91,Load,Loading,91,doc/master/classTStreamerObjectPointer.html,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerSTL Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerSTL Class Reference. . Definition at line 391 of file TStreamerElement.h. Public Member Functions;  TStreamerSTL ();  Default ctor. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const char *trueType, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const TVirtualCollectionProxy &proxy, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ; virtual ~TStreamerSTL ();  TStreamerSTL dtor. ;  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of STL container in bytes. ;  ; Int_t GetSTLtype () const;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer *streamer) override;  Set pointer to Streamer function for this element NOTE: we do not take ownership. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerSTL. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerSTL.html:81,Load,Loading,81,doc/master/classTStreamerSTL.html,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerSTLstring Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerSTLstring Class Reference. . Definition at line 425 of file TStreamerElement.h. Public Member Functions;  TStreamerSTLstring ();  Default ctor. ;  ;  TStreamerSTLstring (const char *name, const char *title, Int_t offset, const char *typeName, Bool_t dmPointer);  Create a TStreamerSTLstring object. ;  ; virtual ~TStreamerSTLstring ();  TStreamerSTLstring dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerSTLstring. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerSTL;  TStreamerSTL ();  Default ctor. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const char *trueType, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const TVirtualCollectionProxy &proxy, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ; virtual ~TStreamerSTL ();  TStreamerSTL dtor. ;  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; Int_t GetSTLtype () const;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerSTLstring.html:87,Load,Loading,87,doc/master/classTStreamerSTLstring.html,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html,1,['Load'],['Loading']
Performance,". ROOT: TStreamerString Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerString Class Reference. . Definition at line 373 of file TStreamerElement.h. Public Member Functions;  TStreamerString ();  Default ctor. ;  ;  TStreamerString (const char *name, const char *title, Int_t offset);  Create a TStreamerString object. ;  ; virtual ~TStreamerString ();  TStreamerString dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerString. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerString.html:84,Load,Loading,84,doc/master/classTStreamerString.html,https://root.cern,https://root.cern/doc/master/classTStreamerString.html,1,['Load'],['Loading']
Performance,". ROOT: TString Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Static Private Member Functions |; Friends |; List of all members ; TString Class ReferenceCore ROOT classes » Base ROOT classes. ; Basic string class. ; Cannot be stored in a TCollection... use TObjString instead.; The underlying string is stored as a char* that can be accessed via TString::Data(). TString provides Short String Optimization (SSO) so that short strings (<15 on 64-bit and <11 on 32-bit) are contained in the TString internal data structure without the need for mallocing the required space.; Substring operations are provided by the TSubString class, which holds a reference to the original string and its data, along with the offset and length of the substring. To retrieve the substring as a TString, construct a TString from it, eg: root [0] TString s(""hello world""); root [1] TString s2( s(0,5) ); root [2] s2; (class TString)""hello""; hellostd::string hello(std::string who, std::string msg)Definition FunModule.C:5; TStringBasic string class.Definition TString.h:139. Definition at line 139 of file TString.h. Classes; struct  LongStr_t;  ; struct  RawStr_t;  ; struct  Rep_t;  ; struct  ShortStr_t;  ; union  UStr_t;  . Public Types; enum  ECaseCompare { kExact; , kIgnoreCase; };  ; enum  EStripType { kLeading = 0x1; , kTrailing = 0x2; , kBoth = 0x3; };  ; using size_type = Ssiz_t;  . Public Member Functions;  TString ();  TString default ctor. ;  ;  TString (char c);  Initialize a string with a single character. ;  ;  TString (char c, Ssiz_t s);  Initialize the first n locations of a TString with character c. ;  ;  TString (const char *s);  Create TString and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTString.html:76,Load,Loading,76,doc/master/classTString.html,https://root.cern,https://root.cern/doc/master/classTString.html,2,"['Load', 'Optimiz']","['Loading', 'Optimization']"
Performance,". ROOT: TString Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Static Private Member Functions |; Friends |; List of all members ; TString Class ReferenceCore ROOT classes » Base ROOT classes. ; Basic string class. ; Cannot be stored in a TCollection... use TObjString instead.; The underlying string is stored as a char* that can be accessed via TString::Data(). TString provides Short String Optimization (SSO) so that short strings (<15 on 64-bit and <11 on 32-bit) are contained in the TString internal data structure without the need for mallocing the required space.; Substring operations are provided by the TSubString class, which holds a reference to the original string and its data, along with the offset and length of the substring. To retrieve the substring as a TString, construct a TString from it, eg: root [0] TString s(""hello world""); root [1] TString s2( s(0,5) ); root [2] s2; (class TString)""hello""; hellostd::string hello(std::string who, std::string msg)Definition FunModule.C:5; TStringBasic string class.Definition TString.h:139. Definition at line 139 of file TString.h. Classes; struct  LongStr_t;  ; struct  RawStr_t;  ; struct  Rep_t;  ; struct  ShortStr_t;  ; union  UStr_t;  . Public Types; enum  ECaseCompare { kExact; , kIgnoreCase; };  ; enum  EStripType { kLeading = 0x1; , kTrailing = 0x2; , kBoth = 0x3; };  ; using size_type = Ssiz_t;  . Public Member Functions;  TString ();  TString default ctor. ;  ;  TString (char c);  Initialize a string with a single character. ;  ;  TString (char c, Ssiz_t s);  Initialize the first n locations of a TString with character c. ;  ;  TString (const char *s);  Create TString and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTString.html:75,Load,Loading,75,doc/v632/classTString.html,https://root.cern,https://root.cern/doc/v632/classTString.html,2,"['Load', 'Optimiz']","['Loading', 'Optimization']"
Performance,". ROOT: TStructNode Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TStructNode Class Reference. . Definition at line 34 of file TStructNode.h. Public Member Functions;  TStructNode (TString name, TString typeName, void *pointer, TStructNode *parent, ULong_t size, ENodeType type);  Constructs node with name ""name"" of class ""typeName"" and given parent ""parent"" which represents pointer ""pointer"". ;  ;  ~TStructNode () override;  Destructs list of nodes. ;  ; Int_t Compare (const TObject *obj) const override;  Overrided method. Compare to objects of TStructNode class. ;  ; ULong_t GetAllMembersCount () const;  Returns number of all members in node. ;  ; Float_t GetCenter () const;  Returns center of outlining box on x-axis. ;  ; Float_t GetHeight () const;  Returns height of outlining box. ;  ; UInt_t GetLevel () const;  Returns actual level of node. ;  ; UInt_t GetMaxLevel () const;  Returns maximum number of leves displayed when the node is top node on scene. ;  ; UInt_t GetMaxObjects () const;  Returns maximum number of objects displayed when the node is top node on scene. ;  ; TList * GetMembers () const;  Returns list with pointers to daughter nodes. ;  ; ULong_t GetMembersCount () const;  Returns numbers of members of node. ;  ; Float_t GetMiddle () const;  Returns center of outlining box on y-axis. ;  ; const char * GetName () const override;  Returns name of object. ;  ; ENodeType GetNodeType () const;  Returns type of node. ;  ; TStructNode * GetParent () const;  Returns pointer to parent node. ;  ; void * GetPointer () const;  Returns main pointer. ;  ; ULong_t GetRelativeMembersCount () const;  Returns relative numbers of members. ;  ; ULong_t GetRelativeSize () const;  Returns relative size of node. ;  ; ULong_t GetRelativeVolume () const;  Returns size o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStructNode.html:80,Load,Loading,80,doc/master/classTStructNode.html,https://root.cern,https://root.cern/doc/master/classTStructNode.html,1,['Load'],['Loading']
Performance,". ROOT: TStructNodeProperty Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStructNodeProperty Class Reference. . Definition at line 19 of file TStructNodeProperty.h. Public Member Functions;  TStructNodeProperty (const char *name, Int_t color);  Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""color"". ;  ;  TStructNodeProperty (const char *name, Pixel_t pixel);  Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""pixel"". ;  ;  ~TStructNodeProperty () override;  Destructor. ;  ; Int_t Compare (const TObject *obj) const override;  Overrided method. Compare two objects of TStructNodeProperty class. ;  ; TColor GetColor () const;  Returns color of class. ;  ; Pixel_t GetPixel () const;  Return color in Pixel_t format. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  Retruns true, because we have overrided method Compare. ;  ; void SetColor (const TColor &color);  Sets the color to ""color"". ;  ; void SetColor (Int_t color);  Sets the color to ""color"". ;  ; void SetColor (Pixel_t pixel);  Sets the color to ""pixel"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStructNodeProperty.html:88,Load,Loading,88,doc/master/classTStructNodeProperty.html,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html,1,['Load'],['Loading']
Performance,". ROOT: TStructViewer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TStructViewer Class Reference. . Definition at line 26 of file TStructViewer.h. Public Member Functions;  TStructViewer (void *ptr=nullptr, const char *clname=nullptr);  Default constructor. An argument ""ptr"" is a main pointer of type ""clname"", which should be shown in the viewer. ;  ;  ~TStructViewer () override;  Destructor. Clean all object after closing the viewer. ;  ; void Draw (Option_t *option="""") override;  Draw object if there is valid pointer. ;  ; TCanvas * GetCanvas ();  Returns canvas used to keep TGeoVolumes. ;  ; TColor GetColor (const char *typeName);  Returns color associated with type ""typeName"". ;  ; TGMainFrame * GetFrame ();  Returns pointer to main window. ;  ; TExMap GetLevelMembersCount () const;  Returns TExMap with pairs <level number, number of objects> ;  ; TExMap GetLevelSize () const;  Returns TExMap with pairs <level number, size of level in bytes> ;  ; Bool_t GetLinksVisibility () const;  Get visibility of links between objects. ;  ; void * GetPointer () const;  Return main pointer. ;  ; TClass * IsA () const override;  ; void SetColor (TString name, Int_t color);  Sets color for the class ""name"" to color ""color"". ;  ; void SetLinksVisibility (Bool_t val);  ISets links visibility. ;  ; void SetPointer (void *ptr, const char *clname=nullptr);  Set main pointer of class ""clname"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Us",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStructViewer.html:82,Load,Loading,82,doc/master/classTStructViewer.html,https://root.cern,https://root.cern/doc/master/classTStructViewer.html,1,['Load'],['Loading']
Performance,". ROOT: TStructViewerGUI Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TStructViewerGUI Class Reference. . Definition at line 37 of file TStructViewerGUI.h. Public Member Functions;  TStructViewerGUI (TStructViewer *parent, TStructNode *nodePtr, TList *colors, const TGWindow *p=nullptr, UInt_t w=800, UInt_t h=600);  Constructs window with ""w"" as width, ""h"" as height and given parent ""p"". ;  ;  ~TStructViewerGUI () override;  Destructor. ;  ; void AutoRefreshButtonSlot (Bool_t on);  Activated when user chage condition. ;  ; void BoxHeightValueSetSlot (Long_t h);  Emmited when user changes height of boxes. ;  ;  ClassDefOverride (TStructViewerGUI, 0);  ; void CloseWindow () override;  Delete window. ;  ; void ColorSelectedSlot (Pixel_t pixel);  Slot for default color selsect. ;  ; void DoubleClickedSlot ();  Activated when user double click on objects on 3D scene. ;  ; void Draw (Option_t *option="""") override;  Check limits and draws nodes and links. ;  ; TCanvas * GetCanvas ();  ; Int_t GetColor (TStructNode *node);  Returns color form fColors for given ""node"". ;  ; TStructNodeProperty * GetDefaultColor ();  Return default color for nodes. ;  ; Bool_t GetLinksVisibility () const;  Returns true if links are visible, otherwise return false. ;  ; TStructNode * GetNodePtr () const;  Returns top node pointer. ;  ; void GLWidgetProcessedEventSlot (Event_t *event);  Handle events. Sets fMouseX and fMouseY when user move a mouse over viewer and hides ToolTip. ;  ; void LevelDistValueSetSlot (Long_t dist);  Emmited when user changes distance between levels. ;  ; void MouseOverSlot (TGLPhysicalShape *shape);  MouseOver slot. ;  ; void RedoButtonSlot ();  Activated when user click Redo button. Repeat last Undo action. ;  ; void ResetButtonSlot ();  Resets camera. ;  ; void ScaleB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStructViewerGUI.html:85,Load,Loading,85,doc/master/classTStructViewerGUI.html,https://root.cern,https://root.cern/doc/master/classTStructViewerGUI.html,1,['Load'],['Loading']
Performance,". ROOT: TStyle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStyle Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; TStyle objects may be created to define special styles. ; By default ROOT creates a default style that can be accessed via the gStyle pointer.; This class includes functions to set some of the following object attributes.; Canvas; Pad; Histogram axis; Lines; Fill areas; Text; Markers; Functions; Histogram Statistics and Titles. All objects that can be drawn in a pad inherit from one or more attribute classes like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their default attributes are taken from the current style. The current style is an object of the classTStyle and can be referenced via the global variable gStyle (in TStyle.h).; ROOT provides two styles called ""Default"" and ""Plain"". The ""Default"" style is created simply by:; auto default = new TStyle(""Default"",""Default Style"");; TStyle::TStyleTStyle()Default constructor.Definition TStyle.cxx:145; The Plain style can be used if you are working on a monochrome display or if you want to get a ""conventional"" Postscript output. These are the instructions in the ROOT constructor to create the Plain style.; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");; ; plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; You can set the current style with:; gROOT->SetStyle(style_name);; gROOT#define gROOTDefinition TROOT.h:406; You can get a pointer to an existing style with:; auto style = gROOT->GetStyle(style_name);; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; You can create additional styles with:; TSty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle.html:75,Load,Loading,75,doc/master/classTStyle.html,https://root.cern,https://root.cern/doc/master/classTStyle.html,1,['Load'],['Loading']
Performance,". ROOT: TSynapse Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSynapse Class Reference. ; This is a simple weighted bidirectional connection between two neurons. ; A network is built connecting two neurons by a synapse. In addition to the value, the synapse can return the DeDw ; Definition at line 20 of file TSynapse.h. Public Member Functions;  TSynapse ();  Default constructor. ;  ;  TSynapse (TNeuron *, TNeuron *, Double_t w=1);  Constructor that connects two neurons. ;  ;  ~TSynapse () override;  ; Double_t GetDeDw () const;  Computes the derivative of the error wrt the synapse weight. ;  ; Double_t GetDEDw () const;  ; TNeuron * GetPost () const;  ; TNeuron * GetPre () const;  ; Double_t GetValue () const;  Returns the value: weighted input. ;  ; Double_t GetWeight () const;  ; TClass * IsA () const override;  ; void SetDEDw (Double_t in);  Sets the derivative of the total error wrt the synapse weight. ;  ; void SetPost (TNeuron *post);  Sets the post-neuron. ;  ; void SetPre (TNeuron *pre);  Sets the pre-neuron. ;  ; void SetWeight (Double_t w);  Sets the weight of the synapse. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSynapse.html:77,Load,Loading,77,doc/master/classTSynapse.html,https://root.cern,https://root.cern/doc/master/classTSynapse.html,1,['Load'],['Loading']
Performance,". ROOT: TSysEvtHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TSysEvtHandler Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; Abstract base class for handling system events. ; Definition at line 28 of file TSysEvtHandler.h. Public Member Functions;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Add ()=0;  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual Bool_t Notify () override=0;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual void Remove ()=0;  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSysEvtHandler.html:83,Load,Loading,83,doc/master/classTSysEvtHandler.html,https://root.cern,https://root.cern/doc/master/classTSysEvtHandler.html,1,['Load'],['Loading']
Performance,". ROOT: TSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TSystem Class ReferenceCore ROOT classes » Base ROOT classes. ; Abstract base class defining a generic interface to the underlying Operating System. ; This is not an ABC in the strict sense of the (C++) word. For every member function there is an implementation (often not more than a call to AbstractMethod() which prints a warning saying that the method should be overridden in a derived class), which allows a simple partial implementation for new OS'es. ; Definition at line 266 of file TSystem.h. Public Types; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:76,Load,Loading,76,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['Load'],['Loading']
Performance,". ROOT: TSystemDirectory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSystemDirectory Class ReferenceCore ROOT classes » Base ROOT classes. ; Describes an Operating System directory for the browser. ; Definition at line 32 of file TSystemDirectory.h. Public Member Functions;  TSystemDirectory ();  Create a system directory object. ;  ;  TSystemDirectory (const char *dirname, const char *path);  Create a system directory object. ;  ; virtual ~TSystemDirectory ();  Delete system directory object. ;  ; void Browse (TBrowser *b) override;  Browse OS system directories. ;  ; void Copy (const char *) override;  copy this file ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; void Delete () override;  delete this file ;  ; void Delete (Option_t *) override;  Delete this object. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *) const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; void Edit () override;  Invoke text editor on this file. ;  ; virtual TList * GetListOfFiles () const;  Returns a TList of TSystemFile objects representing the contents of the directory. ;  ; TClass * IsA () const override;  ; Bool_t IsDirectory (const char *=nullptr) const override;  Check if object is a directory. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void Move (const char *) override;  move this file ;  ; virtual void SetDirectory (const char *name);  Create a system directory object. ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; void SetName (const char *name) override; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemDirectory.html:85,Load,Loading,85,doc/master/classTSystemDirectory.html,https://root.cern,https://root.cern/doc/master/classTSystemDirectory.html,1,['Load'],['Loading']
Performance,". ROOT: TSystemFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSystemFile Class ReferenceCore ROOT classes » Base ROOT classes. ; A TSystemFile describes an operating system file. ; The information is used by the browser (see TBrowser). ; Definition at line 29 of file TSystemFile.h. Public Member Functions;  TSystemFile ();  TSystemFile default constructor. ;  ;  TSystemFile (const char *filename, const char *dirname);  TSystemFile normal constructor. ;  ; virtual ~TSystemFile ();  Delete TSystemFile object. ;  ; void Browse (TBrowser *b) override;  Execute default action for this system file (action is specified in the $HOME/.root.mimes or $ROOTSYS/etc/root.mimes file. ;  ; virtual void Copy (const char *to);  copy this file ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual void Delete ();  delete this file ;  ; void Delete (Option_t *) override;  Delete this object. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *) const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; void Dump () const override;  dump this file ;  ; virtual void Edit ();  Invoke text editor on this file. ;  ; const char * GetIconName () const override;  Returns mime type name of object. ;  ; void Inspect () const override;  inspect this file ;  ; TClass * IsA () const override;  ; virtual Bool_t IsDirectory (const char *dir=nullptr) const;  Check if object is a directory. ;  ; virtual void Move (const char *to);  move this file ;  ; virtual void Rename (const char *name);  rename this file ;  ; void SetDrawOption (Option_t *) override;  Set drawing option for object. ;  ; virtual void SetIconName (const char *name);  ; void SetName (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemFile.html:80,Load,Loading,80,doc/master/classTSystemFile.html,https://root.cern,https://root.cern/doc/master/classTSystemFile.html,1,['Load'],['Loading']
Performance,". ROOT: TTF Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Static Protected Attributes |; Friends |; List of all members ; TTF Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Interface to the freetype 2 library. ; Definition at line 53 of file TTF.h. Classes; class  TTGlyph;  TTF helper class containing glyphs description. More...;  . Public Member Functions;  TTF ();  ; virtual ~TTF ();  Cleanup TTF environment. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static Short_t CharToUnicode (UInt_t code);  Map char to unicode. Returns 0 in case no mapping exists. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void Cleanup ();  Cleanup. Is called by the gCleanupTTF destructor. ;  ; static void ComputeTrailingBlanksWidth (Int_t n);  Compute the trailing blanks width. ;  ; static const char * DeclFileName ();  ; static Int_t GetAscent ();  ; static const FT_BBox & GetBox ();  ; static TTGlyph * GetGlyphs ();  ; static Bool_t GetHinting ();  ; static Bool_t GetKerning ();  ; static Int_t GetNumGlyphs ();  ; static FT_Matrix * GetRotMatrix ();  ; static Bool_t GetSmoothing ();  ; static void GetTextAdvance (UInt_t &a, char *text);  Get advance (a) when text is horizontal. ;  ; static void GetTextExtent (UInt_t &w, UInt_t &h, char *text);  Get width (w) and height (h) when text is horizontal. ;  ; static void GetTextExtent (UInt_t &w, UInt_t &h, wchar_t *text);  Get width (w) and height (h) when text is horizontal. ;  ; static Int_t GetTrailingBlanksWidth ();  ; static Int_t GetWidth ();  ; static void Init ();  Initialise the TrueType fonts interface. ;  ; static Bool_t IsInitialized ();  ; static vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTF.html:72,Load,Loading,72,doc/master/classTTF.html,https://root.cern,https://root.cern/doc/master/classTTF.html,1,['Load'],['Loading']
Performance,". ROOT: TTRAP Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TTRAP Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; A general trapezoid. . The faces perpendicular to z are trapezia and their centres are not necessarily on a line parallel to the z axis. This shape has 14 parameters. name: name of the shape; title: shape's title; material: (see TMaterial); dz: half-length along the z axis; theta: polar angle of the line joining the centre of the face at -DZ to the centre of the one at +DZ; phi: azimuthal angle of the line joining the centre of the face at -DZ to the centre of the one at +DZ; h1: half-length along y of the face at -DZ; bl1: half-length along x of the side at -H1 in y of the face at -DZ in z; tl1: half-length along x of the side at +H1 in y of the face at -DZ in z; alpha1: angle with respect to the y axis from the centre of the side at -H1 in y to the centre of the side at +H1 in y of the face at -DZ in z; h2: half-length along y of the face at +DZ; bl2: half-length along x of the side at -H2 in y of the face at +DZ in z; tl2: half-length along x of the side at +H2 in y of the face at +DZ in z; alpha2: angle with respect to the y axis from the centre of the side at -H2 in y to the centre of the side at +H2 in y of the face at +DZ in z . Definition at line 33 of file TTRAP.h. Public Member Functions;  TTRAP ();  TRAP shape default constructor. ;  ;  TTRAP (const char *name, const char *title, const char *material, Float_t dz, Float_t theta, Float_t phi, Float_t h1, Float_t bl1, Float_t tl1, Float_t alpha1, Float_t h2, Float_t bl2, Float_t tl2, Float_t alpha2);  TRAP shape normal constructor. ;  ;  ~TTRAP () override;  TRAP shape default destructor. ;  ; virtual Float_t GetAlpha1 () const;  ; virtual Float_t GetAlpha2 () const;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRAP.html:74,Load,Loading,74,doc/master/classTTRAP.html,https://root.cern,https://root.cern/doc/master/classTTRAP.html,1,['Load'],['Loading']
Performance,". ROOT: TTRD1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TTRD1 Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; A trapezoid with the x dimension varying along z. . It has 7 parameters:. name: name of the shape; title: shape's title; material: (see TMaterial); dx1: half-length along x at the z surface positioned at -DZ; dx2: half-length along x at the z surface positioned at +DZ; dy: half-length along the y-axis; dz: half-length along the z-axis . Definition at line 28 of file TTRD1.h. Public Member Functions;  TTRD1 ();  TRD1 shape default constructor. ;  ;  TTRD1 (const char *name, const char *title, const char *material, Float_t dx1, Float_t dx2, Float_t dy, Float_t dz);  TRD1 shape normal constructor. ;  ;  ~TTRD1 () override;  TRD1 shape default destructor. ;  ; virtual Float_t GetDx2 () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBRIK;  TBRIK ();  BRIK shape default constructor. ;  ;  TBRIK (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz);  BRIK shape normal constructor. ;  ;  ~TBRIK () override;  BRIK shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a BRIK. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3D. ;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD1.html:74,Load,Loading,74,doc/master/classTTRD1.html,https://root.cern,https://root.cern/doc/master/classTTRD1.html,1,['Load'],['Loading']
Performance,". ROOT: TTRD2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TTRD2 Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; A trapezoid with both x and y dimensions varying along z. . It has 8 parameters:. name: name of the shape; title: shape's title; material: (see TMaterial); dx1: half-length along x at the z surface positioned at -DZ; dx2: half-length along x at the z surface positioned at +DZ; dy1: half-length along y at the z surface positioned at -DZ; dy2: half-length along y at the z surface positioned at +DZ; dz: half-length along the z-axis . Definition at line 29 of file TTRD2.h. Public Member Functions;  TTRD2 ();  TRD2 shape default constructor. ;  ;  TTRD2 (const char *name, const char *title, const char *material, Float_t dx1, Float_t dx2, Float_t dy1, Float_t dy2, Float_t dz);  TRD2 shape normal constructor. ;  ;  ~TTRD2 () override;  TRD2 shape default destructor. ;  ; Float_t GetDx2 () const;  ; Float_t GetDy2 () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBRIK;  TBRIK ();  BRIK shape default constructor. ;  ;  TBRIK (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz);  BRIK shape normal constructor. ;  ;  ~TBRIK () override;  BRIK shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a BRIK. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3D. ;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD2.html:74,Load,Loading,74,doc/master/classTTRD2.html,https://root.cern,https://root.cern/doc/master/classTTRD2.html,1,['Load'],['Loading']
Performance,". ROOT: TTUBE Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TTUBE Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; A tube. . It has 6 parameters:. name: name of the shape; title: shape's title; material: (see TMaterial); rmin: inside radius; rmax: outside radius; dz: half length in z . Definition at line 32 of file TTUBE.h. Public Member Functions;  TTUBE ();  TUBE shape default constructor. ;  ;  TTUBE (const char *name, const char *title, const char *material, Float_t rmax, Float_t dz);  TUBE shape ""simplified"" constructor. ;  ;  TTUBE (const char *name, const char *title, const char *material, Float_t rmin, Float_t rmax, Float_t dz, Float_t aspect=1);  TUBE shape normal constructor. ;  ;  ~TTUBE () override;  TUBE shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a TUBE. ;  ; virtual Float_t GetAspectRatio () const;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3d. ;  ; virtual Float_t GetDz () const;  ; virtual Int_t GetNdiv () const;  ; virtual Int_t GetNumberOfDivisions () const;  ; virtual Float_t GetRmax () const;  ; virtual Float_t GetRmin () const;  ; TClass * IsA () const override;  ; virtual void SetAspectRatio (Float_t factor=1);  ; virtual void SetNumberOfDivisions (Int_t ndiv);  Set number of divisions used to draw this tube. ;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void Streamer (TBuffer &) override;  Stream an object of class TTUBE. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *mat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTUBE.html:74,Load,Loading,74,doc/master/classTTUBE.html,https://root.cern,https://root.cern/doc/master/classTTUBE.html,1,['Load'],['Loading']
Performance,". ROOT: TTUBS Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TTUBS Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; A segment of a tube. . It has 8 parameters:. name: name of the shape; title: shape's title; material: (see TMaterial); rmin: inside radius; rmax: outside radius; dz: half length in z; phi1: starting angle of the segment; phi2: ending angle of the segment. NOTE: phi1 should be smaller than phi2. If this is not the case, the system adds 360 degrees to phi2. ; Definition at line 29 of file TTUBS.h. Public Member Functions;  TTUBS ();  TUBS shape default constructor. ;  ;  TTUBS (const char *name, const char *title, const char *material, Float_t rmax, Float_t dz, Float_t phi1, Float_t phi2);  TUBS shape ""simplified"" constructor. ;  ;  TTUBS (const char *name, const char *title, const char *material, Float_t rmin, Float_t rmax, Float_t dz, Float_t phi1, Float_t phi2);  TUBS shape normal constructor. ;  ;  ~TTUBS () override;  TUBS shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a TUBE. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3d. ;  ; virtual Float_t GetPhi1 () const;  ; virtual Float_t GetPhi2 () const;  ; TClass * IsA () const override;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void Streamer (TBuffer &) override;  Stream an object of class TTUBE. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTUBE;  TTUBE ();  TUBE shape default constructor. ;  ;  TTUBE (const char *name, const char *title, const char *material, Float_t rmax, Float_t dz);  TUBE shape ""simplified"" constructor. ;  ;  TTUBE (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTUBS.html:74,Load,Loading,74,doc/master/classTTUBS.html,https://root.cern,https://root.cern/doc/master/classTTUBS.html,1,['Load'],['Loading']
Performance,". ROOT: TTVLVContainer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; TTVLVContainer Class Reference. ; This class represent the list view container for the TreeView class. ; It is a TGLVContainer with item dragging capabilities for the TTVLVEntry objects inside. ; Definition at line 110 of file TTVLVContainer.h. Public Member Functions;  TTVLVContainer (const TGWindow *p, UInt_t w, UInt_t h, UInt_t options=kSunkenFrame);  TGLVContainer constructor. ;  ;  ~TTVLVContainer () override;  TGLVContainer destructor. ;  ; virtual void AddThisItem (TTVLVEntry *item);  ; const char * Cut ();  Return the cut entry. ;  ; void EmptyAll ();  Clear all names and aliases for expression type items. ;  ; const char * Ex ();  Return the expression on X. ;  ; TTVLVEntry * ExpressionItem (Int_t index);  Return the expression item at specific position. ;  ; TList * ExpressionList ();  Return the list of user-defined expressions. ;  ; const char * Ey ();  Return the expression on Y. ;  ; const char * Ez ();  Return the expression on Z. ;  ; TTreeViewer * GetViewer ();  ; bool HandleButton (Event_t *event) override;  Handle mouse button event in container. ;  ; bool HandleMotion (Event_t *event) override;  Handle mouse motion events. ;  ; void RemoveNonStatic ();  Remove all non-static items from the list view, except expressions. ;  ; const char * ScanList ();  Return the cut entry. ;  ; void SelectItem (const char *name);  Select an item. ;  ; void SetListView (TGListView *lv) override;  ; void SetViewer (TTreeViewer *viewer);  ;  Public Member Functions inherited from TGLVContainer;  TGLVContainer (const TGWindow *p, UInt_t w, UInt_t h, UInt_t options=kSunkenFrame, Pixel_t back=GetDefaultFrameBackground());  Create a list view container. ;  ;  TGLVContainer (TGCanvas *p, UInt_t options=kSunkenFrame, Pixel_t back=GetDefaultFrameBackgr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVContainer.html:83,Load,Loading,83,doc/master/classTTVLVContainer.html,https://root.cern,https://root.cern/doc/master/classTTVLVContainer.html,1,['Load'],['Loading']
Performance,". ROOT: TTVLVEntry Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TTVLVEntry Class Reference. ; This class represent entries that goes into the TreeViewer listview container. ; It subclasses TGLVEntry and adds two data members: the item true name and the alias. ; Definition at line 56 of file TTVLVContainer.h. Public Member Functions;  TTVLVEntry (const TGWindow *p, const TGPicture *bigpic, const TGPicture *smallpic, TGString *name, TGString **subnames, EListViewMode ViewMode);  TTVLVEntry constructor. ;  ;  ~TTVLVEntry () override;  TTVLVEntry destructor. ;  ; const char * ConvertAliases ();  Convert all aliases into true names. ;  ; void CopyItem (TTVLVEntry *dest);  Copy this item's name and alias to an other. ;  ; void Empty ();  Clear all names and alias. ;  ; const char * GetAlias ();  ; TTVLVContainer * GetContainer ();  ; TGItemContext * GetContext ();  ; const char * GetConvName ();  ; TGToolTip * GetTip ();  ; const char * GetTrueName ();  ; bool HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; bool HasAlias ();  Check if alias name is not empty. ;  ; bool IsCut ();  ; void PrependTilde ();  Prepend a ~ to item alias. ;  ; void SetAlias (const char *alias);  ; void SetCutType (bool type=false);  Set cut type. ;  ; void SetExpression (const char *name, const char *alias, bool cutType=false);  Set the true name, alias and type of the expression, then refresh it. ;  ; void SetItemName (const char *name);  Redraw this entry with new name. ;  ; void SetSmallPic (const TGPicture *spic);  Set small picture. ;  ; void SetToolTipText (const char *text, Long_t delayms=1000);  Set tool tip text associated with this item. ;  ; void SetTrueName (const char *name);  ;  Public Member Functions inherited from TGLVEntry;  TGLVEntry (const TGLVContainer *p, const TString &n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVEntry.html:79,Load,Loading,79,doc/master/classTTVLVEntry.html,https://root.cern,https://root.cern/doc/master/classTTVLVEntry.html,1,['Load'],['Loading']
Performance,". ROOT: TTVRecord Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TTVRecord Class Reference. ; I/O classes for TreeViewer session handling. ; Definition at line 29 of file TTVSession.h. Public Member Functions;  TTVRecord ();  Default constructor. ;  ;  ~TTVRecord () override;  Destructor. ;  ; void ExecuteUserCode ();  Execute user-defined code. ;  ; void FormFrom (TTreeViewer *tv);  Populate members from treeviewer tv. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetUserCode () const;  ; const char * GetX () const;  ; const char * GetY () const;  ; const char * GetZ () const;  ; bool HasUserCode () const;  ; TClass * IsA () const override;  ; bool MustExecuteCode () const;  ; void PlugIn (TTreeViewer *tv);  Change treeviewer status to this record. ;  ; void SaveSource (std::ofstream &out);  Save the TTVRecord in a C++ macro file. ;  ; void SetAutoexec (bool autoexec=true);  ; void SetCut (const char *cut="""", const char *cal=""-empty-"");  ; void SetName (const char *name="""");  ; void SetOption (const char *option="""");  ; void SetRC (bool redirect=false, bool cut=true);  ; void SetUserCode (const char *code, bool autoexec=true);  ; void SetX (const char *x="""", const char *xal=""-empty-"");  ; void SetY (const char *y="""", const char *yal=""-empty-"");  ; void SetZ (const char *z="""", const char *zal=""-empty-"");  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVRecord.html:78,Load,Loading,78,doc/master/classTTVRecord.html,https://root.cern,https://root.cern/doc/master/classTTVRecord.html,1,['Load'],['Loading']
Performance,". ROOT: TTVSession Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TTVSession Class Reference. ; I/O classes for TreeViewer session handling. ; Definition at line 75 of file TTVSession.h. Public Member Functions;  TTVSession (TTreeViewer *tv);  Constructor. ;  ;  ~TTVSession () override;  Destructor. ;  ; TTVRecord * AddRecord (bool fromFile=false);  Add a record. ;  ; TTVRecord * First ();  ; TTVRecord * GetCurrent ();  ; Int_t GetEntries ();  ; const char * GetName () const override;  Returns name of object. ;  ; TTVRecord * GetRecord (Int_t i);  Return record at index i. ;  ; TClass * IsA () const override;  ; TTVRecord * Last ();  ; TTVRecord * Next ();  ; TTVRecord * Previous ();  ; void RemoveLastRecord ();  Remove current record from list. ;  ; void SaveSource (std::ofstream &out);  Save the TTVSession in a C++ macro file. ;  ; void SetName (const char *name);  ; void SetRecordName (const char *name);  Set record name. ;  ; void Show (TTVRecord *rec);  Display record rec. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateRecord (const char *name);  Updates current record according to new X, Y, Z settings. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVSession.html:79,Load,Loading,79,doc/master/classTTVSession.html,https://root.cern,https://root.cern/doc/master/classTTVSession.html,1,['Load'],['Loading']
Performance,". ROOT: TTabCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TTabCom Class Reference. . Definition at line 52 of file TTabCom.h. Public Types; enum  { kDebug = 17; };  ; enum  EContext_t { ;   kUNKNOWN_CONTEXT =-1; , kSYS_UserName; , kSYS_EnvVar; , kCINT_stdout; , ;   kCINT_stderr; , kCINT_stdin; , kCINT_Edit; , kCINT_Load; , ;   kCINT_Exec; , kCINT_EXec; , kCINT_pragma; , kCINT_includeSYS; , ;   kCINT_includePWD; , kCINT_cpp; , kROOT_Load; , kSYS_FileName; , ;   kCXX_NewProto; , kCXX_ConstructorProto; , kCXX_ScopeProto; , kCXX_DirectProto; , ;   kCXX_IndirectProto; , kCXX_ScopeMember; , kCXX_DirectMember; , kCXX_IndirectMember; , ;   kCXX_Global; , kCXX_GlobalProto; , kNUM_PAT. };  ; typedef TList TContainer;  ; typedef TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of envir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:76,Load,Loading,76,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,1,['Load'],['Loading']
Performance,". ROOT: TTask Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TTask Class ReferenceCore ROOT classes » Base ROOT classes. ; Legacy Code TTask is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TTask might still be a valid solution. ; TTask is a base class that can be used to build a complex tree of Tasks. Each TTask derived class may contain other TTasks that can be executed recursively, such that a complex program can be dynamically built and executed by invoking the services of the top level Task or one of its subtasks.; Use the TTask::Add function to add a subtask to an existing TTask. To execute a TTask, one calls the ExecuteTask function. ExecuteTask will call recursively:. the TTask::Exec function of the derived class; TTask::ExecuteTasks to execute for each task the list of its subtasks. If the top level task (see example below) is added to the list of Root browsable objects, the tree of tasks can be visualized by the Root browser. The browser can be used to start a task, set break points at the beginning of a task or when the task has completed. At a breakpoint, data structures generated by the execution up this point may be inspected asynchronously and then the execution can be resumed by selecting the ""Continue"" function of a task.; A Task may be active or inactive (controlled by TTask::SetActive). When a task is not active, its sub tasks are not executed.; A TTask tree may be made persistent, saving the status of all the tasks.; The Root browser's picture below has been generated by executing the following script: {; TTask *aliroot = new TTask(""aliroot"",""ALICE reconstruction main task"");; TTask *geominit = new TTask(""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTask.html:74,Load,Loading,74,doc/master/classTTask.html,https://root.cern,https://root.cern/doc/master/classTTask.html,1,['Load'],['Loading']
Performance,". ROOT: TTeXDump Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TTeXDump Class ReferenceGraphics » 2D Graphics » Graphics file output. ; Interface to TeX. ; This class allow to generate PGF/TikZ vector graphics output which can be included in TeX and LaTeX documents.; PGF is a TeX macro package for generating graphics. It is platform and format-independent and works together with the most important TeX backend drivers, including pdftex and dvips. It comes with a user-friendly syntax layer called TikZ.; To generate a such file it is enough to do: gStyle->SetPaperSize(10.,10.);; hpx->Draw();; gPad->Print(""hpx.tex"");; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; gPad#define gPadDefinition TVirtualPad.h:308; TStyle::SetPaperSizevoid SetPaperSize(EPaperSize size)Set paper size for PostScript output.Definition TStyle.cxx:1704; Then, the generated file (hpx.tex) can be included in a LaTeX document (simple.tex) in the following way: \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}; TTeXDumpInterface to TeX.Definition TTeXDump.h:20; Rcpp::asTString as(SEXP s)Definition RExports.h:86; TMVA_SOFIE_GNN.endendDefinition TMVA_SOFIE_GNN.py:207; Note the three directives needed at the top of the LaTeX file: \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; Then including the picture in the document is done with the \input directive.; The command pdflatex simple.tex will generate the corresponding pdf file simple.pdf. ; Definition at line 20 of file TTeXDump.h. Public Member Functions;  TTeXDump ();  Default TeX constructor. ;  ;  TTeXDump (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTeXDump.html:77,Load,Loading,77,doc/master/classTTeXDump.html,https://root.cern,https://root.cern/doc/master/classTTeXDump.html,1,['Load'],['Loading']
Performance,". ROOT: TTermInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TTermInputHandler Class Reference. . Definition at line 121 of file TRint.cxx. Public Member Functions;  TTermInputHandler (Int_t fd);  ; Bool_t Notify () override;  Notify implementation. Call the application interupt handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTermInputHandler.html:86,Load,Loading,86,doc/master/classTTermInputHandler.html,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html,1,['Load'],['Loading']
Performance,". ROOT: TText Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TText Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Base class for several text objects. ; See TAttText for a list of text attributes or fonts, and also for a discussion on text speed and font quality.; By default, the text is drawn in the pad coordinates system. One can draw in NDC coordinates [0,1] if the function SetNDC is called for a TText object.; Example:; {; TText *t = new TText(.5,.5,""Hello World !"");; t->SetTextAlign(22);; t->SetTextColor(kRed+2);; t->SetTextFont(43);; t->SetTextSize(40);; t->SetTextAngle(45);; t->Draw();; }; kRed@ kRedDefinition Rtypes.h:66; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextAnglevirtual void SetTextAngle(Float_t tangle=0)Set the text angle.Definition TAttText.h:43; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TTextBase class for several text objects.Definition TText.h:22; TText::TTextTText()Definition TText.h:35. Definition at line 22 of file TText.h. Public Types; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTText.html:74,Load,Loading,74,doc/master/classTText.html,https://root.cern,https://root.cern/doc/master/classTText.html,1,['Load'],['Loading']
Performance,". ROOT: TThread Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TThread Class Reference. ; Legacy Code TThread is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TThread might still be a valid solution. ; This class implements threads. A thread is an execution environment much lighter than a process. A single process can have multiple threads. The actual work is done via the TThreadImp class (either TPosixThread or TWin32Thread). ; Definition at line 40 of file TThread.h. Public Types; enum  EPriority { kLowPriority; , kNormalPriority; , kHighPriority; };  ; enum  EState { ;   kInvalidState; , kNewState; , kRunningState; , kTerminatedState; , ;   kFinishedState; , kCancelingState; , kCanceledState; , kDeletingState. };  ; typedef void(* VoidFunc_t) (void *);  ; typedef void *(* VoidRtnFunc_t) (void *);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TThread (const char *thname, VoidFunc_t fn, void *arg=nullptr, EPriority pri=kNormalPrior",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThread.html:76,Load,Loading,76,doc/master/classTThread.html,https://root.cern,https://root.cern/doc/master/classTThread.html,1,['Load'],['Loading']
Performance,". ROOT: TThreadFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TThreadFactory Class Referenceabstract. . Definition at line 32 of file TThreadFactory.h. Public Member Functions;  TThreadFactory (const char *name=""Unknown"", const char *title=""Unknown Thread Factory"");  TThreadFactory ctor only called by derived classes. ;  ; virtual ~TThreadFactory ();  ; virtual TConditionImp * CreateConditionImp (TMutexImp *m)=0;  ; virtual TMutexImp * CreateMutexImp (Bool_t recursive)=0;  ; virtual TThreadImp * CreateThreadImp ()=0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadFactory.html:83,Load,Loading,83,doc/master/classTThreadFactory.html,https://root.cern,https://root.cern/doc/master/classTThreadFactory.html,1,['Load'],['Loading']
Performance,". ROOT: TThreadImp Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TThreadImp Class Referenceabstract. . Definition at line 31 of file TThreadImp.h. Public Member Functions;  TThreadImp ();  ; virtual ~TThreadImp ();  ; virtual Int_t CancelPoint ()=0;  ; virtual Int_t CleanUp (void **main)=0;  ; virtual Int_t CleanUpPop (void **main, Int_t exe)=0;  ; virtual Int_t CleanUpPush (void **main, void *free, void *arg)=0;  ; virtual Int_t Exit (void *ret)=0;  ; TClass * IsA () const override;  ; virtual Int_t Join (TThread *th, void **ret)=0;  ; virtual Int_t Kill (TThread *th)=0;  ; virtual Int_t Run (TThread *th, const int affinity=-1)=0;  ; virtual Long_t SelfId ()=0;  ; virtual Int_t SetCancelAsynchronous ()=0;  ; virtual Int_t SetCancelDeferred ()=0;  ; virtual Int_t SetCancelOff ()=0;  ; virtual Int_t SetCancelOn ()=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadImp.html:79,Load,Loading,79,doc/master/classTThreadImp.html,https://root.cern,https://root.cern/doc/master/classTThreadImp.html,1,['Load'],['Loading']
Performance,". ROOT: TThreadTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TThreadTimer Class Reference. . Definition at line 203 of file TThread.h. Public Member Functions;  TThreadTimer (Long_t ms=kItimerResolution+10);  Create thread timer. ;  ; Bool_t Notify () override;  Periodically execute the TThread::XAction() method in the main thread. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadTimer.html:81,Load,Loading,81,doc/master/classTThreadTimer.html,https://root.cern,https://root.cern/doc/master/classTThreadTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TTime Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Friends |; List of all members ; TTime Class ReferenceCore ROOT classes » Base ROOT classes. ; Basic time type with millisecond precision. ; Definition at line 27 of file TTime.h. Public Member Functions;  TTime ();  ;  TTime (const TTime &t);  ;  TTime (Long64_t msec);  ; virtual ~TTime ();  ; const char * AsString () const;  Return the time as a string. ;  ; virtual TClass * IsA () const;  ;  operator long () const;  ;  operator long long () const;  ;  operator unsigned long () const;  ;  operator unsigned long long () const;  ; TTime operator*= (const TTime &t);  ; TTime operator+= (const TTime &t);  ; TTime operator-= (const TTime &t);  ; TTime operator/= (const TTime &t);  ; TTime & operator= (const TTime &t);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Attributes; Long64_t fMilliSec;  . Friends; Bool_t operator!= (const TTime &t1, const TTime &t2);  ; TTime operator* (const TTime &t1, const TTime &t2);  ; TTime operator+ (const TTime &t1, const TTime &t2);  ; TTime operator- (const TTime &t1, const TTime &t2);  ; TTime operator/ (const TTime &t1, const TTime &t2);  ; Bool_t operator< (const TTime &t1, const TTime &t2);  ; Bool_t operator<= (const TTime &t1, const TTime &t2);  ; Bool_t operator== (const TTime &t1, const TTime &t2);  ; Bool_t operator> (const TTime &t1, const TTime &t2);  ; Bool_t operator>= (const TTime &t1, const TTime &t2);  . #include <TTime.h>; Constructor & Destructor Documentation. ◆ TTime() [1/3]. TTime::TTime ; (; ). inline . Definition at line 33 of file TTime.h. ◆ TTime",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTime.html:74,Load,Loading,74,doc/master/classTTime.html,https://root.cern,https://root.cern/doc/master/classTTime.html,1,['Load'],['Loading']
Performance,". ROOT: TTimeOutTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TTimeOutTimer Class Reference. . Definition at line 76 of file TMonitor.cxx. Public Member Functions;  TTimeOutTimer (TMonitor *m, Long_t ms);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTimeOutTimer.html:82,Load,Loading,82,doc/master/classTTimeOutTimer.html,https://root.cern,https://root.cern/doc/master/classTTimeOutTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TTimer Class ReferenceCore ROOT classes » Base ROOT classes. ; Handles synchronous and a-synchronous timer events. . synchronous timer is registered into TSystem and is processed within the standard ROOT event-loop.; asynchronous timer is passed to the operating system which sends an external signal to ROOT and thus interrupts its event-loop. You can use this class in one of the following ways:; Sub-class TTimer and override the Notify() method.; Re-implement the TObject::HandleTimer() method in your class and pass a pointer to this object to timer, see the SetObject() method.; Pass an interpreter command to timer, see SetCommand() method.; Create a TTimer, connect its Timeout() signal to the appropriate methods. Then when the time is up it will emit a Timeout() signal and call connected slots. Minimum timeout interval is defined in TSystem::ESysConstants as kItimerResolution (currently 10 ms).; Signal/slots example: TTimer *timer = new TTimer();; timer->Connect(""Timeout()"", ""myObjectClassName"",; myObject, ""TimerDone()"");; timer->Start(2000, kTRUE); // 2 seconds single-shot; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; TQObject::ConnectBool_t Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)Non-static method is used to connect from the signal of this object to the receiver slot.Definition TQObject.cxx:869; TTimerHandles synchronous and a-synchronous timer events.Definition TTimer.h:51; TTimer::Startvirtual void Start(Long_t milliSec=-1, Bool_t singleShot=kFALSE)Starts the timer with a milliSec timeout.Definition TTimer.cxx:213; To emit the Timeout signal repeatedly with minimum timeout: timer->Start(0, kFALSE);; kFALSEconstexpr Bool_t kFALSEDefinition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTimer.html:75,Load,Loading,75,doc/master/classTTimer.html,https://root.cern,https://root.cern/doc/master/classTTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TTipDelayTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TTipDelayTimer Class Reference. . Definition at line 56 of file TGToolTip.cxx. Public Member Functions;  TTipDelayTimer (TGToolTip *tip, Long_t ms);  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTipDelayTimer.html:83,Load,Loading,83,doc/master/classTTipDelayTimer.html,https://root.cern,https://root.cern/doc/master/classTTipDelayTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TToggle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; TToggle Class Reference. ; This class defines toggling facility for both - object's method or variables. ; Assume that user provides an object with a two-state field , and methods to Get/Set value of this field. This object enables to switch values via this method when the only thing you know about the field is the name of the method (or method itself) which sets the field. This facility is required in context Pop-Up menu, when the only information about how to toggle a field is a name of methhod which sets it. This class may be also used for toggling an integer variable, which may be important while building universal objects... When user provides a ""set-method"" of name SetXXX this object tries automaticaly find a matching ""get-method"" by lookin for a method with name GetXXX, IsXXX or HasXXX for given object. ; Definition at line 47 of file TToggle.h. Public Member Functions;  TToggle ();  TToggle default constructor. ;  ; TMethodCall * GetGetter () const;  ; virtual Long_t GetOffValue ();  ; virtual Long_t GetOnValue ();  ; TMethodCall * GetSetter () const;  ; virtual Bool_t GetState ();  Returns the state of Toggle according to its current value and fOnValue, returns true if they match. ;  ; virtual Int_t GetValue ();  ; TClass * IsA () const override;  ; virtual Bool_t IsInitialized ();  ; virtual void SetOffValue (Long_t lof);  ; virtual void SetOnValue (Long_t lon);  ; virtual void SetState (Bool_t state);  Sets the value of toggle to fOnValue or fOffValue according to passed argument. ;  ; virtual void SetToggledObject (TObject *obj, TMethod *anymethod);  Initializes it to toggle an object's datamember using this object's method. ;  ; virtual void SetToggledVariable (Int_t &var);  Initializes object",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTToggle.html:76,Load,Loading,76,doc/master/classTToggle.html,https://root.cern,https://root.cern/doc/master/classTToggle.html,1,['Load'],['Loading']
Performance,". ROOT: TToggleGroup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TToggleGroup Class Reference. ; This class defines check-box facility for TToggle objects It is used in context menu ""selectors"" for picking up a value. ; Definition at line 30 of file TToggleGroup.h. Public Member Functions;  TToggleGroup ();  Constructor. ;  ;  TToggleGroup (const TToggleGroup &);  Copy constructor. ;  ; virtual ~TToggleGroup ();  Deletes togglegroup but does not disposes toggled objects! ;  ; virtual Int_t Add (TToggle *t, Bool_t select=1);  Add a new toggle. ;  ; virtual TToggle * At (Int_t idx);  ; virtual void DeleteAll ();  Disposes of all objects and clears array. ;  ; virtual TToggle * First ();  ; virtual Int_t GetTogglesCount ();  ; virtual Int_t IndexOf (TToggle *t);  ; virtual Int_t InsertAt (TToggle *t, Int_t pos, Bool_t select=1);  Add a new toggle at a specific position. ;  ; TClass * IsA () const override;  ; virtual TToggle * Last ();  ; TToggleGroup & operator= (const TToggleGroup &);  Assignment operator. ;  ; virtual void Remove (Int_t pos);  ; virtual void Remove (TToggle *t);  ; virtual void Select (Int_t idx);  Select a toggle. ;  ; virtual void Select (TToggle *t);  Selector a toggle. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTToggleGroup.html:81,Load,Loading,81,doc/master/classTToggleGroup.html,https://root.cern,https://root.cern/doc/master/classTToggleGroup.html,1,['Load'],['Loading']
Performance,". ROOT: TTree Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TTree Class ReferenceTree Library. ; A TTree represents a columnar dataset. ; Any C++ type can be stored in its columns.; A TTree, often called in jargon tree, consists of a list of independent columns or branches, represented by the TBranch class. Behind each branch, buffers are allocated automatically by ROOT. Such buffers are automatically written to disk or kept in memory until the size stored in the attribute fMaxVirtualSize is reached. Variables of one branch are written to the same buffer. A branch buffer is automatically compressed if the file compression attribute is set (default). Branches may be written to different files (see TBranch::SetFile).; The ROOT user can decide to make one single branch and serialize one object into one single I/O buffer or to make several branches. Making several branches is particularly interesting in the data analysis phase, when it is desirable to have a high reading rate and not all columns are equally interesting. Create a TTree to store columnar data. Construct a TTree; Add a column of Fundamental Types and Arrays thereof; Add a column of a STL Collection instances; Add a column holding an object; Add a column holding a TObjectArray; Fill the tree; Add a column to an already existing Tree; An Example. Construct a TTree; TTree tree(name, title); namechar name[80]Definition TGX11.cxx:110; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; Creates a Tree with name and title.; Various kinds of branches can be added to a tree:; Variables representing fundamental type",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree.html:74,Load,Loading,74,doc/master/classTTree.html,https://root.cern,https://root.cern/doc/master/classTTree.html,1,['Load'],['Loading']
Performance,". ROOT: TTree Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TTree Class ReferenceTree Library. ; A TTree represents a columnar dataset. ; Any C++ type can be stored in its columns.; A TTree, often called in jargon tree, consists of a list of independent columns or branches, represented by the TBranch class. Behind each branch, buffers are allocated automatically by ROOT. Such buffers are automatically written to disk or kept in memory until the size stored in the attribute fMaxVirtualSize is reached. Variables of one branch are written to the same buffer. A branch buffer is automatically compressed if the file compression attribute is set (default). Branches may be written to different files (see TBranch::SetFile).; The ROOT user can decide to make one single branch and serialize one object into one single I/O buffer or to make several branches. Making several branches is particularly interesting in the data analysis phase, when it is desirable to have a high reading rate and not all columns are equally interesting. Create a TTree to store columnar data. Construct a TTree; Add a column of Fundamental Types and Arrays thereof; Add a column of a STL Collection instances; Add a column holding an object; Add a column holding a TObjectArray; Fill the tree; Add a column to an already existing Tree; An Example. Construct a TTree; TTree tree(name, title); namechar name[80]Definition TGX11.cxx:110; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; Creates a Tree with name and title.; Various kinds of branches can be added to a tree:; Variables representing fundamental types",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:73,Load,Loading,73,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,1,['Load'],['Loading']
Performance,". ROOT: TTree::TClusterIterator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TTree::TClusterIterator Class Reference. ; Helper class to iterate over cluster of baskets. ; Definition at line 269 of file TTree.h. Public Member Functions; Long64_t GetNextEntry ();  ; Long64_t GetStartEntry ();  ; Long64_t Next ();  Move on to the next cluster and return the starting entry of this next cluster. ;  ; Long64_t operator() ();  ; Long64_t Previous ();  Move on to the previous cluster and return the starting entry of this previous cluster. ;  . Protected Member Functions;  TClusterIterator (TTree *tree, Long64_t firstEntry);  Regular constructor. ;  . Private Member Functions; Long64_t GetEstimatedClusterSize ();  Estimate the cluster size. ;  . Private Attributes; Int_t fClusterRange;  ; Long64_t fEstimatedSize;  ; Long64_t fNextEntry;  ; Long64_t fStartEntry;  ; TTree * fTree;  . Friends; class TTree;  . #include <TTree.h>; Constructor & Destructor Documentation. ◆ TClusterIterator(). TTree::TClusterIterator::TClusterIterator ; (; TTree * ; tree, . Long64_t ; firstEntry . ). protected . Regular constructor. ; TTree is not set as const, since we might modify if it is a TChain. ; Definition at line 560 of file TTree.cxx. Member Function Documentation. ◆ GetEstimatedClusterSize(). Long64_t TTree::TClusterIterator::GetEstimatedClusterSize ; (; ). private . Estimate the cluster size. ; In almost all cases, this quickly returns the size of the auto-flush in the TTree.; However, in the case where the cluster size was not fixed (old files and case where autoflush was explicitly set to zero), we need estimate a cluster size in relation to the size of the cache.; After this value is calculated once for the TClusterIterator, it is cached and reused in future calls. ; Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree_1_1TClusterIterator.html:92,Load,Loading,92,doc/master/classTTree_1_1TClusterIterator.html,https://root.cern,https://root.cern/doc/master/classTTree_1_1TClusterIterator.html,1,['Load'],['Loading']
Performance,". ROOT: TTree::TFriendLock Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TTree::TFriendLock Class Reference. ; Helper class to prevent infinite recursion in the usage of TTree Friends. ; Definition at line 188 of file TTree.h. Public Member Functions;  TFriendLock (TTree *tree, UInt_t methodbit);  Record in tree that it has been used while recursively looks through the friends. ;  ;  ~TFriendLock ();  Restore the state of tree the same as before we set the lock. ;  . Protected Member Functions;  TFriendLock (const TFriendLock &);  Copy constructor. ;  ; TFriendLock & operator= (const TFriendLock &);  Assignment operator. ;  . Private Attributes; UInt_t fMethodBit;  ; bool fPrevious;  ; TTree * fTree;  . #include <TTree.h>; Constructor & Destructor Documentation. ◆ TFriendLock() [1/2]. TTree::TFriendLock::TFriendLock ; (; const TFriendLock & ; tfl). protected . Copy constructor. ; Definition at line 520 of file TTree.cxx. ◆ TFriendLock() [2/2]. TTree::TFriendLock::TFriendLock ; (; TTree * ; tree, . UInt_t ; methodbit . ). Record in tree that it has been used while recursively looks through the friends. ; Definition at line 503 of file TTree.cxx. ◆ ~TFriendLock(). TTree::TFriendLock::~TFriendLock ; (; ). Restore the state of tree the same as before we set the lock. ; Definition at line 543 of file TTree.cxx. Member Function Documentation. ◆ operator=(). TTree::TFriendLock & TTree::TFriendLock::operator= ; (; const TFriendLock & ; tfl). protected . Assignment operator. ; Definition at line 530 of file TTree.cxx. Member Data Documentation. ◆ fMethodBit. UInt_t TTree::TFriendLock::fMethodBit. private . Definition at line 192 of file TTree.h. ◆ fPrevious. bool TTree::TFriendLock::fPrevious. private . Definition at line 193 of file TTree.h. ◆ fTree. TTree* TTree::TFriendLock::fTree. private . Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree_1_1TFriendLock.html:87,Load,Loading,87,doc/master/classTTree_1_1TFriendLock.html,https://root.cern,https://root.cern/doc/master/classTTree_1_1TFriendLock.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeCache Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; TTreeCache Class ReferenceTree Library. ; A cache to speed-up the reading of ROOT datasets. . A cache to speed-up the reading of ROOT datasets. Table of Contents. Motivation; General Description; Changes in behaviour; Self-optimization; Examples of usage; Check performance and stats. Motivation: why having a cache is needed?; When writing a TTree, the branch buffers are kept in memory. A typical branch buffersize (before compression) is typically 32 KBytes. After compression, the zipped buffer may be just a few Kbytes. The branch buffers cannot be much larger in case of TTrees with several hundred or thousand branches.; When writing, this does not generate a performance problem because branch buffers are always written sequentially and, thanks to OS optimisations, content is flushed to the output file when a few MBytes of data are available. On the other hand, when reading, one may hit performance problems because of latencies e.g imposed by network. For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each with no cache will imply 10s penalty where a local read of the 10 MBytes would take about 1 second.; The TreeCache tries to prefetch all the buffers for the selected branches in order to transfer a few multi-Megabytes large buffers instead of many multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to be read in increasing order such that the file is read sequentially.; Systems like xrootd, dCache or httpd take advantage of the TTreeCache in reading ahead as much data as they can and return to the application the maximum data specified in the cache and have the next chunk of data ready when the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeCache.html:79,Load,Loading,79,doc/master/classTTreeCache.html,https://root.cern,https://root.cern/doc/master/classTTreeCache.html,6,"['Load', 'cache', 'optimiz', 'perform']","['Loading', 'cache', 'optimization', 'performance']"
Performance,". ROOT: TTreeCache Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; TTreeCache Class ReferenceTree Library. ; A cache to speed-up the reading of ROOT datasets. . A cache to speed-up the reading of ROOT datasets. Table of Contents. Motivation; General Description; Changes in behaviour; Self-optimization; Examples of usage; Check performance and stats. Motivation: why having a cache is needed?; When writing a TTree, the branch buffers are kept in memory. A typical branch buffersize (before compression) is typically 32 KBytes. After compression, the zipped buffer may be just a few Kbytes. The branch buffers cannot be much larger in case of TTrees with several hundred or thousand branches.; When writing, this does not generate a performance problem because branch buffers are always written sequentially and, thanks to OS optimisations, content is flushed to the output file when a few MBytes of data are available. On the other hand, when reading, one may hit performance problems because of latencies e.g imposed by network. For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each with no cache will imply 10s penalty where a local read of the 10 MBytes would take about 1 second.; The TreeCache tries to prefetch all the buffers for the selected branches in order to transfer a few multi-Megabytes large buffers instead of many multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to be read in increasing order such that the file is read sequentially.; Systems like xrootd, dCache or httpd take advantage of the TTreeCache in reading ahead as much data as they can and return to the application the maximum data specified in the cache and have the next chunk of data ready when the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCache.html:78,Load,Loading,78,doc/v632/classTTreeCache.html,https://root.cern,https://root.cern/doc/v632/classTTreeCache.html,6,"['Load', 'cache', 'optimiz', 'perform']","['Loading', 'cache', 'optimization', 'performance']"
Performance,". ROOT: TTreeCacheUnzip Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TTreeCacheUnzip Class ReferenceTree Library. ; A TTreeCache which exploits parallelized decompression of its own content. ; Definition at line 35 of file TTreeCacheUnzip.h. Classes; struct  UnzipState;  . Public Types; enum  EParUnzipMode { kEnable; , kDisable; , kForce; };  ; enum  EUnzipState { kUntouched; , kProgress; , kFinished; };  ;  Public Types inherited from TTreeCache; enum  EPrefillType { kNoPrefill; , kAllBranches; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeCacheUnzip ();  ;  TTreeCacheUnzip (TTree *tree, Int_t buffersize=0);  Constructor. ;  ;  ~TTreeCacheUnzip () override;  Destructor. (in general called by the TFile destructor) ;  ; Int_t AddBranch (const char *branch, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket Returns: ;  ; Int_t AddBranch (TBranch *b, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this functi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeCacheUnzip.html:84,Load,Loading,84,doc/master/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/master/classTTreeCacheUnzip.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeCacheUnzip Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TTreeCacheUnzip Class ReferenceTree Library. ; A TTreeCache which exploits parallelized decompression of its own content. ; Definition at line 35 of file TTreeCacheUnzip.h. Classes; struct  UnzipState;  . Public Types; enum  EParUnzipMode { kEnable; , kDisable; , kForce; };  ; enum  EUnzipState { kUntouched; , kProgress; , kFinished; };  ;  Public Types inherited from TTreeCache; enum  EPrefillType { kNoPrefill; , kAllBranches; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeCacheUnzip ();  ;  TTreeCacheUnzip (TTree *tree, Int_t buffersize=0);  Constructor. ;  ;  ~TTreeCacheUnzip () override;  Destructor. (in general called by the TFile destructor) ;  ; Int_t AddBranch (const char *branch, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket Returns: ;  ; Int_t AddBranch (TBranch *b, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCacheUnzip.html:83,Load,Loading,83,doc/v632/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/v632/classTTreeCacheUnzip.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeCloner Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TTreeCloner Class ReferenceTree Library. ; Class implementing or helping the various TTree cloning method. ; Definition at line 31 of file TTreeCloner.h. Classes; class  CompareEntry;  ; class  CompareSeek;  . Public Types; enum  EClonerOptions { kNone = 0; , kNoWarnings = BIT(1); , kIgnoreMissingTopLevel = BIT(2); , kNoFileCache = BIT(3); };  . Public Member Functions;  TTreeCloner (TTree *from, TDirectory *newdirectory, Option_t *method, UInt_t options=kNone);  Constructor. In place cloning. ;  ;  TTreeCloner (TTree *from, TTree *to, Option_t *method, UInt_t options=kNone);  Constructor. ;  ; virtual ~TTreeCloner ();  TTreeCloner destructor. ;  ;  ClassDef (TTreeCloner, 0);  ; void CloseOutWriteBaskets ();  Before we can start adding new basket, we need to flush to disk the partially filled baskets (the WriteBasket) ;  ; void CollectBaskets ();  Collect the information about the on-file basket that need to be copied. ;  ; UInt_t CollectBranches ();  Fill the array of branches, matching the branches of the 'from' and 'to' TTrees Returns the total number of baskets in all the branches. ;  ; UInt_t CollectBranches (TBranch *from, TBranch *to);  Fill the array of branches, adding the branch 'from' and 'to', and matching the sub-branches of the 'from' and 'to' branches. ;  ; UInt_t CollectBranches (TObjArray *from, TObjArray *to);  Fill the array of branches, matching the branches of the 'from' and 'to' arrays. ;  ; void CopyMemoryBaskets ();  Transfer the basket from the input file to the output file. ;  ; void CopyProcessIds ();  Make sure that all the needed TStreamerInfo are present in the output file. ;  ; void CopyStreamerInfos ();  Make sure that all the needed TStreamerInf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeCloner.html:80,Load,Loading,80,doc/master/classTTreeCloner.html,https://root.cern,https://root.cern/doc/master/classTTreeCloner.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeDrawArgsParser Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Protected Attributes |; List of all members ; TTreeDrawArgsParser Class Reference. ; A class that parses all parameters for TTree::Draw(). ; See TTree::Draw() for the format description. ; Definition at line 29 of file TTreeDrawArgsParser.h. Public Types; enum  EOutputType { ;   kUNKNOWN; , kEVENTLIST; , kENTRYLIST; , kPROFILE; , ;   kPROFILE2D; , kGRAPH; , kPOLYMARKER3D; , kHISTOGRAM1D; , ;   kHISTOGRAM2D; , kLISTOFGRAPHS; , kLISTOFPOLYMARKERS3D; , kHISTOGRAM3D. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeDrawArgsParser ();  Constructor - cleans all the class variables. ;  ;  ~TTreeDrawArgsParser () override;  Destructor. ;  ; bool GetAdd () const;  ; Int_t GetDimension () const;  ; TString const & GetExp () const;  ; Double_t GetIfSpecified (Int_t num, Double_t def) const;  ; Int_t GetNoParameters () const;  ; TString const & GetObjectName () const;  ; TString GetObjectTitle () const;  Returns the desired plot title. ;  ; bool GetOptionSame () const;  ; TObject * GetOriginal () const;  ; Double_t GetParameter (int num) const;  returns num-th parameter from brackets in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeDrawArgsParser.html:88,Load,Loading,88,doc/master/classTTreeDrawArgsParser.html,https://root.cern,https://root.cern/doc/master/classTTreeDrawArgsParser.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeFormula Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TTreeFormula Class Reference. ; Used to pass a selection expression to the Tree drawing routine. ; See TTree::Draw; A TreeFormula can contain any arithmetic expression including standard operators and mathematical functions separated by operators. Examples of valid expression: ""x<y && sqrt(z)>3.2""; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the reading of the information. Here is the list of theses classes:; TFormLeafInfo; TFormLeafInfoDirect; TFormLeafInfoNumerical; TFormLeafInfoClones; TFormLeafInfoCollection; TFormLeafInfoPointer; TFormLeafInfoMethod; TFormLeafInfoMultiVarDim; TFormLeafInfoMultiVarDimDirect; TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. AddOffset(Int_t offset, TStreamerElement* element); GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; GetMultiplicity() : Returns info on the variability of the number of elements; GetNdata(TLeaf* leaf) : Returns the number of elements; GetNdata() : Used by GetNdata(TLeaf* leaf); GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; IsString(); ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; Update() : react to the possible loading of a shared library. . Definition at line 58 of file TTreeFormula.h. Classes; struct  RealInstanceCache;  . Public Mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:81,Load,Loading,81,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeFormulaManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TTreeFormulaManager Class Reference. ; Used to coordinate one or more TTreeFormula objects. ; In particular it makes sure that the dimensions and size of all the formulas is properly coordinated. ; Definition at line 30 of file TTreeFormulaManager.h. Public Member Functions;  TTreeFormulaManager ();  Tree FormulaManger default constructor. ;  ;  ~TTreeFormulaManager () override;  Tree FormulaManager default destructor. ;  ; virtual void Add (TTreeFormula *);  Add a new formula to the list of formulas managed The manager of the formula will be changed and the old one will be deleted if it is empty. ;  ; virtual Int_t GetMultiplicity () const;  ; virtual Int_t GetNdata (bool forceLoadDim=false);  Return number of available instances in the formulas. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual void Remove (TTreeFormula *);  Remove a formula from this manager. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Sync ();  Synchronize all the formulae. ;  ; virtual void UpdateFormulaLeaves ();  This function could be called TTreePlayer::UpdateFormulaLeaves, itself called by TChain::LoadTree when a new Tree is loaded. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormulaManager.html:88,Load,Loading,88,doc/master/classTTreeFormulaManager.html,https://root.cern,https://root.cern/doc/master/classTTreeFormulaManager.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeIndex Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TTreeIndex Class Reference. ; A Tree Index with majorname and minorname. ; Definition at line 29 of file TTreeIndex.h. Public Member Functions;  TTreeIndex ();  Default constructor for TTreeIndex. ;  ;  TTreeIndex (const TTree *T, const char *majorname, const char *minorname);  Normal constructor for TTreeIndex. ;  ;  ~TTreeIndex () override;  Destructor. ;  ; void Append (const TVirtualIndex *, bool delaySort=false) override;  Append 'add' to this index. ;  ; TObject * Clone (const char *newname="""") const override;  Create a deep copy of the TTreeIndex. ;  ; bool ConvertOldToNew ();  conversion from old 64bit indexes return true if index was converted ;  ; Long64_t FindValues (Long64_t major, Long64_t minor) const;  find position where major|minor values are in the IndexValues tables this is the index in IndexValues table, not entry# ! use lower_bound STD algorithm. ;  ; Long64_t GetEntryNumberFriend (const TTree *parent) override;  Returns the entry number in this (friend) Tree corresponding to entry in the master Tree 'parent'. ;  ; Long64_t GetEntryNumberWithBestIndex (Long64_t major, Long64_t minor) const override;  Return entry number corresponding to major and minor number. ;  ; Long64_t GetEntryNumberWithIndex (Long64_t major, Long64_t minor) const override;  Return entry number corresponding to major and minor number. ;  ; virtual Long64_t * GetIndex () const;  ; virtual Long64_t * GetIndexValues () const;  ; virtual Long64_t * GetIndexValuesMinor () const;  ; virtual TTreeFormula * GetMajorFormula ();  Return a pointer to the TreeFormula corresponding to the majorname. ;  ; const char * GetMajorName () const override;  ; virtual TTreeFormula * GetMinorFormul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeIndex.html:79,Load,Loading,79,doc/master/classTTreeIndex.html,https://root.cern,https://root.cern/doc/master/classTTreeIndex.html,1,['Load'],['Loading']
Performance,". ROOT: TTreePerfStats Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TTreePerfStats Class Reference. ; TTree I/O performance measurement. ; see example of use below.; The function FileReadEvent is called from TFile::ReadBuffer. For each call the following information is stored in fGraphIO; x[i] = Tree entry number; y[i] = 1e-6*(file position); ey[i] = 1e-9*number of bytes read For each call the following information is stored in fGraphTime; x[i] = Tree entry number; y[i] = Time now; ey[i] = readtime, eg timenow - start The TTreePerfStats object can be saved in a ROOT file in such a way that its inspection can be done outside the job that generated it. Example of use: {; TFile *f = TFile::Open(""RelValMinBias-GEN-SIM-RECO.root"");; T = (TTree*)f->Get(""Events"");; Long64_t nentries = T->GetEntries();; T->SetCacheSize(10000000);; T->SetCacheEntryRange(0,nentries);; T->AddBranchToCache(""*"");; //; TTreePerfStats *ps= new TTreePerfStats(""ioperf"",T);; //; for (Int_t i=0;i<nentries;i++) {; T->GetEntry(i);; }; ps->SaveAs(""cmsperf.root"");; }; f#define f(i)Definition RSha256.hxx:104; Long64_tlong long Long64_tDefinition RtypesCore.h:69; nentriesint nentriesDefinition THbookFile.cxx:91; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TTreePerfStatsTTree I/O performance measurement.Definition TTreePerfStats.h:38; TTreePerfStats::SaveAsvoid SaveAs(const char *filename="""", Option_t *option="""") const overrideSave this object to filename.Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePerfStats.html:83,Load,Loading,83,doc/master/classTTreePerfStats.html,https://root.cern,https://root.cern/doc/master/classTTreePerfStats.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: TTreePerfStats::BasketInfo Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; TTreePerfStats::BasketInfo Struct Reference. . Definition at line 41 of file TTreePerfStats.h. Public Attributes; UInt_t fLoaded = {0};  Number of times the basket was put in the primary TTreeCache. ;  ; UInt_t fLoadedMiss = {0};  Number of times the basket was put in the secondary cache. ;  ; UInt_t fMissed = {0};  Number of times the basket was read directly from the file. ;  ; UInt_t fUsed = {0};  Number of times the basket was requested from the disk. ;  . #include <TTreePerfStats.h>; Member Data Documentation. ◆ fLoaded. UInt_t TTreePerfStats::BasketInfo::fLoaded = {0}. Number of times the basket was put in the primary TTreeCache. ; Definition at line 43 of file TTreePerfStats.h. ◆ fLoadedMiss. UInt_t TTreePerfStats::BasketInfo::fLoadedMiss = {0}. Number of times the basket was put in the secondary cache. ; Definition at line 44 of file TTreePerfStats.h. ◆ fMissed. UInt_t TTreePerfStats::BasketInfo::fMissed = {0}. Number of times the basket was read directly from the file. ; Definition at line 45 of file TTreePerfStats.h. ◆ fUsed. UInt_t TTreePerfStats::BasketInfo::fUsed = {0}. Number of times the basket was requested from the disk. ; Definition at line 42 of file TTreePerfStats.h. Collaboration diagram for TTreePerfStats::BasketInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; tree/treeplayer/inc/TTreePerfStats.h. TTreePerfStatsBasketInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:40 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structTTreePerfStats_1_1BasketInfo.html:96,Load,Loading,96,doc/master/structTTreePerfStats_1_1BasketInfo.html,https://root.cern,https://root.cern/doc/master/structTTreePerfStats_1_1BasketInfo.html,3,"['Load', 'cache']","['Loading', 'cache']"
Performance,". ROOT: TTreePlayer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TTreePlayer Class Reference. ; Implement some of the functionality of the class TTree requiring access to extra libraries (Histogram, display, etc). ; Definition at line 37 of file TTreePlayer.h. Public Member Functions;  TTreePlayer ();  Default Tree constructor. ;  ;  ~TTreePlayer () override;  Tree destructor. ;  ; TVirtualIndex * BuildIndex (const TTree *T, const char *majorname, const char *minorname) override;  Build the index for the tree (see TTree::BuildIndex) ;  ; TTree * CopyTree (const char *selection, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Copy a Tree with selection, make a clone of this Tree header, then copy the selected entries. ;  ; Long64_t DrawScript (const char *wrapperPrefix, const char *macrofilename, const char *cutfilename, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Draw the result of a C++ script. ;  ; Long64_t DrawSelect (const char *varexp, const char *selection, Option_t *option, Long64_t nentries, Long64_t firstentry) override;  Draw expression varexp for specified entries that matches the selection. ;  ; Int_t Fit (const char *formula, const char *varexp, const char *selection, Option_t *option, Option_t *goption, Long64_t nentries, Long64_t firstentry) override;  Fit a projected item(s) from a Tree. ;  ; Int_t GetDimension () const override;  ; Long64_t GetEntries (const char *selection) override;  Return the number of entries matching the selection. ;  ; virtual Long64_t GetEntriesToProcess (Long64_t firstentry, Long64_t nentries) const;  return the number of entries to be processed this function checks that nentries is not bigger than the number of entries in the Tree or in the a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePlayer.html:80,Load,Loading,80,doc/master/classTTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTTreePlayer.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeReader Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Types |; Protected Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TTreeReader Class ReferenceTreePlayer Library. ; A simple, robust and fast interface to read values from ROOT columnar datasets such as TTree, TChain or TNtuple. ; TTreeReader is associated to TTreeReaderValue and TTreeReaderArray which are handles to concretely access the information in the dataset.; Example code can be found in; tutorials/tree/hsimpleReader.C; tutorials/tree/h1analysisTreeReader.C; This example. You can generate a skeleton of TTreeReaderValue<T> and TTreeReaderArray<T> declarations for all of a tree's branches using TTree::MakeSelector().; Roottest contains an example showing the full power.; A simpler analysis example can be found below: it histograms a function of the px and py branches.; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C); ; #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h""; ; void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);; ; // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");; ; // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);; ; // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");; ; // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeReader.html:80,Load,Loading,80,doc/master/classTTreeReader.html,https://root.cern,https://root.cern/doc/master/classTTreeReader.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeReaderValue< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; List of all members ; TTreeReaderValue< T > Class Template ReferencefinalTreePlayer Library. ; template<typename T>; class TTreeReaderValue< T >An interface for reading values stored in ROOT columnar datasets. ; The TTreeReaderValue is a type-safe tool to be used in association with a TTreeReader to access the values stored in TTree, TNtuple and TChain datasets. TTreeReaderValue can be also used to access collections such as std::vectors or TClonesArray stored in columnar datasets but it is recommended to use TTreeReaderArray instead as it offers several advantages.; See the documentation of TTreeReader for more details and examples. ; Definition at line 174 of file TTreeReaderValue.h. Public Types; using NonConstT_t = typename std::remove_const< T >::type;  ;  Public Types inherited from ROOT::Internal::TTreeReaderValueBase; typedef bool(ROOT::Detail::TBranchProxy::* BranchProxyRead_t) ();  ; enum  EReadStatus { kReadSuccess = 0; , kReadNothingYet; , kReadError; };  ; enum  ESetupStatus { ;   kSetupNotSetup = -7; , kSetupTreeDestructed = -8; , kSetupMakeClassModeMismatch = -9; , kSetupMissingCounterBranch = -6; , ;   kSetupMissingBranch = -5; , kSetupInternalError = -4; , kSetupMissingDictionary = -3; , kSetupMismatch = -2; , ;   kSetupNotACollection = -1; , kSetupMatch = 0; , kSetupMatchBranch = 7; , kSetupNoCheck = 5; , ;   kSetupMatchLeaf = 6. };  Status flags, 0 is good. More...;  . Public Member Functions;  TTreeReaderValue ()=delete;  ;  TTreeReaderValue (TTreeReader &tr, const char *branchname);  ; T * Get ();  Return a pointer to the value of the current entry. ;  ; T & operator* ();  Return a reference to the value of the current entry. ;  ; T * operator-> ();  Return a pointer to the value of the current entry. ;  ;  Public Mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeReaderValue.html:99,Load,Loading,99,doc/master/classTTreeReaderValue.html,https://root.cern,https://root.cern/doc/master/classTTreeReaderValue.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeSQL Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TTreeSQL Class ReferenceTree Library. ; A TTree object is a list of TBranch. ; To Create a TTree object one must:; Create the TTree header via the TTree constructor; Call the TBranch constructor for every branch. To Fill this object, use member function Fill with no parameters. The Fill function loops on all defined TBranch.; TTreeSQL is the TTree implementation interfacing with an SQL database ; Definition at line 42 of file TTreeSQL.h. Public Member Functions;  TTreeSQL (TSQLServer *server, TString DB, const TString &table);  Constructor with an explicit TSQLServer. ;  ;  ~TTreeSQL () override;  ; Int_t Branch (const char *folder, Int_t bufsize=32000, Int_t splitlevel=99) override;  Not implemented yet. ;  ; TBranch * Branch (const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;  Not implemented yet. ;  ; TBranch * Branch (const char *name, void *address, const char *leaflist, Int_t bufsize) override;  Create a branch. ;  ; Int_t Branch (TCollection *list, Int_t bufsize=32000, Int_t splitlevel=99, const char *name="""") override;  Not implemented yet. ;  ; Int_t Branch (TList *list, Int_t bufsize=32000, Int_t splitlevel=99) override;  Not implemented yet. ;  ; TBranch * BranchOld (const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=1) override;  Not implemented yet. ;  ; TBranch * Bronch (const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99) override;  Not implemented yet. ;  ; Int_t Fill () override;  Copy the information from the user object to the TTree. ;  ; Long64_t GetEntries () const override;  Get the number of rows in the database. ;  ; Long64_t GetEntri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeSQL.html:77,Load,Loading,77,doc/master/classTTreeSQL.html,https://root.cern,https://root.cern/doc/master/classTTreeSQL.html,1,['Load'],['Loading']
Performance,". ROOT: TTreeViewer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Friends |; List of all members ; TTreeViewer Class Reference. ; A graphic user interface designed to handle ROOT trees and to take advantage of TTree class features. ; It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality. in the same session. The following capabilities are making the viewer a helpful tool for analysis:. several trees may be opened in the same session;; branches and leaves can be easily browsed or scanned;; fast drawing of branch expressions by double-clicking;; new variables/selections easy to compose with the built-in editor;; histograms can be composed by dragging leaves or user-defined expressions to X, Y and Z axis items;; the tree entries to be processed can be selected with a double slider;; selections can be defined and activated by dragging them to the 'Cut' item;; all expressions can be aliased and aliases can be used in composing others;; input/output event lists easy to handle;; menu with histogram drawing options;; user commands may be executed within the viewer and the current command can be echoed;; current 'Draw' event loop is reflected by a progress bar and may be interrupted by the user;; all widgets have self-explaining tool tips and/or context menus;; expressions/leaves can be dragged to a 'scan box' and scanned by double-clicking this item. The result can be redirected to an ASCII file;. The layout has the following items:. a menu bar with entries : File, Edit, Run, Options and Help;; a toolbar in the upper part where you can issue user commands, change the drawing option and the histogram name, three check buttons Hist, Rec and Scan.HIST toggles histogram drawing mode, REC enables recording of the last command issued and SCAN enables redirecting of TTree::Scan command",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeViewer.html:80,Load,Loading,80,doc/master/classTTreeViewer.html,https://root.cern,https://root.cern/doc/master/classTTreeViewer.html,1,['Load'],['Loading']
Performance,". ROOT: TUDPSocket Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TUDPSocket Class Reference. . Definition at line 37 of file TUDPSocket.h. Public Types; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TUDPSocket (const char *host, const char *service);  Create a socket. ;  ;  TUDPSocket (const char *host, Int_t port);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TUDPSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TUDPSocket (const TUDPSocket &s);  TUDPSocket copy ctor. ;  ;  TUDPSocket (Int_t descriptor);  Create a socket. ;  ;  TUDPSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TUDPSocket (TInetAddress address, const char *service);  Create a socket. ;  ;  TUDPSocket (TInetAddress address, Int_t port);  Create a socket. ;  ; virtual ~TUDPSocket ();  ; virtual void Close (Option_t *opt="""");  Clos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUDPSocket.html:79,Load,Loading,79,doc/master/classTUDPSocket.html,https://root.cern,https://root.cern/doc/master/classTUDPSocket.html,1,['Load'],['Loading']
Performance,". ROOT: TUUID Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TUUID Class ReferenceCore ROOT classes » Base ROOT classes. ; This class defines a UUID (Universally Unique IDentifier), also known as GUIDs (Globally Unique IDentifier). ; A UUID is 128 bits long, and if generated according to this algorithm, is either guaranteed to be different from all other UUIDs/GUIDs generated until 3400 A.D. or extremely likely to be different. UUIDs were originally used in the Network Computing System (NCS) and later in the Open Software Foundation's (OSF) Distributed Computing Environment (DCE).; NoteIn the way this UUID is constructed, when used outside of their original concept (NCS), they are actually not Globally unique and indeed multiple distinct concurrent processes are actually likely to generate the same UUID. Technically this is because the UUID is constructed only from the node information and time information. To make a globally unique number, this needs to be combined with TProcessUUID.; Structure of universal unique IDs (UUIDs).; Depending on the network data representation, the multi- octet unsigned integer fields are subject to byte swapping when communicated between dissimilar endian machines. +-----------------------------------+; | low 32 bits of time | 0-3 .fTimeLow; +-------------------------------+----; | mid 16 bits of time | 4-5 .fTimeMid; +-------+-----------------------+; | vers. | hi 12 bits of time | 6-7 .fTimeHiAndVersion; +-------+-------+---------------+; |Res | clkSeqHi | 8 .fClockSeqHiAndReserved; +---------------+; | clkSeqLow | 9 .fClockSeqLow; +---------------+------------------+; | node ID | 10-15 .fNode; +----------------------------------+; hi#define hiDefinition THbookFile.cxx:128; The adjusted time stamp is split into three",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUUID.html:74,Load,Loading,74,doc/master/classTUUID.html,https://root.cern,https://root.cern/doc/master/classTUUID.html,2,"['Load', 'concurren']","['Loading', 'concurrent']"
Performance,". ROOT: TUnfold Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TUnfold Class Reference. ; An algorithm to unfold distributions from detector to truth level. ; TUnfold is used to decompose a measurement y into several sources x, given the measurement uncertainties and a matrix of migrations A. The method can be applied to a large number of problems, where the measured distribution y is a linear superposition of several Monte Carlo shapes. Beyond such a simple template fit, TUnfold has an adjustable regularisation term and also supports an optional constraint on the total number of events.; For most applications, it is better to use the derived class TUnfoldDensity instead of TUnfold. TUnfoldDensity adds various features to TUnfold, such as: background subtraction, propagation of systematic uncertainties, complex multidimensional arrangements of the bins. For innocent users, the most notable improvement of TUnfoldDensity over TUnfold are the getter functions. For TUnfold, histograms have to be booked by the user and the getter functions fill the histogram bins. TUnfoldDensity simply returns a new, already filled histogram.; If you use this software, please consider the following citation ; S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] ; Detailed documentation and updates are available on http://www.desy.de/~sschmitt; Brief recipy to use TUnfold: . a matrix (truth,reconstructed) is given as a two-dimensional histogram as argument to the constructor of TUnfold . a vector of measurements is given as one-dimensional histogram using the SetInput() method . The unfolding is performed . either once with a fixed parameter tau, method DoUnfold(tau) . or multiple ti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfold.html:76,Load,Loading,76,doc/master/classTUnfold.html,https://root.cern,https://root.cern/doc/master/classTUnfold.html,1,['Load'],['Loading']
Performance,". ROOT: TUnfold classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TUnfold classesHistogram Library. ; An algorithm to unfold distributions from detector to truth level.; AuthorStefan Schmitt DESY . Classes; class  TUnfoldSys;  An algorithm to unfold distributions from detector to truth level, with background subtraction and propagation of systematic uncertainties. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Unfold.html:68,Load,Loading,68,doc/master/group__Unfold.html,https://root.cern,https://root.cern/doc/master/group__Unfold.html,1,['Load'],['Loading']
Performance,". ROOT: TUnfold tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; TUnfold tutorialsTutorials. ; Test programs for the classes TUnfold and related. ; TUnfold is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.; TUnfold is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.; You should have received a copy of the GNU General Public License along with TUnfold. If not, see http://www.gnu.org/licenses/. . Files; file  testUnfold1.C;   Test program for the classes TUnfold and related. ;  ; file  testUnfold2.C;   Test program as an example for a user specific regularisation scheme. ;  ; file  testUnfold3.C;   Simple Test program for the class TUnfoldDensity. ;  ; file  testUnfold4.C;   Test program for the class TUnfoldSys. ;  ; file  testUnfold5a.C;   Test program for the classes TUnfoldDensity and TUnfoldBinning ;  ; file  testUnfold5b.C;   Test program for the classes TUnfoldDensity and TUnfoldBinning. ;  ; file  testUnfold5c.C;   Test program for the classes TUnfoldDensity and TUnfoldBinning. ;  ; file  testUnfold5d.C;   Test program for the classes TUnfoldDensity and TUnfoldBinning. ;  ; file  testUnfold6.C;   Test program for the class TUnfoldBinning. ;  ; file  testUnfold7a.C;   Test program for the classes TUnfoldDensity and TUnfoldBinning. ;  ; file  testUnfold7b.C;   Test program for the classes TUnfoldDensity and TUnfoldBinning ;  ; file  testUnfold7c.C;   Test program for the classes TUnfoldDensity and TUnfoldBinning. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__unfold.html:70,Load,Loading,70,doc/master/group__tutorial__unfold.html,https://root.cern,https://root.cern/doc/master/group__tutorial__unfold.html,1,['Load'],['Loading']
Performance,". ROOT: TUnfoldBinning Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TUnfoldBinning Class Reference. ; Binning schemes for use with the unfolding algorithm TUnfoldDensity. ; Binning schemes are used to map analysis bins on a single histogram axis and back. The analysis bins may include unconnected bins (e.g nuisances for background normalisation) or various multidimensional histograms (signal bins, differential background normalisation bins, etc). ; If you use this software, please consider the following citation ; S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] ; Detailed documentation and updates are available on http://www.desy.de/~sschmitt; Functionality; The TUnfoldBinning objects are connected by a tree-like structure. The structure does not hold any data, but is only responsible for arranging the analysis bins in the proper order. Each node of the tree is responsible for a group of bins. That group may consist of . several unconnected bins, each with a dedicated name. . bins organized in a multidimensional distribution, defined by a set of axes. The axes are defined by a number of bins N and by (N+1) bin borders. In addition to the N bins inside there may be an underflow and an overflow bin . Each bin has a ""global"" bin number, which can be found using the GetGlobalBinNumber() methods. The global bin number 0 is reserved and corresponds to the case where no bin is found in the TUnfoldBinning tree.; Use in the analysis; Booking histograms: . Define binning schemes on detector level and on truth level. This can be done using the XML language, use the class TUnfoldBinningXML to read the binning scheme. The TUnfoldBinning objects can be written to a root file, preferentially together with the corresponding histograms. . For Monte Carlo, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldBinning.html:83,Load,Loading,83,doc/master/classTUnfoldBinning.html,https://root.cern,https://root.cern/doc/master/classTUnfoldBinning.html,1,['Load'],['Loading']
Performance,". ROOT: TUnfoldBinningXML Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members ; TUnfoldBinningXML Class Reference. ; XML interfate to binning schemes, for use with the unfolding algorithm TUnfoldDensity. ; Binning schemes are used to map analysis bins on a single histogram axis and back. The analysis bins may include unconnected bins (e.g nuisances for background normalisation) or various multidimensional histograms (signal bins, differential background normalisation bins, etc). ; If you use this software, please consider the following citation ; S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] ; Detailed documentation and updates are available on http://www.desy.de/~sschmitt; Please consult the documentation of the class TUnfoldBinning about how to use binning schemes. This class provides methods to read and write binning schemes in the XML language. There is also a method which writes out a dtd file for validation. Example XML code; The example below encodes two binning schemes, detector and generator. The detecor scheme consists of a single, three-dimensional distribution (pt,eta,discriminator). The generator scheme consists of two two-dimensional distributions, signal and background. ; <?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>; <!DOCTYPE TUnfoldBinning SYSTEM ""tunfoldbinning.dtd"">; <TUnfoldBinning>; <BinningNode name=""detector"" firstbin=""1"" factor=""1"">; <BinningNode name=""detectordistribution"" firstbin=""1"" factor=""1"">; ; <Bin repeat=""3"" width=""0.5"" >; <Bin repeat=""3"" width=""1"" >; <Bin width=""2"" >; <Bin width=""3"" >; <Bin location=""overflow"">; ; <Bin repeat=""2"" width=""0.5"" >; <Bin width=""1"" >; <Bin repeat=""4"" width=""0.5"" >; <Bin width=""1"" >; <Bin repeat=""2"" width=""0.5"" >; ; <Bin width=""0.15"" >; <Bin repeat=""2"" width=""0.35"" >; <Bin width=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldBinningXML.html:86,Load,Loading,86,doc/master/classTUnfoldBinningXML.html,https://root.cern,https://root.cern/doc/master/classTUnfoldBinningXML.html,1,['Load'],['Loading']
Performance,". ROOT: TUnfoldDensity Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TUnfoldDensity Class Reference. ; An algorithm to unfold distributions from detector to truth level. ; TUnfoldDensity is used to decompose a measurement y into several sources x, given the measurement uncertainties, background b and a matrix of migrations A. The method can be applied to a large number of problems, where the measured distribution y is a linear superposition of several Monte Carlo shapes. Beyond such a simple template fit, TUnfoldDensity has an adjustable regularisation term and also supports an optional constraint on the total number of events. Background sources can be specified, with a normalisation constant and normalisation uncertainty. In addition, variants of the response matrix may be specified, these are taken to determine systematic uncertainties. Complex, multidimensional arrangements of signal and background bins are managed with the help of the class TUnfoldBinning.; If you use this software, please consider the following citation ; S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] ; Detailed documentation and updates are available on http://www.desy.de/~sschmitt; Brief recipy to use TUnfoldSys:. Set up binning schemes for the truth and measured distributions. The binning schemes may be coded in the XML language, for reading use TUnfoldBinningXML. . A matrix (truth,reconstructed) is given as a two-dimensional histogram as argument to the constructor of TUnfold . A vector of measurements is given as one-dimensional histogram using the SetInput() method . Repeated calls to SubtractBackground() to specify background sources . Repeated calls to AddSysError() to specify systematic uncertainties . The unfolding is performed . either once with a fixed pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:83,Load,Loading,83,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,1,['Load'],['Loading']
Performance,". ROOT: TUnfoldIterativeEM Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TUnfoldIterativeEM Class Reference. . Definition at line 45 of file TUnfoldIterativeEM.h. Public Member Functions;  TUnfoldIterativeEM (const TH2 *hist_A, TUnfold::EHistMap histmap, const TUnfoldBinning *outputBins=nullptr, const TUnfoldBinning *inputBins=nullptr);  ;  TUnfoldIterativeEM (void);  ;  ~TUnfoldIterativeEM () override;  ; void DoUnfold (Int_t nIter, const TH1 *hist_y, Double_t scaleBias=1.0);  ; virtual void DoUnfold (Int_t numIterations);  ; Double_t GetDeviance (void) const;  ; Double_t GetDF (void) const;  ; TH1 * GetFoldedOutput (const char *histogramName, const char *histogramTitle=nullptr, const char *distributionName=nullptr, const char *projectionMode=nullptr, Bool_t useAxisBinning=kTRUE, Bool_t addBgr=kFALSE) const;  ; TH1 * GetOutput (const char *histogramName, const char *histogramTitle=nullptr, const char *distributionName=nullptr, const char *projectionMode=nullptr, Bool_t useAxisBinning=kTRUE) const;  ; Double_t GetSURE (void) const;  ; TClass * IsA () const override;  ; virtual Int_t ScanSURE (Int_t nIterMax, TGraph **SURE=nullptr, TGraph **df_deviance=nullptr);  ; virtual Int_t SetInput (const TH1 *hist_y, Double_t scaleBias=1.0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SubtractBackground (const TH1 *hist_bgr, const char *name, Double_t scale=1.0);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldIterativeEM.html:87,Load,Loading,87,doc/master/classTUnfoldIterativeEM.html,https://root.cern,https://root.cern/doc/master/classTUnfoldIterativeEM.html,1,['Load'],['Loading']
Performance,". ROOT: TUnfoldSys Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TUnfoldSys Class ReferenceHistogram Library » TUnfold classes. ; An algorithm to unfold distributions from detector to truth level, with background subtraction and propagation of systematic uncertainties. ; TUnfoldSys is used to decompose a measurement y into several sources x, given the measurement uncertainties, background b and a matrix of migrations A. The method can be applied to a large number of problems, where the measured distribution y is a linear superposition of several Monte Carlo shapes. Beyond such a simple template fit, TUnfoldSys has an adjustable regularisation term and also supports an optional constraint on the total number of events. Background sources can be specified, with a normalisation constant and normalisation uncertainty. In addition, variants of the response matrix may be specified, these are taken to determine systematic uncertainties.; For most applications, it is better to use the derived class TUnfoldDensity instead of TUnfoldSys. TUnfoldDensity adds features to TUnfoldSys, related to possible complex multidimensional arrangements of bins. For innocent users, the most notable improvement of TUnfoldDensity over TUnfoldSys are the getter functions. For TUnfoldSys, histograms have to be booked by the user and the getter functions fill the histogram bins. TUnfoldDensity simply returns a new, already filled histogram.; If you use this software, please consider the following citation; S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]; Detailed documentation and updates are available on http://www.desy.de/~sschmitt; Brief recipy to use TUnfoldSys: . a matrix (truth,reconstructed) is given as a two-dimensional histogram as ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldSys.html:79,Load,Loading,79,doc/master/classTUnfoldSys.html,https://root.cern,https://root.cern/doc/master/classTUnfoldSys.html,1,['Load'],['Loading']
Performance,". ROOT: TUnixSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Private Member Functions |; List of all members ; TUnixSystem Class Reference. . Definition at line 32 of file TUnixSystem.h. Public Member Functions;  TUnixSystem ();  ; virtual ~TUnixSystem ();  Reset to original state. ;  ; void Abort (int code=0) override;  Abort the application. ;  ; int AcceptConnection (int sock) override;  Accept a connection. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void AddDynamicPath (const char *lib) override;  Add a new directory to the dynamic path. ;  ; void AddFileHandler (TFileHandler *fh) override;  Add a file handler to the list of system file handlers. ;  ; void AddSignalHandler (TSignalHandler *sh) override;  Add a signal handler to list of system signal handlers. ;  ; void AddTimer (TTimer *ti) override;  Add timer to list of system timers. ;  ; int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) override;  Announce TCP/IP service. ;  ; int AnnounceUdpService (int port, int backlog) override;  Announce UDP service. ;  ; int AnnounceUnixService (const char *sockpath, int backlog) override;  Announce unix domain service on path 'sockpath'. ;  ; int AnnounceUnixService (int port, int backlog) override;  Announce unix domain service on path ""kServerPath/<port>"". ;  ; Bool_t ChangeDirectory (const char *path) override;  Change directory. Returns kTRUE in case of success, kFALSE otherwise. ;  ; void CheckChilds ();  Check if children have finished. ;  ; Bool_t CheckDescriptors ();  Check if there is activity on some file descriptors and call their Notify() member. ;  ; Bool_t CheckSignals (Bool_t sync);  Check if some s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:80,Load,Loading,80,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['Load'],['Loading']
Performance,". ROOT: TUnuran Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TUnuran Class ReferenceMath » Unuran. ; TUnuran class. ; Interface to the UNU.RAN package for generating non uniform random numbers. This class wraps the UNU.RAN calls in C++ methods. It provides methods for initializing Unuran and then to sample the desired distribution. It provides support for initializing UNU.RAN in these following way (various signatures for TUnuran::Init); with string API via TUnuran::Init passing the distribution type and the method; using a one-dimensional distribution object defined by TUnuranContDist; using a multi-dimensional distribution object defined by TUnuranMultiContDist; using a discrete one-dimensional distribution object defined by TUnuranDiscrDist; using an empirical distribution defined by TUnuranEmpDist; using pre-defined distributions. Presently only support for Poisson (TUnuran::InitPoisson) and Binomial (TUnuran::InitBinomial) are provided. Other distributions can however be generated using the previous methods (in particular via the string API). The sampling is provided via these methods:; TUnuran::Sample() returns a double for all one-dimensional distribution; TUnuran::SampleDiscr() returns an integer for one-dimensional discrete distribution; TUnuran::Sample(double *) sample a multi-dimensional distribution. A pointer to a vector with size at least equal to the distribution dimension must be passed. In addition is possible to set the random number generator in the constructor of the class, its seed via the TUnuran::SetSeed() method. ; Definition at line 79 of file TUnuran.h. Public Member Functions;  TUnuran (const TUnuran &)=delete;  ;  TUnuran (TRandom *r=nullptr, unsigned int log=0);  Constructor with a generator instance and given level of log output. ;  ;  TUnuran (TUnuran &&)=delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnuran.html:76,Load,Loading,76,doc/master/classTUnuran.html,https://root.cern,https://root.cern/doc/master/classTUnuran.html,1,['Load'],['Loading']
Performance,". ROOT: TUnuranContDist Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TUnuranContDist Class ReferenceMath » Unuran. ; TUnuranContDist class describing one dimensional continuous distribution. ; It is used by TUnuran to generate random numbers according to this distribution via TUnuran::Sample(); The class can be constructed from a function (TF1) representing the probability density function of the distribution. Optionally the derivative of the pdf can also be passed.; It provides a method to set the domain of the distribution ( SetDomain ) which will correspond to the range of the generated random numbers. By default the domain is (-inf, + inf), independently of the range set in the TF1 class used to construct the distribution.; In addition, some UNURAN methods requires extra information (cdf function, distribution mode, area of pdf, etc...). This information can as well be set. Some methods require instead of the pdf the log of the pdf. This can also be controlled by setting a flag when constructing this class. ; Definition at line 48 of file TUnuranContDist.h. Public Member Functions;  TUnuranContDist (const ROOT::Math::IGenFunction &pdf, const ROOT::Math::IGenFunction *dpdf=nullptr, bool isLogPdf=false, bool copyFunc=false);  Constructor as before but from a generic function object interface for one-dim functions. ;  ;  TUnuranContDist (const ROOT::Math::IGenFunction *pdf, const ROOT::Math::IGenFunction *dpdf, const ROOT::Math::IGenFunction *cdf, bool isLogPdf=false, bool copyFunc=false);  Constructor as before from pointers to generic function object interface for one-dim functions which can be use for all algorithms including those requiring only the Cdf. ;  ;  TUnuranContDist (const TUnuranContDist &);  Copy constructor. ;  ;  TUnuranContDist (TF1 *pdf, TF1 *deriv, TF1 *cdf, bool isLo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnuranContDist.html:84,Load,Loading,84,doc/master/classTUnuranContDist.html,https://root.cern,https://root.cern/doc/master/classTUnuranContDist.html,1,['Load'],['Loading']
Performance,". ROOT: TUnuranDiscrDist Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TUnuranDiscrDist Class ReferenceMath » Unuran. ; TUnuranDiscrDist class for one dimensional discrete distribution. ; It is used by TUnuran to generate integer random numbers according to this distribution via TUnuran::SampleDiscr().; The class can be constructed from a one-dimensional function (TF1 pointer) representing the discrete distribution (probability mesh function) (for example a TF1(""f"",""TMath::PoissonI(x,[0])"") ) or from a vector of probability, used by passing an iterator specifying the begin and the end of the vector. In the latter case the domain of the distribution will be defined by the vector, while in the first case is by default (0,+inf). a Method to set the domain of the distribution ( SetDomain ) is provided and it defines the range of the generated random numbers.; The derivatives of the pdf which are used by some UNURAN methods are estimated numerically in the Derivative() method. Some extra information (like distribution mode, cdf function, probability sum, etc..) can be set as well otherwise will be estimated internally if required. ; Definition at line 51 of file TUnuranDiscrDist.h. Public Member Functions;  TUnuranDiscrDist (const ROOT::Math::IGenFunction &func, bool copyFunc=false);  Constructor from a generic function object specifying the pdf. ;  ;  TUnuranDiscrDist (const TUnuranDiscrDist &);  Copy constructor. ;  ; template<class Iterator > ;  TUnuranDiscrDist (Iterator *begin, Iterator *end);  Constructor from a vector of probability. ;  ;  TUnuranDiscrDist (TF1 *func);  Constructor from a TF1 objects specifying the pdf. ;  ;  ~TUnuranDiscrDist () override;  Destructor. ;  ; double Cdf (int x) const;  evaluate the integral (cdf) on the given domain ;  ; TUnuranDiscrDist * Clone () const ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnuranDiscrDist.html:85,Load,Loading,85,doc/master/classTUnuranDiscrDist.html,https://root.cern,https://root.cern/doc/master/classTUnuranDiscrDist.html,1,['Load'],['Loading']
Performance,". ROOT: TUnuranEmpDist Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TUnuranEmpDist Class ReferenceMath » Unuran. ; TUnuranEmpDist class for describing empirical distributions. ; It is used by TUnuran to generate double random number according to this distribution via TUnuran::Sample() or TUnuran::Sample(double *) in case of multi-dimensional empirical distributions.; An empirical distribution can be one or multi-dimension constructed from a set of unbinned data, (the class can be constructed from an iterator to a vector of data) or by using an histogram (with a pointer to the TH1 class). If the histogram contains a buffer with the original data they are used by default to estimate the empirical distribution, otherwise the bins information is used. In this binned case only one dimension is now supported.; In the case of unbinned data the density distribution is estimated by UNURAN using kernel smoothing and then random numbers are generated. In the case of bin data (which can only be one dimension) the probability density is estimated directly from the histograms and the random numbers are generated according to the histogram (like in TH1::GetRandom). This method requires some initialization time but it is faster in generating the random numbers than TH1::GetRandom and it becomes convenient to use when generating a large amount of data. ; Definition at line 49 of file TUnuranEmpDist.h. Public Member Functions;  TUnuranEmpDist (const TH1 *h1=nullptr, bool useBuffer=true);  Constructor from a TH1 objects. ;  ;  TUnuranEmpDist (const TUnuranEmpDist &);  Copy constructor. ;  ; template<class Iterator > ;  TUnuranEmpDist (Iterator begin, Iterator end, unsigned int dim=1);  Constructor from a set of data using an iterator to specify begin/end of the data In the case of multi-dimension the data ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnuranEmpDist.html:83,Load,Loading,83,doc/master/classTUnuranEmpDist.html,https://root.cern,https://root.cern/doc/master/classTUnuranEmpDist.html,1,['Load'],['Loading']
Performance,". ROOT: TUnuranMultiContDist Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TUnuranMultiContDist Class ReferenceMath » Unuran. ; TUnuranMultiContDist class describing multi dimensional continuous distributions. ; It is used by TUnuran to generate a set of random numbers according to this distribution via TUnuran::Sample(double *). The class can be constructed from a multi-dimensional function (TF1 pointer, which can be actually also a TF2 or a TF3). It provides a method to set the domain of the distribution ( SetDomain ) which will correspond to the range of the generated random numbers. By default the domain is [(-inf,-inf,...)(+inf,+inf,...)], independently of the range set in the TF1 class used to construct the distribution.; The derivatives of the pdf which are used by some UNURAN methods are estimated numerically in the Derivative() method. Some extra information (like distribution mode) can be set using SetMode. Some methods require instead of the pdf the log of the pdf. This can also be controlled by setting a flag when constructing this class. ; Definition at line 47 of file TUnuranMultiContDist.h. Public Member Functions;  TUnuranMultiContDist (const ROOT::Math::IMultiGenFunction &pdf, bool isLogPdf=false);  Constructor as before but from a generic function object interface for multi-dim functions. ;  ;  TUnuranMultiContDist (const TUnuranMultiContDist &);  Copy constructor. ;  ;  TUnuranMultiContDist (TF1 *func=nullptr, unsigned int dim=0, bool isLogPdf=false);  Constructor from a TF1 object representing the Probability density function. ;  ;  ~TUnuranMultiContDist () override;  Destructor. ;  ; TUnuranMultiContDist * Clone () const override;  Clone (required by base class) ;  ; double Derivative (const double *x, int icoord) const;  evaluate the partial derivative for the given co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnuranMultiContDist.html:89,Load,Loading,89,doc/master/classTUnuranMultiContDist.html,https://root.cern,https://root.cern/doc/master/classTUnuranMultiContDist.html,1,['Load'],['Loading']
Performance,". ROOT: TUploadDataSetDlg Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TUploadDataSetDlg Class Reference. . Definition at line 117 of file TSessionDialogs.h. Public Member Functions;  TUploadDataSetDlg (TSessionViewer *gui, Int_t w, Int_t h);  Create a Upload DataSet dialog box. Used to create and upload a dataset. ;  ;  ~TUploadDataSetDlg () override;  Delete chain dialog. ;  ; void AddFiles (const char *fileName);  Add File name(s) from the file location URL to the list view. ;  ; void AddFiles (TList *fileList);  Add File name(s) from the file location URL to the list view. ;  ; void BrowseFiles ();  Opens the TGFileDialog to allow user to select local file(s) to be added in the list view of dataset files. ;  ; void ClearFiles ();  Clear content of the list view. ;  ; void CloseWindow () override;  Close upload dataset dialog. ;  ; TClass * IsA () const override;  ; void OnAppendFiles (Bool_t on);  Notification of Append Files check button. ;  ; void OnOverwriteDataset (Bool_t on);  Notification of Overwrite Dataset check button. ;  ; void OnOverwriteFiles (Bool_t on);  Notification of Overwrite Files check button. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for upload dataset dialog. ;  ; void RemoveFile ();  Remove the selected entry from the list view. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UploadDataSet ();  Upload the dataset to the server. ;  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUploadDataSetDlg.html:86,Load,Loading,86,doc/master/classTUploadDataSetDlg.html,https://root.cern,https://root.cern/doc/master/classTUploadDataSetDlg.html,1,['Load'],['Loading']
Performance,". ROOT: TUri Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Friends |; List of all members ; TUri Class ReferenceCore ROOT classes » Base ROOT classes. ; This class represents a RFC 3986 compatible URI. ; See alsohttps://doi.org/10.17487/RFC3986 It provides member functions to set and return the different the different parts of an URI. The functionality is that of a validating parser. ; Definition at line 35 of file TUri.h. Public Member Functions;  TUri ();  ;  TUri (const char *uri);  Constructor that calls SetUri with a complete URI. ;  ;  TUri (const TString &uri);  Constructor that calls SetUri with a complete URI. ;  ;  TUri (const TUri &uri);  TUri copy ctor. ;  ; virtual ~TUri ();  ; const TString GetAuthority () const;  Returns the authority part of the instance: ;  ; const TString GetFragment () const;  ; const TString GetHierPart () const;  ; const TString GetHost () const;  ; const TString GetPath () const;  ; const TString GetPort () const;  ; const TString GetQuery () const;  ; const TString GetRelativePart () const;  relative-part = ""//"" authority path-abempty ;  ; const TString GetScheme () const;  ; const TString GetUri () const;  Returns the whole URI - an implementation of chapter 5.3 component recomposition. ;  ; const TString GetUserInfo () const;  ; Bool_t HasAuthority () const;  ; Bool_t HasFragment () const;  ; Bool_t HasHierPart () const;  ; Bool_t HasHost () const;  ; Bool_t HasPath () const;  ; Bool_t HasPort () const;  ; Bool_t HasQuery () const;  ; Bool_t HasRelativePart () const;  ; Bool_t HasScheme () const;  ; Bool_t HasUserInfo () const;  ; TClass * IsA () const override;  ; Bool_t IsAbsolute () const;  Returns kTRUE if instance qualifies as absolute-URI absolute-URI = scheme "":"" hier-part [ ""?"" query ] cf. ;  ; Bool_t IsReference () const;  Returns kTRUE if instance qualifies as ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUri.html:73,Load,Loading,73,doc/master/classTUri.html,https://root.cern,https://root.cern/doc/master/classTUri.html,1,['Load'],['Loading']
Performance,". ROOT: TUrl Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TUrl Class ReferenceCore ROOT classes » Base ROOT classes. ; This class represents a WWW compatible URL. ; It provides member functions to return the different parts of an URL. The supported url format is: [proto://][user[:passwd]@]host[:port]/file.ext[#anchor][?options]; protoconst char * protoDefinition civetweb.c:17535. Definition at line 33 of file TUrl.h. Public Member Functions;  TUrl ();  ;  TUrl (const char *url, Bool_t defaultIsFile=kFALSE);  Parse url character string and split in its different subcomponents. ;  ;  TUrl (const TUrl &url);  TUrl copy ctor. ;  ; virtual ~TUrl ();  Cleanup. ;  ; void CleanRelativePath ();  Recompute the path removing all relative directory jumps via '..'. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two urls as strings. ;  ; const char * GetAnchor () const;  ; const char * GetFile () const;  ; const char * GetFileAndOptions () const;  Return the file and its options (the string specified behind the ?). ;  ; const char * GetHost () const;  ; const char * GetHostFQDN () const;  Return fully qualified domain name of url host. ;  ; Int_t GetIntValueFromOptions (const char *key) const;  Return a value for a given key from the URL options as an Int_t, a missing key returns -1. ;  ; const char * GetOptions () const;  ; const char * GetPasswd () const;  ; Int_t GetPort () const;  ; const char * GetProtocol () const;  ; const char * GetUrl (Bool_t withDeflt=kFALSE) const;  Return full URL. ;  ; const char * GetUser () const;  ; const char * GetValueFromOptions (const char *key) const;  Return a value for a given key from the URL options. ;  ; Bool_t HasOption (const char *key) const;  Returns true if the give",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUrl.html:73,Load,Loading,73,doc/master/classTUrl.html,https://root.cern,https://root.cern/doc/master/classTUrl.html,1,['Load'],['Loading']
Performance,". ROOT: TUsrHit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TUsrHit Class Reference. . Definition at line 4 of file clonesA_Event.h. Public Member Functions;  TUsrHit (Int_t ev=0);  ; virtual ~TUsrHit ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrHit.html:76,Load,Loading,76,doc/master/classTUsrHit.html,https://root.cern,https://root.cern/doc/master/classTUsrHit.html,1,['Load'],['Loading']
Performance,". ROOT: TUsrHitBuffer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TUsrHitBuffer Class Reference. . Definition at line 20 of file clonesA_Event.h. Public Member Functions;  TUsrHitBuffer (Int_t maxent=10);  ; virtual ~TUsrHitBuffer ();  ; TUsrHit * AddHit (Int_t ev);  ; void Clear (Option_t *opt="""");  ; Int_t GetBufSize ();  ; TClonesArray * GetCA ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrHitBuffer.html:82,Load,Loading,82,doc/master/classTUsrHitBuffer.html,https://root.cern,https://root.cern/doc/master/classTUsrHitBuffer.html,1,['Load'],['Loading']
Performance,". ROOT: TUsrSevtData1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TUsrSevtData1 Class Reference. . Definition at line 63 of file clonesA_Event.h. Public Member Functions;  TUsrSevtData1 ();  ; virtual ~TUsrSevtData1 ();  ; Int_t GetPileup ();  ; virtual TClass * IsA () const;  ; void SetEvent (Int_t ev);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMrbSubevent_Caen;  TMrbSubevent_Caen ();  ; virtual ~TMrbSubevent_Caen ();  ; void Clear (Option_t *="""");  ; TUsrHitBuffer * GetHitBuffer ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrSevtData1.html:82,Load,Loading,82,doc/master/classTUsrSevtData1.html,https://root.cern,https://root.cern/doc/master/classTUsrSevtData1.html,1,['Load'],['Loading']
Performance,". ROOT: TUsrSevtData2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TUsrSevtData2 Class Reference. . Definition at line 80 of file clonesA_Event.h. Public Member Functions;  TUsrSevtData2 ();  ; virtual ~TUsrSevtData2 ();  ; Int_t GetPileup ();  ; virtual TClass * IsA () const;  ; void SetEvent (Int_t ev);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMrbSubevent_Caen;  TMrbSubevent_Caen ();  ; virtual ~TMrbSubevent_Caen ();  ; void Clear (Option_t *="""");  ; TUsrHitBuffer * GetHitBuffer ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrSevtData2.html:82,Load,Loading,82,doc/master/classTUsrSevtData2.html,https://root.cern,https://root.cern/doc/master/classTUsrSevtData2.html,1,['Load'],['Loading']
Performance,". ROOT: TVector2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TVector2 Class ReferenceMath » Legacy Physics Classes. ; AttentionTVector2 is a legacy class. It is slower and worse for serialization than the recommended superior alternative ROOT::Math::XYVector.; More details can be found in the documentation of the Physics Vectors package. . TVector2 is a general two vector class, which can be used for the description of different vectors in 2D. ; Definition at line 18 of file TVector2.h. Public Types; typedef Double_t Scalar;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVector2 ();  Constructor. ;  ;  TVector2 (const TVector2 &)=default;  ;  TVector2 (Double_t *s);  Constructor. ;  ;  TVector2 (Double_t x0, Double_t y0);  Constructor. ;  ;  ~TVector2 () override;  ; Double_t DeltaPhi (const TVector2 &v) const;  ; TClass * IsA () const override;  ; Double_t Mod () const;  Return modulo of this vector. ;  ; Double_t Mod2 () const;  ; TVector2 Norm (const TVector2 &v) const;  ; TVector2 & operator*= (Double_t s);  ; Double_t operator*= (TVector2 const &v);  ; TVector2 & operator+= (TVector2 const &v);  ; TVector2 & operator-= (TVector2 const &v);  ; TVe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVector2.html:77,Load,Loading,77,doc/master/classTVector2.html,https://root.cern,https://root.cern/doc/master/classTVector2.html,1,['Load'],['Loading']
Performance,". ROOT: TVector3 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Friends |; List of all members ; TVector3 Class ReferenceMath » Legacy Physics Classes. ; AttentionTVector3 is a legacy class. It is slower and worse for serialization than the recommended superior alternative ROOT::Math::XYZVector.; More details can be found in the documentation of the Physics Vectors package. . TVector3 is a general three vector class, which can be used for the description of different vectors in 3D. Declaration / Access to the components; TVector3 has been implemented as a vector of three Double_t variables, representing the cartesian coordinates. By default all components are initialized to zero:; TVector3 v1; // v1 = (0,0,0); TVector3 v3(1,2,3); // v3 = (1,2,3); TVector3 v4(v2); // v4 = v2; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; It is also possible (but not recommended) to initialize a TVector3 with a Double_t or Float_t C array.; You can get the basic components either by name or by index using operator():; xx = v1.X(); or xx = v1(0);; yy = v1.Y(); yy = v1(1);; zz = v1.Z(); zz = v1(2);; The member functions SetX(), SetY(), SetZ() and SetXYZ() allow to set the components:; v1.SetX(1.); v1.SetY(2.); v1.SetZ(3.);; v1.SetXYZ(1.,2.,3.);. Non-cartesian coordinates; To get information on the TVector3 in spherical (rho,phi,theta) or cylindrical (z,r,theta) coordinates, the; the member functions Mag() (=magnitude=rho in spherical coordinates), Mag2(), Theta(), CosTheta(), Phi(), Perp() (the transverse component=r in cylindrical coordinates), Perp2() can be used:; Double_t m = v.Mag(); // get magnitude (=rho=Sqrt(x*x+y*y+z*z))); Double_t m2 = v.Mag2(); // get ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVector3.html:77,Load,Loading,77,doc/master/classTVector3.html,https://root.cern,https://root.cern/doc/master/classTVector3.html,1,['Load'],['Loading']
Performance,". ROOT: TVectorT< Element > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; List of all members ; TVectorT< Element > Class Template ReferenceMath » Matrix Linear Algebra. ; template<class Element>; class TVectorT< Element >TVectorT. ; Template class of Vectors in the linear algebra package.; See the Matrix Linear Algebra page for the documentation of the linear algebra package; Unless otherwise specified, vector indices always start with 0, spanning up to the specified limit-1.; For (n) vectors where n <= kSizeMax (5 currently) storage space is available on the stack, thus avoiding expensive allocation/ deallocation of heap space . However, this introduces of course kSizeMax overhead for each vector object . If this is an issue recompile with a new appropriate value (>=0) for kSizeMax; Another way to assign and store vector data is through Use see for instance stressLinear.cxx file .; Note that Constructors/assignments exists for all different matrix views; For usage examples see $ROOTSYS/test/stressLinear.cxx ; Definition at line 27 of file TVectorT.h. Public Member Functions;  TVectorT ();  ;  TVectorT (const TMatrixTColumn_const< Element > &mc);  Constructor : create vector from matrix column. ;  ;  TVectorT (const TMatrixTDiag_const< Element > &md);  Constructor : create vector from matrix diagonal. ;  ;  TVectorT (const TMatrixTRow_const< Element > &mr);  Constructor : create vector from matrix row. ;  ;  TVectorT (const TVectorT< Element > &another);  Copy constructor. ;  ; template<class Element2 > ;  TVectorT (const TVectorT< Element2 > &another);  ;  TVectorT (Int_t lwb, Int_t upb);  Constructor [lwb..upb]-vector. ;  ;  TVectorT (Int_t lwb, Int_t upb, const Element *elements);  Constructor [lwb..upb]-vector with data copied from array elements. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVectorT.html:97,Load,Loading,97,doc/master/classTVectorT.html,https://root.cern,https://root.cern/doc/master/classTVectorT.html,1,['Load'],['Loading']
Performance,". ROOT: TView Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TView Class ReferenceabstractGraphics » 2D Graphics » Graphics pad. ; See TView3D. ; Definition at line 25 of file TView.h. Public Member Functions;  TView ();  ;  ~TView () override=default;  ; virtual void AdjustScales (TVirtualPad *pad=nullptr)=0;  ; virtual void AxisVertex (Double_t ang, Double_t *av, Int_t &ix1, Int_t &ix2, Int_t &iy1, Int_t &iy2, Int_t &iz1, Int_t &iz2)=0;  ; virtual void Centered ()=0;  ; virtual void Centered3DImages (TVirtualPad *pad=nullptr)=0;  ; virtual void DefinePerspectiveView ()=0;  ; virtual void DefineViewDirection (const Double_t *s, const Double_t *c, Double_t cosphi, Double_t sinphi, Double_t costhe, Double_t sinthe, Double_t cospsi, Double_t sinpsi, Double_t *tnorm, Double_t *tback)=0;  ; virtual void DrawOutlineCube (TList *outline, Double_t *rmin, Double_t *rmax)=0;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override=0;  Execute action corresponding to an event at (px,py). ;  ; virtual void ExecuteRotateView (Int_t event, Int_t px, Int_t py)=0;  ; virtual void FindNormal (Double_t x, Double_t y, Double_t z, Double_t &zn)=0;  ; virtual void FindPhiSectors (Int_t iopt, Int_t &kphi, Double_t *aphi, Int_t &iphi1, Int_t &iphi2)=0;  ; virtual void FindScope (Double_t *scale, Double_t *center, Int_t &irep)=0;  ; virtual void FindThetaSectors (Int_t iopt, Double_t phi, Int_t &kth, Double_t *ath, Int_t &ith1, Int_t &ith2)=0;  ; virtual void Front ()=0;  ; virtual void FrontView (TVirtualPad *pad=nullptr)=0;  ; virtual Bool_t GetAutoRange ()=0;  ; virtual Int_t GetDistancetoAxis (Int_t axis, Int_t px, Int_t py, Double_t &ratio)=0;  ; virtual Double_t GetDproj () const =0;  ; virtual Double_t GetDview () const =0;  ; virtual Double_t GetExtent () const =0;  ; virtual Double_t GetLatitude ()=0;  ; virtual Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView.html:74,Load,Loading,74,doc/master/classTView.html,https://root.cern,https://root.cern/doc/master/classTView.html,1,['Load'],['Loading']
Performance,". ROOT: TView3D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TView3D Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; The 3D view class. ; This package was originally written by Evgueni Tcherniaev from IHEP/Protvino.; The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and Evgueni Tcherniaev.; This View class is a subset of the original system. It has been converted to a C++ class by Rene Brun.; TView3D creates a 3-D view in the current pad. In this 3D view Lego and Surface plots can be drawn and also 3D polyline and markers. Most of the time a TView3D is created automatically when a 3D object needs to be painted in a pad (for instance a Lego or a Surface plot).; In some case a TView3D should be explicitly. For instance to paint a 3D simple scene composed of simple objects like polylines and polymarkers. The following macro gives an example:; {; auto cV3D = new TCanvas(""cV3D"",""PolyLine3D & PolyMarker3D Window"",200,10,500,500);; ; // Creating a view; TView3D *view = (TView3D*) TView::CreateView(1);; view->SetRange(5,5,5,25,25,25);; ; // Create a first PolyLine3D; TPolyLine3D *pl3d1 = new TPolyLine3D(6);; pl3d1->SetPoint(0, 10, 20, 10);; pl3d1->SetPoint(1, 15, 15, 15);; pl3d1->SetPoint(2, 20, 20, 20);; pl3d1->SetPoint(3, 20, 10, 20);; pl3d1->SetPoint(4, 10, 10, 20);; pl3d1->SetPoint(5, 10, 10, 10);; ; // Create a first PolyMarker3D; TPolyMarker3D *pm3d1 = new TPolyMarker3D(9);; pm3d1->SetPoint( 0, 10, 10, 10);; pm3d1->SetPoint( 1, 20, 20, 20);; pm3d1->SetPoint( 2, 10, 20, 20);; pm3d1->SetPoint( 3, 10, 10, 20);; pm3d1->SetPoint( 4, 20, 20, 10);; pm3d1->SetPoint( 5, 20, 10, 10);; pm3d1->SetPoint( 6, 20, 10, 20);; pm3d1->SetPoint( 7, 10, 20, 10);; pm3d1->SetPoint( 8, 15, 15, 15);; pm3d1->SetMarkerSize(2);; pm3d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView3D.html:76,Load,Loading,76,doc/master/classTView3D.html,https://root.cern,https://root.cern/doc/master/classTView3D.html,1,['Load'],['Loading']
Performance,". ROOT: TViewPubDataMembers Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TViewPubDataMembers Class Reference. ; View implementing the TList interface and giving access all the TDictionary describing public data members in a class and all its base classes without caching any of the TDictionary pointers. ; Adding to this collection directly is prohibited. Iteration can only be done via the TIterator interfaces. ; Definition at line 28 of file TViewPubDataMembers.h. Public Member Functions;  TViewPubDataMembers (TClass *cl=nullptr);  Usual constructor. ;  ; virtual ~TViewPubDataMembers ();  Default destructor. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * FindObject (const char *name) const override;  Find an object in this list using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this list using the object's IsEqual() member function. ;  ; virtual const TList * GetListOfClasses () const;  ; Int_t GetSize () const override;  Return the total number of public data members(currently loaded in the list; of DataMembers) in this class and all its base classes. ;  ; void Load ();  Load all the DataMembers known to the interpreter for the scope 'fClass' and all its bases classes. ;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TClass * IsA () const override;  ; Bool_t IsAscending ();  ; TObject * Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewPubDataMembers.html:88,Load,Loading,88,doc/master/classTViewPubDataMembers.html,https://root.cern,https://root.cern/doc/master/classTViewPubDataMembers.html,1,['Load'],['Loading']
Performance,". ROOT: TViewPubFunctions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TViewPubFunctions Class Reference. ; View implementing the TList interface and giving access all the TFunction describing public methods in a class and all its base classes without caching any of the TFunction pointers. ; Adding to this collection directly is prohibited. Iteration can only be done via the TIterator interfaces. ; Definition at line 28 of file TViewPubFunctions.h. Public Member Functions;  TViewPubFunctions (TClass *cl=nullptr);  Usual constructor. ;  ; virtual ~TViewPubFunctions ();  Default destructor. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * FindObject (const char *name) const override;  Find an object in this list using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this list using the object's IsEqual() member function. ;  ; virtual const TList * GetListOfClasses () const;  ; Int_t GetSize () const override;  Return the total number of public methods (currently loaded in the list of functions) in this class and all its base classes. ;  ; void Load ();  Load all the functions known to the interpreter for the scope 'fClass' and all its bases classes. ;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; TClass * IsA () const override;  ; Bool_t IsAscending ();  ; TObject * Remove (const TObjLinkPtr_t &l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewPubFunctions.html:86,Load,Loading,86,doc/master/classTViewPubFunctions.html,https://root.cern,https://root.cern/doc/master/classTViewPubFunctions.html,1,['Load'],['Loading']
Performance,". ROOT: TViewTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TViewTimer Class Reference. . Definition at line 145 of file TGTextView.h. Public Member Functions;  TViewTimer (TGView *t, Long_t ms);  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewTimer.html:79,Load,Loading,79,doc/master/classTViewTimer.html,https://root.cern,https://root.cern/doc/master/classTViewTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TViewUpdateTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TViewUpdateTimer Class Reference. . Definition at line 66 of file TGFSContainer.cxx. Public Member Functions;  TViewUpdateTimer (TGFileContainer *t, Long_t ms);  ; Bool_t Notify () override;  Reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewUpdateTimer.html:85,Load,Loading,85,doc/master/classTViewUpdateTimer.html,https://root.cern,https://root.cern/doc/master/classTViewUpdateTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TViewer3DPad Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TViewer3DPad Class ReferenceGraphics » 2D Graphics » Graphics pad. ; Provides 3D viewer interface (TVirtualViewer3D) support on a pad. ; Will be merged with TView / TView3D eventually. ; Definition at line 19 of file TViewer3DPad.h. Public Member Functions;  TViewer3DPad (TVirtualPad &pad);  ;  ~TViewer3DPad () override;  ; void AddCompositeOp (UInt_t operation) override;  ; Int_t AddObject (const TBuffer3D &buffer, Bool_t *addChildren=nullptr) override;  Add an 3D object described by the buffer to the viewer. ;  ; Int_t AddObject (UInt_t placedID, const TBuffer3D &buffer, Bool_t *addChildren=nullptr) override;  We don't support placed ID shapes - ID is discarded. ;  ; void BeginScene () override;  Open a scene on the viewer. ;  ; Bool_t BuildingScene () const override;  ; void CloseComposite () override;  ; void EndScene () override;  Close the scene on the viewer. ;  ; TClass * IsA () const override;  ; Bool_t OpenComposite (const TBuffer3D &buffer, Bool_t *addChildren=nullptr) override;  Composite shapes not supported on this viewer currently - ignore. ;  ; Bool_t PreferLocalFrame () const override;  Indicates if we prefer positions in local frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualViewer3D; virtual ~TVirtualViewer3D ();  ; virtual Bool_t CanLoopOnPrimitives () const;  ; virtual void DrawViewer ();  ; TClass * IsA () const override;  ; virtual void ObjectPaint (TObject *, Option_t *="""");  ; virtual void PadPaint (TVirtualPad *);  ; virtual void PrintObjects ();  ; virtual void ResetCameras ();  ; virtual void ResetCamerasAfterNextUpdate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewer3DPad.html:81,Load,Loading,81,doc/master/classTViewer3DPad.html,https://root.cern,https://root.cern/doc/master/classTViewer3DPad.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualArray Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; TVirtualArray Class ReferenceInput/Output Library. ; Wrapper around an object and giving indirect access to its content even if the object is not of a class in the Cint/Reflex dictionary. ; Definition at line 27 of file TVirtualArray.h. Public Types; using ObjectPtr = TClass::ObjectPtr;  . Public Member Functions;  TVirtualArray (TClass *cl, UInt_t size);  ;  ~TVirtualArray ();  ; TClass * GetClass ();  ; char * GetObjectAt (UInt_t ind) const;  ; char * operator[] (UInt_t ind) const;  ; void SetSize (UInt_t size);  . Public Attributes; ObjectPtr fArray;  fSize elements ;  ; UInt_t fCapacity;  ; TClassRef fClass;  ; UInt_t fSize;  . #include <TVirtualArray.h>; Member Typedef Documentation. ◆ ObjectPtr. using TVirtualArray::ObjectPtr = TClass::ObjectPtr. Definition at line 29 of file TVirtualArray.h. Constructor & Destructor Documentation. ◆ TVirtualArray(). TVirtualArray::TVirtualArray ; (; TClass * ; cl, . UInt_t ; size . ). inline . Definition at line 36 of file TVirtualArray.h. ◆ ~TVirtualArray(). TVirtualArray::~TVirtualArray ; (; ). inline . Definition at line 37 of file TVirtualArray.h. Member Function Documentation. ◆ GetClass(). TClass * TVirtualArray::GetClass ; (; ). inline . Definition at line 39 of file TVirtualArray.h. ◆ GetObjectAt(). char * TVirtualArray::GetObjectAt ; (; UInt_t ; ind); const. inline . Definition at line 41 of file TVirtualArray.h. ◆ operator[](). char * TVirtualArray::operator[] ; (; UInt_t ; ind); const. inline . Definition at line 40 of file TVirtualArray.h. ◆ SetSize(). void TVirtualArray::SetSize ; (; UInt_t ; size). inline . Definition at line 43 of file TVirtualArray.h. Member Data Documentation. ◆ fArray. ObjectPtr TVirtualArray::fArray. fSize elements ; Definition at line 34 of file TVirtualArray.h. ◆ f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualArray.html:82,Load,Loading,82,doc/master/classTVirtualArray.html,https://root.cern,https://root.cern/doc/master/classTVirtualArray.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualBranchBrowsable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TVirtualBranchBrowsable Class ReferenceTree Library. ; TVirtualBranchBrowsable is a base class (not really abstract, but useless by itself) for helper objects that extend TBranch's browsing support. ; Each registered derived class's generator method is called, which fills all created helper objects into a list which can then be browsed. For details of what these browser helper objects can do, see e.g. TMethodBrowsable, which allows methods to show up in the TBrowser.; Only registered helper objects are created. By default, only TMethodBrowsable, TNonSplitBrowsable, and TCollectionPropertyBrowsable are registered (see RegisterDefaultGenerators). You can prevent any of their objects to show up in the browser by unregistering the generator: TMethodBrowsable::Unregister(); TMethodBrowsable::Unregisterstatic void Unregister()Wrapper for the registration method.Definition TBranchBrowsable.cxx:595; will stop creating browsable method helper objects from that call on. Note that these helper objects are cached (in TBranch::fBrowsables); already created (and thus cached) browsables will still appear in the browser even after unregistering the corresponding generator.; You can implement your own browsable objects and their generator; see e.g. the simple TCollectionPropertyBrowsable. Note that you will have to register your generator just like any other, and that you should implement the following methods for your own class, mainly for consistency reasons: static void Register() {; TVirtualBranchBrowsable::RegisterGenerator(GetBrowsables); }; static void Unregister() {; TVirtualBra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualBranchBrowsable.html:92,Load,Loading,92,doc/master/classTVirtualBranchBrowsable.html,https://root.cern,https://root.cern/doc/master/classTVirtualBranchBrowsable.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualCollectionIterators Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TVirtualCollectionIterators Class ReferenceInput/Output Library. ; Small helper class to generically acquire and release iterators. ; Definition at line 25 of file TVirtualCollectionIterators.h. Public Types; typedef TVirtualCollectionProxy::CreateIterators_t CreateIterators_t;  ; typedef TVirtualCollectionProxy::DeleteTwoIterators_t DeleteTwoIterators_t;  . Public Member Functions;  TVirtualCollectionIterators (CreateIterators_t creator, DeleteTwoIterators_t destruct);  ;  TVirtualCollectionIterators (TVirtualCollectionProxy *proxy, Bool_t read_from_file=kTRUE);  ;  ~TVirtualCollectionIterators ();  ; void CreateIterators (void *collection, TVirtualCollectionProxy *proxy);  . Public Attributes; void * fBegin;  ; char fBeginBuffer [TVirtualCollectionProxy::fgIteratorArenaSize];  ; CreateIterators_t fCreateIterators;  ; DeleteTwoIterators_t fDeleteTwoIterators;  ; void * fEnd;  ; char fEndBuffer [TVirtualCollectionProxy::fgIteratorArenaSize];  . Private Member Functions;  TVirtualCollectionIterators ()=delete;  ;  TVirtualCollectionIterators (const TVirtualCollectionIterators &)=delete;  . #include <TVirtualCollectionIterators.h>; Member Typedef Documentation. ◆ CreateIterators_t. typedef TVirtualCollectionProxy::CreateIterators_t TVirtualCollectionIterators::CreateIterators_t. Definition at line 36 of file TVirtualCollectionIterators.h. ◆ DeleteTwoIterators_t. typedef TVirtualCollectionProxy::DeleteTwoIterators_t TVirtualCollectionIterators::DeleteTwoIterators_t. Definition at line 37 of file TVirtualCollectionIterators.h. Constructor & Destructor Documentation. ◆ TVirtualCollectionIterators() [1/4]. TVirtualCollectionIterators::TVirtualCollectionIterators ; (; ). privatedelete . ◆ TVirtualCollectionI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualCollectionIterators.html:96,Load,Loading,96,doc/master/classTVirtualCollectionIterators.html,https://root.cern,https://root.cern/doc/master/classTVirtualCollectionIterators.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualCollectionProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Attributes |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TVirtualCollectionProxy Class Referenceabstract. ; Defines a common interface to inspect/change the contents of an object that represents a collection. ; Specifically, an object of a class that derives from TVirtualCollectionProxy relays accesses to any object that matches the proxied collection type. The interface provides two families of functions: (i) for direct manipulation, e.g. Insert() or At(); and (ii) iterator-based, e.g. GetFunctionCreateIterators() or GetFunctionNext(). TVirtualCollectionProxy objects are stateful; in particular, many functions require to set the object to operate on via PushProxy() / PopProxy(). The TPushPop RAII class is provided for convenience. A collection proxy for a given class can be permanently set using TClass::CopyCollectionProxy(). The Generate() function should be overridden in derived classes to return a clean object of the most-derived class. ; Definition at line 52 of file TVirtualCollectionProxy.h. Classes; class  TPushPop;  RAII helper class that ensures that PushProxy() / PopProxy() are called when entering / leaving a C++ context. More...;  . Public Types; typedef void *(* CopyIterator_t) (void *dest, const void *source);  Copy the iterator source into dest. ;  ; typedef void(* CreateIterators_t) (void *collection, void **begin_arena, void **end_arena, TVirtualCollectionProxy *proxy);  *begin_arena and *end_arena should contain the location of a memory arena of size fgIteratorArenaSize. ;  ; typedef void(* DeleteIterator_t) (void *iter);  If the size of the iterator is greater than fgIteratorArenaSize, call delete on the addresses; otherwise, just call the iterator's destructor. ;  ; typedef void(* DeleteT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualCollectionProxy.html:92,Load,Loading,92,doc/master/classTVirtualCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTVirtualCollectionProxy.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualCollectionProxy::TPushPop Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TVirtualCollectionProxy::TPushPop Class Reference. ; RAII helper class that ensures that PushProxy() / PopProxy() are called when entering / leaving a C++ context. ; Definition at line 75 of file TVirtualCollectionProxy.h. Public Member Functions;  TPushPop (TVirtualCollectionProxy *proxy, void *objectstart);  ;  ~TPushPop ();  . Public Attributes; TVirtualCollectionProxy * fProxy;  . Private Member Functions;  TPushPop (const TPushPop &)=delete;  ; TPushPop & operator= (const TPushPop &)=delete;  . #include <TVirtualCollectionProxy.h>; Constructor & Destructor Documentation. ◆ TPushPop() [1/2]. TVirtualCollectionProxy::TPushPop::TPushPop ; (; TVirtualCollectionProxy * ; proxy, . void * ; objectstart . ). inline . Definition at line 78 of file TVirtualCollectionProxy.h. ◆ ~TPushPop(). TVirtualCollectionProxy::TPushPop::~TPushPop ; (; ). inline . Definition at line 80 of file TVirtualCollectionProxy.h. ◆ TPushPop() [2/2]. TVirtualCollectionProxy::TPushPop::TPushPop ; (; const TPushPop & ; ). privatedelete . Member Function Documentation. ◆ operator=(). TPushPop & TVirtualCollectionProxy::TPushPop::operator= ; (; const TPushPop & ; ). privatedelete . Member Data Documentation. ◆ fProxy. TVirtualCollectionProxy* TVirtualCollectionProxy::TPushPop::fProxy. Definition at line 77 of file TVirtualCollectionProxy.h. Libraries for TVirtualCollectionProxy::TPushPop:. [legend]; The documentation for this class was generated from the following file:; core/cont/inc/TVirtualCollectionProxy.h. TVirtualCollectionProxyTPushPop. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:44 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualCollectionProxy_1_1TPushPop.html:102,Load,Loading,102,doc/master/classTVirtualCollectionProxy_1_1TPushPop.html,https://root.cern,https://root.cern/doc/master/classTVirtualCollectionProxy_1_1TPushPop.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualCollectionPtrIterators Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TVirtualCollectionPtrIterators Class ReferenceInput/Output Library. . Definition at line 194 of file TVirtualCollectionIterators.h. Classes; struct  TInternalIterator;  . Public Types; typedef TVirtualCollectionProxy::CopyIterator_t Copy_t;  ; typedef TVirtualCollectionProxy::CreateIterators_t CreateIterators_t;  ; typedef TVirtualCollectionProxy::DeleteIterator_t Delete_t;  ; typedef TVirtualCollectionProxy::DeleteTwoIterators_t DeleteTwoIterators_t;  ; typedef TVirtualCollectionProxy::Next_t Next_t;  . Public Member Functions;  TVirtualCollectionPtrIterators (TVirtualCollectionProxy *proxy);  ;  ~TVirtualCollectionPtrIterators ();  ; void CreateIterators (void *collection, TVirtualCollectionProxy *proxy);  . Static Public Member Functions; static void * CopyIterator (void *dest, const void *source);  ; static void DeleteIterator (void *iter);  ; static void * Next (void *iter, const void *end);  . Public Attributes; void * fBegin;  ; void * fEnd;  . Private Member Functions;  TVirtualCollectionPtrIterators ();  ;  TVirtualCollectionPtrIterators (const TVirtualCollectionPtrIterators &);  . Private Attributes; Bool_t fAllocated;  ; TInternalIterator fBeginBuffer;  ; CreateIterators_t fCreateIterators;  ; DeleteTwoIterators_t fDeleteTwoIterators;  ; TInternalIterator fEndBuffer;  ; char fRawBeginBuffer [TVirtualCollectionProxy::fgIteratorArenaSize];  ; char fRawEndBuffer [TVirtualCollectionProxy::fgIteratorArenaSize];  . #include <TVirtualCollectionIterators.h>; Member Typedef Documentation. ◆ Copy_t. typedef TVirtualCollectionProxy::CopyIterator_t TVirtualCollectionPtrIterators::Copy_t. Definition at line 198 of file TVirtualCollect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualCollectionPtrIterators.html:99,Load,Loading,99,doc/master/classTVirtualCollectionPtrIterators.html,https://root.cern,https://root.cern/doc/master/classTVirtualCollectionPtrIterators.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualFFT Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Protected Attributes |; List of all members ; TVirtualFFT Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; TVirtualFFT is an interface class for Fast Fourier Transforms. ; The default FFT library is FFTW. To use it, FFTW3 library should already be installed, and ROOT should be have fftw3 module enabled, with the directories of fftw3 include file and library specified (see installation instructions). Function SetDefaultFFT() allows to change the default library. Available transform types:; FFT:; ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT) in one or more dimensions, -1 in the exponent; ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT) in one or more dimensions, +1 in the exponent; ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT) in one or more dimensions,; ""C2R"" - inverse transforms to ""R2C"", taking complex input (storing the non-redundant half of a logically Hermitian array) to real output; ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format, i.e. real and imaginary parts for a transform of size n stored as r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; ""HC2R"" - computes the reverse of FFTW_R2HC, above; ""DHT"" - computes a discrete Hartley transform. Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static function. 4 different kinds of sine and cosine transforms are available. DCT-I (REDFT00 in FFTW3 notation)- kind=0; DCT-II (REDFT01 in FFTW3 notation)- kind=1; DCT-III(REDFT10 in FFTW3 notation)- kind=2; DCT-IV (REDFT11 in FFTW3 notation)- kind=3; DST-I (RODFT00 in FFTW3 notation)- kind=4; DST-II (RODFT01 in FFTW3 notation)- kind=5; DST-III(RODFT10 in FFTW3 notation)- kind=6; DST-IV (RODFT11 in FFTW3 notation)- ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualFFT.html:80,Load,Loading,80,doc/master/classTVirtualFFT.html,https://root.cern,https://root.cern/doc/master/classTVirtualFFT.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualFitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TVirtualFitter Class ReferenceabstractHistogram Library. ; Abstract Base Class for Fitting. ; Definition at line 29 of file TVirtualFitter.h. Public Types; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVirtualFitter ();  Default constructor. ;  ;  ~TVirtualFitter () override;  Cleanup virtual fitter. ;  ; virtual Double_t Chisquare (Int_t npar, Double_t *params) const =0;  ; void Clear (Option_t *option="""") override=0;  Set name and title to empty strings (""""). ;  ; virtual Int_t ExecuteCommand (const char *command, Double_t *args, Int_t nargs)=0;  ; virtual void FixParameter (Int_t ipar)=0;  ; virtual void GetConfidenceIntervals (Int_t n, Int_t ndim, const Double_t *x, Double_t *ci, Double_t cl=0.95);  return confidence intervals in array x of dimension ndim implemented in TFitter and TLinearFitter ;  ; virtual void GetConfidenceIntervals (TObject *obj, Double_t cl=0.95);  return confidence intervals in TObject obj implemented in TFitter and TLinearFitter ;  ; virtual Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualFitter.html:83,Load,Loading,83,doc/master/classTVirtualFitter.html,https://root.cern,https://root.cern/doc/master/classTVirtualFitter.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualGeoConverter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TVirtualGeoConverter Class ReferenceThe Geometry Package » Geometry classes. ; Abstract class for geometry converters. ; Definition at line 18 of file TVirtualGeoConverter.h. Public Member Functions;  TVirtualGeoConverter (TGeoManager *geom);  Geometry converter default constructor. ;  ;  ~TVirtualGeoConverter () override;  Geometry converter default destructor. ;  ; virtual void ConvertGeometry ();  ; TClass * IsA () const override;  ; void SetGeometry (TGeoManager *geom);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoConverter.html:89,Load,Loading,89,doc/master/classTVirtualGeoConverter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoConverter.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualGeoPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Protected Attributes |; List of all members ; TVirtualGeoPainter Class ReferenceabstractThe Geometry Package » Geometry classes. ; Abstract class for geometry painters. ; Definition at line 32 of file TVirtualGeoPainter.h. Public Types; enum  EGeoBombOption { kGeoNoBomb = 0; , kGeoBombXYZ = 1; , kGeoBombCyl = 2; , kGeoBombSph = 3; };  ; enum  EGeoVisLevel { kGeoVisLevel = 0; };  ; enum  EGeoVisOption { ;   kGeoVisDefault = 0; , kGeoVisLeaves = 1; , kGeoVisOnly = 2; , kGeoVisBranch = 3; , ;   kGeoVisChanged = 4. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVirtualGeoPainter (TGeoManager *manager);  Geometry painter default constructor. ;  ;  ~TVirtualGeoPainter () override;  Geometry painter default destructor. ;  ; virtual void AddSize3D (Int_t numpoints, Int_t numsegs, Int_t numpolys)=0;  ; virtual TVirtualGeoTrack * AddTrack (Int_t id, Int_t pdgcode, TObject *particle)=0;  ; virtual void AddTrackPoint (Double_t *point, Double_t *box, Bool_t reset=kFALSE)=0;  ; virtual void BombTranslation (const Double_t *tr, Double_t *bombtr)=0;  ; virtual void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.)=0;  ; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoPainter.html:87,Load,Loading,87,doc/master/classTVirtualGeoPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoPainter.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualGeoTrack Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TVirtualGeoTrack Class ReferenceabstractThe Geometry Package » Geometry classes. ; Base class for user-defined tracks attached to a geometry. ; Tracks are 3D objects made of points and they store a pointer to a TParticle. The geometry manager holds a list of all tracks that will be deleted on destruction of gGeoManager. ; Definition at line 23 of file TVirtualGeoTrack.h. Public Member Functions;  TVirtualGeoTrack ();  Virtual tracks default constructor. ;  ;  TVirtualGeoTrack (Int_t id, Int_t pdgcode, TVirtualGeoTrack *parent=nullptr, TObject *particle=nullptr);  Constructor providing ID for parent track (-1 for primaries), ID of this track and related particle pointer. ;  ;  ~TVirtualGeoTrack () override;  Destructor. ;  ; virtual TVirtualGeoTrack * AddDaughter (Int_t id, Int_t pdgcode, TObject *particle=nullptr)=0;  ; virtual Int_t AddDaughter (TVirtualGeoTrack *other)=0;  ; virtual void AddPoint (Double_t x, Double_t y, Double_t z, Double_t t)=0;  ; virtual TVirtualGeoTrack * FindTrackWithId (Int_t id) const;  Recursively search through this track for a daughter particle (at any depth) with the specified id. ;  ; TVirtualGeoTrack * GetDaughter (Int_t index) const;  ; virtual Int_t GetDaughterId (Int_t index) const;  Returns daughter id. ;  ; const Double_t * GetFirstPoint () const;  ; Int_t GetId () const;  ; const Double_t * GetLastPoint () const;  ; Int_t GetLastPoint (Double_t &x, Double_t &y, Double_t &z, Double_t &t) const;  ; TVirtualGeoTrack * GetMother () const;  ; TObject * GetMotherParticle () const;  ; const char * GetName () const override;  Get the PDG name. ;  ; Int_t GetNdaughters () const;  ; virtual Int_t GetNpoints () const =0;  ; Int_t GetParentId () const;  ; TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoTrack.html:85,Load,Loading,85,doc/master/classTVirtualGeoTrack.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoTrack.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualGraphPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Private Attributes |; List of all members ; TVirtualGraphPainter Class ReferenceabstractHistogram Library » Painting classes » Histograms and graphs painting classes. ; Abstract interface to a histogram painter. ; Definition at line 28 of file TVirtualGraphPainter.h. Public Member Functions;  TVirtualGraphPainter ();  ;  ~TVirtualGraphPainter () override;  ; virtual Int_t DistancetoPrimitiveHelper (TGraph *theGraph, Int_t px, Int_t py)=0;  ; virtual void DrawPanelHelper (TGraph *theGraph)=0;  ; virtual void ExecuteEventHelper (TGraph *theGraph, Int_t event, Int_t px, Int_t py)=0;  ; virtual char * GetObjectInfoHelper (TGraph *theGraph, Int_t px, Int_t py) const =0;  ; TClass * IsA () const override;  ; virtual void PaintGraph (TGraph *theGraph, Int_t npoints, const Double_t *x, const Double_t *y, Option_t *chopt)=0;  ; virtual void PaintGrapHist (TGraph *theGraph, Int_t npoints, const Double_t *x, const Double_t *y, Option_t *chopt)=0;  ; virtual void PaintHelper (TGraph *theGraph, Option_t *option)=0;  ; virtual void PaintScatter (TScatter *theScatter, Option_t *option)=0;  ; virtual void PaintStats (TGraph *theGraph, TF1 *fit)=0;  ; virtual void SetHighlight (TGraph *theGraph)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGraphPainter.html:89,Load,Loading,89,doc/master/classTVirtualGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGraphPainter.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualHistPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Private Attributes |; List of all members ; TVirtualHistPainter Class ReferenceabstractHistogram Library » Painting classes » Histograms and graphs painting classes. ; Abstract interface to a histogram painter. ; Definition at line 30 of file TVirtualHistPainter.h. Public Member Functions;  TVirtualHistPainter ();  ;  ~TVirtualHistPainter () override;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override=0;  Computes distance from point (px,py) to the object. ;  ; virtual void DrawPanel ()=0;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override=0;  Execute action corresponding to an event at (px,py). ;  ; virtual TList * GetContourList (Double_t contour) const =0;  ; char * GetObjectInfo (Int_t px, Int_t py) const override=0;  Returns string containing info about the object at position (px,py). ;  ; virtual TList * GetStack () const =0;  ; TClass * IsA () const override;  ; virtual Bool_t IsInside (Double_t x, Double_t y)=0;  ; virtual Bool_t IsInside (Int_t x, Int_t y)=0;  ; virtual Int_t MakeCuts (char *cutsopt)=0;  ; void Paint (Option_t *option="""") override=0;  This method must be overridden if a class wants to paint itself. ;  ; virtual void PaintStat (Int_t dostat, TF1 *fit)=0;  ; virtual void ProcessMessage (const char *mess, const TObject *obj)=0;  ; virtual void SetHighlight ()=0;  ; virtual void SetHistogram (TH1 *h)=0;  ; virtual void SetShowProjection (const char *option, Int_t nbins)=0;  ; virtual void SetShowProjectionXY (const char *option, Int_t nbinsY, Int_t nbinsX)=0;  ; virtual void SetStack (TList *stack)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualHistPainter.html:88,Load,Loading,88,doc/master/classTVirtualHistPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualHistPainter.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualIndex Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TVirtualIndex Class ReferenceabstractTree Library. ; Abstract interface for Tree Index. ; Definition at line 30 of file TVirtualIndex.h. Public Member Functions;  TVirtualIndex ();  pointer to Tree ;  ;  ~TVirtualIndex () override;  ; virtual void Append (const TVirtualIndex *, bool delaySort=false)=0;  ; virtual Long64_t GetEntryNumberFriend (const TTree *)=0;  ; virtual Long64_t GetEntryNumberWithBestIndex (Long64_t major, Long64_t minor) const =0;  ; virtual Long64_t GetEntryNumberWithIndex (Long64_t major, Long64_t minor) const =0;  ; virtual const char * GetMajorName () const =0;  ; virtual const char * GetMinorName () const =0;  ; virtual Long64_t GetN () const =0;  ; virtual TTree * GetTree () const;  ; TClass * IsA () const override;  ; virtual bool IsValidFor (const TTree *parent)=0;  ; virtual void SetTree (TTree *T)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UpdateFormulaLeaves (const TTree *parent)=0;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualIndex.html:82,Load,Loading,82,doc/master/classTVirtualIndex.html,https://root.cern,https://root.cern/doc/master/classTVirtualIndex.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualIsAProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TVirtualIsAProxy Class Referenceabstract. . Definition at line 27 of file TVirtualIsAProxy.h. Public Member Functions; virtual ~TVirtualIsAProxy ();  ; virtual TClass * operator() (const void *obj)=0;  ; virtual void SetClass (TClass *cl)=0;  . #include <TVirtualIsAProxy.h>. Inheritance diagram for TVirtualIsAProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TVirtualIsAProxy(). virtual TVirtualIsAProxy::~TVirtualIsAProxy ; (; ). inlinevirtual . Definition at line 29 of file TVirtualIsAProxy.h. Member Function Documentation. ◆ operator()(). virtual TClass * TVirtualIsAProxy::operator() ; (; const void * ; obj). pure virtual . Implemented in TIsAProxy, and TInstrumentedIsAProxy< T >. ◆ SetClass(). virtual void TVirtualIsAProxy::SetClass ; (; TClass * ; cl). pure virtual . Implemented in TIsAProxy, and TInstrumentedIsAProxy< T >. The documentation for this class was generated from the following file:; core/meta/inc/TVirtualIsAProxy.h. TVirtualIsAProxy. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualIsAProxy.html:85,Load,Loading,85,doc/master/classTVirtualIsAProxy.html,https://root.cern,https://root.cern/doc/master/classTVirtualIsAProxy.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualIsAProxy Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TVirtualIsAProxy Class Referenceabstract. . Definition at line 27 of file TVirtualIsAProxy.h. Public Member Functions; virtual ~TVirtualIsAProxy ();  ; virtual TClass * operator() (const void *obj)=0;  ; virtual void SetClass (TClass *cl)=0;  . #include <TVirtualIsAProxy.h>. Inheritance diagram for TVirtualIsAProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TVirtualIsAProxy(). virtual TVirtualIsAProxy::~TVirtualIsAProxy ; (; ). inlinevirtual . Definition at line 29 of file TVirtualIsAProxy.h. Member Function Documentation. ◆ operator()(). virtual TClass * TVirtualIsAProxy::operator() ; (; const void * ; obj). pure virtual . Implemented in TIsAProxy, and TInstrumentedIsAProxy< T >. ◆ SetClass(). virtual void TVirtualIsAProxy::SetClass ; (; TClass * ; cl). pure virtual . Implemented in TIsAProxy, and TInstrumentedIsAProxy< T >. The documentation for this class was generated from the following file:; core/meta/inc/TVirtualIsAProxy.h. TVirtualIsAProxy. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTVirtualIsAProxy.html:84,Load,Loading,84,doc/v632/classTVirtualIsAProxy.html,https://root.cern,https://root.cern/doc/v632/classTVirtualIsAProxy.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualMCDecayer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualMCDecayer Class ReferenceabstractMonte Carlo » EG. ; Abstract base class for particle decays. ; Clients are the transport code and the primary particle generators; andre.nosp@m.as.m.nosp@m.orsch.nosp@m.@cer.nosp@m.n.ch ; Definition at line 23 of file TVirtualMCDecayer.h. Public Member Functions;  TVirtualMCDecayer ();  ;  ~TVirtualMCDecayer () override;  ; virtual void Decay (Int_t idpart, TLorentzVector *p)=0;  Decay a particle of type IDPART (PDG code) and momentum P. ;  ; virtual void ForceDecay ()=0;  Force a particle decay mode. ;  ; virtual Float_t GetLifetime (Int_t kf)=0;  Get the life-time of a particle of type KF (a PDG code). ;  ; virtual Float_t GetPartialBranchingRatio (Int_t ipart)=0;  Get the partial branching ratio for a particle of type IPART (a PDG code). ;  ; virtual Int_t ImportParticles (TClonesArray *particles)=0;  Get the decay products into the passed PARTICLES TClonesArray of TParticles. ;  ; virtual void Init ()=0;  Initialize the decayer. ;  ; TClass * IsA () const override;  ; virtual void ReadDecayTable ()=0;  Read in particle data from an ASCII file. ;  ; virtual void SetForceDecay (Int_t type)=0;  Force a particular decay type. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMCDecayer.html:86,Load,Loading,86,doc/master/classTVirtualMCDecayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualMCDecayer.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualMagField Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualMagField Class ReferenceabstractThe Geometry Package » Geometry classes. ; Abstract class for magnetic field. ; Derived classes are encouraged to use the TVirtualMagField named constructor and must implement the method:; Field(const Double_t *x, Double_t *B); TVirtualMagField::Fieldvirtual void Field(const Double_t *x, Double_t *B)=0; double; xDouble_t x[n]Definition legend1.C:17; A field object can be made global via:; TGlobalMagField::Instance()->SetField(field) [1]; A field which is made global is owned by the field manager. The used is not allowed to delete it directly anymore (otherwise a Fatal() is issued). Global field can be deleted by calling [1] with a different argument (which can be NULL). Otherwise the global field is deleted together with the field manager. ; Definition at line 16 of file TVirtualMagField.h. Public Member Functions;  TVirtualMagField ();  ;  TVirtualMagField (const char *name);  ;  ~TVirtualMagField () override;  Destructor. Unregisters the field. ;  ; virtual void Field (const Double_t *x, Double_t *B)=0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMagField.html:85,Load,Loading,85,doc/master/classTVirtualMagField.html,https://root.cern,https://root.cern/doc/master/classTVirtualMagField.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualMapFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualMapFile Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; Abstract base class for TMapFile. ; This allows Core to handle TMapFile which is implemented in RIO ; Definition at line 27 of file TVirtualMapFile.h. Public Member Functions; virtual void Close (Option_t *option="""")=0;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMapFile.html:84,Load,Loading,84,doc/master/classTVirtualMapFile.html,https://root.cern,https://root.cern/doc/master/classTVirtualMapFile.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualMonitoringReader Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualMonitoringReader Class Reference. . Definition at line 89 of file TVirtualMonitoring.h. Public Member Functions;  TVirtualMonitoringReader (const char *="""");  ; virtual ~TVirtualMonitoringReader ();  ; virtual void DeleteMap (TMap *);  ; virtual void DumpResult ();  ; virtual void GetLastValues (const char *, const char *, const char *, const char *, Bool_t=kFALSE);  ; virtual TMap * GetMap ();  ; virtual void GetValues (const char *, const char *, const char *, const char *, Long_t, Long_t, Bool_t=kFALSE);  ; TClass * IsA () const override;  ; virtual void ProxyValues (const char *, const char *, const char *, const char *, Long_t, Long_t, Long_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMonitoringReader.html:93,Load,Loading,93,doc/master/classTVirtualMonitoringReader.html,https://root.cern,https://root.cern/doc/master/classTVirtualMonitoringReader.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualMonitoringWriter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TVirtualMonitoringWriter Class Reference. . Definition at line 35 of file TVirtualMonitoring.h. Public Member Functions;  TVirtualMonitoringWriter ();  ;  TVirtualMonitoringWriter (const char *name, Double_t value);  ; virtual ~TVirtualMonitoringWriter ();  destructor ;  ; TClass * IsA () const override;  ; virtual Bool_t SendFileCloseEvent (TFile *);  ; virtual Bool_t SendFileOpenProgress (TFile *, TList *, const char *, Bool_t=kFALSE);  ; virtual Bool_t SendFileReadProgress (TFile *);  ; virtual Bool_t SendFileWriteProgress (TFile *);  ; virtual Bool_t SendInfoDescription (const char *);  ; virtual Bool_t SendInfoStatus (const char *);  ; virtual Bool_t SendInfoTime ();  ; virtual Bool_t SendInfoUser (const char *=nullptr);  ; virtual Bool_t SendParameters (TList *, const char *=nullptr);  ; virtual Bool_t SendProcessingProgress (Double_t, Double_t, Bool_t=kFALSE);  ; virtual Bool_t SendProcessingStatus (const char *, Bool_t=kFALSE);  ; virtual void SetLogLevel (const char *=""WARNING"");  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Verbose (Bool_t);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMonitoringWriter.html:93,Load,Loading,93,doc/master/classTVirtualMonitoringWriter.html,https://root.cern,https://root.cern/doc/master/classTVirtualMonitoringWriter.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualMutex Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualMutex Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; This class implements a mutex interface. ; The actual work is done via TMutex which is available as soon as the thread library is loaded.; and; TLockGuard; This class provides mutex resource management in a guaranteed and exception safe way. Use like this: {; TLockGuard guard(mutex);; ... // do something; }; TLockGuardDefinition TVirtualMutex.h:70; when guard goes out of scope the mutex is unlocked in the TLockGuard destructor. The exception mechanism takes care of calling the dtors of local objects so it is exception safe. ; Definition at line 32 of file TVirtualMutex.h. Public Member Functions;  TVirtualMutex (Bool_t=kFALSE);  ; virtual ~TVirtualMutex ();  ; Int_t Acquire ();  ; virtual Int_t CleanUp ()=0;  ; virtual TVirtualMutex * Factory (Bool_t=kFALSE)=0;  ; virtual TClass * IsA () const;  ; virtual Int_t Lock ()=0;  ; Int_t Release ();  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TryLock ()=0;  ; virtual Int_t UnLock ()=0;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TVirtualMutex.h>. Inheritance diagram for TVirtualMutex:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualMutex(). TVirtualMutex::TVirtualMutex ; (; Bool_t ; = kFALSE). inline . Definition at line 35 of file TVirtualMutex.h. ◆ ~TVirtualMutex(). virtual TVirtualMutex::~TVirtualMutex ; (; ). inlinevirtual . Definition at line 36 of file TVirtualMutex.h. Member Function Documentat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMutex.html:82,Load,Loading,82,doc/master/classTVirtualMutex.html,https://root.cern,https://root.cern/doc/master/classTVirtualMutex.html,2,"['Load', 'load']","['Loading', 'loaded']"
Performance,. ROOT: TVirtualObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TVirtualObject Class ReferenceInput/Output Library. ; Wrapper around an object and giving indirect access to its content even if the object is not of a class in the Cint/Reflex dictionary. ; Definition at line 26 of file TVirtualObject.h. Public Member Functions;  TVirtualObject (TClass *cl);  ;  ~TVirtualObject ();  ; TClass * GetClass () const;  ; void * GetObject () const;  . Public Attributes; TClassRef fClass;  ; void * fObject;  . Private Member Functions;  TVirtualObject (const TVirtualObject &)=delete;  ; TVirtualObject & operator= (const TVirtualObject &)=delete;  . #include <TVirtualObject.h>; Constructor & Destructor Documentation. ◆ TVirtualObject() [1/2]. TVirtualObject::TVirtualObject ; (; const TVirtualObject & ; ). privatedelete . ◆ TVirtualObject() [2/2]. TVirtualObject::TVirtualObject ; (; TClass * ; cl). inline . Definition at line 36 of file TVirtualObject.h. ◆ ~TVirtualObject(). TVirtualObject::~TVirtualObject ; (; ). inline . Definition at line 37 of file TVirtualObject.h. Member Function Documentation. ◆ GetClass(). TClass * TVirtualObject::GetClass ; (; ); const. inline . Definition at line 40 of file TVirtualObject.h. ◆ GetObject(). void * TVirtualObject::GetObject ; (; ); const. inline . Definition at line 41 of file TVirtualObject.h. ◆ operator=(). TVirtualObject & TVirtualObject::operator= ; (; const TVirtualObject & ; ). privatedelete . Member Data Documentation. ◆ fClass. TClassRef TVirtualObject::fClass. Definition at line 33 of file TVirtualObject.h. ◆ fObject. void* TVirtualObject::fObject. Definition at line 34 of file TVirtualObject.h. Libraries for TVirtualObject:. [legend]; The documentation for this class was generated from the following file:; core/meta/inc/TVirtualObject.h. TVirtualObject. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualObject.html:83,Load,Loading,83,doc/master/classTVirtualObject.html,https://root.cern,https://root.cern/doc/master/classTVirtualObject.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualPS Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TVirtualPS Class ReferenceabstractCore ROOT classes » Base ROOT classes | Graphics » 2D Graphics » Graphics file output. ; TVirtualPS is an abstract interface to Postscript, PDF, SVG. ; TeX etc... drivers ; Definition at line 30 of file TVirtualPS.h. Public Member Functions;  TVirtualPS ();  VirtualPS default constructor. ;  ;  TVirtualPS (const char *filename, Int_t type=-111);  VirtualPS constructor. ;  ; virtual ~TVirtualPS ();  VirtualPS destructor. ;  ; virtual void CellArrayBegin (Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2)=0;  ; virtual void CellArrayEnd ()=0;  ; virtual void CellArrayFill (Int_t r, Int_t g, Int_t b)=0;  ; virtual void Close (Option_t *opt="""")=0;  ; virtual void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2)=0;  ; virtual void DrawFrame (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light)=0;  ; virtual void DrawPolyMarker (Int_t n, Double_t *x, Double_t *y)=0;  ; virtual void DrawPolyMarker (Int_t n, Float_t *x, Float_t *y)=0;  ; virtual void DrawPS (Int_t n, Double_t *xw, Double_t *yw)=0;  ; virtual void DrawPS (Int_t n, Float_t *xw, Float_t *yw)=0;  ; virtual void * GetStream () const;  ; virtual Int_t GetType () const;  ; TClass * IsA () const override;  ; virtual void NewPage ()=0;  ; virtual void Open (const char *filename, Int_t type=-111)=0;  ; virtual void PrintFast (Int_t nch, const char *string="""");  Fast version of Print. ;  ; virtual void PrintRaw (Int_t len, const char *str);  Print a raw. ;  ; virtual void PrintStr (const char *string="""");  Output the string str in the output buffer. ;  ; virtual void SetColor (Float_t r, Float_t g, Float_t b)=0;  ; virtual void SetStrea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPS.html:79,Load,Loading,79,doc/master/classTVirtualPS.html,https://root.cern,https://root.cern/doc/master/classTVirtualPS.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualPacketizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; List of all members ; TVirtualPacketizer Class ReferencePROOF » PROOF kernel Libraries. ; The packetizer is a load balancing object created for each query. ; It generates packets to be processed on PROOF worker servers. A packet is an event range (begin entry and number of entries) or object range (first object and number of objects) in a TTree (entries) or a directory (objects) in a file. Packets are generated taking into account the performance of the remote machine, the time it took to process a previous packet on the remote machine, the locality of the database files, etc.; TVirtualPacketizer includes common parts of PROOF packetizers. Look in subclasses for details. The default packetizer is TPacketizerAdaptive (TPacketizer for Proof-Lite). To use an alternative one, for instance - the TPacketizer, call: proof->SetParameter(""PROOF_Packetizer"", ""TPacketizer""); ; Definition at line 53 of file TVirtualPacketizer.h. Classes; class  TVirtualSlaveStat;  . Public Types; enum  EStatusBits { kIsInitializing = (1ULL << ( 16 )); , kIsDone = (1ULL << ( 17 )); , kIsTree = (1ULL << ( 18 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPacketizer.html:87,Load,Loading,87,doc/master/classTVirtualPacketizer.html,https://root.cern,https://root.cern/doc/master/classTVirtualPacketizer.html,3,"['Load', 'load', 'perform']","['Loading', 'load', 'performance']"
Performance,". ROOT: TVirtualPacketizer::TVirtualSlaveStat Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TVirtualPacketizer::TVirtualSlaveStat Class Referenceabstract. . Definition at line 157 of file TVirtualPacketizer.h. Public Member Functions; virtual TProofProgressStatus * AddProcessed (TProofProgressStatus *st)=0;  ; Float_t GetAvgRate ();  ; Long64_t GetEntriesProcessed () const;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetOrdinal () const;  ; Double_t GetProcTime () const;  ; TProofProgressStatus * GetProgressStatus ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html:106,Load,Loading,106,doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html,https://root.cern,https://root.cern/doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualPad Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TVirtualPad Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; TVirtualPad is an abstract base class for the Pad and Canvas classes. ; Definition at line 50 of file TVirtualPad.h. Classes; class  TContext;  small helper class to store/restore gPad context in TPad methods More...;  . Public Member Functions;  TVirtualPad ();  VirtualPad default constructor. ;  ;  TVirtualPad (const char *name, const char *title, Double_t xlow, Double_t ylow, Double_t xup, Double_t yup, Color_t color=19, Short_t bordersize=4, Short_t bordermode=1);  VirtualPad constructor. ;  ; virtual ~TVirtualPad ();  VirtualPad destructor. ;  ; virtual void AbsCoordinates (Bool_t set)=0;  ; virtual Double_t AbsPixeltoX (Int_t px)=0;  ; virtual Double_t AbsPixeltoY (Int_t py)=0;  ; virtual void Add (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE)=0;  ; virtual void AddExec (const char *name, const char *command)=0;  ; virtual void AddFirst (TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE)=0;  ; virtual TLegend * BuildLegend (Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""")=0;  ; virtual TVirtualPad * cd (Int_t subpadnumber=0)=0;  ; void Clear (Option_t *option="""") override=0;  ; virtual Int_t Clip (Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt)=0;  ; virtual void Close (Option_t *option="""")=0;  ; virtual void CloseToolTip (TObject *tip)=0;  ; virtual void CopyPixmap ()=0;  ; virtual void CopyPixmaps ()=0;  ; virtual TObject * CreateToolTip (const TBox *b, const char *text, Long_t delayms)=0;  ; virtual void DeleteExec (const char *name)=0;  ; virtual void DeleteToolTip (TObject *tip",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:80,Load,Loading,80,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualPadPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualPadPainter Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; To make it possible to use GL for 2D graphic in a TPad/TCanvas. ; TVirtualPadPainter interface must be used instead of TVirtualX. Internally, non-GL implementation should delegate all calls to gVirtualX, GL implementation will delegate part of calls to gVirtualX, and has to implement some of the calls from the scratch. ; Definition at line 19 of file TVirtualPadPainter.h. Public Types; enum  EBoxMode { kHollow; , kFilled; };  ; enum  ETextMode { kClear; , kOpaque; };  . Public Member Functions; virtual ~TVirtualPadPainter ();  Virtual dtor. ;  ; virtual void ClearDrawable ()=0;  ; virtual void CopyDrawable (Int_t device, Int_t px, Int_t py)=0;  ; virtual Int_t CreateDrawable (UInt_t w, UInt_t h)=0;  ; virtual void DestroyDrawable (Int_t device)=0;  ; virtual void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, EBoxMode mode)=0;  ; virtual void DrawFillArea (Int_t n, const Double_t *x, const Double_t *y)=0;  ; virtual void DrawFillArea (Int_t n, const Float_t *x, const Float_t *y)=0;  ; virtual void DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2)=0;  ; virtual void DrawLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2)=0;  ; virtual void DrawPixels (const unsigned char *pixelData, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY, Bool_t enableAlphaBlending)=0;  ; virtual void DrawPolyLine (Int_t n, const Double_t *x, const Double_t *y)=0;  ; virtual void DrawPolyLine (Int_t n, const Float_t *x, const Float_t *y)=0;  ; virtual void DrawPolyLineNDC (Int_t n, const Double_t *u, const Double_t *v)=0;  ; virtual void DrawPolyMarker (Int_t n, const Double_t *x, const Double_t *y)=0;  ; virtual void DrawPolyMark",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPadPainter.html:87,Load,Loading,87,doc/master/classTVirtualPadPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualPadPainter.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualPerfStats Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Friends |; List of all members ; TVirtualPerfStats Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; Provides the interface for the PROOF internal performance measurement and event tracing. ; Definition at line 32 of file TVirtualPerfStats.h. Public Types; enum  EEventType { ;   kUnDefined; , kPacket; , kStart; , kStop; , ;   kFile; , kFileOpen; , kFileRead; , kRate; , ;   kNumEventType. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual ~TVirtualPerfStats ();  ; virtual void FileEvent (const char *slave, const char *slavename, const char *nodename, const char *filename, Bool_t isStart)=0;  ; virtual void FileOpenEvent (TFile *file, const char *filename, Double_t start)=0;  ; virtual void FileReadEvent (TFile *file, Int_t len, Double_t start)=0;  ; virtual Long64_t GetBytesRead () const =0;  ; virtual Long64_t GetNumEvents () const =0;  ; TClass * IsA () const override;  ; virtual void PacketEvent (const char *slave, const char *slavename, const char *filename, Long64_t eventsprocessed, Double_t latency, Double_t proctime, Double_t cputime, Long64_t bytesRead)=0;  ; virtual void PrintBasketIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPerfStats.html:86,Load,Loading,86,doc/master/classTVirtualPerfStats.html,https://root.cern,https://root.cern/doc/master/classTVirtualPerfStats.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: TVirtualProofPlayer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualProofPlayer Class ReferenceabstractPROOF » PROOF kernel Libraries. ; Abstract interface for the PROOF player. ; See the concrete implementations under 'proofplayer' for details. ; Definition at line 43 of file TVirtualProofPlayer.h. Public Types; enum  EExitStatus { kFinished; , kStopped; , kAborted; };  ; enum  EStatusBits { kIsSubmerger = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVirtualProofPlayer ();  ;  ~TVirtualProofPlayer () override;  ; virtual void AddEventsProcessed (Long64_t ev)=0;  ; virtual void AddInput (TObject *inp)=0;  ; virtual void AddOutput (TList *out)=0;  ; virtual Int_t AddOutputObject (TObject *obj)=0;  ; virtual void AddQueryResult (TQueryResult *q)=0;  ; virtual void ClearInput ()=0;  ; virtual TDrawFeedback * CreateDrawFeedback (TProof *p)=0;  ; virtual void DeleteDrawFeedback (TDrawFeedback *f)=0;  ; virtual Long64_t DrawSelect (TDSet *set, const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0)=0;  ; virtual void Feedback (TList *objs)=0;  ; virtual Long64_t Finalize (Bool_t force=kFALSE, Bool_t sync=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualProofPlayer.html:88,Load,Loading,88,doc/master/classTVirtualProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualProofPlayer.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualRefProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TVirtualRefProxy Class Referenceabstract. . Definition at line 81 of file TVirtualRefProxy.h. Public Member Functions; virtual ~TVirtualRefProxy ();  ; virtual TVirtualRefProxy * Clone () const =0;  ; virtual TClass * GetClass () const =0;  ; virtual Int_t GetCounterValue (TFormLeafInfoReference *info, void *data)=0;  ; virtual void * GetObject (TFormLeafInfoReference *info, void *data, int instance)=0;  ; virtual void * GetPreparedReference (void *data)=0;  ; virtual TClass * GetValueClass (void *data) const =0;  ; virtual Bool_t HasCounter () const =0;  ; virtual void Release ()=0;  ; virtual void SetClass (TClass *classptr)=0;  ; virtual Bool_t Update ()=0;  . #include <TVirtualRefProxy.h>. Inheritance diagram for TVirtualRefProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TVirtualRefProxy(). virtual TVirtualRefProxy::~TVirtualRefProxy ; (; ). inlinevirtual . Definition at line 84 of file TVirtualRefProxy.h. Member Function Documentation. ◆ Clone(). virtual TVirtualRefProxy * TVirtualRefProxy::Clone ; (; ); const. pure virtual . Implemented in TRefArrayProxy, and TRefProxy. ◆ GetClass(). virtual TClass * TVirtualRefProxy::GetClass ; (; ); const. pure virtual . Implemented in TRefProxy. ◆ GetCounterValue(). virtual Int_t TVirtualRefProxy::GetCounterValue ; (; TFormLeafInfoReference * ; info, . void * ; data . ). pure virtual . Implemented in TRefProxy, and TRefArrayProxy. ◆ GetObject(). virtual void * TVirtualRefProxy::GetObject ; (; TFormLeafInfoReference * ; info, . void * ; data, . int ; instance . ). pure virtual . Implemented in TRefProxy, and TRefArrayProxy. ◆ GetPreparedReference(). virtual void * TVirtualRefProxy::GetPreparedReference ; (; void * ; data). pure virtual .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualRefProxy.html:85,Load,Loading,85,doc/master/classTVirtualRefProxy.html,https://root.cern,https://root.cern/doc/master/classTVirtualRefProxy.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualStreamerInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TVirtualStreamerInfo Class Referenceabstract. ; Abstract Interface class describing Streamer information for one class. ; Definition at line 44 of file TVirtualStreamerInfo.h. Public Types; enum  EReadWrite { ;   kBase = 0; , kOffsetL = 20; , kOffsetP = 40; , kCounter = 6; , ;   kCharStar = 7; , kChar = 1; , kShort = 2; , kInt = 3; , ;   kLong = 4; , kFloat = 5; , kDouble = 8; , kDouble32 = 9; , ;   kLegacyChar = 10; , kUChar = 11; , kUShort = 12; , kUInt = 13; , ;   kULong = 14; , kBits = 15; , kLong64 = 16; , kULong64 = 17; , ;   kBool = 18; , kFloat16 = 19; , kObject = 61; , kAny = 62; , ;   kObjectp = 63; , kObjectP = 64; , kTString = 65; , kTObject = 66; , ;   kTNamed = 67; , kAnyp = 68; , kAnyP = 69; , kAnyPnoVT = 70; , ;   kSTLp = 71; , kSkip = 100; , kSkipL = 120; , kSkipP = 140; , ;   kConv = 200; , kConvL = 220; , kConvP = 240; , kSTL = ROOT::kSTLany; , ;   kSTLstring = ROOT::kSTLstring; , kStreamer = 500; , kStreamLoop = 501; , kCache = 600; , ;   kArtificial = 1000; , kCacheNew = 1001; , kCacheDelete = 1002; , kNeedObjectForVirtualBaseClass = 99997; , ;   kMissing = 99999; , kNoType = -1; , kUnsupportedConversion = -2; , kUnset = -3. };  EReadWrite Enumerator. More...;  ; enum  EStatusBits { ;   kCannotOptimize = (1ULL << ( 12 )); , kIgnoreTObjectStreamer = (1ULL << ( 13 )); , kRecovered = (1ULL << ( 14 )); , kNeedCheck = (1ULL << ( 15 )); , ;   kIsCompiled = (1ULL << ( 16 )); , kBuildOldUsed = (1ULL << ( 17 )); , kBuildRunning = (1ULL << ( 18 )). };  ; enum class  EStatusBitsDupExceptions { kIgnoreTObjectStreamer = TVirtualStreamerInfo::kIgnoreTObjectStreamer; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualStreamerInfo.html:89,Load,Loading,89,doc/master/classTVirtualStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTVirtualStreamerInfo.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualTreePlayer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Static Private Attributes |; List of all members ; TVirtualTreePlayer Class ReferenceabstractTree Library. ; Abstract base class defining the interface for the plugins that implement Draw, Scan, Process, MakeProxy, etc. ; for a TTree object. See the individual documentations in TTree. ; Definition at line 38 of file TVirtualTreePlayer.h. Public Member Functions;  TVirtualTreePlayer ();  ;  ~TVirtualTreePlayer () override;  Common destructor. ;  ; virtual TVirtualIndex * BuildIndex (const TTree *T, const char *majorname, const char *minorname)=0;  ; virtual TTree * CopyTree (const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0)=0;  ; virtual Long64_t DrawScript (const char *wrapperPrefix, const char *macrofilename, const char *cutfilename, Option_t *option, Long64_t nentries, Long64_t firstentry)=0;  ; virtual Long64_t DrawSelect (const char *varexp, const char *selection, Option_t *option, Long64_t nentries, Long64_t firstentry)=0;  ; virtual Int_t Fit (const char *formula, const char *varexp, const char *selection, Option_t *option, Option_t *goption, Long64_t nentries, Long64_t firstentry)=0;  ; virtual Int_t GetDimension () const =0;  ; virtual Long64_t GetEntries (const char *)=0;  ; virtual TH1 * GetHistogram () const =0;  ; virtual Int_t GetNfill () const =0;  ; virtual TTreeFormula * GetSelect () const =0;  ; virtual Long64_t GetSelectedRows () const =0;  ; virtual TSelector * GetSelector () const =0;  ; virtual TSelector * GetSelectorFromFile () const =0;  ; virtual Double_t * GetV1 () const =0;  ; virtual Double_t * GetV2 () const =0;  ; virtual Double_t * GetV3 () const =0;  ; virtual Double_t * GetV4 () const =0;  ; virtual Double_t * GetVal (Int_t) const =0;  ; virtual TTreeFormu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualTreePlayer.html:87,Load,Loading,87,doc/master/classTVirtualTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualTreePlayer.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualViewer3D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualViewer3D Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; Abstract 3D shapes viewer. ; The concrete implementations are:. TViewerX3D : X3d viewer; TGLViewer : OpenGL viewer. 3D Viewer Infrastructure Overview; The 3D Viewer infrastructure consists of:. TVirtualViewer3D interface: An abstract handle to the viewer, allowing client to test preferences, add objects, control the viewer via scripting (to be added) etc. -TBuffer3D class hierarchy: Used to describe 3D objects (""shapes""); filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow our simple x3d viewer, and considerably more sophisticated OpenGL one to both work with both geometry libraries (g3d and geom) efficiently.; Publishing to a viewer consists of the following steps:. Create / obtain viewer handle; Begin scene on viewer; Fill mandatory parts of TBuffer3D describing object; Add to viewer; Fill optional parts of TBuffer3D if requested by viewer, and add again ... repeat 3/4/5 as required; End scene on viewer. Creating / Obtaining Viewer; Create/obtain the viewer handle via local/global pad - the viewer is always bound to a TPad object at present [This may be removed as a restriction in the future] . You should perform the publishing to the viewer described below in the Paint() method of the object you attach to the pad (via Draw()) TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; gPad#define gPadDefinition TVirtualPad.h:308; TVirtualViewer3DAbstract 3D shapes viewer.Definition TVirtualViewer3D.h:34; v@ vDefinition rootcling_impl.cxx:3699; "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or Pad ""pad"" (d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualViewer3D.html:85,Load,Loading,85,doc/master/classTVirtualViewer3D.html,https://root.cern,https://root.cern/doc/master/classTVirtualViewer3D.html,1,['Load'],['Loading']
Performance,". ROOT: TVirtualX Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TVirtualX Class ReferenceGraphics » Graphics' Backends | Core ROOT classes » Base ROOT classes. ; Semi-Abstract base class defining a generic interface to the underlying, low level, native graphics backend (X11, Win32, MacOS, OpenGL...). ; An instance of TVirtualX itself defines a batch interface to the graphics system. ; Definition at line 46 of file TVirtualX.h. Public Types; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual Int_t AddPixmap (ULongptr_t pixid, UInt_t w, UInt_t h);  Registers a pixmap created by TGLManager as a ROOT pixmap. ;  ; virtual Int_t AddWindow (ULongptr_t qwid, UInt_t w, UInt_t h);  Registers a window created by Qt as a ROOT window. ;  ; virtual Bool_t AllocColor (Colormap_t cmap, ColorStruct_t &color);  Allocates a read-only colormap entry corresponding to the closest RGB value suppo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualX.html:78,Load,Loading,78,doc/master/classTVirtualX.html,https://root.cern,https://root.cern/doc/master/classTVirtualX.html,1,['Load'],['Loading']
Performance,". ROOT: TWebCanvas Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Friends |; List of all members ; TWebCanvas Class ReferenceWeb Display » ROOT 6 Web Display | Web Widgets. ; Basic TCanvasImp ABI implementation for Web-based Graphics Provides painting of main ROOT classes in web browsers using JSROOT ; Following settings parameters can be useful for TWebCanvas: WebGui.FullCanvas: 1 read-only mode (0), full-functional canvas (1) (default - 1); WebGui.StyleDelivery: 1 provide gStyle object to JSROOT client (default - 1); WebGui.PaletteDelivery: 1 provide color palette to JSROOT client (default - 1); WebGui.TF1UseSave: 1 used saved values for function drawing: 0 - off, 1 - if client fail to evaluate function, 2 - always (default - 1); TWebCanvas is used by default in interactive ROOT session. To use web-based canvas in batch mode for image generation, one should explicitly specify --web option when starting ROOT: [shell] root -b --web tutorials/hsimple.root -e 'hpxpy->Draw(""colz""); c1->SaveAs(""image.png"");'; If for any reasons TWebCanvas does not provide required functionality, one always can disable it. Either by specifying root --web=off when starting ROOT or by setting Canvas.Name: TRootCanvas in rootrc file. ; Definition at line 35 of file TWebCanvas.h. Classes; struct  PadStatus;  ; struct  WebConn;  . Public Types; using ObjectSelectSignal_t = std::function< void(TPad *, TObject *)>;  Function type for signals, invoked when object is selected. ;  ; using PadClickedSignal_t = std::function< void(TPad *, int, int)>;  Function type for pad-click signals. ;  ; using PadSignal_t = std::function< void(TPad *)>;  Function type for pad-related signals - like activate pad sig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebCanvas.html:79,Load,Loading,79,doc/master/classTWebCanvas.html,https://root.cern,https://root.cern/doc/master/classTWebCanvas.html,1,['Load'],['Loading']
Performance,. ROOT: TWebCanvas tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; TWebCanvas tutorialsTutorials. ; Examples showing the special features of web-based canvas. . Files; file  fonts_ttf.cxx;   Usage of TTF fonts in web canvas. ;  ; file  haxis.cxx;   Swap X/Y axes drawing and use to draw TH1 as bar and as markers. ;  ; file  inframe.cxx;   Drawing primitives inside and outside of the frame. ;  ; file  latex_url.cxx;   Use of interactive URL links inside TLatex. ;  ; file  logN.cxx;   Logarithmic scales support in web canvas. ;  ; file  triangle.cxx;  User class with custom JavaScript painter in the web canvas. ;  ; file  twoscales.cxx;   Two fully interactive scales in web canvas. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__webcanv.html:73,Load,Loading,73,doc/master/group__tutorial__webcanv.html,https://root.cern,https://root.cern/doc/master/group__tutorial__webcanv.html,1,['Load'],['Loading']
Performance,". ROOT: TWebCanvasTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TWebCanvasTimer Class Reference. . Definition at line 67 of file TWebCanvas.cxx. Public Member Functions;  TWebCanvasTimer (TWebCanvas &canv);  ; Bool_t IsSlow () const;  ; void SetSlow (Bool_t slow=kTRUE);  ; void Timeout () override;  used to send control messages to clients ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebCanvasTimer.html:84,Load,Loading,84,doc/master/classTWebCanvasTimer.html,https://root.cern,https://root.cern/doc/master/classTWebCanvasTimer.html,1,['Load'],['Loading']
Performance,". ROOT: TWebFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TWebFile Class Reference. . Definition at line 33 of file TWebFile.h. Public Member Functions;  TWebFile (const char *url, Option_t *opt="""");  Create a Web file object. ;  ;  TWebFile (TUrl url, Option_t *opt="""");  Create a Web file object. ;  ; virtual ~TWebFile ();  Cleanup. ;  ; void Close (Option_t *option="""") override;  Close a Web file. ;  ; Long64_t GetSize () const override;  Return maximum file size. ;  ; TClass * IsA () const override;  ; Bool_t IsOpen () const override;  A TWebFile that has been correctly constructed is always considered open. ;  ; Bool_t ReadBuffer (char *buf, Int_t len) override;  Read specified byte range from remote file via HTTP daemon. ;  ; Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len) override;  Read specified byte range from remote file via HTTP daemon. ;  ; Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf) override;  Read specified byte ranges from remote file via HTTP daemon. ;  ; Int_t ReOpen (Option_t *mode) override;  Reopen a file with a different access mode, like from READ to UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. ;  ; void Seek (Long64_t offset, ERelativeTo pos=kBeg) override;  Set position from where to start reading. ;  ; void Streamer (TBuffer &) override;  Stream a TFile object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Opens or creates a local ROOT file. ;  ;  ~TFile () overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:77,Load,Loading,77,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['Load'],['Loading']
Performance,". ROOT: TWebPS Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TWebPS Class ReferenceWeb Display » ROOT 6 Web Display. . Definition at line 21 of file TWebPS.h. Public Member Functions;  TWebPS ();  ; void CellArrayBegin (Int_t, Int_t, Double_t, Double_t, Double_t, Double_t) override;  not yet implemented ;  ; void CellArrayEnd () override;  ; void CellArrayFill (Int_t, Int_t, Int_t) override;  ; void Close (Option_t *="""") override;  ; void CreatePainting ();  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  ; void DrawFrame (Double_t, Double_t, Double_t, Double_t, Int_t, Int_t, Int_t, Int_t) override;  ; void DrawPolyMarker (Int_t n, Double_t *x, Double_t *y) override;  ; void DrawPolyMarker (Int_t n, Float_t *x, Float_t *y) override;  ; void DrawPS (Int_t n, Double_t *xw, Double_t *yw) override;  ; void DrawPS (Int_t n, Float_t *xw, Float_t *yw) override;  ; TWebPainting * GetPainting ();  ; TClass * IsA () const override;  ; Bool_t IsEmptyPainting () const;  ; void NewPage () override;  ; void Open (const char *, Int_t=-111) override;  ; void SetColor (Float_t, Float_t, Float_t) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TWebPainting * TakePainting ();  ; void Text (Double_t x, Double_t y, const char *str) override;  ; void Text (Double_t x, Double_t y, const wchar_t *str) override;  ;  Public Member Functions inherited from TVirtualPS;  TVirtualPS ();  VirtualPS default constructor. ;  ;  TVirtualPS (const char *filename, Int_t type=-111);  VirtualPS constructor. ;  ; virtual ~TVirtualPS ();  VirtualPS destructor. ;  ; virtual void * GetStream () const;  ; virtual Int_t GetType () const;  ; virtual void P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPS.html:75,Load,Loading,75,doc/master/classTWebPS.html,https://root.cern,https://root.cern/doc/master/classTWebPS.html,1,['Load'],['Loading']
Performance,". ROOT: TWebPadPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TWebPadPainter Class ReferenceWeb Display » ROOT 6 Web Display. ; Implement TVirtualPadPainter which abstracts painting operations. ; TWebPadPainter tries to support old Paint methods of the ROOT classes. Main classes (like histograms or graphs) should be painted on JavaScript side ; Definition at line 26 of file TWebPadPainter.h. Public Member Functions;  TWebPadPainter ();  ; void ClearDrawable () override;  ; void CopyDrawable (Int_t, Int_t, Int_t) override;  ; Int_t CreateDrawable (UInt_t, UInt_t) override;  ; void DestroyDrawable (Int_t) override;  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, EBoxMode mode) override;  Paint a simple box. ;  ; void DrawFillArea (Int_t n, const Double_t *x, const Double_t *y) override;  Paint filled area. ;  ; void DrawFillArea (Int_t n, const Float_t *x, const Float_t *y) override;  Paint filled area. ;  ; void DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Paint a simple line. ;  ; void DrawLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2) override;  Paint a simple line in normalized coordinates. ;  ; void DrawPixels (const unsigned char *pixelData, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY, Bool_t enableAlphaBlending) override;  Noop, for non-gl pad TASImage calls gVirtualX->CopyArea. ;  ; void DrawPolyLine (Int_t n, const Double_t *x, const Double_t *y) override;  Paint Polyline. ;  ; void DrawPolyLine (Int_t n, const Float_t *x, const Float_t *y) override;  Paint polyline. ;  ; void DrawPolyLineNDC (Int_t n, const Double_t *u, const Double_t *v) override;  Paint polyline in normalized coordinates. ;  ; void DrawPolyMarker (I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:83,Load,Loading,83,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['Load'],['Loading']
Performance,". ROOT: TWebPainting Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TWebPainting Class ReferenceWeb Display » ROOT 6 Web Display. ; Object used to store paint operations and deliver them to JSROOT. ; Definition at line 25 of file TWebPainting.h. Public Member Functions;  TWebPainting ();  Constructor. ;  ;  ~TWebPainting () override=default;  ; void AddColor (Int_t indx, TColor *col);  Add custom color to operations. ;  ; void AddFillAttr (const TAttFill &attr);  Store fill attributes If attributes were not changed - ignore operation. ;  ; void AddLineAttr (const TAttLine &attr);  Store line attributes If attributes were not changed - ignore operation. ;  ; void AddMarkerAttr (const TAttMarker &attr);  Store marker attributes If attributes were not changed - ignore operation. ;  ; void AddOper (const std::string &oper);  Add next custom operator to painting Operations are separated by semicolons Following operations are supported: t - text h - text coded into simple hex r - rectangle b - rectangular fill region l - polyline f - poly fill region m - poly marker z - line attributes y - fill attributes x - marker attributes o - text attributes After operation code optional arguments can be append like length of operation or coded text Each operation may use data from binary float buffer. ;  ; void AddTextAttr (const TAttText &attr);  Store text attributes If attributes were not changed - ignore operation. ;  ; void FixSize ();  ; TClass * IsA () const override;  ; Bool_t IsEmpty () const;  ; Float_t * Reserve (Int_t sz);  Reserve place in the float buffer Returns pointer on first element in reserved area. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPainting.html:81,Load,Loading,81,doc/master/classTWebPainting.html,https://root.cern,https://root.cern/doc/master/classTWebPainting.html,1,['Load'],['Loading']
Performance,". ROOT: TWebSnapshot Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TWebSnapshot Class ReferenceWeb Display » ROOT 6 Web Display. ; Paint state of object to transfer to JavaScript side. ; Definition at line 20 of file TWebSnapshot.h. Public Types; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TWebSnapshot () override;  destructor ;  ; Int_t GetKind () const;  ; const char * GetObjectID () const;  ; TObject * GetSnapshot () const;  ; TClass * IsA () const override;  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (void *ptr, const std::string &suffix="""");  Use pointer to assign object id - TString::Hash. ;  ; void SetOption (const std::string &opt);  ; void SetSnapshot (Int_t kind, TObject *snapshot, Bool_t owner=kFALSE);  SetUse pointer to assign object id - TString::Hash. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebSnapshot.html:81,Load,Loading,81,doc/master/classTWebSnapshot.html,https://root.cern,https://root.cern/doc/master/classTWebSnapshot.html,1,['Load'],['Loading']
Performance,". ROOT: TWebSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TWebSystem Class Reference. . Definition at line 99 of file TWebFile.h. Public Member Functions;  TWebSystem ();  Create helper class that allows directory access via httpd. ;  ; virtual ~TWebSystem ();  ; Bool_t AccessPathName (const char *path, EAccessMode mode) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void FreeDirectory (void *dirp) override;  Free directory via httpd. ;  ; const char * GetDirEntry (void *dirp) override;  Get directory entry via httpd. Returns 0 in case no more entries. ;  ; Int_t GetPathInfo (const char *path, FileStat_t &buf) override;  Get info about a file. ;  ; TClass * IsA () const override;  ; Int_t MakeDirectory (const char *name) override;  Make a directory via httpd. Not supported. ;  ; void * OpenDirectory (const char *name) override;  Open a directory via httpd. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unlink (const char *path) override;  Unlink, i.e. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebSystem.html:79,Load,Loading,79,doc/master/classTWebSystem.html,https://root.cern,https://root.cern/doc/master/classTWebSystem.html,1,['Load'],['Loading']
Performance,". ROOT: TWin32Condition Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TWin32Condition Class Reference. . Definition at line 55 of file TWin32Condition.h. Public Member Functions;  TWin32Condition (TMutexImp *m);  Create Condition variable. ;  ; virtual ~TWin32Condition ();  TCondition dtor. ;  ; Int_t Broadcast () override;  Broadcast is like signal but wakes all threads which have called Wait(). ;  ; TClass * IsA () const override;  ; Int_t Signal () override;  If one or more threads have called Wait(), Signal() wakes up at least one of them, possibly more. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TimedWait (ULong_t secs, ULong_t nanoSecs=0) override;  TimedWait() is given an absolute time to wait until. ;  ; Int_t Wait () override;  Wait for the condition variable to be signalled. ;  ;  Public Member Functions inherited from TConditionImp;  TConditionImp ();  ; virtual ~TConditionImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Condition.html:84,Load,Loading,84,doc/master/classTWin32Condition.html,https://root.cern,https://root.cern/doc/master/classTWin32Condition.html,1,['Load'],['Loading']
Performance,". ROOT: TWin32Mutex Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; Friends |; List of all members ; TWin32Mutex Class Reference. . Definition at line 28 of file TWin32Mutex.h. Public Member Functions;  TWin32Mutex (Bool_t recursive=kFALSE);  Create a Win32 mutex lock. ;  ; virtual ~TWin32Mutex ();  TMutex dtor. ;  ; TClass * IsA () const override;  ; Int_t Lock () override;  Lock the mutex. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TryLock () override;  Try locking the mutex. Returns 0 if mutex can be locked. ;  ; Int_t UnLock () override;  Unlock the mutex. ;  ;  Public Member Functions inherited from TMutexImp;  TMutexImp ();  ; virtual ~TMutexImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Mutex.html:80,Load,Loading,80,doc/master/classTWin32Mutex.html,https://root.cern,https://root.cern/doc/master/classTWin32Mutex.html,1,['Load'],['Loading']
Performance,". ROOT: TWin32Thread Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TWin32Thread Class Reference. . Definition at line 30 of file TWin32Thread.h. Public Member Functions;  TWin32Thread ();  ;  ~TWin32Thread ();  ; Int_t CancelPoint () override;  ; Int_t CleanUp (void **main) override;  ; Int_t CleanUpPop (void **main, Int_t exe) override;  ; Int_t CleanUpPush (void **main, void *free, void *arg) override;  ; Int_t Exit (void *ret) override;  Exit the thread. ;  ; TClass * IsA () const override;  ; Int_t Join (TThread *th, void **ret) override;  Wait for specified thread execution (if any) to complete (like pthread_join). ;  ; Int_t Kill (TThread *th) override;  This is a somewhat dangerous function; it's not suggested to Stop() threads a lot. ;  ; Int_t Run (TThread *th, const int affinity=-1) override;  Win32 threads – spawn new thread (like pthread_create). ;  ; Long_t SelfId () override;  Return the current thread's ID. ;  ; Int_t SetCancelAsynchronous () override;  ; Int_t SetCancelDeferred () override;  ; Int_t SetCancelOff () override;  ; Int_t SetCancelOn () override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TThreadImp;  TThreadImp ();  ; virtual ~TThreadImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Thread.html:81,Load,Loading,81,doc/master/classTWin32Thread.html,https://root.cern,https://root.cern/doc/master/classTWin32Thread.html,1,['Load'],['Loading']
Performance,". ROOT: TWin32ThreadFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TWin32ThreadFactory Class Reference. . Definition at line 31 of file TWin32ThreadFactory.h. Public Member Functions;  TWin32ThreadFactory (const char *name=""Win32"", const char *title=""Win32 Thread Factory"");  Create Win32 thread factory. Also sets global gThreadFactory to this. ;  ; virtual ~TWin32ThreadFactory ();  ; TConditionImp * CreateConditionImp (TMutexImp *m) override;  Return a Win32 condition variable. ;  ; TMutexImp * CreateMutexImp (Bool_t recursive) override;  Return a Win32 Mutex. ;  ; TThreadImp * CreateThreadImp () override;  Return a Win32 thread. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TThreadFactory;  TThreadFactory (const char *name=""Unknown"", const char *title=""Unknown Thread Factory"");  TThreadFactory ctor only called by derived classes. ;  ; virtual ~TThreadFactory ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32ThreadFactory.html:88,Load,Loading,88,doc/master/classTWin32ThreadFactory.html,https://root.cern,https://root.cern/doc/master/classTWin32ThreadFactory.html,1,['Load'],['Loading']
Performance,". ROOT: TWinNTSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; TWinNTSystem Class Reference. . Definition at line 58 of file TWinNTSystem.h. Public Types; typedef Bool_t(* ThreadMsgFunc_t) (MSG *);  ;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TWinNTSystem ();  ctor ;  ; virtual ~TWinNTSystem ();  dtor ;  ; void Abort (int code=0) override;  Abort the application. ;  ; int AcceptConnection (int sock) override;  Accept a connection. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void AddDynamicPath (const char *dir) override;  Add a new directory to the dynamic path. ;  ; void AddFileHandler (TFileHandler *fh) override;  Add a file handler to the list of system file handlers. ;  ; void AddSignalHandler (TSignalHandler *sh) override;  Add a signal handler to list of system signal handlers. ;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:81,Load,Loading,81,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,1,['Load'],['Loading']
Performance,". ROOT: TX11GLManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TX11GLManager Class ReferenceGraphics » 3D Graphics » OpenGL rendering. ; The TX11GLManager is X11 implementation of TGLManager. ; Definition at line 34 of file TX11GL.h. Classes; struct  TGLContext_t;  ; class  TX11GLImpl;  . Public Member Functions;  TX11GLManager ();  Constructor. ;  ;  ~TX11GLManager () override;  Destructor. ;  ; Bool_t AttachOffScreenDevice (Int_t ctxInd, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Attach off screen device. ;  ; Int_t CreateGLContext (Int_t winInd) override;  Context creation requires Display * and XVisualInfo (was saved for such winInd). ;  ; void DeleteGLContext (Int_t devInd) override;  Deletes GLX context and frees pixmap and image (if any). ;  ; void ExtractViewport (Int_t devInd, Int_t *vp) override;  Returns the current dimensions of a GL pixmap. ;  ; void Flush (Int_t ctxInd) override;  Swaps buffers or copy pixmap. ;  ; char * GetPlotInfo (TVirtualGLPainter *plot, Int_t px, Int_t py) override;  Analog of TObject::GetObjectInfo. ;  ; Int_t GetVirtualXInd (Int_t devInd) override;  Returns an index suitable for gVirtualX. ;  ; Bool_t HighColorFormat (Int_t) override;  ; Int_t InitGLWindow (Window_t winID) override;  Try to find correct visual. ;  ; TClass * IsA () const override;  ; Bool_t MakeCurrent (Int_t devInd) override;  Make GL context current. ;  ; void MarkForDirectCopy (Int_t devInd, Bool_t) override;  Selection-rotation support for TPad/TCanvas. ;  ; void PaintSingleObject (TVirtualGLPainter *) override;  Paint a single object. ;  ; void PanObject (TVirtualGLPainter *o, Int_t x, Int_t y) override;  Pan objects. ;  ; Bool_t PlotSelected (TVirtualGLPainter *plot, Int_t px, Int_t py) override;  Analog of TObject::DistancetoPrim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTX11GLManager.html:82,Load,Loading,82,doc/master/classTX11GLManager.html,https://root.cern,https://root.cern/doc/master/classTX11GLManager.html,1,['Load'],['Loading']
Performance,". ROOT: TXMLAttr Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TXMLAttr Class ReferenceInput/Output Library. ; TXMLAttribute is the attribute of an Element. ; It contains the name and the value of the attribute. ; Definition at line 18 of file TXMLAttr.h. Public Member Functions;  TXMLAttr (const char *key, const char *value);  ;  ~TXMLAttr () override;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetValue () const;  ; TClass * IsA () const override;  ; const char * Key () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLAttr.html:77,Load,Loading,77,doc/master/classTXMLAttr.html,https://root.cern,https://root.cern/doc/master/classTXMLAttr.html,1,['Load'],['Loading']
Performance,". ROOT: TXMLDocument Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TXMLDocument Class ReferenceInput/Output Library. ; TXMLDocument contains a pointer to an xmlDoc structure, after the parser returns a tree built during the document analysis. ; Definition at line 21 of file TXMLDocument.h. Public Member Functions;  TXMLDocument (_xmlDoc *doc);  TXMLDocument constructor. ;  ;  ~TXMLDocument () override;  TXMLDocument destructor. ;  ; const char * Encoding () const;  Returns external initial encoding, if any or 0 in case there is no document set. ;  ; TXMLNode * GetRootNode () const;  Returns the root element node. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const char * URL () const;  Returns the URI for the document or 0 in case there is no document set. ;  ; const char * Version () const;  Returns the XML version string or 0 in case there is no document set. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to whi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLDocument.html:81,Load,Loading,81,doc/master/classTXMLDocument.html,https://root.cern,https://root.cern/doc/master/classTXMLDocument.html,1,['Load'],['Loading']
Performance,". ROOT: TXMLEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TXMLEngine Class Reference. . Definition at line 26 of file TXMLEngine.h. Public Member Functions;  TXMLEngine ();  if true, do not create comments nodes in document during parsing ;  ;  ~TXMLEngine () override;  destructor for TXMLEngine object ;  ; void AddChild (XMLNodePointer_t parent, XMLNodePointer_t child);  add child element to xmlnode ;  ; void AddChildAfter (XMLNodePointer_t parent, XMLNodePointer_t child, XMLNodePointer_t afternode);  Insert new child node after already existing node. ;  ; void AddChildFirst (XMLNodePointer_t parent, XMLNodePointer_t child);  add node as first child ;  ; Bool_t AddComment (XMLNodePointer_t parent, const char *comment);  Adds comment line to the node. ;  ; Bool_t AddDocComment (XMLDocPointer_t xmldoc, const char *comment);  add comment line to the top of the document ;  ; Bool_t AddDocRawLine (XMLDocPointer_t xmldoc, const char *line);  Add just line on the top of xml document Line should has correct xml syntax that later it can be decoded by xml parser. ;  ; Bool_t AddDocStyleSheet (XMLDocPointer_t xmldoc, const char *href, const char *type=""text/css"", const char *title=nullptr, int alternate=-1, const char *media=nullptr, const char *charset=nullptr);  Add style sheet definition on the top of document. ;  ; void AddNodeContent (XMLNodePointer_t xmlnode, const char *content, Int_t len=0);  add new content of the xmlnode old content will be preserved, one could mix content with child nodes ;  ; Bool_t AddRawLine (XMLNodePointer_t parent, const char *line);  Add just line into xml file Line should has correct xml syntax that later it can be decoded by xml parser For instance, it can be comment or processing instructions. ;  ; Bool_t AddStyleSheet (XMLNo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEngine.html:79,Load,Loading,79,doc/master/classTXMLEngine.html,https://root.cern,https://root.cern/doc/master/classTXMLEngine.html,1,['Load'],['Loading']
Performance,". ROOT: TXMLEntity Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TXMLEntity Class Reference. . Definition at line 162 of file TXMLEngine.cxx. Public Member Functions;  TXMLEntity ();  is system (file) ;  ;  TXMLEntity (const TString &name, const TString &value, Bool_t sys);  ; Bool_t IsSystem () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEntity.html:79,Load,Loading,79,doc/master/classTXMLEntity.html,https://root.cern,https://root.cern/doc/master/classTXMLEntity.html,1,['Load'],['Loading']
Performance,". ROOT: TXMLFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TXMLFile Class Referencefinal. . Definition at line 25 of file TXMLFile.h. Public Member Functions;  TXMLFile ();  ;  TXMLFile (const char *filename, Option_t *option=""read"", const char *title=""title"", Int_t compression=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Open or creates local XML file with name filename. ;  ;  ~TXMLFile () override;  destructor of TXMLFile object ;  ; Bool_t AddXmlComment (const char *comment);  Add comment line on the top of the xml document This line can only be seen in xml editor and cannot be accessed later with TXMLFile methods. ;  ; Bool_t AddXmlLine (const char *line);  Add just one line on the top of xml document For instance, line can contain special xml processing instructions Line should has correct xml syntax that later it can be decoded by xml parser To be parsed later by TXMLFile again, this line should contain either xml comments or xml processing instruction. ;  ; Bool_t AddXmlStyleSheet (const char *href, const char *type=""text/css"", const char *title=nullptr, int alternate=-1, const char *media=nullptr, const char *charset=nullptr);  Adds style sheet definition on the top of xml document Creates <?xml-stylesheet alternate=""yes"" title=""compact"" href=""small-base.css"" type=""text/css""?> Attributes href and type must be supplied, other attributes: title, alternate, media, charset are optional if alternate==0, attribute alternate=""no"" will be created, if alternate>0, attribute alternate=""yes"" if alternate<0, attribute will not be created This style sheet definition cannot be later access with TXMLFile methods. ;  ; void Close (Option_t *option="""") final;  Close a XML file For mor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:77,Load,Loading,77,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['Load'],['Loading']
Performance,". ROOT: TXMLNode Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TXMLNode Class ReferenceInput/Output Library. ; TXMLNode contains a pointer to xmlNode, which is a node under the DOM tree. ; A node can be an Element, an Attribute, a Text Node or a Comment Node. One can navigate the DOM tree by accessing the siblings and parent or child nodes. Also retriving the Attribute or the Text in an Element node. ; Definition at line 20 of file TXMLNode.h. Public Types; enum  EXMLElementType { kXMLElementNode = 1; , kXMLAttributeNode = 2; , kXMLTextNode = 3; , kXMLCommentNode = 8; };  This enum is based on libxml tree Enum xmlElementType. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TXMLNode (_xmlNode *node, TXMLNode *parent=nullptr, TXMLNode *previous=nullptr);  TXMLNode constructor. ;  ;  ~TXMLNode () override;  Destructor. ;  ; TList * GetAttributes ();  Returns a list of node's attribute if any, returns 0 if no attribute. ;  ; TXMLNode * GetChildren ();  Returns the node's child if any, returns 0 if no child. ;  ; const char * GetContent () const;  Returns the content if any, or 0. ;  ; const char * GetNamespaceHref () const;  Returns th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLNode.html:77,Load,Loading,77,doc/master/classTXMLNode.html,https://root.cern,https://root.cern/doc/master/classTXMLNode.html,1,['Load'],['Loading']
Performance,". ROOT: TXMLParser Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TXMLParser Class ReferenceabstractInput/Output Library. ; TXMLParser is an abstract class which interfaces with Libxml2. ; Libxml2 is the XML C parser and toolkit developed for the Gnome project. The libxml library provides two interfaces to the parser, a DOM style tree interface and a SAX style event based interface. TXMLParser is parent class of TSAXParser and TDOMParser, which are a SAX interface and DOM interface of libxml. ; Definition at line 24 of file TXMLParser.h. Public Member Functions;  TXMLParser ();  Initializes parser variables. ;  ;  ~TXMLParser () override;  Cleanup. ;  ; Int_t GetParseCode () const;  ; const char * GetParseCodeMessage (Int_t parseCode) const;  Returns the parse code message. ;  ; Bool_t GetReplaceEntities () const;  ; Bool_t GetStopOnError () const;  ; Bool_t GetValidate () const;  ; const char * GetValidateError () const;  ; const char * GetValidateWarning () const;  ; TClass * IsA () const override;  ; virtual Int_t ParseBuffer (const char *contents, Int_t len)=0;  ; virtual Int_t ParseFile (const char *filename)=0;  ; void SetReplaceEntities (Bool_t val=kTRUE);  The parser will replace/expand entities. ;  ; void SetStopOnError (Bool_t stop=kTRUE);  Set parser stops in case of error: ;  ; void SetValidate (Bool_t val=kTRUE);  The parser will validate the xml file if val = true. ;  ; virtual void StopParser ();  Stops parsing. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLParser.html:79,Load,Loading,79,doc/master/classTXMLParser.html,https://root.cern,https://root.cern/doc/master/classTXMLParser.html,1,['Load'],['Loading']
Performance,". ROOT: TXMLPlayer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TXMLPlayer Class Reference. . Definition at line 25 of file TXMLPlayer.h. Public Member Functions;  TXMLPlayer ();  default constructor ;  ;  ~TXMLPlayer () override;  destructor of TXMLPlayer object ;  ; TClass * IsA () const override;  ; Bool_t ProduceCode (TList *cllist, const char *filename);  Produce streamers for provide class list TList should include list of classes, for which code should be generated. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLPlayer.html:79,Load,Loading,79,doc/master/classTXMLPlayer.html,https://root.cern,https://root.cern/doc/master/classTXMLPlayer.html,1,['Load'],['Loading']
Performance,". ROOT: TXTRU Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TXTRU Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; A poly-extrusion. . XTRU is a poly-extrusion with fixed outline shape in x-y, a sequence of z extents (segments) and two end faces perpendicular to the z axis. The x-y outline is defined by an ordered list of points; the overall scale of the outline scales linearly between z points and the center can have an x-y offset specified at each segment end.; A TXTRU has the following parameters:. name: name of the shape; title: shape's title; material: (see TMaterial); nxy: number of x-y vertex points constituting the outline – this number should be at least 3; nz: number of planes perpendicular to the z axis where the scaling dimension of the section is given – this number should be at least 2; Xvtx: array [nxy] of X coordinates of vertices; Yvtx: array [nxy] of Y coordinates of vertices; z: array [nz] of z plane positions; scale: array [nz] of scale factors; x0: array [nz] of x offsets; y0: array [nz] of y offsets. All XTRU shapes are correctly rendered in wire mode but can encounter difficulty when rendered as a solid with hidden surfaces. These exceptions occur if the outline shape is not a convex polygon. Both the X3D and OpenGL renderers expect polygons to be convex. The OpenGL spec specifies that points defining a polygon using the GL_POLYGON primitive may be rendered as the convex hull of that set.; Solid rendering under X3D can also give unexpected artifacts if the combination of x-y-z offsets and scales for the segments are chosen in such a manner that they represent a concave shape when sliced along a plane parallel to the z axis.; Choosing sets of point that represent a malformed poly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXTRU.html:74,Load,Loading,74,doc/master/classTXTRU.html,https://root.cern,https://root.cern/doc/master/classTXTRU.html,1,['Load'],['Loading']
Performance,". ROOT: TZIPFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; List of all members ; TZIPFile Class ReferenceInput/Output Library. ; Describes a ZIP archive file containing multiple sub-files. ; Typically the sub-files are ROOT files. Notice that the ROOT files should not be compressed when being added to the ZIP file, since ROOT files are normally already compressed. Such a ZIP file should be created like: zip -n root multi file1.root file2.root which creates a ZIP file multi.zip. A ZIP archive consists of files compressed with the popular ZLIB compression algorithm. The archive format is used among others by PKZip and Info-ZIP. The compression algorithm is also used by GZIP and the PNG graphics standard. The format of the archives is explained briefly below. This class provides an interface to read such archives. A ZIP archive contains a prefix, series of archive members (sub-files), and a central directory. In theory the archive could span multiple disks (or files) with the central directory of the whole archive on the last disk, but this class does not support such multi-part archives. The prefix is only used in self-extracting executable archive files. The members are stored in the archive sequentially, each with a local header followed by the (optionally) compressed data; the local header describes the member, including its file name and compressed and real sizes. The central directory includes the member details again, plus allows an extra member comment to be added. The last member in the central directory is an end marker that can contain a comment for the whole archive. Both the local header and the central directory can also carry extra member-specific data; the data in the local and global parts can be different. The fact that the archive has a globa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTZIPFile.html:77,Load,Loading,77,doc/master/classTZIPFile.html,https://root.cern,https://root.cern/doc/master/classTZIPFile.html,1,['Load'],['Loading']
Performance,". ROOT: TZIPMember Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Friends |; List of all members ; TZIPMember Class ReferenceInput/Output Library. ; A ZIP archive consists of files compressed with the popular ZLIB compression algorithm; this class records the information about a single archive member. ; Definition at line 156 of file TZIPFile.h. Public Member Functions;  TZIPMember ();  Default ctor. ;  ;  TZIPMember (const char *name);  Create ZIP member file. ;  ;  TZIPMember (const TZIPMember &member);  Copy ctor. ;  ;  ~TZIPMember () override;  Cleanup. ;  ; UInt_t GetAttrExt () const;  ; UInt_t GetAttrInt () const;  ; UInt_t GetCRC32 () const;  ; void * GetGlobal () const;  ; UInt_t GetGlobalLen () const;  ; UInt_t GetLevel () const;  ; void * GetLocal () const;  ; UInt_t GetLocalLen () const;  ; UInt_t GetMethod () const;  ; TClass * IsA () const override;  ; TZIPMember & operator= (const TZIPMember &rhs);  Assignment operator. ;  ; void Print (Option_t *option="""") const override;  Pretty print basic ZIP member info. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArchiveMember;  TArchiveMember ();  Default ctor. ;  ;  TArchiveMember (const char *name);  Create an archive member file. ;  ;  TArchiveMember (const TArchiveMember &member);  Copy ctor. ;  ;  ~TArchiveMember () override;  ; const char * GetComment () const;  ; Long64_t GetCompressedSize () const;  ; Long64_t GetDecompressedSize () const;  ; Long64_t GetFilePosition () const;  ; TDatime GetModTime () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Long64_t GetPosition () const;  ; Bool_t IsDirectory () const;  ; TArchiveMember & operator= (const TArchiveMember &rhs);  Assignmen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTZIPMember.html:79,Load,Loading,79,doc/master/classTZIPMember.html,https://root.cern,https://root.cern/doc/master/classTZIPMember.html,1,['Load'],['Loading']
Performance,". ROOT: The Geometry Package. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; The Geometry Package. ; The ROOT geometry package is a tool for building, browsing, navigating and visualizing detector geometries. The code works standalone with respect to any tracking Monte-Carlo engine; therefore, it does not contain any constraints related to physics. However, the navigation features provided by the package are designed to optimize particle transport through complex geometries, working in correlation with simulation packages such as GEANT3, GEANT4 and FLUKA. Quick Start: Creating the world; Example 1: Creating the World; Example 2: A Geometrical Hierarchy Look and Feel. Selecting the System of Units in ROOT; Geometry Creation; The Volume Hierarchy; Creating and Positioning Volumes; Making Volumes; Example of Volume Creation; Positioned Volumes (Nodes); Virtual Containers and Assemblies of Volumes; Examples of Volume Positioning; Overlapping Volumes; Replicating Volumes; Volume Families; Dividing Volumes; Volume Assemblies. Geometrical Transformations; Matrix Creation Example; Rule for Creation of Transformations; Available Geometrical Transformations. Ownership of Geometry Objects. Navigation and Tracking; TGeoNavigator Class; Initializing the Starting Point; Initializing the Direction; Initializing the State; Checking the Current State; Saving and Restoring the Current State; Navigation Queries; Finding If Current State Is Changed For a New Point; Finding the Distance to the Next Boundary; Computing the Safe Radius; Making a Step; The Normal Vector to the Next Crossed Surface at Crossing Point. Creating and Visualizing Tracks. Checking the Geometry; The Overlap Checker; Graphical Checking Methods. The Drawing Package; Drawing Volumes and Hierarchies of Volumes; Visualization Settings and Attributes; Colors and Line Styles; Visibility Settings. Ray Tracing; Clipping Ray-traced Images. Representing Misalignments of the Ideal Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:73,Load,Loading,73,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,2,"['Load', 'optimiz']","['Loading', 'optimize']"
Performance,". ROOT: Timer Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; Timer Struct Reference. . Definition at line 54 of file histspeedtest.cxx. Public Types; using TimePoint_t = decltype(std::chrono::high_resolution_clock::now());  . Public Member Functions;  Timer (const char *title, size_t count);  ;  ~Timer ();  . Public Attributes; size_t fCount;  ; TimePoint_t fStart;  ; const char * fTitle;  . Member Typedef Documentation. ◆ TimePoint_t. using Timer::TimePoint_t = decltype(std::chrono::high_resolution_clock::now()). Definition at line 55 of file histspeedtest.cxx. Constructor & Destructor Documentation. ◆ Timer(). Timer::Timer ; (; const char * ; title, . size_t ; count . ). inline . Definition at line 61 of file histspeedtest.cxx. ◆ ~Timer(). Timer::~Timer ; (; ). inline . Definition at line 65 of file histspeedtest.cxx. Member Data Documentation. ◆ fCount. size_t Timer::fCount. Definition at line 58 of file histspeedtest.cxx. ◆ fStart. TimePoint_t Timer::fStart. Definition at line 59 of file histspeedtest.cxx. ◆ fTitle. const char* Timer::fTitle. Definition at line 57 of file histspeedtest.cxx. Collaboration diagram for Timer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; hist/histv7/speed/histspeedtest.cxx. Timer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:52 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structTimer.html:75,Load,Loading,75,doc/master/structTimer.html,https://root.cern,https://root.cern/doc/master/structTimer.html,1,['Load'],['Loading']
Performance,". ROOT: Track Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; Track Class Reference. . Definition at line 30 of file JetEvent.h. Public Member Functions;  Track ();  ;  ~Track () override;  ; TRefArray & GetHits ();  ; Int_t GetNhit () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTrack.html:74,Load,Loading,74,doc/master/classTrack.html,https://root.cern,https://root.cern/doc/master/classTrack.html,1,['Load'],['Loading']
Performance,". ROOT: Tree Library. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files |; Namespaces |; Classes ; Tree Library. ; In order to store columnar datasets, ROOT provides the TTree, TChain, TNtuple and TNtupleD classes. ; The TTree class represents a columnar dataset. Any C++ type can be stored in the columns. The TTree has allowed to store about 1 EB of data coming from the LHC alone: it is demonstrated to scale and it's battle tested. It has been optimized during the years to reduce dataset sizes on disk and to deliver excellent runtime performance. It allows to access only part of the columns of the datasets, too. The TNtuple and TNtupleD classes are specialisations of the TTree class which can only hold single precision and double precision floating-point numbers respectively; The TChain is a collection of TTrees, which can be located also in different files. . Files; file  InternalTreeUtils.hxx;  ; file  RFriendInfo.hxx;  . Namespaces; namespace  ROOT::Internal::TreeUtils;  Namespace hosting functions and classes to retrieve tree information for internal use. ;  . Classes; struct  ROOT::TreeUtils::RFriendInfo;  Information about friend trees of a certain TTree or TChain object. More...;  ; class  TBasket;  Manages buffers for branches of a Tree. More...;  ; class  TBasketSQL;  Implement TBasket for a SQL backend. More...;  ; class  TBranch;  A TTree is a list of TBranches. More...;  ; class  TBranchClones;  A Branch for the case of an array of clone objects. More...;  ; class  TBranchElement;  A Branch for the case of an object. More...;  ; class  TBranchObject;  A Branch for the case of an object. More...;  ; class  TBranchRef;  A branch containing and managing a TRefTable for TRef autoloading. More...;  ; class  TBranchSTL;  A Branch handling STL collection of pointers (vectors, lists, queues, sets and multisets) while storing them in split mode. More...;  ; class  TBufferSQL;  Implement TBuffer for a SQL backend. More...;  ; cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tree.html:65,Load,Loading,65,doc/master/group__tree.html,https://root.cern,https://root.cern/doc/master/group__tree.html,3,"['Load', 'optimiz', 'perform']","['Loading', 'optimized', 'performance']"
Performance,". ROOT: Tree tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Tree tutorialsTutorials. ; Example code which illustrates how to use ROOT trees and ntuples. . Files; file  basic.C;   Read data from an ascii file and create a root file with an histogram and an ntuple. ;  ; file  basic2.C;   Create can ntuple reading data from an ascii file. ;  ; file  bill.C;   Benchmark comparing row-wise and column-wise storage performance ;  ; file  cernbuild.C;   Read data (CERN staff) from an ascii file and create a root file with a Tree. ;  ; file  cernstaff.C;   Playing with a Tree containing variables of type character ;  ; file  circular.C;   Example of a circular Tree ;  ; file  clonesA_Event.C;  Example to write & read a Tree built with a complex class inheritance tree. ;  ; file  copytree.C;   Copy a subset of a Tree to a new Tree ;  ; file  copytree2.C;   Copy a subset of a Tree to a new Tree, one branch in a separate file. ;  ; file  copytree3.C;   Example of Root macro to copy a subset of a Tree to a new Tree, selecting entries. ;  ; file  drawsparse.C;   Convert a THnSparse to a TTree using efficient iteration through the THnSparse and draw a THnSparse using TParallelCoord. ;  ; file  h1analysis.C;   Example of analysis class for the H1 data. ;  ; file  h1analysisProxy.C;  Example of analysis class for the H1 data using code generated by MakeProxy. ;  ; file  h1analysisTreeReader.C;  H1 analysis example expressed in terms of TTreeReader (see h1analysis.C). ;  ; file  h1chain.C;   Creates a TChain to be used by the h1analysis.C class the symbol H1 must point to a directory where the H1 data sets have been installed. ;  ; file  hsimpleProxy.C;   Used by hsimpleProxyDriver.C. ;  ; file  hsimpleProxyDriver.C;   This is the driver of the hsimpleProxy example. ;  ; file  hsimpleReader.C;   TTreeReader simplest example. ;  ; file  htest.C;   Save histograms in Tree branches ;  ; file  hvector.C;   Write and read STL vectors in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__tree.html:67,Load,Loading,67,doc/master/group__tutorial__tree.html,https://root.cern,https://root.cern/doc/master/group__tutorial__tree.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: TreeReadBuffer Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TreeReadBuffer Struct Referenceabstract. . Definition at line 18 of file TreeReadBuffer.h. Public Member Functions; virtual ~TreeReadBuffer ()=default;  ; virtual operator double ()=0;  ; virtual operator int ()=0;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/roofit/roofitcore/src/TreeReadBuffer.h>. Inheritance diagram for TreeReadBuffer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TreeReadBuffer(). virtual TreeReadBuffer::~TreeReadBuffer ; (; ). virtualdefault . Member Function Documentation. ◆ operator double(). virtual TreeReadBuffer::operator double ; (; ). pure virtual . Implemented in TypedTreeReadBuffer< T >. ◆ operator int(). virtual TreeReadBuffer::operator int ; (; ). pure virtual . Implemented in TypedTreeReadBuffer< T >. The documentation for this struct was generated from the following file:; roofit/roofitcore/src/TreeReadBuffer.h. TreeReadBuffer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structTreeReadBuffer.html:84,Load,Loading,84,doc/master/structTreeReadBuffer.html,https://root.cern,https://root.cern/doc/master/structTreeReadBuffer.html,1,['Load'],['Loading']
Performance,". ROOT: Tutorials specific to Mac/Cocoa. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Tutorials specific to Mac/CocoaTutorials. ; Various examples showing graphics done with the Mac graphics system Cocoa. ; These examples run only on Mac/Os . Files; file  flower.C;  A demo to show transparency with TMultiGraph (and a really interesting curve/equation). ;  ; file  grad.C;  This macro shows how to create and use linear gradients to fill a histogram or a pad. ;  ; file  grad2.C;  Gradient fill with transparency and ""SAME"" option. ;  ; file  gradients.C;  This macro requires OS X and ROOT compiled with –enable-cocoa to run. ;  ; file  parallelcoordtrans.C;  Script illustrating the use of transparency with ||-Coord. ;  ; file  radialgradients.C;  This tutorial demonstrates how to use radial gradients, custom colors, transparency. ;  ; file  transp.C;  This demo shows how to use transparency. ;  ; file  transp_text.C;  This macro is based on labels1.C by Rene Brun. ;  ; file  transparentpad.C;  This macro demonstrates semi-transparent pads. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__cocoa.html:84,Load,Loading,84,doc/master/group__tutorial__cocoa.html,https://root.cern,https://root.cern/doc/master/group__tutorial__cocoa.html,1,['Load'],['Loading']
Performance,". ROOT: Tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Files ; Tutorials. ; A collection of C++ macros, Python scripts and notebooks helping to learn ROOT by example. ; You can execute the scripts in $ROOTSYS/tutorials (or sub-directories) by setting your current directory in the script directory or from any user directory with write access.; Several tutorials create new files. If you have write access to the tutorials directory, the new files will be created in the tutorials directory, otherwise they will be created in the user directory.; You can start by executing the standard ROOT demos with a session like:; root > .x demos.C; or; root > .x $ROOTSYS/tutorials/demos.C; You can execute the standard ROOT graphics benchmark with; root > .x benchmarks.C; or; root > .x $ROOTSYS/tutorials/benchmarks.C; The $ROOTSYS/tutorials directory includes several sub-directories: . Modules;  Histograms tutorials;  Examples showing the ""histograms' classes"" usage. ;  ;  Tree tutorials;  Example code which illustrates how to use ROOT trees and ntuples. ;  ;  Dataframe tutorials;  These examples show various features of RDataFrame: ROOT's declarative analysis interface. ;  ;  ROOT 7 tutorials;  Various examples showing the ROOT 7 interface. ;  ;  FOAM tutorials;  Examples showing how to use FOAM. ;  ;  Containers tutorials;  Examples showing the ""containers' classes"" usage. ;  ;  Event display tutorials;  Examples showing the ""Event display classes"" usage. ;  ;  Event display ROOT7 tutorials;  Examples showing the ""Event display classes"" usage with ROOT7. ;  ;  Geometry tutorials;  Various ROOT geometry package examples. ;  ;  Fast Fourier Transforms tutorials;  Example showing the Fast Fourier Transforms interface in ROOT. ;  ;  Fit Tutorials;  These tutorials illustrate the main fitting features. Their names are related to the aspect which is treated in the code. ;  ;  RooFit Tutorials;  These tutorials illustrate the main feat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Tutorials.html:62,Load,Loading,62,doc/master/group__Tutorials.html,https://root.cern,https://root.cern/doc/master/group__Tutorials.html,1,['Load'],['Loading']
Performance,. ROOT: Unuran tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Unuran tutorialsTutorials. ; Examples showing unuran capabilities. . Files; file  unuranDemo.C;  Example macro to show unuran capabilities The results are compared with what is obtained using TRandom or TF1::GetRandom The macro is divided in 3 parts: ;  ; file  unuranFoamTest.C;  This program must be compiled and executed with Aclic as follows. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__unuran.html:69,Load,Loading,69,doc/master/group__tutorial__unuran.html,https://root.cern,https://root.cern/doc/master/group__tutorial__unuran.html,1,['Load'],['Loading']
Performance,". ROOT: User Fitting classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes ; User Fitting classesMath » MathCore » Fitting and Parameter Estimation. ; Main Classes used for fitting a given data set. . Namespaces; namespace  ROOT::Fit::FitUtil;  namespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ;  . Classes; class  ROOT::Fit::FitConfig;  Class describing the configuration of the fit, options and parameter settings using the ROOT::Fit::ParameterSettings class. More...;  ; class  ROOT::Fit::FitResult;  class containing the result of the fit and all the related information (fitted parameter values, error, covariance matrix and minimizer result information) Contains a pointer also to the fitted (model) function, modified with the fit parameter values. More...;  ; class  ROOT::Fit::Fitter;  Fitter class, entry point for performing all type of fits. More...;  ; class  ROOT::Fit::ParameterSettings;  Class, describing value, limits and step size of the parameters Provides functionality also to set/retrieve values, step sizes, limits and fix the parameters. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__FitMain.html:73,Load,Loading,73,doc/master/group__FitMain.html,https://root.cern,https://root.cern/doc/master/group__FitMain.html,2,"['Load', 'perform']","['Loading', 'performing']"
Performance,". ROOT: UserGroup_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; UserGroup_t Struct Reference. . Definition at line 136 of file TSystem.h. Public Member Functions;  UserGroup_t ();  . Public Attributes; Int_t fGid;  ; TString fGroup;  ; TString fPasswd;  ; TString fRealName;  ; TString fShell;  ; Int_t fUid;  ; TString fUser;  . #include <TSystem.h>; Constructor & Destructor Documentation. ◆ UserGroup_t(). UserGroup_t::UserGroup_t ; (; ). inline . Definition at line 144 of file TSystem.h. Member Data Documentation. ◆ fGid. Int_t UserGroup_t::fGid. Definition at line 138 of file TSystem.h. ◆ fGroup. TString UserGroup_t::fGroup. Definition at line 140 of file TSystem.h. ◆ fPasswd. TString UserGroup_t::fPasswd. Definition at line 141 of file TSystem.h. ◆ fRealName. TString UserGroup_t::fRealName. Definition at line 142 of file TSystem.h. ◆ fShell. TString UserGroup_t::fShell. Definition at line 143 of file TSystem.h. ◆ fUid. Int_t UserGroup_t::fUid. Definition at line 137 of file TSystem.h. ◆ fUser. TString UserGroup_t::fUser. Definition at line 139 of file TSystem.h. Collaboration diagram for UserGroup_t:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; core/base/inc/TSystem.h. UserGroup_t. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structUserGroup__t.html:81,Load,Loading,81,doc/master/structUserGroup__t.html,https://root.cern,https://root.cern/doc/master/structUserGroup__t.html,1,['Load'],['Loading']
Performance,". ROOT: Value Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; Value Struct Reference. . Definition at line 15 of file functioncalls.h. Public Attributes; int m_int;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/bindings/pyroot/cppyy/cppyy/bench/functioncalls.h>; Member Data Documentation. ◆ m_int. int Value::m_int. Definition at line 15 of file functioncalls.h. Collaboration diagram for Value:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; bindings/pyroot/cppyy/cppyy/bench/functioncalls.h. Value. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structValue.html:75,Load,Loading,75,doc/master/structValue.html,https://root.cern,https://root.cern/doc/master/structValue.html,1,['Load'],['Loading']
Performance,". ROOT: VecOps tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; VecOps tutorialsTutorials. ; These examples show the functionalities of the VecOps utilities. ; Please note that you can find the exhaustive documentation here in the reference guide. . Files; file  vo001_AdoptOrOwnMemory.C;   In this tutorial we learn how the RVec class can be used to adopt existing memory or allocate some. ;  ; file  vo001_AdoptOrOwnMemory.py;   In this tutorial we learn how the RVec class can be used to adopt existing memory or allocate some. ;  ; file  vo002_VectorCalculations.C;   In this tutorial we learn how the RVec class can be used to express easily mathematical operations involving arrays and scalars. ;  ; file  vo003_LogicalOperations.C;   In this tutorial we learn how the RVec class can be used to express logical operations. ;  ; file  vo004_SortAndSelect.C;   In this tutorial we learn how elements of an RVec can be easily sorted and selected. ;  ; file  vo004_SortAndSelect.py;   In this tutorial we learn how elements of an RVec can be easily sorted and selected. ;  ; file  vo005_Combinations.C;   In this tutorial we learn how combinations of RVecs can be built. ;  ; file  vo005_Combinations.py;   In this tutorial we learn how combinations of RVecs can be built. ;  ; file  vo006_IndexManipulation.C;   In this tutorial we demonstrate RVec helpers for index manipulation. ;  ; file  vo007_PhysicsHelpers.C;   In this tutorial we demonstrate RVec helpers for physics computations such as angle differences \(\Delta \phi\), the distance in the \(\eta\)- \(\phi\) plane \(\Delta R\) and the invariant mass. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__vecops.html:69,Load,Loading,69,doc/master/group__tutorial__vecops.html,https://root.cern,https://root.cern/doc/master/group__tutorial__vecops.html,1,['Load'],['Loading']
Performance,". ROOT: VecOps. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; VecOps. ; A ""std::vector""-like collection of values implementing handy operation to analyse them. . Classes; class  ROOT::VecOps::RVec< T >;  A ""std::vector""-like collection of values implementing handy operation to analyse them. More...;  ; class  ROOT::VecOps::RVecN< T, N >;  . Functions; template<typename T > ; auto ROOT::VecOps::All (const RVec< T > &v) -> decltype(v[0]==false);  Return true if all of the elements equate to true, return false otherwise. ;  ; template<typename T0 , typename T1 = T0, typename T2 = T0, typename T3 = T0, typename T4 = T0, typename T5 = T0, typename Common_t = std::common_type_t<T0, T1>> ; Common_t ROOT::VecOps::Angle (T0 x1, T1 y1, T2 z1, T3 x2, T4 y2, T5 z2);  Return the angle between two three-vectors given the quantities x coordinate (x), y coordinate (y), z coordinate (y). ;  ; template<typename T > ; auto ROOT::VecOps::Any (const RVec< T > &v) -> decltype(v[0]==true);  Return true if any of the elements equates to true, return false otherwise. ;  ; template<typename T > ; std::size_t ROOT::VecOps::ArgMax (const RVec< T > &v);  Get the index of the greatest element of an RVec In case of multiple occurrences of the maximum values, the index corresponding to the first occurrence is returned. ;  ; template<typename T > ; std::size_t ROOT::VecOps::ArgMin (const RVec< T > &v);  Get the index of the smallest element of an RVec In case of multiple occurrences of the minimum values, the index corresponding to the first occurrence is returned. ;  ; template<typename T > ; RVec< typename RVec< T >::size_type > ROOT::VecOps::Argsort (const RVec< T > &v);  Return an RVec of indices that sort the input RVec. ;  ; template<typename T , typename Compare > ; RVec< typename RVec< T >::size_type > ROOT::VecOps::Argsort (const RVec< T > &v, Compare &&c);  Return an RVec of indices that sort the input RVec based on a comparison fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__vecops.html:59,Load,Loading,59,doc/master/group__vecops.html,https://root.cern,https://root.cern/doc/master/group__vecops.html,1,['Load'],['Loading']
Performance,". ROOT: Vector Template Functions. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Vector Template FunctionsMath » SMatrix Package. ; These functions apply to SVector types (and also to Vector expressions) and can return a vector expression or a scalar, like in the Dot product, or a matrix, like in the Tensor product. . Functions; template<class T > ; SVector< T, 3 > ROOT::Math::Cross (const SVector< T, 3 > &lhs, const SVector< T, 3 > &rhs);  Vector Cross Product (only for 3-dim vectors) \( \vec{c} = \vec{a}\times\vec{b} \). ;  ; template<class T , unsigned int D> ; T ROOT::Math::Dot (const SVector< T, D > &lhs, const SVector< T, D > &rhs);  Vector dot product. ;  ; template<class T , unsigned int D> ; VecExpr< UnaryOp< Fabs< T >, SVector< T, D >, T >, T, D > ROOT::Math::fabs (const SVector< T, D > &rhs);  abs of a vector : v2(i) = | v1(i) | returning a vector expression ;  ; template<class T > ; T ROOT::Math::Lmag (const SVector< T, 4 > &rhs);  Lmag: Minkowski Lorentz-Vector norm (only for 4-dim vectors) Length of a vector Lorentz-Vector: \( |\vec{v}| = \sqrt{v_0^2 - v_1^2 - v_2^2 -v_3^2} \). ;  ; template<class T > ; T ROOT::Math::Lmag2 (const SVector< T, 4 > &rhs);  Lmag2: Square of Minkowski Lorentz-Vector norm (only for 4D Vectors) Template to compute \( |\vec{v}|^2 = v_0^2 - v_1^2 - v_2^2 -v_3^2 \). ;  ; template<class T , unsigned int D> ; T ROOT::Math::Mag (const SVector< T, D > &rhs);  Vector magnitude (Euclidean norm) Compute : \( |\vec{v}| = \sqrt{\sum_iv_i^2} \). ;  ; template<class T , unsigned int D> ; T ROOT::Math::Mag2 (const SVector< T, D > &rhs);  Vector magnitude square Template to compute \(|\vec{v}|^2 = \sum_iv_i^2 \). ;  ; template<class T , unsigned int D> ; VecExpr< BinaryOp< MulOp< T >, SVector< T, D >, SVector< T, D >, T >, T, D > ROOT::Math::operator* (const SVector< T, D > &lhs, const SVector< T, D > &rhs);  Element by element vector product v3(i) = v1(i)*v2(i) returning a vector expression. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__VectFunction.html:78,Load,Loading,78,doc/master/group__VectFunction.html,https://root.cern,https://root.cern/doc/master/group__VectFunction.html,1,['Load'],['Loading']
Performance,". ROOT: Webgui tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Webgui tutorialsTutorials. ; Webgui examples. . Files; file  geom_threejs.cxx;  The tutorial demonstrates how three.js model for geometry can be created and displayed. ;  ; file  ping.cxx;  Test suite for RWebWindow communication performance. ;  ; file  web_cms.cxx;  Web-based geometry viewer for CMS geometry. ;  ; file  webpanel.cxx;  This macro demonstrates simple openui5 panel, shown with RWebWindow. ;  ; file  webwindow.cxx;  Minimal server/client code for working with RWebWindow class. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__webgui.html:69,Load,Loading,69,doc/master/group__tutorial__webgui.html,https://root.cern,https://root.cern/doc/master/group__tutorial__webgui.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: WindowAttributes_t Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; WindowAttributes_t Struct Reference. ; Window attributes that can be inquired. ; Definition at line 114 of file GuiTypes.h. Public Attributes; Long_t fAllEventMasks;  set of events all people have interest in ;  ; ULong_t fBackingPixel;  value to be used when restoring planes ;  ; ULong_t fBackingPlanes;  planes to be preserved if possible ;  ; Int_t fBackingStore;  kNotUseful, kWhenMapped, kAlways ;  ; Int_t fBitGravity;  one of bit gravity values ;  ; Int_t fBorderWidth;  border width of window ;  ; Int_t fClass;  kInputOutput, kInputOnly ;  ; Colormap_t fColormap;  color map to be associated with window ;  ; Int_t fDepth;  depth of window ;  ; Long_t fDoNotPropagateMask;  set of events that should not propagate ;  ; Int_t fHeight;  width and height of window ;  ; Bool_t fMapInstalled;  boolean, is color map currently installed ;  ; Int_t fMapState;  kIsUnmapped, kIsUnviewable, kIsViewable ;  ; Bool_t fOverrideRedirect;  boolean value for override-redirect ;  ; Window_t fRoot;  root of screen containing window ;  ; Bool_t fSaveUnder;  boolean, should bits under be saved? ;  ; void * fScreen;  back pointer to correct screen ;  ; void * fVisual;  the associated visual structure ;  ; Int_t fWidth;  ; Int_t fWinGravity;  one of the window gravity values ;  ; Int_t fX;  ; Int_t fY;  location of window ;  ; Long_t fYourEventMask;  my event mask ;  . #include <GuiTypes.h>; Member Data Documentation. ◆ fAllEventMasks. Long_t WindowAttributes_t::fAllEventMasks. set of events all people have interest in ; Definition at line 131 of file GuiTypes.h. ◆ fBackingPixel. ULong_t WindowAttributes_t::fBackingPixel. value to be used when restoring planes ; Definition at line 126 of file GuiTypes.h. ◆ fBackingPlanes. ULong_t WindowAttributes_t::fBackingPlanes. planes to be preserved if possible ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structWindowAttributes__t.html:88,Load,Loading,88,doc/master/structWindowAttributes__t.html,https://root.cern,https://root.cern/doc/master/structWindowAttributes__t.html,1,['Load'],['Loading']
Performance,". ROOT: XML tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; XML tutorialsTutorials. ; XML examples. . Files; file  DOMParsePerson.C;  ROOT implementation of a XML DOM Parser. ;  ; file  DOMRecursive.C;  ROOT implementation of a XML DOM Parser. ;  ; file  SAXHandler.C;  ROOT implementation of a simple SAX Handler. ;  ; file  xmlmodifyfile.C;  Example to read, modify and store xml file, using TXMLEngine class The input file, produced by xmlnewfile.C macro is used If you need full xml syntax support, use TXMLParser instead. ;  ; file  xmlnewfile.C;  Example to create a new xml file with the TXMLEngine class. ;  ; file  xmlreadfile.C;  Example to read and parse any xml file, supported by TXMLEngine class The input file, produced by xmlnewfile.C macro is used If you need full xml syntax support, use TXMLParser instead. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__xml.html:66,Load,Loading,66,doc/master/group__tutorial__xml.html,https://root.cern,https://root.cern/doc/master/group__tutorial__xml.html,1,['Load'],['Loading']
Performance,. ROOT: arrow Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. arrow Namespace Reference. arrow. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespacearrow.html:78,Load,Loading,78,doc/master/namespacearrow.html,https://root.cern,https://root.cern/doc/master/namespacearrow.html,1,['Load'],['Loading']
Performance,". ROOT: bindings/pyroot/cppyy/CPyCppyy/src/API.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. API.cxx. Go to the documentation of this file. 1// Bindings; 2#include ""CPyCppyy.h""; 3#define CPYCPPYY_INTERNAL 1; 4#include ""CPyCppyy/API.h""; 5#undef CPYCPPYY_INTERNAL; 6 ; 7#include ""CPPInstance.h""; 8#include ""CPPOverload.h""; 9#include ""CPPScope.h""; 10#include ""ProxyWrappers.h""; 11#include ""PyStrings.h""; 12 ; 13// Standard; 14#include <stdio.h>; 15#include <iostream>; 16#include <string>; 17 ; 18//______________________________________________________________________________; 19// CPyCppyy API: Interpreter and Proxy Access; 20// ==========================================; 21//; 22// Access to cppyy Python objects from Cling and C++: allows conversion for; 23// instances and type checking for scopes, instances, etc.; 24// Adds a few convenience functions to call Python from Cling and expose Python; 25// classes to Cling for use in inheritance etc.; 26 ; 27 ; 28//- data ---------------------------------------------------------------------; 29static PyObject* gMainDict = nullptr;; 30 ; 31namespace CPyCppyy {; 32 extern PyObject* gThisModule;; 33}; 34 ; 35 ; 36//- private helpers ----------------------------------------------------------; 37namespace {; 38 ; 39static bool Initialize(); 40{; 41// Private initialization method: setup the python interpreter and load the; 42// cppyy module.; 43 static bool isInitialized = false;; 44 if (isInitialized); 45 return true;; 46 ; 47 if (!Py_IsInitialized()) {; 48 // this happens if Cling comes in first; 49#if PY_VERSION_HEX < 0x03020000; 50 PyEval_InitThreads();; 51#endif; 52#if PY_VERSION_HEX < 0x03080000; 53 Py_Initialize();; 54#else; 55 PyConfig config;; 56 PyConfig_InitPythonConfig(&config);; 57 PyConfig_SetString(&config, &config.program_name, L""cppyy"");; 58 Py_InitializeFromConfig(&config);; 59#endif; 60#if PY_VERSION_HEX >= 0x03020000; 61#if PY_VERSION_HEX < 0x03090000; 62 PyEval",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/API_8cxx_source.html:107,Load,Loading,107,doc/master/API_8cxx_source.html,https://root.cern,https://root.cern/doc/master/API_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: bindings/r/inc/TRFunctionImport__oprtr.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; TRFunctionImport__oprtr.h File Reference. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; template<typename T1 > ; TRObject operator() (const T1 &t1) const;  ; template<typename T1 , typename T2 > ; TRObject operator() (const T1 &t1, const T2 &t2) const;  ; template<typename T1 , typename T2 , typename T3 > ; TRObject operator() (const T1 &t1, const T2 &t2, const T3 &t3) const;  ; template<typename T1 , typename T2 , typename T3 , typename T4 > ; TRObject operator() (const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4) const;  ; template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 > ; TRObject operator() (const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5) const;  ; template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 > ; TRObject operator() (const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6) const;  ; template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 > ; TRObject operator() (const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6, const T7 &t7) const;  ; template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 > ; TRObject operator() (const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6, const T7 &t7, const T8 &t8) const;  ; template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 > ; TRObject operator() (const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6, const T7 &t7, const T8 &t8, const T9 &t9) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRFunctionImport____oprtr_8h.html:108,Load,Loading,108,doc/master/TRFunctionImport____oprtr_8h.html,https://root.cern,https://root.cern/doc/master/TRFunctionImport____oprtr_8h.html,1,['Load'],['Loading']
Performance,". ROOT: bindings/r/inc/TRFunctionImport__oprtr.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRFunctionImport__oprtr.h. Go to the documentation of this file. 1// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; tab-width: 8 -*-; 2//; 3// TRFunctionImport__oprt.h: based in Rcpp R/C++ interface class library -- generated helper code for Function.h; 4//; 5// Copyright (C) 2010 - 2013 Dirk Eddelbuettel and Romain Francois; 6// Modified by Omar Zapata for ROOTR; 7//; 8// This file is based in Rcpp.; 9 ; 10#ifndef ROOT_R_TRFunctionImport_oprtr; 11#define ROOT_R_TRFunctionImport_oprtr; 12 ; 13template <typename T1>; 14TRObject operator()(const T1 &t1) const; 15{; 16 return (*f)(t1) ;; 17}; 18 ; 19template <typename T1, typename T2>; 20TRObject operator()(const T1 &t1, const T2 &t2) const; 21{; 22 return (*f)(t1, t2) ;; 23}; 24 ; 25template <typename T1, typename T2, typename T3>; 26TRObject operator()(const T1 &t1, const T2 &t2, const T3 &t3) const; 27{; 28 return (*f)(t1, t2, t3) ;; 29}; 30 ; 31template <typename T1, typename T2, typename T3, typename T4>; 32TRObject operator()(const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4) const; 33{; 34 return (*f)(t1, t2, t3, t4) ;; 35}; 36 ; 37template <typename T1, typename T2, typename T3, typename T4, typename T5>; 38TRObject operator()(const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5) const; 39{; 40 return (*f)(t1, t2, t3, t4, t5) ;; 41}; 42 ; 43template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>; 44TRObject operator()(const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6) const; 45{; 46 return (*f)(t1, t2, t3, t4, t5, t6) ;; 47}; 48 ; 49template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>; 50TRObject operator()(const T1 &t1, const T2 &t2, const T3 &t3, const T4 &t4, const T5 &t5, const T6 &t6, const T7 &t7) const; 51{; 52 return (*f)(t1, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRFunctionImport____oprtr_8h_source.html:105,Load,Loading,105,doc/master/TRFunctionImport____oprtr_8h_source.html,https://root.cern,https://root.cern/doc/master/TRFunctionImport____oprtr_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: bindings/r/tests/Functor.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Functions ; Functor.C File Reference. #include <TRInterface.h>; #include <TMath.h>. Include dependency graph for Functor.C:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  MyFunctor;  . Typedefs; typedef Double_t(* Function) (Double_t);  . Functions; void Functor ();  ;  RCPP_MODULE (MyFunctorModule);  . Typedef Documentation. ◆ Function. typedef Double_t(* Function) (Double_t). Definition at line 4 of file Functor.C. Function Documentation. ◆ Functor(). void Functor ; (; ). Definition at line 26 of file Functor.C. ◆ RCPP_MODULE(). RCPP_MODULE ; (; MyFunctorModule ; ). Definition at line 18 of file Functor.C. bindingsrtestsFunctor.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/bindings_2r_2tests_2Functor_8C.html:94,Load,Loading,94,doc/master/bindings_2r_2tests_2Functor_8C.html,https://root.cern,https://root.cern/doc/master/bindings_2r_2tests_2Functor_8C.html,1,['Load'],['Loading']
Performance,". ROOT: bindings/r/tests/Object.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; Object.C File Reference. #include <TRInterface.h>. Include dependency graph for Object.C:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; void Object ();  . Variables; ROOT::R::TRInterface & r = ROOT::R::TRInterface::Instance();  . Function Documentation. ◆ Object(). void Object ; (; ). Definition at line 6 of file Object.C. Variable Documentation. ◆ r. ROOT::R::TRInterface& r = ROOT::R::TRInterface::Instance(). Definition at line 4 of file Object.C. bindingsrtestsObject.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Object_8C.html:93,Load,Loading,93,doc/master/Object_8C.html,https://root.cern,https://root.cern/doc/master/Object_8C.html,1,['Load'],['Loading']
Performance,". ROOT: bindings/r/tests/ROOTR.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; ROOTR.C File Reference. #include <TRInterface.h>. Include dependency graph for ROOTR.C:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; Double_t myFunc (Double_t x);  ; void ROOTR ();  . Function Documentation. ◆ myFunc(). Double_t myFunc ; (; Double_t ; x). Definition at line 4 of file ROOTR.C. ◆ ROOTR(). void ROOTR ; (; ). Definition at line 9 of file ROOTR.C. bindingsrtestsROOTR.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ROOTR_8C.html:92,Load,Loading,92,doc/master/ROOTR_8C.html,https://root.cern,https://root.cern/doc/master/ROOTR_8C.html,1,['Load'],['Loading']
Performance,". ROOT: bindings/r/tests/ROOTR.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOTR.C. Go to the documentation of this file. 1//script to test Modules; 2#include<TRInterface.h>; 3 ; 4Double_t myFunc(Double_t x); 5{; 6 return cos(x);; 7}; 8 ; 9void ROOTR(); 10{; 11 ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; 12 r.SetVerbose(kFALSE);; 13 r.LoadModule(""Gpad"");; 14 r.LoadModule(""Hist"");; 15 r.LoadModule(""Rint"");; 16 ; 17 r<<""x<-seq(0,2*pi,by=.1)"";; 18 r<<""c1<-new(TCanvas,'c1','dlnorm')"";; 19 r<<""u <-new(TGraph,length(x),x,dlnorm(x))"" ;//TGraph(int,double*,double*); 20 r<<""u$Draw()"";; 21 ; 22 r<<""c2<-new(TCanvas,'c2','DiLog from TMath')"";; 23 r<<""o<- new(TF1,'dilog','TMath::DiLog(x)',0,2*pi)"";; 24 r<<""o$Draw()"";; 25// ; 26 r<<""c3<-new(TCanvas,'c3','Custom')"";; 27 r<<""i <- new(TF1,'f2','[0]*myFunc([1]*x)',0,2*pi)""; ; 28 r<<""i$SetRange(0,2*pi)"";; 29 r<<""i$SetParameter(0,4)"";; 30 r<<""i$SetParameter(1,pi/2)"";; 31 r<<""print(i$Eval(0))"";; 32 r<<""print(i$Eval(c(0,pi)))"";; 33 r<<""i$Draw('')"";; 34 ; 35// r<<""gApp<-new(TRint,'ROOTR')"";; 36// r<<""gApp$ProcessLine('cout<<\""Calling cout from TRint\""<<endl;')"";; 37 ; 38}; ROOTRvoid ROOTR()Definition ROOTR.C:9; myFuncDouble_t myFunc(Double_t x)Definition ROOTR.C:4; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Double_tdouble Double_tDefinition RtypesCore.h:59; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRInterface.h; ROOT::R::TRInterfaceROOT R was implemented using the R Project library and the modules Rcpp and RInsideDefinition TRInterface.h:136; ROOT::R::TRInterface::Instancestatic TRInterface & Instance()static method to get an TRInterface instance referenceDefinition TRInterface.cxx:187; xDouble_t x[n]Definition legend1.C:17. bindingsrtestsROOTR.C. ROOT ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ROOTR_8C_source.html:89,Load,Loading,89,doc/master/ROOTR_8C_source.html,https://root.cern,https://root.cern/doc/master/ROOTR_8C_source.html,4,['Load'],"['LoadModule', 'Loading']"
Performance,". ROOT: bindings/tpython/inc/TPython.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPython.h. Go to the documentation of this file. 1// Author: Enric Tejedor CERN 08/2019; 2// Original PyROOT code by Wim Lavrijsen, LBL; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPython; 13#define ROOT_TPython; 14 ; 15//////////////////////////////////////////////////////////////////////////////; 16// //; 17// TPython //; 18// //; 19// Access to the python interpreter and API onto PyROOT. //; 20// //; 21//////////////////////////////////////////////////////////////////////////////; 22 ; 23// Bindings; 24#include ""TPyReturn.h""; 25 ; 26// ROOT; 27#include ""TObject.h""; 28 ; 29#include ""ROOT/RConfig.hxx"" // R__DEPRECATED; 30 ; 31#include <any>; 32#include <cstdint>; 33 ; 34namespace ROOT {; 35namespace Internal {; 36 ; 37// Internal helper for PyROOT to swap with an object is at a specific address.; 38template<class T>; 39inline void SwapWithObjAtAddr(T &a, std::intptr_t b) { std::swap(a, *reinterpret_cast<T*>(b)); }; 40 ; 41}; 42}; 43 ; 44class TPython {; 45 ; 46private:; 47 static Bool_t Initialize();; 48 ; 49public:; 50 // import a python module, making its classes available; 51 static Bool_t Import(const char *name);; 52 ; 53 // load a python script as if it were a macro; 54 static void LoadMacro(const char *name);; 55 ; 56 // execute a python stand-alone script, with argv CLI arguments; 57 static void ExecScript(const char *name, int argc = 0, const char **argv = nullptr);; 58 ; 59 // execute a python statement (e.g. ""import ROOT"" ); 60 static Bool_t Exec(const char *cmd, std::any *resul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8h_source.html:95,Load,Loading,95,doc/master/TPython_8h_source.html,https://root.cern,https://root.cern/doc/master/TPython_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: bindings/tpython/src/TPython.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPython.cxx. Go to the documentation of this file. 1// Author: Enric Tejedor CERN 08/2019; 2// Original PyROOT code by Wim Lavrijsen, LBL; 3//; 4// /*************************************************************************; 5// * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 6// * All rights reserved. *; 7// * *; 8// * For the licensing terms see $ROOTSYS/LICENSE. *; 9// * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10// *************************************************************************/; 11 ; 12// Bindings; 13// CPyCppyy.h must be go first, since it includes Python.h, which must be; 14// included before any standard header; 15#include ""CPyCppyy/API.h""; 16#include ""TPython.h""; 17#include ""TPyClassGenerator.h""; 18 ; 19// ROOT; 20#include ""TROOT.h""; 21#include ""TClassRef.h""; 22#include ""TObject.h""; 23 ; 24#include <Riostream.h>; 25 ; 26// Standard; 27#include <mutex>; 28#include <sstream>; 29#include <stdio.h>; 30#include <string>; 31 ; 32/// \class TPython; 33/// Accessing the Python interpreter from C++.; 34///; 35/// The TPython class allows for access to python objects from Cling. The current; 36/// functionality is only basic: ROOT objects and builtin types can freely cross; 37/// the boundary between the two interpreters, python objects can be instantiated; 38/// and their methods can be called. All other cross-coding is based on strings; 39/// that are run on the python interpreter.; 40///; 41/// Examples:; 42///; 43/// ~~~{.cpp}; 44/// $ root -l; 45/// // Execute a string of python code.; 46/// root [0] TPython::Exec( ""print('Hello World!')"" );; 47/// Hello World!; 48///; 49/// // Create a TNamed on the python side, and transfer it back and forth.; 50/// root [1] std::any res1;; 51/// root [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; 52/// root [3] TPyth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8cxx_source.html:97,Load,Loading,97,doc/master/TPython_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPython_8cxx_source.html,1,['Load'],['Loading']
Performance,. ROOT: bool Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. bool Class Reference. The documentation for this class was generated from the following files:. bool. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classbool.html:73,Load,Loading,73,doc/master/classbool.html,https://root.cern,https://root.cern/doc/master/classbool.html,1,['Load'],['Loading']
Performance,. ROOT: bool Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. bool Class Reference. The documentation for this class was generated from the following files:. bool. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classbool.html:72,Load,Loading,72,doc/v632/classbool.html,https://root.cern,https://root.cern/doc/v632/classbool.html,1,['Load'],['Loading']
Performance,". ROOT: core Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. core Directory Reference. Directory dependency graph for core:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  base;  ;  clingutils;  ;  cont;  ;  dictgen;  ;  foundation;  ;  gui;  ;  imt;  ;  macosx;  ;  meta;  ;  metacling;  ;  multiproc;  ;  rint;  ;  testsupport;  ;  thread;  ;  unix;  ;  winnt;  ;  zip;  . core. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_ed1accc5bc42b26d499c0c84b15b16d5.html:77,Load,Loading,77,doc/master/dir_ed1accc5bc42b26d499c0c84b15b16d5.html,https://root.cern,https://root.cern/doc/master/dir_ed1accc5bc42b26d499c0c84b15b16d5.html,1,['Load'],['Loading']
Performance,". ROOT: core/base Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. base Directory Reference. Directory dependency graph for base:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  doc;  ;  inc;  ;  src;  ;  v7;  . corebase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_1c665cc5526164787b3a14a24f921a4b.html:82,Load,Loading,82,doc/master/dir_1c665cc5526164787b3a14a24f921a4b.html,https://root.cern,https://root.cern/doc/master/dir_1c665cc5526164787b3a14a24f921a4b.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/doc/macros/fillpatterns.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; fillpatterns.C File Reference. Functions; void box (Int_t pat, Double_t x1, Double_t y1, Double_t x2, Double_t y2);  ; TCanvas * fillpatterns (int w=500, int h=700);  . Function Documentation. ◆ box(). void box ; (; Int_t ; pat, . Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). Definition at line 1 of file fillpatterns.C. ◆ fillpatterns(). TCanvas * fillpatterns ; (; int ; w = 500, . int ; h = 700 . ). Definition at line 23 of file fillpatterns.C. corebasedocmacrosfillpatterns.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fillpatterns_8C.html:103,Load,Loading,103,doc/master/fillpatterns_8C.html,https://root.cern,https://root.cern/doc/master/fillpatterns_8C.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/doc/macros/fillpatterns.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fillpatterns.C. Go to the documentation of this file. 1void box(Int_t pat, Double_t x1, Double_t y1, Double_t x2, Double_t y2); 2{; 3 // Draw an box using the fill pattern ""pat"" with the ""pat"" value; 4 // written on top.; 5 ; 6 TBox b;; 7 b.SetFillColor(1);; 8 b.SetFillStyle(pat); b.DrawBox(x1,y1,x2,y2);; 9 b.SetFillStyle(0) ; b.DrawBox(x1,y1,x2,y2);; 10 b.SetFillColor(0) ; b.SetFillStyle(1000) ;; 11 Double_t dx = (x2-x1)/3;; 12 Double_t dy = (y2-y1)/3;; 13 Double_t h = (y2-y1)/2.5;; 14 b.DrawBox(x1+dx, y1+dy, x2-dx, y2-dy);; 15 b.SetFillStyle(0);; 16 b.DrawBox(x1+dx, y1+dy, x2-dx, y2-dy);; 17 ; 18 TLatex l;; 19 l.SetTextAlign(22); l.SetTextSize(h);; 20 l.DrawLatex((x1+x2)/2, (y1+y2)/2, Form(""%d"",pat));; 21}; 22 ; 23TCanvas * fillpatterns(int w=500, int h=700); 24{; 25 // Fill patterns example. This macro shows the available fill patterns.; 26 // The first table displays the 25 fixed patterns. They cannot be; 27 // customized unlike the hatches displayed in the second table which be; 28 // cutomized using:; 29 // - gStyle->SetHatchesSpacing() to define the spacing between hatches.; 30 // - gStyle->SetHatchesLineWidth() to define the hatches line width.; 31 //; 32 // Author: Olivier Couet.; 33 ; 34 TCanvas *Pat = new TCanvas(""Fill Patterns"", """",0,0,w,h);; 35 Pat->Range(0,0,1,1);; 36 Pat->SetBorderSize(2);; 37 Pat->SetFrameFillColor(0);; 38 Double_t bh = 0.059;; 39 Double_t db = 0.01;; 40 Double_t y = 0.995;; 41 Int_t i,j=3001;; 42 ; 43 // Fixed patterns.; 44 for (i=1; i<=5; i++) {; 45 box(j++, 0.01, y-bh, 0.19, y);; 46 box(j++, 0.21, y-bh, 0.39, y);; 47 box(j++, 0.41, y-bh, 0.59, y);; 48 box(j++, 0.61, y-bh, 0.79, y);; 49 box(j++, 0.81, y-bh, 0.99, y);; 50 y = y-bh-db;; 51 }; 52 ; 53 // Hatches; 54 y = y-3*db;; 55 gStyle->SetHatchesSpacing(2.0);; 56 gStyle->SetHatchesLineWidth(1);; 57 Int_t j1 = 3144;; 58 Int_t j2 = 3305;; 59 Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fillpatterns_8C_source.html:100,Load,Loading,100,doc/master/fillpatterns_8C_source.html,https://root.cern,https://root.cern/doc/master/fillpatterns_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/doc/macros/textalign.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; textalign.C File Reference. Functions; th1 Draw ();  ; lv DrawLine (0.33, 0.0, 0.33, 1.0);  ; lv DrawLine (0.6, 0.165, 1., 0.165);  ; Ta Range (0, 0, 1, 1);  ; lv SetLineColor (kBlue);  ; lv SetLineStyle (3);  ; th1 SetTextAlign (11);  ; tv2 SetTextAlign (12);  ; tv3 SetTextAlign (13);  ; th2 SetTextAlign (21);  ; th3 SetTextAlign (31);  ; th1 SetTextSize (0.12);  . Variables; TLine lv;  ; auto * th1 = new TText(0.33,0.165,""Left adjusted"");  ; auto * th2 = new TText(0.33,0.493,""Center adjusted"");  ; auto * th3 = new TText(0.33,0.823,""Right adjusted"");  ; auto * tv1 = new TText(0.66,0.165,""Bottom adjusted"");  ; auto * tv2 = new TText(0.66,0.493,""Center adjusted"");  ; auto * tv3 = new TText(0.66,0.823,""Top adjusted"");  . Function Documentation. ◆ Draw(). line Draw ; (; ). ◆ DrawLine() [1/2]. lv DrawLine ; (; 0. ; 33, . 0. ; 0, . 0. ; 33, . 1. ; 0 . ). ◆ DrawLine() [2/2]. lv DrawLine ; (; 0. ; 6, . 0. ; 165, . 1. ; , . 0. ; 165 . ). ◆ Range(). Ta Range ; (; 0 ; , . 0 ; , . 1 ; , . 1 ;  . ). ◆ SetLineColor(). lv SetLineColor ; (; kBlue ; ). ◆ SetLineStyle(). lv SetLineStyle ; (; 3 ; ). ◆ SetTextAlign() [1/5]. tv1 SetTextAlign ; (; 11 ; ). ◆ SetTextAlign() [2/5]. tv2 SetTextAlign ; (; 12 ; ). ◆ SetTextAlign() [3/5]. tv3 SetTextAlign ; (; 13 ; ). ◆ SetTextAlign() [4/5]. th2 SetTextAlign ; (; 21 ; ). ◆ SetTextAlign() [5/5]. th3 SetTextAlign ; (; 31 ; ). ◆ SetTextSize(). th1 SetTextSize ; (; 0. ; 12). Variable Documentation. ◆ lv. TLine lv. Definition at line 5 of file textalign.C. ◆ th1. auto* th1 = new TText(0.33,0.165,""Left adjusted""). Definition at line 14 of file textalign.C. ◆ th2. auto* th2 = new TText(0.33,0.493,""Center adjusted""). Definition at line 18 of file textalign.C. ◆ th3. auto* th3 = new TText(0.33,0.823,""Right adjusted""). Definition at line 22 of file textalign.C. ◆ tv1. auto* tv1 = new TText(0.66",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/textalign_8C.html:100,Load,Loading,100,doc/master/textalign_8C.html,https://root.cern,https://root.cern/doc/master/textalign_8C.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/doc/macros/textalign.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. textalign.C. Go to the documentation of this file. 1{; 2 auto *Ta = new TCanvas(""Ta"",""Ta"",0,0,500,200);; 3 Ta->Range(0,0,1,1);; 4 ; 5 TLine lv;; 6 lv.SetLineStyle(3);; 7 lv.SetLineColor(kBlue);; 8 lv.DrawLine(0.33,0.0,0.33,1.0);; 9 lv.DrawLine(0.6,0.165,1.,0.165);; 10 lv.DrawLine(0.6,0.493,1.,0.493);; 11 lv.DrawLine(0.6,0.823,1.,0.823);; 12 ; 13 // Horizontal alignment.; 14 auto *th1 = new TText(0.33,0.165,""Left adjusted"");; 15 th1->SetTextAlign(11); th1->SetTextSize(0.12);; 16 th1->Draw();; 17 ; 18 auto *th2 = new TText(0.33,0.493,""Center adjusted"");; 19 th2->SetTextAlign(21); th2->SetTextSize(0.12);; 20 th2->Draw();; 21 ; 22 auto *th3 = new TText(0.33,0.823,""Right adjusted"");; 23 th3->SetTextAlign(31); th3->SetTextSize(0.12);; 24 th3->Draw();; 25 ; 26 // Vertical alignment.; 27 auto *tv1 = new TText(0.66,0.165,""Bottom adjusted"");; 28 tv1->SetTextAlign(11); tv1->SetTextSize(0.12);; 29 tv1->Draw();; 30 ; 31 auto *tv2 = new TText(0.66,0.493,""Center adjusted"");; 32 tv2->SetTextAlign(12); tv2->SetTextSize(0.12);; 33 tv2->Draw();; 34 ; 35 auto *tv3 = new TText(0.66,0.823,""Top adjusted"");; 36 tv3->SetTextAlign(13); tv3->SetTextSize(0.12);; 37 tv3->Draw();; 38}; kBlue@ kBlueDefinition Rtypes.h:66; TAttLine::SetLineStylevirtual void SetLineStyle(Style_t lstyle)Set the line style.Definition TAttLine.h:42; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLine::DrawLinevirtual TLine * DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)Draw this line with new coordinates.Definition TLine.cxx:103; TTextBase class for several text objects.Definition TText.h:22; th3auto * th3Definition textalign.C:22; lvTLine lvDefinition textalign.C:5; tv3auto * tv3Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/textalign_8C_source.html:97,Load,Loading,97,doc/master/textalign_8C_source.html,https://root.cern,https://root.cern/doc/master/textalign_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/doc/macros/textangle.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; textangle.C File Reference. Functions; tt Draw ();  ; a DrawArc (0.1, 0.1, 0.2, 0., 45.,""only"");  ; l DrawLine (0.1, 0.1, 0.9, 0.1);  ; m DrawMarker (0.1, 0.1);  ; Ta Range (0, 0, 1, 1);  ; a SetFillStyle (0);  ; a SetLineColor (kBlue);  ; l SetLineColor (kRed);  ; a SetLineStyle (3);  ; m SetMarkerColor (kBlue);  ; m SetMarkerStyle (20);  ; tt SetTextAlign (11);  ; tt SetTextAngle (45);  ; tt SetTextSize (0.1);  . Variables; TArc a;  ; TLine l;  ; TMarker m;  ; auto * t1 = new TLatex(0.3,0.18,""45^{o}"");  ; auto * tt = new TText(0.1,0.1,""Text angle is 45 degrees"");  . Function Documentation. ◆ Draw(). tt Draw ; (; ). ◆ DrawArc(). a DrawArc ; (; 0. ; 1, . 0. ; 1, . 0. ; 2, . 0. ; , . 45. ; , . ""only"" ;  . ). ◆ DrawLine(). l DrawLine ; (; 0. ; 1, . 0. ; 1, . 0. ; 9, . 0. ; 1 . ). ◆ DrawMarker(). m DrawMarker ; (; 0. ; 1, . 0. ; 1 . ). ◆ Range(). Ta Range ; (; 0 ; , . 0 ; , . 1 ; , . 1 ;  . ). ◆ SetFillStyle(). a SetFillStyle ; (; 0 ; ). ◆ SetLineColor() [1/2]. a SetLineColor ; (; kBlue ; ). ◆ SetLineColor() [2/2]. l SetLineColor ; (; kRed ; ). ◆ SetLineStyle(). a SetLineStyle ; (; 3 ; ). ◆ SetMarkerColor(). m SetMarkerColor ; (; kBlue ; ). ◆ SetMarkerStyle(). m SetMarkerStyle ; (; 20 ; ). ◆ SetTextAlign(). tt SetTextAlign ; (; 11 ; ). ◆ SetTextAngle(). tt SetTextAngle ; (; 45 ; ). ◆ SetTextSize(). tt SetTextSize ; (; 0. ; 1). Variable Documentation. ◆ a. TArc a. Definition at line 12 of file textangle.C. ◆ l. TLine l. Definition at line 4 of file textangle.C. ◆ m. TMarker m. Definition at line 8 of file textangle.C. ◆ t1. auto* t1 = new TLatex(0.3,0.18,""45^{o}""). Definition at line 20 of file textangle.C. ◆ tt. auto* tt = new TText(0.1,0.1,""Text angle is 45 degrees""). Definition at line 16 of file textangle.C. corebasedocmacrostextangle.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/textangle_8C.html:100,Load,Loading,100,doc/master/textangle_8C.html,https://root.cern,https://root.cern/doc/master/textangle_8C.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/doc/macros/textangle.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. textangle.C. Go to the documentation of this file. 1{; 2 auto *Ta = new TCanvas(""Ta"",""Text angle"",0,0,300,326);; 3 Ta->Range(0,0,1,1);; 4 TLine l;; 5 l.SetLineColor(kRed);; 6 l.DrawLine(0.1,0.1,0.9,0.1);; 7 l.DrawLine(0.1,0.1,0.9,0.9);; 8 TMarker m;; 9 m.SetMarkerStyle(20);; 10 m.SetMarkerColor(kBlue);; 11 m.DrawMarker(0.1,0.1);; 12 TArc a;; 13 a.SetFillStyle(0);; 14 a.SetLineColor(kBlue); a.SetLineStyle(3);; 15 a.DrawArc(0.1, 0.1, 0.2, 0.,45.,""only"");; 16 auto *tt = new TText(0.1,0.1,""Text angle is 45 degrees"");; 17 tt->SetTextAlign(11); tt->SetTextSize(0.1);; 18 tt->SetTextAngle(45);; 19 tt->Draw();; 20 auto *t1 = new TLatex(0.3,0.18,""45^{o}"");; 21 t1->Draw();; 22}; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TArcCreate an Arc.Definition TArc.h:26; TArc::DrawArcvirtual TArc * DrawArc(Double_t x1, Double_t y1, Double_t radius, Double_t phimin=0, Double_t phimax=360, Option_t *option="""")Draw this arc with new coordinates.Definition TArc.cxx:79; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineStylevirtual void SetLineStyle(Style_t lstyle)Set the line style.Definition TAttLine.h:42; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TLatexTo draw Mathematical Formula.Definition TLatex.h:18; TLineUse the TLine constructor to create a simple line.Definition TLine.h:22; TLine::DrawLinevirtual TLine * DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)Draw this line with new coordinates",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/textangle_8C_source.html:97,Load,Loading,97,doc/master/textangle_8C_source.html,https://root.cern,https://root.cern/doc/master/textangle_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. inc Directory Reference. Directory dependency graph for inc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  ROOT;  . Files;  Bswapcpy.h;  ;  Buttons.h;  ;  Bytes.h;  ;  Byteswap.h;  ;  GLConstants.h;  ;  Gtypes.h;  ;  Htypes.h;  ;  KeySymbols.h;  ;  Match.h;  ;  MessageTypes.h;  ;  RConfig.h;  ;  Riostream.h;  ;  Rpair.h;  ;  RQ_OBJECT.h;  ;  RStipples.h;  ;  Rtypes.h;  ;  RtypesImp.h;  ;  Strlen.h;  ;  TApplication.h;  ;  TAtt3D.h;  ;  TAttAxis.h;  ;  TAttBBox.h;  ;  TAttBBox2D.h;  ;  TAttFill.h;  ;  TAttLine.h;  ;  TAttMarker.h;  ;  TAttPad.h;  ;  TAttText.h;  ;  TBase64.h;  ;  TBenchmark.h;  ;  TBuffer.h;  ;  TBuffer3D.h;  ;  TBuffer3DTypes.h;  ;  TColor.h;  ;  TColorGradient.h;  ;  TDatime.h;  ;  TDirectory.h;  ;  TEnv.h;  ;  TException.h;  ;  TExec.h;  ;  TFileCollection.h;  ;  TFileInfo.h;  ;  TFolder.h;  ;  TInetAddress.h;  ;  TMacro.h;  ;  TMathBase.h;  ;  TMD5.h;  ;  TMemberInspector.h;  ;  TMessageHandler.h;  ;  TNamed.h;  ;  TNotifyLink.h;  ;  TObject.h;  ;  TObjString.h;  ;  TParameter.h;  ;  TPluginManager.h;  ;  TPoint.h;  ;  TPRegexp.h;  ;  TProcessID.h;  ;  TProcessUUID.h;  ;  TQClass.h;  ;  TQCommand.h;  ;  TQConnection.h;  ;  TQObject.h;  ;  TRedirectOutputGuard.h;  ;  TRef.h;  ;  TRefCnt.h;  ;  TRegexp.h;  ;  TRemoteObject.h;  ;  TROOT.h;  ;  TRootIOCtor.h;  ;  TStopwatch.h;  ;  TStorage.h;  ;  TString.h;  ;  TStringLong.h;  ;  TStyle.h;  ;  TSysEvtHandler.h;  ;  TSystem.h;  ;  TSystemDirectory.h;  ;  TSystemFile.h;  ;  TTask.h;  ;  TThreadSlots.h;  ;  TTime.h;  ;  TTimer.h;  ;  TTimeStamp.h;  ;  TUri.h;  ;  TUrl.h;  ;  TUUID.h;  ;  TVersionCheck.h;  ;  TVirtualAuth.h;  ;  TVirtualFFT.h;  ;  TVirtualGL.h;  ;  TVirtualMapFile.h;  ;  TVirtualMonitoring.h;  ;  TVirtualMutex.h;  ;  TVirtualPad.h;  ;  TVirtualPadEditor.h;  ;  TVirtualPadPainter.h;  ;  TVirtualPerfStats.h;  ;  TVi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_581b2f84e81921659261a687f8475ad3.html:86,Load,Loading,86,doc/master/dir_581b2f84e81921659261a687f8475ad3.html,https://root.cern,https://root.cern/doc/master/dir_581b2f84e81921659261a687f8475ad3.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/Buttons.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Enumerations ; Buttons.h File Reference. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Enumerations; enum  EEditMode { ;   kPolyLine = 1; , kSPolyLine = 2; , kPolyGone = 3; , kSPolyGone = 4; , ;   kBox = 5; , kDelete = 6; , kPad = 7; , kText = 8; , ;   kEditor = 9; , kExit = 10; , kPave = 11; , kPaveLabel = 12; , ;   kPaveText = 13; , kPavesText = 14; , kEllipse = 15; , kArc = 16; , ;   kLine = 17; , kArrow = 18; , kGraph = 19; , kMarker = 20; , ;   kPolyMarker = 21; , kPolyLine3D = 22; , kWbox = 23; , kGaxis = 24; , ;   kF1 = 25; , kF2 = 26; , kF3 = 27; , kDiamond = 28; , ;   kPolyMarker3D = 29; , kButton = 101; , kCutG =100; , kCurlyLine =200; , ;   kCurlyArc = 201. };  ; enum  EEventType { ;   kNoEvent = 0; , kButton1Down = 1; , kButton2Down = 2; , kButton3Down = 3; , ;   kKeyDown = 4; , kWheelUp = 5; , kWheelDown = 6; , kButton1Shift = 7; , ;   kButton1ShiftMotion = 8; , kButton1Up = 11; , kButton2Up = 12; , kButton3Up = 13; , ;   kKeyUp = 14; , kButton1Motion = 21; , kButton2Motion = 22; , kButton3Motion = 23; , ;   kKeyPress = 24; , kArrowKeyPress = 25; , kArrowKeyRelease = 26; , kButton1Locate = 41; , ;   kButton2Locate = 42; , kButton3Locate = 43; , kESC = 27; , kMouseMotion = 51; , ;   kMouseEnter = 52; , kMouseLeave = 53; , kButton1Double = 61; , kButton2Double = 62; , ;   kButton3Double = 63. };  . Enumeration Type Documentation. ◆ EEditMode. enum EEditMode. EnumeratorkPolyLine ; kSPolyLine ; kPolyGone ; kSPolyGone ; kBox ; kDelete ; kPad ; kText ; kEditor ; kExit ; kPave ; kPaveLabel ; kPaveText ; kPavesText ; kEllipse ; kArc ; kLine ; kArrow ; kGraph ; kMarker ; kPolyMarker ; kPolyLine3D ; kWbox ; kGaxis ; kF1 ; kF2 ; kF3 ; kDiamond ; kPolyMarker3D ; kButton ; kCutG ; kCurlyLine ; kCurlyArc . Definition at line 27 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Buttons_8h.html:91,Load,Loading,91,doc/master/Buttons_8h.html,https://root.cern,https://root.cern/doc/master/Buttons_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/Bytes.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Bytes.h File Reference. #include ""RtypesCore.h""; #include <cstring>. Include dependency graph for Bytes.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; void frombuf (char *&buf, Bool_t *x);  ; void frombuf (char *&buf, Char_t *x);  ; void frombuf (char *&buf, Double_t *x);  ; void frombuf (char *&buf, Float_t *x);  ; void frombuf (char *&buf, Int_t *x);  ; void frombuf (char *&buf, Long64_t *x);  ; void frombuf (char *&buf, Long_t *x);  ; void frombuf (char *&buf, Short_t *x);  ; void frombuf (char *&buf, UChar_t *x);  ; void frombuf (char *&buf, UInt_t *x);  ; void frombuf (char *&buf, ULong64_t *x);  ; void frombuf (char *&buf, ULong_t *x);  ; void frombuf (char *&buf, UShort_t *x);  ; Double_t host2net (Double_t x);  ; Float_t host2net (Float_t x);  ; Int_t host2net (Int_t x);  ; Long64_t host2net (Long64_t x);  ; Long_t host2net (Long_t x);  ; Short_t host2net (Short_t x);  ; UInt_t host2net (UInt_t x);  ; ULong_t host2net (ULong64_t x);  ; ULong_t host2net (ULong_t x);  ; UShort_t host2net (UShort_t x);  ; Double_t net2host (Double_t x);  ; Float_t net2host (Float_t x);  ; Int_t net2host (Int_t x);  ; Long64_t net2host (Long64_t x);  ; Long_t net2host (Long_t x);  ; Short_t net2host (Short_t x);  ; UInt_t net2host (UInt_t x);  ; ULong64_t net2host (ULong64_t x);  ; ULong_t net2host (ULong_t x);  ; UShort_t net2host (UShort_t x);  ; void tobuf (char *&buf, Bool_t x);  ; void tobuf (char *&buf, Char_t x);  ; void tobuf (char *&buf, Double_t x);  ; void tobuf (char *&buf, Float_t x);  ; void tobuf (char *&buf, Int_t x);  ; void tobuf (char *&buf, Long64_t x);  ; void tobuf (char *&buf, Long_t x);  ; void tobuf (char *&buf, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Bytes_8h.html:89,Load,Loading,89,doc/master/Bytes_8h.html,https://root.cern,https://root.cern/doc/master/Bytes_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/Bytes.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Bytes.h. Go to the documentation of this file. 1/* @(#)root/base:$Id$ */; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_Bytes; 12#define ROOT_Bytes; 13 ; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// Bytes //; 18// //; 19// A set of inline byte handling routines. //; 20// //; 21// The set of tobuf() and frombuf() routines take care of packing a //; 22// basic type value into a buffer in network byte order (i.e. they //; 23// perform byte swapping when needed). The buffer does not have to //; 24// start on a machine (long) word boundary. //; 25// //; 26// For __GNUC__ on linux on i486 processors and up //; 27// use the `bswap' opcode provided by the GNU C Library. //; 28// //; 29// The set of host2net() and net2host() routines convert a basic type //; 30// value from host to network byte order and vice versa. On BIG ENDIAN //; 31// machines this is a no op. //; 32// //; 33//////////////////////////////////////////////////////////////////////////; 34 ; 35#include ""RtypesCore.h""; 36 ; 37#include <cstring>; 38 ; 39#if (defined(__linux) || defined(__APPLE__)) && \; 40 (defined(__i386__) || defined(__x86_64__)) && \; 41 defined(__GNUC__); 42#define R__USEASMSWAP; 43#endif; 44 ; 45//Big bug in inline byte swapping code with Intel's icc; 46#if defined(__INTEL_COMPILER) && __INTEL_COMPILER < 1000; 47#undef R__USEASMSWAP; 48#endif; 49 ; 50#if defined(R__USEASMSWAP); 51#include ""Byteswap.h""; 52#endif; 53 ; 54//______________________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Bytes_8h_source.html:86,Load,Loading,86,doc/master/Bytes_8h_source.html,https://root.cern,https://root.cern/doc/master/Bytes_8h_source.html,2,"['Load', 'perform']","['Loading', 'perform']"
Performance,". ROOT: core/base/inc/ROOT/EExecutionPolicy.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. EExecutionPolicy.hxx. Go to the documentation of this file. 1#ifndef ROOT_Internal_ExecutionPolicy; 2#define ROOT_Internal_ExecutionPolicy; 3 ; 4namespace ROOT {; 5enum class EExecutionPolicy { kSequential, kMultiThread, kMultiProcess };; 6}; 7 ; 8#endif; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::EExecutionPolicyEExecutionPolicyDefinition EExecutionPolicy.hxx:5; ROOT::EExecutionPolicy::kMultiProcess@ kMultiProcess; ROOT::EExecutionPolicy::kSequential@ kSequential; ROOT::EExecutionPolicy::kMultiThread@ kMultiThread. corebaseincROOTEExecutionPolicy.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/EExecutionPolicy_8hxx_source.html:104,Load,Loading,104,doc/master/EExecutionPolicy_8hxx_source.html,https://root.cern,https://root.cern/doc/master/EExecutionPolicy_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/ROOT/EExecutionPolicy.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. EExecutionPolicy.hxx. Go to the documentation of this file. 1#ifndef ROOT_Internal_ExecutionPolicy; 2#define ROOT_Internal_ExecutionPolicy; 3 ; 4namespace ROOT {; 5enum class EExecutionPolicy { kSequential, kMultiThread, kMultiProcess };; 6}; 7 ; 8#endif; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::EExecutionPolicyEExecutionPolicyDefinition EExecutionPolicy.hxx:5; ROOT::EExecutionPolicy::kMultiProcess@ kMultiProcess; ROOT::EExecutionPolicy::kSequential@ kSequential; ROOT::EExecutionPolicy::kMultiThread@ kMultiThread. corebaseincROOTEExecutionPolicy.hxx. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:06:47 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/EExecutionPolicy_8hxx_source.html:103,Load,Loading,103,doc/v632/EExecutionPolicy_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/EExecutionPolicy_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/ROOT/StringConv.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. StringConv.hxx. Go to the documentation of this file. 1// @(#)root/base; 2// Author: Philippe Canal 12/2015; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_StringConv; 13#define ROOT_StringConv; 14 ; 15 ; 16#include <string_view>; 17#include ""Rtypes.h""; 18#include ""RConfigure.h""; 19#include <cmath>; 20 ; 21namespace ROOT {; 22 ; 23 // Adapted from http://stackoverflow.com/questions/3758606/; 24 // how-to-convert-byte-size-into-human-readable-format-in-java; 25 // and http://agentzlerich.blogspot.com/2011/01/converting-to-and-from-human-readable.html; 26 // However those sources use the 'conventional' 'legacy' nomenclature,; 27 // rather than the official Standard Units. See; 28 // http://physics.nist.gov/cuu/Units/binary.html; 29 // and http://www.dr-lex.be/info-stuff/bytecalc.html for example.; 30 ; 31///////////////////////////////////////////////////////////////////////////////; 32/// Return the size expressed in 'human readable' format.; 33/// \param bytes the size in bytes to be converted; 34/// \param si whether to use the SI units or not.; 35/// \param coeff return the size expressed in the new unit.; 36/// \param units return a pointer to the string representation of the new unit; 37template <typename value_type>; 38void ToHumanReadableSize(value_type bytes,; 39 Bool_t si,; 40 Double_t *coeff,; 41 const char **units); 42{; 43 // Static lookup table of byte-based SI units; 44 static const char *const suffix[][2] =; 45 { { ""B"", ""B"" },; 46 { ""KB"", ""KiB"" },; 47 { ""MB"", ""MiB"" },; 48 { ""GB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/StringConv_8hxx_source.html:98,Load,Loading,98,doc/master/StringConv_8hxx_source.html,https://root.cern,https://root.cern/doc/master/StringConv_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/ROOT/StringConv.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. StringConv.hxx. Go to the documentation of this file. 1// @(#)root/base; 2// Author: Philippe Canal 12/2015; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_StringConv; 13#define ROOT_StringConv; 14 ; 15 ; 16#include <string_view>; 17#include ""Rtypes.h""; 18#include ""RConfigure.h""; 19#include <cmath>; 20 ; 21namespace ROOT {; 22 ; 23 // Adapted from http://stackoverflow.com/questions/3758606/; 24 // how-to-convert-byte-size-into-human-readable-format-in-java; 25 // and http://agentzlerich.blogspot.com/2011/01/converting-to-and-from-human-readable.html; 26 // However those sources use the 'conventional' 'legacy' nomenclature,; 27 // rather than the official Standard Units. See; 28 // http://physics.nist.gov/cuu/Units/binary.html; 29 // and http://www.dr-lex.be/info-stuff/bytecalc.html for example.; 30 ; 31///////////////////////////////////////////////////////////////////////////////; 32/// Return the size expressed in 'human readable' format.; 33/// \param bytes the size in bytes to be converted; 34/// \param si whether to use the SI units or not.; 35/// \param coeff return the size expressed in the new unit.; 36/// \param units return a pointer to the string representation of the new unit; 37template <typename value_type>; 38void ToHumanReadableSize(value_type bytes,; 39 Bool_t si,; 40 Double_t *coeff,; 41 const char **units); 42{; 43 // Static lookup table of byte-based SI units; 44 static const char *const suffix[][2] =; 45 { { ""B"", ""B"" },; 46 { ""KB"", ""KiB"" },; 47 { ""MB"", ""MiB"" },; 48 { ""GB""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/StringConv_8hxx_source.html:97,Load,Loading,97,doc/v632/StringConv_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/StringConv_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/RQ_OBJECT.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; RQ_OBJECT.h File Reference. #include <TQObject.h>; #include <Varargs.h>. Include dependency graph for RQ_OBJECT.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define RQ_OBJECT(sender_class);  ; #define RQ_OBJECT1(sender_class);  ; #define RQ_OBJECT2(sender_class);  . Macro Definition Documentation. ◆ RQ_OBJECT. #define RQ_OBJECT; (;  ; sender_class). Value: RQ_OBJECT1(sender_class)\; RQ_OBJECT2(sender_class); RQ_OBJECT1#define RQ_OBJECT1(sender_class)Definition RQ_OBJECT.h:66. Definition at line 87 of file RQ_OBJECT.h. ◆ RQ_OBJECT1. #define RQ_OBJECT1; (;  ; sender_class). Value:private:\; TQObjSender fQObject;\; public:\; TList *GetListOfSignals() const {return fQObject.GetListOfSignals();}\; Bool_t Connect(const char *sig,const char *cl,void *rcvr,const char *slt)\; {fQObject.SetSender(this);fQObject.SetSenderClassName(sender_class);return fQObject.Connect(sig,cl,rcvr,slt);}\; Bool_t Disconnect(const char *sig=nullptr,void *rcvr=nullptr,const char *slt=nullptr){return fQObject.Disconnect(sig,rcvr,slt);}\; void HighPriority(const char *signal_name,const char *slot_name=nullptr){fQObject.HighPriority(signal_name,slot_name);}\; void LowPriority(const char *signal_name,const char *slot_name=nullptr){fQObject.LowPriority(signal_name,slot_name);}\; template <typename... T> void EmitVA(const char *signal_name, Int_t nargs, const T&... params) \; { fQObject.EmitVA(signal_name,nargs,params...); } \; void Emit(const char *signal){EmitVA(signal, /*nargs*/0);} \; template <typename T> void Emit(const char *signal, const T& arg) { EmitVA(signal, /*nargs*/ 1, arg); } \; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RQ__OBJECT_8h.html:93,Load,Loading,93,doc/master/RQ__OBJECT_8h.html,https://root.cern,https://root.cern/doc/master/RQ__OBJECT_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/RQ_OBJECT.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RQ_OBJECT.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Valeriy Onuchin & Fons Rademakers 15/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_RQ_OBJECT; 13#define ROOT_RQ_OBJECT; 14 ; 15#include <TQObject.h>; 16#include <Varargs.h>; 17 ; 18 ; 19//---- RQ_OBJECT macro -----------------------------------------------; 20//; 21// Macro is used to delegate TQObject methods to other classes; 22// Example:; 23//; 24// #include ""RQ_OBJECT.h""; 25//; 26// class A {; 27// RQ_OBJECT(""A""); 28// private:; 29// Int_t fValue;; 30// public:; 31// A() : fValue(0) { }; 32// ~A() { }; 33//; 34// void SetValue(Int_t value); 35// void PrintValue() const { printf(""value=%d\n"", fValue); }; 36// Int_t GetValue() const { return fValue; }; 37// };; 38//; 39// void A::SetValue(Int_t value); 40// {; 41// // Sets new value; 42//; 43// // to prevent infinite looping in the case; 44// // of cyclic connections; 45// if (value != fValue) {; 46// fValue = value;; 47// Emit(""SetValue(Int_t)"", fValue);; 48// }; 49// }; 50//; 51// Load this class into root session and try the following:; 52//; 53// a = new A();; 54// b = new A();; 55//; 56// Here is one way to connect two of these objects together:; 57//; 58// a->Connect(""SetValue(Int_t)"", ""A"", b, ""SetValue(Int_t)"");; 59//; 60// Calling a->SetValue(79) will make a emit a signal, which b; 61// will receive, i.e. b->SetValue(79) is invoked. b will in; 62// turn emit the same signal, which nobody receives, since no; 63// slot has been connected to it, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RQ__OBJECT_8h_source.html:90,Load,Loading,90,doc/master/RQ__OBJECT_8h_source.html,https://root.cern,https://root.cern/doc/master/RQ__OBJECT_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/Rtypes.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Enumerations |; Functions ; Rtypes.h File Reference. #include ""RtypesCore.h""; #include <cstdio>; #include ""strtok.h""; #include ""strlcpy.h""; #include ""snprintf.h""; #include <type_traits>; #include <typeinfo>; #include <atomic>; #include ""TGenericClassInfo.h""; #include ""TIsAProxy.h""; #include <string>. Include dependency graph for Rtypes.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Internal::ClassDefGenerateInitInstanceLocalInjector< T >;  ; class  ROOT::Internal::TCDGIILIBase;  ; class  ROOT::Internal::TDefaultInitBehavior;  ; struct  ROOT::Internal::THashConsistencyHolder< T >;  ; class  ROOT::Internal::TInitBehavior;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Macros; #define _ClassDefBase_(name, id, virtual_keyword, overrd);  Common part being called both by _ClassDefOutline_ and _ClassDefInline_. ;  ; #define _ClassDefInline_(name, id, virtual_keyword, overrd);  ; #define _ClassDefOutline_(name, id, virtual_keyword, overrd);  ; #define BIT(n)   (1ULL << (n));  ; #define ClassDef(name, id);  ; #define ClassDef2T2(name, Tmpl1, Tmpl2);  ; #define ClassDef3T2(name, Tmpl1, Tmpl2, Tmpl3);  ; #define ClassDefInline(name, id);  ; #define ClassDefInlineNV(name, id);  ; #define ClassDefInlineOverride(name, id);  ; #define ClassDefNV(name, id);  ; #define ClassDefOverride(name, id);  ; #define ClassDefT(name, id);  This ClassDefT is strictly redundant and is kept only for backward compatibility. ;  ; #define ClassDefT2(name, Tmpl);  ; #define ClassDefTNV(name, id);  ; #define ClassImp(name)   ClassImpUnique(name,default);  ; #define ClassImp2T(name, Tmpl1, Tmpl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Rtypes_8h.html:90,Load,Loading,90,doc/master/Rtypes_8h.html,https://root.cern,https://root.cern/doc/master/Rtypes_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/Rtypes.h File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Enumerations |; Functions ; Rtypes.h File Reference. #include ""RtypesCore.h""; #include <cstdio>; #include ""strtok.h""; #include ""strlcpy.h""; #include ""snprintf.h""; #include <type_traits>; #include <typeinfo>; #include <atomic>; #include ""TGenericClassInfo.h""; #include ""TIsAProxy.h""; #include <string>. Include dependency graph for Rtypes.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Internal::ClassDefGenerateInitInstanceLocalInjector< T >;  ; class  ROOT::Internal::TCDGIILIBase;  ; class  ROOT::Internal::TDefaultInitBehavior;  ; struct  ROOT::Internal::THashConsistencyHolder< T >;  ; class  ROOT::Internal::TInitBehavior;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Macros; #define _ClassDefBase_(name, id, virtual_keyword, overrd);  Common part being called both by _ClassDefOutline_ and _ClassDefInline_. ;  ; #define _ClassDefInline_(name, id, virtual_keyword, overrd);  ; #define _ClassDefOutline_(name, id, virtual_keyword, overrd);  ; #define BIT(n)   (1ULL << (n));  ; #define ClassDef(name, id);  ; #define ClassDef2T2(name, Tmpl1, Tmpl2);  ; #define ClassDef3T2(name, Tmpl1, Tmpl2, Tmpl3);  ; #define ClassDefInline(name, id);  ; #define ClassDefInlineNV(name, id);  ; #define ClassDefInlineOverride(name, id);  ; #define ClassDefNV(name, id);  ; #define ClassDefOverride(name, id);  ; #define ClassDefT(name, id);  This ClassDefT is strictly redundant and is kept only for backward compatibility. ;  ; #define ClassDefT2(name, Tmpl);  ; #define ClassDefTNV(name, id);  ; #define ClassImp(name)   ClassImpUnique(name,default);  ; #define ClassImp2T(name, Tmpl1, Tmpl2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Rtypes_8h.html:89,Load,Loading,89,doc/v632/Rtypes_8h.html,https://root.cern,https://root.cern/doc/v632/Rtypes_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/Rtypes.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Rtypes.h. Go to the documentation of this file. 1/* @(#)root/base:$Id$ */; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2014, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_Rtypes; 12#define ROOT_Rtypes; 13 ; 14//////////////////////////////////////////////////////////////////////////; 15// //; 16// Rtypes //; 17// //; 18// Basic types used by ROOT; ClassDef macros. //; 19// //; 20//////////////////////////////////////////////////////////////////////////; 21 ; 22 ; 23#include ""RtypesCore.h""; 24// #include ""DllImport.h"" // included via RtypesCore.h, not used here; 25 ; 26#ifndef R__LESS_INCLUDES; 27#include <cstdio>; 28#include ""strtok.h"" // provides R__STRTOK_R with <cstring> include; 29#include ""strlcpy.h"" // part of string.h on systems that have it; 30#include ""snprintf.h"" // part of stdio.h on systems that have it; 31#include <type_traits>; 32#endif; 33 ; 34#include <typeinfo>; 35#include <atomic>; 36 ; 37#ifndef __CLING__; 38// __attribute__ is not supported on Windows, but it is internally needed by Cling; 39// for autoloading and Clad rely on __attribute__((annotate(""D""))); 40#if defined(R__WIN32); 41#define __attribute__(unused); 42#endif; 43#endif; 44 ; 45//---- forward declared class types --------------------------------------------; 46 ; 47class TClass;; 48class TBuffer;; 49class TDirectory;; 50class TMemberInspector;; 51class TObject;; 52class TNamed;; 53class TCollection;; 54class TFileMergeInfo;; 55class TString;; 56 ; 57//Moved from TSystem.; 58enum ESysConstants {; 59 kMAXSIGNALS = 16,; 60 kMAXPATHLEN = 8192,; 61 kBUFFERSIZE = 8192,; 62 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Rtypes_8h_source.html:87,Load,Loading,87,doc/master/Rtypes_8h_source.html,https://root.cern,https://root.cern/doc/master/Rtypes_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/Rtypes.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Rtypes.h. Go to the documentation of this file. 1/* @(#)root/base:$Id$ */; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2014, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_Rtypes; 12#define ROOT_Rtypes; 13 ; 14//////////////////////////////////////////////////////////////////////////; 15// //; 16// Rtypes //; 17// //; 18// Basic types used by ROOT; ClassDef macros. //; 19// //; 20//////////////////////////////////////////////////////////////////////////; 21 ; 22 ; 23#include ""RtypesCore.h""; 24// #include ""DllImport.h"" // included via RtypesCore.h, not used here; 25 ; 26#ifndef R__LESS_INCLUDES; 27#include <cstdio>; 28#include ""strtok.h"" // provides R__STRTOK_R with <cstring> include; 29#include ""strlcpy.h"" // part of string.h on systems that have it; 30#include ""snprintf.h"" // part of stdio.h on systems that have it; 31#include <type_traits>; 32#endif; 33 ; 34#include <typeinfo>; 35#include <atomic>; 36 ; 37#ifndef __CLING__; 38// __attribute__ is not supported on Windows, but it is internally needed by Cling; 39// for autoloading and Clad rely on __attribute__((annotate(""D""))); 40#if defined(R__WIN32); 41#define __attribute__(unused); 42#endif; 43#endif; 44 ; 45//---- forward declared class types --------------------------------------------; 46 ; 47class TClass;; 48class TBuffer;; 49class TDirectory;; 50class TMemberInspector;; 51class TObject;; 52class TNamed;; 53class TCollection;; 54class TFileMergeInfo;; 55class TString;; 56 ; 57//Moved from TSystem.; 58enum ESysConstants {; 59 kMAXSIGNALS = 16,; 60 kMAXPATHLEN = 8192,; 61 kBUFFERSIZE = 8192,; 62 k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Rtypes_8h_source.html:86,Load,Loading,86,doc/v632/Rtypes_8h_source.html,https://root.cern,https://root.cern/doc/v632/Rtypes_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TApplication.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TApplication.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 22/12/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TApplication; 13#define ROOT_TApplication; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TApplication //; 19// //; 20// This class creates the ROOT Application Environment that interfaces //; 21// to the windowing system eventloop and eventhandlers. //; 22// This class must be instantiated exactly once in any given //; 23// application. Normally the specific application class inherits from //; 24// TApplication (see TRint). //; 25// //; 26//////////////////////////////////////////////////////////////////////////; 27 ; 28#include ""TObject.h""; 29 ; 30#include ""TQObject.h""; 31 ; 32#include ""TApplicationImp.h""; 33 ; 34class TObjArray;; 35class TTimer;; 36class TSignalHandler;; 37 ; 38 ; 39class TApplication : public TObject, public TQObject {; 40 ; 41public:; 42 // TApplication specific bits; 43 enum EStatusBits {; 44 kProcessRemotely = BIT(15), // TRUE if this line has to be processed remotely; 45 kDefaultApplication = BIT(16) // TRUE if created via CreateApplication(); 46 };; 47 // TApplication specific bits for fFiles; 48 enum EFileBits {; 49 kExpression = BIT(14) // If the arguments is an expression rather than a file.; 50 };; 51 enum EExitOnException {; 52 kDontExit,; 53 kExit,; 54 kAbort; 55 };; 56 ; 57private:; 58 Int_t fArgc; //Number of com mand line arguments; 59 char **fArgv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8h_source.html:93,Load,Loading,93,doc/master/TApplication_8h_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TAttAxis.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttAxis.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TAttAxis; 13#define ROOT_TAttAxis; 14 ; 15#include ""Rtypes.h""; 16 ; 17 ; 18class TAttAxis {; 19protected:; 20 Int_t fNdivisions; ///< Number of divisions(10000*n3 + 100*n2 + n1); 21 Color_t fAxisColor; ///< Color of the line axis; 22 Color_t fLabelColor; ///< Color of labels; 23 Style_t fLabelFont; ///< Font for labels; 24 Float_t fLabelOffset; ///< Offset of labels; 25 Float_t fLabelSize; ///< Size of labels; 26 Float_t fTickLength; ///< Length of tick marks; 27 Float_t fTitleOffset; ///< Offset of axis title; 28 Float_t fTitleSize; ///< Size of axis title; 29 Color_t fTitleColor; ///< Color of axis title; 30 Style_t fTitleFont; ///< Font for axis title; 31 ; 32public:; 33 TAttAxis();; 34 virtual ~TAttAxis();; 35 void Copy(TAttAxis &attaxis) const;; 36 virtual Int_t GetNdivisions() const {return fNdivisions;}; 37 virtual Color_t GetAxisColor() const {return fAxisColor;}; 38 virtual Color_t GetLabelColor() const {return fLabelColor;}; 39 virtual Style_t GetLabelFont() const {return fLabelFont;}; 40 virtual Float_t GetLabelOffset() const {return fLabelOffset;}; 41 virtual Float_t GetLabelSize() const {return fLabelSize;}; 42 virtual Int_t GetMaxDigits() const {return (Int_t)(fNdivisions/1000000);}; 43 virtual Float_t GetTitleOffset() const {return fTitleOffset;}; 44 virtual Float_t GetTitleSize() const {return fTitleSize;}; 45 virtual Float_t GetTickL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttAxis_8h_source.html:89,Load,Loading,89,doc/master/TAttAxis_8h_source.html,https://root.cern,https://root.cern/doc/master/TAttAxis_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TAttFill.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttFill.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TAttFill; 13#define ROOT_TAttFill; 14 ; 15 ; 16#include ""Rtypes.h""; 17 ; 18 ; 19class TAttFill {; 20 ; 21protected:; 22 Color_t fFillColor; ///< Fill area color; 23 Style_t fFillStyle; ///< Fill area style; 24 ; 25public:; 26 TAttFill();; 27 TAttFill(Color_t fcolor,Style_t fstyle);; 28 virtual ~TAttFill();; 29 void Copy(TAttFill &attfill) const;; 30 virtual Color_t GetFillColor() const { return fFillColor; } ///< Return the fill area color; 31 virtual Style_t GetFillStyle() const { return fFillStyle; } ///< Return the fill area style; 32 virtual Bool_t IsTransparent() const;; 33 virtual void Modify();; 34 virtual void ResetAttFill(Option_t *option="""");; 35 virtual void SaveFillAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);; 36 virtual void SetFillAttributes(); // *MENU*; 37 virtual void SetFillColor(Color_t fcolor) { fFillColor = fcolor; } ///< Set the fill area color; 38 virtual void SetFillColorAlpha(Color_t fcolor, Float_t falpha);; 39 virtual void SetFillStyle(Style_t fstyle) { fFillStyle = fstyle; } ///< Set the fill area style; 40 ; 41 ClassDef(TAttFill,2) //Fill area attributes; 42};; 43 ; 44inline Bool_t TAttFill::IsTransparent() const; 45{ return fFillStyle >= 4000 && fFillStyle <= 4100 ? kTRUE : kFALSE; }; 46 ; 47 enum EFillStyle {kFDotted1 = 3001, kFDotted2 = 3002, kFDotted3 = 3003,; 48 kFHatched1 = 300",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttFill_8h_source.html:89,Load,Loading,89,doc/master/TAttFill_8h_source.html,https://root.cern,https://root.cern/doc/master/TAttFill_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TAttLine.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TAttLine.h File Reference. #include ""Rtypes.h"". Include dependency graph for TAttLine.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TAttLine;  Line Attributes class. More...;  . Enumerations; enum  ELineStyle { kSolid = 1; , kDashed; , kDotted; , kDashDotted; };  . Enumeration Type Documentation. ◆ ELineStyle. enum ELineStyle. EnumeratorkSolid ; kDashed ; kDotted ; kDashDotted . Definition at line 48 of file TAttLine.h. corebaseincTAttLine.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttLine_8h.html:92,Load,Loading,92,doc/master/TAttLine_8h.html,https://root.cern,https://root.cern/doc/master/TAttLine_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TAttLine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttLine.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TAttLine; 13#define ROOT_TAttLine; 14 ; 15 ; 16#include ""Rtypes.h""; 17 ; 18class TAttLine {; 19 ; 20protected:; 21 Color_t fLineColor; ///< Line color; 22 Style_t fLineStyle; ///< Line style; 23 Width_t fLineWidth; ///< Line width; 24 ; 25public:; 26 ; 27 TAttLine();; 28 TAttLine(Color_t lcolor,Style_t lstyle, Width_t lwidth);; 29 virtual ~TAttLine();; 30 ; 31 void Copy(TAttLine &attline) const;; 32 Int_t DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2 );; 33 virtual Color_t GetLineColor() const {return fLineColor;} ///< Return the line color; 34 virtual Style_t GetLineStyle() const {return fLineStyle;} ///< Return the line style; 35 virtual Width_t GetLineWidth() const {return fLineWidth;} ///< Return the line width; 36 virtual void Modify();; 37 virtual void ResetAttLine(Option_t *option="""");; 38 virtual void SaveLineAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);; 39 virtual void SetLineAttributes(); // *MENU*; 40 virtual void SetLineColor(Color_t lcolor) { fLineColor = lcolor;} ///< Set the line color; 41 virtual void SetLineColorAlpha(Color_t lcolor, Float_t lalpha);; 42 virtual void SetLineStyle(Style_t lstyle) { fLineStyle = lstyle;} ///< Set the line style; 43 virtual void SetLineWidth(Width_t lwidth) { fLineWidth = lwidth;} ///< Set the line width; 44 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttLine_8h_source.html:89,Load,Loading,89,doc/master/TAttLine_8h_source.html,https://root.cern,https://root.cern/doc/master/TAttLine_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TAttMarker.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TAttMarker.h File Reference. #include ""Rtypes.h"". Include dependency graph for TAttMarker.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TAttMarker;  Marker Attributes class. More...;  . Enumerations; enum  EMarkerStyle { ;   kDot =1; , kPlus; , kStar; , kCircle =4; , ;   kMultiply =5; , kFullDotSmall =6; , kFullDotMedium =7; , kFullDotLarge =8; , ;   kFullCircle =20; , kFullSquare =21; , kFullTriangleUp =22; , kFullTriangleDown =23; , ;   kOpenCircle =24; , kOpenSquare =25; , kOpenTriangleUp =26; , kOpenDiamond =27; , ;   kOpenCross =28; , kFullStar =29; , kOpenStar =30; , kOpenTriangleDown =32; , ;   kFullDiamond =33; , kFullCross =34; , kOpenDiamondCross =35; , kOpenSquareDiagonal =36; , ;   kOpenThreeTriangles =37; , kOctagonCross =38; , kFullThreeTriangles =39; , kOpenFourTrianglesX =40; , ;   kFullFourTrianglesX =41; , kOpenDoubleDiamond =42; , kFullDoubleDiamond =43; , kOpenFourTrianglesPlus =44; , ;   kFullFourTrianglesPlus =45; , kOpenCrossX =46; , kFullCrossX =47; , kFourSquaresX =48; , ;   kFourSquaresPlus =49. };  . Enumeration Type Documentation. ◆ EMarkerStyle. enum EMarkerStyle. EnumeratorkDot ; kPlus ; kStar ; kCircle ; kMultiply ; kFullDotSmall ; kFullDotMedium ; kFullDotLarge ; kFullCircle ; kFullSquare ; kFullTriangleUp ; kFullTriangleDown ; kOpenCircle ; kOpenSquare ; kOpenTriangleUp ; kOpenDiamond ; kOpenCross ; kFullStar ; kOpenStar ; kOpenTriangleDown ; kFullDiamond ; kFullCross ; kOpenDiamondCross ; kOpenSquareDiagonal ; kOpenThreeTriangles ; kOctagonCross ; kFullThreeTriangles ; kOpenFourTrianglesX ; kFullFourTrianglesX ; kOpenDoubleDiamond ; kFullDoubleDiamond ; kOpenFourTria",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttMarker_8h.html:94,Load,Loading,94,doc/master/TAttMarker_8h.html,https://root.cern,https://root.cern/doc/master/TAttMarker_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TAttMarker.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttMarker.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/05/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TAttMarker; 13#define ROOT_TAttMarker; 14 ; 15 ; 16#include ""Rtypes.h""; 17 ; 18 ; 19class TAttMarker {; 20 ; 21protected:; 22 Color_t fMarkerColor; ///< Marker color; 23 Style_t fMarkerStyle; ///< Marker style; 24 Size_t fMarkerSize; ///< Marker size; 25 ; 26public:; 27 TAttMarker();; 28 TAttMarker(Color_t color, Style_t style, Size_t msize);; 29 virtual ~TAttMarker();; 30 void Copy(TAttMarker &attmarker) const;; 31 virtual Color_t GetMarkerColor() const {return fMarkerColor;} ///< Return the marker color; 32 virtual Style_t GetMarkerStyle() const {return fMarkerStyle;} ///< Return the marker style; 33 virtual Size_t GetMarkerSize() const {return fMarkerSize;} ///< Return the marker size; 34 virtual void Modify();; 35 virtual void ResetAttMarker(Option_t *toption="""");; 36 virtual void SaveMarkerAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);; 37 virtual void SetMarkerAttributes(); // *MENU*; 38 virtual void SetMarkerColor(Color_t mcolor=1) { fMarkerColor = mcolor;} ///< Set the marker color; 39 virtual void SetMarkerColorAlpha(Color_t mcolor, Float_t malpha);; 40 virtual void SetMarkerStyle(Style_t mstyle=1) { fMarkerStyle = mstyle;} ///< Set the marker style; 41 /// Set the marker size.; 42 /// Note that the marker styles number 1 6 and 7 (the dots), cannot be scaled.; 43 /// They are meant to be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttMarker_8h_source.html:91,Load,Loading,91,doc/master/TAttMarker_8h_source.html,https://root.cern,https://root.cern/doc/master/TAttMarker_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TAttText.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TAttText.h File Reference. #include ""Rtypes.h"". Include dependency graph for TAttText.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TAttText;  Text Attributes class. More...;  . Enumerations; enum  ETextAlign { ;   kHAlignLeft =10; , kHAlignCenter =20; , kHAlignRight =30; , kVAlignBottom =1; , ;   kVAlignCenter =2; , kVAlignTop =3. };  . Enumeration Type Documentation. ◆ ETextAlign. enum ETextAlign. EnumeratorkHAlignLeft ; kHAlignCenter ; kHAlignRight ; kVAlignBottom ; kVAlignCenter ; kVAlignTop . Definition at line 53 of file TAttText.h. corebaseincTAttText.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttText_8h.html:92,Load,Loading,92,doc/master/TAttText_8h.html,https://root.cern,https://root.cern/doc/master/TAttText_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TAttText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttText.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TAttText; 13#define ROOT_TAttText; 14 ; 15 ; 16#include ""Rtypes.h""; 17 ; 18class TAttText {; 19 ; 20protected:; 21 Float_t fTextAngle; ///< Text angle; 22 Float_t fTextSize; ///< Text size; 23 Short_t fTextAlign; ///< Text alignment; 24 Color_t fTextColor; ///< Text color; 25 Font_t fTextFont; ///< Text font; 26 ; 27public:; 28 TAttText();; 29 TAttText(Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);; 30 virtual ~TAttText();; 31 void Copy(TAttText &atttext) const;; 32 virtual Short_t GetTextAlign() const {return fTextAlign;} ///< Return the text alignment; 33 virtual Float_t GetTextAngle() const {return fTextAngle;} ///< Return the text angle; 34 virtual Color_t GetTextColor() const {return fTextColor;} ///< Return the text color; 35 virtual Font_t GetTextFont() const {return fTextFont;} ///< Return the text font; 36 virtual Float_t GetTextSize() const {return fTextSize;} ///< Return the text size; 37 virtual Float_t GetTextSizePercent(Float_t size); ///< Return the text in percent of the pad size; 38 virtual void Modify();; 39 virtual void ResetAttText(Option_t *toption="""");; 40 virtual void SaveTextAttributes(std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);; 41 virtual void SetTextAttributes(); // *MENU*; 42 virtual void SetTextAlign(Short_t align=11)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttText_8h_source.html:89,Load,Loading,89,doc/master/TAttText_8h_source.html,https://root.cern,https://root.cern/doc/master/TAttText_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TBuffer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBuffer.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun, Philippe Canal, Fons Rademakers 04/05/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBuffer; 13#define ROOT_TBuffer; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBuffer //; 19// //; 20// Buffer base class used for serializing objects. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TDataType.h""; 25#include ""TObject.h""; 26#include ""TClass.h""; 27#include ""Bytes.h""; 28 ; 29#include <vector>; 30#include <string>; 31 ; 32class TVirtualStreamerInfo;; 33class TStreamerElement;; 34class TString;; 35class TProcessID;; 36class TClonesArray;; 37class TRefTable;; 38class TVirtualArray;; 39namespace TStreamerInfoActions {; 40 class TActionSequence;; 41}; 42 ; 43class TBuffer : public TObject {; 44 ; 45protected:; 46 typedef std::vector<TVirtualArray*> CacheList_t;; 47 ; 48 Bool_t fMode; //Read or write mode; 49 Int_t fVersion; //Buffer format version; 50 Int_t fBufSize; //Size of buffer; 51 char *fBuffer; //Buffer used to store objects; 52 char *fBufCur; //Current position in buffer; 53 char *fBufMax; //End of buffer; 54 TObject *fParent; //Pointer to parent object owning this buffer; 55 ReAllocCharFun_t fReAllocFunc; //! Realloc function to be used when extending the buffer.; 56 CacheList_t fCacheStack; //Stack of pointers to the cache where to temporarily store the value of 'missing' data members;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBuffer_8h_source.html:88,Load,Loading,88,doc/master/TBuffer_8h_source.html,https://root.cern,https://root.cern/doc/master/TBuffer_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TColor.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TColor.h File Reference. #include ""TNamed.h""; #include <vector>. Include dependency graph for TColor.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TColor;  The color creation and management class. More...;  . Enumerations; enum  EColorPalette { ;   kDeepSea =51; , kGreyScale =52; , kDarkBodyRadiator =53; , kBlueYellow = 54; , ;   kRainBow =55; , kInvertedDarkBodyRadiator =56; , kBird =57; , kCubehelix =58; , ;   kGreenRedViolet =59; , kBlueRedYellow =60; , kOcean =61; , kColorPrintableOnGrey =62; , ;   kAlpine =63; , kAquamarine =64; , kArmy =65; , kAtlantic =66; , ;   kAurora =67; , kAvocado =68; , kBeach =69; , kBlackBody =70; , ;   kBlueGreenYellow =71; , kBrownCyan =72; , kCMYK =73; , kCandy =74; , ;   kCherry =75; , kCoffee =76; , kDarkRainBow =77; , kDarkTerrain =78; , ;   kFall =79; , kFruitPunch =80; , kFuchsia =81; , kGreyYellow =82; , ;   kGreenBrownTerrain =83; , kGreenPink =84; , kIsland =85; , kLake =86; , ;   kLightTemperature =87; , kLightTerrain =88; , kMint =89; , kNeon =90; , ;   kPastel =91; , kPearl =92; , kPigeon =93; , kPlum =94; , ;   kRedBlue =95; , kRose =96; , kRust =97; , kSandyTerrain =98; , ;   kSienna =99; , kSolar =100; , kSouthWest =101; , kStarryNight =102; , ;   kSunset =103; , kTemperatureMap =104; , kThermometer =105; , kValentine =106; , ;   kVisibleSpectrum =107; , kWaterMelon =108; , kCool =109; , kCopper =110; , ;   kGistEarth =111; , kViridis =112; , kCividis =113; , kRainbow =kRainBow; , ;   kDarkRainbow =kDarkRainBow. };  . Enumeration Type Documentation. ◆ EColorPalette. enum EColorPalette. EnumeratorkDeepSea ; kGreyScale ; kDarkBodyRadiator ; kBlueYellow ; kRa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColor_8h.html:90,Load,Loading,90,doc/master/TColor_8h.html,https://root.cern,https://root.cern/doc/master/TColor_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TColor.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TColor.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TColor; 13#define ROOT_TColor; 14 ; 15#include ""TNamed.h""; 16 ; 17#include <vector>; 18 ; 19class TArrayI;; 20 ; 21class TColor : public TNamed {; 22protected:; 23 Int_t fNumber; ///< Color number identifier; 24private:; 25 Float_t fRed; ///< Fraction of Red; 26 Float_t fGreen; ///< Fraction of Green; 27 Float_t fBlue; ///< Fraction of Blue; 28 Float_t fHue; ///< Hue; 29 Float_t fLight; ///< Light; 30 Float_t fSaturation; ///< Saturation; 31 Float_t fAlpha; ///< Alpha (transparency); 32 ; 33 void Allocate();; 34 static Float_t HLStoRGB1(Float_t rn1, Float_t rn2, Float_t huei);; 35 ; 36public:; 37 TColor();; 38 TColor(Int_t color, Float_t r, Float_t g, Float_t b, const char *name="""", Float_t a = 1);; 39 TColor(Float_t r, Float_t g, Float_t b, Float_t a = 1);; 40 TColor(const TColor &color);; 41 TColor &operator=(const TColor &color);; 42 virtual ~TColor();; 43 const char *AsHexString() const;; 44 void Copy(TObject &color) const override;; 45 static void CreateColorWheel();; 46 static void CreateColorsGray();; 47 static void CreateColorsCircle(Int_t offset, const char *name, UChar_t *rgb);; 48 static void CreateColorsRectangle(Int_t offset, const char *name, UChar_t *rgb);; 49 static Int_t CreateColorTableFromFile(TString fileName, Float_t alpha=1.);; 50 static Int_t CreateGradientColorTable(UInt_t Number, Double_t* Stops,; 51 Double_t* Red, Double_t* Gree",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColor_8h_source.html:87,Load,Loading,87,doc/master/TColor_8h_source.html,https://root.cern,https://root.cern/doc/master/TColor_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TDatime.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDatime.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 05/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TDatime; 13#define ROOT_TDatime; 14 ; 15#include <string>; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TDatime //; 20// //; 21// This class stores the date and time with a precision of one second //; 22// in an unsigned 32 bit word (e.g. 950130 124559). The date is stored //; 23// with the origin being the 1st january 1995. //; 24// //; 25// This class has no support for time zones. The time is assumed //; 26// to be in the local time of the machine where the object was created. //; 27// As a result, TDatime objects are not portable between machines //; 28// operating in different time zones and unsuitable for storing the //; 29// date/time of data taking events and the like. If absolute time is //; 30// required, use TTimeStamp. //; 31// //; 32//////////////////////////////////////////////////////////////////////////; 33 ; 34#include ""Rtypes.h""; 35 ; 36 ; 37class TDatime {; 38 ; 39private:; 40 ; 41protected:; 42 UInt_t fDatime; //Date (relative to 1995) + time; 43 ; 44public:; 45 TDatime();; 46 TDatime(const TDatime &d): fDatime(d.fDatime) { }; 47 TDatime(UInt_t tloc, Bool_t dosDate = kFALSE): fDatime(0); 48 { Set(tloc, dosDate); }; 49 TDatime(Int_t date, Int_t time);; 50 TDatime(Int_t year, Int_t month, Int_t day,; 51 Int_t hour, Int_t min, Int_t sec);; 52 TDatime(const char *sqlDateTime);; 53 virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDatime_8h_source.html:88,Load,Loading,88,doc/master/TDatime_8h_source.html,https://root.cern,https://root.cern/doc/master/TDatime_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TDirectory.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros ; TDirectory.h File Reference. #include ""TNamed.h""; #include ""TClass.h""; #include ""TUUID.h""; #include <atomic>; #include ""TList.h""; #include ""TBuffer.h"". Include dependency graph for TDirectory.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TDirectory::TContext;  TDirectory::TContext keeps track and restore the current directory. More...;  ; class  TDirectory;  Describe directory structure in memory. More...;  ; struct  ROOT::Internal::TDirectoryAtomicAdapter;  Internal class used in the implementation of gDirectory The objects of type TDirectoryAtomicAdapter should only be used inside the thread that created them. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Macros; #define gDirectory   (::ROOT::Internal::TDirectoryAtomicAdapter{});  . Macro Definition Documentation. ◆ gDirectory. #define gDirectory   (::ROOT::Internal::TDirectoryAtomicAdapter{}). Definition at line 384 of file TDirectory.h. corebaseincTDirectory.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectory_8h.html:94,Load,Loading,94,doc/master/TDirectory_8h.html,https://root.cern,https://root.cern/doc/master/TDirectory_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TDirectory.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectory.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TDirectory; 13#define ROOT_TDirectory; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TDirectory //; 19// //; 20// Describe directory structure in memory. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TClass.h""; 26#include ""TUUID.h""; 27#include <atomic>; 28 ; 29#ifdef R__LESS_INCLUDES; 30class TList;; 31#else; 32#include ""TList.h""; 33#include ""TBuffer.h""; 34// #include ""TDatime.h""; 35#endif; 36 ; 37class TBrowser;; 38class TKey;; 39class TFile;; 40namespace ROOT {; 41namespace Internal {; 42 struct TDirectoryAtomicAdapter;; 43}}; 44 ; 45class TDirectory : public TNamed {; 46public:; 47 ; 48/** \class TContext; 49\ingroup Base; 50 ; 51TDirectory::TContext keeps track and restore the current directory.; 52With this tool C++ exceptions will be guaranteed to properly restore the; 53current directory pointer.; 54 ; 55For example code like:; 56 ; 57~~~ {.cpp}; 58 TDirectory *sav = gDirectory;; 59 mydirectory->cd();; 60 if (...) {; 61 ....; 62 sav->cd();; 63 return;; 64 } else if (...) {; 65 ....; 66 sav->cd();; 67 return;; 68 }; 69 sav->cd;; 70 return;; 71~~~; 72 ; 73can be replaced with the simpler and exception safe:; 74 ; 75~~~ {.cpp}; 76 TDirectory::TContext context(gDirectory, mydirectory);; 77 if (...) {; 78 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectory_8h_source.html:91,Load,Loading,91,doc/master/TDirectory_8h_source.html,https://root.cern,https://root.cern/doc/master/TDirectory_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TEnv.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations |; Variables ; TEnv.h File Reference. #include ""TObject.h""; #include ""TString.h"". Include dependency graph for TEnv.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TEnv;  The TEnv class reads config files, by default named .rootrc. More...;  ; class  TEnvRec;  . Enumerations; enum  EEnvLevel { ;   kEnvGlobal; , kEnvUser; , kEnvLocal; , kEnvChange; , ;   kEnvAll. };  . Variables; R__EXTERN TEnv * gEnv;  . Enumeration Type Documentation. ◆ EEnvLevel. enum EEnvLevel. EnumeratorkEnvGlobal ; kEnvUser ; kEnvLocal ; kEnvChange ; kEnvAll . Definition at line 69 of file TEnv.h. Variable Documentation. ◆ gEnv. R__EXTERN TEnv* gEnv. Definition at line 170 of file TEnv.h. corebaseincTEnv.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8h.html:88,Load,Loading,88,doc/master/TEnv_8h.html,https://root.cern,https://root.cern/doc/master/TEnv_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TEnv.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEnv.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 22/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TEnv; 13#define ROOT_TEnv; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TEnv //; 19// //; 20// The TEnv class reads config files, by default named .rootrc. Three //; 21// types of config files are read: global, user and local files. The //; 22// global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>)//; 23// the user file is $HOME/<name> and the local file is ./<name>. //; 24// By setting the shell variable ROOTENV_NO_HOME=1 the reading of //; 25// the $HOME/<name> resource file will be skipped. This might be useful //; 26// in case the home directory resides on an automounted remote file //; 27// system and one wants to avoid this file system from being mounted. //; 28// //; 29// The format of the .rootrc file is similar to the .Xdefaults format: //; 30// //; 31// [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value> //; 32// //; 33// Where <SystemName> is either Unix, WinNT, MacOS or Vms, //; 34// <RootName> the name as given in the TApplication ctor (or ""RootApp"" //; 35// in case no explicit TApplication derived object was created), //; 36// <ProgName> the current program name and <name> the resource name, //; 37// with optionally a type specification. <value> can be either a //; 38// string, an integer, a float/double or a boolean with the values //; 39// TRUE, FALSE, ON, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8h_source.html:85,Load,Loading,85,doc/master/TEnv_8h_source.html,https://root.cern,https://root.cern/doc/master/TEnv_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TExec.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TExec.h File Reference. #include ""TNamed.h"". Include dependency graph for TExec.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TExec;  TExec is a utility class that can be used to execute a C++ command when some event happens in a pad. More...;  . corebaseincTExec.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TExec_8h.html:89,Load,Loading,89,doc/master/TExec_8h.html,https://root.cern,https://root.cern/doc/master/TExec_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TExec.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TExec.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 29/12/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TExec; 13#define ROOT_TExec; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TExec //; 19// //; 20// A TExec object can execute a CLING command. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25 ; 26class TExec : public TNamed {; 27 ; 28public:; 29 ; 30 TExec();; 31 TExec(const char *name, const char *command);; 32 TExec(const TExec &text);; 33 virtual ~TExec();; 34 virtual void Exec(const char *command = """");; 35 void Paint(Option_t *option="""") override;; 36 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 37 virtual void SetAction(const char *action) { SetTitle(action); }; 38 ; 39 ClassDefOverride(TExec,1); //To execute a CLING command; 40};; 41 ; 42#endif; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; textOption_t Option_t TPoint TPoint const char textDefinition TGWin32VirtualXProxy.cxx:68; namechar name[80]Definition TGX11.cxx:110; TNamed.h; TExecTExec is a utility class that can be used to execute a C++ command when some event happens in a pad.Definition TExec.h:26; TExec::~TExecvirtual ~TExec()Exec default destructor.Definition TExec.cxx:120; TExec::Sav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TExec_8h_source.html:86,Load,Loading,86,doc/master/TExec_8h_source.html,https://root.cern,https://root.cern/doc/master/TExec_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TMathBase.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMathBase.h. Go to the documentation of this file. 1// @(#)root/base:; 2// Authors: Rene Brun, Fons Rademakers 29/07/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TMathBase; 13#define ROOT_TMathBase; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TMath Base functions //; 19// //; 20// Define the functions Min, Max, Abs, Sign, Range for all types. //; 21// NB: These functions are unfortunately not available in a portable //; 22// way in std::. //; 23// //; 24// More functions are defined in TMath.h. TMathBase.h is designed to be //; 25// a stable file and used in place of TMath.h in the ROOT miniCore. //; 26// //; 27//////////////////////////////////////////////////////////////////////////; 28 ; 29#include ""RtypesCore.h""; 30 ; 31#include <cstdlib>; 32#include <cmath>; 33#include <algorithm>; 34 ; 35namespace TMath {; 36 ; 37 // Abs; 38 inline Short_t Abs(Short_t d);; 39 inline Int_t Abs(Int_t d);; 40 inline Long_t Abs(Long_t d);; 41 inline Long64_t Abs(Long64_t d);; 42 inline Float_t Abs(Float_t d);; 43 inline Double_t Abs(Double_t d);; 44 inline LongDouble_t Abs(LongDouble_t d);; 45 ; 46 // Even/Odd; 47 inline Bool_t Even(Long_t a);; 48 inline Bool_t Odd(Long_t a);; 49 ; 50 // SignBit; 51 template<typename Integer>; 52 inline Bool_t SignBit(Integer a);; 53 inline Bool_t SignBit(Float_t a);; 54 inline Bool_t SignBit(Double_t a);; 55 inline Bool_t SignBit(LongDouble_t a);; 56 ; 57 // Sign; 58 template<typename T1, typename T2>; 59 inline T1 S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMathBase_8h_source.html:90,Load,Loading,90,doc/master/TMathBase_8h_source.html,https://root.cern,https://root.cern/doc/master/TMathBase_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TNamed.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNamed.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TNamed; 13#define ROOT_TNamed; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TNamed //; 19// //; 20// The basis for a named object (name, title). //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TObject.h""; 26#include ""TString.h""; 27 ; 28 ; 29class TNamed : public TObject {; 30 ; 31protected:; 32 TString fName; //object identifier; 33 TString fTitle; //object title; 34 ; 35public:; 36 TNamed(): fName(), fTitle() { }; 37 TNamed(const char *name, const char *title) : fName(name), fTitle(title) { }; 38 TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }; 39 TNamed(const TNamed &named);; 40 TNamed& operator=(const TNamed& rhs);; 41 virtual ~TNamed();; 42 void Clear(Option_t *option ="""") override;; 43 TObject *Clone(const char *newname="""") const override;; 44 Int_t Compare(const TObject *obj) const override;; 45 void Copy(TObject &named) const override;; 46 virtual void FillBuffer(char *&buffer);; 47 const char *GetName() const override { return fName; }; 48 const char *GetTitle() const override { return fTitle; }; 49 ULong_t Hash() const override { return fName.Hash(); }; 50 Bool_t IsSortable() const override { return kTRUE; }; 51 virtual void SetName(const char *name); // *MENU*; 52 virtual void SetNameTitle(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNamed_8h_source.html:87,Load,Loading,87,doc/master/TNamed_8h_source.html,https://root.cern,https://root.cern/doc/master/TNamed_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TObjString.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TObjString.h File Reference. #include ""TObject.h""; #include ""TString.h"". Include dependency graph for TObjString.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TObjString;  Collectable string class. More...;  . corebaseincTObjString.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObjString_8h.html:94,Load,Loading,94,doc/master/TObjString_8h.html,https://root.cern,https://root.cern/doc/master/TObjString_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TObjString.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObjString.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 12/11/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TObjString; 13#define ROOT_TObjString; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TObjString //; 19// //; 20// Collectable string class. This is a TObject containing a TString. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TObject.h""; 25#include ""TString.h""; 26 ; 27 ; 28class TObjString : public TObject {; 29 ; 30private:; 31 TString fString; // wrapped TString; 32 ; 33public:; 34 TObjString(const char *s = """") : fString(s) { }; 35 ~TObjString();; 36 Int_t Compare(const TObject *obj) const override;; 37 TString CopyString() const { return fString; }; 38 const char *GetName() const override { return fString; }; 39 ULong_t Hash() const override { return fString.Hash(); }; 40 void FillBuffer(char *&buffer) { fString.FillBuffer(buffer); }; 41 void Print(Option_t *) const override { Printf(""TObjString = %s"", (const char*)fString); }; 42 Bool_t IsSortable() const override { return kTRUE; }; 43 Bool_t IsEqual(const TObject *obj) const override;; 44 void ReadBuffer(char *&buffer) { fString.ReadBuffer(buffer); }; 45 void SetString(const char *s) { fString = s; }; 46 const TString &GetString() const { return fString; }; 47 Int_t Sizeof() const { return fString.Sizeof(); }; 48 TString &String() { return fString; }; 49 ; 50 ClassDefO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObjString_8h_source.html:91,Load,Loading,91,doc/master/TObjString_8h_source.html,https://root.cern,https://root.cern/doc/master/TObjString_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TObject.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObject.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TObject; 13#define ROOT_TObject; 14 ; 15 ; 16// #include ""RConfigure.h"" // included via Rtypes.h; 17#include ""Rtypes.h""; 18#include ""TStorage.h""; 19#include ""TVersionCheck.h""; 20 ; 21#include <stdarg.h>; 22#include <string>; 23#include <iosfwd>; 24 ; 25#ifdef WIN32; 26#undef RemoveDirectory; 27#endif; 28 ; 29class TList;; 30class TBrowser;; 31class TBuffer;; 32class TObjArray;; 33class TMethod;; 34class TTimer;; 35 ; 36namespace ROOT {; 37namespace Internal {; 38 bool DeleteChangesMemoryImpl();; 39}}; 40 ; 41class TObject {; 42 ; 43private:; 44 UInt_t fUniqueID; ///< object unique identifier; 45 UInt_t fBits; ///< bit field status word; 46 ; 47 static Longptr_t fgDtorOnly; ///< object for which to call dtor only (i.e. no delete); 48 static Bool_t fgObjectStat; ///< if true keep track of objects in TObjectTable; 49 ; 50 static void AddToTObjectTable(TObject *);; 51 ; 52protected:; 53 void MakeZombie() { fBits |= kZombie; }; 54 virtual void DoError(int level, const char *location, const char *fmt, va_list va) const;; 55 ; 56public:; 57 //----- Global bits (can be set for any object and should not be reused).; 58 //----- Bits 0 - 13 are reserved as global bits. Bits 14 - 23 can be used; 59 //----- in different class hierarchies (make sure there is no overlap in; 60 //----- any given hierarchy).; 61 enum EStatusBits {; 62 kCanDelete = BIT(0), ///< if objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8h_source.html:88,Load,Loading,88,doc/master/TObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TObject_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TQObject.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TQObject.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Valeriy Onuchin & Fons Rademakers 15/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TQObject; 13#define ROOT_TQObject; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// This is the ROOT implementation of the Qt object communication //; 18// mechanism (see also https://doc.qt.io/qt-5/metaobjects.html) //; 19// //; 20// Signals and slots are used for communication between objects. //; 21// When an object has changed in some way that might be interesting //; 22// for the outside world, it emits a signal to tell whoever is //; 23// listening. All slots that are connected to this signal will be //; 24// activated (called). It is even possible to connect a signal //; 25// directly to another signal (this will emit the second signal //; 26// immediately whenever the first is emitted.) There is no limitation //; 27// on the number of slots that can be connected to a signal. //; 28// The slots will be activated in the order they were connected //; 29// to the signal. This mechanism allows objects to be easily reused, //; 30// because the object that emits a signal does not need to know //; 31// to what the signals are connected to. //; 32// Together, signals and slots make up a powerful component //; 33// programming mechanism. //; 34// //; 35// This implementation is provided by //; 36// Valeriy Onuchin (onuchin@sirius.ihep.su). //; 37// //; 38/////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TQObject_8h_source.html:89,Load,Loading,89,doc/master/TQObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TQObject_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TROOT.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Functions |; Variables ; TROOT.h File Reference. #include ""TDirectory.h""; #include <atomic>; #include <string>; #include <vector>; #include <utility>. Include dependency graph for TROOT.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Internal::TParBranchProcessingRAII;  ; class  TROOT;  ROOT top level object description. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Macros; #define gROOT   (ROOT::GetROOT());  . Functions; void ROOT::CallRecursiveRemoveIfNeeded (TObject &obj);  call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true. ;  ; void ROOT::DisableImplicitMT ();  Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ;  ; void ROOT::Internal::DisableParBranchProcessing ();  Globally disables the IMT use case of parallel branch processing, deactivating the corresponding locks. ;  ; void ROOT::EnableImplicitMT (UInt_t numthreads=0);  Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ;  ; void ROOT::Internal::EnableParBranchProcessing ();  Globally enables the parallel branch processing, which is a case of implicit multi-threading (IMT) in ROOT, activating the required locks. ;  ; void ROOT::EnableThreadSafety ();  Enable support for multi-threading within the ROOT code in particular, enables the global mutex to make ROOT thread safe/aware. ;  ; TROOT * ROOT::GetROOT ();  ; TROOT * ROOT::Internal::GetROOT2 ();  ; UInt_t ROOT::GetThreadPoolSize ();  Returns the size of ROOT's thread pool. ;  ; Bool_t ROOT::IsImplicitMTEnabled ();  Returns true if ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h.html:89,Load,Loading,89,doc/master/TROOT_8h.html,https://root.cern,https://root.cern/doc/master/TROOT_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TROOT.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TROOT.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 08/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TROOT; 13#define ROOT_TROOT; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TROOT //; 19// //; 20// The TROOT object is the entry point to the system. //; 21// The single instance of TROOT is accessible via the global gROOT. //; 22// Using the gROOT pointer one has access to basically every object //; 23// created in a ROOT based program. The TROOT object is essentially a //; 24// container of several lists pointing to the main ROOT objects. //; 25// //; 26//////////////////////////////////////////////////////////////////////////; 27 ; 28#include ""TDirectory.h""; 29// #include ""TList.h"" // included in TDirectory.h; 30// #include ""RConfigure.h"" // included via Rtypes.h; 31 ; 32#include <atomic>; 33#include <string>; 34#include <vector>; 35#include <utility>; 36 ; 37class TClass;; 38class TCanvas;; 39class TColor;; 40class TDataType;; 41class TFile;; 42class TStyle;; 43class TVirtualPad;; 44class TApplication;; 45class TInterpreter;; 46class TBrowser;; 47class TGlobal;; 48class TFunction;; 49class TFolder;; 50class TPluginManager;; 51class TProcessUUID;; 52class TClassGenerator;; 53class TVirtualMutex;; 54class TROOT;; 55class TListOfDataMembers;; 56class TListOfEnums;; 57class TListOfFunctions;; 58class TListOfFunctionTemplates;; 59class TSeqCollection;; 60class TFunctionTemplate;; 61class TGlobalMappedF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h_source.html:86,Load,Loading,86,doc/master/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TROOT.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TROOT.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 08/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TROOT; 13#define ROOT_TROOT; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TROOT //; 19// //; 20// The TROOT object is the entry point to the system. //; 21// The single instance of TROOT is accessible via the global gROOT. //; 22// Using the gROOT pointer one has access to basically every object //; 23// created in a ROOT based program. The TROOT object is essentially a //; 24// container of several lists pointing to the main ROOT objects. //; 25// //; 26//////////////////////////////////////////////////////////////////////////; 27 ; 28#include ""TDirectory.h""; 29// #include ""TList.h"" // included in TDirectory.h; 30// #include ""RConfigure.h"" // included via Rtypes.h; 31 ; 32#include <atomic>; 33#include <string>; 34#include <vector>; 35#include <utility>; 36 ; 37class TClass;; 38class TCanvas;; 39class TColor;; 40class TDataType;; 41class TFile;; 42class TStyle;; 43class TVirtualPad;; 44class TApplication;; 45class TInterpreter;; 46class TBrowser;; 47class TGlobal;; 48class TFunction;; 49class TFolder;; 50class TPluginManager;; 51class TProcessUUID;; 52class TClassGenerator;; 53class TVirtualMutex;; 54class TROOT;; 55class TListOfDataMembers;; 56class TListOfEnums;; 57class TListOfFunctions;; 58class TListOfFunctionTemplates;; 59class TSeqCollection;; 60class TFunctionTemplate;; 61class TGlobalMappedFu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TROOT_8h_source.html:85,Load,Loading,85,doc/v632/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/v632/TROOT_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TRootIOCtor.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRootIOCtor.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Philippe Canal 15/03/2005; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRootIOCtor; 13#define ROOT_TRootIOCtor; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TRootIOCtor //; 18// //; 19// Helper class used to mark a constructor to be used by ROOT instead //; 20// of the default constructor. //; 21// If rootcint sees in a class declaration of the class MyClass: //; 22// MyClass(TRootIOCtor*); //; 23// This constructor will be used instead of the default constructor. //; 24// //; 25// Also the pragma: //; 26// #pragma link C++ ioctortype MyMarker; //; 27// can be used to tell rootcint that a constuctor taking a MyMarker* //; 28// should be used whenever available. //; 29// //; 30//////////////////////////////////////////////////////////////////////////; 31 ; 32class TRootIOCtor; 33{; 34 // For now intentionally empty.; 35};; 36 ; 37#endif; TRootIOCtorDefinition TRootIOCtor.h:33. corebaseincTRootIOCtor.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:03 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRootIOCtor_8h_source.html:92,Load,Loading,92,doc/master/TRootIOCtor_8h_source.html,https://root.cern,https://root.cern/doc/master/TRootIOCtor_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TStopwatch.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TStopwatch.h File Reference. #include ""TObject.h"". Include dependency graph for TStopwatch.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TStopwatch;  Stopwatch class. More...;  . corebaseincTStopwatch.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStopwatch_8h.html:94,Load,Loading,94,doc/master/TStopwatch_8h.html,https://root.cern,https://root.cern/doc/master/TStopwatch_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TStopwatch.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStopwatch.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 11/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TStopwatch; 13#define ROOT_TStopwatch; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TStopwatch //; 19// //; 20// Stopwatch class. This class returns the real and cpu time between //; 21// the start and stop events. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TObject.h""; 26 ; 27 ; 28class TStopwatch : public TObject {; 29 ; 30private:; 31 enum EState { kUndefined, kStopped, kRunning };; 32 ; 33 Double_t fStartRealTime; //wall clock start time; 34 Double_t fStopRealTime; //wall clock stop time; 35 Double_t fStartCpuTime; //cpu start time; 36 Double_t fStopCpuTime; //cpu stop time; 37 Double_t fTotalCpuTime; //total cpu time; 38 Double_t fTotalRealTime; //total real time; 39 EState fState; //stopwatch state; 40 Int_t fCounter; //number of times the stopwatch was started; 41 ; 42 static Double_t GetRealTime();; 43 static Double_t GetCPUTime();; 44 ; 45public:; 46 TStopwatch();; 47 void Start(Bool_t reset = kTRUE);; 48 void Stop();; 49 void Continue();; 50 Int_t Counter() const { return fCounter; }; 51 Double_t RealTime();; 52 void Reset() { ResetCpuTime(); ResetRealTime(); }; 53 void ResetCpuTime(Double_t time = 0) { Stop(); fTotalCpuTime = time; }; 54 void ResetRealTime(Double_t time = 0) { Stop(); fTotalRealTime = time; }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStopwatch_8h_source.html:91,Load,Loading,91,doc/master/TStopwatch_8h_source.html,https://root.cern,https://root.cern/doc/master/TStopwatch_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TStorage.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Variables ; TStorage.h File Reference. #include ""Rtypes.h"". Include dependency graph for TStorage.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TStorage;  Storage manager. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Typedefs; typedef void(* FreeHookFun_t) (void *, void *addr, size_t);  ; using ROOT::Internal::FreeIfTMapFile_t = bool(void *);  ; using ROOT::Internal::GetMapFileMapllocDesc_t = void *(void *);  ; typedef void *(* ReAllocCFun_t) (void *, size_t, size_t);  ; typedef char *(* ReAllocCharFun_t) (char *, size_t, size_t);  ; typedef void *(* ReAllocFun_t) (void *, size_t);  . Variables; R__EXTERN FreeIfTMapFile_t * ROOT::Internal::gFreeIfTMapFile = nullptr;  ; R__EXTERN GetMapFileMapllocDesc_t * ROOT::Internal::gGetMapFileMallocDesc = nullptr;  ; R__EXTERN void * ROOT::Internal::gMmallocDesc = nullptr;  . Typedef Documentation. ◆ FreeHookFun_t. typedef void(* FreeHookFun_t) (void *, void *addr, size_t). Definition at line 27 of file TStorage.h. ◆ ReAllocCFun_t. typedef void *(* ReAllocCFun_t) (void *, size_t, size_t). Definition at line 29 of file TStorage.h. ◆ ReAllocCharFun_t. typedef char *(* ReAllocCharFun_t) (char *, size_t, size_t). Definition at line 30 of file TStorage.h. ◆ ReAllocFun_t. typedef void *(* ReAllocFun_t) (void *, size_t). Definition at line 28 of file TStorage.h. corebaseincTStorage.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:13 (GVA Time) using Doxygen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStorage_8h.html:92,Load,Loading,92,doc/master/TStorage_8h.html,https://root.cern,https://root.cern/doc/master/TStorage_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TString.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; TString.h File Reference. #include ""Rtypes.h""; #include ""TMathBase.h""; #include <string_view>; #include ""ROOT/TypeTraits.hxx""; #include ""snprintf.h""; #include <iosfwd>; #include <cstdarg>; #include <cstdio>; #include <cstring>; #include <string>. Include dependency graph for TString.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TString::LongStr_t;  ; struct  TString::RawStr_t;  ; struct  TString::Rep_t;  ; struct  TString::ShortStr_t;  ; class  TString;  Basic string class. More...;  ; class  TSubString;  A zero length substring is legal. More...;  ; union  TString::UStr_t;  . Namespaces; namespace  llvm;  . Functions; char * Compress (const char *str);  Remove all blanks from the string str. ;  ; int EscChar (const char *src, char *dst, int dstlen, char *specchars, char escchar);  Escape specchars in src with escchar and copy to dst. ;  ; char * Form (const char *fmt,...);  Formats a string in a circular formatting buffer. ;  ; UInt_t Hash (const char *s);  Return a case-sensitive hash value (endian independent). ;  ; UInt_t Hash (const TString &s);  ; UInt_t Hash (const TString *s);  ; Bool_t operator!= (const char *s1, const TString &s2);  ; Bool_t operator!= (const char *s1, const TSubString &s2);  ; Bool_t operator!= (const TString &s1, const char *s2);  ; Bool_t operator!= (const TString &s1, const TString &s2);  ; Bool_t operator!= (const TString &s1, const TSubString &s2);  ; Bool_t operator!= (const TSubString &s1, const char *s2);  ; Bool_t operator!= (const TSubString &s1, const TString &s2);  ; Bool_t operator!= (const TSubString &s1, const TSubString &s2);  ; TString operator+ (char c, const TString &s);  Add string to char. ;  ; TString operator+ (const char *cs, const TString &s);  Use the special concatenation constructor. ;  ; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8h.html:91,Load,Loading,91,doc/master/TString_8h.html,https://root.cern,https://root.cern/doc/master/TString_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TString.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TString.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 04/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TString; 13#define ROOT_TString; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TString //; 19// //; 20// Basic string class. //; 21// //; 22// Cannot be stored in a TCollection... use TObjString instead. //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""Rtypes.h""; 27 ; 28#include ""TMathBase.h""; 29#include <string_view>; 30#include ""ROOT/TypeTraits.hxx""; 31#include ""snprintf.h""; 32 ; 33#include <iosfwd>; 34#include <cstdarg>; 35#include <cstdio>; 36#include <cstring>; 37#include <string>; 38#if (__cplusplus >= 202002L); 39# include <compare>; 40#endif; 41 ; 42class TRegexp;; 43class TPRegexp;; 44class TString;; 45class TSubString;; 46class TObjArray;; 47class TVirtualMutex;; 48class TBuffer;; 49class TClass;; 50class TBufferFile;; 51 ; 52TString operator+(const TString &s1, const TString &s2);; 53TString operator+(const TString &s, const char *cs);; 54TString operator+(const char *cs, const TString &s);; 55TString operator+(const TString &s, char c);; 56TString operator+(char c, const TString &s);; 57Bool_t operator==(const TString &s1, const TString &s2);; 58Bool_t operator==(const TString &s1, const char *s2);; 59Bool_t operator==(const TSubString &s1, const TSubString &s2);; 60Bool_t operator==(const TSubString &s1, const TString &s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8h_source.html:88,Load,Loading,88,doc/master/TString_8h_source.html,https://root.cern,https://root.cern/doc/master/TString_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TStyle.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TStyle.h File Reference. #include ""TNamed.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TAttText.h""; #include ""TAttAxis.h""; #include ""TColor.h""; #include ""TArrayI.h"". Include dependency graph for TStyle.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TStyle;  TStyle objects may be created to define special styles. More...;  . Variables; R__EXTERN TStyle * gStyle;  . Variable Documentation. ◆ gStyle. R__EXTERN TStyle* gStyle. Definition at line 436 of file TStyle.h. corebaseincTStyle.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStyle_8h.html:90,Load,Loading,90,doc/master/TStyle_8h.html,https://root.cern,https://root.cern/doc/master/TStyle_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TStyle.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStyle.h. Go to the documentation of this file. 1// @(#)root/base:$Id: 5214d7dc2746ceb518366bc6c4f4068b652d5241 $; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TStyle; 13#define ROOT_TStyle; 14 ; 15#include ""TNamed.h""; 16#include ""TAttLine.h""; 17#include ""TAttFill.h""; 18#include ""TAttMarker.h""; 19#include ""TAttText.h""; 20#include ""TAttAxis.h""; 21#include ""TColor.h""; 22 ; 23#ifndef R__LESS_INCLUDES; 24#include ""TArrayI.h""; 25#endif; 26 ; 27class TBrowser;; 28 ; 29class TStyle : public TNamed, public TAttLine, public TAttFill, public TAttMarker, public TAttText {; 30 ; 31private:; 32 TAttAxis fXaxis; ///< X axis attributes; 33 TAttAxis fYaxis; ///< Y axis attributes; 34 TAttAxis fZaxis; ///< Z axis attributes; 35 Float_t fBarWidth; ///< Width of bar for graphs; 36 Float_t fBarOffset; ///< Offset of bar for graphs; 37 Int_t fColorModelPS; ///< PostScript color model: 0 = RGB, 1 = CMYK; 38 Int_t fDrawBorder; ///< Flag to draw border(=1) or not (0); 39 Int_t fOptLogx; ///< True if log scale in X; 40 Int_t fOptLogy; ///< True if log scale in y; 41 Int_t fOptLogz; ///< True if log scale in z; 42 Int_t fOptDate; ///< True if date option is selected; 43 Int_t fOptStat; ///< True if option Stat is selected; 44 Int_t fOptTitle; ///< True if option Title is selected; 45 Int_t fOptFile; ///< True if option File is selected; 46 Int_t fOptFit; ///< True if option Fit is selected; 47 Int_t fShowEventStatus; ///< Show event status panel; 48 Int_t fShowEditor; ///< Show pad editor; 49 I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStyle_8h_source.html:87,Load,Loading,87,doc/master/TStyle_8h_source.html,https://root.cern,https://root.cern/doc/master/TStyle_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TSysEvtHandler.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TSysEvtHandler.h File Reference. #include ""TObject.h""; #include ""TQObject.h"". Include dependency graph for TSysEvtHandler.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TFileHandler;  ; class  TSignalHandler;  ; class  TStdExceptionHandler;  ; class  TSysEvtHandler;  Abstract base class for handling system events. More...;  . Enumerations; enum  ESignals { ;   kSigBus; , kSigSegmentationViolation; , kSigSystem; , kSigPipe; , ;   kSigIllegalInstruction; , kSigAbort; , kSigQuit; , kSigInterrupt; , ;   kSigWindowChanged; , kSigAlarm; , kSigChild; , kSigUrgent; , ;   kSigFloatingException; , kSigTermination; , kSigUser1; , kSigUser2. };  . Enumeration Type Documentation. ◆ ESignals. enum ESignals. EnumeratorkSigBus ; kSigSegmentationViolation ; kSigSystem ; kSigPipe ; kSigIllegalInstruction ; kSigAbort ; kSigQuit ; kSigInterrupt ; kSigWindowChanged ; kSigAlarm ; kSigChild ; kSigUrgent ; kSigFloatingException ; kSigTermination ; kSigUser1 ; kSigUser2 . Definition at line 107 of file TSysEvtHandler.h. corebaseincTSysEvtHandler.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSysEvtHandler_8h.html:98,Load,Loading,98,doc/master/TSysEvtHandler_8h.html,https://root.cern,https://root.cern/doc/master/TSysEvtHandler_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TSystem.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Enumerations |; Functions |; Variables ; TSystem.h File Reference. #include <cstdio>; #include <cctype>; #include <fcntl.h>; #include <unistd.h>; #include ""TNamed.h""; #include ""TInetAddress.h""; #include ""TTimer.h""; #include <string>. Include dependency graph for TSystem.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  CpuInfo_t;  ; struct  FileStat_t;  ; struct  MemInfo_t;  ; struct  ProcInfo_t;  ; struct  RedirectHandle_t;  ; struct  SysInfo_t;  ; class  TProcessEventTimer;  ; class  TSystem;  Abstract base class defining a generic interface to the underlying Operating System. More...;  ; struct  UserGroup_t;  . Typedefs; typedef void(* Func_t) ();  . Enumerations; enum  EAccessMode { kFileExists = 0; , kExecutePermission = 1; , kWritePermission = 2; , kReadPermission = 4; };  ; enum  EFileModeMask { ;   kS_IFMT = 0170000; , kS_IFSOCK = 0140000; , kS_IFLNK = 0120000; , kS_IFOFF = 0110000; , ;   kS_IFREG = 0100000; , kS_IFBLK = 0060000; , kS_IFDIR = 0040000; , kS_IFCHR = 0020000; , ;   kS_IFIFO = 0010000; , kS_ISUID = 0004000; , kS_ISGID = 0002000; , kS_ISVTX = 0001000; , ;   kS_IRWXU = 00700; , kS_IRUSR = 00400; , kS_IWUSR = 00200; , kS_IXUSR = 00100; , ;   kS_IRWXG = 00070; , kS_IRGRP = 00040; , kS_IWGRP = 00020; , kS_IXGRP = 00010; , ;   kS_IRWXO = 00007; , kS_IROTH = 00004; , kS_IWOTH = 00002; , kS_IXOTH = 00001. };  ; enum  EFpeMask { ;   kNoneMask = 0x00; , kInvalid = 0x01; , kDivByZero = 0x02; , kOverflow = 0x04; , ;   kUnderflow = 0x08; , kInexact = 0x10; , kDefaultMask = 0x07; , kAllMask = 0x1F. };  ; enum  ELogFacility { ;   kLogLocal0; , kLogLocal1; , kLogLocal2; , kLogLocal3; , ;   kLogLocal4; , kLogLocal5; , kLogLocal6; , kLogLocal7. };  ; enum  ELogLevel { ;   kLogEmerg = 0; , kLogAlert = 1; , kLogCrit = 2; , kLogErr = 3; , ;   kLogWarning = 4; , k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h.html:91,Load,Loading,91,doc/master/TSystem_8h.html,https://root.cern,https://root.cern/doc/master/TSystem_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TSystem.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSystem.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 15/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TSystem; 13#define ROOT_TSystem; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TSystem //; 19// //; 20// Abstract base class defining a generic interface to the underlying //; 21// Operating System. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include <cstdio>; 26#include <cctype>; 27#include <fcntl.h>; 28#ifndef _WIN32; 29#include <unistd.h>; 30#endif; 31 ; 32#include ""TNamed.h""; 33#include ""TInetAddress.h""; 34#include ""TTimer.h""; 35#include <string>; 36 ; 37class TSeqCollection;; 38class TFdSet;; 39class TVirtualMutex;; 40 ; 41enum EAccessMode {; 42 kFileExists = 0,; 43 kExecutePermission = 1,; 44 kWritePermission = 2,; 45 kReadPermission = 4; 46};; 47 ; 48enum ELogOption {; 49 kLogPid = 0x01,; 50 kLogCons = 0x02; 51};; 52 ; 53enum ELogLevel {; 54 kLogEmerg = 0,; 55 kLogAlert = 1,; 56 kLogCrit = 2,; 57 kLogErr = 3,; 58 kLogWarning = 4,; 59 kLogNotice = 5,; 60 kLogInfo = 6,; 61 kLogDebug = 7; 62};; 63 ; 64enum ELogFacility {; 65 kLogLocal0,; 66 kLogLocal1,; 67 kLogLocal2,; 68 kLogLocal3,; 69 kLogLocal4,; 70 kLogLocal5,; 71 kLogLocal6,; 72 kLogLocal7; 73};; 74 ; 75enum EFpeMask {; 76 kNoneMask = 0x00,; 77 kInvalid = 0x01, // Invalid argument; 78 kDivByZero = 0x02, // Division by zero; 79 kOverflow = 0x04, // Overflow; 80 kUnderflow = 0x08",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:88,Load,Loading,88,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TThreadSlots.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TThreadSlots.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Philippe Canal 09/30/2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TThreadSlots; 13#define ROOT_TThreadSlots; 14 ; 15#include ""RtypesCore.h""; 16 ; 17namespace ROOT {; 18 ; 19 enum EThreadSlotReservation {; 20 // Describe the system wide slot pre-allocation in the TThread; 21 // 'special data' storage array ; meant to be used as thread local; 22 // storage. (See TThread::Tsd); 23 //; 24 // Slot 0 through 19 can be used for user application; 25 // Slot 20 and above are reserved for the global system; 26 kMaxUserThreadSlot = 20,; 27 ; 28 // Slot reserved by ROOT's packages.; 29 kPadThreadSlot = 20,; 30 kClassThreadSlot = 21,; 31 /* This no longer used.; 32 kDirectoryThreadSlot = 22,; 33 */; 34 kFileThreadSlot = 23,; 35 kPerfStatsThreadSlot = 24,; 36 ; 37 kMaxThreadSlot = 25 // Size of the array of thread local slots in TThread; 38 };; 39}; 40 ; 41R__EXTERN void **(*gThreadTsd)(void*,Int_t);; 42 ; 43#endif // ROOT_TThreadSlots; R__EXTERN#define R__EXTERNDefinition DllImport.h:26; RtypesCore.h; Int_tint Int_tDefinition RtypesCore.h:45; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::EThreadSlotReservationEThreadSlotReservationDefinition TThreadSlots.h:19; ROOT::kPerfStatsThreadSlot@ kPerfStatsThreadSlotDefinition TThreadSlots.h:35; ROOT::kPadThreadSlot@ kPadThreadSlotDefinition TThreadSlots.h:29; ROOT::kFil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TThreadSlots_8h_source.html:93,Load,Loading,93,doc/master/TThreadSlots_8h_source.html,https://root.cern,https://root.cern/doc/master/TThreadSlots_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TThreadSlots.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TThreadSlots.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Philippe Canal 09/30/2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TThreadSlots; 13#define ROOT_TThreadSlots; 14 ; 15#include ""RtypesCore.h""; 16 ; 17namespace ROOT {; 18 ; 19 enum EThreadSlotReservation {; 20 // Describe the system wide slot pre-allocation in the TThread; 21 // 'special data' storage array ; meant to be used as thread local; 22 // storage. (See TThread::Tsd); 23 //; 24 // Slot 0 through 19 can be used for user application; 25 // Slot 20 and above are reserved for the global system; 26 kMaxUserThreadSlot = 20,; 27 ; 28 // Slot reserved by ROOT's packages.; 29 kPadThreadSlot = 20,; 30 kClassThreadSlot = 21,; 31 /* This no longer used.; 32 kDirectoryThreadSlot = 22,; 33 */; 34 kFileThreadSlot = 23,; 35 kPerfStatsThreadSlot = 24,; 36 ; 37 kMaxThreadSlot = 25 // Size of the array of thread local slots in TThread; 38 };; 39}; 40 ; 41R__EXTERN void **(*gThreadTsd)(void*,Int_t);; 42 ; 43#endif // ROOT_TThreadSlots; R__EXTERN#define R__EXTERNDefinition DllImport.h:26; RtypesCore.h; Int_tint Int_tDefinition RtypesCore.h:45; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::EThreadSlotReservationEThreadSlotReservationDefinition TThreadSlots.h:19; ROOT::kPerfStatsThreadSlot@ kPerfStatsThreadSlotDefinition TThreadSlots.h:35; ROOT::kPadThreadSlot@ kPadThreadSlotDefinition TThreadSlots.h:29; ROOT::kFile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TThreadSlots_8h_source.html:92,Load,Loading,92,doc/v632/TThreadSlots_8h_source.html,https://root.cern,https://root.cern/doc/v632/TThreadSlots_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TTimer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTimer.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 28/11/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TTimer; 13#define ROOT_TTimer; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TTimer //; 19// //; 20// Handles synchronous and a-synchronous timer events. You can use //; 21// this class in one of the following ways: //; 22// - Sub-class TTimer and override the Notify() method. //; 23// - Re-implement the TObject::HandleTimer() method in your class //; 24// and pass a pointer to this object to timer, see the SetObject() //; 25// method. //; 26// - Pass an interpreter command to timer, see SetCommand() method. //; 27// - Create a TTimer, connect its Timeout() signal to the //; 28// appropriate methods. Then when the time is up it will emit a //; 29// Timeout() signal and call connected slots. //; 30// //; 31// Minimum timeout interval is defined in TSystem::ESysConstants as //; 32// kItimerResolution (currently 10 ms). //; 33// //; 34// Signal/slots example: //; 35// TTimer *timer = new TTimer(); //; 36// timer->Connect(""Timeout()"", ""myObjectClassName"", //; 37// myObject, ""TimerDone()""); //; 38// timer->Start(2000, kTRUE); // 2 seconds single-shot //; 39// //; 40// // Timeout signal is emitted repeadetly with minimum timeout //; 41// // timer->Start(0, kFALSE); //; 42// //; 43//////////////////////////////////////////////////////////////////////////; 44 ; 45#include ""TSysEvtHandler.h""; 46#includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTimer_8h_source.html:87,Load,Loading,87,doc/master/TTimer_8h_source.html,https://root.cern,https://root.cern/doc/master/TTimer_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TVirtualFFT.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualFFT.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Anna Kreshuk 10/04/2006; 3 ; 4#ifndef ROOT_TVirtualFFT; 5#define ROOT_TVirtualFFT; 6 ; 7//////////////////////////////////////////////////////////////////////////; 8//; 9// TVirtualFFT; 10//; 11// TVirtualFFT is an interface class for Fast Fourier Transforms.; 12//; 13//; 14//; 15// The default FFT library is FFTW. To use it, FFTW3 library should already; 16// be installed, and ROOT should be have fftw3 module enabled, with the directories; 17// of fftw3 include file and library specified (see installation instructions).; 18// Function SetDefaultFFT() allows to change the default library.; 19//; 20// Available transform types:; 21// FFT:; 22// - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); 23// in one or more dimensions, -1 in the exponent; 24// - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); 25// in one or more dimensions, +1 in the exponent; 26// - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); 27// in one or more dimensions,; 28// - ""C2R"" - inverse transforms to ""R2C"", taking complex input; 29// (storing the non-redundant half of a logically Hermitian array); 30// to real output; 31// - ""R2HC"" - a real-input DFT with output in ""halfcomplex"" format,; 32// i.e. real and imaginary parts for a transform of size n stored as; 33// r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; 34// - ""HC2R"" - computes the reverse of FFTW_R2HC, above; 35// - ""DHT"" - computes a discrete Hartley transform; 36//; 37// Sine/cosine transforms:; 38// Different types of transforms are specified by parameter kind of the SineCosine() static; 39// function. 4 different kinds of sine and cosine transforms are available; 40// DCT-I (REDFT00 in FFTW3 notation)- kind=0; 41// DCT-II (REDFT10 in FFTW3 notation)- ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFFT_8h_source.html:92,Load,Loading,92,doc/master/TVirtualFFT_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFFT_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TVirtualPad.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Variables ; TVirtualPad.h File Reference. #include ""TObject.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttPad.h""; #include ""TQObject.h""; #include ""GuiTypes.h""; #include ""TString.h""; #include ""Buttons.h"". Include dependency graph for TVirtualPad.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TVirtualPad::TContext;  small helper class to store/restore gPad context in TPad methods More...;  ; class  TPickerStackGuard;  ; class  TVirtualPad;  TVirtualPad is an abstract base class for the Pad and Canvas classes. More...;  . Macros; #define gPad   (TVirtualPad::Pad());  . Variables; R__EXTERN Int_t(* gThreadXAR )(const char *xact, Int_t nb, void **ar, Int_t *iret);  . Macro Definition Documentation. ◆ gPad. #define gPad   (TVirtualPad::Pad()). Definition at line 308 of file TVirtualPad.h. Variable Documentation. ◆ gThreadXAR. R__EXTERN Int_t(* gThreadXAR) (const char *xact, Int_t nb, void **ar, Int_t *iret) ; (; const char * ; xact, . Int_t ; nb, . void ** ; ar, . Int_t * ; iret . ). Definition at line 309 of file TVirtualPad.h. corebaseincTVirtualPad.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualPad_8h.html:95,Load,Loading,95,doc/master/TVirtualPad_8h.html,https://root.cern,https://root.cern/doc/master/TVirtualPad_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TVirtualPad.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualPad.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 05/12/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualPad; 13#define ROOT_TVirtualPad; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TVirtualPad //; 19// //; 20// Abstract base class for Pads and Canvases //; 21// //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25 ; 26#include ""TObject.h""; 27#include ""TAttLine.h""; 28#include ""TAttFill.h""; 29#include ""TAttPad.h""; 30#include ""TQObject.h""; 31 ; 32#include ""GuiTypes.h""; 33#include ""TString.h""; 34#include ""Buttons.h""; 35 ; 36// forward declarations; 37class TAxis;; 38class TObject;; 39class TObjLink;; 40class TView;; 41class TCanvas;; 42class TCanvasImp;; 43class TH1F;; 44class TFrame;; 45class TLegend;; 46class TBox;; 47class TVirtualViewer3D;; 48class TVirtualPadPainter;; 49 ; 50class TVirtualPad : public TObject, public TAttLine, public TAttFill,; 51 public TAttPad, public TQObject {; 52 ; 53protected:; 54 Bool_t fResizing; //!true when resizing the pad; 55 ; 56 void *GetSender() override { return this; } //used to set gTQSender; 57 ; 58public:; 59 ; 60 /** small helper class to store/restore gPad context in TPad methods */; 61 class TContext {; 62 Bool_t fInteractive{kFALSE};; 63 TVirtualPad *fSaved{nullptr};; 64 public:; 65 TContext(Bool_t _interactive = kFALSE);; 66 TContext(TVirtualPad *gpad, Bool_t interactive = kFALSE, Bool_t not_nul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualPad_8h_source.html:92,Load,Loading,92,doc/master/TVirtualPad_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualPad_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/inc/TVirtualRWMutex.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualRWMutex.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Philippe Canal, 2017; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualRWMutex; 13#define ROOT_TVirtualRWMutex; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TVirtualRWMutex //; 19// //; 20// This class implements a read-write mutex interface. The actual work //; 21// is done via TRWSpinLock which is available as soon as the thread //; 22// library is loaded. //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TVirtualMutex.h""; 27 ; 28#include <memory>; 29 ; 30namespace ROOT {; 31 ; 32class TVirtualRWMutex;; 33 ; 34// Global mutex set in TThread::Init; 35// Use either R__READ_LOCKGUARD(ROOT::gCoreMutex);; 36// or R__WRITE_LOCKGUARD(ROOT::gCoreMutex);; 37R__EXTERN TVirtualRWMutex *gCoreMutex;; 38 ; 39class TVirtualRWMutex : public TVirtualMutex {; 40 ; 41public:; 42 // The following are opaque type and are never really declared; 43 // The specific implementation of TInterpreter will cast the; 44 // value of pointer to this types to the correct type (possibly; 45 // distinct from these); 46 class Hint_t;; 47 ; 48 /// \class State; 49 /// Earlier lock state as returned by `GetState()` that can be passed to; 50 /// `Restore()`; 51 struct State {; 52 virtual ~State(); // implemented in TVirtualMutex.cxx; 53 };; 54 ; 55 struct StateAndRecurseCount {; 56 /// State of gCoreMutex when the first ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualRWMutex_8h_source.html:96,Load,Loading,96,doc/master/TVirtualRWMutex_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualRWMutex_8h_source.html,2,"['Load', 'load']","['Loading', 'loaded']"
Performance,". ROOT: core/base/inc/TVirtualRWMutex.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualRWMutex.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Philippe Canal, 2017; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualRWMutex; 13#define ROOT_TVirtualRWMutex; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TVirtualRWMutex //; 19// //; 20// This class implements a read-write mutex interface. The actual work //; 21// is done via TRWSpinLock which is available as soon as the thread //; 22// library is loaded. //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TVirtualMutex.h""; 27 ; 28#include <memory>; 29 ; 30namespace ROOT {; 31 ; 32class TVirtualRWMutex;; 33 ; 34// Global mutex set in TThread::Init; 35// Use either R__READ_LOCKGUARD(ROOT::gCoreMutex);; 36// or R__WRITE_LOCKGUARD(ROOT::gCoreMutex);; 37R__EXTERN TVirtualRWMutex *gCoreMutex;; 38 ; 39class TVirtualRWMutex : public TVirtualMutex {; 40 ; 41public:; 42 // The following are opaque type and are never really declared; 43 // The specific implementation of TInterpreter will cast the; 44 // value of pointer to this types to the correct type (possibly; 45 // distinct from these); 46 class Hint_t;; 47 ; 48 /// \class State; 49 /// Earlier lock state as returned by `GetState()` that can be passed to; 50 /// `Restore()`; 51 struct State {; 52 virtual ~State(); // implemented in TVirtualMutex.cxx; 53 };; 54 ; 55 struct StateAndRecurseCount {; 56 /// State of gCoreMutex when the first i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TVirtualRWMutex_8h_source.html:95,Load,Loading,95,doc/v632/TVirtualRWMutex_8h_source.html,https://root.cern,https://root.cern/doc/v632/TVirtualRWMutex_8h_source.html,2,"['Load', 'load']","['Loading', 'loaded']"
Performance,". ROOT: core/base/inc/Varargs.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Varargs.h. Go to the documentation of this file. 1/* @(#)root/base:$Id$ */; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_Varargs; 12#define ROOT_Varargs; 13 ; 14#if defined(sparc) && defined(__CC_ATT301__); 15 ; 16 extern ""C"" __builtin_va_arg_incr(...);; 17 typedef char *va_list;; 18# define va_end(ap); 19# define va_start(ap, parmN) ap= (char*)(&parmN+1); 20# define va_arg(ap, mode) ((mode*) __builtin_va_arg_incr((mode*)ap))[0]; 21# define va_(arg) __builtin_va_alist; 22 ; 23# include <stdio.h>; 24 ; 25 extern ""C"" {; 26 int vfprintf(FILE*, const char *fmt, va_list ap);; 27 char *vsprintf(char*, const char *fmt, va_list ap);; 28 };; 29 ; 30#else; 31# include <stdarg.h>; 32# if defined(sparc) && !defined(__GNUG__) && !defined(__CC_SUN21__) && !defined(__SVR4); 33# define va_(arg) __builtin_va_alist; 34# else; 35# define va_(arg) arg; 36# endif; 37 ; 38#endif; 39 ; 40#if !defined(R__VA_COPY); 41# if defined(va_copy); 42# define R__VA_COPY(to, from) va_copy((to), (from)); 43# elif defined(__va_copy); 44# define R__VA_COPY(to, from) __va_copy((to), (from)); 45# elif defined(_WIN32) && _MSC_VER < 1310; 46# define R__VA_COPY(to, from) (*(to) = *(from)); 47# else; 48# define R__VA_COPY(to, from) ((to) = (from)); 49# endif; 50#endif; 51 ; 52#endif. corebaseincVarargs.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Varargs_8h_source.html:88,Load,Loading,88,doc/master/Varargs_8h_source.html,https://root.cern,https://root.cern/doc/master/Varargs_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/String.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. String.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Philippe Canal 03/09/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun, Fons Rademakers and al. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// std::string helper utilities //; 15// //; 16//////////////////////////////////////////////////////////////////////////; 17 ; 18#include <ROOT/RConfig.hxx>; 19#include ""TBuffer.h""; 20 ; 21#include <string>; 22 ; 23using std::string;; 24 ; 25void std_string_streamer(TBuffer &b, void *objadd); 26{; 27 // Streamer function for std::string object.; 28 if (b.IsReading()) {; 29 b.ReadStdString((std::string*)objadd);; 30 } else {; 31 b.WriteStdString((std::string*)objadd);; 32 }; 33}; 34 ; 35// Declare the streamer to the string TClass object; 36RootStreamer(string,std_string_streamer);; 37 ; 38// Set a version number of the string TClass object; 39RootClassVersion(string,2);; 40 ; 41 ; RConfig.hxx; b#define b(i)Definition RSha256.hxx:100; RootStreamer#define RootStreamer(name, STREAMER)Definition Rtypes.h:461; RootClassVersion#define RootClassVersion(name, VersionNumber)Definition Rtypes.h:451; std_string_streamervoid std_string_streamer(TBuffer &b, void *objadd)Definition String.cxx:25; TBuffer.h; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43. corebasesrcString.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/String_8cxx_source.html:89,Load,Loading,89,doc/master/String_8cxx_source.html,https://root.cern,https://root.cern/doc/master/String_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/String.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. String.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Philippe Canal 03/09/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun, Fons Rademakers and al. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// std::string helper utilities //; 15// //; 16//////////////////////////////////////////////////////////////////////////; 17 ; 18#include <ROOT/RConfig.hxx>; 19#include ""TBuffer.h""; 20 ; 21#include <string>; 22 ; 23using std::string;; 24 ; 25void std_string_streamer(TBuffer &b, void *objadd); 26{; 27 // Streamer function for std::string object.; 28 if (b.IsReading()) {; 29 b.ReadStdString((std::string*)objadd);; 30 } else {; 31 b.WriteStdString((std::string*)objadd);; 32 }; 33}; 34 ; 35// Declare the streamer to the string TClass object; 36RootStreamer(string,std_string_streamer);; 37 ; 38// Set a version number of the string TClass object; 39RootClassVersion(string,2);; 40 ; 41 ; RConfig.hxx; b#define b(i)Definition RSha256.hxx:100; RootStreamer#define RootStreamer(name, STREAMER)Definition Rtypes.h:456; RootClassVersion#define RootClassVersion(name, VersionNumber)Definition Rtypes.h:446; std_string_streamervoid std_string_streamer(TBuffer &b, void *objadd)Definition String.cxx:25; TBuffer.h; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43. corebasesrcString.cxx. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:06:49 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/String_8cxx_source.html:88,Load,Loading,88,doc/v632/String_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/String_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TApplication.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TApplication.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 22/12/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TApplication; 13\ingroup Base; 14 ; 15This class creates the ROOT Application Environment that interfaces; 16to the windowing system eventloop and eventhandlers.; 17This class must be instantiated exactly once in any given; 18application. Normally the specific application class inherits from; 19TApplication (see TRint).; 20*/; 21 ; 22#include ""RConfigure.h""; 23#include ""TApplication.h""; 24#include ""TException.h""; 25#include ""TGuiFactory.h""; 26#include ""TVirtualX.h""; 27#include ""TROOT.h""; 28#include ""TSystem.h""; 29#include ""TString.h""; 30#include ""TError.h""; 31#include ""TObjArray.h""; 32#include ""TObjString.h""; 33#include ""TTimer.h""; 34#include ""TInterpreter.h""; 35#include ""TStyle.h""; 36#include ""TVirtualPad.h""; 37#include ""TEnv.h""; 38#include ""TColor.h""; 39#include ""TPluginManager.h""; 40#include ""TClassTable.h""; 41#include ""TBrowser.h""; 42#include ""TUrl.h""; 43#include ""TVirtualMutex.h""; 44#include ""TClassEdit.h""; 45#include ""TMethod.h""; 46#include ""TDataMember.h""; 47#include ""TApplicationCommandLineOptionsHelp.h""; 48#include ""TPRegexp.h""; 49#include <cstdlib>; 50#include <iostream>; 51#include <fstream>; 52 ; 53TApplication *gApplication = nullptr;; 54Bool_t TApplication::fgGraphNeeded = kFALSE;; 55Bool_t TApplication::fgGraphInit = kFALSE;; 56TList *TApplication::fgApplications = nullptr; // List of available applications; 57 ; 58////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:95,Load,Loading,95,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TAttAxis.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttAxis.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TAttAxis.h""; 13#include ""TBuffer.h""; 14#include ""TStyle.h""; 15#include ""TVirtualPad.h""; 16#include ""TColor.h""; 17#include ""TMathBase.h""; 18#include <cstdlib>; 19#include <iostream>; 20 ; 21ClassImp(TAttAxis);; 22 ; 23/** \class TAttAxis; 24\ingroup Base; 25\ingroup GraphicsAtt; 26 ; 27Manages histogram axis attributes.; 28 ; 29They are:; 30 ; 31 - The number of divisions: TAttAxis::SetNdivisions.; 32 - The line axis' color: TAttAxis::SetAxisColor.; 33 - The axis labels' color: TAttAxis::SetLabelColor.; 34 - The axis labels' font: TAttAxis::SetLabelFont.; 35 - The axis labels' offset: TAttAxis::SetLabelOffset.; 36 - The axis labels' size: TAttAxis::SetLabelSize.; 37 - The tick marks's length: TAttAxis::SetTickLength or TAttAxis::SetTickSize .; 38 - The axis title's offset: TAttAxis::SetTitleOffset.; 39 - The axis title's size: TAttAxis::SetTitleSize.; 40 - The axis title's color: TAttAxis::SetTitleColor.; 41 - The axis title's font: TAttAxis::SetTitleFont.; 42 ; 43*/; 44 ; 45TAttAxis::TAttAxis(); 46{; 47 // Constructor.; 48 ResetAttAxis();; 49}; 50 ; 51////////////////////////////////////////////////////////////////////////////////; 52/// Destructor.; 53 ; 54TAttAxis::~TAttAxis(); 55{; 56}; 57 ; 58////////////////////////////////////////////////////////////////////////////////; 59/// Copy of the object.; 60 ; 61void TAttAxis::Copy(TAttAxis &attaxis) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttAxis_8cxx_source.html:91,Load,Loading,91,doc/master/TAttAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttAxis_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TAttFill.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttFill.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TAttFill.h""; 14#include ""TVirtualPad.h""; 15#include ""TStyle.h""; 16#include ""TVirtualX.h""; 17#include ""TVirtualPadEditor.h""; 18#include ""TColor.h""; 19 ; 20ClassImp(TAttFill);; 21 ; 22/** \class TAttFill; 23\ingroup Base; 24\ingroup GraphicsAtt; 25 ; 26Fill Area Attributes class.; 27 ; 28This class is used (in general by secondary inheritance); 29by many other classes (graphics, histograms). It holds all the fill area; 30attributes.; 31 ; 32## Fill Area attributes; 33Fill Area attributes are:; 34 ; 35 - [Fill Area color](\ref ATTFILL1); 36 - [Fill Area style](\ref ATTFILL2); 37 ; 38\anchor ATTFILL1; 39## Fill Area color; 40The fill area color is a color index (integer) pointing in the ROOT; 41color table.; 42The fill area color of any class inheriting from `TAttFill` can; 43be changed using the method `SetFillColor` and retrieved using the; 44method `GetFillColor`.; 45The following table shows the first 50 default colors.; 46 ; 47Begin_Macro; 48{; 49 TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; 50 c->DrawColorTable();; 51 return c;; 52}; 53End_Macro; 54 ; 55### Color transparency; 56`SetFillColorAlpha()`, allows to set a transparent color.; 57In the following example the fill color of the histogram `histo`; 58is set to blue with an opacity of 35% (i.e. a transparency of 65%).; 59(The color `kBlue` itself is int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttFill_8cxx_source.html:91,Load,Loading,91,doc/master/TAttFill_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttFill_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TAttLine.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttLine.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TAttLine.h""; 13#include ""TVirtualPad.h""; 14#include ""TStyle.h""; 15#include ""TVirtualX.h""; 16#include ""TVirtualPadEditor.h""; 17#include ""TColor.h""; 18#include <cmath>; 19#include <iostream>; 20 ; 21ClassImp(TAttLine);; 22using std::sqrt;; 23 ; 24/** \class TAttLine; 25\ingroup Base; 26\ingroup GraphicsAtt; 27 ; 28Line Attributes class.; 29 ; 30This class is used (in general by secondary inheritance); 31by many other classes (graphics, histograms). It holds all the line attributes.; 32 ; 33## Line attributes; 34Line attributes are:; 35 ; 36 - [Line Color](\ref ATTLINE1); 37 - [Line Width](\ref ATTLINE2); 38 - [Line Style](\ref ATTLINE3); 39 ; 40\anchor ATTLINE1; 41## Line Color; 42The line color is a color index (integer) pointing in the ROOT; 43color table.; 44The line color of any class inheriting from `TAttLine` can; 45be changed using the method `SetLineColor` and retrieved using the; 46method `GetLineColor`.; 47The following table shows the first 50 default colors.; 48 ; 49Begin_Macro; 50{; 51 TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; 52 c->DrawColorTable();; 53 return c;; 54}; 55End_Macro; 56 ; 57### Color transparency; 58`SetLineColorAlpha()`, allows to set a transparent color.; 59In the following example the line color of the histogram `histo`; 60is set to blue with an opacity of 35% (i.e. a transparency of 65%).; 61(The c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttLine_8cxx_source.html:91,Load,Loading,91,doc/master/TAttLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttLine_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TAttMarker.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttMarker.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/05/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""Strlen.h""; 14#include ""TAttMarker.h""; 15#include ""TVirtualPad.h""; 16#include ""TStyle.h""; 17#include ""TVirtualX.h""; 18#include ""TVirtualPadEditor.h""; 19#include ""TColor.h""; 20 ; 21ClassImp(TAttMarker);; 22 ; 23/** \class TAttMarker; 24\ingroup Base; 25\ingroup GraphicsAtt; 26 ; 27Marker Attributes class.; 28 ; 29This class is used (in general by secondary inheritance); 30by many other classes (graphics, histograms). It holds all the markers; 31attributes.; 32 ; 33## Marker attributes; 34The marker attributes are:; 35 ; 36 - [Marker color](\ref ATTMARKER1); 37 - [Marker style](\ref ATTMARKER2); 38 - [Marker line width](\ref ATTMARKER21); 39 - [Marker size](\ref M3); 40 ; 41\anchor ATTMARKER1; 42## Marker color; 43The marker color is a color index (integer) pointing in the ROOT color; 44table.; 45The marker color of any class inheriting from `TAttMarker` can; 46be changed using the method `SetMarkerColor` and retrieved using the; 47method `GetMarkerColor`.; 48The following table shows the first 50 default colors.; 49 ; 50Begin_Macro; 51{; 52 TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; 53 c->DrawColorTable();; 54 return c;; 55}; 56End_Macro; 57 ; 58### Color transparency; 59 ; 60`SetMarkerColorAlpha()`, allows to set a transparent color.; 61In the following example the marker color of the histogram `histo`; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttMarker_8cxx_source.html:93,Load,Loading,93,doc/master/TAttMarker_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttMarker_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TAttText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttText.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""Strlen.h""; 14#include ""TROOT.h""; 15#include ""TAttText.h""; 16#include ""TVirtualPad.h""; 17#include ""TStyle.h""; 18#include ""TVirtualX.h""; 19#include ""TError.h""; 20#include ""TVirtualPadEditor.h""; 21#include ""TColor.h""; 22 ; 23ClassImp(TAttText);; 24 ; 25/** \class TAttText; 26\ingroup Base; 27\ingroup GraphicsAtt; 28 ; 29Text Attributes class.; 30 ; 31This class is used (in general by secondary inheritance); 32by many other classes (graphics, histograms). It holds all the text attributes.; 33 ; 34## Text attributes; 35Text attributes are:; 36 ; 37 - [Text Alignment](\ref ATTTEXT1); 38 - [Text Angle](\ref ATTTEXT2); 39 - [Text Color](\ref ATTTEXT3); 40 - [Text Size](\ref ATTTEXT4); 41 - [Text Font and Precision](\ref ATTTEXT5); 42 - [Font quality and speed](\ref ATTTEXT51); 43 - [How to use True Type Fonts](\ref ATTTEXT52); 44 - [List of the currently supported fonts](\ref ATTTEXT53); 45 ; 46\anchor ATTTEXT1; 47## Text Alignment; 48 ; 49The text alignment is an integer number (`align`) allowing to control; 50the horizontal and vertical position of the text string with respect; 51to the text position.; 52The text alignment of any class inheriting from `TAttText` can; 53be changed using the method `SetTextAlign` and retrieved using the; 54method `GetTextAlign`.; 55 ; 56~~~ {.cpp}; 57 align = 10*HorizontalAlign + VerticalAlign; 58~~~;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttText_8cxx_source.html:91,Load,Loading,91,doc/master/TAttText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttText_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TBuffer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBuffer.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id: 6da0b5b613bbcfaa3a5cd4074e7b2be2448dfb31 $; 2// Author: Fons Rademakers 04/05/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TBuffer; 13\ingroup Base; 14 ; 15Buffer base class used for serializing objects.; 16*/; 17 ; 18#include ""TBuffer.h""; 19#include ""TClass.h""; 20#include ""TProcessID.h""; 21 ; 22constexpr Int_t kExtraSpace = 8; // extra space at end of buffer (used for free block count); 23constexpr Int_t kMaxBufferSize = 0x7FFFFFFE; // largest possible size.; 24 ; 25 ; 26ClassImp(TBuffer);; 27 ; 28/// Default streamer implementation used by ClassDefInline to avoid; 29/// requirement to include TBuffer.h; 30void ROOT::Internal::DefaultStreamer(TBuffer &R__b, const TClass *cl, void *objpointer); 31{; 32 if (R__b.IsReading()); 33 R__b.ReadClassBuffer(cl, objpointer);; 34 else; 35 R__b.WriteClassBuffer(cl, objpointer);; 36}; 37 ; 38////////////////////////////////////////////////////////////////////////////////; 39/// The user has provided memory than we don't own, thus we can not extent it; 40/// either.; 41 ; 42static char *R__NoReAllocChar(char *, size_t, size_t); 43{; 44 return nullptr;; 45}; 46 ; 47////////////////////////////////////////////////////////////////////////////////; 48/// Create an I/O buffer object. Mode should be either TBuffer::kRead or; 49/// TBuffer::kWrite. By default the I/O buffer has a size of; 50/// TBuffer::kInitialSize (1024) bytes.; 51 ; 52TBuffer::TBuffer(EMode mode); 53{; 54 fBufSize = kInitia",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBuffer_8cxx_source.html:90,Load,Loading,90,doc/master/TBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBuffer_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TColor.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TColor.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TColor.h""; 14#include ""TObjArray.h""; 15#include ""TArrayI.h""; 16#include ""TArrayD.h""; 17#include ""TVirtualX.h""; 18#include ""TError.h""; 19#include ""TMathBase.h""; 20#include ""TApplication.h""; 21#include ""TColorGradient.h""; 22#include ""snprintf.h""; 23#include <algorithm>; 24#include <cmath>; 25#include <iostream>; 26#include <fstream>; 27 ; 28ClassImp(TColor);; 29 ; 30namespace {; 31 static Bool_t& TColor__GrayScaleMode() {; 32 static Bool_t grayScaleMode;; 33 return grayScaleMode;; 34 }; 35 static TArrayI& TColor__Palette() {; 36 static TArrayI globalPalette(0);; 37 return globalPalette;; 38 }; 39 static TArrayD& TColor__PalettesList() {; 40 static TArrayD globalPalettesList(0);; 41 return globalPalettesList;; 42 }; 43}; 44 ; 45static Int_t gHighestColorIndex = 0; ///< Highest color index defined; 46static Float_t gColorThreshold = -1.; ///< Color threshold used by GetColor; 47static Int_t gDefinedColors = 0; ///< Number of defined colors.; 48static Int_t gLastDefinedColors = 649; ///< Previous number of defined colors; 49 ; 50#define fgGrayscaleMode TColor__GrayScaleMode(); 51#define fgPalette TColor__Palette(); 52#define fgPalettesList TColor__PalettesList(); 53 ; 54using std::floor;; 55 ; 56/** \class TColor; 57\ingroup Base; 58\ingroup GraphicsAtt; 59 ; 60The color creation and management class.; 61 ; 62 - [Introduction](\ref C00)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColor_8cxx_source.html:89,Load,Loading,89,doc/master/TColor_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TColor_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TDatime.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDatime.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 05/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TDatime; 13\ingroup Base; 14 ; 15This class stores the date and time with a precision of one second; 16in an unsigned 32 bit word (950130 124559).; 17The date is stored with the origin being the 1st January 1995.; 18 ; 19This class has no support for time zones. The time is assumed; 20to be in the local time of the machine where the object was created.; 21As a result, TDatime objects are not portable between machines; 22operating in different time zones and unsuitable for storing the; 23date/time of data taking events and the like. If absolute time is; 24required, use TTimeStamp.; 25*/; 26 ; 27#include <ROOT/RConfig.hxx>; 28 ; 29#include <ctime>; 30 ; 31#ifdef WIN32; 32#include ""Windows4Root.h""; 33#include <string.h>; 34#endif; 35 ; 36#include ""TBuffer.h""; 37#include ""Strlen.h""; 38#include ""snprintf.h""; 39#include ""TDatime.h""; 40#include ""TError.h""; 41#include ""Bytes.h""; 42#include ""TString.h""; 43 ; 44 ; 45ClassImp(TDatime);; 46 ; 47////////////////////////////////////////////////////////////////////////////////; 48/// Create a TDatime and set it to the current time.; 49 ; 50TDatime::TDatime(); 51{; 52 Set();; 53}; 54 ; 55////////////////////////////////////////////////////////////////////////////////; 56/// Create a TDatime and set it to the specified date and time.; 57/// See Set(Int_t, Int_t) about the date, time format.; 58 ; 59TDatime::TDatime(I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDatime_8cxx_source.html:90,Load,Loading,90,doc/master/TDatime_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDatime_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TDirectory.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectory.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id: 65b4f3646f4e5b2fa77218ba786b7fe4e16e27be $; 2// Author: Rene Brun 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#include <cstdlib>; 12 ; 13#include ""Strlen.h""; 14#include ""strlcpy.h""; 15#include ""TDirectory.h""; 16#include ""TBuffer.h""; 17#include ""TClassTable.h""; 18#include ""TInterpreter.h""; 19#include ""THashList.h""; 20#include ""TBrowser.h""; 21#include ""TROOT.h""; 22#include ""TError.h""; 23#include ""TClass.h""; 24#include ""TRegexp.h""; 25#include ""TSystem.h""; 26#include ""TVirtualMutex.h""; 27#include ""TThreadSlots.h""; 28#include ""TMethod.h""; 29 ; 30#include ""TSpinLockGuard.h""; 31 ; 32Bool_t TDirectory::fgAddDirectory = kTRUE;; 33 ; 34const Int_t kMaxLen = 2048;; 35 ; 36static std::atomic_flag *GetCurrentDirectoryLock(); 37{; 38 thread_local std::atomic_flag gDirectory_lock = ATOMIC_FLAG_INIT;; 39 return &gDirectory_lock;; 40}; 41 ; 42/** \class TDirectory; 43\ingroup Base; 44 ; 45Describe directory structure in memory.; 46*/; 47 ; 48ClassImp(TDirectory);; 49 ; 50////////////////////////////////////////////////////////////////////////////////; 51/// Directory default constructor.; 52 ; 53TDirectory::TDirectory() : TNamed(); 54{; 55 // MSVC doesn't support fSpinLock=ATOMIC_FLAG_INIT; in the class definition; 56 std::atomic_flag_clear( &fSpinLock );; 57}; 58 ; 59////////////////////////////////////////////////////////////////////////////////; 60/// Create a new Directory.; 61///; 62/// A new directory with name,title is created in the c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectory_8cxx_source.html:93,Load,Loading,93,doc/master/TDirectory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectory_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TEnv.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEnv.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id: 0daf41ec24086ee7af29fdc2f9f2f848b150dcc8 $; 2// Author: Fons Rademakers 22/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TEnv; 13\ingroup Base; 14 ; 15The TEnv class reads config files, by default named `.rootrc`.; 16Three types of config files are read: global, user and local files. The; 17global file is `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`); 18the user file is `$HOME/<name>` and the local file is `./<name>`.; 19By setting the shell variable `ROOTENV_NO_HOME=1` the reading of; 20the `$HOME/<name>` resource file will be skipped. This might be useful; 21in case the home directory resides on an auto-mounted remote file; 22system and one wants to avoid this file system from being mounted.; 23 ; 24The format of the `.rootrc` file is similar to the `.Xdefaults` format:; 25~~~ {.cpp}; 26 [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>; 27~~~; 28Where `<SystemName>` is either Unix, WinNT, MacOS or Vms,; 29`<RootName>` the name as given in the TApplication ctor (or ""RootApp""; 30in case no explicit TApplication derived object was created),; 31`<ProgName>` the current program name and `<name>` the resource name,; 32with optionally a type specification. `<value>` can be either a; 33string, an integer, a float/double or a boolean with the values; 34TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; 35an integer 0 or 1. The options [+] allows the concatenation of; 36values to the same res",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8cxx_source.html:87,Load,Loading,87,doc/master/TEnv_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEnv_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TNamed.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNamed.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TNamed; 13\ingroup Base; 14 ; 15The TNamed class is the base class for all named ROOT classes.; 16 ; 17A TNamed contains the essential elements (name, title); 18to identify a derived object in containers, directories and files.; 19Most member functions defined in this base class are in general; 20overridden by the derived classes.; 21*/; 22 ; 23#include <iostream>; 24#include ""Strlen.h""; 25#include ""TNamed.h""; 26#include ""TROOT.h""; 27#include ""TVirtualPad.h""; 28#include ""TClass.h""; 29 ; 30ClassImp(TNamed);; 31 ; 32////////////////////////////////////////////////////////////////////////////////; 33/// TNamed copy ctor.; 34 ; 35TNamed::TNamed(const TNamed &named) : TObject(named),fName(named.fName),fTitle(named.fTitle); 36{; 37}; 38 ; 39////////////////////////////////////////////////////////////////////////////////; 40/// TNamed destructor.; 41 ; 42TNamed::~TNamed(); 43{; 44 // Required since we overload TObject::Hash.; 45 ROOT::CallRecursiveRemoveIfNeeded(*this);; 46}; 47 ; 48////////////////////////////////////////////////////////////////////////////////; 49/// TNamed assignment operator.; 50 ; 51TNamed& TNamed::operator=(const TNamed& rhs); 52{; 53 if (this != &rhs) {; 54 TObject::operator=(rhs);; 55 fName = rhs.fName;; 56 fTitle = rhs.fTitle;; 57 }; 58 return *this;; 59}; 60 ; 61///////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNamed_8cxx_source.html:89,Load,Loading,89,doc/master/TNamed_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNamed_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TObject.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObject.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TObject; 13\ingroup Base; 14 ; 15Mother of all ROOT objects.; 16 ; 17The TObject class provides default behaviour and protocol for all; 18objects in the ROOT system. It provides protocol for object I/O,; 19error handling, sorting, inspection, printing, drawing, etc.; 20Every object which inherits from TObject can be stored in the; 21ROOT collection classes.; 22 ; 23TObject's bits can be used as flags, bits 0 - 13 and 24-31 are; 24reserved as global bits while bits 14 - 23 can be used in different; 25class hierarchies (watch out for overlaps).; 26*/; 27 ; 28#include <cstring>; 29#if !defined(WIN32) && !defined(__MWERKS__) && !defined(R__SOLARIS); 30#include <strings.h>; 31#endif; 32#include <cstdlib>; 33#include <cstdio>; 34#include <sstream>; 35#include <fstream>; 36#include <iostream>; 37 ; 38#include ""Varargs.h""; 39#include ""snprintf.h""; 40#include ""TObject.h""; 41#include ""TBuffer.h""; 42#include ""TClass.h""; 43#include ""TGuiFactory.h""; 44#include ""TMethod.h""; 45#include ""TROOT.h""; 46#include ""TError.h""; 47#include ""TObjectTable.h""; 48#include ""TVirtualPad.h""; 49#include ""TInterpreter.h""; 50#include ""TMemberInspector.h""; 51#include ""TRefTable.h""; 52#include ""TProcessID.h""; 53 ; 54Longptr_t TObject::fgDtorOnly = 0;; 55Bool_t TObject::fgObjectStat = kTRUE;; 56 ; 57ClassImp(TObject);; 58 ; 59#if defined(__clang__) || defined (__GNUC__); 60# define ATTRI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:90,Load,Loading,90,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TParameter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TParameter.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Maarten Ballintijn 21/06/2004; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TParameter; 13\ingroup Base; 14 ; 15Named parameter, streamable and storable.; 16*/; 17 ; 18#include ""TParameter.h""; 19 ; 20templateClassImp(TParameter);; templateClassImp#define templateClassImp(name)Definition Rtypes.h:427; TParameter.h; TParameterNamed parameter, streamable and storable.Definition TParameter.h:35. corebasesrcTParameter.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TParameter_8cxx_source.html:93,Load,Loading,93,doc/master/TParameter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TParameter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TParameter.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TParameter.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Maarten Ballintijn 21/06/2004; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TParameter; 13\ingroup Base; 14 ; 15Named parameter, streamable and storable.; 16*/; 17 ; 18#include ""TParameter.h""; 19 ; 20templateClassImp(TParameter);; templateClassImp#define templateClassImp(name)Definition Rtypes.h:422; TParameter.h; TParameterNamed parameter, streamable and storable.Definition TParameter.h:35. corebasesrcTParameter.cxx. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:06:52 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TParameter_8cxx_source.html:92,Load,Loading,92,doc/v632/TParameter_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TParameter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TQObject.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TQObject.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id: 5d6810ad46b864564f576f88aa9b154789d91d48 $; 2// Author: Valeriy Onuchin & Fons Rademakers 15/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TQObject; 13\ingroup Base; 14 ; 15This is the ROOT implementation of the Qt object communication; 16mechanism (see also http://www.troll.no/qt/metaobjects.html); 17 ; 18Signals and slots are used for communication between objects.; 19When an object has changed in some way that might be interesting; 20for the outside world, it emits a signal to tell whoever is; 21listening. All slots that are connected to this signal will be; 22activated (called). It is even possible to connect a signal; 23directly to another signal (this will emit the second signal; 24immediately whenever the first is emitted.) There is no limitation; 25on the number of slots that can be connected to a signal.; 26The slots will be activated in the order they were connected; 27to the signal. This mechanism allows objects to be easily reused,; 28because the object that emits a signal does not need to know; 29to which objects the signals are connected.; 30Together, signals and slots make up a powerfull component; 31programming mechanism.; 32 ; 33### Signals; 34 ; 35~~~ {.cpp}; 36 Destroyed(); 37~~~; 38Signal emitted when object is destroyed.; 39This signal could be connected to some garbage-collector object.; 40 ; 41~~~ {.cpp}; 42 ChangedBy(const char *method_name); 43~~~; 44This signal is emitted when some important",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TQObject_8cxx_source.html:91,Load,Loading,91,doc/master/TQObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TQObject_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TROOT.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TROOT.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 08/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TROOT; 13\ingroup Base; 14 ; 15ROOT top level object description.; 16 ; 17The TROOT object is the entry point to the ROOT system.; 18The single instance of TROOT is accessible via the global gROOT.; 19Using the gROOT pointer one has access to basically every object; 20created in a ROOT based program. The TROOT object is essentially a; 21container of several lists pointing to the main ROOT objects.; 22 ; 23The following lists are accessible from gROOT object:; 24 ; 25~~~ {.cpp}; 26 gROOT->GetListOfClasses; 27 gROOT->GetListOfColors; 28 gROOT->GetListOfTypes; 29 gROOT->GetListOfGlobals; 30 gROOT->GetListOfGlobalFunctions; 31 gROOT->GetListOfFiles; 32 gROOT->GetListOfMappedFiles; 33 gROOT->GetListOfSockets; 34 gROOT->GetListOfSecContexts; 35 gROOT->GetListOfCanvases; 36 gROOT->GetListOfStyles; 37 gROOT->GetListOfFunctions; 38 gROOT->GetListOfSpecials (for example graphical cuts); 39 gROOT->GetListOfGeometries; 40 gROOT->GetListOfBrowsers; 41 gROOT->GetListOfCleanups; 42 gROOT->GetListOfMessageHandlers; 43~~~; 44 ; 45The TROOT class provides also many useful services:; 46 - Get pointer to an object in any of the lists above; 47 - Time utilities TROOT::Time; 48 ; 49The ROOT object must be created as a static object. An example; 50of a main program creating an interactive version is shown below:; 51 ; 52### Example of a main program; 53 ; 54~~~ {.cpp}; 55 #inc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:88,Load,Loading,88,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TROOT.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TROOT.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 08/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TROOT; 13\ingroup Base; 14 ; 15ROOT top level object description.; 16 ; 17The TROOT object is the entry point to the ROOT system.; 18The single instance of TROOT is accessible via the global gROOT.; 19Using the gROOT pointer one has access to basically every object; 20created in a ROOT based program. The TROOT object is essentially a; 21container of several lists pointing to the main ROOT objects.; 22 ; 23The following lists are accessible from gROOT object:; 24 ; 25~~~ {.cpp}; 26 gROOT->GetListOfClasses; 27 gROOT->GetListOfColors; 28 gROOT->GetListOfTypes; 29 gROOT->GetListOfGlobals; 30 gROOT->GetListOfGlobalFunctions; 31 gROOT->GetListOfFiles; 32 gROOT->GetListOfMappedFiles; 33 gROOT->GetListOfSockets; 34 gROOT->GetListOfSecContexts; 35 gROOT->GetListOfCanvases; 36 gROOT->GetListOfStyles; 37 gROOT->GetListOfFunctions; 38 gROOT->GetListOfSpecials (for example graphical cuts); 39 gROOT->GetListOfGeometries; 40 gROOT->GetListOfBrowsers; 41 gROOT->GetListOfCleanups; 42 gROOT->GetListOfMessageHandlers; 43~~~; 44 ; 45The TROOT class provides also many useful services:; 46 - Get pointer to an object in any of the lists above; 47 - Time utilities TROOT::Time; 48 ; 49The ROOT object must be created as a static object. An example; 50of a main program creating an interactive version is shown below:; 51 ; 52### Example of a main program; 53 ; 54~~~ {.cpp}; 55 #incl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TROOT_8cxx_source.html:87,Load,Loading,87,doc/v632/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TROOT_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TStopwatch.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStopwatch.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 11/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TStopwatch; 13\ingroup Base; 14 ; 15Stopwatch class. This class returns the real and cpu time between; 16the start and stop events.; 17*/; 18 ; 19#include ""TStopwatch.h""; 20#include ""TTimeStamp.h""; 21#include ""TString.h""; 22 ; 23#if defined(R__UNIX); 24# include <sys/times.h>; 25# include <unistd.h>; 26static Double_t gTicks = 0;; 27#elif defined(WIN32); 28# include ""TError.h""; 29const Double_t gTicks = 1.0e-7;; 30# include ""Windows4Root.h""; 31#endif; 32 ; 33 ; 34ClassImp(TStopwatch);; 35 ; 36////////////////////////////////////////////////////////////////////////////////; 37/// Create a stopwatch and start it.; 38 ; 39TStopwatch::TStopwatch(); 40{; 41#ifdef R__UNIX; 42 if (gTicks <= 0.0); 43 gTicks = (Double_t)sysconf(_SC_CLK_TCK);; 44#endif; 45 ; 46 fStopRealTime = 0;; 47 fStopCpuTime = 0;; 48 ; 49 Start();; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Start the stopwatch. If reset is kTRUE reset the stopwatch before; 54/// starting it (including the stopwatch counter).; 55/// Use kFALSE to continue timing after a Stop() without; 56/// resetting the stopwatch.; 57 ; 58void TStopwatch::Start(Bool_t reset); 59{; 60 if (reset) {; 61 fState = kUndefined;; 62 fTotalCpuTime = 0;; 63 fTotalRealTime = 0;; 64 fCounter = 0;; 65 }; 66 if (fState != kRunning) {; 67 fStartRealTime = GetRealTime(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStopwatch_8cxx_source.html:93,Load,Loading,93,doc/master/TStopwatch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStopwatch_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TString.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros |; Functions |; Variables ; TString.cxx File Reference. #include <ROOT/RConfig.hxx>; #include <stdlib.h>; #include <ctype.h>; #include <list>; #include <algorithm>; #include ""Varargs.h""; #include ""strlcpy.h""; #include ""TString.h""; #include ""TBuffer.h""; #include ""TError.h""; #include ""Bytes.h""; #include ""TClass.h""; #include ""TMD5.h""; #include ""TObjArray.h""; #include ""TObjString.h""; #include ""TVirtualMutex.h""; #include ""ThreadLocalStorage.h""; #include <stdint.h>. Include dependency graph for TString.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define BIG_CONSTANT(x)   (x##LLU);  ; #define ROTL64(x, y)   rotl64(x,y);  . Functions; char * Compress (const char *str);  Remove all blanks from the string str. ;  ; int EscChar (const char *src, char *dst, int dstlen, char *specchars, char escchar);  Escape specchars in src with escchar and copy to dst. ;  ; char * Form (const char *fmt,...);  Formats a string in a circular formatting buffer. ;  ; static char * Format (const char *format, va_list ap);  Format a string in a circular formatting buffer (using a printf style format descriptor). ;  ; UInt_t Hash (const char *str);  Return a case-sensitive hash value (endian independent). ;  ; static void Mash (UInt_t &hash, UInt_t chars);  Utility used by Hash(). ;  ; static int MemIsEqual (const char *p, const char *q, Ssiz_t n);  Returns false if strings are not equal. ;  ; TString operator+ (char c, const TString &s);  Add string to char. ;  ; TString operator+ (const char *cs, const TString &s);  Use the special concatenation constructor. ;  ; TString operator+ (const TString &s, char c)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx.html:93,Load,Loading,93,doc/master/TString_8cxx.html,https://root.cern,https://root.cern/doc/master/TString_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TString.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TString.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 04/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TString; 13\ingroup Base; 14 ; 15Basic string class.; 16 ; 17Cannot be stored in a TCollection... use TObjString instead.; 18 ; 19The underlying string is stored as a char* that can be accessed via; 20TString::Data().; 21TString provides Short String Optimization (SSO) so that short; 22strings (<15 on 64-bit and <11 on 32-bit) are contained in the; 23TString internal data structure without the need for mallocing the; 24required space.; 25 ; 26Substring operations are provided by the TSubString class, which; 27holds a reference to the original string and its data, along with; 28the offset and length of the substring. To retrieve the substring; 29as a TString, construct a TString from it, eg:; 30~~~ {.cpp}; 31 root [0] TString s(""hello world""); 32 root [1] TString s2( s(0,5) ); 33 root [2] s2; 34 (class TString)""hello""; 35~~~; 36*/; 37 ; 38#include <ROOT/RConfig.hxx>; 39#include <stdlib.h>; 40#include <ctype.h>; 41#include <list>; 42#include <algorithm>; 43 ; 44#include ""Varargs.h""; 45#include ""strlcpy.h""; 46#include ""TString.h""; 47#include ""TBuffer.h""; 48#include ""TError.h""; 49#include ""Bytes.h""; 50#include ""TClass.h""; 51#include ""TMD5.h""; 52#include ""TObjArray.h""; 53#include ""TObjString.h""; 54#include ""TVirtualMutex.h""; 55#include ""ThreadLocalStorage.h""; 56 ; 57#if defined(R__WIN32); 58#define strtoull _strtoui64; 59#endif; 60 ; 61#ifdef R__GLO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:90,Load,Loading,90,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,2,"['Load', 'Optimiz']","['Loading', 'Optimization']"
Performance,". ROOT: core/base/src/TStyle.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStyle.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <cstdio>; 14#include <cctype>; 15#include <cmath>; 16#include <iostream>; 17#include <fstream>; 18 ; 19#include ""strlcpy.h""; 20#include ""TApplication.h""; 21#include ""TColor.h""; 22#include ""TDatime.h""; 23#include ""TROOT.h""; 24#include ""TStyle.h""; 25#include ""TSystem.h""; 26#include ""TVirtualPad.h""; 27#include ""TVirtualMutex.h""; 28#include ""TEnv.h""; 29 ; 30TStyle *gStyle;; 31const UInt_t kTakeStyle = BIT(17);; 32 ; 33ClassImp(TStyle);; 34 ; 35/** \class TStyle; 36\ingroup Base; 37 \ingroup GraphicsAtt; 38 ; 39TStyle objects may be created to define special styles.; 40By default ROOT creates a default style that can be accessed via; 41the gStyle pointer.; 42 ; 43This class includes functions to set some of the following object attributes.; 44 - Canvas; 45 - Pad; 46 - Histogram axis; 47 - Lines; 48 - Fill areas; 49 - Text; 50 - Markers; 51 - Functions; 52 - Histogram Statistics and Titles; 53 ; 54All objects that can be drawn in a pad inherit from one or more attribute classes; 55like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their; 56default attributes are taken from the current style. The current style is an object; 57of the class[TStyle](https://root.cern/doc/master/classTStyle.html) and can be; 58referenced via the global variable `gStyle` (in TStyle.h).; 59 ; 60ROOT provides two styles called ""Default"" ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStyle_8cxx_source.html:89,Load,Loading,89,doc/master/TStyle_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStyle_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TSystem.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSystem.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id: 8944840ba34631ec28efc779647618db43c0eee5 $; 2// Author: Fons Rademakers 15/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TSystem; 13\ingroup Base; 14 ; 15Abstract base class defining a generic interface to the underlying; 16Operating System.; 17This is not an ABC in the strict sense of the (C++) word. For; 18every member function there is an implementation (often not more; 19than a call to AbstractMethod() which prints a warning saying; 20that the method should be overridden in a derived class), which; 21allows a simple partial implementation for new OS'es.; 22*/; 23 ; 24#include <ROOT/FoundationUtils.hxx>; 25#include ""strlcpy.h""; 26#include ""TSystem.h""; 27#include ""TApplication.h""; 28#include ""TException.h""; 29#include ""TROOT.h""; 30#include ""TClass.h""; 31#include ""TClassTable.h""; 32#include ""TEnv.h""; 33#include ""TOrdCollection.h""; 34#include ""TObject.h""; 35#include ""TInterpreter.h""; 36#include ""TRegexp.h""; 37#include ""TObjString.h""; 38#include ""TObjArray.h""; 39#include ""TError.h""; 40#include ""TPluginManager.h""; 41#include ""TUrl.h""; 42#include ""TVirtualMutex.h""; 43#include ""TVersionCheck.h""; 44#include ""compiledata.h""; 45#include ""RConfigure.h""; 46#include ""THashList.h""; 47#include ""ThreadLocalStorage.h""; 48 ; 49#include <functional>; 50#include <iostream>; 51#include <fstream>; 52#include <memory>; 53#include <sstream>; 54#include <string>; 55#include <sys/stat.h>; 56#include <set>; 57 ; 58#ifdef WIN32; 59#include <io.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:90,Load,Loading,90,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TTimer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTimer.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 28/11/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TTimer; 13\ingroup Base; 14 ; 15Handles synchronous and a-synchronous timer events.; 161. synchronous timer is registered into TSystem and is processed; 17 within the standard ROOT event-loop.; 182. asynchronous timer is passed to the operating system which sends; 19 an external signal to ROOT and thus interrupts its event-loop.; 20 ; 21You can use this class in one of the following ways:; 22 - Sub-class TTimer and override the Notify() method.; 23 - Re-implement the TObject::HandleTimer() method in your class; 24 and pass a pointer to this object to timer, see the SetObject(); 25 method.; 26 - Pass an interpreter command to timer, see SetCommand() method.; 27 - Create a TTimer, connect its Timeout() signal to the; 28 appropriate methods. Then when the time is up it will emit a; 29 Timeout() signal and call connected slots.; 30 ; 31Minimum timeout interval is defined in TSystem::ESysConstants as; 32`kItimerResolution` (currently 10 ms).; 33 ; 34Signal/slots example:; 35~~~{.cpp}; 36 TTimer *timer = new TTimer();; 37 timer->Connect(""Timeout()"", ""myObjectClassName"",; 38 myObject, ""TimerDone()"");; 39 timer->Start(2000, kTRUE); // 2 seconds single-shot; 40~~~; 41To emit the Timeout signal repeatedly with minimum timeout:; 42~~~ {.cpp}; 43 timer->Start(0, kFALSE);; 44~~~; 45*/; 46 ; 47#include ""TTimer.h""; 48#include ""TSystem.h""; 49#include ""TROOT.h""; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTimer_8cxx_source.html:89,Load,Loading,89,doc/master/TTimer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTimer_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/base/src/TVirtualFFT.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualFFT.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Anna Kreshuk 10/04/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TVirtualFFT; 13\ingroup Base; 14 ; 15TVirtualFFT is an interface class for Fast Fourier Transforms.; 16 ; 17The default FFT library is FFTW. To use it, FFTW3 library should already; 18be installed, and ROOT should be have fftw3 module enabled, with the directories; 19of fftw3 include file and library specified (see installation instructions).; 20Function SetDefaultFFT() allows to change the default library.; 21 ; 22## Available transform types:; 23FFT:; 24 - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); 25 in one or more dimensions, -1 in the exponent; 26 - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); 27 in one or more dimensions, +1 in the exponent; 28 - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); 29 in one or more dimensions,; 30 - ""C2R"" - inverse transforms to ""R2C"", taking complex input; 31 (storing the non-redundant half of a logically Hermitian array); 32 to real output; 33 - ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format,; 34 i.e. real and imaginary parts for a transform of size n stored as; 35 r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; 36 - ""HC2R"" - computes the reverse of FFTW_R2HC, above; 37 - ""DHT"" - computes a discrete Hartley transform; 38 ; 39## Sine/cosine transforms:; 40Different types of transforms are specified by parame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFFT_8cxx_source.html:94,Load,Loading,94,doc/master/TVirtualFFT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFFT_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/clingutils/src/stlLoader.cc File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; stlLoader.cc File Reference. #include ""G__ci.h""; #include ""Api.h""; #include ""FastAllocString.h"". Include dependency graph for stlLoader.cc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; static int stlLoader ();  . Variables; static int sltLoad = stlLoader();  ; static const char * what = WHAT;  . Function Documentation. ◆ stlLoader(). static int stlLoader ; (; ). static . Definition at line 7 of file stlLoader.cc. Variable Documentation. ◆ sltLoad. int sltLoad = stlLoader(). static . Definition at line 29 of file stlLoader.cc. ◆ what. const char* what = WHAT. static . Definition at line 5 of file stlLoader.cc. coreclingutilssrcstlLoader.cc. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/stlLoader_8cc.html:100,Load,Loading,100,doc/master/stlLoader_8cc.html,https://root.cern,https://root.cern/doc/master/stlLoader_8cc.html,1,['Load'],['Loading']
Performance,". ROOT: core/clingutils/src/stlLoader.cc Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. stlLoader.cc. Go to the documentation of this file. 1#include ""G__ci.h""; 2#include ""Api.h""; 3#include ""FastAllocString.h""; 4 ; 5static const char *what = WHAT;; 6 ; 7static int stlLoader(); 8{; 9 G__ClassInfo cl(""TSystem"");; 10 if (cl.IsValid() && strlen(WHAT)<1000) {; 11 G__FastAllocString buf;; 12 buf.Format(""\""lib%sDict\"""",what);; 13 ; 14 G__CallFunc func;; 15 long offset;; 16 func.SetFuncProto(&cl,""Load"",""const char*"",&offset);; 17 ; 18 if (func.InterfaceMethod()) {; 19 long tmp = G__int(G__calc(""gSystem""));; 20 void * gsystem = (void*)tmp;; 21 ; 22 func.SetArgs(buf);; 23 func.Exec(gsystem);; 24 }; 25 }; 26 return 0;; 27}; 28 ; 29static int sltLoad = stlLoader();; offsetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h offsetDefinition TGWin32VirtualXProxy.cxx:245; whatstatic const char * whatDefinition stlLoader.cc:5; stlLoaderstatic int stlLoader()Definition stlLoader.cc:7; sltLoadstatic int sltLoadDefinition stlLoader.cc:29. coreclingutilssrcstlLoader.cc. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/stlLoader_8cc_source.html:97,Load,Loading,97,doc/master/stlLoader_8cc_source.html,https://root.cern,https://root.cern/doc/master/stlLoader_8cc_source.html,2,['Load'],"['Load', 'Loading']"
Performance,". ROOT: core/cont Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. cont Directory Reference. Directory dependency graph for cont:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  doc;  ;  inc;  ;  src;  . corecont. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_dab74c5cdd3a71e5814fe91e0c8171fa.html:82,Load,Loading,82,doc/master/dir_dab74c5cdd3a71e5814fe91e0c8171fa.html,https://root.cern,https://root.cern/doc/master/dir_dab74c5cdd3a71e5814fe91e0c8171fa.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. inc Directory Reference. Directory dependency graph for inc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  ROOT;  . Files;  TArray.h;  ;  TArrayC.h;  ;  TArrayD.h;  ;  TArrayF.h;  ;  TArrayI.h;  ;  TArrayL.h;  ;  TArrayL64.h;  ;  TArrayS.h;  ;  TBits.h;  ;  TBtree.h;  ;  TClassTable.h;  ;  TClonesArray.h;  ;  TCollection.h;  ;  TCollectionProxyInfo.h;  ;  TExMap.h;  ;  THashList.h;  ;  THashTable.h;  ;  TIterator.h;  ;  TList.h;  ;  TMap.h;  ;  TObjArray.h;  ;  TObjectTable.h;  ;  TOrdCollection.h;  ;  TRefArray.h;  ;  TRefTable.h;  ;  TSeqCollection.h;  ;  TSortedList.h;  ;  TVirtualCollectionProxy.h;  . corecontinc. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_a1b91ffd476e3b26d4c2a148c14f4d99.html:86,Load,Loading,86,doc/master/dir_a1b91ffd476e3b26d4c2a148c14f4d99.html,https://root.cern,https://root.cern/doc/master/dir_a1b91ffd476e3b26d4c2a148c14f4d99.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/ROOT/TSeq.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; TSeq.hxx File Reference. #include ""TError.h""; #include <iterator>; #include <type_traits>; #include <sstream>. Include dependency graph for TSeq.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::TSeq< T >::iterator;  ; class  ROOT::TSeq< T >;  A pseudo container class which is a generator of indices. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Typedefs; using ROOT::TSeqI = TSeq< int >;  ; using ROOT::TSeqL = TSeq< long >;  ; using ROOT::TSeqU = TSeq< unsigned int >;  ; using ROOT::TSeqUL = TSeq< unsigned long >;  . Functions; template<class T > ; TSeq< T > ROOT::MakeSeq (T begin, T end, T step=1);  ; template<class T > ; TSeq< T > ROOT::MakeSeq (T end);  . corecontincROOTTSeq.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSeq_8hxx.html:95,Load,Loading,95,doc/master/TSeq_8hxx.html,https://root.cern,https://root.cern/doc/master/TSeq_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/ROOT/TSeq.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSeq.hxx. Go to the documentation of this file. 1/* @(#)root/core/cont:$Id$ */; 2// Author: Danilo Piparo November 2015; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TSeq; 13#define ROOT_TSeq; 14 ; 15#include ""TError.h""; 16#include <iterator>; 17#include <type_traits>; 18 ; 19/**; 20\class ROOT::TSeq; 21\brief A pseudo container class which is a generator of indices.; 22 ; 23\tparam T Type of the numerical sequence.; 24\ingroup Containers; 25A pseudo container class which is a generator of indices. The model is the `xrange`; 26built-in function of Python.; 27Possible usages:; 28Loop on a sequence of integers; 29~~~{.cpp}; 30 for (auto i : TSeqI(10)) {; 31 cout << ""Element "" << i << endl;; 32 }; 33~~~; 34Loop on a sequence of integers in steps; 35~~~{.cpp}; 36 for (auto i : TSeqI(-5, 29, 6)) {; 37 cout << ""Element "" << i << endl;; 38 }; 39~~~; 40Loop backwards on a sequence of integers; 41~~~{.cpp}; 42 for (auto i : TSeqI(50, 30, -3)) {; 43 cout << ""Element "" << i << endl;; 44 }; 45~~~; 46Use an stl algorithm, for_each; 47~~~{.cpp}; 48 TSeqUL ulSeq(2,30,3);; 49 std::for_each(std::begin(ulSeq),std::end(ulSeq),[](ULong_t i){cout << ""For each: "" << i <<endl;});; 50~~~; 51Random access:; 52~~~{.cpp}; 53 cout << ""Random access: 3rd element is "" << ulSeq[2] << endl;; 54~~~; 55A function to create sequences inferring the type:; 56~~~{.cpp}; 57 for (auto i : MakeSeq(1000000000000UL, 1000000000003UL)) {; 58 cout << ""Element "" << i << endl;; 59 }; 60~~~; 61 ; 62**/; 63 ; 64namespace ROOT {; 65 ; 66 templat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSeq_8hxx_source.html:92,Load,Loading,92,doc/master/TSeq_8hxx_source.html,https://root.cern,https://root.cern/doc/master/TSeq_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/ROOT/TSeq.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TSeq.hxx. Go to the documentation of this file. 1/* @(#)root/core/cont:$Id$ */; 2// Author: Danilo Piparo November 2015; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TSeq; 13#define ROOT_TSeq; 14 ; 15#include ""TError.h""; 16#include <iterator>; 17#include <type_traits>; 18 ; 19/**; 20\class ROOT::TSeq; 21\brief A pseudo container class which is a generator of indices.; 22 ; 23\tparam T Type of the numerical sequence.; 24\ingroup Containers; 25A pseudo container class which is a generator of indices. The model is the `xrange`; 26built-in function of Python.; 27Possible usages:; 28Loop on a sequence of integers; 29~~~{.cpp}; 30 for (auto i : TSeqI(10)) {; 31 cout << ""Element "" << i << endl;; 32 }; 33~~~; 34Loop on a sequence of integers in steps; 35~~~{.cpp}; 36 for (auto i : TSeqI(-5, 29, 6)) {; 37 cout << ""Element "" << i << endl;; 38 }; 39~~~; 40Loop backwards on a sequence of integers; 41~~~{.cpp}; 42 for (auto i : TSeqI(50, 30, -3)) {; 43 cout << ""Element "" << i << endl;; 44 }; 45~~~; 46Use an stl algorithm, for_each; 47~~~{.cpp}; 48 TSeqUL ulSeq(2,30,3);; 49 std::for_each(std::begin(ulSeq),std::end(ulSeq),[](ULong_t i){cout << ""For each: "" << i <<endl;});; 50~~~; 51Random access:; 52~~~{.cpp}; 53 cout << ""Random access: 3rd element is "" << ulSeq[2] << endl;; 54~~~; 55A function to create sequences inferring the type:; 56~~~{.cpp}; 57 for (auto i : MakeSeq(1000000000000UL, 1000000000003UL)) {; 58 cout << ""Element "" << i << endl;; 59 }; 60~~~; 61 ; 62**/; 63 ; 64namespace ROOT {; 65 ; 66 template",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TSeq_8hxx_source.html:91,Load,Loading,91,doc/v632/TSeq_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/TSeq_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TArrayD.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArrayD.h. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Rene Brun 06/03/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TArrayD; 13#define ROOT_TArrayD; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TArrayD //; 19// //; 20// Array of doubles (64 bits per element). //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TArray.h""; 25 ; 26 ; 27class TArrayD : public TArray {; 28 ; 29public:; 30 Double_t *fArray; //[fN] Array of fN doubles; 31 ; 32 TArrayD();; 33 TArrayD(Int_t n);; 34 TArrayD(Int_t n, const Double_t *array);; 35 TArrayD(const TArrayD &array);; 36 TArrayD &operator=(const TArrayD &rhs);; 37 virtual ~TArrayD();; 38 ; 39 void Adopt(Int_t n, Double_t *array);; 40 void AddAt(Double_t c, Int_t i);; 41 Double_t At(Int_t i) const ;; 42 void Copy(TArrayD &array) const {array.Set(fN,fArray);}; 43 const Double_t *GetArray() const { return fArray; }; 44 Double_t *GetArray() { return fArray; }; 45 Double_t GetAt(Int_t i) const override { return At(i); }; 46 Stat_t GetSum() const {Stat_t sum=0; for (Int_t i=0;i<fN;i++) sum+=fArray[i]; return sum;}; 47 void Reset() {memset(fArray, 0, fN*sizeof(Double_t));}; 48 void Reset(Double_t val) {for (Int_t i=0;i<fN;i++) fArray[i] = val;}; 49 void Set(Int_t n) override;; 50 void Set(Int_t n, const Double_t *array);; 51 void SetAt(Double_t v, Int_t i) override { AddAt(v, i); }; 52 Double_t &operator[](Int_t i);; 53 Double_t op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TArrayD_8h_source.html:88,Load,Loading,88,doc/master/TArrayD_8h_source.html,https://root.cern,https://root.cern/doc/master/TArrayD_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TCollection.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; TCollection.h File Reference. #include ""TObject.h""; #include ""TIterator.h""; #include ""TString.h""; #include ""TVirtualRWMutex.h""; #include ""ROOT/RRangeCast.hxx""; #include <cassert>. Include dependency graph for TCollection.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TCollection;  Collection abstract base class. More...;  ; class  TIter;  ; class  TIterCategory< T >;  ; class  ROOT::Detail::TRangeCast< T, isDynamic >;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  ROOT::Internal;  . Macros; #define R__COLL_COND_MUTEX(mutex)   this->IsUsingRWLock() ? mutex : nullptr;  ; #define R__COLLECTION_ITER_GUARD(collection);  ; #define R__COLLECTION_READ_GUARD();  ; #define R__COLLECTION_READ_LOCKGUARD(mutex)   ::ROOT::TReadLockGuard _R__UNIQUE_(R__readguard)(R__COLL_COND_MUTEX(mutex));  ; #define R__COLLECTION_READ_LOCKGUARD_NAMED(name, mutex)   ::ROOT::TReadLockGuard _NAME2_(R__readguard,name)(R__COLL_COND_MUTEX(mutex));  ; #define R__COLLECTION_WRITE_GUARD();  ; #define R__COLLECTION_WRITE_LOCKGUARD(mutex)   ::ROOT::TWriteLockGuard _R__UNIQUE_(R__readguard)(R__COLL_COND_MUTEX(mutex));  ; #define R__COLLECTION_WRITE_LOCKGUARD_NAMED(name, mutex)   ::ROOT::TWriteLockGuard _NAME2_(R__readguard,nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8h.html:95,Load,Loading,95,doc/master/TCollection_8h.html,https://root.cern,https://root.cern/doc/master/TCollection_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TCollection.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCollection.h. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 13/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TCollection; 13#define ROOT_TCollection; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TCollection //; 19// //; 20// Collection abstract base class. This class inherits from TObject //; 21// because we want to be able to have collections of collections. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TObject.h""; 26 ; 27#include ""TIterator.h""; 28 ; 29#include ""TString.h""; 30 ; 31#include ""TVirtualRWMutex.h""; 32 ; 33#include ""ROOT/RRangeCast.hxx""; 34 ; 35#include <cassert>; 36 ; 37class TClass;; 38class TObjectTable;; 39class TVirtualMutex;; 40class TIter;; 41 ; 42const Bool_t kIterForward = kTRUE;; 43const Bool_t kIterBackward = !kIterForward;; 44 ; 45R__EXTERN TVirtualMutex *gCollectionMutex;; 46 ; 47// #define R__CHECK_COLLECTION_MULTI_ACCESS; 48 ; 49// When R__CHECK_COLLECTION_MULTI_ACCESS is turned on (defined),; 50// the normal (not locked) ROOT TCollections are instrumented with a; 51// pseudo read-write lock which does not halt the execution but detects; 52// and report concurrent access to the same collections.; 53// Multiple readers are allowed.; 54// Multiple concurrent writer is reported as a Conflict; 55// Readers access while a write is running is reported as Conflict; 56// Re-entrant writing call by the same Wri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8h_source.html:92,Load,Loading,92,doc/master/TCollection_8h_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TCollectionProxyInfo.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCollectionProxyInfo.h. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Markus Frank 28/10/04. Philippe Canal 02/01/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TCollectionProxyInfo; 13#define ROOT_TCollectionProxyInfo; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// Small helper to gather the information neede to generate a //; 18// Collection Proxy //; 19//; 20//////////////////////////////////////////////////////////////////////////; 21 ; 22#include ""RtypesCore.h""; 23#include ""TError.h""; 24#include <vector>; 25#include <forward_list>; 26#include <utility>; 27 ; 28#if defined(_WIN32); 29 #if _MSC_VER<1300; 30 #define TYPENAME; 31 #define R__VCXX6; 32 #else; 33 #define TYPENAME typename; 34 #endif; 35#else; 36 #define TYPENAME typename; 37#endif; 38 ; 39class TVirtualCollectionProxy;; 40 ; 41namespace ROOT {; 42namespace VecOps {; 43template <typename T>; 44class RVec;; 45}; 46 ; 47namespace Internal {; 48template <typename T> class TStdBitsetHelper {; 49 // This class is intentionally empty, this is scaffolding to allow the equivalent; 50 // of 'template <int N> struct TCollectionProxyInfo::Type<std::bitset<N> >' which; 51 // is not effective in C++ (as of gcc 4.3.3).; 52};; 53}; 54 ; 55namespace Detail {; 56 ; 57 class TCollectionProxyInfo {; 58 // This class is a place holder for the information needed; 59 // to create the proper Collection Proxy.; 60 // This is similar to Reflex's CollFuncTable.; 61 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollectionProxyInfo_8h_source.html:101,Load,Loading,101,doc/master/TCollectionProxyInfo_8h_source.html,https://root.cern,https://root.cern/doc/master/TCollectionProxyInfo_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TIterator.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TIterator.h. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 13/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TIterator; 13#define ROOT_TIterator; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TIterator //; 19// //; 20// Iterator abstract base class. This base class provides the interface //; 21// for collection iterators. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""Rtypes.h""; 26 ; 27class TCollection;; 28class TObject;; 29 ; 30class TIterator {; 31 ; 32protected:; 33 TIterator() { }; 34 TIterator(const TIterator &) { }; 35 ; 36public:; 37 virtual TIterator &operator=(const TIterator &) = 0;; 38 virtual ~TIterator() { }; 39 virtual const TCollection *GetCollection() const = 0;; 40 virtual Option_t *GetOption() const { return """"; }; 41 virtual TObject *Next() = 0;; 42 virtual void Reset() = 0;; 43 TObject *operator()() { return Next(); }; 44 virtual Bool_t operator!=(const TIterator &) const;; 45 Bool_t operator==(const TIterator & other) const { return !(*this != other); }; 46 virtual TObject *operator*() const;; 47 ; 48 ClassDef(TIterator,0) //Iterator abstract base class; 49};; 50 ; 51#endif; Bool_tbool Bool_tDefinition RtypesCore.h:63; Option_tconst char Option_tDefinition RtypesCore.h:66; Rtypes.h; ClassDef#define ClassDef(name, id)Definition Rtypes.h:342; TCollectionCollection abstract base class.Definition TCollection.h:65; TI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TIterator_8h_source.html:90,Load,Loading,90,doc/master/TIterator_8h_source.html,https://root.cern,https://root.cern/doc/master/TIterator_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TList.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions |; Variables ; TList.h File Reference. #include ""TSeqCollection.h""; #include ""TString.h""; #include <iterator>; #include <memory>. Include dependency graph for TList.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TList;  A doubly linked list. More...;  ; class  TListIter;  Iterator of linked list. More...;  ; class  TObjLink;  Wrapper around a TObject so it can be stored in a TList. More...;  ; class  TObjOptLink;  . Functions; bool operator== (const std::shared_ptr< TObjLink > &l, TObjOptLink *r);  ; bool operator== (TObjOptLink *l, const std::shared_ptr< TObjLink > &r);  . Variables; const Bool_t kSortAscending = kTRUE;  ; const Bool_t kSortDescending = !kSortAscending;  . Function Documentation. ◆ operator==() [1/2]. bool operator== ; (; const std::shared_ptr< TObjLink > & ; l, . TObjOptLink * ; r . ). inline . Definition at line 237 of file TList.h. ◆ operator==() [2/2]. bool operator== ; (; TObjOptLink * ; l, . const std::shared_ptr< TObjLink > & ; r . ). inline . Definition at line 233 of file TList.h. Variable Documentation. ◆ kSortAscending. const Bool_t kSortAscending = kTRUE. Definition at line 31 of file TList.h. ◆ kSortDescending. const Bool_t kSortDescending = !kSortAscending. Definition at line 32 of file TList.h. corecontincTList.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TList_8h.html:89,Load,Loading,89,doc/master/TList_8h.html,https://root.cern,https://root.cern/doc/master/TList_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TList.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TList.h. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 10/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TList; 13#define ROOT_TList; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TList //; 19// //; 20// A doubly linked list. All classes inheriting from TObject can be //; 21// inserted in a TList. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TSeqCollection.h""; 26#include ""TString.h""; 27 ; 28#include <iterator>; 29#include <memory>; 30 ; 31const Bool_t kSortAscending = kTRUE;; 32const Bool_t kSortDescending = !kSortAscending;; 33 ; 34class TObjLink;; 35class TListIter;; 36 ; 37 ; 38class TList : public TSeqCollection {; 39 ; 40friend class TListIter;; 41 ; 42protected:; 43 using TObjLinkPtr_t = std::shared_ptr<TObjLink>;; 44 using TObjLinkWeakPtr_t = std::weak_ptr<TObjLink>;; 45 ; 46 TObjLinkPtr_t fFirst; //! pointer to first entry in linked list; 47 TObjLinkPtr_t fLast; //! pointer to last entry in linked list; 48 TObjLinkWeakPtr_t fCache; //! cache to speedup sequential calling of Before() and After() functions; 49 Bool_t fAscending; //! sorting order (when calling Sort() or for TSortedList); 50 ; 51 TObjLink *LinkAt(Int_t idx) const;; 52 TObjLink *FindLink(const TObject *obj, Int_t &idx) const;; 53 ; 54 TObjLinkPtr_t *DoSort(TObjLinkPtr_t *head, Int_t n);; 55 ; 56 Bool_t LnkCompare(const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TList_8h_source.html:86,Load,Loading,86,doc/master/TList_8h_source.html,https://root.cern,https://root.cern/doc/master/TList_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TObjArray.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObjArray.h. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 11/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TObjArray; 13#define ROOT_TObjArray; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TObjArray //; 19// //; 20// An array of TObjects. The array expands automatically when adding //; 21// elements (shrinking can be done by hand). //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TSeqCollection.h""; 26 ; 27#include <iterator>; 28 ; 29class TObjArrayIter;; 30 ; 31class TObjArray : public TSeqCollection {; 32 ; 33friend class TObjArrayIter;; 34friend class TClonesArray;; 35 ; 36protected:; 37 TObject **fCont; //!Array contents; 38 Int_t fLowerBound; //Lower bound of the array; 39 Int_t fLast; //Last element in array containing an object; 40 ; 41 Bool_t BoundsOk(const char *where, Int_t at) const;; 42 void Init(Int_t s, Int_t lowerBound);; 43 Bool_t OutOfBoundsError(const char *where, Int_t i) const;; 44 Int_t GetAbsLast() const;; 45 ; 46public:; 47 typedef TObjArrayIter Iterator_t;; 48 ; 49 TObjArray(Int_t s = TCollection::kInitCapacity, Int_t lowerBound = 0);; 50 TObjArray(const TObjArray &a);; 51 virtual ~TObjArray();; 52 TObjArray& operator=(const TObjArray&);; 53 void Clear(Option_t *option="""") override;; 54 virtual void Compress();; 55 void Delete(Option_t *option="""") override;; 56 virtual void Expand(Int_t newSize); // expand or s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObjArray_8h_source.html:90,Load,Loading,90,doc/master/TObjArray_8h_source.html,https://root.cern,https://root.cern/doc/master/TObjArray_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TSeqCollection.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSeqCollection.h. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 04/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TSeqCollection; 13#define ROOT_TSeqCollection; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TSeqCollection //; 19// //; 20// Sequenceable collection abstract base class. TSeqCollection's have //; 21// an ordering relation, i.e. there is a first and last element. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TCollection.h""; 26 ; 27 ; 28class TSeqCollection : public TCollection {; 29 ; 30protected:; 31 Bool_t fSorted; // true if collection has been sorted; 32 ; 33 TSeqCollection() : fSorted(kFALSE) { }; 34 virtual void Changed() { fSorted = kFALSE; }; 35 ; 36public:; 37 virtual ~TSeqCollection() { }; 38 void Add(TObject *obj) override { AddLast(obj); }; 39 virtual void AddFirst(TObject *obj) = 0;; 40 virtual void AddLast(TObject *obj) = 0;; 41 virtual void AddAt(TObject *obj, Int_t idx) = 0;; 42 virtual void AddAfter(const TObject *after, TObject *obj) = 0;; 43 virtual void AddBefore(const TObject *before, TObject *obj) = 0;; 44 virtual void RemoveFirst() { Remove(First()); }; 45 virtual void RemoveLast() { Remove(Last()); }; 46 virtual TObject *RemoveAt(Int_t idx) { return Remove(At(idx)); }; 47 virtual void RemoveAfter(TObject *after) { Remove(After(after)); }; 48 virtual void RemoveBefore(TObject *before) { Remove(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSeqCollection_8h_source.html:95,Load,Loading,95,doc/master/TSeqCollection_8h_source.html,https://root.cern,https://root.cern/doc/master/TSeqCollection_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/inc/TVirtualCollectionProxy.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualCollectionProxy.h. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Philippe Canal 20/08/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2003, Rene Brun, Fons Rademakers and al. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualCollectionProxy; 13#define ROOT_TVirtualCollectionProxy; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TVirtualCollectionProxy //; 18// //; 19// Virtual interface of a proxy object for a collection class //; 20// In particular this is used to implement splitting, emulation, //; 21// and TTreeFormula access to STL containers. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TClassRef.h""; 26#include ""TDataType.h""; 27 ; 28// Macro indicating the version of the Collection Proxy interface followed; 29// by this ROOT build (See also Reflex/Builder/CollectionProxy.h).; 30#define ROOT_COLLECTIONPROXY_VERSION 3; 31 ; 32class TClass;; 33namespace TStreamerInfoActions {; 34 class TActionSequence;; 35}; 36 ; 37// clang-format off; 38/**; 39\class TVirtualCollectionProxy; 40\brief Defines a common interface to inspect/change the contents of an object that represents a collection; 41 ; 42Specifically, an object of a class that derives from TVirtualCollectionProxy relays accesses to any object that; 43matches the proxied collection type.; 44The interface provides two families of functions: (i) for direct manipulation, e.g. `Insert()` or `At()`; and; 45(ii) iterator-based, e.g. `GetFunctionCreateIterators()` o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualCollectionProxy_8h_source.html:104,Load,Loading,104,doc/master/TVirtualCollectionProxy_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualCollectionProxy_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/src/TClassTable.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Functions |; Variables ; TClassTable.cxx File Reference. #include ""TClassTable.h""; #include ""TClass.h""; #include ""TClassEdit.h""; #include ""TProtoClass.h""; #include ""TList.h""; #include ""TROOT.h""; #include ""TString.h""; #include ""TError.h""; #include ""TRegexp.h""; #include ""TObjString.h""; #include ""TMap.h""; #include ""TInterpreter.h""; #include <map>; #include <memory>; #include <typeinfo>; #include <cstdlib>; #include <string>; #include <mutex>. Include dependency graph for TClassTable.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TClassTable::NormalizeThenLock;  ; class  ROOT::TClassAlt;  ; class  ROOT::TClassRec;  ; class  ROOT::TForNamespace;  ; class  ROOT::TMapTypeToClassRec;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define R__USE_STD_MAP;  . Functions; static int ClassComp (const void *a, const void *b);  ; static UInt_t ROOT::ClassTableHash (const char *name, UInt_t size);  ; static std::mutex & GetClassTableMutex ();  ; std::vector< std::unique_ptr< TClassRec > > & ROOT::GetDelayedAddClass ();  ; std::vector< std::pair< const char *, const char * > > & ROOT::GetDelayedAddClassAlternate ();  . Variables; TClassTable * gClassTable;  . Macro Definition Documentation. ◆ R__USE_STD_MAP. #define R__USE_STD_MAP. Definition at line 143 of file TClassTable.cxx. Function Documentation. ◆ ClassComp(). static int ClassComp ; (; const void * ; a, . const void * ; b . ). static . Definition at line 794 of file TClassTable.cxx. ◆ GetClassTableMutex(). static std::mutex & GetClassTableMutex ; (; ). static . Definition at line 60 of file TClassTable.cxx. Variable Documentation. ◆ gClassTable. TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClassTable_8cxx.html:97,Load,Loading,97,doc/master/TClassTable_8cxx.html,https://root.cern,https://root.cern/doc/master/TClassTable_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/src/TClassTable.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TClassTable.cxx. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 11/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TClassTable; 13\ingroup Containers; 14This class registers for all classes their name, id and dictionary; 15function in a hash table. Classes are automatically added by the; 16ctor of a special init class when a global of this init class is; 17initialized when the program starts (see the ClassImp macro).; 18 ; 19All functions in TClassTable are thread-safe.; 20*/; 21 ; 22#include ""TClassTable.h""; 23 ; 24#include ""TClass.h""; 25#include ""TClassEdit.h""; 26#include ""TProtoClass.h""; 27#include ""TList.h""; 28#include ""TROOT.h""; 29#include ""TString.h""; 30#include ""TError.h""; 31#include ""TRegexp.h""; 32 ; 33#include ""TObjString.h""; 34#include ""TMap.h""; 35 ; 36#include ""TInterpreter.h""; 37 ; 38#include <map>; 39#include <memory>; 40#include <typeinfo>; 41#include <cstdlib>; 42#include <string>; 43#include <mutex>; 44 ; 45using namespace ROOT;; 46 ; 47TClassTable *gClassTable;; 48 ; 49TClassAlt **TClassTable::fgAlternate;; 50TClassRec **TClassTable::fgTable;; 51TClassRec **TClassTable::fgSortedTable;; 52UInt_t TClassTable::fgSize;; 53std::atomic<UInt_t> TClassTable::fgTally;; 54Bool_t TClassTable::fgSorted;; 55UInt_t TClassTable::fgCursor;; 56TClassTable::IdMap_t *TClassTable::fgIdMap;; 57 ; 58ClassImp(TClassTable);; 59 ; 60static std::mutex &GetClassTableMutex(); 61{; 62 static std::mutex sMutex;; 63 return sMutex;; 64}; 65 ; 66// RAII to first no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClassTable_8cxx_source.html:94,Load,Loading,94,doc/master/TClassTable_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClassTable_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/src/TClassTable.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TClassTable.cxx. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 11/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TClassTable; 13\ingroup Containers; 14This class registers for all classes their name, id and dictionary; 15function in a hash table. Classes are automatically added by the; 16ctor of a special init class when a global of this init class is; 17initialized when the program starts (see the ClassImp macro).; 18 ; 19All functions in TClassTable are thread-safe.; 20*/; 21 ; 22#include ""TClassTable.h""; 23 ; 24#include ""TClass.h""; 25#include ""TClassEdit.h""; 26#include ""TProtoClass.h""; 27#include ""TList.h""; 28#include ""TROOT.h""; 29#include ""TString.h""; 30#include ""TError.h""; 31#include ""TRegexp.h""; 32 ; 33#include ""TObjString.h""; 34#include ""TMap.h""; 35 ; 36#include ""TInterpreter.h""; 37 ; 38#include <map>; 39#include <memory>; 40#include <typeinfo>; 41#include <cstdlib>; 42#include <string>; 43#include <mutex>; 44 ; 45using namespace ROOT;; 46 ; 47TClassTable *gClassTable;; 48 ; 49TClassAlt **TClassTable::fgAlternate;; 50TClassRec **TClassTable::fgTable;; 51TClassRec **TClassTable::fgSortedTable;; 52UInt_t TClassTable::fgSize;; 53std::atomic<UInt_t> TClassTable::fgTally;; 54Bool_t TClassTable::fgSorted;; 55UInt_t TClassTable::fgCursor;; 56TClassTable::IdMap_t *TClassTable::fgIdMap;; 57 ; 58ClassImp(TClassTable);; 59 ; 60static std::mutex &GetClassTableMutex(); 61{; 62 static std::mutex sMutex;; 63 return sMutex;; 64}; 65 ; 66// RAII to first nor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClassTable_8cxx_source.html:93,Load,Loading,93,doc/v632/TClassTable_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClassTable_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/src/TCollection.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCollection.cxx. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 13/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TCollection; 13\ingroup Containers; 14Collection abstract base class. This class describes the base; 15protocol all collection classes have to implement. The ROOT; 16collection classes always store pointers to objects that inherit; 17from TObject. They never adopt the objects. Therefore, it is the; 18user's responsibility to take care of deleting the actual objects; 19once they are not needed anymore. In exceptional cases, when the; 20user is 100% sure nothing else is referencing the objects in the; 21collection, one can delete all objects and the collection at the; 22same time using the Delete() function.; 23 ; 24Collections can be iterated using an iterator object (see; 25TIterator). Depending on the concrete collection class there may be; 26some additional methods of iterating. See the respective classes.; 27 ; 28TCollection inherits from TObject since we want to be able to have; 29collections of collections.; 30 ; 31In a later release the collections may become templatized.; 32*/; 33 ; 34#include ""TCollection.h""; 35#include ""Varargs.h""; 36#include ""TBuffer.h""; 37#include ""TClass.h""; 38#include ""TROOT.h""; 39#include ""TBrowser.h""; 40#include ""TObjectTable.h""; 41#include ""TRegexp.h""; 42#include ""TPRegexp.h""; 43#include ""TVirtualMutex.h""; 44#include ""TError.h""; 45#include ""TSystem.h""; 46#include ""TObjArray.h""; 47#include <iostream>; 48#",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:94,Load,Loading,94,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/src/TList.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TList.cxx. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 10/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TList; 13\ingroup Containers; 14A doubly linked list.; 15 ; 16All classes inheriting from TObject can be; 17inserted in a TList. Before being inserted into the list the object; 18pointer is wrapped in a TObjLink object which contains, besides; 19the object pointer also a previous and next pointer.; 20 ; 21There are several ways to iterate over a TList; in order of preference, if; 22not forced by other constraints:; 23 ; 24 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; 25~~~ {.cpp}; 26 for(TObject *obj: *GetListOfPrimitives()); 27 obj->Write();; 28~~~; 29 2. Using the R__FOR_EACH macro:; 30~~~ {.cpp}; 31 GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; 32~~~; 33 3. Using the TList iterator TListIter (via the wrapper class TIter):; 34~~~ {.cpp}; 35 TIter next(GetListOfPrimitives());; 36 while (TObject *obj = next()); 37 obj->Draw(next.GetOption());; 38~~~; 39 4. Using the TList iterator TListIter and std::for_each algorithm:; 40~~~ {.cpp}; 41 // A function object, which will be applied to each element; 42 // of the given range.; 43 struct STestFunctor {; 44 bool operator()(TObject *aObj) {; 45 ...; 46 return true;; 47 }; 48 }; 49 ...; 50 ...; 51 TIter iter(mylist);; 52 for_each( iter.Begin(), TIter::End(), STestFunctor() );; 53~~~; 54 5. Using the TObjLink list entries (that wrap the TObject*):; 55~~~ {.cpp}; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TList_8cxx_source.html:88,Load,Loading,88,doc/master/TList_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TList_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/src/TObjArray.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObjArray.cxx. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 11/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TObjArray; 13\ingroup Containers; 14An array of TObjects. The array expands automatically when; 15objects are added (shrinking can be done by hand using Expand(),; 16how nice to have meaningful names -:)).; 17Use operator[] to have ""real"" array behaviour.; 18 ; 19Note on ownership and copy:; 20By default the TObjArray does not own the objects it points to and; 21will not delete them unless explicitly asked (via a call to the; 22Delete member function). To assign ownership of the content to; 23the array, call:; 24~~~ {.cpp}; 25 myarr->SetOwner(kTRUE);; 26~~~; 27When the array owns its content a call to Clear or the deletion of; 28the array itself will lead to the deletion of its contents.; 29 ; 30You can either make a shallow copy of the array:; 31~~~ {.cpp}; 32 otherarr = new TObjArray(*myarr);; 33 *otherarr = *myarr;; 34~~~; 35in which case ownership (if any) is not transfered but the other; 36array points to the same object as the original array. Note that; 37if the content of either array is deleted the other array is not; 38notified in any way (i.e. still points to the now deleted objects).; 39 ; 40You can also make a deep copy of the array:; 41~~~ {.cpp}; 42 otherarr = (TObjArray*)myarr->Clone();; 43~~~; 44in which case the array and the content are both duplicated (i.e.; 45otherarr and myarr do not point to the same objects). If myarr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObjArray_8cxx_source.html:92,Load,Loading,92,doc/master/TObjArray_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObjArray_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/cont/src/TSeqCollection.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSeqCollection.cxx. Go to the documentation of this file. 1// @(#)root/cont:$Id$; 2// Author: Fons Rademakers 04/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TSeqCollection; 13\ingroup Containers; 14Sequenceable collection abstract base class. TSeqCollection's have; 15an ordering relation, i.e. there is a first and last element.; 16*/; 17 ; 18#include ""TSeqCollection.h""; 19#include ""TCollection.h""; 20#include ""TVirtualMutex.h""; 21#include ""TClass.h""; 22#include ""TMethodCall.h""; 23 ; 24ClassImp(TSeqCollection);; 25 ; 26////////////////////////////////////////////////////////////////////////////////; 27/// Return index of object in collection. Returns -1 when object not found.; 28/// Uses member IsEqual() to find object.; 29 ; 30Int_t TSeqCollection::IndexOf(const TObject *obj) const; 31{; 32 Int_t idx = 0;; 33 TIter next(this);; 34 TObject *ob;; 35 ; 36 while ((ob = next())) {; 37 if (ob->IsEqual(obj)) return idx;; 38 idx++;; 39 }; 40 return -1;; 41}; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// Returns index of last object in collection. Returns -1 when no; 45/// objects in collection.; 46 ; 47Int_t TSeqCollection::GetLast() const; 48{; 49 TObject *tmp = Last();; 50 return tmp ? IndexOf(tmp) : -1;; 51}; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54/// Compare to objects in the collection. Use member Compare() of object a.; 55 ; 56Int_t TSeqCollection::ObjCompare(TObject *a, TObject *b); 57{;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSeqCollection_8cxx_source.html:97,Load,Loading,97,doc/master/TSeqCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSeqCollection_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/dictgen/src/Scanner.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; Scanner.cxx File Reference. #include ""Scanner.h""; #include ""clang/AST/ASTConsumer.h""; #include ""clang/Basic/SourceLocation.h""; #include ""clang/Basic/SourceManager.h""; #include ""llvm/ADT/SmallSet.h""; #include ""clang/Sema/Sema.h""; #include ""clang/Frontend/CompilerInstance.h""; #include ""cling/Interpreter/Interpreter.h""; #include ""llvm/Support/Path.h""; #include ""TClassEdit.h""; #include <iostream>; #include <sstream>; #include ""llvm/ADT/StringExtras.h""; #include ""SelectionRules.h"". Include dependency graph for Scanner.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; std::string AddSpace (const std::string &txt);  ; long APIntToLong (const llvm::APInt &num);  ; size_t APIntToSize (const llvm::APInt &num);  ; std::string APIntToStr (const llvm::APInt &num);  ; std::string IntToStd (int num);  ; std::string IntToStr (int num);  ; std::string Message (const std::string &msg, const std::string &location);  ; void * ToDeclProp (clang::Decl *item);  . Variables; cling::Interpreter * gInterp;  . Function Documentation. ◆ AddSpace(). std::string AddSpace ; (; const std::string & ; txt). inline . Definition at line 266 of file Scanner.cxx. ◆ APIntToLong(). long APIntToLong ; (; const llvm::APInt & ; num). inline . Definition at line 147 of file Scanner.cxx. ◆ APIntToSize(). size_t APIntToSize ; (; const llvm::APInt & ; num). inline . Definition at line 140 of file Scanner.cxx. ◆ APIntToStr(). std::string APIntToStr ; (; const llvm::APInt & ; num). inline . Definition at line 154 of file Scanner.cxx. ◆ IntToStd(). std::string IntToStd ; (; int ; num). inline . Definition at line 170 of file Scanner.cxx. ◆ IntToStr(). std::string IntToStr ; (; int ; num). inline . Definition at line 161 of file Scanner.cxx. ◆ Message(). std::string Message ; (; const std::string & ; msg, . co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Scanner_8cxx.html:96,Load,Loading,96,doc/master/Scanner_8cxx.html,https://root.cern,https://root.cern/doc/master/Scanner_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/dictgen/src/Scanner.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Scanner.cxx. Go to the documentation of this file. 1// @(#)root/utils/src:$Id$; 2// Author: Philippe Canal November 2011 ; originated from Zdenek Culik 16/04/2010 and Velislava Spasova.; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/rootcint. *; 10 *************************************************************************/; 11 ; 12#include ""Scanner.h""; 13#include ""clang/AST/ASTConsumer.h""; 14#include ""clang/Basic/SourceLocation.h""; 15#include ""clang/Basic/SourceManager.h""; 16#include ""llvm/ADT/SmallSet.h""; 17#include ""clang/Sema/Sema.h""; 18#include ""clang/Frontend/CompilerInstance.h""; 19 ; 20#include ""cling/Interpreter/Interpreter.h""; 21#include ""llvm/Support/Path.h""; 22 ; 23#include ""TClassEdit.h""; 24 ; 25#include <iostream>; 26#include <sstream> // class ostringstream; 27#include ""llvm/ADT/StringExtras.h""; 28 ; 29#include ""SelectionRules.h""; 30 ; 31namespace {; 32 ; 33 class RPredicateIsSameNamespace; 34 {; 35 private:; 36 clang::NamespaceDecl *fTarget;; 37 public:; 38 RPredicateIsSameNamespace(clang::NamespaceDecl *target) : fTarget(target) {}; 39 ; 40 bool operator()(const RScanner::AnnotatedNamespaceDecl& element); 41 {; 42 return (fTarget == element);; 43 }; 44 };; 45 ; 46template<class T>; 47inline static bool IsElementPresent(const std::vector<T> &v, const T &el){; 48 return std::find(v.begin(),v.end(),el) != v.end();; 49}; 50 ; 51template<class T>; 52inline static bool IsElementPresent(const std::vector<const T*> &v, T *el){; 53 return std::find(v.begin(),v.end(),el) != v.end();; 54}; 55 ; 56}; 57 ; 58using namespace ROOT;; 59using namespace clang;; 60 ; 61extern cling::Interpreter *gInterp;; 62 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Scanner_8cxx_source.html:93,Load,Loading,93,doc/master/Scanner_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Scanner_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/dictgen/src/rootcling_impl.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Enumerations |; Functions |; Variables ; rootcling_impl.cxx File Reference. #include ""rootcling_impl.h""; #include ""rootclingCommandLineOptionsHelp.h""; #include ""RConfigure.h""; #include <ROOT/RConfig.hxx>; #include <ROOT/FoundationUtils.hxx>; #include ""snprintf.h""; #include <iostream>; #include <iomanip>; #include <memory>; #include <vector>; #include <algorithm>; #include <cstdio>; #include <errno.h>; #include <string>; #include <list>; #include <sstream>; #include <map>; #include <fstream>; #include <sys/stat.h>; #include <unordered_map>; #include <unordered_set>; #include <numeric>; #include <limits.h>; #include <unistd.h>; #include ""cling/Interpreter/Interpreter.h""; #include ""cling/Interpreter/InterpreterCallbacks.h""; #include ""cling/Interpreter/LookupHelper.h""; #include ""cling/Interpreter/Value.h""; #include ""clang/AST/CXXInheritance.h""; #include ""clang/Basic/Diagnostic.h""; #include ""clang/Frontend/CompilerInstance.h""; #include ""clang/Frontend/FrontendActions.h""; #include ""clang/Frontend/FrontendDiagnostic.h""; #include ""clang/Lex/HeaderSearch.h""; #include ""clang/Lex/Preprocessor.h""; #include ""clang/Lex/ModuleMap.h""; #include ""clang/Lex/Pragma.h""; #include ""clang/Sema/Sema.h""; #include ""clang/Serialization/ASTWriter.h""; #include ""cling/Utils/AST.h""; #include ""llvm/ADT/StringRef.h""; #include ""llvm/Support/CommandLine.h""; #include ""llvm/Support/Path.h""; #include ""llvm/Support/PrettyStackTrace.h""; #include ""llvm/Support/Signals.h""; #include ""RtypesCore.h""; #include ""TModuleGenerator.h""; #include ""TClassEdit.h""; #include ""TClingUtils.h""; #include ""RStl.h""; #include ""XMLReader.h""; #include ""LinkdefReader.h""; #include ""DictSelectionReader.h""; #include ""SelectionRules.h""; #include ""Scanner.h""; #include ""strlcpy.h""; #include ""OptionParser.h""; #include ""clang/Basic/LangOptions.def"". Includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx.html:103,Load,Loading,103,doc/master/rootcling__impl_8cxx.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/dictgen/src/rootcling_impl.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rootcling_impl.cxx. Go to the documentation of this file. 1// Authors: Axel Naumann, Philippe Canal, Danilo Piparo; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""rootcling_impl.h""; 12#include ""rootclingCommandLineOptionsHelp.h""; 13 ; 14#include ""RConfigure.h""; 15#include <ROOT/RConfig.hxx>; 16#include <ROOT/FoundationUtils.hxx>; 17#include ""snprintf.h""; 18 ; 19#include <iostream>; 20#include <iomanip>; 21#include <memory>; 22#include <vector>; 23#include <algorithm>; 24#include <cstdio>; 25 ; 26#include <errno.h>; 27#include <string>; 28#include <list>; 29#include <sstream>; 30#include <map>; 31#include <fstream>; 32#include <sys/stat.h>; 33#include <unordered_map>; 34#include <unordered_set>; 35#include <numeric>; 36 ; 37 ; 38#ifdef _WIN32; 39#ifdef system; 40#undef system; 41#endif; 42#undef UNICODE; 43#include <windows.h>; 44#include <Tlhelp32.h> // for MAX_MODULE_NAME32; 45#include <process.h>; 46#define PATH_MAX _MAX_PATH; 47#ifdef interface; 48// prevent error coming from clang/AST/Attrs.inc; 49#undef interface; 50#endif; 51#endif; 52 ; 53#ifdef __APPLE__; 54#include <mach-o/dyld.h>; 55#endif; 56 ; 57#ifdef R__FBSD; 58#include <sys/param.h>; 59#include <sys/user.h>; 60#include <sys/types.h>; 61#include <libutil.h>; 62#include <libprocstat.h>; 63#endif // R__FBSD; 64 ; 65#if !defined(R__WIN32); 66#include <limits.h>; 67#include <unistd.h>; 68#endif; 69 ; 70 ; 71#include ""cling/Interpreter/Interpreter.h""; 72#include ""cling/Interpreter/InterpreterCallbacks.h""; 73#include ""cling/Interpreter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:100,Load,Loading,100,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. foundation Directory Reference. Directory dependency graph for foundation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  inc;  ;  res;  ;  src;  ;  v7;  . corefoundation. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_ac6de6fe74d4e903f2b7ff14e6aeb864.html:88,Load,Loading,88,doc/master/dir_ac6de6fe74d4e903f2b7ff14e6aeb864.html,https://root.cern,https://root.cern/doc/master/dir_ac6de6fe74d4e903f2b7ff14e6aeb864.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. inc Directory Reference. Directory dependency graph for inc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  ROOT;  . Files;  DllImport.h;  ;  ESTLType.h;  ;  RStringView.h;  ;  Rstrstream.h;  ;  RtypesCore.h;  ;  RVersion.h;  ;  TClassEdit.h;  ;  TError.h;  ;  ThreadLocalStorage.h;  . corefoundationinc. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_eb0888ddaad283ef2de2c9df75228bfd.html:92,Load,Loading,92,doc/master/dir_eb0888ddaad283ef2de2c9df75228bfd.html,https://root.cern,https://root.cern/doc/master/dir_eb0888ddaad283ef2de2c9df75228bfd.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/DllImport.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; DllImport.h File Reference. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define R__DLLEXPORT   __attribute__ ((visibility (""default"")));  ; #define R__DllImport;  ; #define R__EXTERN   R__DllImport extern;  . Macro Definition Documentation. ◆ R__DLLEXPORT. #define R__DLLEXPORT   __attribute__ ((visibility (""default""))). Definition at line 32 of file DllImport.h. ◆ R__DllImport. #define R__DllImport. Definition at line 24 of file DllImport.h. ◆ R__EXTERN. #define R__EXTERN   R__DllImport extern. Definition at line 26 of file DllImport.h. corefoundationincDllImport.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DllImport_8h.html:99,Load,Loading,99,doc/master/DllImport_8h.html,https://root.cern,https://root.cern/doc/master/DllImport_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/DllImport.h File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; DllImport.h File Reference. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define R__DLLEXPORT   __attribute__ ((visibility (""default"")));  ; #define R__DllImport;  ; #define R__EXTERN   R__DllImport extern;  . Macro Definition Documentation. ◆ R__DLLEXPORT. #define R__DLLEXPORT   __attribute__ ((visibility (""default""))). Definition at line 32 of file DllImport.h. ◆ R__DllImport. #define R__DllImport. Definition at line 24 of file DllImport.h. ◆ R__EXTERN. #define R__EXTERN   R__DllImport extern. Definition at line 26 of file DllImport.h. corefoundationincDllImport.h. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:09:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/DllImport_8h.html:98,Load,Loading,98,doc/v632/DllImport_8h.html,https://root.cern,https://root.cern/doc/v632/DllImport_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/DllImport.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DllImport.h. Go to the documentation of this file. 1/* @(#)root/base:$Id$ */; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11/*; 12 This include file defines the DllImport macro; 13 to build DLLs under Windows OS.; 14 ; 15 They are defined as dummy for UNIX's; 16*/; 17 ; 18#ifndef ROOT_DllImport; 19#define ROOT_DllImport; 20 ; 21#if defined(WIN32); 22# define R__DllImport __declspec( dllimport ); 23#else; 24# define R__DllImport; 25#endif; 26# define R__EXTERN R__DllImport extern; 27 ; 28#ifndef R__DLLEXPORT; 29# ifdef _MSC_VER; 30# define R__DLLEXPORT __declspec(dllexport); 31# else; 32# define R__DLLEXPORT __attribute__ ((visibility (""default""))); 33# endif; 34#endif; 35 ; 36#endif. corefoundationincDllImport.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:10 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DllImport_8h_source.html:96,Load,Loading,96,doc/master/DllImport_8h_source.html,https://root.cern,https://root.cern/doc/master/DllImport_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ESTLType.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ESTLType.h. Go to the documentation of this file. 1// @(#)root/metautils:; 2// Author: Philippe Canal November 2013; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_ESTLType; 13#define ROOT_ESTLType; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// ROOT::ESTLType //; 19// //; 20// Enum describing STL collections and some std classes //; 21// This is used in TClassEdit, TStreamerInfo, TClassEdit //; 22// and TStreamerElement. //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26namespace ROOT {; 27 ; 28 enum ESTLType {; 29 kNotSTL = 0,; 30 kSTLvector = 1,; 31 kSTLlist = 2,; 32 kSTLdeque = 3,; 33 kSTLmap = 4,; 34 kSTLmultimap = 5,; 35 kSTLset = 6,; 36 kSTLmultiset = 7,; 37 kSTLbitset = 8,; 38 // Here the c++11 containers start. Order counts. For example,; 39 // tstreamerelements in written rootfiles carry a value and we cannot; 40 // introduce shifts.; 41 kSTLforwardlist = 9,; 42 kSTLunorderedset = 10,; 43 kSTLunorderedmultiset = 11,; 44 kSTLunorderedmap = 12,; 45 kSTLunorderedmultimap = 13,; 46 kROOTRVec = 14, /* ROOT type with STL container interface */; 47 kSTLend = 15,; 48 kSTLany = 300 /* TVirtualStreamerInfo::kSTL */,; 49 kSTLstring = 365 /* TVirtualStreamerInfo::kSTLstring */,; 50 };; 51 ; 52}; 53 ; 54#endif; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::ESTLTypeESTLTypeDefinition ESTLType.h:2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ESTLType_8h_source.html:95,Load,Loading,95,doc/master/ESTLType_8h_source.html,https://root.cern,https://root.cern/doc/master/ESTLType_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ESTLType.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. ESTLType.h. Go to the documentation of this file. 1// @(#)root/metautils:; 2// Author: Philippe Canal November 2013; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_ESTLType; 13#define ROOT_ESTLType; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// ROOT::ESTLType //; 19// //; 20// Enum describing STL collections and some std classes //; 21// This is used in TClassEdit, TStreamerInfo, TClassEdit //; 22// and TStreamerElement. //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26namespace ROOT {; 27 ; 28 enum ESTLType {; 29 kNotSTL = 0,; 30 kSTLvector = 1,; 31 kSTLlist = 2,; 32 kSTLdeque = 3,; 33 kSTLmap = 4,; 34 kSTLmultimap = 5,; 35 kSTLset = 6,; 36 kSTLmultiset = 7,; 37 kSTLbitset = 8,; 38 // Here the c++11 containers start. Order counts. For example,; 39 // tstreamerelements in written rootfiles carry a value and we cannot; 40 // introduce shifts.; 41 kSTLforwardlist = 9,; 42 kSTLunorderedset = 10,; 43 kSTLunorderedmultiset = 11,; 44 kSTLunorderedmap = 12,; 45 kSTLunorderedmultimap = 13,; 46 kROOTRVec = 14, /* ROOT type with STL container interface */; 47 kSTLend = 15,; 48 kSTLany = 300 /* TVirtualStreamerInfo::kSTL */,; 49 kSTLstring = 365 /* TVirtualStreamerInfo::kSTLstring */,; 50 };; 51 ; 52}; 53 ; 54#endif; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::ESTLTypeESTLTypeDefinition ESTLType.h:28",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/ESTLType_8h_source.html:94,Load,Loading,94,doc/v632/ESTLType_8h_source.html,https://root.cern,https://root.cern/doc/v632/ESTLType_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/RConfig.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; RConfig.hxx File Reference. #include ""../RVersion.h""; #include ""RConfigure.h"". Include dependency graph for RConfig.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define _NAME1_(name)   name;  ; #define _NAME2_(name1, name2)   _NAME1_(name1)name2;  ; #define _NAME3_(name1, name2, name3)   _NAME2_(name1,name2)name3;  ; #define _QUOTE_(name)   ""name"";  ; #define _R__DEPRECATED_634(REASON)   _R__DEPRECATED_LATER(REASON);  ; #define _R__DEPRECATED_636(REASON)   _R__DEPRECATED_LATER(REASON);  ; #define _R__DEPRECATED_700(REASON)   _R__DEPRECATED_LATER(REASON);  ; #define _R__DEPRECATED_LATER(REASON);  ; #define _R__JOIN3_(F, X, Y)   _NAME3_(F,X,Y);  ; #define _R__JOIN_(X, Y)   _NAME2_(X,Y);  ; #define _R__UNIQUE_(X)   _R__JOIN_(X,__LINE__);  ; #define _R__UNIQUE_DICT_(X)   _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__);  ; #define _R_DEPRECATED_REMOVE_NOW(REASON)   __attribute__((REMOVE_THIS_NOW));  ; #define R__ALWAYS_INLINE   inline;  ; #define R__ALWAYS_SUGGEST_ALTERNATIVE(ALTERNATIVE)    _R__DEPRECATED_LATER(""There is a superior alternative: "" ALTERNATIVE);  ; #define R__ANSISTREAM   /* ANSI C++ Standard Library conformant */;  ; #define R__DEPRECATED(MAJOR, MINOR, REASON)    _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON);  ; #define R__HIDDEN;  ; #define R__INTENTIONALLY_UNINIT_BEGIN;  ; #define R__INTENTIONALLY_UNINIT_END;  ; #define R__likely(expr)   expr;  ; #define R__NEVER_INLINE   inline;  ; #define R__SIZEDDELETE;  ; #define R__SSTREAM   /* use sstream or strstream header */;  ; #define R__SUGGEST_ALTERNATIVE(ALTERNATIVE);  ; #define R__unlikely(expr)   ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConfig_8hxx.html:104,Load,Loading,104,doc/master/RConfig_8hxx.html,https://root.cern,https://root.cern/doc/master/RConfig_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/RConfig.hxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; RConfig.hxx File Reference. #include ""../RVersion.h""; #include ""RConfigure.h"". Include dependency graph for RConfig.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define _NAME1_(name)   name;  ; #define _NAME2_(name1, name2)   _NAME1_(name1)name2;  ; #define _NAME3_(name1, name2, name3)   _NAME2_(name1,name2)name3;  ; #define _QUOTE_(name)   ""name"";  ; #define _R__DEPRECATED_634(REASON)   _R__DEPRECATED_LATER(REASON);  ; #define _R__DEPRECATED_636(REASON)   _R__DEPRECATED_LATER(REASON);  ; #define _R__DEPRECATED_700(REASON)   _R__DEPRECATED_LATER(REASON);  ; #define _R__DEPRECATED_LATER(REASON);  ; #define _R__JOIN3_(F, X, Y)   _NAME3_(F,X,Y);  ; #define _R__JOIN_(X, Y)   _NAME2_(X,Y);  ; #define _R__UNIQUE_(X)   _R__JOIN_(X,__LINE__);  ; #define _R__UNIQUE_DICT_(X)   _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__);  ; #define _R_DEPRECATED_REMOVE_NOW(REASON)   __attribute__((REMOVE_THIS_NOW));  ; #define R__ALWAYS_INLINE   inline;  ; #define R__ALWAYS_SUGGEST_ALTERNATIVE(ALTERNATIVE)    _R__DEPRECATED_LATER(""There is a superior alternative: "" ALTERNATIVE);  ; #define R__ANSISTREAM   /* ANSI C++ Standard Library conformant */;  ; #define R__DEPRECATED(MAJOR, MINOR, REASON)    _R__JOIN3_(_R__DEPRECATED_,MAJOR,MINOR)(""will be removed in ROOT v"" #MAJOR ""."" #MINOR "": "" REASON);  ; #define R__HIDDEN;  ; #define R__INTENTIONALLY_UNINIT_BEGIN;  ; #define R__INTENTIONALLY_UNINIT_END;  ; #define R__likely(expr)   expr;  ; #define R__NEVER_INLINE   inline;  ; #define R__SIZEDDELETE;  ; #define R__SSTREAM   /* use sstream or strstream header */;  ; #define R__SUGGEST_ALTERNATIVE(ALTERNATIVE);  ; #define R__unlikely(expr)   exp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RConfig_8hxx.html:103,Load,Loading,103,doc/v632/RConfig_8hxx.html,https://root.cern,https://root.cern/doc/v632/RConfig_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/RConfig.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RConfig.hxx. Go to the documentation of this file. 1/* @(#)root/base:$Id$ */; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RConfig; 12#define ROOT_RConfig; 13 ; 14/*************************************************************************; 15 * *; 16 * RConfig *; 17 * *; 18 * Defines used by ROOT. *; 19 * *; 20 *************************************************************************/; 21 ; 22#include ""../RVersion.h""; 23#include ""RConfigure.h""; 24 ; 25 ; 26/*---- new C++ features ------------------------------------------------------*/; 27 ; 28#if defined __has_feature; 29# if __has_feature(modules); 30# define R__CXXMODULES; 31# endif; 32#endif; 33 ; 34#define R__USE_SHADOW_CLASS; 35 ; 36/* Now required, thus defined by default for backward compatibility */; 37#define R__ANSISTREAM /* ANSI C++ Standard Library conformant */; 38#define R__SSTREAM /* use sstream or strstream header */; 39 ; 40#if defined(_MSC_VER); 41# if (_MSC_VER < 1910); 42# error ""ROOT requires Visual Studio 2017 or higher.""; 43# else; 44# define R__NULLPTR; 45# endif; 46#else; 47#if defined(__cplusplus) && (__cplusplus < 201703L); 48#error ""ROOT requires support for C++17 or higher.""; 49# if defined(__GNUC__) || defined(__clang__); 50#error ""Pass `-std=c++17` as compiler argument.""; 51# endif; 52# endif; 53#endif; 54 ; 55/*---- machines --------------------------------------------------------------*/; 56 ; 57#ifdef __hpux; 58 /* R__HPUX10 or R__HPUX11 is determined in the Makefile */; 59# define R__HPUX; 60# define R_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConfig_8hxx_source.html:101,Load,Loading,101,doc/master/RConfig_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RConfig_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/RLogger.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Enumerations |; Functions ; RLogger.hxx File ReferenceCore ROOT classes » Base ROOT classes | ROOT7 classes. #include <atomic>; #include <list>; #include <memory>; #include <mutex>; #include <sstream>; #include <string>; #include <utility>. Include dependency graph for RLogger.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Experimental::Detail::RLogBuilder;  Builds a diagnostic entry, emitted by the static RLogManager upon destruction of this builder, where - by definition - the RLogEntry has been completely built. More...;  ; class  ROOT::Experimental::RLogChannel;  A log configuration for a channel, e.g. More...;  ; class  ROOT::Experimental::RLogDiagCount;  Keep track of emitted errors and warnings. More...;  ; class  ROOT::Experimental::RLogEntry;  A diagnostic that can be emitted by the RLogManager. More...;  ; class  ROOT::Experimental::RLogHandler;  Abstract RLogHandler base class. More...;  ; struct  ROOT::Experimental::RLogLocation;  A diagnostic location, part of an RLogEntry. More...;  ; class  ROOT::Experimental::RLogManager;  A RLogHandler that multiplexes diagnostics to different client RLogHandlers and keeps track of the sum of RLogDiagCounts for all channels. More...;  ; class  ROOT::Experimental::RLogScopedDiagCount;  Object to count the number of warnings and errors emitted by a section of code, after construction of this type. More...;  ; class  ROOT::Experimental::RLogScopedVerbosity;  Change the verbosity level (global or specific to the RLogChannel passed to the constructor) for the lifetime of this object. More...;  . Namespaces; namespace  ROOT;  tbb:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RLogger_8hxx.html:104,Load,Loading,104,doc/master/RLogger_8hxx.html,https://root.cern,https://root.cern/doc/master/RLogger_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/RLogger.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RLogger.hxx. Go to the documentation of this file. 1/// \file ROOT/RLogger.hxx; 2/// \ingroup Base ROOT7; 3/// \author Axel Naumann <axel@cern.ch>; 4/// \date 2015-03-29; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RLogger; 17#define ROOT7_RLogger; 18 ; 19#include <atomic>; 20#include <list>; 21#include <memory>; 22#include <mutex>; 23#include <sstream>; 24#include <string>; 25#include <utility>; 26 ; 27namespace ROOT {; 28namespace Experimental {; 29 ; 30class RLogEntry;; 31class RLogManager;; 32 ; 33/**; 34 Kinds of diagnostics.; 35 */; 36enum class ELogLevel : unsigned char {; 37 kUnset,; 38 kFatal, ///< An error which causes further processing to be unreliable; 39 kError, ///< An error; 40 kWarning, ///< Warnings about likely unexpected behavior; 41 kInfo, ///< Informational messages; used for instance for tracing; 42 kDebug ///< Debug information; only useful for developers; can have added verbosity up to 255-kDebug.; 43};; 44 ; 45inline ELogLevel operator+(ELogLevel severity, int offset); 46{; 47 return static_cast<ELogLevel>(static_cast<int>(severity) + offset);; 48}; 49 ; 50/**; 51 Keep track of emitted errors and warnings.; 52 */; 53class RLogDiagCount {; 54protected:; 55 std::atomic<long long> fNumWarnings{0ll}; /// Number of warnings.; 56 std::atomic<long long> fNumErrors{0ll}; /// Number of errors.; 57 std::atomic<long long> fNumF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RLogger_8hxx_source.html:101,Load,Loading,101,doc/master/RLogger_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RLogger_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/RRangeCast.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RRangeCast.hxx. Go to the documentation of this file. 1/// \file ROOT/RRangeCast.hxx; 2/// \ingroup Base StdExt; 3/// \author Jonas Rembser <jonas.rembser@cern.ch>; 4/// \date 2021-08-04; 5 ; 6/*************************************************************************; 7 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 8 * All rights reserved. *; 9 * *; 10 * For the licensing terms see $ROOTSYS/LICENSE. *; 11 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 12 *************************************************************************/; 13 ; 14#ifndef ROOT_RRangeCast; 15#define ROOT_RRangeCast; 16 ; 17#include ""ROOT/RSpan.hxx""; 18 ; 19#include <cassert>; 20#include <iterator>; 21#include <type_traits>; 22#include <utility>; 23 ; 24namespace ROOT {; 25namespace Internal {; 26 ; 27template <typename T>; 28struct RBaseType {; 29 using type = typename std::remove_pointer<typename std::decay<T>::type>::type;; 30};; 31 ; 32#if (__cplusplus < 201700L); 33 ; 34template <typename T, bool isDynamic = true, bool isPolymorphic = std::is_polymorphic<RBaseType<T>>::value>; 35struct RCast {; 36 template <typename U>; 37 static T cast(U &&u); 38 {; 39 return dynamic_cast<T>(u);; 40 }; 41};; 42 ; 43template <typename T>; 44struct RCast<T, false, false> {; 45 template <typename U>; 46 static T cast(U &&u); 47 {; 48 return static_cast<T>(u);; 49 }; 50};; 51 ; 52template <typename T>; 53struct RCast<T, false, true> {; 54 template <typename U>; 55 static T cast(U &&u); 56 {; 57 assert(dynamic_cast<T>(u));; 58 return static_cast<T>(u);; 59 }; 60};; 61 ; 62#endif; 63 ; 64// For SFINAE-based checks for the existence of the `begin` and `end` methods.; 65template <typename T>; 66constexpr auto hasBeginEnd(int) -> decltype(std::begin(std::declval<T>()), std::end(std::declval<T>()), true); 67{; 68 return true;; 69}; 70 ; 71template ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RRangeCast_8hxx_source.html:104,Load,Loading,104,doc/master/RRangeCast_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RRangeCast_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/RRangeCast.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RRangeCast.hxx. Go to the documentation of this file. 1/// \file ROOT/RRangeCast.hxx; 2/// \ingroup Base StdExt; 3/// \author Jonas Rembser <jonas.rembser@cern.ch>; 4/// \date 2021-08-04; 5 ; 6/*************************************************************************; 7 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 8 * All rights reserved. *; 9 * *; 10 * For the licensing terms see $ROOTSYS/LICENSE. *; 11 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 12 *************************************************************************/; 13 ; 14#ifndef ROOT_RRangeCast; 15#define ROOT_RRangeCast; 16 ; 17#include ""ROOT/RSpan.hxx""; 18 ; 19#include <cassert>; 20#include <iterator>; 21#include <type_traits>; 22#include <utility>; 23 ; 24namespace ROOT {; 25namespace Internal {; 26 ; 27template <typename T>; 28struct RBaseType {; 29 using type = typename std::remove_pointer<typename std::decay<T>::type>::type;; 30};; 31 ; 32#if (__cplusplus < 201700L); 33 ; 34template <typename T, bool isDynamic = true, bool isPolymorphic = std::is_polymorphic<RBaseType<T>>::value>; 35struct RCast {; 36 template <typename U>; 37 static T cast(U &&u); 38 {; 39 return dynamic_cast<T>(u);; 40 }; 41};; 42 ; 43template <typename T>; 44struct RCast<T, false, false> {; 45 template <typename U>; 46 static T cast(U &&u); 47 {; 48 return static_cast<T>(u);; 49 }; 50};; 51 ; 52template <typename T>; 53struct RCast<T, false, true> {; 54 template <typename U>; 55 static T cast(U &&u); 56 {; 57 assert(dynamic_cast<T>(u));; 58 return static_cast<T>(u);; 59 }; 60};; 61 ; 62#endif; 63 ; 64// For SFINAE-based checks for the existence of the `begin` and `end` methods.; 65template <typename T>; 66constexpr auto hasBeginEnd(int) -> decltype(std::begin(std::declval<T>()), std::end(std::declval<T>()), true); 67{; 68 return true;; 69}; 70 ; 71template <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RRangeCast_8hxx_source.html:103,Load,Loading,103,doc/v632/RRangeCast_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RRangeCast_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/StringUtils.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. StringUtils.hxx. Go to the documentation of this file. 1/// \file ROOT/StringUtils.hxx; 2/// \ingroup Base StdExt; 3/// \author Jonas Rembser <jonas.rembser@cern.ch>; 4/// \date 2021-08-09; 5 ; 6/*************************************************************************; 7 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 8 * All rights reserved. *; 9 * *; 10 * For the licensing terms see $ROOTSYS/LICENSE. *; 11 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 12 *************************************************************************/; 13 ; 14#ifndef ROOT_StringUtils; 15#define ROOT_StringUtils; 16 ; 17#include <string_view>; 18 ; 19#include <string>; 20#include <vector>; 21#include <numeric>; 22 ; 23namespace ROOT {; 24 ; 25std::vector<std::string> Split(std::string_view str, std::string_view delims, bool skipEmpty = false);; 26 ; 27/**; 28 * \brief Concatenate a list of strings with a separator; 29 * \tparam StringCollection_t Any container of strings (vector, initializer_list, ...); 30 * \param[in] sep Separator inbetween the strings.; 31 * \param[in] strings container of strings; 32 * \return the sep-delimited concatenation of strings; 33 */; 34template <class StringCollection_t>; 35std::string Join(const std::string &sep, StringCollection_t &&strings); 36{; 37 if (strings.empty()); 38 return """";; 39 return std::accumulate(std::next(std::begin(strings)), std::end(strings), strings[0],; 40 [&sep](auto const &a, auto const &b) { return a + sep + b; });; 41}; 42 ; 43} // namespace ROOT; 44 ; 45#endif; b#define b(i)Definition RSha256.hxx:100; a#define a(i)Definition RSha256.hxx:99; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::Joinstd::string Join(const std::string &sep, StringCollection_t &&strings)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/StringUtils_8hxx_source.html:105,Load,Loading,105,doc/master/StringUtils_8hxx_source.html,https://root.cern,https://root.cern/doc/master/StringUtils_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/ROOT/StringUtils.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. StringUtils.hxx. Go to the documentation of this file. 1/// \file ROOT/StringUtils.hxx; 2/// \ingroup Base StdExt; 3/// \author Jonas Rembser <jonas.rembser@cern.ch>; 4/// \date 2021-08-09; 5 ; 6/*************************************************************************; 7 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 8 * All rights reserved. *; 9 * *; 10 * For the licensing terms see $ROOTSYS/LICENSE. *; 11 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 12 *************************************************************************/; 13 ; 14#ifndef ROOT_StringUtils; 15#define ROOT_StringUtils; 16 ; 17#include <string_view>; 18 ; 19#include <string>; 20#include <vector>; 21#include <numeric>; 22 ; 23namespace ROOT {; 24 ; 25std::vector<std::string> Split(std::string_view str, std::string_view delims, bool skipEmpty = false);; 26 ; 27/**; 28 * \brief Concatenate a list of strings with a separator; 29 * \tparam StringCollection_t Any container of strings (vector, initializer_list, ...); 30 * \param[in] sep Separator inbetween the strings.; 31 * \param[in] strings container of strings; 32 * \return the sep-delimited concatenation of strings; 33 */; 34template <class StringCollection_t>; 35std::string Join(const std::string &sep, StringCollection_t &&strings); 36{; 37 if (strings.empty()); 38 return """";; 39 return std::accumulate(std::next(std::begin(strings)), std::end(strings), strings[0],; 40 [&sep](auto const &a, auto const &b) { return a + sep + b; });; 41}; 42 ; 43} // namespace ROOT; 44 ; 45#endif; b#define b(i)Definition RSha256.hxx:100; a#define a(i)Definition RSha256.hxx:99; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::Joinstd::string Join(const std::string &sep, StringCollection_t &&strings)C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/StringUtils_8hxx_source.html:104,Load,Loading,104,doc/v632/StringUtils_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/StringUtils_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/RVersion.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; RVersion.h File Reference. #include ""ROOT/RVersion.hxx"". Include dependency graph for RVersion.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ROOT_RELEASE_TIME   ""00:00:00"" /* not updated anymore */;  . Macro Definition Documentation. ◆ ROOT_RELEASE_TIME. #define ROOT_RELEASE_TIME   ""00:00:00"" /* not updated anymore */. Definition at line 6 of file RVersion.h. corefoundationincRVersion.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVersion_8h.html:98,Load,Loading,98,doc/master/RVersion_8h.html,https://root.cern,https://root.cern/doc/master/RVersion_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/RtypesCore.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs |; Variables ; RtypesCore.h File Reference. #include <ROOT/RConfig.hxx>; #include ""DllImport.h""; #include <cstddef>. Include dependency graph for RtypesCore.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef float Angle_t;  ; typedef double Axis_t;  ; typedef bool Bool_t;  ; typedef unsigned char Byte_t;  ; typedef char Char_t;  ; typedef short Color_t;  ; typedef double Coord_t;  ; typedef double Double32_t;  ; typedef double Double_t;  ; typedef float Float16_t;  ; typedef float Float_t;  ; typedef short Font_t;  ; typedef int Int_t;  ; typedef long long Long64_t;  ; typedef long Long_t;  ; typedef long double LongDouble_t;  ; typedef long Longptr_t;  ; typedef short Marker_t;  ; typedef const char Option_t;  ; typedef float Real_t;  ; typedef short SCoord_t;  ; typedef int Seek_t;  ; typedef short Short_t;  ; typedef float Size_t;  ; typedef int Ssiz_t;  ; typedef double Stat_t;  ; typedef short Style_t;  ; typedef char Text_t;  ; typedef unsigned char UChar_t;  ; typedef unsigned int UInt_t;  ; typedef unsigned long long ULong64_t;  ; typedef unsigned long ULong_t;  ; typedef unsigned long ULongptr_t;  ; typedef unsigned short UShort_t;  ; typedef short Version_t;  ; typedef short Width_t;  . Variables; Int_t gDebug;  ; constexpr ULong_t kBitsPerByte = 8;  ; constexpr Bool_t kFALSE = false;  ; constexpr Int_t kMaxChar = kMaxUChar >> 1;  ; constexpr Int_t kMaxInt = Int_t(kMaxUInt >> 1);  ; constexpr Long_t kMaxLong = Long_t(kMaxULong >> 1);  ; constexpr Long64_t kMaxLong64 = Long64_t(kMaxULong64 >> 1);  ; constexpr Int_t kMaxShort = kMaxUShort >> 1;  ; constexpr Int_t kMaxUChar = 256;  ; constexpr UInt_t kMaxUI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RtypesCore_8h.html:100,Load,Loading,100,doc/master/RtypesCore_8h.html,https://root.cern,https://root.cern/doc/master/RtypesCore_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/RtypesCore.h File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs |; Variables ; RtypesCore.h File Reference. #include <ROOT/RConfig.hxx>; #include ""DllImport.h""; #include <cstddef>. Include dependency graph for RtypesCore.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef float Angle_t;  ; typedef double Axis_t;  ; typedef bool Bool_t;  ; typedef unsigned char Byte_t;  ; typedef char Char_t;  ; typedef short Color_t;  ; typedef double Coord_t;  ; typedef double Double32_t;  ; typedef double Double_t;  ; typedef float Float16_t;  ; typedef float Float_t;  ; typedef short Font_t;  ; typedef int Int_t;  ; typedef long long Long64_t;  ; typedef long Long_t;  ; typedef long double LongDouble_t;  ; typedef long Longptr_t;  ; typedef short Marker_t;  ; typedef const char Option_t;  ; typedef float Real_t;  ; typedef short SCoord_t;  ; typedef int Seek_t;  ; typedef short Short_t;  ; typedef float Size_t;  ; typedef int Ssiz_t;  ; typedef double Stat_t;  ; typedef short Style_t;  ; typedef char Text_t;  ; typedef unsigned char UChar_t;  ; typedef unsigned int UInt_t;  ; typedef unsigned long long ULong64_t;  ; typedef unsigned long ULong_t;  ; typedef unsigned long ULongptr_t;  ; typedef unsigned short UShort_t;  ; typedef short Version_t;  ; typedef short Width_t;  . Variables; Int_t gDebug;  ; constexpr ULong_t kBitsPerByte = 8;  ; constexpr Bool_t kFALSE = false;  ; constexpr Int_t kMaxChar = kMaxUChar >> 1;  ; constexpr Int_t kMaxInt = Int_t(kMaxUInt >> 1);  ; constexpr Long_t kMaxLong = Long_t(kMaxULong >> 1);  ; constexpr Long64_t kMaxLong64 = Long64_t(kMaxULong64 >> 1);  ; constexpr Int_t kMaxShort = kMaxUShort >> 1;  ; constexpr Int_t kMaxUChar = 256;  ; constexpr UInt_t kMaxUIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RtypesCore_8h.html:99,Load,Loading,99,doc/v632/RtypesCore_8h.html,https://root.cern,https://root.cern/doc/v632/RtypesCore_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/RtypesCore.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RtypesCore.h. Go to the documentation of this file. 1/* @(#)root/foundation:$Id$ */; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2014, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RtypesCore; 12#define ROOT_RtypesCore; 13 ; 14//////////////////////////////////////////////////////////////////////////; 15// //; 16// RtypesCore //; 17// //; 18// Basic types used by ROOT and required by TInterpreter. //; 19// //; 20//////////////////////////////////////////////////////////////////////////; 21 ; 22 ; 23#include <ROOT/RConfig.hxx>; 24 ; 25#include ""DllImport.h""; 26 ; 27#ifndef R__LESS_INCLUDES; 28#include <cstddef> // size_t, NULL; 29#endif; 30 ; 31//---- Tag used by rootcling to determine constructor used for I/O.; 32 ; 33class TRootIOCtor;; 34 ; 35//---- types -------------------------------------------------------------------; 36 ; 37typedef char Char_t; //Signed Character 1 byte (char); 38typedef unsigned char UChar_t; //Unsigned Character 1 byte (unsigned char); 39typedef short Short_t; //Signed Short integer 2 bytes (short); 40typedef unsigned short UShort_t; //Unsigned Short integer 2 bytes (unsigned short); 41#ifdef R__INT16; 42typedef long Int_t; //Signed integer 4 bytes; 43typedef unsigned long UInt_t; //Unsigned integer 4 bytes; 44#else; 45typedef int Int_t; //Signed integer 4 bytes (int); 46typedef unsigned int UInt_t; //Unsigned integer 4 bytes (unsigned int); 47#endif; 48#ifdef R__B64 // Note: Long_t and ULong_t are currently not portable types; 49typedef int Seek_t; //File pointer (int); 50typedef long Long_t; //Signed long integer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RtypesCore_8h_source.html:97,Load,Loading,97,doc/master/RtypesCore_8h_source.html,https://root.cern,https://root.cern/doc/master/RtypesCore_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/inc/TError.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros |; Typedefs |; Functions |; Variables ; TError.h File Reference. #include <DllImport.h>; #include ""RtypesCore.h""; #include <ROOT/RConfig.hxx>; #include <cstdarg>; #include <functional>. Include dependency graph for TError.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Macros; #define R__ASSERT(e);  Checks condition e and reports a fatal error if it's false. ;  ; #define R__CHECK(e);  Checks condition e and reports a warning message if it's false. ;  . Typedefs; typedef void(* ErrorHandlerFunc_t) (int level, Bool_t abort, const char *location, const char *msg);  ; using ROOT::Internal::ErrorSystemMsgHandlerFunc_t = std::function< const char *()>;  Retrieves the error string associated with the last system error. ;  . Functions; void AbstractMethod (const char *method);  This function can be used in abstract base classes in case one does not want to make the class a ""real"" (in C++ sense) ABC. ;  ; void Break (const char *location, const char *msgfmt,...);  Use this function in case an error occurred. ;  ; void DefaultErrorHandler (int level, Bool_t abort, const char *location, const char *msg);  The default error handler function. ;  ; void Error (const char *location, const char *msgfmt,...);  Use this function in case an error occurred. ;  ; void ErrorHandler (int level, const char *location, const char *fmt, std::va_list va);  General error handler function. It calls the user set error handler. ;  ; void Fatal (const char *location, const char *msgfmt,...);  Use this function in case of a fatal error. It will abort the program. ;  ; ErrorHandlerFunc_t Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8h.html:96,Load,Loading,96,doc/master/TError_8h.html,https://root.cern,https://root.cern/doc/master/TError_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/res/RConversionRuleParser.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RConversionRuleParser.h. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#ifndef R__CONVERSION_RULE_PARSER_H; 5#define R__CONVERSION_RULE_PARSER_H; 6 ; 7#include <list>; 8#include <map>; 9#include <string>; 10#include <ostream>; 11 ; 12#include ""RConfigure.h""; 13 ; 14#include ""TSchemaType.h""; 15#include ""DllImport.h""; 16 ; 17namespace ROOT; 18{; 19 //---------------------------------------------------------------------------; 20 // Global variables; 21 //---------------------------------------------------------------------------; 22 typedef std::map<std::string, std::string> SchemaRuleMap_t;; 23 typedef std::map<std::string, std::list<SchemaRuleMap_t> > SchemaRuleClassMap_t;; 24 R__EXTERN SchemaRuleClassMap_t gReadRules;; 25 R__EXTERN SchemaRuleClassMap_t gReadRawRules;; 26 ; 27 typedef std::map<std::string, ROOT::Internal::TSchemaType> MembersTypeMap_t;; 28 ; 29 //---------------------------------------------------------------------------; 30 // Create the data member name-type map; 31 //---------------------------------------------------------------------------; 32 // void CreateNameTypeMap( const clang::CXXRecordDecl &cl, MembersTypeMap_t& members );; 33 ; 34 //---------------------------------------------------------------------------; 35 // Check if given rule contains references to valid data members; 36 //---------------------------------------------------------------------------; 37 bool HasValidDataMembers( SchemaRuleMap_t& rule, MembersTypeMap_t& members,; 38 std::string& error_string);; 39 ; 40 //---------------------------------------------------------------------------; 41 // Write the conversion function for Read rule; 42 //---------------------------------------------------------------------------; 43 void WriteReadRuleFunc( SchemaRuleMap_t& rule",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8h_source.html:108,Load,Loading,108,doc/master/RConversionRuleParser_8h_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/res/RConversionRuleParser.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RConversionRuleParser.h. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#ifndef R__CONVERSION_RULE_PARSER_H; 5#define R__CONVERSION_RULE_PARSER_H; 6 ; 7#include <list>; 8#include <map>; 9#include <string>; 10#include <ostream>; 11 ; 12#include ""RConfigure.h""; 13 ; 14#include ""TSchemaType.h""; 15#include ""DllImport.h""; 16 ; 17namespace ROOT; 18{; 19 //---------------------------------------------------------------------------; 20 // Global variables; 21 //---------------------------------------------------------------------------; 22 typedef std::map<std::string, std::string> SchemaRuleMap_t;; 23 typedef std::map<std::string, std::list<SchemaRuleMap_t> > SchemaRuleClassMap_t;; 24 R__EXTERN SchemaRuleClassMap_t gReadRules;; 25 R__EXTERN SchemaRuleClassMap_t gReadRawRules;; 26 ; 27 typedef std::map<std::string, ROOT::Internal::TSchemaType> MembersTypeMap_t;; 28 ; 29 //---------------------------------------------------------------------------; 30 // Create the data member name-type map; 31 //---------------------------------------------------------------------------; 32 // void CreateNameTypeMap( const clang::CXXRecordDecl &cl, MembersTypeMap_t& members );; 33 ; 34 //---------------------------------------------------------------------------; 35 // Check if given rule contains references to valid data members; 36 //---------------------------------------------------------------------------; 37 bool HasValidDataMembers( SchemaRuleMap_t& rule, MembersTypeMap_t& members,; 38 std::string& error_string);; 39 ; 40 //---------------------------------------------------------------------------; 41 // Write the conversion function for Read rule; 42 //---------------------------------------------------------------------------; 43 void WriteReadRuleFunc( SchemaRuleMap_t& rule,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RConversionRuleParser_8h_source.html:107,Load,Loading,107,doc/v632/RConversionRuleParser_8h_source.html,https://root.cern,https://root.cern/doc/v632/RConversionRuleParser_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/res/ROOT/RSha256.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; RSha256.hxx File Reference. #include ""Rtypes.h""; #include <iostream>; #include <stdlib.h>; #include <stdint.h>. Include dependency graph for RSha256.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Internal::SHA256::sha256_t;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  ; namespace  ROOT::Internal::SHA256;  . Macros; #define _SHA256_UNROLL;  ; #define _SHA256_UNROLL2;  ; #define a(i)   T[(0 - (i)) & 7];  ; #define b(i)   T[(1 - (i)) & 7];  ; #define blk0(i)   (W[i] = data[i]);  ; #define blk2(i)   (W[i & 15] += s1(W[(i - 2) & 15]) + W[(i - 7) & 15] + s0(W[(i - 15) & 15]));  ; #define c(i)   T[(2 - (i)) & 7];  ; #define Ch(x, y, z)   (z ^ (x & (y ^ z)));  ; #define d(i)   T[(3 - (i)) & 7];  ; #define e(i)   T[(4 - (i)) & 7];  ; #define f(i)   T[(5 - (i)) & 7];  ; #define g(i)   T[(6 - (i)) & 7];  ; #define h(i)   T[(7 - (i)) & 7];  ; #define Maj(x, y, z)   ((x & y) | (z & (x | y)));  ; #define R(a, b, c, d, e, f, g, h, i);  ; #define ROTL16(v, n)   (U16V((uint16_t)(v) << (n)) | ((uint16_t)(v) >> (16 - (n))));  ; #define ROTL32(v, n)   (U32V((uint32_t)(v) << (n)) | ((uint32_t)(v) >> (32 - (n))));  ; #define ROTL64(v, n)   (U64V((uint64_t)(v) << (n)) | ((uint64_t)(v) >> (64 - (n))));  ; #define ROTL8(v, n)   (U8V((uint8_t)(v) << (n)) | ((uint8_t)(v) >> (8 - (n))));  ; #define ROTR16(v, n)   ROTL16(v, 16 - (n));  ; #define ROTR32(v, n)   ROTL32(v, 32 - (n));  ; #define",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSha256_8hxx.html:104,Load,Loading,104,doc/master/RSha256_8hxx.html,https://root.cern,https://root.cern/doc/master/RSha256_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/res/ROOT/RSha256.hxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; RSha256.hxx File Reference. #include ""Rtypes.h""; #include <iostream>; #include <stdlib.h>; #include <stdint.h>. Include dependency graph for RSha256.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Internal::SHA256::sha256_t;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  ; namespace  ROOT::Internal::SHA256;  . Macros; #define _SHA256_UNROLL;  ; #define _SHA256_UNROLL2;  ; #define a(i)   T[(0 - (i)) & 7];  ; #define b(i)   T[(1 - (i)) & 7];  ; #define blk0(i)   (W[i] = data[i]);  ; #define blk2(i)   (W[i & 15] += s1(W[(i - 2) & 15]) + W[(i - 7) & 15] + s0(W[(i - 15) & 15]));  ; #define c(i)   T[(2 - (i)) & 7];  ; #define Ch(x, y, z)   (z ^ (x & (y ^ z)));  ; #define d(i)   T[(3 - (i)) & 7];  ; #define e(i)   T[(4 - (i)) & 7];  ; #define f(i)   T[(5 - (i)) & 7];  ; #define g(i)   T[(6 - (i)) & 7];  ; #define h(i)   T[(7 - (i)) & 7];  ; #define Maj(x, y, z)   ((x & y) | (z & (x | y)));  ; #define R(a, b, c, d, e, f, g, h, i);  ; #define ROTL16(v, n)   (U16V((uint16_t)(v) << (n)) | ((uint16_t)(v) >> (16 - (n))));  ; #define ROTL32(v, n)   (U32V((uint32_t)(v) << (n)) | ((uint32_t)(v) >> (32 - (n))));  ; #define ROTL64(v, n)   (U64V((uint64_t)(v) << (n)) | ((uint64_t)(v) >> (64 - (n))));  ; #define ROTL8(v, n)   (U8V((uint8_t)(v) << (n)) | ((uint8_t)(v) >> (8 - (n))));  ; #define ROTR16(v, n)   ROTL16(v, 16 - (n));  ; #define ROTR32(v, n)   ROTL32(v, 32 - (n));  ; #define ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RSha256_8hxx.html:103,Load,Loading,103,doc/v632/RSha256_8hxx.html,https://root.cern,https://root.cern/doc/v632/RSha256_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/res/ROOT/RSha256.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RSha256.hxx. Go to the documentation of this file. 1// Author: Danilo Piparo May 2018; 2// Inspired by public domain code of Igor Pavlov: https://github.com/jb55/sha256.c; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_RSHA; 13#define ROOT_RSHA; 14 ; 15#include ""Rtypes.h""; 16 ; 17#include <iostream>; 18#include <stdlib.h>; 19#include <stdint.h>; 20 ; 21 ; 22namespace ROOT {; 23namespace Internal {; 24namespace SHA256 {; 25 ; 26#ifdef _MSC_VER; 27 ; 28#define ROTL32(v, n) _rotl((v), (n)); 29#define ROTL64(v, n) _rotl64((v), (n)); 30 ; 31#define ROTR32(v, n) _rotr((v), (n)); 32#define ROTR64(v, n) _rotr64((v), (n)); 33 ; 34#else; 35 ; 36#define U8V(v) ((uint8_t)(v)&0xFFU); 37#define U16V(v) ((uint16_t)(v)&0xFFFFU); 38#define U32V(v) ((uint32_t)(v)&0xFFFFFFFFU); 39#define U64V(v) ((uint64_t)(v)&0xFFFFFFFFFFFFFFFFU); 40 ; 41#define ROTL32(v, n) (U32V((uint32_t)(v) << (n)) | ((uint32_t)(v) >> (32 - (n)))); 42 ; 43// tests fail if we don't have this cast...; 44#define ROTL64(v, n) (U64V((uint64_t)(v) << (n)) | ((uint64_t)(v) >> (64 - (n)))); 45 ; 46#define ROTR32(v, n) ROTL32(v, 32 - (n)); 47#define ROTR64(v, n) ROTL64(v, 64 - (n)); 48 ; 49#endif; 50 ; 51#define ROTL8(v, n) (U8V((uint8_t)(v) << (n)) | ((uint8_t)(v) >> (8 - (n)))); 52 ; 53#define ROTL16(v, n) (U16V((uint16_t)(v) << (n)) | ((uint16_t)(v) >> (16 - (n)))); 54 ; 55#define ROTR8(v, n) ROTL8(v, 8 - (n)); 56#define ROTR16(v, n) ROTL16(v, 16 - (n)); 57 ; 58#define SHA256_DIGEST_SIZE 32; 59 ; 60typedef struct sha256_t {; 61 uint32_t stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSha256_8hxx_source.html:101,Load,Loading,101,doc/master/RSha256_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RSha256_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/res/ROOT/RSha256.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RSha256.hxx. Go to the documentation of this file. 1// Author: Danilo Piparo May 2018; 2// Inspired by public domain code of Igor Pavlov: https://github.com/jb55/sha256.c; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_RSHA; 13#define ROOT_RSHA; 14 ; 15#include ""Rtypes.h""; 16 ; 17#include <iostream>; 18#include <stdlib.h>; 19#include <stdint.h>; 20 ; 21 ; 22namespace ROOT {; 23namespace Internal {; 24namespace SHA256 {; 25 ; 26#ifdef _MSC_VER; 27 ; 28#define ROTL32(v, n) _rotl((v), (n)); 29#define ROTL64(v, n) _rotl64((v), (n)); 30 ; 31#define ROTR32(v, n) _rotr((v), (n)); 32#define ROTR64(v, n) _rotr64((v), (n)); 33 ; 34#else; 35 ; 36#define U8V(v) ((uint8_t)(v)&0xFFU); 37#define U16V(v) ((uint16_t)(v)&0xFFFFU); 38#define U32V(v) ((uint32_t)(v)&0xFFFFFFFFU); 39#define U64V(v) ((uint64_t)(v)&0xFFFFFFFFFFFFFFFFU); 40 ; 41#define ROTL32(v, n) (U32V((uint32_t)(v) << (n)) | ((uint32_t)(v) >> (32 - (n)))); 42 ; 43// tests fail if we don't have this cast...; 44#define ROTL64(v, n) (U64V((uint64_t)(v) << (n)) | ((uint64_t)(v) >> (64 - (n)))); 45 ; 46#define ROTR32(v, n) ROTL32(v, 32 - (n)); 47#define ROTR64(v, n) ROTL64(v, 64 - (n)); 48 ; 49#endif; 50 ; 51#define ROTL8(v, n) (U8V((uint8_t)(v) << (n)) | ((uint8_t)(v) >> (8 - (n)))); 52 ; 53#define ROTL16(v, n) (U16V((uint16_t)(v) << (n)) | ((uint16_t)(v) >> (16 - (n)))); 54 ; 55#define ROTR8(v, n) ROTL8(v, 8 - (n)); 56#define ROTR16(v, n) ROTL16(v, 16 - (n)); 57 ; 58#define SHA256_DIGEST_SIZE 32; 59 ; 60typedef struct sha256_t {; 61 uint32_t state",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RSha256_8hxx_source.html:100,Load,Loading,100,doc/v632/RSha256_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RSha256_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/src/RConversionRuleParser.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RConversionRuleParser.cxx. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2/// \file RConversionRuleParser.cxx; 3/// \ingroup Base; 4/// \author Victor Perev; 5/// \author Philippe Canal; 6/// \date 04/10/2003; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include ""RConversionRuleParser.h""; 17#include ""TSchemaRuleProcessor.h""; 18#include ""TClassEdit.h""; 19 ; 20#include <algorithm>; 21#include <iostream>; 22#include <map>; 23#include <sstream>; 24#include <string>; 25#include <utility>; 26#include <vector>; 27 ; 28namespace {; 29 static void RemoveEscapeSequences(std::string& rawString); 30 {; 31 const std::vector<std::pair<std::string, std::string>> subPairs { {""\\\\"",""\\""},; 32 {""\\\"""",""\""""},; 33 {""\\\'"",""\'""}};; 34 size_t start_pos = 0;; 35 for (auto const & subPair : subPairs){; 36 start_pos = 0;; 37 auto from = subPair.first;; 38 auto to = subPair.second;; 39 while((start_pos = rawString.find(from, start_pos)) != std::string::npos) {; 40 rawString.replace(start_pos, from.length(), to);; 41 start_pos += to.length();; 42 }; 43 }; 44 }; 45}; 46 ; 47namespace ROOT; 48{; 49 using namespace Internal;; 50 ; 51 typedef std::list<std::pair<ROOT::Internal::TSchemaType,std::string> > SourceTypeList_t;; 52 ; 53 //--------------------------------------------------------------------------; 54 // Allocate global variables; 55 /////////////////////////////////////////////////////////////////////////////; 56 ; 57 SchemaRuleClassMap_t gReadRules;; 58 SchemaRuleClassMap_t gReadRawRules;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html:110,Load,Loading,110,doc/master/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/src/RConversionRuleParser.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RConversionRuleParser.cxx. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2/// \file RConversionRuleParser.cxx; 3/// \ingroup Base; 4/// \author Victor Perev; 5/// \author Philippe Canal; 6/// \date 04/10/2003; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include ""RConversionRuleParser.h""; 17#include ""TSchemaRuleProcessor.h""; 18#include ""TClassEdit.h""; 19 ; 20#include <algorithm>; 21#include <iostream>; 22#include <map>; 23#include <sstream>; 24#include <string>; 25#include <utility>; 26#include <vector>; 27 ; 28namespace {; 29 static void RemoveEscapeSequences(std::string& rawString); 30 {; 31 const std::vector<std::pair<std::string, std::string>> subPairs { {""\\\\"",""\\""},; 32 {""\\\"""",""\""""},; 33 {""\\\'"",""\'""}};; 34 size_t start_pos = 0;; 35 for (auto const & subPair : subPairs){; 36 start_pos = 0;; 37 auto from = subPair.first;; 38 auto to = subPair.second;; 39 while((start_pos = rawString.find(from, start_pos)) != std::string::npos) {; 40 rawString.replace(start_pos, from.length(), to);; 41 start_pos += to.length();; 42 }; 43 }; 44 }; 45}; 46 ; 47namespace ROOT; 48{; 49 using namespace Internal;; 50 ; 51 typedef std::list<std::pair<ROOT::Internal::TSchemaType,std::string> > SourceTypeList_t;; 52 ; 53 //--------------------------------------------------------------------------; 54 // Allocate global variables; 55 /////////////////////////////////////////////////////////////////////////////; 56 ; 57 SchemaRuleClassMap_t gReadRules;; 58 SchemaRuleClassMap_t gReadRawRules;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RConversionRuleParser_8cxx_source.html:109,Load,Loading,109,doc/v632/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RConversionRuleParser_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/src/StringUtils.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. StringUtils.cxx. Go to the documentation of this file. 1/// \file ROOT/StringUtils.hxx; 2/// \ingroup Base StdExt; 3/// \author Jonas Rembser <jonas.rembser@cern.ch>; 4/// \date 2021-08-09; 5 ; 6/*************************************************************************; 7 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 8 * All rights reserved. *; 9 * *; 10 * For the licensing terms see $ROOTSYS/LICENSE. *; 11 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 12 *************************************************************************/; 13 ; 14#include ""ROOT/StringUtils.hxx""; 15 ; 16namespace ROOT {; 17 ; 18/// Splits a string at each character in delims.; 19/// The behavior mimics `str.split` from Python,; 20/// \param[in] str String to tokenise.; 21/// \param[in] delims One or more delimiters used to split the string.; 22/// \param[in] skipEmpty Strip empty strings from the output.; 23std::vector<std::string> Split(std::string_view str, std::string_view delims, bool skipEmpty /* =false */); 24{; 25 std::vector<std::string> out;; 26 ; 27 std::size_t beg = 0;; 28 std::size_t end = 0;; 29 while ((end = str.find_first_of(delims, beg)) != std::string::npos) {; 30 if (!skipEmpty || end > beg); 31 out.emplace_back(str.substr(beg, end - beg));; 32 beg = end + 1;; 33 }; 34 if (!skipEmpty || str.size() > beg); 35 out.emplace_back(str.substr(beg, str.size() - beg));; 36 ; 37 return out;; 38}; 39 ; 40} // namespace ROOT; StringUtils.hxx; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::Splitstd::vector< std::string > Split(std::string_view str, std::string_view delims, bool skipEmpty=false)Splits a string at each character in delims.Definition StringUtils.cxx:23. corefoundationsrcStringUtils.cxx. ROOT master - Referenc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/StringUtils_8cxx_source.html:100,Load,Loading,100,doc/master/StringUtils_8cxx_source.html,https://root.cern,https://root.cern/doc/master/StringUtils_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/src/StringUtils.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. StringUtils.cxx. Go to the documentation of this file. 1/// \file ROOT/StringUtils.hxx; 2/// \ingroup Base StdExt; 3/// \author Jonas Rembser <jonas.rembser@cern.ch>; 4/// \date 2021-08-09; 5 ; 6/*************************************************************************; 7 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 8 * All rights reserved. *; 9 * *; 10 * For the licensing terms see $ROOTSYS/LICENSE. *; 11 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 12 *************************************************************************/; 13 ; 14#include ""ROOT/StringUtils.hxx""; 15 ; 16namespace ROOT {; 17 ; 18/// Splits a string at each character in delims.; 19/// The behavior mimics `str.split` from Python,; 20/// \param[in] str String to tokenise.; 21/// \param[in] delims One or more delimiters used to split the string.; 22/// \param[in] skipEmpty Strip empty strings from the output.; 23std::vector<std::string> Split(std::string_view str, std::string_view delims, bool skipEmpty /* =false */); 24{; 25 std::vector<std::string> out;; 26 ; 27 std::size_t beg = 0;; 28 std::size_t end = 0;; 29 while ((end = str.find_first_of(delims, beg)) != std::string::npos) {; 30 if (!skipEmpty || end > beg); 31 out.emplace_back(str.substr(beg, end - beg));; 32 beg = end + 1;; 33 }; 34 if (!skipEmpty || str.size() > beg); 35 out.emplace_back(str.substr(beg, str.size() - beg));; 36 ; 37 return out;; 38}; 39 ; 40} // namespace ROOT; StringUtils.hxx; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::Splitstd::vector< std::string > Split(std::string_view str, std::string_view delims, bool skipEmpty=false)Splits a string at each character in delims.Definition StringUtils.cxx:23. corefoundationsrcStringUtils.cxx. ROOT v6-32 - Reference ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/StringUtils_8cxx_source.html:99,Load,Loading,99,doc/v632/StringUtils_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/StringUtils_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/foundation/src/TError.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TError.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 29/07/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13Error handling routines.; 14 ; 15This file defines a number of global error handling routines:; 16Warning(), Error(), SysError() and Fatal(). They all take a; 17location string (where the error happened) and a printf style format; 18string plus vararg's. In the end these functions call an; 19errorhandler function. Initially the MinimalErrorHandler, which is supposed; 20to be replaced by the proper DefaultErrorHandler(); 21*/; 22 ; 23#include ""TError.h""; 24 ; 25#include <cstdarg>; 26#include <cstdio>; 27#include <cstdlib>; 28#include <cerrno>; 29#include <string>; 30 ; 31Int_t gErrorIgnoreLevel = kUnset;; 32Int_t gErrorAbortLevel = kSysError+1;; 33Bool_t gPrintViaErrorHandler = kFALSE;; 34 ; 35const char *kAssertMsg = ""%s violated at line %d of `%s'"";; 36const char *kCheckMsg = ""%s not true at line %d of `%s'"";; 37 ; 38static ErrorHandlerFunc_t gErrorHandler = ROOT::Internal::MinimalErrorHandler;; 39 ; 40 ; 41static ROOT::Internal::ErrorSystemMsgHandlerFunc_t &GetErrorSystemMsgHandlerRef(); 42{; 43 static ROOT::Internal::ErrorSystemMsgHandlerFunc_t h;; 44 return h;; 45}; 46 ; 47 ; 48namespace ROOT {; 49namespace Internal {; 50 ; 51ErrorSystemMsgHandlerFunc_t GetErrorSystemMsgHandler(); 52{; 53 return GetErrorSystemMsgHandlerRef();; 54}; 55 ; 56ErrorSystemMsgHandlerFunc_t SetErrorSystemMsgHandler(ErrorSystemMsgHandlerFunc_t h); 57{; 58 auto oldHa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8cxx_source.html:95,Load,Loading,95,doc/master/TError_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TError_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/gui/inc/GuiTypes.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Enumerations |; Variables ; GuiTypes.h File Reference. #include ""Rtypes.h""; #include <climits>. Include dependency graph for GuiTypes.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ColorStruct_t;  ; struct  Event_t;  Event structure. More...;  ; struct  GCValues_t;  Graphics context structure. More...;  ; struct  PictureAttributes_t;  ; struct  Point_t;  Point structure (maps to the X11 XPoint structure) More...;  ; struct  Rectangle_t;  Rectangle structure (maps to the X11 XRectangle structure) More...;  ; struct  Segment_t;  Used for drawing line segments (maps to the X11 XSegments structure) More...;  ; struct  SetWindowAttributes_t;  Attributes that can be used when creating or changing a window. More...;  ; struct  WindowAttributes_t;  Window attributes that can be inquired. More...;  . Typedefs; typedef Handle_t Atom_t;  WM token. ;  ; typedef Handle_t Colormap_t;  Colormap handle. ;  ; typedef Handle_t Cursor_t;  Cursor handle. ;  ; typedef Handle_t Display_t;  Display handle. ;  ; typedef Handle_t Drawable_t;  Drawable handle. ;  ; typedef Handle_t FontH_t;  Font handle (as opposed to Font_t which is an index) ;  ; typedef Handle_t FontStruct_t;  Pointer to font structure. ;  ; typedef Handle_t GContext_t;  Graphics context handle. ;  ; typedef ULongptr_t Handle_t;  Generic resource handle. ;  ; typedef Handle_t KeySym_t;  Key symbol handle. ;  ; typedef UInt_t Mask_t;  Structure mask type. ;  ; typedef ULong_t Pixel_t;  Pixel value. ;  ; typedef Handle_t Pixmap_t;  Pixmap handle. ;  ; typedef Handle_t Region_t;  Region handle. ;  ; typedef ULong_t Time_t;  Event time. ;  ; typedef Handle_t Visual_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GuiTypes_8h.html:91,Load,Loading,91,doc/master/GuiTypes_8h.html,https://root.cern,https://root.cern/doc/master/GuiTypes_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/gui/inc/TBrowser.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBrowser.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 25/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TBrowser; 14#define ROOT_TBrowser; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBrowser //; 19// //; 20// Using a TBrowser on can browse all ROOT objects. It shows in a list //; 21// on the left side of the window all browsable ROOT classes. Selecting //; 22// one of the classes displays, in the iconbox on the right side, all //; 23// objects in the class. Selecting one of the objects in the iconbox, //; 24// will place all browsable objects in a new list and draws the //; 25// contents of the selected class in the iconbox. And so on.... //; 26// //; 27//////////////////////////////////////////////////////////////////////////; 28 ; 29#include ""TNamed.h""; 30#include ""TBrowserImp.h""; 31 ; 32 ; 33class TContextMenu;; 34class TBrowserTimer;; 35 ; 36 ; 37class TBrowser : public TNamed {; 38 ; 39private:; 40 TObject *fLastSelectedObject{nullptr}; //!The last TObject selected by user; 41 ; 42 TBrowser(const TBrowser&) = delete; // TBrowser can not be copied since we do not know the type of the TBrowserImp (and it can not be 'Cloned'); 43 TBrowser& operator=(const TBrowser&) = delete; // TBrowser can not be copied since we do not know the type of the TBrowserImp (and it can not be 'Cloned'); 44 ; 45protected:; 46 TBrowserImp *fImp{nullptr}; //!Window system specific browser implementation; 47 TBr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBrowser_8h_source.html:88,Load,Loading,88,doc/master/TBrowser_8h_source.html,https://root.cern,https://root.cern/doc/master/TBrowser_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/gui/src/TBrowser.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBrowser.cxx. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Fons Rademakers 25/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TBrowser; 13\ingroup Base; 14 ; 15Using a TBrowser one can browse all ROOT objects. It shows in a list; 16on the left side of the window all browsable ROOT classes. Selecting; 17one of the classes displays, in the icon-box on the right side, all; 18objects in the class. Selecting one of the objects in the icon-box,; 19will place all browsable objects in a new list and draws the; 20contents of the selected class in the icon-box. And so on....; 21 ; 22\image html base_browser.png; 23 ; 24\since **ROOT version 6.24/00**; 25 ; 26TBrowser invokes by default the Web-based %ROOT file browser [RBrowser](ROOT::RBrowser); 27To change this behaviour, and invoke the standard TBrowser, one should put; 28the following directive in the `.rootrc` file:; 29```; 30Browser.Name: TRootBrowser; 31```; 32*/; 33 ; 34#include ""TBrowser.h""; 35#include ""TGuiFactory.h""; 36#include ""TROOT.h""; 37#include ""TEnv.h""; 38#include ""TSystem.h""; 39#include ""TStyle.h""; 40#include ""TTimer.h""; 41#include ""TContextMenu.h""; 42#include ""TInterpreter.h""; 43#include ""TVirtualMutex.h""; 44#include ""TClass.h""; 45#include ""TApplication.h""; 46 ; 47/** \class TBrowserTimer; 48Called whenever timer times out.; 49*/; 50 ; 51class TBrowserTimer : public TTimer {; 52 ; 53protected:; 54 TBrowser *fBrowser{nullptr};; 55 Bool_t fActivate{kFALSE};; 56 ; 57public:; 58 TBrowserTimer(TBrowser *b, Long_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBrowser_8cxx_source.html:90,Load,Loading,90,doc/master/TBrowser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBrowser_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TBaseClass.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBaseClass.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 08/02/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBaseClass; 13#define ROOT_TBaseClass; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBaseClass //; 19// //; 20// Description of a base class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TDictionary.h""; 26#include ""TClassRef.h""; 27 ; 28#include <atomic>; 29 ; 30class TBrowser;; 31class TClass;; 32 ; 33class TBaseClass : public TDictionary {; 34#ifndef __CLING__; 35 using AtomicInt_t = std::atomic<Int_t>;; 36 static_assert(sizeof(std::atomic<Int_t>) == sizeof(Int_t),; 37 ""We requiqre atomic<int> and <int> to have the same size but they are not"");; 38#else; 39 // std::atomic is not yet supported in the I/O, so; 40 // we hide them from Cling; 41 using AtomicInt_t = Int_t;; 42#endif; 43 ; 44private:; 45 TBaseClass(const TBaseClass &) = delete;; 46 TBaseClass&operator=(const TBaseClass &) = delete;; 47 ; 48private:; 49 BaseClassInfo_t *fInfo; //!pointer to CINT base class info; 50 TClassRef fClassPtr; // pointer to the base class TClass; 51 TClass *fClass; //!pointer to parent class; 52 AtomicInt_t fDelta; // BaseClassInfo_t offset (INT_MAX if unset); 53 mutable AtomicInt_t fProperty; // BaseClassInfo_t's properties; 54 Int_t fSTLType; // cache of IsSTLContainer(); 55 ; 56public:; 57 TBaseClass(BaseClassInfo_t *info = null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBaseClass_8h_source.html:91,Load,Loading,91,doc/master/TBaseClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TBaseClass_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TClass.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; TClass.h File Reference. #include ""TDictionary.h""; #include ""TString.h""; #include ""TObjArray.h""; #include <cstddef>; #include <map>; #include <string>; #include <unordered_set>; #include <vector>; #include <atomic>. Include dependency graph for TClass.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TClass::InsertTClassInRegistryRAII;  ; struct  TClass::ObjectPtr;  ; class  TClass;  TClass instances represent classes, structs and namespaces in the ROOT type system. More...;  ; struct  ROOT::Internal::TClassGetClassHelper< T >;  ; class  TClass::TDeclNameRegistry;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  ROOT::Internal;  . Typedefs; typedef ROOT::TMapDeclIdToTClass DeclIdMap_t;  ; typedef ROOT::TMapTypeToTClass IdMap_t;  . Functions; TClass * ROOT::CreateClass (const char *cname, Version_t id, const char *dfil, const char *ifil, Int_t dl, Int_t il);  Global function called by a class' static Dictionary() method (see the ClassDef macro). ;  ; template<typename T > ; TClass * ROOT::GetClass (const T *);  ; template<typename T > ; TClass * ROOT::GetClass (const T **);  ; template<typename T > ; TClass * ROOT::GetClass (const T *const *);  ; template<typename T > ; TClass * ROOT::GetClass (T *);  ; template<typename T > ; TClass * ROOT::GetClass (T **);  ; template<typename T > ; TClass * ROOT::Internal::GetClassHelper (Bool_t load, Bool_t silent, std::false_type);  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h.html:90,Load,Loading,90,doc/master/TClass_8h.html,https://root.cern,https://root.cern/doc/master/TClass_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TClass.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Rene Brun 07/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TClass; 13#define ROOT_TClass; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TClass //; 18// //; 19// Dictionary of a class. //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TDictionary.h""; 24#include ""TString.h""; 25 ; 26#ifdef R__LESS_INCLUDES; 27class TObjArray;; 28#else; 29#include ""TObjArray.h""; 30// Not used in this header file; user code should #include this directly.; 31// #include ""TObjString.h""; 32// #include ""ThreadLocalStorage.h""; 33// #include <set>; 34#endif; 35 ; 36#include <cstddef>; 37#include <map>; 38#include <string>; 39#include <unordered_set>; 40#include <vector>; 41#include <atomic>; 42 ; 43class TBaseClass;; 44class TBrowser;; 45class TDataMember;; 46class TCling;; 47class TMethod;; 48class TRealData;; 49class TBuffer;; 50class TVirtualStreamerInfo;; 51class TVirtualCollectionProxy;; 52class TMethodCall;; 53class TVirtualIsAProxy;; 54class TVirtualRefProxy;; 55class THashTable;; 56class TListOfFunctions;; 57class TListOfFunctionTemplates;; 58class TListOfDataMembers;; 59class TListOfEnums;; 60class TViewPubFunctions;; 61class TViewPubDataMembers;; 62class TFunctionTemplate;; 63class TProtoClass;; 64 ; 65namespace ROOT {; 66 class TGenericClassInfo;; 67 class TMapTypeToTClass;; 68 class TMapDeclIdToTClass;; 69 namespace Deta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8h_source.html:87,Load,Loading,87,doc/master/TClass_8h_source.html,https://root.cern,https://root.cern/doc/master/TClass_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TClass.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Rene Brun 07/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TClass; 13#define ROOT_TClass; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TClass //; 18// //; 19// Dictionary of a class. //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TDictionary.h""; 24#include ""TString.h""; 25 ; 26#ifdef R__LESS_INCLUDES; 27class TObjArray;; 28#else; 29#include ""TObjArray.h""; 30// Not used in this header file; user code should #include this directly.; 31// #include ""TObjString.h""; 32// #include ""ThreadLocalStorage.h""; 33// #include <set>; 34#endif; 35 ; 36#include <cstddef>; 37#include <map>; 38#include <string>; 39#include <unordered_set>; 40#include <vector>; 41#include <atomic>; 42 ; 43class TBaseClass;; 44class TBrowser;; 45class TDataMember;; 46class TCling;; 47class TMethod;; 48class TRealData;; 49class TBuffer;; 50class TVirtualStreamerInfo;; 51class TVirtualCollectionProxy;; 52class TMethodCall;; 53class TVirtualIsAProxy;; 54class TVirtualRefProxy;; 55class THashTable;; 56class TListOfFunctions;; 57class TListOfFunctionTemplates;; 58class TListOfDataMembers;; 59class TListOfEnums;; 60class TViewPubFunctions;; 61class TViewPubDataMembers;; 62class TFunctionTemplate;; 63class TProtoClass;; 64 ; 65namespace ROOT {; 66 class TGenericClassInfo;; 67 class TMapTypeToTClass;; 68 class TMapDeclIdToTClass;; 69 namespace Detai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8h_source.html:86,Load,Loading,86,doc/v632/TClass_8h_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TDataType.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TDataType.h File Reference. #include ""TDictionary.h"". Include dependency graph for TDataType.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TDataType;  Basic data type descriptor (datatype information is obtained from CINT). More...;  . Enumerations; enum  EDataType { ;   kChar_t = 1; , kUChar_t = 11; , kShort_t = 2; , kUShort_t = 12; , ;   kInt_t = 3; , kUInt_t = 13; , kLong_t = 4; , kULong_t = 14; , ;   kFloat_t = 5; , kDouble_t = 8; , kDouble32_t = 9; , kchar = 10; , ;   kBool_t = 18; , kLong64_t = 16; , kULong64_t = 17; , kOther_t = -1; , ;   kNoType_t = 0; , kFloat16_t = 19; , kCounter = 6; , kCharStar = 7; , ;   kBits = 15; , kVoid_t = 20; , kDataTypeAliasUnsigned_t = 21; , kDataTypeAliasSignedChar_t = 22; , ;   kNumDataTypes. };  . Enumeration Type Documentation. ◆ EDataType. enum EDataType. EnumeratorkChar_t ; kUChar_t ; kShort_t ; kUShort_t ; kInt_t ; kUInt_t ; kLong_t ; kULong_t ; kFloat_t ; kDouble_t ; kDouble32_t ; kchar ; kBool_t ; kLong64_t ; kULong64_t ; kOther_t ; kNoType_t ; kFloat16_t ; kCounter ; kCharStar ; kBits ; kVoid_t ; kDataTypeAliasUnsigned_t ; kDataTypeAliasSignedChar_t ; kNumDataTypes . Definition at line 28 of file TDataType.h. coremetaincTDataType.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDataType_8h.html:93,Load,Loading,93,doc/master/TDataType_8h.html,https://root.cern,https://root.cern/doc/master/TDataType_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TDictionary.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Enumerations ; TDictionary.h File Reference. #include ""TNamed.h""; #include ""ESTLType.h"". Include dependency graph for TDictionary.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TDictionary;  This class defines an abstract interface that must be implemented by all classes that contain dictionary information. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Enumerations; enum  EClassProperty { ;   kClassIsValid = 0x00000001; , kClassHasExplicitCtor = 0x00000010; , kClassHasImplicitCtor = 0x00000020; , kClassHasCtor = 0x00000030; , ;   kClassHasDefaultCtor = 0x00000040; , kClassHasAssignOpr = 0x00000080; , kClassHasExplicitDtor = 0x00000100; , kClassHasImplicitDtor = 0x00000200; , ;   kClassHasDtor = 0x00000300; , kClassHasVirtual = 0x00001000; , kClassIsAbstract = 0x00002000; , kClassIsAggregate = 0x00004000. };  ; enum  ROOT::EFunctionMatchMode { ROOT::kExactMatch = 0; , ROOT::kConversionMatch = 1; };  ; enum  EFunctionProperty { ;   kIsConstructor = 0x00000001; , kIsConversion = 0x00000002; , kIsDestructor = 0x00000004; , kIsOperator = 0x00000008; , ;   kIsInlined = 0x00000010; , kIsTemplateSpec = 0x00000020. };  ; enum  EProperty { ;   kIsClass = 0x00000001; , kIsStruct = 0x00000002; , kIsUnion = 0x00000004; , kIsEnum = 0x00000008; , ;   kIsTypedef = 0x00000010; , kIsFundamental = 0x00000020; , kIsAbstract = 0x00000040; , kIsVirtual = 0x00000080; , ;   kIsPureVirtual = 0x00000100; , kIsUnionMember = 0x00000100; , kIsPublic = 0x00000200; , kIsProtec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDictionary_8h.html:95,Load,Loading,95,doc/master/TDictionary_8h.html,https://root.cern,https://root.cern/doc/master/TDictionary_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TDictionary.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDictionary.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 20/06/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TDictionary; 14#define ROOT_TDictionary; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TDictionary //; 19// //; 20// This class defines an abstract interface that must be implemented //; 21// by all classes that contain dictionary information. //; 22// //; 23// The dictionary is defined by the followling classes: //; 24// TDataType (typedef definitions) //; 25// TGlobal (global variables) //; 26// TFunction (global functions) //; 27// TClass (classes) //; 28// TBaseClass (base classes) //; 29// TDataMember (class datamembers) //; 30// TMethod (class methods) //; 31// TMethodArg (method arguments) //; 32// //; 33// All the above classes implement the TDictionary abstract interface //; 34// (note: the indentation shows aggregation not inheritance). //; 35// The ROOT dictionary system provides a very extensive RTTI //; 36// environment that facilitates a.o. object inspectors, object I/O, //; 37// ROOT Trees, etc. Most of the type information is provided by the //; 38// CINT C++ interpreter. //; 39// //; 40// TMethodCall (method call environment) //; 41// //; 42//////////////////////////////////////////////////////////////////////////; 43 ; 44#include ""TNamed.h""; 45 ; 46#include ""ESTLType.h""; 47 ; 48// The following are opaque type and are never really declared; 49// The specific impleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDictionary_8h_source.html:92,Load,Loading,92,doc/master/TDictionary_8h_source.html,https://root.cern,https://root.cern/doc/master/TDictionary_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TDictionary.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TDictionary.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 20/06/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TDictionary; 14#define ROOT_TDictionary; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TDictionary //; 19// //; 20// This class defines an abstract interface that must be implemented //; 21// by all classes that contain dictionary information. //; 22// //; 23// The dictionary is defined by the followling classes: //; 24// TDataType (typedef definitions) //; 25// TGlobal (global variables) //; 26// TFunction (global functions) //; 27// TClass (classes) //; 28// TBaseClass (base classes) //; 29// TDataMember (class datamembers) //; 30// TMethod (class methods) //; 31// TMethodArg (method arguments) //; 32// //; 33// All the above classes implement the TDictionary abstract interface //; 34// (note: the indentation shows aggregation not inheritance). //; 35// The ROOT dictionary system provides a very extensive RTTI //; 36// environment that facilitates a.o. object inspectors, object I/O, //; 37// ROOT Trees, etc. Most of the type information is provided by the //; 38// CINT C++ interpreter. //; 39// //; 40// TMethodCall (method call environment) //; 41// //; 42//////////////////////////////////////////////////////////////////////////; 43 ; 44#include ""TNamed.h""; 45 ; 46#include ""ESTLType.h""; 47 ; 48// The following are opaque type and are never really declared; 49// The specific implemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TDictionary_8h_source.html:91,Load,Loading,91,doc/v632/TDictionary_8h_source.html,https://root.cern,https://root.cern/doc/v632/TDictionary_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TInterpreter.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Variables ; TInterpreter.h File Reference. #include ""TDataType.h""; #include ""TDictionary.h""; #include ""TInterpreterValue.h""; #include ""TNamed.h""; #include ""TVirtualRWMutex.h""; #include <map>; #include <typeinfo>; #include <vector>; #include <string>; #include <utility>. Include dependency graph for TInterpreter.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TInterpreter::CallFuncIFacePtr_t;  ; struct  ROOT::Internal::InterpreterMutexRegistrationRAII;  ; class  TInterpreter::SuspendAutoLoadingRAII;  ; class  TInterpreter::SuspendAutoParsing;  ; class  TInterpreter;  This class defines an abstract interface to a generic command line interpreter. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Macros; #define gInterpreter   (TInterpreter::Instance());  ; #define R__LOCKGUARD_CLING(mutex)   ::ROOT::Internal::InterpreterMutexRegistrationRAII _R__UNIQUE_(R__guard)(mutex); { };  . Typedefs; typedef TInterpreter * CreateInterpreter_t(void *shlibHandle, const char *argv[]);  ; typedef void * DestroyInterpreter_t(TInterpreter *);  . Variables; R__EXTERN TInterpreter * gCling;  ; R__EXTERN TVirtualMutex * gInterpreterMutex;  . Macro Definition Documentation. ◆ gInterpreter. #define gInterpreter   (TInterpreter::Instance()). Definition at line 573 of file TInterpreter.h. ◆ R__LOCKGUARD_CLING. #define R__LOCKGUARD_CLING; (;  ; mutex);    ::ROOT::Internal::InterpreterMutexRegistrationRAII _R__UNIQUE_(R__guard",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h.html:96,Load,Loading,96,doc/master/TInterpreter_8h.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TInterpreter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TInterpreter.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 01/03/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TInterpreter; 14#define ROOT_TInterpreter; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TInterpreter //; 19// //; 20// This class defines an abstract interface to a generic command line //; 21// interpreter. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TDataType.h""; 26#include ""TDictionary.h""; 27#include ""TInterpreterValue.h""; 28#include ""TNamed.h""; 29#include ""TVirtualRWMutex.h""; 30 ; 31#include <map>; 32#include <typeinfo>; 33#include <vector>; 34#include <string>; 35#include <utility>; 36 ; 37class TClass;; 38class TEnv;; 39class TFunction;; 40class TMethod;; 41class TObjArray;; 42class TEnum;; 43class TListOfEnums;; 44class TSeqCollection;; 45 ; 46R__EXTERN TVirtualMutex *gInterpreterMutex;; 47 ; 48# define R__LOCKGUARD_CLING(mutex) ::ROOT::Internal::InterpreterMutexRegistrationRAII _R__UNIQUE_(R__guard)(mutex); { }; 49 ; 50namespace ROOT {; 51namespace Internal {; 52struct InterpreterMutexRegistrationRAII {; 53 TLockGuard fLockGuard;; 54 InterpreterMutexRegistrationRAII(TVirtualMutex* mutex);; 55 ~InterpreterMutexRegistrationRAII();; 56};; 57}; 58}; 59 ; 60class TInterpreter : public TNamed {; 61 ; 62protected:; 63 void Execute(TMethod *method, TObjArray *params, int *error = nullptr) override = 0;; 64 virtual Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h_source.html:93,Load,Loading,93,doc/master/TInterpreter_8h_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TSchemaRule.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSchemaRule.h. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#ifndef ROOT_TSchemaRule; 5#define ROOT_TSchemaRule; 6 ; 7#include ""TNamed.h""; 8#include ""TString.h""; 9 ; 10#include <vector>; 11#include <utility>; 12 ; 13class TBuffer;; 14class TVirtualObject;; 15class TObjArray;; 16 ; 17namespace ROOT {; 18 ; 19 class TSchemaRule : public TObject; 20 {; 21 public:; 22 ; 23 class TSources : public TNamed {; 24 private:; 25 TString fDimensions;; 26 public:; 27 TSources(const char *name = nullptr, const char *title = nullptr, const char *dims = nullptr) : TNamed(name,title), fDimensions(dims) {}; 28 const char *GetDimensions() { return fDimensions; }; 29 ; 30 ClassDefOverride(TSources,2);; 31 };; 32 ; 33 typedef enum; 34 {; 35 kReadRule = 0,; 36 kReadRawRule = 1,; 37 kNone = 99999; 38 } RuleType_t;; 39 ; 40 typedef void (*ReadFuncPtr_t)( char*, TVirtualObject* );; 41 typedef void (*ReadRawFuncPtr_t)( char*, TBuffer&);; 42 ; 43 TSchemaRule();; 44 virtual ~TSchemaRule();; 45 ; 46 TSchemaRule( const TSchemaRule& rhs );; 47 TSchemaRule& operator = ( const TSchemaRule& rhs );; 48 Bool_t operator == ( const TSchemaRule& rhs ) const;; 49 ; 50 ; 51 void Clear(Option_t * /*option*/ ="""") override;; 52 Bool_t SetFromRule( const char *rule );; 53 ; 54 const char *GetVersion( ) const;; 55 Bool_t SetVersion( const TString& version );; 56 Bool_t TestVersion( Int_t version ) const;; 57 Bool_t SetChecksum( const TString& checksum );; 58 Bool_t TestChecksum( UInt_t checksum ) const;; 59 void SetSourceClass( const TString& classname );; 60 const char *GetSourceClass() const;; 61 void SetTargetClass( const TString& classname );; 62 const char *GetTargetClass() const;; 63 void SetTarget( const TString& target );; 64 const TObjArray* GetTarget() const;; 65 const char *GetTargetString() const;; 66 void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRule_8h_source.html:92,Load,Loading,92,doc/master/TSchemaRule_8h_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRule_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TSchemaRuleSet.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSchemaRuleSet.h. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#ifndef ROOT_TSchemaRuleSet; 5#define ROOT_TSchemaRuleSet; 6 ; 7#include ""TObject.h""; 8#include ""TString.h""; 9#include ""TClassRef.h""; 10#include <vector>; 11 ; 12#ifdef R__LESS_INCLUDES; 13class TObjArray;; 14#else; 15#include ""TObjArray.h""; 16#endif; 17 ; 18 ; 19namespace ROOT {; 20 ; 21class TSchemaRule;; 22 ; 23namespace Detail {; 24 class TSchemaRuleSet: public TObject; 25 {; 26 public:; 27 ; 28 class TMatches: public std::vector<const TSchemaRule*>; 29 {; 30 public:; 31 operator bool() { return !empty(); }; 32 const TSchemaRule* GetRuleWithSource( const TString& name ) const;; 33 const TSchemaRule* GetRuleWithTarget( const TString& name ) const;; 34 Bool_t HasRuleWithSource( const TString& name, Bool_t needingAlloc ) const;; 35 Bool_t HasRuleWithTarget( const TString& name, Bool_t willset ) const;; 36 };; 37 ; 38 enum EConsistencyCheck {; 39 kNoCheck = 0,; 40 kCheckAll = 1,; 41 kCheckConflict = 2; 42 };; 43 ; 44 TSchemaRuleSet();; 45 virtual ~TSchemaRuleSet();; 46 ; 47 Bool_t AddRule(TSchemaRule *rule, EConsistencyCheck checkConsistency = kCheckAll, TString *errmsg = nullptr);; 48 Bool_t AddRules(TSchemaRuleSet *rules, EConsistencyCheck checkConsistency = kCheckAll, TString *errmsg = nullptr);; 49 Bool_t HasRuleWithSourceClass( const TString &source) const;; 50 const TMatches FindRules( const TString &source ) const;; 51 const TMatches FindRules( const TString &source, Int_t version ) const;; 52 const TMatches FindRules( const TString &source, UInt_t checksum ) const;; 53 const TMatches FindRules( const TString &source, Int_t version, UInt_t checksum ) const;; 54 TClass* GetClass();; 55 UInt_t GetClassCheckSum() const;; 56 TString GetClassName() const;; 57 Int_t GetClassVersion() const;; 58 const TObjArr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRuleSet_8h_source.html:95,Load,Loading,95,doc/master/TSchemaRuleSet_8h_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRuleSet_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/inc/TVirtualObject.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualObject.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Philippe Canal July, 2008; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualObject; 13#define ROOT_TVirtualObject; 14 ; 15/**; 16\class TVirtualObject; 17\ingroup IO; 18 ; 19Wrapper around an object and giving indirect access to its content; 20even if the object is not of a class in the Cint/Reflex dictionary.; 21*/; 22 ; 23#include ""TClassRef.h""; 24 ; 25 ; 26class TVirtualObject {; 27private:; 28 ; 29 TVirtualObject(const TVirtualObject&) = delete;; 30 TVirtualObject &operator=(const TVirtualObject&) = delete;; 31 ; 32public:; 33 TClassRef fClass;; 34 void *fObject;; 35 ; 36 TVirtualObject(TClass *cl) : fClass(cl), fObject(cl ? cl->New() : nullptr) { }; 37 ~TVirtualObject() { if (fClass) fClass->Destructor(fObject); }; 38 ; 39 ; 40 TClass *GetClass() const { return fClass; }; 41 void *GetObject() const { return fObject; }; 42 ; 43};; 44 ; 45#endif // ROOT_TVirtualObject; TClassRef.h; TClassRefTClassRef is used to implement a permanent reference to a TClass object.Definition TClassRef.h:28; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::Destructorvoid Destructor(void *obj, Bool_t dtorOnly=kFALSE)Explicitly call destructor for object.Definition TClass.cxx:5467; TVirtualObjectWrapper around an object and giving indirect access to its content even if the object is not of a cla...Definition TVirtualObject.h:26; TVirtualObject::fObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualObject_8h_source.html:95,Load,Loading,95,doc/master/TVirtualObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualObject_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/src/TClass.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id: 7109cb45f1219c2aae6be19906ae5a63e31972ef $; 2// Author: Rene Brun 07/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TClass; 13TClass instances represent classes, structs and namespaces in the ROOT type system.; 14 ; 15TClass instances are created starting from different sources of information:; 161. TStreamerInfo instances saved in a ROOT file which is opened. This is called in jargon an *emulated TClass*.; 172. From TProtoClass instances saved in a ROOT pcm file created by the dictionary generator and the dictionary itself.; 183. From a lookup in the AST built by cling.; 19 ; 20If a TClass instance is built through the mechanisms 1. and 2., it does not contain information about methods of the; 21class/struct/namespace it represents. Conversely, if built through 3. or 1., it does not carry the information which is necessary; 22to ROOT to perform I/O of instances of the class/struct it represents.; 23The mechanisms 1., 2. and 3. are not mutually exclusive: it can happen that during the execution of the program, all; 24the three are triggered, modifying the state of the TClass instance.; 25 ; 26In order to retrieve a TClass instance from the type system, a query can be executed as follows through the static; 27TClass::GetClass method:; 28 ; 29~~~ {.cpp}; 30auto myClassTClass_0 = TClass::GetClass(""myClass"");; 31auto myClassTClass_1 = TClass::GetClass<myClass>();; 32auto myClassTClass_2 = TClass::GetClass(myClassTypeInfo);; 33~",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:89,Load,Loading,89,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/src/TClass.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id: 7109cb45f1219c2aae6be19906ae5a63e31972ef $; 2// Author: Rene Brun 07/01/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TClass; 13TClass instances represent classes, structs and namespaces in the ROOT type system.; 14 ; 15TClass instances are created starting from different sources of information:; 161. TStreamerInfo instances saved in a ROOT file which is opened. This is called in jargon an *emulated TClass*.; 172. From TProtoClass instances saved in a ROOT pcm file created by the dictionary generator and the dictionary itself.; 183. From a lookup in the AST built by cling.; 19 ; 20If a TClass instance is built through the mechanisms 1. and 2., it does not contain information about methods of the; 21class/struct/namespace it represents. Conversely, if built through 3. or 1., it does not carry the information which is necessary; 22to ROOT to perform I/O of instances of the class/struct it represents.; 23The mechanisms 1., 2. and 3. are not mutually exclusive: it can happen that during the execution of the program, all; 24the three are triggered, modifying the state of the TClass instance.; 25 ; 26In order to retrieve a TClass instance from the type system, a query can be executed as follows through the static; 27TClass::GetClass method:; 28 ; 29~~~ {.cpp}; 30auto myClassTClass_0 = TClass::GetClass(""myClass"");; 31auto myClassTClass_1 = TClass::GetClass<myClass>();; 32auto myClassTClass_2 = TClass::GetClass(myClassTypeInfo);; 33~~",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:88,Load,Loading,88,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/src/TInterpreter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TInterpreter.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Fons Rademakers 01/03/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TInterpreter; 13This class defines an abstract interface to a generic command line; 14interpreter.; 15*/; 16 ; 17#include ""TInterpreter.h""; 18 ; 19#include ""TROOT.h""; 20#include ""TError.h""; 21#include ""TGlobal.h""; 22 ; 23 ; 24TInterpreter* gCling = nullptr; // returns pointer to global TCling object; 25static TInterpreter *gInterpreterLocal = nullptr; // The real holder of the pointer.; 26 ; 27 ; 28namespace {; 29static struct AddPseudoGlobals {; 30AddPseudoGlobals() {; 31 ; 32 // use special functor to extract pointer on gInterpreterLocal variable; 33 TGlobalMappedFunction::MakeFunctor(""gInterpreter"", ""TInterpreter*"", TInterpreter::Instance, [] {; 34 TInterpreter::Instance();; 35 return (void *) &gInterpreterLocal;; 36 });; 37 ; 38}; 39} gAddPseudoGlobals;; 40}; 41 ; 42 ; 43ClassImp(TInterpreter);; 44 ; 45////////////////////////////////////////////////////////////////////////////////; 46/// TInterpreter ctor only called by derived classes.; 47 ; 48TInterpreter::TInterpreter(const char *name, const char *title); 49 : TNamed(name, title); 50{; 51 gInterpreterLocal = this;; 52 gCling = this;; 53}; 54 ; 55////////////////////////////////////////////////////////////////////////////////; 56/// returns gInterpreter global; 57 ; 58TInterpreter *TInterpreter::Instance(); 59{; 60 if (gInterpreterLocal == nullptr) {; 61 static TROOT *getROOT =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8cxx_source.html:95,Load,Loading,95,doc/master/TInterpreter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/src/TSchemaRule.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSchemaRule.cxx. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#include ""TSchemaRule.h""; 5 ; 6#include ""RConversionRuleParser.h""; 7#include ""TClassEdit.h""; 8#include ""TSchemaRuleProcessor.h""; 9#include ""TSchemaType.h""; 10#include ""TObjArray.h""; 11#include ""TObjString.h""; 12#include ""TROOT.h""; 13 ; 14#include <utility>; 15#include <iostream>; 16#include <vector>; 17#include <list>; 18#include <string>; 19#include <cstdlib>; 20#include <sstream>; 21 ; 22ClassImp(TSchemaRule);; 23 ; 24using namespace ROOT;; 25 ; 26namespace {; 27 static Bool_t IsIrrelevantCharacter(char c); 28 {; 29 return (c == ' ' || c == '\n' || c == '\t');; 30 }; 31 ; 32 static void AdvanceOverIrrelevantCharacter(const char*& str); 33 {; 34 while (IsIrrelevantCharacter(*str)) {; 35 ++str;; 36 }; 37 }; 38 ; 39 // check if lhs matches rhs if we ignore irelevant white space differences; 40 ; 41 static Bool_t IsCodeEquivalent(const TString& lhs, const TString& rhs); 42 {; 43 Bool_t result = kTRUE;; 44 ; 45 if (lhs != rhs) {; 46 const char null = '\0';; 47 const char* left = lhs.Data();; 48 const char* right = rhs.Data();; 49 Bool_t literal = false;; 50 // skip initial white space; 51 AdvanceOverIrrelevantCharacter(left);; 52 AdvanceOverIrrelevantCharacter(right);; 53 ; 54 while (*left != null || *right != null) {; 55 // If both chars are white space, skip consecutive white space; 56 if (!literal && IsIrrelevantCharacter(*left) && IsIrrelevantCharacter(*right)) {; 57 AdvanceOverIrrelevantCharacter(left);; 58 AdvanceOverIrrelevantCharacter(right);; 59 continue;; 60 }; 61 // Check if one string has trailing white space, and the other doesn't.; 62 if (*left == null || *right == null) {; 63 AdvanceOverIrrelevantCharacter(left);; 64 AdvanceOverIrrelevantCharacter(right);; 65 result = (*left == null && *right == nul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRule_8cxx_source.html:94,Load,Loading,94,doc/master/TSchemaRule_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRule_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/meta/src/TSchemaRuleSet.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSchemaRuleSet.cxx. Go to the documentation of this file. 1// @(#)root/core:$Id$; 2// author: Lukasz Janyst <ljanyst@cern.ch>; 3 ; 4#include ""TSchemaRuleSet.h""; 5#include ""TSchemaRule.h""; 6#include ""TObjArray.h""; 7#include ""TObjString.h""; 8#include ""TClass.h""; 9#include ""TROOT.h""; 10#include ""TBuffer.h""; 11#include <iostream>; 12 ; 13#include ""TVirtualCollectionProxy.h""; 14#include ""TVirtualStreamerInfo.h""; 15#include ""TVirtualMutex.h""; 16#include ""TInterpreter.h"" // For gInterpreterMutex; 17#include ""TStreamerElement.h""; 18#include ""TClassEdit.h""; 19 ; 20ClassImp(TSchemaRule);; 21 ; 22using namespace ROOT;; 23using namespace ROOT::Detail;; 24 ; 25////////////////////////////////////////////////////////////////////////////////; 26/// Default constructor.; 27 ; 28TSchemaRuleSet::TSchemaRuleSet(): fPersistentRules( nullptr ), fRemainingRules( nullptr ),; 29 fAllRules( nullptr ), fVersion(-3), fCheckSum( 0 ); 30{; 31 fPersistentRules = new TObjArray();; 32 fRemainingRules = new TObjArray();; 33 fAllRules = new TObjArray();; 34 fAllRules->SetOwner( kTRUE );; 35}; 36 ; 37////////////////////////////////////////////////////////////////////////////////; 38/// Destructor.; 39 ; 40TSchemaRuleSet::~TSchemaRuleSet(); 41{; 42 delete fPersistentRules;; 43 delete fRemainingRules;; 44 delete fAllRules;; 45}; 46 ; 47////////////////////////////////////////////////////////////////////////////////; 48/// The ls function lists the contents of a class on stdout. Ls output; 49/// is typically much less verbose then Dump().; 50 ; 51void TSchemaRuleSet::ls(Option_t *) const; 52{; 53 TROOT::IndentLevel();; 54 std::cout << ""TSchemaRuleSet for "" << fClassName << "":\n"";; 55 TROOT::IncreaseDirLevel();; 56 TObject *object = nullptr;; 57 TIter next(fPersistentRules);; 58 while ((object = next())) {; 59 object->ls(fClassName);; 60 }; 61 TROOT::DecreaseDirLevel();; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRuleSet_8cxx_source.html:97,Load,Loading,97,doc/master/TSchemaRuleSet_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRuleSet_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/metacling/src/TCling.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Enumerations |; Functions |; Variables ; TCling.cxx File Reference. #include ""TCling.h""; #include ""ROOT/FoundationUtils.hxx""; #include ""TClingBaseClassInfo.h""; #include ""TClingCallFunc.h""; #include ""TClingClassInfo.h""; #include ""TClingDataMemberInfo.h""; #include ""TClingMethodArgInfo.h""; #include ""TClingMethodInfo.h""; #include ""TClingRdictModuleFileExtension.h""; #include ""TClingTypedefInfo.h""; #include ""TClingTypeInfo.h""; #include ""TClingValue.h""; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TGlobal.h""; #include ""TDataType.h""; #include ""TClass.h""; #include ""TClassEdit.h""; #include ""TClassTable.h""; #include ""TClingCallbacks.h""; #include ""TClingDiagnostics.h""; #include ""TBaseClass.h""; #include ""TDataMember.h""; #include ""TMemberInspector.h""; #include ""TMethod.h""; #include ""TMethodArg.h""; #include ""TFunctionTemplate.h""; #include ""TObjArray.h""; #include ""TObjString.h""; #include ""TString.h""; #include ""THashList.h""; #include ""TVirtualPad.h""; #include ""TSystem.h""; #include ""TVirtualMutex.h""; #include ""TError.h""; #include ""TEnv.h""; #include ""TEnum.h""; #include ""TEnumConstant.h""; #include ""THashTable.h""; #include ""RConversionRuleParser.h""; #include ""RConfigure.h""; #include ""compiledata.h""; #include ""strlcpy.h""; #include ""snprintf.h""; #include ""TClingUtils.h""; #include ""TVirtualCollectionProxy.h""; #include ""TVirtualStreamerInfo.h""; #include ""TListOfDataMembers.h""; #include ""TListOfEnums.h""; #include ""TListOfEnumsWithLock.h""; #include ""TListOfFunctions.h""; #include ""TListOfFunctionTemplates.h""; #include ""TMemFile.h""; #include ""TProtoClass.h""; #include ""TStreamerInfo.h""; #include ""ThreadLocalStorage.h""; #include ""TFile.h""; #include ""TKey.h""; #include ""ClingRAII.h""; #include ""clang/AST/ASTContext.h""; #include ""clang/AST/Decl.h""; #include ""clang/AST/DeclarationName.h""; #include ""clang/AST/GlobalDecl.h""; #include ""clan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx.html:97,Load,Loading,97,doc/master/TCling_8cxx.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/metacling/src/TCling.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCling.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// vim: sw=3 ts=3 expandtab foldmethod=indent; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TCling; 13 ; 14This class defines an interface to the cling C++ interpreter.; 15 ; 16Cling is a full ANSI compliant C++-11 interpreter based on; 17clang/LLVM technology.; 18*/; 19 ; 20#include ""TCling.h""; 21 ; 22#include ""ROOT/FoundationUtils.hxx""; 23 ; 24#include ""TClingBaseClassInfo.h""; 25#include ""TClingCallFunc.h""; 26#include ""TClingClassInfo.h""; 27#include ""TClingDataMemberInfo.h""; 28#include ""TClingMethodArgInfo.h""; 29#include ""TClingMethodInfo.h""; 30#include ""TClingRdictModuleFileExtension.h""; 31#include ""TClingTypedefInfo.h""; 32#include ""TClingTypeInfo.h""; 33#include ""TClingValue.h""; 34 ; 35#include ""TROOT.h""; 36#include ""TApplication.h""; 37#include ""TGlobal.h""; 38#include ""TDataType.h""; 39#include ""TClass.h""; 40#include ""TClassEdit.h""; 41#include ""TClassTable.h""; 42#include ""TClingCallbacks.h""; 43#include ""TClingDiagnostics.h""; 44#include ""TBaseClass.h""; 45#include ""TDataMember.h""; 46#include ""TMemberInspector.h""; 47#include ""TMethod.h""; 48#include ""TMethodArg.h""; 49#include ""TFunctionTemplate.h""; 50#include ""TObjArray.h""; 51#include ""TObjString.h""; 52#include ""TString.h""; 53#include ""THashList.h""; 54#include ""TVirtualPad.h""; 55#include ""TSystem.h""; 56#include ""TVirtualMutex.h""; 57#include ""TError.h""; 58#include ""TEnv.h""; 59#include ""TEnum.h""; 60#include ""TEnumConstant.h""; 61#include ""THashTable.h""; 62#include ""RConversion",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:94,Load,Loading,94,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/metacling/src/TCling.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCling.h. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2// Author: Axel Naumann, 2011-10-19; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TCling; 14#define ROOT_TCling; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TCling //; 19// //; 20// This class defines an interface to the cling C++ interpreter. //; 21// //; 22// Cling is a full ANSI compliant C++ interpreter based on //; 23// clang/LLVM technology. //; 24// //; 25//////////////////////////////////////////////////////////////////////////; 26 ; 27#include ""TInterpreter.h""; 28 ; 29#include <map>; 30#include <memory>; 31#include <set>; 32#include <tuple>; 33#include <unordered_map>; 34#include <unordered_set>; 35#include <vector>; 36#include <string>; 37#include <utility>; 38 ; 39#ifndef WIN32; 40#define TWin32SendClass char; 41#endif; 42 ; 43namespace llvm {; 44 class GlobalValue;; 45 class StringRef;; 46}; 47 ; 48namespace clang {; 49 class CXXRecordDecl;; 50 class Decl;; 51 class DeclContext;; 52 class EnumDecl;; 53 class FunctionDecl;; 54 class IdentifierIterator;; 55 class NamedDecl;; 56 class NamespaceDecl;; 57 class TagDecl;; 58 class Type;; 59 class QualType;; 60}; 61namespace cling {; 62 class Interpreter;; 63 class MetaProcessor;; 64 class Transaction;; 65 class Value;; 66}; 67 ; 68class TClingCallbacks;; 69class TEnv;; 70class TFile;; 71class THashTable;; 72class TInterpreterValue;; 73class TMethod;; 74class TObjArray;; 75class TListOfDataMembers;; 76class TLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8h_source.html:92,Load,Loading,92,doc/master/TCling_8h_source.html,https://root.cern,https://root.cern/doc/master/TCling_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/metacling/src/TClingCallFunc.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Functions |; Variables ; TClingCallFunc.cxx File Reference. #include ""TClingCallFunc.h""; #include ""TClingClassInfo.h""; #include ""TClingMethodInfo.h""; #include ""TClingUtils.h""; #include ""TError.h""; #include ""TCling.h""; #include ""TInterpreter.h""; #include ""cling/Interpreter/CompilationOptions.h""; #include ""cling/Interpreter/Interpreter.h""; #include ""cling/Interpreter/LookupHelper.h""; #include ""cling/Interpreter/Transaction.h""; #include ""cling/Interpreter/Value.h""; #include ""cling/Utils/AST.h""; #include ""clang/AST/ASTContext.h""; #include ""clang/AST/Decl.h""; #include ""clang/AST/DeclCXX.h""; #include ""clang/AST/GlobalDecl.h""; #include ""clang/AST/PrettyPrinter.h""; #include ""clang/AST/QualTypeNames.h""; #include ""clang/AST/RecordLayout.h""; #include ""clang/AST/Type.h""; #include ""clang/Frontend/CompilerInstance.h""; #include ""clang/Lex/Preprocessor.h""; #include ""clang/Sema/Sema.h""; #include ""clang/Sema/Lookup.h""; #include ""llvm/ADT/APInt.h""; #include ""llvm/ExecutionEngine/ExecutionEngine.h""; #include ""llvm/ExecutionEngine/GenericValue.h""; #include ""llvm/Support/Casting.h""; #include ""llvm/Support/raw_ostream.h""; #include ""llvm/IR/LLVMContext.h""; #include ""llvm/IR/DerivedTypes.h""; #include ""llvm/IR/Function.h""; #include ""llvm/IR/GlobalValue.h""; #include ""llvm/IR/Module.h""; #include ""llvm/IR/Type.h""; #include ""clang/Sema/SemaInternal.h""; #include <map>; #include <string>; #include <sstream>. Include dependency graph for TClingCallFunc.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define X(type, name)    case BuiltinType::name: fArgVals[i] = cling::Value::Create(*fInterp, fArgVals[i].castAs<type>()); break;;  . Functions; static void EvaluateExpr (cling::Interpreter &interp, const Expr *E, cling::Value &V);  ; static void GetTypeAsString (QualType QT, string &type_name, ASTContex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClingCallFunc_8cxx.html:105,Load,Loading,105,doc/master/TClingCallFunc_8cxx.html,https://root.cern,https://root.cern/doc/master/TClingCallFunc_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: core/metacling/src/rootclingTCling.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rootclingTCling.cxx. Go to the documentation of this file. 1// @(#)root/meta:$Id$; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef R__DLLEXPORT; 12# if _WIN32; 13# define R__DLLEXPORT __declspec(dllexport); 14# else; 15# define R__DLLEXPORT __attribute__ ((visibility (""default""))); 16# endif; 17#endif; 18 ; 19#include ""rootclingTCling.h""; 20 ; 21#undef R__DLLEXPORT; 22 ; 23#ifdef __FreeBSD__; 24char* __progname;; 25char** environ;; 26#endif; 27 ; 28#include ""TROOT.h""; 29#include ""TCling.h""; 30 ; 31extern ""C""; 32const char ** *TROOT__GetExtraInterpreterArgs(); 33{; 34 return &TROOT::GetExtraInterpreterArgs();; 35}; 36 ; 37extern ""C""; 38const char *TROOT__GetIncludeDir(); 39{; 40 return TROOT::GetIncludeDir();; 41}; 42 ; 43extern ""C""; 44const char *TROOT__GetEtcDir(); 45{; 46 return TROOT::GetEtcDir();; 47}; 48 ; 49extern ""C""; 50cling::Interpreter *TCling__GetInterpreter(); 51{; 52 static auto triggerInitialization = gROOT;; 53 (void)triggerInitialization;; 54 return (cling::Interpreter *)((TCling *)gCling)->GetInterpreterImpl();; 55}; 56 ; TCling.h; gClingR__EXTERN TInterpreter * gClingDefinition TInterpreter.h:574; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TClingThis class defines an interface to the cling C++ interpreter.Definition TCling.h:102; TROOT::GetIncludeDirstatic const TString & GetIncludeDir()Get the include directory in the installation. Static utility function.Definition TROOT.cxx:3046; TROOT::GetEtcDirstatic const TString & GetEtcDir()Get the sysconfig directory in the i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootclingTCling_8cxx_source.html:103,Load,Loading,103,doc/master/rootclingTCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootclingTCling_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/rint/inc/TRint.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TRint.h File Reference. #include ""TApplication.h""; #include ""TString.h"". Include dependency graph for TRint.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TRint;  . corerintincTRint.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8h.html:89,Load,Loading,89,doc/master/TRint_8h.html,https://root.cern,https://root.cern/doc/master/TRint_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/rint/inc/TRint.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRint.h. Go to the documentation of this file. 1// @(#)root/rint:$Id$; 2// Author: Rene Brun 17/02/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TRint; 14#define ROOT_TRint; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// Rint //; 19// //; 20// Rint is the ROOT Interactive Interface. It allows interactive access //; 21// to the ROOT system via a C++ interpreter. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TApplication.h""; 26#include ""TString.h""; 27 ; 28class TFileHandler;; 29 ; 30 ; 31class TRint : public TApplication {; 32 ; 33private:; 34 Int_t fNcmd; // command history number; 35 TString fDefaultPrompt; // default prompt: ""root [%d] ""; 36 TString fNonContinuePrompt; // default prompt before continue prompt was set; 37 char fPrompt[64]; // interpreter prompt; 38 Bool_t fInterrupt; // if true macro execution will be stopped; 39 Int_t fCaughtSignal; // TRint just caught a signal; 40 TFileHandler *fInputHandler; // terminal input handler; 41 Bool_t fBackslashContinue{};// whether the last line ended with '\'; 42 ; 43 TRint(const TRint&) = delete;; 44 TRint& operator=(const TRint&) = delete;; 45 ; 46 void ExecLogon();; 47 Longptr_t ProcessRemote(const char *line, Int_t *error = nullptr) override;; 48 Longptr_t ProcessLineNr(const char* filestem, const char *line, Int_t *error = nullptr);; 49 ; 50public:; 51 TRint(const char *appClassName, Int_t *argc, char **argv, void *options = null",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8h_source.html:86,Load,Loading,86,doc/master/TRint_8h_source.html,https://root.cern,https://root.cern/doc/master/TRint_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/rint/src/TRint.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRint.cxx. Go to the documentation of this file. 1// @(#)root/rint:$Id$; 2// Author: Rene Brun 17/02/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// Rint //; 15// //; 16// Rint is the ROOT Interactive Interface. It allows interactive access //; 17// to the ROOT system via the Cling C/C++ interpreter. //; 18// //; 19//////////////////////////////////////////////////////////////////////////; 20 ; 21#include ""TROOT.h""; 22#include ""TClass.h""; 23#include ""TClassEdit.h""; 24#include ""TVirtualX.h""; 25#include ""TObjectTable.h""; 26#include ""TClassTable.h""; 27#include ""TStopwatch.h""; 28#include ""TBenchmark.h""; 29#include ""TRint.h""; 30#include ""TSystem.h""; 31#include ""TEnv.h""; 32#include ""TSysEvtHandler.h""; 33#include ""TSystemDirectory.h""; 34#include ""TError.h""; 35#include ""TException.h""; 36#include ""TInterpreter.h""; 37#include ""TObjString.h""; 38#include ""TObjArray.h""; 39#include ""TStorage.h"" // ROOT::Internal::gMmallocDesc; 40#include ""ThreadLocalStorage.h""; 41#include ""TTabCom.h""; 42#include <cstdlib>; 43#include <algorithm>; 44#include <iostream>; 45#include ""Getline.h""; 46#include ""strlcpy.h""; 47#include ""snprintf.h""; 48 ; 49#ifdef R__UNIX; 50#include <signal.h>; 51#include <unistd.h>; 52#endif; 53 ; 54////////////////////////////////////////////////////////////////////////////////; 55 ; 56static Int_t Key_Pressed(Int_t key); 57{; 58 gApplication->KeyPressed(key);; 59 return 0;; 60}; 61 ; 62////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:88,Load,Loading,88,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/unix/inc/TUnixSystem.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs ; TUnixSystem.h File Reference. #include ""TSystem.h""; #include ""TSysEvtHandler.h""; #include ""TTimer.h""; #include <string>. Include dependency graph for TUnixSystem.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TUnixSystem;  . Typedefs; typedef void(* SigHandler_t) (ESignals);  . Typedef Documentation. ◆ SigHandler_t. typedef void(* SigHandler_t) (ESignals). Definition at line 29 of file TUnixSystem.h. coreunixincTUnixSystem.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8h.html:95,Load,Loading,95,doc/master/TUnixSystem_8h.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/unix/inc/TUnixSystem.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnixSystem.h. Go to the documentation of this file. 1// @(#)root/unix:$Id$; 2// Author: Fons Rademakers 15/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TUnixSystem; 13#define ROOT_TUnixSystem; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TUnixSystem //; 19// //; 20// Class providing an interface to the UNIX Operating System. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TSystem.h""; 25#include ""TSysEvtHandler.h""; 26#include ""TTimer.h""; 27#include <string>; 28 ; 29typedef void (*SigHandler_t)(ESignals);; 30 ; 31 ; 32class TUnixSystem : public TSystem {; 33 ; 34private:; 35 void FillWithCwd(char *cwd) const;; 36 ; 37protected:; 38 const char *GetLinkedLibraries() override;; 39 ; 40 // static functions providing semi-low level interface to raw Unix; 41 static int UnixMakedir(const char *name);; 42 static void *UnixOpendir(const char *name);; 43 static const char *UnixGetdirentry(void *dir);; 44 static const char *UnixHomedirectory(const char *user = nullptr);; 45 static const char *UnixHomedirectory(const char *user, char *path, char *mydir);; 46 static Long64_t UnixNow();; 47 static int UnixWaitchild();; 48 static int UnixSetitimer(Long_t ms);; 49 static int UnixSelect(Int_t nfds, TFdSet *readready, TFdSet *writeready,; 50 Long_t timeout);; 51 static void UnixSignal(ESignals sig, SigHandler_t h);; 52 static const char *UnixSigname(ESignals sig);; 53 static void UnixSigAlarm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8h_source.html:92,Load,Loading,92,doc/master/TUnixSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/unix/src/TUnixSystem.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnixSystem.cxx. Go to the documentation of this file. 1// @(#)root/unix:$Id: 887c618d89c4ed436e4034fc133f468fecad651b $; 2// Author: Fons Rademakers 15/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// TUnixSystem //; 15// //; 16// Class providing an interface to the UNIX Operating System. //; 17// //; 18//////////////////////////////////////////////////////////////////////////; 19 ; 20#include ""RConfigure.h""; 21#include <ROOT/RConfig.hxx>; 22#include <ROOT/FoundationUtils.hxx>; 23#include ""TUnixSystem.h""; 24#include ""TROOT.h""; 25#include ""TError.h""; 26#include ""TOrdCollection.h""; 27#include ""TRegexp.h""; 28#include ""TPRegexp.h""; 29#include ""TException.h""; 30#include ""TEnv.h""; 31#include ""Getline.h""; 32#include ""TInterpreter.h""; 33#include ""TApplication.h""; 34#include ""TObjString.h""; 35#include ""TVirtualMutex.h""; 36#include ""ThreadLocalStorage.h""; 37#include ""TObjArray.h""; 38#include ""snprintf.h""; 39#include ""strlcpy.h""; 40#include <iostream>; 41#include <fstream>; 42#include <map>; 43#include <algorithm>; 44#include <atomic>; 45 ; 46//#define G__OLDEXPAND; 47 ; 48#include <unistd.h>; 49#include <stdlib.h>; 50#include <sys/types.h>; 51#if defined(R__SUN) || defined(R__AIX) || \; 52 defined(R__LINUX) || defined(R__SOLARIS) || \; 53 defined(R__FBSD) || defined(R__OBSD) || \; 54 defined(R__MACOSX) || defined(R__HURD); 55#define HAS_DIRENT; 56#endif; 57#ifdef HAS_DIRENT; 58# include <dirent.h>; 59#else; 60# include <sys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:94,Load,Loading,94,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/zip/inc/Compression.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions |; Variables ; Compression.h File Reference. #include ""RtypesCore.h""; #include ""ROOT/RConfig.hxx""; #include <string>. Include dependency graph for Compression.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::RCompressionSetting::EAlgorithm;  ; struct  ROOT::RCompressionSetting::EDefaults;  ; struct  ROOT::RCompressionSetting::ELevel;  ; struct  ROOT::RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; int ROOT::CompressionSettings (RCompressionSetting::EAlgorithm::EValues algorithm, int compressionLevel);  ; int ROOT::CompressionSettings (ROOT::ECompressionAlgorithm algorithm, int compressionLevel) R__DEPRECATED(6;  ; enum ROOT::R__DEPRECATED (6, 34, ""Use RCompressionSetting::EAlgorithm instead"") ECompressionAlgorithm;  . Variables; int Use the overload accepting RCompressionSetting::EAlgorithm ROOT::instead;  . corezipincCompression.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Compression_8h.html:94,Load,Loading,94,doc/master/Compression_8h.html,https://root.cern,https://root.cern/doc/master/Compression_8h.html,1,['Load'],['Loading']
Performance,". ROOT: core/zip/inc/Compression.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Compression.h. Go to the documentation of this file. 1// @(#)root/zip:$Id$; 2// Author: David Dagenhart May 2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_Compression; 13#define ROOT_Compression; 14 ; 15#include ""RtypesCore.h""; 16#include ""ROOT/RConfig.hxx""; 17 ; 18#include <string>; 19 ; 20namespace ROOT {; 21 ; 22/// The global settings depend on a global variable named R__ZipMode which can be; 23/// modified by a global function named R__SetZipMode. Both are defined in Bits.h.; 24///; 25/// - The default is to use the global setting and the default of the global; 26/// setting is to use the ZLIB compression algorithm.; 27/// - The LZMA algorithm (from the XZ package) is also available. The LZMA; 28/// compression usually results in greater compression factors, but takes; 29/// more CPU time and memory when compressing. LZMA memory usage is particularly; 30/// high for compression levels 8 and 9.; 31/// - Finally, the LZ4 package results in worse compression ratios; 32/// than ZLIB but achieves much faster decompression rates.; 33///; 34/// The current algorithms support level 1 to 9. The higher the level the greater; 35/// the compression and more CPU time and memory resources used during compression.; 36/// Level 0 means no compression.; 37///; 38/// Recommendation for the compression algorithm's levels:; 39/// - ZLIB is recommended to be used with compression level 1 [101]; 40/// - LZMA is recommended to be used with compression level 7-8 (higher is better,; 41/// since in the case of LZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Compression_8h_source.html:91,Load,Loading,91,doc/master/Compression_8h_source.html,https://root.cern,https://root.cern/doc/master/Compression_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: core/zip/inc/Compression.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Compression.h. Go to the documentation of this file. 1// @(#)root/zip:$Id$; 2// Author: David Dagenhart May 2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_Compression; 13#define ROOT_Compression; 14 ; 15#include ""RtypesCore.h""; 16 ; 17#include <string>; 18 ; 19namespace ROOT {; 20 ; 21/// The global settings depend on a global variable named R__ZipMode which can be; 22/// modified by a global function named R__SetZipMode. Both are defined in Bits.h.; 23///; 24/// - The default is to use the global setting and the default of the global; 25/// setting is to use the ZLIB compression algorithm.; 26/// - The LZMA algorithm (from the XZ package) is also available. The LZMA; 27/// compression usually results in greater compression factors, but takes; 28/// more CPU time and memory when compressing. LZMA memory usage is particularly; 29/// high for compression levels 8 and 9.; 30/// - Finally, the LZ4 package results in worse compression ratios; 31/// than ZLIB but achieves much faster decompression rates.; 32///; 33/// The current algorithms support level 1 to 9. The higher the level the greater; 34/// the compression and more CPU time and memory resources used during compression.; 35/// Level 0 means no compression.; 36///; 37/// Recommendation for the compression algorithm's levels:; 38/// - ZLIB is recommended to be used with compression level 1 [101]; 39/// - LZMA is recommended to be used with compression level 7-8 (higher is better,; 40/// since in the case of LZMA we don't care about compressi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Compression_8h_source.html:90,Load,Loading,90,doc/v632/Compression_8h_source.html,https://root.cern,https://root.cern/doc/v632/Compression_8h_source.html,1,['Load'],['Loading']
Performance,. ROOT: double Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. double Class Reference. The documentation for this class was generated from the following files:. double. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classdouble.html:75,Load,Loading,75,doc/master/classdouble.html,https://root.cern,https://root.cern/doc/master/classdouble.html,1,['Load'],['Loading']
Performance,. ROOT: double Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. double Class Reference. The documentation for this class was generated from the following files:. double. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classdouble.html:74,Load,Loading,74,doc/v632/classdouble.html,https://root.cern,https://root.cern/doc/v632/classdouble.html,1,['Load'],['Loading']
Performance,". ROOT: fileDesc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; fileDesc Class Reference. . Definition at line 741 of file TProofBench.cxx. Public Member Functions;  fileDesc (const char *n, const char *o, Long_t t, const char *d);  ; Int_t Compare (const TObject *o) const override;  Compare abstract method. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classfileDesc.html:77,Load,Loading,77,doc/master/classfileDesc.html,https://root.cern,https://root.cern/doc/master/classfileDesc.html,1,['Load'],['Loading']
Performance,". ROOT: fw3dlego Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Variables ; fw3dlego Namespace Reference. Variables; const double xbins [xbins_n];  ; const int xbins_n = 83;  . Variable Documentation. ◆ xbins. const double fw3dlego::xbins[xbins_n]. Initial value:= {; -5.191, -4.889, -4.716, -4.538, -4.363, -4.191, -4.013, -3.839, -3.664, -3.489, -3.314, -3.139, -2.964, -2.853,; -2.650, -2.500, -2.322, -2.172, -2.043, -1.930, -1.830, -1.740, -1.653, -1.566, -1.479, -1.392, -1.305, -1.218,; -1.131, -1.044, -0.957, -0.870, -0.783, -0.696, -0.609, -0.522, -0.435, -0.348, -0.261, -0.174, -0.087, 0.000,; 0.087, 0.174, 0.261, 0.348, 0.435, 0.522, 0.609, 0.696, 0.783, 0.870, 0.957, 1.044, 1.131, 1.218,; 1.305, 1.392, 1.479, 1.566, 1.653, 1.740, 1.830, 1.930, 2.043, 2.172, 2.322, 2.500, 2.650, 2.853,; 2.964, 3.139, 3.314, 3.489, 3.664, 3.839, 4.013, 4.191, 4.363, 4.538, 4.716, 4.889, 5.191}. Definition at line 49 of file collection_proxies.C. ◆ xbins_n. const int fw3dlego::xbins_n = 83. Definition at line 48 of file collection_proxies.C. fw3dlego. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespacefw3dlego.html:81,Load,Loading,81,doc/master/namespacefw3dlego.html,https://root.cern,https://root.cern/doc/master/namespacefw3dlego.html,1,['Load'],['Loading']
Performance,". ROOT: geom/gdml/writer.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. writer.py. Go to the documentation of this file. 1# @(#)root/gdml:$Id$; 2# Author: Witold Pokorski 05/06/2006; 3# This is the application-independent part of the GDML 'writer' implementation.; 4# It contains the 'writeFile' method (at the end of the file) which does the actual; 5# formating and writing out of the GDML file as well as the specialized 'add-element'; 6# methods for all the supported GDML elements. These methods are used to build; 7# the content of the GDML document, which is then generatd using the 'writeFile' method.; 8 ; 9# The constructor of this class takes the output file (.gdml) as argument.; 10# An instance of this class should be passed to the constructor of application-specific; 11# 'writer binding' (in the present case ROOTwriter) as argument.; 12 ; 13# For any question or remarks concerning this code, please send an email to; 14# Witold.Pokorski@cern.ch.; 15 ; 16class writer(object):; 17 ; 18 def __init__(self, fname):; 19 ; 20 self.gdmlfile = fname; 21 self.define = ['define',{},[]]; 22 self.materials = ['materials',{},[]]; 23 self.solids = ['solids',{},[]]; 24 self.structure = ['structure',{},[]]; 25 self.document = ['gdml',{'xmlns:gdml':""http://cern.ch/2001/Schemas/GDML"",; 26 'xmlns:xsi':""http://www.w3.org/2001/XMLSchema-instance"",; 27 'xsi:noNamespaceSchemaLocation':""gdml.xsd""},; 28 [self.define, self.materials, self.solids, self.structure]]; 29 ; 30 def addPosition(self, name, x, y, z):; 31 self.define[2].append(['position',{'name':name, 'x':x, 'y':y, 'z':z, 'unit':'cm'},[]]); 32 ; 33 def addRotation(self, name, x, y, z):; 34 self.define[2].append(['rotation',{'name':name, 'x':x, 'y':y, 'z':z, 'unit':'deg'},[]]); 35 ; 36 def addMaterial(self, name, a, z, rho):; 37 self.materials[2].append(['material', {'name':name, 'Z':z},; 38 [['D',{'value':rho},[]], ['atom',{'value':a},[]]] ] ); 39 ; 40 def addMixture(self, name, rh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/writer_8py_source.html:84,Load,Loading,84,doc/master/writer_8py_source.html,https://root.cern,https://root.cern/doc/master/writer_8py_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoArb8.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoArb8.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 24/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoArb8; 13#define ROOT_TGeoArb8; 14 ; 15#include ""TGeoBBox.h""; 16 ; 17class TGeoArb8 : public TGeoBBox {; 18protected:; 19 enum EGeoArb8Type {; 20 // kArb8Trd1 = BIT(25), // trd1 type; 21 // kArb8Trd2 = BIT(26), // trd2 type; 22 kArb8Trap = BIT(27), // planar surface trapezoid; 23 kArb8Tra = BIT(28) // general twisted trapezoid; 24 };; 25 // data members; 26 Double_t fDz{0}; // half length in Z; 27 Double_t *fTwist{nullptr}; //! [4] tangents of twist angles; 28 Double_t fXY[8][2]; // list of vertices; 29 ; 30 TGeoArb8(const TGeoArb8 &) = delete;; 31 TGeoArb8 &operator=(const TGeoArb8 &) = delete;; 32 ; 33 void CopyTwist(Double_t *twist = nullptr);; 34 ; 35public:; 36 // constructors; 37 TGeoArb8();; 38 TGeoArb8(Double_t dz, Double_t *vertices = nullptr);; 39 TGeoArb8(const char *name, Double_t dz, Double_t *vertices = nullptr);; 40 // destructor; 41 ~TGeoArb8() override;; 42 // methods; 43 Double_t Capacity() const override;; 44 void ComputeBBox() override;; 45 void ComputeNormal(const Double_t *point, const Double_t *dir, Double_t *norm) override;; 46 void ComputeNormal_v(const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;; 47 void ComputeTwist();; 48 Bool_t Contains(const Double_t *point) const override;; 49 void Contains_v(const Double_t *points, Bool_t *inside, Int_t vecsize) const override;; 50 Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoArb8_8h_source.html:89,Load,Loading,89,doc/master/TGeoArb8_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoArb8_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoElement.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoElement.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 17/06/04; 3// Added support for radionuclides: Mihaela Gheata 24/08/2006; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoElement; 13#define ROOT_TGeoElement; 14 ; 15#include ""TNamed.h""; 16 ; 17#include ""TAttLine.h""; 18 ; 19#include ""TAttFill.h""; 20 ; 21#include ""TAttMarker.h""; 22 ; 23#include ""TObjArray.h""; 24 ; 25#include <map>; 26 ; 27class TGeoElementTable;; 28class TGeoIsotope;; 29 ; 30////////////////////////////////////////////////////////////////////////////; 31// //; 32// TGeoElement - a chemical element //; 33// //; 34////////////////////////////////////////////////////////////////////////////; 35 ; 36class TGeoElement : public TNamed {; 37protected:; 38 enum EGeoElement { kElemUsed = BIT(17), kElemDefined = BIT(18), kElementChecked = BIT(19) };; 39 ; 40 Int_t fZ; // Z of element; 41 Int_t fN; // Number of nucleons; 42 Int_t fNisotopes; // Number of isotopes for the element; 43 Double_t fA; // A of element; 44 TObjArray *fIsotopes; // List of isotopes; 45 Double_t *fAbundances; //[fNisotopes] Array of relative isotope abundances; 46 Double_t fCoulomb; // Coulomb correction factor; 47 Double_t fRadTsai; // Tsai formula for the radiation length; 48 ; 49private:; 50 TGeoElement(const TGeoElement &other) = delete;; 51 TGeoElement &operator=(const TGeoElement &other) = delete;; 52 ; 53 // Compute the Coulomb correction factor; 54 void ComputeCoulombFactor();; 55 // Compute the Tsai formula fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoElement_8h_source.html:92,Load,Loading,92,doc/master/TGeoElement_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoElement_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoManager.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TGeoManager.h File Reference. #include <mutex>; #include <thread>; #include <map>; #include ""TNamed.h""; #include ""TObjArray.h""; #include ""TGeoNavigator.h"". Include dependency graph for TGeoManager.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGeoManager;  The manager class for any TGeo geometry. More...;  . Variables; R__EXTERN TGeoManager * gGeoManager;  . Variable Documentation. ◆ gGeoManager. R__EXTERN TGeoManager* gGeoManager. Definition at line 608 of file TGeoManager.h. geomgeomincTGeoManager.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8h.html:95,Load,Loading,95,doc/master/TGeoManager_8h.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8h.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoManager.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoManager.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoManager; 13#define ROOT_TGeoManager; 14 ; 15#include <mutex>; 16#include <thread>; 17#include <map>; 18 ; 19#include ""TNamed.h""; 20#include ""TObjArray.h""; 21#include ""TGeoNavigator.h""; 22 ; 23// forward declarations; 24class TVirtualGeoTrack;; 25class TGeoNode;; 26class TGeoPhysicalNode;; 27class TGeoPNEntry;; 28class TGeoVolume;; 29class TGeoVolumeMulti;; 30class TGeoMatrix;; 31class TGeoHMatrix;; 32class TGeoMaterial;; 33class TGeoMedium;; 34class TGeoShape;; 35class TVirtualGeoPainter;; 36class THashList;; 37class TGeoParallelWorld;; 38class TGeoRegion;; 39class TGDMLMatrix;; 40class TGeoOpticalSurface;; 41class TGeoSkinSurface;; 42class TGeoBorderSurface;; 43 ; 44class TGeoManager : public TNamed {; 45public:; 46 enum EDefaultUnits { kG4Units = 0, kRootUnits = 1 };; 47 ; 48protected:; 49 static std::mutex fgMutex; //! mutex for navigator booking in MT mode; 50 static Bool_t fgLock; //! Lock preventing a second geometry to be loaded; 51 static Int_t fgVerboseLevel; //! Verbosity level for Info messages (no IO).; 52 static Int_t fgMaxLevel; //! Maximum level in geometry; 53 static Int_t fgMaxDaughters; //! Maximum number of daughters; 54 static Int_t fgMaxXtruVert; //! Maximum number of Xtru vertices; 55 static UInt_t fgExportPrecision; //! Precision to be used in ASCII exports; 56 static EDefaultUnits fgDefaultUnits; //! Default unit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8h_source.html:92,Load,Loading,92,doc/master/TGeoManager_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoMaterial.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TGeoMaterial.h File Reference. #include <TNamed.h>; #include <TAttFill.h>; #include <TList.h>; #include ""TGeoElement.h"". Include dependency graph for TGeoMaterial.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGeoMaterial;  Base class describing materials. More...;  ; class  TGeoMixture;  Mixtures of elements. More...;  . Variables; static const Double_t STP_pressure = 6.32420e+8;  ; static const Double_t STP_temperature = 273.15;  . Variable Documentation. ◆ STP_pressure. const Double_t STP_pressure = 6.32420e+8. static . Definition at line 32 of file TGeoMaterial.h. ◆ STP_temperature. const Double_t STP_temperature = 273.15. static . Definition at line 31 of file TGeoMaterial.h. geomgeomincTGeoMaterial.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMaterial_8h.html:96,Load,Loading,96,doc/master/TGeoMaterial_8h.html,https://root.cern,https://root.cern/doc/master/TGeoMaterial_8h.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoMaterial.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMaterial.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoMaterial; 13#define ROOT_TGeoMaterial; 14 ; 15#include <TNamed.h>; 16#include <TAttFill.h>; 17#include <TList.h>; 18 ; 19#ifdef R__LESS_INCLUDES; 20class TGeoElement;; 21class TGeoElementTable;; 22#else; 23#include ""TGeoElement.h""; 24#endif; 25 ; 26// forward declarations; 27class TGeoExtension;; 28class TGDMLMatrix;; 29 ; 30// Some units used in G4; 31static const Double_t STP_temperature = 273.15; // [K]; 32static const Double_t STP_pressure = 6.32420e+8; // [MeV/mm3]; 33 ; 34class TGeoMaterial : public TNamed, public TAttFill {; 35public:; 36 enum EGeoMaterial { kMatUsed = BIT(17), kMatSavePrimitive = BIT(18) };; 37 enum EGeoMaterialState { kMatStateUndefined, kMatStateSolid, kMatStateLiquid, kMatStateGas };; 38 ; 39protected:; 40 Int_t fIndex; // material index; 41 Double_t fA; // A of material; 42 Double_t fZ; // Z of material; 43 Double_t fDensity; // density of material; 44 Double_t fRadLen; // radiation length; 45 Double_t fIntLen; // interaction length; 46 Double_t fTemperature; // temperature; 47 Double_t fPressure; // pressure; 48 EGeoMaterialState fState; // material state; 49 TObject *fShader; // shader with optical properties; 50 TObject *fCerenkov; // pointer to class with Cerenkov properties; 51 TGeoElement *fElement; // pointer to element composing the material; 52 TList fProperties; // user-defined properties; 53 TLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMaterial_8h_source.html:93,Load,Loading,93,doc/master/TGeoMaterial_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoMaterial_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoMatrix.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TGeoMatrix.h File Reference. #include ""TNamed.h"". Include dependency graph for TGeoMatrix.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGeoCombiTrans;  Class describing rotation + translation. More...;  ; class  TGeoGenTrans;  Most general transformation, holding a translation, a rotation and a scale. More...;  ; class  TGeoHMatrix;  Matrix class used for computing global transformations Should NOT be used for node definition. More...;  ; class  TGeoIdentity;  An identity transformation. More...;  ; class  TGeoMatrix;  Geometrical transformation package. More...;  ; class  TGeoRotation;  Class describing rotations. More...;  ; class  TGeoScale;  Class describing scale transformations. More...;  ; class  TGeoTranslation;  Class describing translations. More...;  . Variables; R__EXTERN TGeoIdentity * gGeoIdentity;  ; const Double_t kIdentityMatrix [3 *3] = {1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0};  ; const Double_t kNullVector [3] = {0.0, 0.0, 0.0};  ; const Double_t kUnitScale [3] = {1.0, 1.0, 1.0};  . Variable Documentation. ◆ gGeoIdentity. R__EXTERN TGeoIdentity* gGeoIdentity. Definition at line 537 of file TGeoMatrix.h. ◆ kIdentityMatrix. const Double_t kIdentityMatrix[3 *3] = {1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0}. Definition at line 26 of file TGeoMatrix.h. ◆ kNullVector. const Double_t kNullVector[3] = {0.0, 0.0, 0.0}. Definition at line 24 of file TGeoMatrix.h. ◆ kUnitScale. const Double_t kUnitScale[3] = {1.0, 1.0, 1.0}. Definition at line 28 of file TGeoMatrix.h. geomgeomincTGeoMatrix.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:15 (GVA Time) using Doxygen 1.9.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8h.html:94,Load,Loading,94,doc/master/TGeoMatrix_8h.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8h.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoMatrix.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMatrix.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoMatrix; 13#define ROOT_TGeoMatrix; 14 ; 15/*************************************************************************; 16 * Geometrical transformations. TGeoMatrix - base class, TGeoTranslation *; 17 * TGeoRotation, TGeoScale, TGeoCombiTrans, TGeoGenTrans . *; 18 * *; 19 *************************************************************************/; 20 ; 21#include ""TNamed.h""; 22 ; 23//--- globals; 24const Double_t kNullVector[3] = {0.0, 0.0, 0.0};; 25 ; 26const Double_t kIdentityMatrix[3 * 3] = {1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0};; 27 ; 28const Double_t kUnitScale[3] = {1.0, 1.0, 1.0};; 29 ; 30class TGeoHMatrix;; 31 ; 32////////////////////////////////////////////////////////////////////////////; 33// //; 34// TGeoMatrix - base class for geometrical transformations. //; 35// //; 36////////////////////////////////////////////////////////////////////////////; 37 ; 38class TGeoMatrix : public TNamed {; 39public:; 40 enum EGeoTransfTypes {; 41 kGeoIdentity = 0,; 42 kGeoShared = BIT(14),; 43 kGeoTranslation = BIT(17),; 44 kGeoRotation = BIT(18),; 45 kGeoScale = BIT(19),; 46 kGeoReflection = BIT(20),; 47 kGeoRegistered = BIT(21),; 48 kGeoSavePrimitive = BIT(22),; 49 kGeoMatrixOwned = BIT(23),; 50 kGeoCombiTrans = kGeoTranslation | kGeoRotation,; 51 kGeoGenTrans = kGeoTranslation | kGeoRotation | kGeoScale,; 52 kGeoMatrixBits = kGeoShared ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8h_source.html:91,Load,Loading,91,doc/master/TGeoMatrix_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoMedium.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMedium.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Rene Brun 26/12/02; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoMedium; 13#define ROOT_TGeoMedium; 14 ; 15#include ""TGeoMaterial.h""; 16 ; 17////////////////////////////////////////////////////////////////////////////; 18// //; 19// TGeoMedium - base class describing tracking media //; 20// //; 21////////////////////////////////////////////////////////////////////////////; 22 ; 23class TGeoMedium : public TNamed {; 24public:; 25 enum EGeoMedium { kMedSavePrimitive = BIT(18) };; 26 ; 27protected:; 28 Int_t fId; // unique Id; 29 Double_t fParams[20]; // parameters; 30 TGeoMaterial *fMaterial; // pointer to material; 31 ; 32 // methods; 33 TGeoMedium(const TGeoMedium &);; 34 TGeoMedium &operator=(const TGeoMedium &);; 35 ; 36public:; 37 // constructors; 38 TGeoMedium();; 39 TGeoMedium(const char *name, Int_t numed, const TGeoMaterial *mat, Double_t *params = nullptr);; 40 TGeoMedium(const char *name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd,; 41 Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin);; 42 ~TGeoMedium() override;; 43 // methods; 44 virtual Int_t GetByteCount() const { return sizeof(*this); }; 45 Int_t GetId() const { return fId; }; 46 Double_t GetParam(Int_t i) const { return fParams[i]; }; 47 void SetParam(Int_t i, Double_t val) { fParams[i] = val; }; 48 const char *GetPointerName() const;; 49 TGeoMaterial *GetMaterial() const { return fMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMedium_8h_source.html:91,Load,Loading,91,doc/master/TGeoMedium_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoMedium_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoNavigator.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoNavigator.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Mihaela Gheata 30/05/07; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoNavigator; 13#define ROOT_TGeoNavigator; 14 ; 15#include ""TObject.h""; 16 ; 17#include ""TGeoCache.h""; 18 ; 19////////////////////////////////////////////////////////////////////////////; 20// //; 21// TGeoNavigator - Class containing the implementation of all navigation //; 22// methods.; 23// //; 24////////////////////////////////////////////////////////////////////////////; 25 ; 26class TGeoManager;; 27class TGeoNode;; 28class TGeoVolume;; 29class TGeoMatrix;; 30class TGeoHMatrix;; 31 ; 32class TGeoNavigator : public TObject {; 33 ; 34protected:; 35 TGeoNavigator(const TGeoNavigator &) = delete;; 36 TGeoNavigator &operator=(const TGeoNavigator &) = delete;; 37 TGeoNode *FindInCluster(Int_t *cluster, Int_t nc);; 38 Int_t GetTouchedCluster(Int_t start, Double_t *point, Int_t *check_list, Int_t ncheck, Int_t *result);; 39 TGeoNode *CrossDivisionCell();; 40 void SafetyOverlaps();; 41 ; 42private:; 43 Double_t fStep; //! step to be done from current point and direction; 44 Double_t fSafety; //! safety radius from current point; 45 Double_t fLastSafety; //! last computed safety radius; 46 Double_t fNormal[3]; //! cosine of incident angle on current checked surface; 47 Double_t fCldir[3]; //! unit vector to current closest shape; 48 Double_t fCldirChecked[3]; //! unit vector to current checked shape; 49 Double_t fPoint[3]; //! current po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoNavigator_8h_source.html:94,Load,Loading,94,doc/master/TGeoNavigator_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoNavigator_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoNode.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoNode.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 24/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoNode; 13#define ROOT_TGeoNode; 14 ; 15#include ""TGeoAtt.h""; 16 ; 17#include ""TNamed.h""; 18 ; 19#include ""TGeoVolume.h""; 20 ; 21#include ""TGeoPatternFinder.h""; 22 ; 23// forward declarations; 24class TString;; 25class TGeoVolume;; 26class TGeoShape;; 27class TGeoMedium;; 28class TGeoMatrix;; 29class TGeoHMatrix;; 30class TGeoExtension;; 31 ; 32////////////////////////////////////////////////////////////////////////////; 33// //; 34// TGeoNode - base class for logical nodes. They represent volumes //; 35// positioned inside a mother volume //; 36// //; 37////////////////////////////////////////////////////////////////////////////; 38 ; 39class TGeoNode : public TNamed, public TGeoAtt {; 40protected:; 41 TGeoVolume *fVolume = nullptr; // volume associated with this; 42 TGeoVolume *fMother = nullptr; // mother volume; 43 Int_t fNumber = 0; // copy number; 44 Int_t fNovlp = 0; // number of overlaps; 45 Int_t *fOverlaps = nullptr; //[fNovlp] list of indices for overlapping brothers; 46 TGeoExtension *fUserExtension = nullptr; //! Transient user-defined extension to volumes; 47 TGeoExtension *fFWExtension = nullptr; //! Transient framework-defined extension to volumes; 48 ; 49 void CopyOverlaps(Int_t *ovlp, Int_t novlp);; 50 ; 51private:; 52 TGeoNode(const TGeoNode &) = delete;; 53 TGeoNode &operator=(const TGeoNode &) = delete;; 54 ; 55public:; 56 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoNode_8h_source.html:89,Load,Loading,89,doc/master/TGeoNode_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoNode_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoPhysicalNode.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPhysicalNode.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 17/02/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoPhysicalNode; 13#define ROOT_TGeoPhysicalNode; 14 ; 15#include ""TNamed.h""; 16 ; 17#include ""TAttLine.h""; 18 ; 19// forward declarations; 20class TGeoHMatrix;; 21class TGeoMatrix;; 22class TGeoVolume;; 23class TGeoNode;; 24class TGeoShape;; 25class TGeoNavigator;; 26class TObjArray;; 27 ; 28//////////////////////////////////////////////////////////////////////////////; 29// //; 30// TGeoPhysicalNode - class representing an unique object associated with a //; 31// path. //; 32// //; 33//////////////////////////////////////////////////////////////////////////////; 34 ; 35class TGeoPhysicalNode : public TNamed, public TAttLine {; 36protected:; 37 Int_t fLevel; // depth in the geometry tree; 38 TObjArray *fMatrices; // global transformation matrices; 39 TObjArray *fNodes; // branch of nodes; 40 TGeoHMatrix *fMatrixOrig; // original local matrix of the last node in the path; 41 ; 42 TGeoPhysicalNode(const TGeoPhysicalNode &) = delete;; 43 TGeoPhysicalNode &operator=(const TGeoPhysicalNode &) = delete;; 44 ; 45 void SetAligned(Bool_t flag = kTRUE) { TObject::SetBit(kGeoPNodeAligned, flag); }; 46 Bool_t SetPath(const char *path);; 47 void SetBranchAsState();; 48 ; 49public:; 50 enum {; 51 kGeoPNodeFull = BIT(10), // full branch is visible (default only last node); 52 kGeoPNodeVisible = BIT(11), // this node is visible (default); 53 kG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPhysicalNode_8h_source.html:97,Load,Loading,97,doc/master/TGeoPhysicalNode_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoPhysicalNode_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoShape.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoShape.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 31/01/02; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoShape; 13#define ROOT_TGeoShape; 14 ; 15#include ""TNamed.h""; 16 ; 17// forward declarations; 18class TGeoBoolCombinator;; 19class TGeoBBox;; 20class TGeoMatrix;; 21class TGeoHMatrix;; 22class TGeoVolume;; 23class TBuffer3D;; 24 ; 25class TGeoShape : public TNamed {; 26private:; 27 static TGeoMatrix *fgTransform; // current transformation matrix that applies to shape; 28 static Double_t fgEpsMch; // Machine round-off error; 29public:; 30 enum EShapeType {; 31 kBitMask32 = 0xffffffff,; 32 kGeoNoShape = 0,; 33 kGeoBad = BIT(0),; 34 kGeoRSeg = BIT(1),; 35 kGeoPhiSeg = BIT(2),; 36 kGeoThetaSeg = BIT(3),; 37 kGeoVisX = BIT(4),; 38 kGeoVisY = BIT(5),; 39 kGeoVisZ = BIT(6),; 40 kGeoRunTimeShape = BIT(7),; 41 kGeoInvalidShape = BIT(8),; 42 kGeoTorus = BIT(9),; 43 kGeoBox = BIT(10),; 44 kGeoPara = BIT(11),; 45 kGeoSph = BIT(12),; 46 kGeoTube = BIT(13),; 47 kGeoTubeSeg = BIT(14),; 48 kGeoCone = BIT(15),; 49 kGeoConeSeg = BIT(16),; 50 kGeoPcon = BIT(17),; 51 kGeoPgon = BIT(18),; 52 kGeoArb8 = BIT(19),; 53 kGeoEltu = BIT(20),; 54 kGeoTrap = BIT(21),; 55 kGeoCtub = BIT(22),; 56 kGeoTrd1 = BIT(23),; 57 kGeoTrd2 = BIT(24),; 58 kGeoComb = BIT(25),; 59 kGeoClosedShape = BIT(26),; 60 kGeoXtru = BIT(27),; 61 kGeoParaboloid = BIT(28),; 62 kGeoHalfSpace = BIT(29),; 63 kGeoHype = BIT(30),; 64 kGeoSavePrimitive = BIT(20); 65 };; 66 virtual void ClearThreadData() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoShape_8h_source.html:90,Load,Loading,90,doc/master/TGeoShape_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoShape_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoTube.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoTube.h. Go to the documentation of this file. 1// @(#)root/base:$Id$; 2// Author: Andrei Gheata 24/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGeoTube; 13#define ROOT_TGeoTube; 14 ; 15#include ""TGeoBBox.h""; 16 ; 17class TGeoTube : public TGeoBBox {; 18protected:; 19 // data members; 20 Double_t fRmin; // inner radius; 21 Double_t fRmax; // outer radius; 22 Double_t fDz; // half length; 23 // methods; 24 ; 25 TGeoTube(const TGeoTube &) = delete;; 26 TGeoTube &operator=(const TGeoTube &) = delete;; 27 ; 28public:; 29 // constructors; 30 TGeoTube();; 31 TGeoTube(Double_t rmin, Double_t rmax, Double_t dz);; 32 TGeoTube(const char *name, Double_t rmin, Double_t rmax, Double_t dz);; 33 TGeoTube(Double_t *params);; 34 // destructor; 35 ~TGeoTube() override;; 36 // methods; 37 ; 38 Double_t Capacity() const override;; 39 static Double_t Capacity(Double_t rmin, Double_t rmax, Double_t dz);; 40 void ComputeBBox() override;; 41 void ComputeNormal(const Double_t *point, const Double_t *dir, Double_t *norm) override;; 42 void ComputeNormal_v(const Double_t *points, const Double_t *dirs, Double_t *norms, Int_t vecsize) override;; 43 static void ComputeNormalS(const Double_t *point, const Double_t *dir, Double_t *norm, Double_t rmin, Double_t rmax,; 44 Double_t dz);; 45 Bool_t Contains(const Double_t *point) const override;; 46 void Contains_v(const Double_t *points, Bool_t *inside, Int_t vecsize) const override;; 47 static Double_t; 48 DistFromInsideS(const Double_t *point, const Double_t *dir, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoTube_8h_source.html:89,Load,Loading,89,doc/master/TGeoTube_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoTube_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TGeoVolume.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoVolume.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 30/05/02; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// Author : date : Wed 24 Oct 2001 01:39:36 PM CEST; 12 ; 13#ifndef ROOT_TGeoVolume; 14#define ROOT_TGeoVolume; 15 ; 16#include ""TNamed.h""; 17#include ""TGeoAtt.h""; 18#include ""TAttLine.h""; 19#include ""TAttFill.h""; 20#include ""TAtt3D.h""; 21#include ""TObjArray.h""; 22#include ""TGeoMedium.h""; 23#include ""TGeoShape.h""; 24#include <mutex>; 25#include <vector>; 26 ; 27// forward declarations; 28class TH2F;; 29class TGeoNode;; 30class TGeoMatrix;; 31class TGeoPatternFinder;; 32class TGeoVoxelFinder;; 33class TGeoManager;; 34class TGeoExtension;; 35 ; 36////////////////////////////////////////////////////////////////////////////; 37// //; 38// TGeoVolume - base class representing a single volume having a shape //; 39// and a medium. //; 40// //; 41////////////////////////////////////////////////////////////////////////////; 42 ; 43class TGeoVolume : public TNamed, public TGeoAtt, public TAttLine, public TAttFill, public TAtt3D {; 44protected:; 45 TObjArray *fNodes; // array of nodes inside this volume; 46 TGeoShape *fShape; // shape; 47 TGeoMedium *fMedium; // tracking medium; 48 static TGeoMedium *fgDummyMedium; //! dummy medium; 49 TGeoPatternFinder *fFinder; // finder object for divisions; 50 TGeoVoxelFinder *fVoxels; // finder object for bounding boxes; 51 TGeoManager *fGeoManager; //! pointer to TGeoManager owning this volume; 52 ; 53 TObject *fField; //! just a h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoVolume_8h_source.html:91,Load,Loading,91,doc/master/TGeoVolume_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoVolume_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/inc/TVirtualGeoTrack.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualGeoTrack.h. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 2003/04/10; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualGeoTrack; 13#define ROOT_TVirtualGeoTrack; 14 ; 15#include ""TObjArray.h""; 16 ; 17#include ""TGeoAtt.h""; 18 ; 19#include ""TAttLine.h""; 20 ; 21#include ""TAttMarker.h""; 22 ; 23class TVirtualGeoTrack : public TObject, public TGeoAtt, public TAttLine, public TAttMarker {; 24protected:; 25 Int_t fPDG{0}; // track pdg code; 26 Int_t fId{-1}; // track id; 27 TVirtualGeoTrack *fParent{nullptr}; // id of parent; 28 TObject *fParticle{nullptr}; // particle for this track; 29 TObjArray *fTracks{nullptr}; // daughter tracks; 30 ; 31 TVirtualGeoTrack(const TVirtualGeoTrack &) = delete;; 32 TVirtualGeoTrack &operator=(const TVirtualGeoTrack &) = delete;; 33 ; 34public:; 35 TVirtualGeoTrack();; 36 TVirtualGeoTrack(Int_t id, Int_t pdgcode, TVirtualGeoTrack *parent = nullptr, TObject *particle = nullptr);; 37 ~TVirtualGeoTrack() override;; 38 ; 39 virtual TVirtualGeoTrack *AddDaughter(Int_t id, Int_t pdgcode, TObject *particle = nullptr) = 0;; 40 virtual Int_t AddDaughter(TVirtualGeoTrack *other) = 0;; 41 virtual void AddPoint(Double_t x, Double_t y, Double_t z, Double_t t) = 0;; 42 virtual TVirtualGeoTrack *FindTrackWithId(Int_t id) const;; 43 Int_t GetId() const { return fId; }; 44 virtual Int_t GetDaughterId(Int_t index) const;; 45 TVirtualGeoTrack *GetDaughter(Int_t index) const { return (TVirtualGeoTrack *)fTracks->At(index); }; 46 TV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualGeoTrack_8h_source.html:97,Load,Loading,97,doc/master/TVirtualGeoTrack_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualGeoTrack_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/src/TGeoElement.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoElement.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 17/06/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoElement; 13\ingroup Materials_classes; 14Base class for chemical elements; 15*/; 16 ; 17/** \class TGeoElementRN; 18\ingroup Geometry_classes; 19Class representing a radionuclidevoid TGeoManager::SetDefaultRootUnits(); 20{; 21 if ( fgDefaultUnits == kRootUnits ) {; 22 return;; 23 }; 24 else if ( gGeometryLocked ) {; 25 TError::Fatal(""TGeoManager"",""The system of units may only be changed once BEFORE any elements and materials are; 26created!"");; 27 }; 28 fgDefaultUnits = kRootUnits;; 29}; 30 ; 31*/; 32 ; 33/** \class TGeoElemIter; 34\ingroup Geometry_classes; 35Iterator for decay branches; 36*/; 37 ; 38/** \class TGeoDecayChannel; 39\ingroup Geometry_classes; 40A decay channel for a radionuclide; 41*/; 42 ; 43/** \class TGeoElementTable; 44\ingroup Geometry_classes; 45Table of elements; 46*/; 47 ; 48#include ""RConfigure.h""; 49 ; 50#include <fstream>; 51#include <iomanip>; 52 ; 53#include ""TSystem.h""; 54#include ""TROOT.h""; 55#include ""TObjArray.h""; 56#include ""TVirtualGeoPainter.h""; 57#include ""TGeoManager.h""; 58#include ""TGeoElement.h""; 59#include ""TMath.h""; 60#include ""TGeoPhysicalConstants.h""; 61#include ""TGeant4PhysicalConstants.h""; 62 ; 63// statics and globals; 64static const Int_t gMaxElem = 110;; 65static const Int_t gMaxLevel = 8;; 66static const Int_t gMaxDecay = 15;; 67 ; 68static const char gElName[gMaxElem][3] = {; 69 ""H "",",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoElement_8cxx_source.html:94,Load,Loading,94,doc/master/TGeoElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoElement_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/src/TGeoManager.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoManager.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoManager; 13\ingroup Geometry_classes; 14 ; 15The manager class for any TGeo geometry. Provides user; 16interface for geometry creation, navigation, state querying,; 17visualization, IO, geometry checking and other utilities.; 18 ; 19## General architecture; 20 ; 21 The ROOT geometry package is a tool designed for building, browsing,; 22tracking and visualizing a detector geometry. The code is independent from; 23other external MC for simulation, therefore it does not contain any; 24constraints related to physics. However, the package defines a number of; 25hooks for tracking, such as media, materials, magnetic field or track state flags,; 26in order to allow interfacing to tracking MC's. The final goal is to be; 27able to use the same geometry for several purposes, such as tracking,; 28reconstruction or visualization, taking advantage of the ROOT features; 29related to bookkeeping, I/O, histogramming, browsing and GUI's.; 30 ; 31 The geometrical modeler is the most important component of the package and; 32it provides answers to the basic questions like ""Where am I ?"" or ""How far; 33from the next boundary ?"", but also to more complex ones like ""How far from; 34the closest surface ?"" or ""Which is the next crossing along a helix ?"".; 35 ; 36 The architecture of the modeler is a combination between a GEANT-like; 37containment scheme and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:94,Load,Loading,94,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/src/TGeoMaterial.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMaterial.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoMaterial; 13\ingroup Materials_classes; 14 ; 15Base class describing materials.; 16 ; 17## Important note about units; 18Since **v6-17-02** the geometry package adopted a system of units, upon the request to support; 19an in-memory material representation consistent with the one in Geant4. The adoption was done; 20gradually and starting with **v6-19-02** (back-ported to **v6-18-02**) the package supports changing; 21the default units to either ROOT (CGS) or Geant4 ones. In the same version the Geant4 units were; 22set to be the default ones, changing the previous behavior and making material properties such; 23as radiation and interaction lengths having in memory values an order of magnitude lower. This behavior; 24affected versions up to **v6-25-01**, after which the default units were restored to be the ROOT ones.; 25 ; 26For users needing to restore the CGS behavior for material properties, the following sequence needs; 27to be called before creating the TGeoManager instance:; 28 * From **v6-18-02** to **v6-22-06**:; 29```; 30 TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);; 31```; 32 ; 33 * From **v6-22-08** to **v6-25-01**:; 34```; 35 TGeoManager::LockDefaultUnits(false);; 36 TGeoManager::SetDefaultUnits(kRootUnits);; 37 TGeoManager::LockDefaultUnits(true);; 38```; 39*/; 40 ; 41#include <iostream>; 42#include <limits>; 43#include ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMaterial_8cxx_source.html:95,Load,Loading,95,doc/master/TGeoMaterial_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMaterial_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/src/TGeoMatrix.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMatrix.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 25/10/01; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoMatrix; 13\ingroup Geometry_classes; 14 ; 15Geometrical transformation package.; 16 ; 17 All geometrical transformations handled by the modeller are provided as a; 18built-in package. This was designed to minimize memory requirements and; 19optimize performance of point/vector master-to-local and local-to-master; 20computation. We need to have in mind that a transformation in TGeo has 2; 21major use-cases. The first one is for defining the placement of a volume; 22with respect to its container reference frame. This frame will be called; 23'master' and the frame of the positioned volume - 'local'. If T is a; 24transformation used for positioning volume daughters, then:; 25 ; 26~~~ {.cpp}; 27 MASTER = T * LOCAL; 28~~~; 29 ; 30 Therefore a local-to-master conversion will be performed by using T, while; 31a master-to-local by using its inverse. The second use case is the computation; 32of the global transformation of a given object in the geometry. Since the; 33geometry is built as 'volumes-inside-volumes', this global transformation; 34represent the pile-up of all local transformations in the corresponding; 35branch. The conversion from the global reference frame and the given object; 36is also called master-to-local, but it is handled by the manager class.; 37 A general homogenous transformation is defined as a 4x4 matrix embedding; 38a r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html:93,Load,Loading,93,doc/master/TGeoMatrix_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: geom/geom/src/TGeoMedium.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMedium.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Rene Brun 26/12/02; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoMedium; 13\ingroup Materials_classes; 14 ; 15Media are used to store properties related to tracking and which are useful; 16only when using geometry with a particle transport MC package (via VMC). One; 17may define several tracking media for a given material. The media ID are user; 18defined values that are not used by the geometry package. In case geometry; 19is used via VMC (in GEANT) these numbers are overwritten, so one can only; 20rely on these values after gMC->FinishGeometry() is called.; 21The media parameters are inspired from GEANT3 and the values defined make sense; 22in context of GEANT (3 but also 4) or FLUKA interfaces.; 23*/; 24 ; 25#include <iostream>; 26#include ""TGeoManager.h""; 27#include ""TGeoMedium.h""; 28#include ""TList.h""; 29 ; 30ClassImp(TGeoMedium);; 31 ; 32////////////////////////////////////////////////////////////////////////////////; 33/// Default constructor; 34 ; 35TGeoMedium::TGeoMedium(); 36{; 37 fId = 0;; 38 for (Int_t i = 0; i < 20; i++); 39 fParams[i] = 0.;; 40 fMaterial = nullptr;; 41}; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// constructor; 45 ; 46TGeoMedium::TGeoMedium(const char *name, Int_t numed, const TGeoMaterial *mat, Double_t *params) : TNamed(name, """"); 47{; 48 fName = fName.Strip();; 49 fId = numed;; 50 for (Int_t i = 0; i < 20; i++); 51 fParam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMedium_8cxx_source.html:93,Load,Loading,93,doc/master/TGeoMedium_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMedium_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/src/TGeoPhysicalNode.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPhysicalNode.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 17/02/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGeoPhysicalNode; 13\ingroup Geometry_classes; 14 ; 15Physical nodes are the actual 'touchable' objects in the geometry, representing; 16a path of positioned volumes starting with the top node:; 17 path=/TOP/A_1/B_4/C_3 , where A, B, C represent names of volumes.; 18 ; 19The number of physical nodes is given by the total number of possible of; 20branches in the geometry hierarchy. In case of detector geometries and; 21specially for calorimeters this number can be of the order 1e6-1e9, therefore; 22it is impossible to create all physical nodes as objects in memory. In TGeo,; 23physical nodes are represented by the class TGeoPhysicalNode and can be created; 24on demand for alignment purposes:; 25 ; 26~~~ {.cpp}; 27 TGeoPhysicalNode *pn = new TGeoPhysicalNode(""path_to_object""); 28~~~; 29 ; 30Once created, a physical node can be misaligned, meaning that its position; 31or even shape can be changed:; 32 ; 33~~~ {.cpp}; 34 pn->Align(TGeoMatrix* newmat, TGeoShape* newshape, Bool_t check=kFALSE); 35~~~; 36*/; 37 ; 38/** \class TGeoPNEntry; 39\ingroup Geometry_classes; 40 ; 41The knowledge of the path to the objects that need to be misaligned is; 42essential since there is no other way of identifying them. One can however; 43create 'symbolic links' to any complex path to make it more representable; 44for the object it designates:; 45 ; 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPhysicalNode_8cxx_source.html:99,Load,Loading,99,doc/master/TGeoPhysicalNode_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPhysicalNode_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geom/src/TGeoVolume.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoVolume.cxx. Go to the documentation of this file. 1// @(#)root/geom:$Id$; 2// Author: Andrei Gheata 30/05/02; 3// Divide(), CheckOverlaps() implemented by Mihaela Gheata; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13/** \class TGeoVolume; 14\ingroup Shapes_classes; 15 ; 16TGeoVolume, TGeoVolumeMulti, TGeoVolumeAssembly are the volume classes; 17 ; 18 Volumes are the basic objects used in building the geometrical hierarchy.; 19They represent unpositioned objects but store all information about the; 20placement of the other volumes they may contain. Therefore a volume can; 21be replicated several times in the geometry. In order to create a volume, one; 22has to put together a shape and a medium which are already defined. Volumes; 23have to be named by users at creation time. Every different name may represent a; 24an unique volume object, but may also represent more general a family (class); 25of volume objects having the same shape type and medium, but possibly; 26different shape parameters. It is the user's task to provide different names; 27for different volume families in order to avoid ambiguities at tracking time.; 28A generic family rather than a single volume is created only in two cases :; 29when a generic shape is provided to the volume constructor or when a division; 30operation is applied. Each volume in the geometry stores an unique; 31ID corresponding to its family. In order to ease-up their creation, the manager; 32class is providing an API that allows making a shape and a volume in a sing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoVolume_8cxx_source.html:93,Load,Loading,93,doc/master/TGeoVolume_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoVolume_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geompainter/inc/TGeoPainter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPainter.h. Go to the documentation of this file. 1// Author: Andrei Gheata 05/03/02; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10#ifndef ROOT_TGeoPainter; 11#define ROOT_TGeoPainter; 12 ; 13//////////////////////////////////////////////////////////////////////////; 14// //; 15// TGeoPainter //; 16// //; 17// Painter class utility TGeo geometries. Interfaces visualization //; 18// queries with the viewers. //; 19// //; 20//////////////////////////////////////////////////////////////////////////; 21 ; 22#include ""TVirtualGeoPainter.h""; 23 ; 24#include ""TGeoManager.h""; 25 ; 26class TString;; 27class TGeoHMatrix;; 28class TGeoNode;; 29class TGeoVolume;; 30class TGeoShape;; 31class TVirtualGeoTrack;; 32class TGeoPhysicalNode;; 33class TGeoChecker;; 34class TGeoOverlap;; 35class TH2F;; 36class TGeoBatemanSol;; 37class TGeoPolygon;; 38 ; 39class TGeoPainter : public TVirtualGeoPainter {; 40private:; 41 Double_t fBombX; // bomb factor on X; 42 Double_t fBombY; // bomb factor on Y; 43 Double_t fBombZ; // bomb factor on Z; 44 Double_t fBombR; // bomb factor on radius (cyl or sph); 45 Double_t fCheckedBox[6]; // bounding box of checked node; 46 Double_t fMat[9]; // view rotation matrix; 47 Int_t fNsegments; // number of segments approximating circles; 48 Int_t fNVisNodes; // number of visible nodes; 49 Int_t fVisLevel; // depth for drawing; 50 Int_t fVisOption; // global visualization option; 51 Int_t fExplodedView; // type of exploding current view; 52 Bool_t fVisLock; // lock for adding visible volumes; 53 Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8h_source.html:99,Load,Loading,99,doc/master/TGeoPainter_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/geompainter/src/TGeoPainter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPainter.cxx. Go to the documentation of this file. 1// @(#)root/geompainter:$Id: 58726ead32989b65bb2cbff2af4235fe9c6b12ae $; 2// Author: Andrei Gheata 05/03/02; 3/*************************************************************************; 4 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11/** \class TGeoPainter; 12\ingroup Geometry_painter; 13 ; 14Class implementing all draw interfaces for a generic 3D viewer; 15using TBuffer3D mechanism.; 16*/; 17 ; 18#include <map>; 19#include ""TROOT.h""; 20#include ""TClass.h""; 21#include ""TColor.h""; 22#include ""TPoint.h""; 23#include ""TView.h""; 24#include ""TAttLine.h""; 25#include ""TAttFill.h""; 26#include ""TVirtualPad.h""; 27#include ""TCanvas.h""; 28#include ""TCanvasImp.h""; 29#include ""TH2F.h""; 30#include ""TF1.h""; 31#include ""TGraph.h""; 32#include ""TPluginManager.h""; 33#include ""TVirtualPadEditor.h""; 34#include ""TStopwatch.h""; 35 ; 36#include ""TPolyMarker3D.h""; 37 ; 38#include ""TGeoAtt.h""; 39#include ""TGeoVolume.h""; 40#include ""TGeoNode.h""; 41#include ""TGeoElement.h""; 42#include ""TGeoManager.h""; 43#include ""TGeoTrack.h""; 44#include ""TGeoOverlap.h""; 45#include ""TGeoChecker.h""; 46#include ""TGeoPhysicalNode.h""; 47#include ""TGeoPolygon.h""; 48#include ""TGeoCompositeShape.h""; 49#include ""TGeoShapeAssembly.h""; 50#include ""TGeoPainter.h""; 51#include ""TMath.h""; 52 ; 53#include ""X3DBuffer.h""; 54 ; 55#include ""TBuffer3D.h""; 56#include ""TBuffer3DTypes.h""; 57#include ""TVirtualViewer3D.h""; 58#include ""TVirtualX.h""; 59 ; 60ClassImp(TGeoPainter);; 61 ; 62////////////////////////////////////////////////////////////////////////////////; 63/// Default constructor.; 64 ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8cxx_source.html:101,Load,Loading,101,doc/master/TGeoPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/webviewer/inc/ROOT/RGeomData.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RGeomData.hxx. Go to the documentation of this file. 1// Author: Sergey Linev, 14.12.2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT7_RGeomData; 12#define ROOT7_RGeomData; 13 ; 14#include <vector>; 15#include <string>; 16#include <functional>; 17#include <memory>; 18 ; 19#include <ROOT/Browsable/RItem.hxx>; 20 ; 21#include ""TVirtualMutex.h""; 22 ; 23class TGeoNode;; 24class TGeoManager;; 25class TGeoShape;; 26class TGeoMatrix;; 27class TGeoVolume;; 28 ; 29// do not use namespace to avoid too long JSON; 30 ; 31namespace ROOT {; 32 ; 33class RGeomBrowserIter;; 34 ; 35namespace Experimental {; 36class RLogChannel;; 37} // namespace Experimental; 38 ; 39/// Log channel for Geomviewer diagnostics.; 40Experimental::RLogChannel &RGeomLog();; 41 ; 42/** Base description of geometry node, required only to build hierarchy */; 43 ; 44class RGeomNodeBase {; 45public:; 46 int id{0}; ///< node id, index in array; 47 std::string name; ///< node name; 48 std::vector<int> chlds; ///< list of childs id; 49 int vis{0}; ///< visibility flag, 0 - off, 1 - only when level==0, 99 - always; 50 bool nochlds{false}; ///< how far in hierarchy depth should be scanned; 51 ; 52 std::string color; ///< rgb code in hex format; 53 std::string material; ///< name of the material; 54 int sortid{0}; ///<! place in sorted array, to check cuts, or id of original node when used search structures; 55 ; 56 RGeomNodeBase(int _id = 0) : id(_id) {}; 57 ; 58 bool IsVisible() const { return vis > 0; }; 59 ; 60 /** Returns argumen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8hxx_source.html:102,Load,Loading,102,doc/master/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/webviewer/inc/ROOT/RGeomData.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RGeomData.hxx. Go to the documentation of this file. 1// Author: Sergey Linev, 14.12.2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT7_RGeomData; 12#define ROOT7_RGeomData; 13 ; 14#include <vector>; 15#include <string>; 16#include <functional>; 17#include <memory>; 18 ; 19#include <ROOT/Browsable/RItem.hxx>; 20 ; 21#include ""TVirtualMutex.h""; 22 ; 23class TGeoNode;; 24class TGeoManager;; 25class TGeoShape;; 26class TGeoMatrix;; 27class TGeoVolume;; 28 ; 29// do not use namespace to avoid too long JSON; 30 ; 31namespace ROOT {; 32 ; 33class RGeomBrowserIter;; 34 ; 35namespace Experimental {; 36class RLogChannel;; 37} // namespace Experimental; 38 ; 39/// Log channel for Geomviewer diagnostics.; 40Experimental::RLogChannel &RGeomLog();; 41 ; 42/** Base description of geometry node, required only to build hierarchy */; 43 ; 44class RGeomNodeBase {; 45public:; 46 int id{0}; ///< node id, index in array; 47 std::string name; ///< node name; 48 std::vector<int> chlds; ///< list of childs id; 49 int vis{0}; ///< visibility flag, 0 - off, 1 - only when level==0, 99 - always; 50 bool nochlds{false}; ///< how far in hierarchy depth should be scanned; 51 ; 52 std::string color; ///< rgb code in hex format; 53 std::string material; ///< name of the material; 54 int sortid{0}; ///<! place in sorted array, to check cuts, or id of original node when used search structures; 55 ; 56 RGeomNodeBase(int _id = 0) : id(_id) {}; 57 ; 58 bool IsVisible() const { return vis > 0; }; 59 ; 60 /** Returns argument",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RGeomData_8hxx_source.html:101,Load,Loading,101,doc/v632/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RGeomData_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/webviewer/src/RGeomData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RGeomData.cxx. Go to the documentation of this file. 1// Author: Sergey Linev, 14.12.2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include <ROOT/RGeomData.hxx>; 12 ; 13#include <ROOT/RBrowserRequest.hxx>; 14#include <ROOT/RBrowserReply.hxx>; 15#include <ROOT/RLogger.hxx>; 16#include ""CsgOps.h""; 17 ; 18#include ""TMath.h""; 19#include ""TColor.h""; 20#include ""TROOT.h""; 21#include ""TGeoNode.h""; 22#include ""TGeoVolume.h""; 23#include ""TGeoBBox.h""; 24#include ""TGeoSphere.h""; 25#include ""TGeoCone.h""; 26#include ""TGeoTube.h""; 27#include ""TGeoEltu.h""; 28#include ""TGeoTorus.h""; 29#include ""TGeoPcon.h""; 30#include ""TGeoPgon.h""; 31#include ""TGeoXtru.h""; 32#include ""TGeoParaboloid.h""; 33#include ""TGeoHype.h""; 34#include ""TGeoTessellated.h""; 35#include ""TGeoScaledShape.h""; 36#include ""TGeoCompositeShape.h""; 37#include ""TGeoManager.h""; 38#include ""TGeoMatrix.h""; 39#include ""TGeoMedium.h""; 40#include ""TGeoMaterial.h""; 41#include ""TGeoBoolNode.h""; 42#include ""TBuffer3D.h""; 43#include ""TBufferJSON.h""; 44#include ""TRegexp.h""; 45 ; 46#include <algorithm>; 47#include <array>; 48 ; 49ROOT::Experimental::RLogChannel &ROOT::RGeomLog(); 50{; 51 static ROOT::Experimental::RLogChannel sLog(""ROOT.Geom"");; 52 return sLog;; 53}; 54 ; 55 ; 56namespace ROOT {; 57 ; 58/** Iterator of hierarchical geometry structures */; 59 ; 60class RGeomBrowserIter {; 61 ; 62 RGeomDescription &fDesc;; 63 int fParentId{-1};; 64 unsigned fChild{0};; 65 int fNodeId{0};; 66 ; 67 std::vector<int> fStackParents;; 68 std::vector<int> fStackChilds;; 69 ; 7",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:97,Load,Loading,97,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: geom/webviewer/src/RGeomData.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RGeomData.cxx. Go to the documentation of this file. 1// Author: Sergey Linev, 14.12.2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include <ROOT/RGeomData.hxx>; 12 ; 13#include <ROOT/RBrowserRequest.hxx>; 14#include <ROOT/RBrowserReply.hxx>; 15#include <ROOT/RLogger.hxx>; 16#include ""CsgOps.h""; 17 ; 18#include ""TMath.h""; 19#include ""TColor.h""; 20#include ""TROOT.h""; 21#include ""TGeoNode.h""; 22#include ""TGeoVolume.h""; 23#include ""TGeoBBox.h""; 24#include ""TGeoSphere.h""; 25#include ""TGeoCone.h""; 26#include ""TGeoTube.h""; 27#include ""TGeoEltu.h""; 28#include ""TGeoTorus.h""; 29#include ""TGeoPcon.h""; 30#include ""TGeoPgon.h""; 31#include ""TGeoXtru.h""; 32#include ""TGeoParaboloid.h""; 33#include ""TGeoHype.h""; 34#include ""TGeoTessellated.h""; 35#include ""TGeoScaledShape.h""; 36#include ""TGeoCompositeShape.h""; 37#include ""TGeoManager.h""; 38#include ""TGeoMatrix.h""; 39#include ""TGeoMedium.h""; 40#include ""TGeoMaterial.h""; 41#include ""TGeoBoolNode.h""; 42#include ""TBuffer3D.h""; 43#include ""TBufferJSON.h""; 44#include ""TRegexp.h""; 45 ; 46#include <algorithm>; 47#include <array>; 48 ; 49ROOT::Experimental::RLogChannel &ROOT::RGeomLog(); 50{; 51 static ROOT::Experimental::RLogChannel sLog(""ROOT.Geom"");; 52 return sLog;; 53}; 54 ; 55 ; 56namespace ROOT {; 57 ; 58/** Iterator of hierarchical geometry structures */; 59 ; 60class RGeomBrowserIter {; 61 ; 62 RGeomDescription &fDesc;; 63 int fParentId{-1};; 64 unsigned fChild{0};; 65 int fNodeId{0};; 66 ; 67 std::vector<int> fStackParents;; 68 std::vector<int> fStackChilds;; 69 ; 70",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RGeomData_8cxx_source.html:96,Load,Loading,96,doc/v632/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RGeomData_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpad/inc/TCanvas.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TCanvas.h File Reference. #include ""TPad.h""; #include ""TAttCanvas.h"". Include dependency graph for TCanvas.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TCanvas;  The Canvas class. More...;  . graf2dgpadincTCanvas.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8h.html:93,Load,Loading,93,doc/master/TCanvas_8h.html,https://root.cern,https://root.cern/doc/master/TCanvas_8h.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpad/inc/TCanvas.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCanvas.h. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TCanvas; 13#define ROOT_TCanvas; 14 ; 15#include ""TPad.h""; 16 ; 17#include ""TAttCanvas.h""; 18 ; 19class TCanvasImp;; 20class TContextMenu;; 21class TControlBar;; 22 ; 23class TCanvas : public TPad {; 24 ; 25friend class TCanvasImp;; 26friend class TWebCanvas;; 27friend class TThread;; 28friend class TInterpreter;; 29 ; 30protected:; 31 TAttCanvas fCatt; ///< Canvas attributes; 32 TString fDISPLAY; ///< Name of destination screen; 33 Size_t fXsizeUser; ///< User specified size of canvas along X in CM; 34 Size_t fYsizeUser; ///< User specified size of canvas along Y in CM; 35 Size_t fXsizeReal; ///< Current size of canvas along X in CM; 36 Size_t fYsizeReal; ///< Current size of canvas along Y in CM; 37 Color_t fHighLightColor; ///< Highlight color of active pad; 38 Int_t fDoubleBuffer; ///< Double buffer flag (0=off, 1=on); 39 Int_t fWindowTopX; ///< Top X position of window (in pixels); 40 Int_t fWindowTopY; ///< Top Y position of window (in pixels); 41 UInt_t fWindowWidth; ///< Width of window (including borders, etc.); 42 UInt_t fWindowHeight; ///< Height of window (including menubar, borders, etc.); 43 UInt_t fCw; ///< Width of the canvas along X (pixels); 44 UInt_t fCh; ///< Height of the canvas along Y (pixels); 45 Int_t fEvent; ///<! Type of current or last handled event; 46 Int_t fEventX; ///<! Last X mouse position in canvas; 47 Int_t fEventY",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8h_source.html:90,Load,Loading,90,doc/master/TCanvas_8h_source.html,https://root.cern,https://root.cern/doc/master/TCanvas_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpad/inc/TColorWheel.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TColorWheel.h. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 10/03/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TColorWheel; 13#define ROOT_TColorWheel; 14 ; 15#include ""TNamed.h""; 16 ; 17class TCanvas;; 18class TArc;; 19class TLine;; 20class TText;; 21class TGraph;; 22 ; 23class TColorWheel : public TNamed {; 24 ; 25private:; 26 Double_t fRmin{0.}; ///<Minimum radius for rectangles; 27 Double_t fRmax{0.}; ///<Maximum radius for rectangles; 28 Double_t fR0{0.}; ///<Minimum radius for circles; 29 Double_t fDr{0.}; ///<Circles radius; 30 Double_t fRgray{0.}; ///<Maximum radius of gray circle; 31 Double_t fX[15]; ///<X coordinates of the center of circles; 32 Double_t fY[15]; ///<Y coordinates of the center of circles; 33 TCanvas *fCanvas{nullptr}; ///<! Canvas used to draw the Color Wheel; 34 TArc *fArc{nullptr}; ///<! pointer to utility arc; 35 TLine *fLine{nullptr}; ///<! pointer to utility line; 36 TText *fText{nullptr}; ///<! pointer to utility text; 37 TGraph *fGraph{nullptr}; ///<! pointer to utility graph; 38 ; 39 TColorWheel(const TColorWheel &) = delete;; 40 TColorWheel &operator=(const TColorWheel &) = delete;; 41 ; 42protected:; 43 Int_t InCircles(Double_t x, Double_t y, Int_t coffset, Double_t angle) const;; 44 Int_t InGray(Double_t x, Double_t y) const;; 45 Int_t InRectangles(Double_t x, Double_t y, Int_t coffset, Double_t angle) const;; 46 void PaintCircle(Int_t coffset,Int_t n,Double_t x, Double_t y, Double_t ang) const;; 47 void PaintCi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColorWheel_8h_source.html:94,Load,Loading,94,doc/master/TColorWheel_8h_source.html,https://root.cern,https://root.cern/doc/master/TColorWheel_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpad/inc/TPad.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPad.h. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPad; 13#define ROOT_TPad; 14 ; 15#include ""TVirtualPad.h""; 16#include ""TAttBBox2D.h""; 17#include <vector>; 18 ; 19class TVirtualViewer3D;; 20class TVirtualPadPainter;; 21class TBrowser;; 22class TBox;; 23class TLegend;; 24class TArrow;; 25class TPoint;; 26class TWebCanvas;; 27 ; 28class TPad : public TVirtualPad, public TAttBBox2D {; 29 ; 30friend class TWebCanvas;; 31 ; 32private:; 33 TObject *fTip{nullptr}; ///<! tool tip associated with box; 34 ; 35protected:; 36 Double_t fX1; ///< X of lower X coordinate; 37 Double_t fY1; ///< Y of lower Y coordinate; 38 Double_t fX2; ///< X of upper X coordinate; 39 Double_t fY2; ///< Y of upper Y coordinate; 40 ; 41 Double_t fXtoAbsPixelk; ///< Conversion coefficient for X World to absolute pixel; 42 Double_t fXtoPixelk; ///< Conversion coefficient for X World to pixel; 43 Double_t fXtoPixel; ///< xpixel = fXtoPixelk + fXtoPixel*xworld; 44 Double_t fYtoAbsPixelk; ///< Conversion coefficient for Y World to absolute pixel; 45 Double_t fYtoPixelk; ///< Conversion coefficient for Y World to pixel; 46 Double_t fYtoPixel; ///< ypixel = fYtoPixelk + fYtoPixel*yworld; 47 ; 48 Double_t fUtoAbsPixelk; ///< Conversion coefficient for U NDC to absolute pixel; 49 Double_t fUtoPixelk; ///< Conversion coefficient for U NDC to pixel; 50 Double_t fUtoPixel; ///< xpixel = fUtoPixelk + fUtoPixel*undc; 51 Double_t fVtoAbsPixelk; ///< C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8h_source.html:87,Load,Loading,87,doc/master/TPad_8h_source.html,https://root.cern,https://root.cern/doc/master/TPad_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpad/src/TCanvas.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCanvas.cxx. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <cstdlib>; 14#include <iostream>; 15#include <fstream>; 16 ; 17#include ""TROOT.h""; 18#include ""TBuffer.h""; 19#include ""TCanvas.h""; 20#include ""TCanvasImp.h""; 21#include ""TDatime.h""; 22#include ""TClass.h""; 23#include ""TStyle.h""; 24#include ""TBox.h""; 25#include ""TCanvasImp.h""; 26#include ""TDialogCanvas.h""; 27#include ""TGuiFactory.h""; 28#include ""TEnv.h""; 29#include ""TError.h""; 30#include ""TContextMenu.h""; 31#include ""TControlBar.h""; 32#include ""TInterpreter.h""; 33#include ""TApplication.h""; 34#include ""TColor.h""; 35#include ""TSystem.h""; 36#include ""TObjArray.h""; 37#include ""TVirtualPadEditor.h""; 38#include ""TVirtualViewer3D.h""; 39#include ""TPadPainter.h""; 40#include ""TVirtualGL.h""; 41#include ""TVirtualPS.h""; 42#include ""TVirtualX.h""; 43#include ""TAxis.h""; 44#include ""TH1.h""; 45#include ""TGraph.h""; 46#include ""TMath.h""; 47#include ""TView.h""; 48#include ""strlcpy.h""; 49#include ""snprintf.h""; 50 ; 51#include ""TVirtualMutex.h""; 52 ; 53class TCanvasInit {; 54public:; 55 TCanvasInit() { TApplication::NeedGraphicsLibs(); }; 56} gCanvasInit;; 57 ; 58//*-*x16 macros/layout_canvas; 59 ; 60Bool_t TCanvas::fgIsFolder = kFALSE;; 61 ; 62const Size_t kDefaultCanvasSize = 20;; 63 ; 64ClassImpQ(TCanvas); 65 ; 66 ; 67TString GetNewCanvasName(const char *arg = nullptr); 68{; 69 if (arg && *arg); 70 return arg;; 71 ; 72 const char *defcanvas = gROOT->G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8cxx_source.html:92,Load,Loading,92,doc/master/TCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCanvas_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpad/src/TPad.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPad.cxx. Go to the documentation of this file. 1// @(#)root/gpad:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <cstdlib>; 14#include <iostream>; 15#include <locale>; 16#include <memory>; 17 ; 18#include ""TROOT.h""; 19#include ""TBuffer.h""; 20#include ""TError.h""; 21#include ""TMath.h""; 22#include ""TSystem.h""; 23#include ""TStyle.h""; 24#include ""TFile.h""; 25#include ""TH1.h""; 26#include ""TH2.h""; 27#include ""TH3.h""; 28#include ""TClass.h""; 29#include ""TBaseClass.h""; 30#include ""TClassTable.h""; 31#include ""TVirtualPS.h""; 32#include ""TVirtualX.h""; 33#include ""TVirtualViewer3D.h""; 34#include ""TView.h""; 35#include ""TPoint.h""; 36#include ""TGraph.h""; 37#include ""TMultiGraph.h""; 38#include ""THStack.h""; 39#include ""TPaveText.h""; 40#include ""TPaveStats.h""; 41#include ""TGroupButton.h""; 42#include ""TBrowser.h""; 43#include ""TVirtualGL.h""; 44#include ""TString.h""; 45#include ""TDataMember.h""; 46#include ""TMethod.h""; 47#include ""TDataType.h""; 48#include ""TFrame.h""; 49#include ""TExec.h""; 50#include ""TDatime.h""; 51#include ""TColor.h""; 52#include ""TCanvas.h""; 53#include ""TPluginManager.h""; 54#include ""TEnv.h""; 55#include ""TImage.h""; 56#include ""TViewer3DPad.h""; 57#include ""TCreatePrimitives.h""; 58#include ""TLegend.h""; 59#include ""TAtt3D.h""; 60#include ""TVirtualPadPainter.h""; 61#include ""strlcpy.h""; 62#include ""snprintf.h""; 63 ; 64#include ""TVirtualMutex.h""; 65 ; 66static Int_t gReadLevel = 0;; 67 ; 68Int_t TPad::fgMaxPickDistance = 5;; 69 ; 70ClassImpQ(TPad); 71 ; 72/** ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:89,Load,Loading,89,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpadv7/inc/ROOT/RCanvas.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RCanvas.hxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#ifndef ROOT7_RCanvas; 10#define ROOT7_RCanvas; 11 ; 12#include ""ROOT/RPadBase.hxx""; 13#include ""ROOT/RVirtualCanvasPainter.hxx""; 14#include ""ROOT/RDrawableRequest.hxx""; 15 ; 16#include <memory>; 17#include <string>; 18#include <vector>; 19#include <list>; 20 ; 21namespace ROOT {; 22namespace Experimental {; 23 ; 24class RChangeAttrRequest : public RDrawableRequest {; 25 std::vector<std::string> ids; ///< array of ids; 26 std::vector<std::string> names; ///< array of attribute names; 27 std::vector<std::unique_ptr<RAttrMap::Value_t>> values; ///< array of values; 28 bool update{true}; ///< update canvas at the end; 29 bool fNeedUpdate{false}; ///<! is canvas update required; 30 RChangeAttrRequest(const RChangeAttrRequest &) = delete;; 31 RChangeAttrRequest& operator=(const RChangeAttrRequest &) = delete;; 32public:; 33 RChangeAttrRequest() = default; // for I/O; 34 ~RChangeAttrRequest() override = default;; 35 std::unique_ptr<RDrawableReply> Process() override;; 36 bool NeedCanvasUpdate() const override { return fNeedUpdate; }; 37};; 38 ; 39/** \class RCanvas; 40\ingroup GpadROOT7; 41\brief A window's topmost `RPad`.; 42\author Axel Naumann <axel@cern.ch>; 43\date 2015-07-08; 44\warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 45*/; 46 ; 47class RCanvas: public RPadBase {; 48friend class RPadBase; /// use for ID generation; 49friend cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RCanvas_8hxx_source.html:99,Load,Loading,99,doc/master/RCanvas_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RCanvas_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpadv7/inc/ROOT/RColor.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RColor.hxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#ifndef ROOT7_RColor; 10#define ROOT7_RColor; 11 ; 12#include <cstdint>; 13#include <vector>; 14#include <string>; 15#include <array>; 16#include <DllImport.h>; 17 ; 18namespace ROOT {; 19namespace Experimental {; 20 ; 21// TODO: see also imagemagick's C++ interface for RColor operations!; 22// https://www.imagemagick.org/api/magick++-classes.php; 23 ; 24/** \class RColor; 25\ingroup GpadROOT7; 26\brief The color class; 27\author Axel Naumann <axel@cern.ch>; 28\author Sergey Linev <S.Linev@gsi.de>; 29\date 2017-09-26; 30\warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 31*/; 32 ; 33class RColor {; 34 ; 35 using RGB_t = std::array<uint8_t, 3>;; 36 ; 37private:; 38 ; 39 std::string fColor; ///< string representation of color; 40 ; 41 static std::string toHex(uint8_t v);; 42 ; 43 static std::vector<uint8_t> ConvertNameToRGB(const std::string &name);; 44 ; 45 bool SetRGBHex(const std::string &hex);; 46 bool SetAlphaHex(const std::string &hex);; 47 ; 48public:; 49 ; 50 RColor() = default;; 51 ; 52 /** Construct color with provided r,g,b values */; 53 RColor(uint8_t r, uint8_t g, uint8_t b) { SetRGB(r, g, b); }; 54 ; 55 /** Construct color with provided r,g,b and alpha values */; 56 RColor(uint8_t r, uint8_t g, uint8_t b, float alpha); 57 {; 58 SetRGBA(r, g, b, alpha);; 59 }; 60 ; 61 /** Construct color with provided RGB_t value */; 62 RColor(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RColor_8hxx_source.html:98,Load,Loading,98,doc/master/RColor_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RColor_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/gpadv7/src/RCanvas.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RCanvas.cxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#include ""ROOT/RCanvas.hxx""; 10 ; 11#include ""ROOT/RLogger.hxx""; 12 ; 13#include <algorithm>; 14#include <memory>; 15#include <mutex>; 16#include <thread>; 17#include <chrono>; 18#include <cstdio>; 19#include <cstring>; 20 ; 21#include ""TList.h""; 22#include ""TROOT.h""; 23#include ""TString.h""; 24 ; 25namespace {; 26 ; 27std::mutex &GetHeldCanvasesMutex(); 28{; 29 static std::mutex sMutex;; 30 return sMutex;; 31}; 32 ; 33std::vector<std::shared_ptr<ROOT::Experimental::RCanvas>> &GetHeldCanvases(); 34{; 35 static std::vector<std::shared_ptr<ROOT::Experimental::RCanvas>> sCanvases;; 36 return sCanvases;; 37}; 38 ; 39 ; 40} // namespace; 41 ; 42///////////////////////////////////////////////////////////////////////////////////////; 43/// Returns list of created canvases; 44 ; 45const std::vector<std::shared_ptr<ROOT::Experimental::RCanvas>> ROOT::Experimental::RCanvas::GetCanvases(); 46{; 47 std::lock_guard<std::mutex> grd(GetHeldCanvasesMutex());; 48 ; 49 return GetHeldCanvases();; 50}; 51 ; 52///////////////////////////////////////////////////////////////////////////////////////; 53/// Release list of held canvases pointers; 54/// If no other shared pointers exists on the canvas, object will be destroyed; 55 ; 56void ROOT::Experimental::RCanvas::ReleaseHeldCanvases(); 57{; 58 std::vector<std::shared_ptr<ROOT::Experimental::RCanvas>> vect;; 59 ; 60 {; 61 std::lock_guard<std::mutex> grd(GetHeldCanvasesMutex());; 62 ; 63 std:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RCanvas_8cxx_source.html:94,Load,Loading,94,doc/master/RCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RCanvas_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/legend1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; legend1.C File Reference. Functions; leg AddEntry (""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");  ; leg AddEntry (""gr"",""Graph with error bars"",""lep"");  ; leg AddEntry (h1,""Histogram filled with random numbers"",""f"");  ; gr Draw (""P"");  ; f1 Draw (""same"");  ; h1 Draw ();  ; h1 FillRandom (""gaus"", 30000);  ;  for (Int_t i=0;i< n;i++);  ; h1 SetFillColor (kGreen);  ; h1 SetFillStyle (3003);  ; leg SetHeader (""The Legend Title"");  ; f1 SetLineColor (kBlue);  ; gr SetLineColor (kRed);  ; gr SetLineWidth (2);  ; f1 SetLineWidth (4);  ; gr SetMarkerColor (7);  ; gr SetMarkerSize (1.3);  ; gr SetMarkerStyle (21);  ; gr SetName (""gr"");  ; gStyle SetOptStat (0);  . Variables; return c1;  ; Double_t ex [n];  ; Double_t ey [n];  ; TF1 * f1 =new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);  ; TGraphErrors * gr = new TGraphErrors(n,x,y,ex,ey);  ; TH1F * h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);  ;  leg = new TLegend(0.1,0.7,0.48,0.9);  ; const Int_t n = 20;  ; Double_t x [n];  ; Double_t y [n];  . Function Documentation. ◆ AddEntry() [1/3]. leg AddEntry ; (; ""f1"" ; , . ""Function abs(#frac{sin(x)}{x})"" ; , . ""l"" ;  . ). ◆ AddEntry() [2/3]. leg AddEntry ; (; ""gr"" ; , . ""Graph with error bars"" ; , . ""lep"" ;  . ). ◆ AddEntry() [3/3]. leg AddEntry ; (; h1 ; , . ""Histogram filled with random numbers"" ; , . ""f"" ;  . ). ◆ Draw() [1/3]. gr Draw ; (; ""P"" ; ). ◆ Draw() [2/3]. f1 Draw ; (; ""same"" ; ). ◆ Draw() [3/3]. h1 Draw ; (; ). ◆ FillRandom(). h1 FillRandom ; (; ""gaus"" ; , . 30000 ;  . ). ◆ for(). for ; (; ). Definition at line 18 of file legend1.C. ◆ SetFillColor(). h1 SetFillColor ; (; kGreen ; ). ◆ SetFillStyle(). h1 SetFillStyle ; (; 3003 ; ). ◆ SetHeader(). leg SetHeader ; (; ""The Legend Title"" ; ). ◆ SetLineColor() [1/2]. f1 SetLineColor ; (; kBlue ; ). ◆ SetLineColor() [2/2]. gr SetLineColor ; (; kRed ; ). ◆ SetLin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend1_8C.html:100,Load,Loading,100,doc/master/legend1_8C.html,https://root.cern,https://root.cern/doc/master/legend1_8C.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/legend1.C File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; legend1.C File Reference. Functions; leg AddEntry (""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");  ; leg AddEntry (""gr"",""Graph with error bars"",""lep"");  ; leg AddEntry (h1,""Histogram filled with random numbers"",""f"");  ; gr Draw (""P"");  ; f1 Draw (""same"");  ; h1 Draw ();  ; h1 FillRandom (""gaus"", 30000);  ;  for (Int_t i=0;i< n;i++);  ; h1 SetFillColor (kGreen);  ; h1 SetFillStyle (3003);  ; leg SetHeader (""The Legend Title"");  ; f1 SetLineColor (kBlue);  ; gr SetLineColor (kRed);  ; gr SetLineWidth (2);  ; f1 SetLineWidth (4);  ; gr SetMarkerColor (7);  ; gr SetMarkerSize (1.3);  ; gr SetMarkerStyle (21);  ; gr SetName (""gr"");  ; gStyle SetOptStat (0);  . Variables; return c1;  ; Double_t ex [n];  ; Double_t ey [n];  ; TF1 * f1 =new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);  ; TGraphErrors * gr = new TGraphErrors(n,x,y,ex,ey);  ; TH1F * h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);  ;  leg = new TLegend(0.1,0.7,0.48,0.9);  ; const Int_t n = 20;  ; Double_t x [n];  ; Double_t y [n];  . Function Documentation. ◆ AddEntry() [1/3]. leg AddEntry ; (; ""f1"" ; , . ""Function abs(#frac{sin(x)}{x})"" ; , . ""l"" ;  . ). ◆ AddEntry() [2/3]. leg AddEntry ; (; ""gr"" ; , . ""Graph with error bars"" ; , . ""lep"" ;  . ). ◆ AddEntry() [3/3]. leg AddEntry ; (; h1 ; , . ""Histogram filled with random numbers"" ; , . ""f"" ;  . ). ◆ Draw() [1/3]. gr Draw ; (; ""P"" ; ). ◆ Draw() [2/3]. f1 Draw ; (; ""same"" ; ). ◆ Draw() [3/3]. h1 Draw ; (; ). ◆ FillRandom(). h1 FillRandom ; (; ""gaus"" ; , . 30000 ;  . ). ◆ for(). for ; (; ). Definition at line 18 of file legend1.C. ◆ SetFillColor(). h1 SetFillColor ; (; kGreen ; ). ◆ SetFillStyle(). h1 SetFillStyle ; (; 3003 ; ). ◆ SetHeader(). leg SetHeader ; (; ""The Legend Title"" ; ). ◆ SetLineColor() [1/2]. f1 SetLineColor ; (; kBlue ; ). ◆ SetLineColor() [2/2]. gr SetLineColor ; (; kRed ; ). ◆ SetLine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/legend1_8C.html:99,Load,Loading,99,doc/v632/legend1_8C.html,https://root.cern,https://root.cern/doc/v632/legend1_8C.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/legend1.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. legend1.C. Go to the documentation of this file. 1{; 2 TCanvas *c1 = new TCanvas(""c1"",""c1"",600,500);; 3 gStyle->SetOptStat(0);; 4 ; 5 TH1F *h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);; 6 h1->FillRandom(""gaus"",30000);; 7 h1->SetFillColor(kGreen);; 8 h1->SetFillStyle(3003);; 9 h1->Draw();; 10 ; 11 TF1 *f1=new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);; 12 f1->SetLineColor(kBlue);; 13 f1->SetLineWidth(4);; 14 f1->Draw(""same"");; 15 ; 16 const Int_t n = 20;; 17 Double_t x[n], y[n], ex[n], ey[n];; 18 for (Int_t i=0;i<n;i++) {; 19 x[i] = i*0.1;; 20 y[i] = 1000*sin(x[i]+0.2);; 21 x[i] = 17.8*x[i]-8.9;; 22 ex[i] = 1.0;; 23 ey[i] = 10.*i;; 24 }; 25 TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; 26 gr->SetName(""gr"");; 27 gr->SetLineColor(kRed);; 28 gr->SetLineWidth(2);; 29 gr->SetMarkerStyle(21);; 30 gr->SetMarkerSize(1.3);; 31 gr->SetMarkerColor(7);; 32 gr->Draw(""P"");; 33 ; 34 leg = new TLegend(0.1,0.7,0.48,0.9);; 35 leg->SetHeader(""The Legend Title"");; 36 leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; 37 leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; 38 leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; 39 leg->Draw();; 40 ; 41 return c1;; 42}; 43 ; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend1_8C_source.html:97,Load,Loading,97,doc/master/legend1_8C_source.html,https://root.cern,https://root.cern/doc/master/legend1_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/legend1.C Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. legend1.C. Go to the documentation of this file. 1{; 2 TCanvas *c1 = new TCanvas(""c1"",""c1"",600,500);; 3 gStyle->SetOptStat(0);; 4 ; 5 TH1F *h1 = new TH1F(""h1"",""TLegend Example"",200,-10,10);; 6 h1->FillRandom(""gaus"",30000);; 7 h1->SetFillColor(kGreen);; 8 h1->SetFillStyle(3003);; 9 h1->Draw();; 10 ; 11 TF1 *f1=new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);; 12 f1->SetLineColor(kBlue);; 13 f1->SetLineWidth(4);; 14 f1->Draw(""same"");; 15 ; 16 const Int_t n = 20;; 17 Double_t x[n], y[n], ex[n], ey[n];; 18 for (Int_t i=0;i<n;i++) {; 19 x[i] = i*0.1;; 20 y[i] = 1000*sin(x[i]+0.2);; 21 x[i] = 17.8*x[i]-8.9;; 22 ex[i] = 1.0;; 23 ey[i] = 10.*i;; 24 }; 25 TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; 26 gr->SetName(""gr"");; 27 gr->SetLineColor(kRed);; 28 gr->SetLineWidth(2);; 29 gr->SetMarkerStyle(21);; 30 gr->SetMarkerSize(1.3);; 31 gr->SetMarkerColor(7);; 32 gr->Draw(""P"");; 33 ; 34 leg = new TLegend(0.1,0.7,0.48,0.9);; 35 leg->SetHeader(""The Legend Title"");; 36 leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; 37 leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; 38 leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; 39 leg->Draw();; 40 ; 41 return c1;; 42}; 43 ; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:433; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/legend1_8C_source.html:96,Load,Loading,96,doc/v632/legend1_8C_source.html,https://root.cern,https://root.cern/doc/v632/legend1_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/legend2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; legend2.C File Reference. Functions; leg AddEntry ((TObject *) 0, """", """");  ; leg AddEntry ((TObject *) 0, ""Some text"", """");  ; leg AddEntry (h, ""Histogram \""h\"" again"", ""l"");  ; leg AddEntry (h, ""Histogram \""h\"""", ""l"");  ; leg Draw ();  . Variables; return c2;  ; TH1 * h = new TH1F("""", """", 1, 0, 1);  ; TLegend * leg = new TLegend(0.2, 0.2, .8, .8);  . Function Documentation. ◆ AddEntry() [1/4]. leg AddEntry ; (; (TObject *) ; 0, . """" ; , . """" ;  . ). ◆ AddEntry() [2/4]. leg AddEntry ; (; (TObject *) ; 0, . ""Some text"" ; , . """" ;  . ). ◆ AddEntry() [3/4]. leg AddEntry ; (; h ; , . ""Histogram \""h\"" again"" ; , . ""l"" ;  . ). ◆ AddEntry() [4/4]. leg AddEntry ; (; h ; , . ""Histogram \""h\"""" ; , . ""l"" ;  . ). ◆ Draw(). leg Draw ; (; ). Variable Documentation. ◆ c2. return c2. Definition at line 14 of file legend2.C. ◆ h. Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t h = new TH1F("""", """", 1, 0, 1). Definition at line 5 of file legend2.C. ◆ leg. TLegend* leg = new TLegend(0.2, 0.2, .8, .8). Definition at line 4 of file legend2.C. graf2dgrafdocmacroslegend2.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend2_8C.html:100,Load,Loading,100,doc/master/legend2_8C.html,https://root.cern,https://root.cern/doc/master/legend2_8C.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/legend2.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. legend2.C. Go to the documentation of this file. 1{; 2 TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);; 3 ; 4 TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; 5 TH1* h = new TH1F("""", """", 1, 0, 1);; 6 ; 7 leg->AddEntry(h, ""Histogram \""h\"""", ""l"");; 8 leg->AddEntry((TObject*)0, """", """");; 9 leg->AddEntry((TObject*)0, ""Some text"", """");; 10 leg->AddEntry((TObject*)0, """", """");; 11 leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");; 12 ; 13 leg->Draw();; 14 return c2;; 15}; 16 ; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TLegendThis class displays a legend box (TPaveText) containing several legend entries.Definition TLegend.h:23; TLegend::AddEntryTLegendEntry * AddEntry(const TObject *obj, const char *label="""", Option_t *option=""lpf"")Add a new entry to this legend.Definition TLegend.cxx:320; TLegend::Drawvoid Draw(Option_t *option="""") overrideDraw this legend with its current attributes.Definition TLegend.cxx:425; TObjectMother of all ROOT objects.Definition TObject.h:41; hTH1 * hDefinition legend2.C:5; c2return c2Definition legend2.C:14; legTLegend * legDefinition legend2.C:4. graf2dgrafdocmacroslegend2.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend2_8C_source.html:97,Load,Loading,97,doc/master/legend2_8C_source.html,https://root.cern,https://root.cern/doc/master/legend2_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/legend3.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; legend3.C File Reference. Functions; leg AddEntry (h, ""Column 1 line 1"", ""l"");  ; leg AddEntry (h, ""Column 1 line 2"", ""l"");  ; leg AddEntry (h, ""Column 2 line 1"", ""l"");  ; leg AddEntry (h, ""Column 2 line 2"", ""l"");  ; leg Draw ();  ; leg SetNColumns (2);  . Variables; return c3;  ; TH1 * h = new TH1F("""", """", 1, 0, 1);  ; TLegend * leg = new TLegend(0.2, 0.2, .8, .8);  . Function Documentation. ◆ AddEntry() [1/4]. leg AddEntry ; (; h ; , . ""Column 1 line 1"" ; , . ""l"" ;  . ). ◆ AddEntry() [2/4]. leg AddEntry ; (; h ; , . ""Column 1 line 2"" ; , . ""l"" ;  . ). ◆ AddEntry() [3/4]. leg AddEntry ; (; h ; , . ""Column 2 line 1"" ; , . ""l"" ;  . ). ◆ AddEntry() [4/4]. leg AddEntry ; (; h ; , . ""Column 2 line 2"" ; , . ""l"" ;  . ). ◆ Draw(). leg Draw ; (; ). ◆ SetNColumns(). leg SetNColumns ; (; 2 ; ). Variable Documentation. ◆ c3. return c3. Definition at line 15 of file legend3.C. ◆ h. TH1* h = new TH1F("""", """", 1, 0, 1). Definition at line 5 of file legend3.C. ◆ leg. TLegend* leg = new TLegend(0.2, 0.2, .8, .8). Definition at line 4 of file legend3.C. graf2dgrafdocmacroslegend3.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend3_8C.html:100,Load,Loading,100,doc/master/legend3_8C.html,https://root.cern,https://root.cern/doc/master/legend3_8C.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/legend3.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. legend3.C. Go to the documentation of this file. 1{; 2 TCanvas *c3 = new TCanvas(""c2"",""c2"",500,300);; 3 ; 4 TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; 5 TH1* h = new TH1F("""", """", 1, 0, 1);; 6 ; 7 leg-> SetNColumns(2);; 8 ; 9 leg->AddEntry(h, ""Column 1 line 1"", ""l"");; 10 leg->AddEntry(h, ""Column 2 line 1"", ""l"");; 11 leg->AddEntry(h, ""Column 1 line 2"", ""l"");; 12 leg->AddEntry(h, ""Column 2 line 2"", ""l"");; 13 ; 14 leg->Draw();; 15 return c3;; 16}; 17 ; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TLegendThis class displays a legend box (TPaveText) containing several legend entries.Definition TLegend.h:23; TLegend::AddEntryTLegendEntry * AddEntry(const TObject *obj, const char *label="""", Option_t *option=""lpf"")Add a new entry to this legend.Definition TLegend.cxx:320; TLegend::Drawvoid Draw(Option_t *option="""") overrideDraw this legend with its current attributes.Definition TLegend.cxx:425; SetNColumnsleg SetNColumns(2); c3return c3Definition legend3.C:15; legTLegend * legDefinition legend3.C:4; hTH1 * hDefinition legend3.C:5. graf2dgrafdocmacroslegend3.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/legend3_8C_source.html:97,Load,Loading,97,doc/master/legend3_8C_source.html,https://root.cern,https://root.cern/doc/master/legend3_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/polyline.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; polyline.C File Reference. Functions; pline Draw (""f"");  ; pline Draw ();  ; pline SetFillColor (38);  ; pline SetLineColor (2);  ; pline SetLineWidth (4);  . Variables; TPolyLine * pline = new TPolyLine(5,x,y);  ; Double_t y [5] = {.5,.1,.9,.7,.5};  . Function Documentation. ◆ Draw() [1/2]. pline Draw ; (; ""f"" ; ). ◆ Draw() [2/2]. pline Draw ; (; ). ◆ SetFillColor(). pline SetFillColor ; (; 38 ; ). ◆ SetLineColor(). pline SetLineColor ; (; 2 ; ). ◆ SetLineWidth(). pline SetLineWidth ; (; 4 ; ). Variable Documentation. ◆ pline. TPolyLine* pline = new TPolyLine(5,x,y). Definition at line 4 of file polyline.C. ◆ y. Double_t y[5] = {.5,.1,.9,.7,.5}. Definition at line 3 of file polyline.C. graf2dgrafdocmacrospolyline.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/polyline_8C.html:101,Load,Loading,101,doc/master/polyline_8C.html,https://root.cern,https://root.cern/doc/master/polyline_8C.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/doc/macros/polyline.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. polyline.C. Go to the documentation of this file. 1{; 2 Double_t x[5] = {.2,.7,.6,.25,.2};; 3 Double_t y[5] = {.5,.1,.9,.7,.5};; 4 TPolyLine *pline = new TPolyLine(5,x,y);; 5 pline->SetFillColor(38);; 6 pline->SetLineColor(2);; 7 pline->SetLineWidth(4);; 8 pline->Draw(""f"");; 9 pline->Draw();; 10}; Double_tdouble Double_tDefinition RtypesCore.h:59; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TPolyLineDefined by an array on N points in a 2-D space.Definition TPolyLine.h:23; TPolyLine::Drawvoid Draw(Option_t *option="""") overrideDraw this polyline with its current attributes.Definition TPolyLine.cxx:215; xDouble_t x[n]Definition legend1.C:17; plineTPolyLine * plineDefinition polyline.C:4; yDouble_t y[5]Definition polyline.C:3. graf2dgrafdocmacrospolyline.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/polyline_8C_source.html:98,Load,Loading,98,doc/master/polyline_8C_source.html,https://root.cern,https://root.cern/doc/master/polyline_8C_source.html,1,['Load'],['Loading']
Performance,. ROOT: graf2d/graf/doc/macros/roots.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; roots.C File Reference. Functions; TCanvas * roots ();  . Function Documentation. ◆ roots(). TCanvas * roots ; (; ). Definition at line 1 of file roots.C. graf2dgrafdocmacrosroots.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/roots_8C.html:98,Load,Loading,98,doc/master/roots_8C.html,https://root.cern,https://root.cern/doc/master/roots_8C.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TArc.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArc.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 16/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TArc; 13#define ROOT_TArc; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TArc //; 19// //; 20// Arc of a circle. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TEllipse.h""; 25 ; 26class TArc : public TEllipse {; 27 ; 28public:; 29 TArc();; 30 TArc(Double_t x1, Double_t y1,Double_t radius; 31 , Double_t phimin=0,Double_t phimax=360);; 32 TArc(const TArc &arc);; 33 ~TArc() override;; 34 ; 35 void Copy(TObject &arc) const override;; 36 virtual TArc *DrawArc(Double_t x1, Double_t y1, Double_t radius; 37 ,Double_t phimin=0, Double_t phimax=360, Option_t *option="""");; 38 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 39 ; 40 ClassDefOverride(TArc,1) //Arc of a circle; 41};; 42 ; 43#endif; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; TEllipse.h; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; TArcCreate an Arc.Definition TArc.h:26; TArc::~TArc~TArc() overrideArc default destructor.Definition TArc.cxx:64; TArc::TArcTArc()Arc default constructor.Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TArc_8h_source.html:87,Load,Loading,87,doc/master/TArc_8h_source.html,https://root.cern,https://root.cern/doc/master/TArc_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TArrow.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArrow.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 17/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TArrow; 13#define ROOT_TArrow; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TArrow //; 19// //; 20// One arrow --->. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TString.h""; 25#include ""TLine.h""; 26#include ""TAttFill.h""; 27 ; 28 ; 29class TArrow : public TLine, public TAttFill {; 30protected:; 31 Float_t fAngle; ///< Arrow opening angle (degrees); 32 Float_t fArrowSize; ///< Arrow Size; 33 TString fOption; ///< Arrow shapes; 34 ; 35 static Float_t fgDefaultAngle; ///< Default Arrow opening angle (degrees); 36 static Float_t fgDefaultArrowSize; ///< Default Arrow Size; 37 static TString fgDefaultOption; ///< Default Arrow shapes; 38 ; 39public:; 40 TArrow();; 41 TArrow(Double_t x1, Double_t y1, Double_t x2 ,Double_t y2,; 42 Float_t arrowsize=0.05, Option_t *option="">"");; 43 TArrow(const TArrow &arrow);; 44 ~TArrow() override;; 45 ; 46 void Copy(TObject &arrow) const override;; 47 ; 48 void Draw(Option_t *option="""") override;; 49 virtual TArrow *DrawArrow(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2,; 50 Float_t arrowsize=0 ,Option_t *option="""");; 51 Float_t GetAngle() const {return fAngle;}; 52 Float_t GetArrowSize() const {return fArrowSize;}; 53 Option_t *GetOption() const override { return fOption.Data();}; 54 void Paint(Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TArrow_8h_source.html:89,Load,Loading,89,doc/master/TArrow_8h_source.html,https://root.cern,https://root.cern/doc/master/TArrow_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TBox.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBox.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBox; 13#define ROOT_TBox; 14 ; 15#include ""TObject.h""; 16#include ""TAttLine.h""; 17#include ""TAttFill.h""; 18#include ""TAttBBox2D.h""; 19 ; 20class TPoint;; 21 ; 22class TBox : public TObject, public TAttLine, public TAttFill, public TAttBBox2D {; 23 ; 24private:; 25 TObject *fTip{nullptr}; ///<! tool tip associated with box; 26 ; 27protected:; 28 Double_t fX1; ///< X of 1st point; 29 Double_t fY1; ///< Y of 1st point; 30 Double_t fX2; ///< X of 2nd point; 31 Double_t fY2; ///< Y of 2nd point; 32 Bool_t fResizing; ///<! True if box is being resized; 33 ; 34public:; 35 // Private bits, clients can only test but not change them; 36 enum {; 37 kCannotMove = BIT(12) //if set the box cannot be moved/resized; 38 };; 39 TBox();; 40 TBox(Double_t x1, Double_t y1,Double_t x2, Double_t y2);; 41 TBox(const TBox &box);; 42 TBox& operator=(const TBox&);; 43 ~TBox() override;; 44 ; 45 void Copy(TObject &box) const override;; 46 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 47 void Draw(Option_t *option="""") override;; 48 virtual TBox *DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2);; 49 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 50 Bool_t IsBeingResized() const { return fResizing; }; 51 Double_t GetX1() const { return fX1; }; 52 Double_t GetX2() const { return fX2; }; 53 Double_t GetY1() const { return fY1; }; 54 Double_t GetY2() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBox_8h_source.html:87,Load,Loading,87,doc/master/TBox_8h_source.html,https://root.cern,https://root.cern/doc/master/TBox_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TCurlyArc.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyArc.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Otto Schaile 20/11/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TCurlyArc; 12#define ROOT_TCurlyArc; 13 ; 14#include ""TCurlyLine.h""; 15 ; 16class TCurlyArc : public TCurlyLine {; 17 ; 18private:; 19 Double_t fR1; ///< Radius of arc; 20 Double_t fPhimin; ///< start phi (degrees); 21 Double_t fPhimax; ///< end phi (degrees); 22 Double_t fTheta; ///< used internally; 23 ; 24 static Double_t fgDefaultWaveLength; ///< default wavelength; 25 static Double_t fgDefaultAmplitude; ///< default amplitude; 26 static Bool_t fgDefaultIsCurly; ///< default curly type; 27 ; 28public:; 29 TCurlyArc();; 30 TCurlyArc(Double_t x1, Double_t y1, Double_t rad,; 31 Double_t phimin, Double_t phimax,; 32 Double_t wl = .02, Double_t amp = .01);; 33 ~TCurlyArc() override {}; 34 ; 35 void Build() override;; 36 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 37 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 38 Double_t GetRadius() const {return fR1;}; 39 Double_t GetPhimin() const {return fPhimin;}; 40 Double_t GetPhimax() const {return fPhimax;}; 41 virtual void SetCenter(Double_t x1, Double_t y1); // *MENU* *ARGS={x1=>fX1,y1=>fY1}; 42 virtual void SetRadius(Double_t radius); // *MENU* *ARGS={radius=>fR1}; 43 virtual void SetPhimin(Double_t phimin); // *MENU* *ARGS={phimin=>fPhimin}; 44 virtual void SetPhimax(Double_t phimax); // *MENU* *ARGS={phimax=>fPhimax}; 45 void SavePrimitive(std::ostream &out, Option_t * = """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyArc_8h_source.html:92,Load,Loading,92,doc/master/TCurlyArc_8h_source.html,https://root.cern,https://root.cern/doc/master/TCurlyArc_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TCurlyLine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyLine.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Otto Schaile 20/11/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TCurlyLine; 12#define ROOT_TCurlyLine; 13 ; 14#include ""TPolyLine.h""; 15#include ""TAttBBox2D.h""; 16 ; 17class TPoint;; 18 ; 19class TCurlyLine : public TPolyLine, public TAttBBox2D {; 20 ; 21protected:; 22 Double_t fX1; ///< start x, center for arc; 23 Double_t fY1; ///< start y, center for arc; 24 Double_t fX2; ///< end x; 25 Double_t fY2; ///< end y; 26 Double_t fWaveLength; ///< wavelength of sinusoid in percent of pad height; 27 Double_t fAmplitude; ///< amplitude of sinusoid in percent of pad height; 28 Int_t fNsteps; ///< used internally (controls precision); 29 Bool_t fIsCurly; ///< true: Gluon, false: Gamma; 30 ; 31 static Double_t fgDefaultWaveLength; ///< default wavelength; 32 static Double_t fgDefaultAmplitude; ///< default amplitude; 33 static Bool_t fgDefaultIsCurly; ///< default curly type; 34 ; 35public:; 36 TCurlyLine();; 37 TCurlyLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2,; 38 Double_t wl = .02,; 39 Double_t amp = .01);; 40 ~TCurlyLine() override{}; 41 virtual void Build();; 42 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 43 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 44 Bool_t GetCurly() const {return fIsCurly;}; 45 Double_t GetWaveLength() const{return fWaveLength;}; 46 Double_t GetAmplitude() const {return fAmplitude;}; 47 Double_t GetStartX() const {return fX1;}; 48 Double_t GetEndX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyLine_8h_source.html:93,Load,Loading,93,doc/master/TCurlyLine_8h_source.html,https://root.cern,https://root.cern/doc/master/TCurlyLine_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TCutG.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TCutG.h File Reference. #include ""TGraph.h"". Include dependency graph for TCutG.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TCutG;  Graphical cut class. More...;  . graf2dgrafincTCutG.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCutG_8h.html:91,Load,Loading,91,doc/master/TCutG_8h.html,https://root.cern,https://root.cern/doc/master/TCutG_8h.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TCutG.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCutG.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 16/05/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TCutG; 13#define ROOT_TCutG; 14 ; 15 ; 16#include ""TGraph.h""; 17 ; 18class TH2;; 19 ; 20class TCutG : public TGraph {; 21 ; 22protected:; 23 TString fVarX; ///< X variable; 24 TString fVarY; ///< Y variable; 25 TObject *fObjectX; ///<! pointer to an object corresponding to X; 26 TObject *fObjectY; ///<! pointer to an object corresponding to Y; 27 ; 28public:; 29 TCutG();; 30 TCutG(const TCutG &cutg);; 31 TCutG(const char *name, Int_t n=0);; 32 TCutG(const char *name, Int_t n, const Float_t *x, const Float_t *y);; 33 TCutG(const char *name, Int_t n, const Double_t *x, const Double_t *y);; 34 ~TCutG() override;; 35 ; 36 TCutG &operator=(const TCutG &);; 37 virtual Double_t Area() const;; 38 virtual void Center(Double_t &cx, Double_t &cy) const;; 39 TObject *GetObjectX() const {return fObjectX;}; 40 TObject *GetObjectY() const {return fObjectY;}; 41 const char *GetVarX() const {return fVarX.Data();}; 42 const char *GetVarY() const {return fVarY.Data();}; 43 virtual Double_t IntegralHist(TH2 *h, Option_t *option="""") const;; 44 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 45 virtual void SetObjectX(TObject *obj);; 46 virtual void SetObjectY(TObject *obj);; 47 virtual void SetVarX(const char *varx); // *MENU*; 48 virtual void SetVarY(const char *vary); // *MENU*; 49 ; 50 ClassDefOverride(TCutG,2) // A Graphical cut.; 51};; 52 ; 53#en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCutG_8h_source.html:88,Load,Loading,88,doc/master/TCutG_8h_source.html,https://root.cern,https://root.cern/doc/master/TCutG_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TEllipse.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEllipse.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 16/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TEllipse; 13#define ROOT_TEllipse; 14 ; 15 ; 16#include ""TObject.h""; 17#include ""TAttLine.h""; 18#include ""TAttFill.h""; 19#include ""TAttBBox2D.h""; 20 ; 21class TPoint;; 22 ; 23class TEllipse : public TObject, public TAttLine, public TAttFill, public TAttBBox2D {; 24 ; 25protected:; 26 Double_t fX1; ///< X coordinate of centre; 27 Double_t fY1; ///< Y coordinate of centre; 28 Double_t fR1; ///< first radius; 29 Double_t fR2; ///< second radius; 30 Double_t fPhimin; ///< Minimum angle (degrees); 31 Double_t fPhimax; ///< Maximum angle (degrees); 32 Double_t fTheta; ///< Rotation angle (degrees); 33 ; 34public:; 35 // TEllipse status bits; 36 enum {; 37 kNoEdges = BIT(9) // don't draw lines connecting center to edges; 38 };; 39 TEllipse();; 40 TEllipse(Double_t x1, Double_t y1,Double_t r1,Double_t r2=0,Double_t phimin=0, Double_t phimax=360,Double_t theta=0);; 41 TEllipse(const TEllipse &ellipse);; 42 ~TEllipse() override;; 43 void Copy(TObject &ellipse) const override;; 44 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 45 void Draw(Option_t *option="""") override;; 46 virtual TEllipse *DrawEllipse(Double_t x1, Double_t y1, Double_t r1,Double_t r2,Double_t phimin, Double_t phimax,Double_t theta,Option_t *option="""");; 47 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 48 Int_t IsInside(Double_t x, Double_t y) const;; 49 Double_t Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEllipse_8h_source.html:91,Load,Loading,91,doc/master/TEllipse_8h_source.html,https://root.cern,https://root.cern/doc/master/TEllipse_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TFrame.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFrame.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 31/10/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFrame; 13#define ROOT_TFrame; 14 ; 15 ; 16#include ""TWbox.h""; 17 ; 18 ; 19class TFrame : public TWbox {; 20 ; 21 ; 22public:; 23 TFrame();; 24 TFrame(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2);; 25 TFrame(const TFrame &frame);; 26 ~TFrame() override;; 27 void Copy(TObject &frame) const override;; 28 void Draw(Option_t *option="""") override;; 29 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 30 void Paint(Option_t *option="""") override;; 31 void Pop() override;; 32 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 33 void UseCurrentStyle() override; // *MENU*; 34 ; 35 ClassDefOverride(TFrame,1) //Pad graphics frame; 36};; 37 ; 38#endif; 39 ; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; y2Option_t Option_t TPoint TPoint const char y2Definition TGWin32VirtualXProxy.cxx:70; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; TWbox.h; TFrameDefine a Frame.Definition TFrame.h:19; TFrame::Popvoid Pop() overrideDo not pop frame's, if allowed they would cover t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFrame_8h_source.html:89,Load,Loading,89,doc/master/TFrame_8h_source.html,https://root.cern,https://root.cern/doc/master/TFrame_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TGaxis.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGaxis.h File Reference. #include ""TLine.h""; #include ""TAttText.h""; #include ""TString.h"". Include dependency graph for TGaxis.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGaxis;  The axis painter class. More...;  . graf2dgrafincTGaxis.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8h.html:92,Load,Loading,92,doc/master/TGaxis_8h.html,https://root.cern,https://root.cern/doc/master/TGaxis_8h.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TGaxis.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGaxis.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun, Olivier Couet 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGaxis; 13#define ROOT_TGaxis; 14 ; 15#include ""TLine.h""; 16#include ""TAttText.h""; 17#include ""TString.h""; 18 ; 19class TF1;; 20class TAxis;; 21class TLatex;; 22class TAxisModLab;; 23 ; 24class TGaxis : public TLine, public TAttText {; 25 ; 26protected:; 27 ; 28 Double_t fWmin; ///< Lowest value on the axis; 29 Double_t fWmax; ///< Highest value on the axis; 30 Float_t fGridLength; ///< Length of the grid in NDC; 31 Float_t fTickSize; ///< Size of primary tick mark in NDC; 32 Float_t fLabelOffset; ///< Offset of label wrt axis; 33 Float_t fLabelSize; ///< Size of labels in NDC; 34 Float_t fTitleOffset; ///< Offset of title wrt axis; 35 Float_t fTitleSize; ///< Size of title in NDC; 36 Int_t fNdiv; ///< Number of divisions; 37 Int_t fLabelColor; ///< Color for labels; 38 Int_t fLabelFont; ///< Font for labels; 39 Int_t fNModLabs; ///< Number of modified labels; 40 TString fChopt; ///< Axis options; 41 TString fName; ///< Axis name; 42 TString fTitle; ///< Axis title; 43 TString fTimeFormat; ///< Time format, ex: 09/12/99 12:34:00; 44 TString fFunctionName; ///< Name of mapping function pointed by fFunction; 45 TF1 *fFunction; ///<! Pointer to function computing axis values; 46 TAxis *fAxis; ///<! Pointer to original TAxis axis (if any); 47 TList *fModLabs; ///< List of modified labels.; 48 ; 49 TGaxis(const TGaxis&);; 50 TGaxis& operator=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8h_source.html:89,Load,Loading,89,doc/master/TGaxis_8h_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TGraphPolar.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPolar.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Sebastian Boser, 02/02/06; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphPolar; 13#define ROOT_TGraphPolar; 14 ; 15#include ""TGraphErrors.h""; 16 ; 17#ifdef R__LESS_INCLUDES; 18class TGraphPolargram;; 19#else; 20#include ""TGraphPolargram.h""; 21#endif; 22 ; 23class TGraphPolar : public TGraphErrors {; 24 ; 25private:; 26 Bool_t fOptionAxis; ///< Force drawing of new coord system; 27 ; 28protected:; 29 TGraphPolargram* fPolargram; ///< The polar coordinates system; 30 Double_t* fXpol; ///< [fNpoints] points in polar coordinates; 31 Double_t* fYpol; ///< [fNpoints] points in polar coordinates; 32 ; 33public:; 34 TGraphPolar();; 35 TGraphPolar(Int_t n, const Double_t* theta = nullptr, const Double_t* r = nullptr,; 36 const Double_t* etheta = nullptr, const Double_t* er = nullptr);; 37 ~TGraphPolar() override;; 38 ; 39 TGraphPolargram *GetPolargram() {return fPolargram;}; 40 ; 41 void Draw(Option_t* options = """") override;; 42 Bool_t GetOptionAxis() {return fOptionAxis;}; 43 void SetMaxRadial(Double_t maximum = 1); //*MENU*; 44 void SetMinRadial(Double_t minimum = 0); //*MENU*; 45 void SetMaximum(Double_t maximum = 1) override {SetMaxRadial(maximum);}; 46 void SetMinimum(Double_t minimum = 0) override {SetMinRadial(minimum);}; 47 void SetMaxPolar(Double_t maximum = 6.28318530717958623); //*MENU*; 48 void SetMinPolar(Double_t minimum = 0); //*MENU*; 49 void SetOptionAxis(Bool_t opt) {fOptionAxis = opt;}; 50 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolar_8h_source.html:94,Load,Loading,94,doc/master/TGraphPolar_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolar_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TGraphQQ.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphQQ.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Anna Kreshuk 18/11/2005; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphQQ; 13#define ROOT_TGraphQQ; 14 ; 15 ; 16#include ""TGraph.h""; 17 ; 18class TGraphQQ : public TGraph{; 19protected:; 20 Int_t fNy0{0}; ///< size of the fY0 dataset; 21 Double_t fXq1{0.}; ///< x1 coordinate of the interquartile line; 22 Double_t fXq2{0.}; ///< x2 coordinate of the interquartile line; 23 Double_t fYq1{0.}; ///< y1 coordinate of the interquartile line; 24 Double_t fYq2{0.}; ///< y2 coordinate of the interquartile line; 25 Double_t *fY0{nullptr}; ///<! second dataset, if specified; 26 TF1 *fF{nullptr}; ///< theoretical density function, if specified; 27 ; 28 void Quartiles();; 29 void MakeQuantiles();; 30 void MakeFunctionQuantiles();; 31 ; 32public:; 33 TGraphQQ();; 34 TGraphQQ(Int_t n, Double_t *x);; 35 TGraphQQ(Int_t n, Double_t *x, TF1 *f);; 36 TGraphQQ(Int_t nx, Double_t *x, Int_t ny, Double_t *y);; 37 ~TGraphQQ() override;; 38 ; 39 void SetFunction(TF1 *f);; 40 Double_t GetXq1() const {return fXq1;}; 41 Double_t GetXq2() const {return fXq2;}; 42 Double_t GetYq1() const {return fYq1;}; 43 Double_t GetYq2() const {return fYq2;}; 44 TF1 *GetF() const {return fF;}; 45 ; 46 ClassDefOverride(TGraphQQ, 1); // to create and to draw quantile-quantile plots; 47};; 48 ; 49#endif; f#define f(i)Definition RSha256.hxx:104; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; ClassDefOverride#de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphQQ_8h_source.html:91,Load,Loading,91,doc/master/TGraphQQ_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphQQ_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TLatex.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TLatex.h File Reference. #include ""TText.h""; #include ""TAttLine.h""; #include <vector>. Include dependency graph for TLatex.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TLatex::TextSpec_t;  TLatex helper struct holding the attributes of a piece of text. More...;  ; class  TLatex;  To draw Mathematical Formula. More...;  ; class  TLatex::TLatexFormSize;  TLatex helper class used to compute the size of a portion of a formula. More...;  . graf2dgrafincTLatex.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLatex_8h.html:92,Load,Loading,92,doc/master/TLatex_8h.html,https://root.cern,https://root.cern/doc/master/TLatex_8h.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TLatex.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLatex.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Nicolas Brun 07/08/98; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TLatex; 12#define ROOT_TLatex; 13 ; 14#include ""TText.h""; 15#include ""TAttLine.h""; 16#include <vector>; 17 ; 18class TLatex : public TText, public TAttLine {; 19protected:; 20 ; 21////////////////////////////////////////////////////////////////////////////////; 22/// @brief TLatex helper struct holding the attributes of a piece of text.; 23 ; 24 struct TextSpec_t {; 25 Double_t fAngle,fSize;; 26 Int_t fColor,fFont;; 27 };; 28 ; 29////////////////////////////////////////////////////////////////////////////////; 30/// @class TLatexFormSize; 31/// @brief TLatex helper class used to compute the size of a portion of a formula.; 32 ; 33 class TLatexFormSize {; 34 private:; 35 Double_t fWidth{0}, fOver{0}, fUnder{0};; 36 ; 37 public:; 38 TLatexFormSize() = default;; 39 TLatexFormSize(Double_t width, Double_t over, Double_t under) : fWidth(width), fOver(over), fUnder(under) { } // constructor; 40 ; 41 // definition of operators + and +=; 42 TLatexFormSize operator+(TLatexFormSize f); 43 { return TLatexFormSize(f.Width()+fWidth,TMath::Max(f.Over(),fOver),TMath::Max(f.Under(),fUnder)); }; 44 void operator+=(TLatexFormSize f); 45 { fWidth += f.Width(); fOver = TMath::Max(fOver,f.Over()); fUnder = TMath::Max(fUnder,f.Under()); }; 46 ; 47 inline void Set(Double_t x, Double_t y1, Double_t y2) { fWidth=x; fOver=y1; fUnder=y2; }; 48 TLatexFormSize AddOver(TLatexFormSize",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLatex_8h_source.html:89,Load,Loading,89,doc/master/TLatex_8h_source.html,https://root.cern,https://root.cern/doc/master/TLatex_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TLegend.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TLegend.h File Reference. #include ""TPave.h""; #include ""TAttText.h"". Include dependency graph for TLegend.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TLegend;  This class displays a legend box (TPaveText) containing several legend entries. More...;  . graf2dgrafincTLegend.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8h.html:93,Load,Loading,93,doc/master/TLegend_8h.html,https://root.cern,https://root.cern/doc/master/TLegend_8h.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TLegend.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegend.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Matthew.Adam.Dobbs 06/09/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11//--------------------------------------------------------------------------; 12#ifndef ROOT_TLegend; 13#define ROOT_TLegend; 14 ; 15 ; 16#include ""TPave.h""; 17#include ""TAttText.h""; 18 ; 19class TObject;; 20class TList;; 21class TLegendEntry;; 22 ; 23class TLegend : public TPave , public TAttText {; 24 ; 25protected:; 26 TLegend& operator=(const TLegend&);; 27 ; 28public:; 29 TLegend();; 30 TLegend( Double_t x1, Double_t y1, Double_t x2, Double_t y2,; 31 const char* header = """", Option_t* option=""brNDC"" );; 32 TLegend( Double_t w, Double_t h, const char* header = """", Option_t* option=""brNDC"" );; 33 ~TLegend() override;; 34 TLegend(const TLegend &legend);; 35 ; 36 TLegendEntry *AddEntry(const TObject* obj, const char* label = """", Option_t* option = ""lpf"" );; 37 TLegendEntry *AddEntry(const char *name, const char* label = """", Option_t* option = ""lpf"" );; 38 void Clear( Option_t* option = """" ) override; // *MENU*; 39 void Copy( TObject &obj ) const override;; 40 virtual void DeleteEntry(); // *MENU*; 41 void Draw( Option_t* option = """" ) override;; 42 virtual void EditEntryAttFill();; 43 virtual void EditEntryAttLine();; 44 virtual void EditEntryAttMarker();; 45 virtual void EditEntryAttText();; 46 Float_t GetColumnSeparation() const { return fColumnSeparation; }; 47 TLegendEntry *GetEntry() const;; 48 Float_t GetEntrySeparation() const { return fEntrySeparatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8h_source.html:90,Load,Loading,90,doc/master/TLegend_8h_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TLegendEntry.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegendEntry.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Matthew.Adam.Dobbs 06/09/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11//--------------------------------------------------------------------------; 12 ; 13#ifndef ROOT_TLegendEntry; 14#define ROOT_TLegendEntry; 15 ; 16 ; 17#include ""TObject.h""; 18#include ""TAttText.h""; 19#include ""TAttLine.h""; 20#include ""TAttFill.h""; 21#include ""TAttMarker.h""; 22#include ""TString.h""; 23 ; 24class TLegendEntry : public TObject, public TAttText, public TAttLine,; 25 public TAttFill, public TAttMarker {; 26public:; 27 TLegendEntry();; 28 TLegendEntry(const TObject *obj, const char *label = nullptr, Option_t *option=""lpf"" );; 29 TLegendEntry( const TLegendEntry &entry );; 30 ~TLegendEntry() override;; 31 void Copy( TObject &obj ) const override;; 32 virtual const char *GetLabel() const { return fLabel.Data(); }; 33 virtual TObject *GetObject() const { return fObject; }; 34 Option_t *GetOption() const override { return fOption.Data(); }; 35 void Print( Option_t *option = """" ) const override;; 36 virtual void SaveEntry( std::ostream &out, const char *name );; 37 virtual void SetLabel( const char *label = """" ) { fLabel = label; } // *MENU*; 38 virtual void SetObject(TObject* obj );; 39 virtual void SetObject( const char *objectName ); // *MENU*; 40 virtual void SetOption( Option_t *option=""lpf"" ) { fOption = option; } // *MENU*; 41 ; 42protected:; 43 TObject *fObject; ///< pointer to object being represented by this entry; 44 TString fLabel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegendEntry_8h_source.html:95,Load,Loading,95,doc/master/TLegendEntry_8h_source.html,https://root.cern,https://root.cern/doc/master/TLegendEntry_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TLine.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TLine.h File Reference. #include ""TObject.h""; #include ""TAttLine.h""; #include ""TAttBBox2D.h"". Include dependency graph for TLine.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TLine;  Use the TLine constructor to create a simple line. More...;  . graf2dgrafincTLine.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8h.html:91,Load,Loading,91,doc/master/TLine_8h.html,https://root.cern,https://root.cern/doc/master/TLine_8h.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TLine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLine.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TLine; 13#define ROOT_TLine; 14 ; 15 ; 16#include ""TObject.h""; 17#include ""TAttLine.h""; 18#include ""TAttBBox2D.h""; 19 ; 20class TPoint;; 21 ; 22class TLine : public TObject, public TAttLine, public TAttBBox2D {; 23 ; 24protected:; 25 Double_t fX1{0}; ///< X of 1st point; 26 Double_t fY1{0}; ///< Y of 1st point; 27 Double_t fX2{0}; ///< X of 2nd point; 28 Double_t fY2{0}; ///< Y of 2nd point; 29 ; 30public:; 31 // TLine status bits; 32 enum {; 33 kLineNDC = BIT(14), ///< Use NDC coordinates; 34 kVertical = BIT(15), ///< Line is vertical; 35 kHorizontal = BIT(16) ///< Line is horizontal; 36 };; 37 ; 38 TLine() {}; 39 TLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2);; 40 TLine(const TLine &line);; 41 ~TLine() override = default;; 42 ; 43 TLine &operator=(const TLine &src);; 44 ; 45 void Copy(TObject &line) const override;; 46 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 47 virtual TLine *DrawLine(Double_t x1, Double_t y1,Double_t x2, Double_t y2);; 48 virtual TLine *DrawLineNDC(Double_t x1, Double_t y1,Double_t x2, Double_t y2);; 49 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 50 Double_t GetX1() const {return fX1;}; 51 Double_t GetX2() const {return fX2;}; 52 Double_t GetY1() const {return fY1;}; 53 Double_t GetY2() const {return fY2;}; 54 Bool_t IsHorizontal();; 55 Bool_t IsVertical();; 56 void ls(Option_t *option="""")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8h_source.html:88,Load,Loading,88,doc/master/TLine_8h_source.html,https://root.cern,https://root.cern/doc/master/TLine_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TMarker.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMarker.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/05/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TMarker; 13#define ROOT_TMarker; 14 ; 15 ; 16#include ""TObject.h""; 17#include ""TAttMarker.h""; 18#include ""TAttBBox2D.h""; 19 ; 20class TPoint;; 21 ; 22class TMarker : public TObject, public TAttMarker, public TAttBBox2D {; 23 ; 24protected:; 25 Double_t fX; ///< X position of marker (left,center,etc..); 26 Double_t fY; ///< Y position of marker (left,center,etc..); 27 ; 28public:; 29 // TMarker status bits; 30 enum {; 31 kMarkerNDC = BIT(14) ///< Marker position is in NDC; 32 };; 33 ; 34 TMarker();; 35 TMarker(Double_t x, Double_t y, Int_t marker);; 36 TMarker(const TMarker &marker);; 37 ~TMarker() override;; 38 ; 39 void Copy(TObject &marker) const override;; 40 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 41 void Draw(Option_t *option="""") override;; 42 virtual TMarker *DrawMarker(Double_t x, Double_t y);; 43 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 44 Double_t GetX() const {return fX;}; 45 Double_t GetY() const {return fY;}; 46 void ls(Option_t *option="""") const override;; 47 void Paint(Option_t *option="""") override;; 48 virtual void PaintMarker(Double_t x, Double_t y);; 49 virtual void PaintMarkerNDC(Double_t u, Double_t v);; 50 void Print(Option_t *option="""") const override;; 51 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 52 virtual void SetNDC(Bool_t isNDC=kTRUE);; 53 virtual void SetX(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMarker_8h_source.html:90,Load,Loading,90,doc/master/TMarker_8h_source.html,https://root.cern,https://root.cern/doc/master/TMarker_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TMathText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMathText.h. Go to the documentation of this file. 1// @(#)root/graf:$Id: TMathText.h 20882 2007-11-19 11:31:26Z rdm $; 2// Author: Yue Shi Lai 12/12/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2009, Yue Shi Lai. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TMathText; 12#define ROOT_TMathText; 13 ; 14#include ""TText.h""; 15#include ""TAttFill.h""; 16 ; 17class TMathTextRenderer;; 18 ; 19class TMathText : public TText, public TAttFill {; 20protected:; 21 ; 22 friend class TMathTextRenderer;; 23 ; 24 TMathTextRenderer *fRenderer{nullptr}; //!TMathText Painter; 25 TMathText &operator=(const TMathText &);; 26 ; 27 void Render(const Double_t x, const Double_t y,; 28 const Double_t size, const Double_t angle,; 29 const Char_t *t, const Int_t length);; 30 void GetSize(Double_t &x0, Double_t &y0,; 31 Double_t &x1, Double_t &y1,; 32 const Double_t size, const Double_t angle,; 33 const Char_t *t, const Int_t length);; 34 void GetAlignPoint(Double_t &x0, Double_t &y0,; 35 const Double_t size, const Double_t angle,; 36 const Char_t *t, const Int_t length,; 37 const Short_t align);; 38public:; 39 enum {; 40 kTextNDC = BIT(14); 41 };; 42 TMathText();; 43 TMathText(Double_t x, Double_t y, const char *text);; 44 TMathText(const TMathText &text);; 45 ~TMathText() override;; 46 void Copy(TObject &text) const override;; 47 TMathText *DrawMathText(Double_t x, Double_t y, const char *text);; 48 void GetBoundingBox(UInt_t &w, UInt_t &h, Bool_t angle = kFALSE) override;; 49 Double_t GetXsize();; 50 Double_t GetYsize();; 51 void Paint(Option_t *option = """") override;; 52 virtual void PaintMathText(Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMathText_8h_source.html:92,Load,Loading,92,doc/master/TMathText_8h_source.html,https://root.cern,https://root.cern/doc/master/TMathText_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TPaveLabel.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveLabel.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 17/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPaveLabel; 13#define ROOT_TPaveLabel; 14 ; 15 ; 16#include ""TPave.h""; 17#include ""TAttText.h""; 18 ; 19 ; 20class TPaveLabel : public TPave, public TAttText {; 21 ; 22protected:; 23 TString fLabel; ///< Label written at the center of Pave; 24 ; 25public:; 26 TPaveLabel();; 27 TPaveLabel(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2, const char *label, Option_t *option=""br"");; 28 TPaveLabel(const TPaveLabel &pavelabel);; 29 TPaveLabel& operator=(const TPaveLabel &pavelabel);; 30 ~TPaveLabel() override;; 31 ; 32 void Copy(TObject &pavelabel) const override;; 33 void Draw(Option_t *option="""") override;; 34 virtual TPaveLabel *DrawPaveLabel(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2,; 35 const char *label, Option_t *option="""");; 36 const char *GetLabel() const {return fLabel.Data();}; 37 const char *GetTitle() const override {return fLabel.Data();}; 38 void Paint(Option_t *option="""") override;; 39 virtual void PaintPaveLabel(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2,; 40 const char *label, Option_t *option="""");; 41 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 42 virtual void SetLabel(const char *label) {fLabel = label;} // *MENU*; 43 ; 44 ClassDefOverride(TPaveLabel,1) //PaveLabel. A Pave with a label; 45};; 46 ; 47#endif; 48 ; Double_tdouble Double_tDefinition RtypesCore.h:59; Option_tconst char Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveLabel_8h_source.html:93,Load,Loading,93,doc/master/TPaveLabel_8h_source.html,https://root.cern,https://root.cern/doc/master/TPaveLabel_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TPaveStats.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveStats.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 15/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TPaveStats; 12#define ROOT_TPaveStats; 13 ; 14 ; 15#include ""TPaveText.h""; 16#include ""TVirtualPaveStats.h""; 17 ; 18class TPaveStats : public TPaveText, public TVirtualPaveStats {; 19 ; 20protected:; 21 Int_t fOptFit; ///< option Fit; 22 Int_t fOptStat; ///< option Stat; 23 TString fFitFormat; ///< Printing format for fit parameters; 24 TString fStatFormat; ///< Printing format for stats; 25 TObject *fParent{nullptr}; ///< owner of this TPaveStats; 26 ; 27public:; 28 TPaveStats();; 29 TPaveStats(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2, Option_t *option=""br"");; 30 ~TPaveStats() override;; 31 TBox *AddBox(Double_t , Double_t , Double_t , Double_t) override {return nullptr;}; 32 TLine *AddLine(Double_t , Double_t , Double_t, Double_t) override {return nullptr;}; 33 void DeleteText() override {}; 34 void EditText() override {}; 35 virtual const char *GetFitFormat() const {return fFitFormat.Data();}; 36 virtual const char *GetStatFormat() const {return fStatFormat.Data();}; 37 Int_t GetOptFit() const;; 38 Int_t GetOptStat() const;; 39 TObject *GetParent() const override { return fParent; }; 40 void Paint(Option_t *option="""") override;; 41 void InsertText(const char *) override { }; 42 void InsertLine() override { }; 43 void ReadFile(const char *, Option_t *, Int_t, Int_t) override {}; 44 void SavePrimitive(std::ostream &out, Option_t *option = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveStats_8h_source.html:93,Load,Loading,93,doc/master/TPaveStats_8h_source.html,https://root.cern,https://root.cern/doc/master/TPaveStats_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TPaveText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveText.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 20/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPaveText; 13#define ROOT_TPaveText; 14 ; 15 ; 16#include ""TPave.h""; 17#include ""TText.h""; 18 ; 19class TLine;; 20 ; 21class TPaveText : public TPave, public TAttText {; 22 ; 23protected:; 24 TString fLabel; ///< Label written at the top of the pavetext; 25 Int_t fLongest; ///< Length of the longest line; 26 Float_t fMargin; ///< Text margin; 27 TList *fLines{nullptr}; ///< List of labels; 28 ; 29public:; 30 TPaveText();; 31 TPaveText(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2, Option_t *option=""br"");; 32 TPaveText(const TPaveText &pavetext);; 33 ~TPaveText() override;; 34 TPaveText& operator=(const TPaveText&);; 35 ; 36 virtual TBox *AddBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2);; 37 virtual TLine *AddLine(Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0);; 38 virtual TText *AddText(Double_t x1, Double_t y1, const char *label);; 39 virtual TText *AddText(const char *label);; 40 void Clear(Option_t *option="""") override; // *MENU*; 41 virtual void DeleteText(); // *MENU*; 42 void Draw(Option_t *option="""") override;; 43 virtual void DrawFile(const char *filename, Option_t *option="""");; 44 virtual void EditText(); // *MENU*; 45 const char *GetLabel() const {return fLabel.Data();}; 46 virtual TText *GetLine(Int_t number) const;; 47 virtual TText *GetLineWith(const char *text) const;; 48 virtual TList *GetListOfLines() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveText_8h_source.html:92,Load,Loading,92,doc/master/TPaveText_8h_source.html,https://root.cern,https://root.cern/doc/master/TPaveText_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TPavesText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPavesText.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 19/11/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPavesText; 13#define ROOT_TPavesText; 14 ; 15 ; 16#include ""TPaveText.h""; 17 ; 18class TPavesText : public TPaveText {; 19 ; 20protected:; 21 Int_t fNpaves; ///< Number of stacked paves; 22 ; 23public:; 24 TPavesText();; 25 TPavesText(Double_t x1, Double_t y1,Double_t x2 ,Double_t y2, Int_t npaves=5, Option_t *option=""br"");; 26 TPavesText(const TPavesText &pavestext);; 27 ~TPavesText() override;; 28 ; 29 void Draw(Option_t *option="""") override;; 30 virtual Int_t GetNpaves() {return fNpaves;}; 31 void Paint(Option_t *option="""") override;; 32 void SavePrimitive(std::ostream &out, Option_t *option = """") override;; 33 virtual void SetNpaves(Int_t npaves=5) {fNpaves=npaves;} // *MENU*; 34 ; 35 ClassDefOverride(TPavesText,1) //Stacked Paves with text strings; 36};; 37 ; 38#endif; 39 ; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; y2Option_t Option_t TPoint TPoint const char y2Definition TGWin32VirtualXProxy.cxx:70; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; TPaveText.h; TPaveTextA Pav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPavesText_8h_source.html:93,Load,Loading,93,doc/master/TPavesText_8h_source.html,https://root.cern,https://root.cern/doc/master/TPavesText_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TPolyLine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPolyLine.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPolyLine; 13#define ROOT_TPolyLine; 14 ; 15 ; 16#include ""TString.h""; 17#include ""TObject.h""; 18#include ""TAttLine.h""; 19#include ""TAttFill.h""; 20 ; 21class TCollection;; 22 ; 23class TPolyLine : public TObject, public TAttLine, public TAttFill {; 24 ; 25protected:; 26 Int_t fN{0}; ///<Number of points; 27 Int_t fLastPoint{-1}; ///<The index of the last filled point; 28 Double_t *fX{nullptr}; ///<[fN] Array of X coordinates; 29 Double_t *fY{nullptr}; ///<[fN] Array of Y coordinates; 30 TString fOption; ///<options; 31 ; 32 TPolyLine& operator=(const TPolyLine&);; 33 ; 34public:; 35 // TPolyLine status bits; 36 enum {; 37 kPolyLineNDC = BIT(14) ///< Polyline coordinates are in NDC space.; 38 };; 39 ; 40 TPolyLine();; 41 TPolyLine(Int_t n, Option_t *option="""");; 42 TPolyLine(Int_t n, Float_t *x, Float_t *y, Option_t *option="""");; 43 TPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""");; 44 TPolyLine(const TPolyLine &polyline);; 45 ~TPolyLine() override;; 46 ; 47 void Copy(TObject &polyline) const override;; 48 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 49 void Draw(Option_t *option="""") override;; 50 virtual TPolyLine *DrawPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""");; 51 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 52 virtual Int_t GetLastPoint() const { return fLastPoint;}; 53 Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPolyLine_8h_source.html:92,Load,Loading,92,doc/master/TPolyLine_8h_source.html,https://root.cern,https://root.cern/doc/master/TPolyLine_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TTF.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTF.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Olivier Couet 01/10/02; 3// Author: Fons Rademakers 21/11/98; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_TTF; 14#define ROOT_TTF; 15 ; 16 ; 17#include ""Rtypes.h""; 18 ; 19/// @cond DOXYGEN_IGNORE; 20// Forward declare for the headers:; 21// # include <ft2build.h>; 22// # include FT_FREETYPE_H; 23// # include FT_GLYPH_H; 24extern ""C"" {; 25 struct FT_LibraryRec_;; 26 struct FT_FaceRec_;; 27 struct FT_CharMapRec_;; 28 struct FT_GlyphRec_;; 29 struct FT_Matrix_;; 30 struct FT_Bitmap_;; 31 typedef struct FT_LibraryRec_* FT_Library;; 32 typedef struct FT_FaceRec_* FT_Face;; 33 typedef struct FT_CharMapRec_* FT_CharMap;; 34 typedef struct FT_GlyphRec_* FT_Glyph;; 35 typedef struct FT_Matrix_ FT_Matrix;; 36 typedef struct FT_Bitmap_ FT_Bitmap; // Forward declared for TGX11TTF.h's benefit; 37 typedef signed long FT_Pos;; 38 #ifndef FT_FREETYPE_H; 39 struct FT_Vector_ { FT_Pos x, y; };; 40 struct FT_BBox_ { FT_Pos xMin, yMin, xMax, yMax; };; 41 #endif; 42 typedef struct FT_Vector_ FT_Vector;; 43 typedef struct FT_BBox_ FT_BBox;; 44}; 45/// @endcond; 46 ; 47 ; 48class TGX11TTF;; 49class TGWin32;; 50class TMathTextRenderer;; 51 ; 52 ; 53class TTF {; 54 ; 55friend class TGX11TTF;; 56friend class TGWin32;; 57friend class TMathTextRenderer;; 58 ; 59public:; 60 ; 61/** \class TTGlyph; 62TTF helper class containing glyphs description.; 63*/; 64 ; 65 class TTGlyph {; 66 public:; 67 UInt_t fIndex{0}; ///< glyph index in face; 68 FT_Vector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTF_8h_source.html:86,Load,Loading,86,doc/master/TTF_8h_source.html,https://root.cern,https://root.cern/doc/master/TTF_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/inc/TText.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TText.h. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Nicolas Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TText; 13#define ROOT_TText; 14 ; 15 ; 16#include ""TAttText.h""; 17#include ""TNamed.h""; 18#include ""TAttBBox2D.h""; 19 ; 20class TPoint;; 21 ; 22class TText : public TNamed, public TAttText, public TAttBBox2D {; 23 ; 24protected:; 25 Double_t fX{0}; ///< X position of text (left,center,etc..); 26 Double_t fY{0}; ///< Y position of text (left,center,etc..); 27 void *fWcsTitle{nullptr}; ///<!Used by TMathText; 28 ; 29public:; 30 // TText status bits; 31 enum {; 32 kTextNDC = BIT(14) ///< The text position is in the NDC space; 33 };; 34 ; 35 TText() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300; 36 TText(Double_t x, Double_t y, const char *text);; 37 TText(Double_t x, Double_t y, const wchar_t *text);; 38 TText(const TText &text);; 39 ~TText() override;; 40 ; 41 TText &operator=(const TText &src);; 42 ; 43 void Copy(TObject &text) const override;; 44 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 45 virtual TText *DrawText(Double_t x, Double_t y, const char *text);; 46 virtual TText *DrawText(Double_t x, Double_t y, const wchar_t *text);; 47 virtual TText *DrawTextNDC(Double_t x, Double_t y, const char *text);; 48 virtual TText *DrawTextNDC(Double_t x, Double_t y, const wchar_t *text);; 49 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 50 ; 51 virtual void GetControlBox(Int_t x, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TText_8h_source.html:88,Load,Loading,88,doc/master/TText_8h_source.html,https://root.cern,https://root.cern/doc/master/TText_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TArrow.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArrow.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 17/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include ""TMath.h""; 15#include ""TArrow.h""; 16#include ""TVirtualPad.h""; 17#include ""TVirtualPS.h""; 18#include ""TVirtualX.h""; 19 ; 20Float_t TArrow::fgDefaultAngle = 60;; 21Float_t TArrow::fgDefaultArrowSize = 0.05;; 22TString TArrow::fgDefaultOption = "">"";; 23 ; 24ClassImp(TArrow);; 25 ; 26/** \class TArrow; 27\ingroup BasicGraphics; 28 ; 29Draw all kinds of Arrows.; 30 ; 31The different arrow's formats are explained in TArrow::TArrow.; 32The picture below gives some examples.; 33 ; 34Once an arrow is drawn on the screen:; 35 ; 36- One can click on one of the edges and move this edge.; 37- One can click on any other arrow part to move the entire arrow.; 38 ; 39Begin_Macro(source); 40../../../tutorials/graphics/arrows.C; 41End_Macro; 42*/; 43 ; 44////////////////////////////////////////////////////////////////////////////////; 45/// Arrow default constructor.; 46 ; 47TArrow::TArrow(): TLine(),TAttFill(); 48{; 49 fAngle = fgDefaultAngle;; 50 fArrowSize = 0.;; 51}; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54/// Arrow normal constructor.; 55///; 56/// Define an arrow between points x1,y1 and x2,y2; 57/// the `arrowsize` is in percentage of the pad height; 58/// Opening angle between the two sides of the arrow is fAngle (60 degrees); 59/// ~~~ {.cpp}; 60/// option = "">"" -----",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TArrow_8cxx_source.html:91,Load,Loading,91,doc/master/TArrow_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TArrow_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TBox.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBox.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13 ; 14#include <iostream>; 15#include ""TROOT.h""; 16#include ""TBuffer.h""; 17#include ""TBox.h""; 18#include ""TVirtualPad.h""; 19#include ""TVirtualX.h""; 20#include ""TClass.h""; 21#include ""TMath.h""; 22#include ""TPoint.h""; 23 ; 24ClassImp(TBox);; 25 ; 26/** \class TBox; 27\ingroup BasicGraphics; 28 ; 29Create a Box.; 30 ; 31A box is defined by :; 32 ; 33- Its bottom left coordinates x1,y1; 34- Its top right coordinates x2,y2; 35 ; 36A box has line attributes (see TAttLine) and fill area attributes (see TAttFill).; 37*/; 38 ; 39////////////////////////////////////////////////////////////////////////////////; 40/// Box default constructor.; 41 ; 42TBox::TBox(): TObject(), TAttLine(), TAttFill(); 43{; 44 fTip = nullptr;; 45 fX1 = 0.;; 46 fY1 = 0.;; 47 fX2 = 0.;; 48 fY2 = 0.;; 49 fResizing = kTRUE;; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Box standard constructor.; 54 ; 55TBox::TBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); 56 : TObject(), TAttLine(), TAttFill(); 57{; 58 if (x2 >= x1) {fX1 =x1; fX2 = x2;}; 59 else {fX1 = x2; fX2 = x1;}; 60 if (y2 >= y1) {fY1 =y1; fY2 = y2;}; 61 else {fY1 = y2; fY2 = y1;}; 62 fResizing = kFALSE;; 63 fTip = nullptr;; 64}; 65 ; 66////////////////////////////////////////////////////////////////////////////////; 67/// Box destructor.; 68 ; 69TBox::~TBox(); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBox_8cxx_source.html:89,Load,Loading,89,doc/master/TBox_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBox_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TCurlyArc.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyArc.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Otto Schaile 20/11/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TCurlyArc; 13\ingroup BasicGraphics; 14 ; 15Implements curly or wavy arcs used to draw Feynman diagrams.; 16 ; 17Amplitudes and wavelengths may be specified in the constructors,; 18via commands or interactively from popup menus.; 19The class make use of TCurlyLine by inheritance, ExecuteEvent methods; 20are highly inspired from the methods used in TPolyLine and TArc.; 21The picture below has been generated by the tutorial feynman.; 22 ; 23Begin_Macro(source); 24../../../tutorials/graphics/feynman.C; 25End_Macro; 26*/; 27 ; 28#include <iostream>; 29#include ""TCurlyArc.h""; 30#include ""TROOT.h""; 31#include ""TVirtualPad.h""; 32#include ""TVirtualX.h""; 33#include ""TMath.h""; 34#include ""TPoint.h""; 35 ; 36Double_t TCurlyArc::fgDefaultWaveLength = 0.02;; 37Double_t TCurlyArc::fgDefaultAmplitude = 0.01;; 38Bool_t TCurlyArc::fgDefaultIsCurly = kTRUE;; 39 ; 40ClassImp(TCurlyArc);; 41 ; 42////////////////////////////////////////////////////////////////////////////////; 43/// Default constructor; 44 ; 45TCurlyArc::TCurlyArc(); 46{; 47 fR1 = 0.;; 48 fPhimin = 0.;; 49 fPhimax = 0.;; 50 fTheta = 0.;; 51}; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54/// Create a new TCurlyArc with center (x1, y1) and radius rad.; 55/// The wavelength and amplitude are given in percent of the line length; 56/// phimin and phimax ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyArc_8cxx_source.html:94,Load,Loading,94,doc/master/TCurlyArc_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCurlyArc_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TCurlyLine.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyLine.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Otto Schaile 20/11/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TCurlyLine; 13\ingroup BasicGraphics; 14 ; 15Implements curly or wavy polylines used to draw Feynman diagrams.; 16 ; 17Amplitudes and wavelengths may be specified in the constructors,; 18via commands or interactively from popup menus.; 19The class make use of TPolyLine by inheritance, ExecuteEvent methods; 20are highly inspired from the methods used in TPolyLine and TArc.; 21The picture below has been generated by the tutorial feynman.; 22 ; 23Begin_Macro(source); 24../../../tutorials/graphics/feynman.C; 25End_Macro; 26*/; 27 ; 28#include ""TCurlyLine.h""; 29#include ""TROOT.h""; 30#include ""TVirtualPad.h""; 31#include ""TVirtualX.h""; 32#include ""TMath.h""; 33#include ""TPoint.h""; 34 ; 35#include <iostream>; 36 ; 37Double_t TCurlyLine::fgDefaultWaveLength = 0.02;; 38Double_t TCurlyLine::fgDefaultAmplitude = 0.01;; 39Bool_t TCurlyLine::fgDefaultIsCurly = kTRUE;; 40 ; 41ClassImp(TCurlyLine);; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// Default constructor.; 45 ; 46TCurlyLine::TCurlyLine(); 47{; 48 fX1 = 0.;; 49 fY1 = 0.;; 50 fX2 = 0.;; 51 fY2 = 0.;; 52 fWaveLength = 0.;; 53 fAmplitude = 0.;; 54 fIsCurly = fgDefaultIsCurly;; 55 fNsteps = 0;; 56}; 57 ; 58////////////////////////////////////////////////////////////////////////////////; 59/// Create a new TCurlyLine with starting point (x1, y1), end poi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyLine_8cxx_source.html:95,Load,Loading,95,doc/master/TCurlyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCurlyLine_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TEllipse.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEllipse.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 16/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13 ; 14#include <iostream>; 15#include ""TROOT.h""; 16#include ""TBuffer.h""; 17#include ""TEllipse.h""; 18#include ""TVirtualPad.h""; 19#include ""TMath.h""; 20#include ""TPoint.h""; 21#include ""TVirtualX.h""; 22 ; 23 ; 24constexpr Double_t kPI = TMath::Pi();; 25 ; 26ClassImp(TEllipse);; 27 ; 28/** \class TEllipse; 29\ingroup BasicGraphics; 30 ; 31Draw Ellipses.; 32 ; 33The ellipse can be truncated and rotated. It is defined by its center `(x1,y1)`; 34and two radius `r1` and `r2`.; 35 ; 36A minimum and maximum angle may be specified `(phimin, phimax)`.; 37The ellipse may be rotated with an angle `theta`. All these; 38angles are in degrees.; 39The attributes of the outline line are given via `TAttLine`.; 40The attributes of the fill area are given via `TAttFill`.; 41The picture below illustrates different types of ellipses.; 42 ; 43When an ellipse sector only is drawn, the lines connecting the center; 44of the ellipse to the edges are drawn by default. One can specify; 45the drawing option ""only"" to not draw these lines or alternatively; 46call the function `SetNoEdges()`. To remove completely the ellipse; 47outline it is enough to specify 0 as line style.; 48 ; 49Begin_Macro(source); 50../../../tutorials/graphics/ellipse.C; 51End_Macro; 52*/; 53 ; 54////////////////////////////////////////////////////////////////////////////////; 55/// Ellipse defau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEllipse_8cxx_source.html:93,Load,Loading,93,doc/master/TEllipse_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEllipse_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TFrame.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFrame.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 31/10/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TVirtualPad.h""; 13#include ""TFrame.h""; 14#include ""TStyle.h""; 15 ; 16ClassImp(TFrame);; 17 ; 18/** \class TFrame; 19\ingroup BasicGraphics; 20 ; 21Define a Frame.; 22 ; 23A `TFrame` is a `TWbox` for drawing histogram frames.; 24*/; 25 ; 26////////////////////////////////////////////////////////////////////////////////; 27/// Frame default constructor.; 28 ; 29TFrame::TFrame(): TWbox(); 30{; 31}; 32 ; 33////////////////////////////////////////////////////////////////////////////////; 34/// Frame normal constructor.; 35 ; 36TFrame::TFrame(Double_t x1, Double_t y1,Double_t x2, Double_t y2); 37 :TWbox(x1,y1,x2,y2); 38{; 39}; 40 ; 41////////////////////////////////////////////////////////////////////////////////; 42/// Frame copy constructor.; 43 ; 44TFrame::TFrame(const TFrame &frame) : TWbox(frame); 45{; 46 frame.TFrame::Copy(*this);; 47}; 48 ; 49////////////////////////////////////////////////////////////////////////////////; 50/// Frame default destructor.; 51 ; 52TFrame::~TFrame(); 53{; 54}; 55 ; 56////////////////////////////////////////////////////////////////////////////////; 57/// Copy this frame to frame.; 58 ; 59void TFrame::Copy(TObject &frame) const; 60{; 61 TWbox::Copy(frame);; 62}; 63 ; 64////////////////////////////////////////////////////////////////////////////////; 65/// Draw this frame with its current attributes.; 66 ; 67void TFrame::D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFrame_8cxx_source.html:91,Load,Loading,91,doc/master/TFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFrame_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TGaxis.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGaxis.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun, Olivier Couet 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13#include <cstring>; 14#include <ctime>; 15#include <cmath>; 16#include <iostream>; 17 ; 18#include ""TROOT.h""; 19#include ""TBuffer.h""; 20#include ""TGaxis.h""; 21#include ""TAxisModLab.h""; 22#include ""TVirtualPad.h""; 23#include ""TVirtualX.h""; 24#include ""TLine.h""; 25#include ""TArrow.h""; 26#include ""TLatex.h""; 27#include ""TStyle.h""; 28#include ""TF1.h""; 29#include ""TAxis.h""; 30#include ""THashList.h""; 31#include ""TObject.h""; 32#include ""TMath.h""; 33#include ""THLimitsFinder.h""; 34#include ""TColor.h""; 35#include ""TTimeStamp.h""; 36#include ""strlcpy.h""; 37#include ""snprintf.h""; 38 ; 39const Int_t kHori = BIT(9);; 40 ; 41ClassImp(TGaxis);; 42 ; 43/** \class TGaxis; 44\ingroup BasicGraphics; 45 ; 46The axis painter class.; 47 ; 48Instances of this class are generated by the histograms and graphs painting; 49classes when `TAxis` are drawn. `TGaxis` is the ""painter class"" of; 50`TAxis`. Therefore it is mainly used via `TAxis`, even if is some; 51occasion it can be used directly to draw an axis which is not part of a graph; 52or an instance. For instance to draw an extra scale on a plot.; 53 ; 54- [Basic definition](\ref GA00); 55- [Definition with a function](\ref GA01); 56- [Logarithmic axis](\ref GA02); 57- [Blank axis](\ref GA03); 58- [Arrow on axis](\ref GA03a); 59- [Tick marks' orientation](\ref GA04); 60- [Tick marks' size](\ref GA05",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:91,Load,Loading,91,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TGraphPolar.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPolar.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Sebastian Boser, Mathieu Demaret 02/02/06; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGraphPolar; 13\ingroup BasicGraphics; 14 ; 15To draw a polar graph.; 16 ; 17TGraphPolar creates a polar graph (including error bars). A TGraphPolar is; 18a TGraphErrors represented in polar coordinates.; 19It uses the class TGraphPolargram to draw the polar axis.; 20 ; 21Example:; 22 ; 23Begin_Macro(source); 24{; 25 TCanvas * CPol = new TCanvas(""CPol"",""TGraphPolar Example"",500,500);; 26 ; 27 Double_t theta[8];; 28 Double_t radius[8];; 29 Double_t etheta[8];; 30 Double_t eradius[8];; 31 ; 32 for (int i=0; i<8; i++) {; 33 theta[i] = (i+1)*(TMath::Pi()/4.);; 34 radius[i] = (i+1)*0.05;; 35 etheta[i] = TMath::Pi()/8.;; 36 eradius[i] = 0.05;; 37 }; 38 ; 39 TGraphPolar * grP1 = new TGraphPolar(8, theta, radius, etheta, eradius);; 40 grP1->SetTitle(""TGraphPolar Example"");; 41 ; 42 grP1->SetMarkerStyle(20);; 43 grP1->SetMarkerSize(2.);; 44 grP1->SetMarkerColor(4);; 45 grP1->SetLineColor(2);; 46 grP1->SetLineWidth(3);; 47 grP1->Draw(""PE"");; 48 ; 49 // Update, otherwise GetPolargram returns 0; 50 CPol->Update();; 51 grP1->GetPolargram()->SetToRadian();; 52 ; 53 return CPol;; 54}; 55End_Macro; 56*/; 57 ; 58#include ""TGraphPolar.h""; 59#include ""TGraphPolargram.h""; 60 ; 61ClassImp(TGraphPolar);; 62 ; 63////////////////////////////////////////////////////////////////////////////////; 64/// TGraphPolar default constructor.; 65 ; 66T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolar_8cxx_source.html:96,Load,Loading,96,doc/master/TGraphPolar_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolar_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TGraphPolargram.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPolargram.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Sebastian Boser, Mathieu Demaret 02/02/06; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TGraphPolargram; 13\ingroup BasicGraphics; 14 ; 15To draw polar axis; 16 ; 17TGraphPolargram draw the polar axis of the TGraphPolar.; 18 ; 19Example:; 20 ; 21Begin_Macro(source); 22{; 23 TCanvas * CPol = new TCanvas(""CPol"",""TGraphPolar Examples"",500,500);; 24 ; 25 Double_t rmin=0;; 26 Double_t rmax=TMath::Pi()*2;; 27 Double_t r[1000];; 28 Double_t theta[1000];; 29 ; 30 TF1 * fp1 = new TF1(""fplot"",""cos(x)"",rmin,rmax);; 31 for (Int_t ipt = 0; ipt < 1000; ipt++) {; 32 r[ipt] = ipt*(rmax-rmin)/1000+rmin;; 33 theta[ipt] = fp1->Eval(r[ipt]);; 34 }; 35 TGraphPolar * grP1 = new TGraphPolar(1000,r,theta);; 36 grP1->SetTitle("""");; 37 grP1->SetLineColor(2);; 38 grP1->Draw(""AOL"");; 39}; 40End_Macro; 41*/; 42 ; 43#include ""TGraphPolar.h""; 44#include ""TGraphPolargram.h""; 45#include ""TGaxis.h""; 46#include ""THLimitsFinder.h""; 47#include ""TVirtualPad.h""; 48#include ""TLatex.h""; 49#include ""TEllipse.h""; 50#include ""TMath.h""; 51 ; 52ClassImp(TGraphPolargram);; 53 ; 54////////////////////////////////////////////////////////////////////////////////; 55/// TGraphPolargram Constructor.; 56 ; 57TGraphPolargram::TGraphPolargram(const char* name, Double_t rmin, Double_t rmax,; 58 Double_t tmin, Double_t tmax):; 59 TNamed(name,""Polargram""); 60{; 61 Init();; 62 fNdivRad = 508;; 63 fNdivPol = 508;; 64 fPolarLabels = nullptr;; 65 fRwrmax = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolargram_8cxx_source.html:100,Load,Loading,100,doc/master/TGraphPolargram_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolargram_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TGraphQQ.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphQQ.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Anna Kreshuk 18/11/2005; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TGraphQQ.h""; 13#include ""TAxis.h""; 14#include ""TF1.h""; 15#include ""TMath.h""; 16 ; 17ClassImp(TGraphQQ);; 18 ; 19/** \class TGraphQQ; 20\ingroup BasicGraphics; 21 ; 22This class allows to draw quantile-quantile plots; 23 ; 24Plots can be drawn for 2 datasets or for a dataset and a theoretical; 25distribution function; 26 ; 27## 2 datasets:; 28 Quantile-quantile plots are used to determine whether 2 samples come from; 29 the same distribution.; 30 A qq-plot draws the quantiles of one dataset against the quantile of the; 31 the other. The quantiles of the dataset with fewer entries are on Y axis,; 32 with more entries - on X axis.; 33 A straight line, going through 0.25 and 0.75 quantiles is also plotted; 34 for reference. It represents a robust linear fit, not sensitive to the; 35 extremes of the datasets.; 36 If the datasets come from the same distribution, points of the plot should; 37 fall approximately on the 45 degrees line. If they have the same; 38 distribution function, but location or scale different parameters,; 39 they should still fall on the straight line, but not the 45 degrees one.; 40 The greater their departure from the straight line, the more evidence there; 41 is, that the datasets come from different distributions.; 42 The advantage of qq-plot is that it not only shows that the underlying; 43 distributions are different, but",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphQQ_8cxx_source.html:93,Load,Loading,93,doc/master/TGraphQQ_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphQQ_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TLatex.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLatex.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Nicolas Brun, Olivier Couet, Oleksandr Grebenyuk; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include ""TLatex.h""; 15#include ""TMathText.h""; 16#include ""TMath.h""; 17#include ""TVirtualPad.h""; 18#include ""TVirtualPS.h""; 19#include ""TVirtualX.h""; 20#include ""snprintf.h""; 21 ; 22const Double_t kPI = TMath::Pi();; 23 ; 24ClassImp(TLatex);; 25 ; 26/** \class TLatex; 27\ingroup BasicGraphics; 28 ; 29To draw Mathematical Formula.; 30 ; 31TLatex's purpose is to write mathematical equations. The syntax is very similar; 32to the Latex's one. It provides several functionalities:; 33 ; 34- [Subscripts and Superscripts](\ref L1); 35- [Fractions](\ref L2); 36- [Splitting Lines](\ref L3); 37- [Roots](\ref L4); 38- [Mathematical Symbols](\ref L5); 39- [Delimiters](\ref L6); 40- [Greek Letters](\ref L7); 41- [Accents](\ref L8); 42- [Changing Style](\ref L9); 43- [Alignment Rules](\ref L10); 44- [Character Adjustment](\ref L11); 45- [Italic and Boldface](\ref L12); 46- [Examples](\ref L13); 47- [Interface to TMathText](\ref L14); 48 ; 49When the font precision (see `TAttText`) is low (0 or 1), TLatex is; 50painted as a normal TText, the control characters are not interpreted.; 51 ; 52\anchor L1; 53## Subscripts and Superscripts; 54Subscripts and superscripts are made with the `_` and `^`; 55commands. These commands can be combined to make complicated subscript and; 56superscript expressions. You ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLatex_8cxx_source.html:91,Load,Loading,91,doc/master/TLatex_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLatex_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TLegend.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegend.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Matthew.Adam.Dobbs 06/09/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdio>; 13#include <iostream>; 14 ; 15#include ""TStyle.h""; 16#include ""TLatex.h""; 17#include ""TLine.h""; 18#include ""TPolyLine.h""; 19#include ""TMarker.h""; 20#include ""TLegend.h""; 21#include ""TList.h""; 22#include ""TVirtualPad.h""; 23#include ""TMath.h""; 24#include ""TROOT.h""; 25#include ""TLegendEntry.h""; 26#include ""TMultiGraph.h""; 27#include ""TGraph.h""; 28#include ""TH1.h""; 29#include ""THStack.h""; 30 ; 31ClassImp(TLegend);; 32 ; 33/** \class TLegend; 34\ingroup BasicGraphics; 35 ; 36This class displays a legend box (TPaveText) containing several legend entries.; 37 ; 38Each legend entry is made of a reference to a ROOT object, a text label and an; 39option specifying which graphical attributes (marker/line/fill) should be; 40displayed.; 41 ; 42The following example shows how to create a legend. In this example the legend; 43contains a histogram, a function and a graph. The histogram is put in the legend; 44using its reference pointer whereas the graph and the function are added; 45using their names. Note that, because `TGraph` constructors do not have the; 46`TGraph` name as parameter, the graph name should be specified using the; 47`SetName` method.; 48 ; 49When an object is added by name, a scan is performed on the list of objects; 50contained in the current pad (`gPad`) and also in the possible; 51`TMultiGraph` and `THStack` present in the p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8cxx_source.html:92,Load,Loading,92,doc/master/TLegend_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TLegendEntry.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegendEntry.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Matthew.Adam.Dobbs 06/09/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdio>; 13 ; 14#include ""TLegendEntry.h""; 15#include ""TVirtualPad.h""; 16#include ""TROOT.h""; 17#include <iostream>; 18 ; 19ClassImp(TLegendEntry);; 20 ; 21/** \class TLegendEntry; 22\ingroup BasicGraphics; 23 ; 24Storage class for one entry of a TLegend.; 25*/; 26 ; 27////////////////////////////////////////////////////////////////////////////////; 28/// TLegendEntry do-nothing default constructor; 29 ; 30TLegendEntry::TLegendEntry(): TAttText(), TAttLine(), TAttFill(), TAttMarker(); 31{; 32 fObject = nullptr;; 33}; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/// TLegendEntry normal constructor for one entry in a TLegend.; 37///; 38/// obj is the object this entry will represent. If obj has; 39/// line/fill/marker attributes, then the TLegendEntry will display; 40/// these attributes.; 41///; 42/// label is the text that will describe the entry, it is displayed using; 43/// TLatex, so may have a complex format.; 44///; 45/// option may have values; 46/// - L draw line associated w/ TAttLine if obj inherits from TAttLine; 47/// - P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; 48/// - F draw a box with fill associated w/ TAttFill if obj inherits TAttFill; 49/// default is object = ""LPF""; 50 ; 51TLegendEntry::TLegendEntry(const TObject* obj, const char* label, Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegendEntry_8cxx_source.html:97,Load,Loading,97,doc/master/TLegendEntry_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegendEntry_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TLine.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLine.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13 ; 14#include <iostream>; 15#include ""TROOT.h""; 16#include ""TBuffer.h""; 17#include ""TLine.h""; 18#include ""TVirtualPad.h""; 19#include ""TClass.h""; 20#include ""TVirtualX.h""; 21#include ""TMath.h""; 22#include ""TPoint.h""; 23 ; 24ClassImp(TLine);; 25 ; 26/** \class TLine; 27\ingroup BasicGraphics; 28 ; 29Use the TLine constructor to create a simple line.; 30 ; 31~~~ {.cpp}; 32 TLine(Double_t x1,Double_t y1,Double_t x2,Double_t y2); 33~~~; 34 ; 35`x1`, `y1`, `x2`, `y2` are the coordinates of the first and the second point.; 36 ; 37_**Example**_:; 38 ; 39~~~ {.cpp}; 40 root[] l = new TLine(0.2,0.2,0.8,0.3); 41 root[] l->Draw(); 42~~~; 43*/; 44 ; 45 ; 46////////////////////////////////////////////////////////////////////////////////; 47/// Line normal constructor.; 48 ; 49TLine::TLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2); 50 :TObject(), TAttLine(); 51{; 52 fX1=x1; fY1=y1; fX2=x2; fY2=y2;; 53}; 54 ; 55 ; 56////////////////////////////////////////////////////////////////////////////////; 57/// Line copy constructor.; 58 ; 59TLine::TLine(const TLine &line) : TObject(line), TAttLine(line), TAttBBox2D(line); 60{; 61 line.TLine::Copy(*this);; 62}; 63 ; 64////////////////////////////////////////////////////////////////////////////////; 65/// Assignment operator; 66 ; 67TLine &TLine::operator=(const TLine &src); 68{; 69 src.TLine::Copy(*this);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8cxx_source.html:90,Load,Loading,90,doc/master/TLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLine_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TMarker.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMarker.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/05/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13#include <iostream>; 14 ; 15#include ""TROOT.h""; 16#include ""TBuffer.h""; 17#include ""TVirtualPad.h""; 18#include ""TMarker.h""; 19#include ""TVirtualX.h""; 20#include ""TMath.h""; 21#include ""TPoint.h""; 22#include ""TText.h""; 23#include ""snprintf.h""; 24 ; 25ClassImp(TMarker);; 26 ; 27 ; 28/** \class TMarker; 29\ingroup BasicGraphics; 30 ; 31Manages Markers.; 32 ; 33Use the TMarker constructor to create a marker.; 34 ; 35~~~ {.cpp}; 36 TMarker(Double_t x,Double_t y,Int_t marker); 37~~~; 38 ; 39The parameters `x` and `y` are the marker coordinates and `marker` is the marker type.; 40 ; 41Use the TPolyMarker to create an array on N points in a 2D space.; 42At each point `x[i]`, `y[i]` a marker is drawn.; 43 ; 44Use the TAttMarker class to change the attributes color, style and size of a marker.; 45 ; 46_**Example**_; 47 ; 48- Use the `TAttMarker::SetMarkerSize(size)` method to set the `size` of a marker.; 49 ; 50*/; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Marker default constructor.; 54 ; 55TMarker::TMarker(): TObject(), TAttMarker(); 56{; 57 fX = 0;; 58 fY = 0;; 59}; 60 ; 61////////////////////////////////////////////////////////////////////////////////; 62/// Marker normal constructor.; 63 ; 64TMarker::TMarker(Double_t x, Double_t y, Int_t marker); 65 :TObject(), TAttMarker(); 66{; 67 fX = x;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMarker_8cxx_source.html:92,Load,Loading,92,doc/master/TMarker_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMarker_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TMathText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMathText.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id: TMathText.cxx $; 2// Author: Yue Shi Lai 16/10/12; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include <ft2build.h>; 15#include FT_FREETYPE_H; 16#include FT_GLYPH_H; 17#include ""TTF.h""; 18#include ""TMathText.h""; 19#include ""TMath.h""; 20#include ""TVirtualPad.h""; 21#include ""TVirtualPS.h""; 22#include ""TVirtualX.h""; 23#include ""TText.h""; 24 ; 25#include ""../../../graf2d/mathtext/inc/mathtext.h""; 26#include ""../../../graf2d/mathtext/inc/mathrender.h""; 27 ; 28/** \class TMathText; 29\ingroup BasicGraphics; 30 ; 31To draw TeX Mathematical Formula; 32 ; 33TMathText's purpose is to write mathematical equations, exactly as TeX would; 34do it. The syntax is the same as the TeX's one.; 35 ; 36The following example demonstrate how to use TMathText:; 37 ; 38Begin_Macro(source); 39../../../tutorials/graphics/tmathtext.C; 40End_Macro; 41 ; 42The list of all available symbols is given in the following example:; 43 ; 44Begin_Macro; 45../../../tutorials/graphics/tmathtext2.C; 46End_Macro; 47 ; 48#### Limitation:; 49TMathText rendering is not implemented for the PDF output.; 50PostScript output should be used instead.; 51*/; 52 ; 53const Double_t kPI = TMath::Pi();; 54 ; 55class TMathTextRenderer : public TText, public TAttFill,; 56 public mathtext::math_text_renderer_t {; 57private:; 58 TMathText *_parent;; 59 float _font_size;; 60 float _x0;; 61 float _y0;; 62 float _angle_degree;; 63 float _pad_pixel_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMathText_8cxx_source.html:94,Load,Loading,94,doc/master/TMathText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMathText_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TPaveLabel.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveLabel.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 17/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include ""TStyle.h""; 15#include ""TPaveLabel.h""; 16#include ""TLatex.h""; 17#include ""TVirtualPad.h""; 18 ; 19ClassImp(TPaveLabel);; 20 ; 21/** \class TPaveLabel; 22\ingroup BasicGraphics; 23 ; 24A Pave (see TPave) with a text centered in the Pave.; 25 ; 26\image html graf_pavelabel.png; 27*/; 28 ; 29////////////////////////////////////////////////////////////////////////////////; 30/// Pavelabel default constructor.; 31 ; 32TPaveLabel::TPaveLabel(): TPave(), TAttText(); 33{; 34}; 35 ; 36////////////////////////////////////////////////////////////////////////////////; 37/// Pavelabel normal constructor.; 38///; 39/// a PaveLabel is a Pave with a label centered in the Pave; 40/// The Pave is by default defined bith bordersize=5 and option =""br"".; 41/// The text size is automatically computed as a function of the pave size.; 42/// To remove the shadow or border of a TPaveLabel, use the function TPave::SetBorderSize; 43 ; 44TPaveLabel::TPaveLabel(Double_t x1, Double_t y1,Double_t x2, Double_t y2, const char *label, Option_t *option); 45 :TPave(x1,y1,x2,y2,3,option), TAttText(22,0,1,gStyle->GetTextFont(),0.99); 46{; 47 fLabel = label;; 48}; 49 ; 50////////////////////////////////////////////////////////////////////////////////; 51/// TPaveLabel default destructor.; 52 ; 53TPaveLabel::~TPaveLabel(); 54{; 55}; 56 ; 57/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveLabel_8cxx_source.html:95,Load,Loading,95,doc/master/TPaveLabel_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPaveLabel_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TPaveText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveText.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 20/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <cstdlib>; 14#include <cstdio>; 15#include <iostream>; 16#include <fstream>; 17 ; 18#include ""TBufferFile.h""; 19#include ""TROOT.h""; 20#include ""TStyle.h""; 21#include ""TPaveText.h""; 22#include ""TPaveLabel.h""; 23#include ""TVirtualPad.h""; 24#include ""TMath.h""; 25#include ""TLatex.h""; 26#include ""TError.h""; 27#include ""TColor.h""; 28#include ""TLine.h""; 29 ; 30ClassImp(TPaveText);; 31 ; 32 ; 33/** \class TPaveText; 34\ingroup BasicGraphics; 35 ; 36A Pave (see TPave) with text, lines or/and boxes inside.; 37 ; 38Line (and boxes) are positioned in the pave using coordinates relative to; 39the pave (%).; 40 ; 41The text lines are added in order using the AddText method. Also line separators; 42can be added, in order too, using the AddLine method.; 43 ; 44AddText returns a TText corresponding to the line added to the pave. This; 45return value can be used to modify the text attributes.; 46 ; 47Once the TPaveText is build the text of each line can be retrieved using; 48GetLine or GetLineWith as a TText wich is useful to modify the text attributes; 49of a line.; 50 ; 51Example:; 52Begin_Macro(source); 53../../../tutorials/graphics/pavetext.C; 54End_Macro; 55 ; 56GetListOfLines can also be used to retrieve all the lines in the TPaveText as; 57a TList:; 58 ; 59Begin_Macro(source); 60{; 61 TPaveText *t = new TPaveText(.05,.3,.95,.6);; 62 t-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPaveText_8cxx_source.html:94,Load,Loading,94,doc/master/TPaveText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPaveText_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TPavesText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPavesText.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 19/11/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TROOT.h""; 14#include ""TPavesText.h""; 15#include ""TVirtualPad.h""; 16#include ""TBufferFile.h""; 17#include ""TError.h""; 18 ; 19ClassImp(TPavesText);; 20 ; 21 ; 22/** \class TPavesText; 23\ingroup BasicGraphics; 24 ; 25A PaveText (see TPaveText) with several stacked paves.; 26 ; 27\image html graf_pavestext.png; 28*/; 29 ; 30////////////////////////////////////////////////////////////////////////////////; 31/// Pavestext default constructor.; 32 ; 33TPavesText::TPavesText(): TPaveText(); 34{; 35 fNpaves = 5;; 36}; 37 ; 38////////////////////////////////////////////////////////////////////////////////; 39/// Pavestext normal constructor.; 40///; 41/// The PavesText is by default defined both bordersize=1 and option =""br"".; 42/// - option = ""T"" Top frame; 43/// - option = ""B"" Bottom frame; 44/// - option = ""R"" Right frame; 45/// - option = ""L"" Left frame; 46/// - option = ""NDC"" x1,y1,x2,y2 are given in NDC; 47/// - option = ""ARC"" corners are rounded; 48/// To add a shadow to the TPavesText, use the function TPave::SetBorderSize; 49 ; 50TPavesText::TPavesText(Double_t x1, Double_t y1,Double_t x2, Double_t y2, Int_t npaves,Option_t *option); 51 :TPaveText(x1,y1,x2,y2,option); 52{; 53 fNpaves = npaves;; 54 SetBorderSize(1);; 55}; 56 ; 57////////////////////////////////////////////////////////////////////////////////; 58/// Paveste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPavesText_8cxx_source.html:95,Load,Loading,95,doc/master/TPavesText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPavesText_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TPolyLine.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPolyLine.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include <vector>; 14#include ""TROOT.h""; 15#include ""TBuffer.h""; 16#include ""TMath.h""; 17#include ""TVirtualPad.h""; 18#include ""TVirtualX.h""; 19#include ""TPolyLine.h""; 20 ; 21ClassImp(TPolyLine);; 22 ; 23/** \class TPolyLine; 24\ingroup BasicGraphics; 25 ; 26Defined by an array on N points in a 2-D space.; 27 ; 28One can draw the contour of the polyline or/and its fill area.; 29Example:; 30Begin_Macro(source); 31{; 32 Double_t x[5] = {.2,.7,.6,.25,.2};; 33 Double_t y[5] = {.5,.1,.9,.7,.5};; 34 TPolyLine *pline = new TPolyLine(5,x,y);; 35 pline->SetFillColor(38);; 36 pline->SetLineColor(2);; 37 pline->SetLineWidth(4);; 38 pline->Draw(""f"");; 39 pline->Draw();; 40}; 41End_Macro; 42*/; 43 ; 44////////////////////////////////////////////////////////////////////////////////; 45/// PolyLine default constructor.; 46 ; 47TPolyLine::TPolyLine(); 48{; 49}; 50 ; 51////////////////////////////////////////////////////////////////////////////////; 52/// PolyLine normal constructor without initialisation.; 53/// Allocates n points.; 54 ; 55TPolyLine::TPolyLine(Int_t n, Option_t *option); 56 :TObject(), TAttLine(), TAttFill(); 57{; 58 fOption = option;; 59 if (n <= 0); 60 return;; 61 ; 62 fN = n;; 63 fX = new Double_t[fN];; 64 fY = new Double_t[fN];; 65}; 66 ; 67////////////////////////////////////////////////////////////////////////////////; 68/// P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPolyLine_8cxx_source.html:94,Load,Loading,94,doc/master/TPolyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPolyLine_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/graf/src/TText.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TText.cxx. Go to the documentation of this file. 1// @(#)root/graf:$Id$; 2// Author: Nicolas Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TText.h""; 13 ; 14#include ""TROOT.h""; 15#include ""TBuffer.h""; 16#include ""TVirtualPad.h""; 17#include <ft2build.h>; 18#include FT_FREETYPE_H; 19#include FT_GLYPH_H; 20#include ""TTF.h""; 21#include ""TVirtualX.h""; 22#include ""TMath.h""; 23#include ""TPoint.h""; 24 ; 25#include <cwchar>; 26#include <cstdlib>; 27#include <iostream>; 28 ; 29ClassImp(TText);; 30 ; 31 ; 32/** \class TText; 33\ingroup BasicGraphics; 34 ; 35Base class for several text objects.; 36 ; 37See TAttText for a list of text attributes or fonts,; 38and also for a discussion on text speed and font quality.; 39 ; 40By default, the text is drawn in the pad coordinates system.; 41One can draw in NDC coordinates [0,1] if the function SetNDC; 42is called for a TText object.; 43 ; 44Example:; 45Begin_Macro(source); 46{; 47 TText *t = new TText(.5,.5,""Hello World !"");; 48 t->SetTextAlign(22);; 49 t->SetTextColor(kRed+2);; 50 t->SetTextFont(43);; 51 t->SetTextSize(40);; 52 t->SetTextAngle(45);; 53 t->Draw();; 54}; 55End_Macro; 56*/; 57 ; 58////////////////////////////////////////////////////////////////////////////////; 59/// Text normal constructor.; 60 ; 61TText::TText(Double_t x, Double_t y, const char *text) : TNamed("""",text), TAttText(), fWcsTitle(nullptr); 62{; 63 fX = x;; 64 fY = y;; 65}; 66 ; 67////////////////////////////////////////////////////////////////////////////////; 68/// Text norma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TText_8cxx_source.html:90,Load,Loading,90,doc/master/TText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TText_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/inc/TGWin32ProxyDefs.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Enumerations |; Variables ; TGWin32ProxyDefs.h File Reference. #include ""Rtypes.h"". Include dependency graph for TGWin32ProxyDefs.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define _NAME4_(name1, name2, name3, name4)   _NAME3_(name1,name2,name3)name4;  ; #define DEBUG_PROFILE_PROXY_START(method);  ; #define DEBUG_PROFILE_PROXY_STOP(method);  ; #define RETURN_METHOD_ARG0(klass, type, method);  ; #define RETURN_METHOD_ARG0_CONST(klass, type, method);  ; #define RETURN_METHOD_ARG1(klass, type, method, type1, par1);  ; #define RETURN_METHOD_ARG10(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5, type6, par6, type7, par7, type8, par8, type9, par9, type10, par10);  ; #define RETURN_METHOD_ARG11(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5, type6, par6, type7, par7, type8, par8, type9, par9, type10, par10, type11, par11);  ; #define RETURN_METHOD_ARG2(klass, type, method, type1, par1, type2, par2);  ; #define RETURN_METHOD_ARG3(klass, type, method, type1, par1, type2, par2, type3, par3);  ; #define RETURN_METHOD_ARG4(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4);  ; #define RETURN_METHOD_ARG5(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5);  ; #define RETURN_METHOD_ARG6(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5, type6, par6);  ; #define RETURN_METHOD_ARG7(klass, type, method, type1, par1, type2, par2, type3, par3, type4, par4, type5, par5, type6, par6, type7, par7);  ; #define RETURN_METHOD_ARG8(klass, type, method, type1, par1, type2,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32ProxyDefs_8h.html:106,Load,Loading,106,doc/master/TGWin32ProxyDefs_8h.html,https://root.cern,https://root.cern/doc/master/TGWin32ProxyDefs_8h.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/inc/TGWin32ProxyDefs.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGWin32ProxyDefs.h. Go to the documentation of this file. 1// @(#)root/win32gdk:$Id$; 2// Author: Valeriy Onuchin 08/08/2003; 3 ; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_TGWin32ProxyDefs; 14#define ROOT_TGWin32ProxyDefs; 15 ; 16#include ""Rtypes.h"" // CINT headers; 17 ; 18 ; 19#define _NAME4_(name1,name2,name3,name4) _NAME3_(name1,name2,name3)name4; 20 ; 21 ; 22 ; 23///////////////////// debug & profile interface /////////////////////////////; 24//; 25// - recompile with gDebugProxy = 1; 26//; 27// root [0] gDebug = -123 // start profiling; 28//or; 29// root [0] gDebug = -1234 // start profiling and debugging(call trace); 30//; 31// root [1] .x macro.C // profile macro.C; 32// root [2] gDebug = 0 // stop profiling; 33// root [3] .x macro.C // print results; 34//; 35 ; 36static int gDebugProxy = 0; // if kTRUE - use debug & profile interface; 37 ; 38enum { kDebugProfile = -123, kDebugTrace = -1234 };; 39 ; 40static unsigned int total = 0;; 41static double total_time = 0;; 42 ; 43#define DEBUG_PROFILE_PROXY_START(method)\; 44 static int i = 0;\; 45 static double t = 0;\; 46 double start = 0;\; 47 int gDebugValue = 0;\; 48 int debug = 0;\; 49 if (gDebugProxy) {\; 50 gDebugValue = gDebug;\; 51 debug = (gDebugValue==kDebugProfile) || (gDebugValue==kDebugTrace);\; 52 if (debug) {\; 53 start = GetMilliSeconds();\; 54 } else {\; 55 if (total) {\; 56 printf("" method name hits time/hits(ms) time(ms) | Total = %d hits %6.2f ms\n"",total,total_time );\; 57 printf(""----------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32ProxyDefs_8h_source.html:103,Load,Loading,103,doc/master/TGWin32ProxyDefs_8h_source.html,https://root.cern,https://root.cern/doc/master/TGWin32ProxyDefs_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/src/TGWin32VirtualGLProxy.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; TGWin32VirtualGLProxy.cxx File Reference. #include ""TGWin32ProxyDefs.h""; #include ""TGWin32VirtualGLProxy.h""; #include ""TGWin32.h""; #include ""TROOT.h""; #include ""TList.h"". Include dependency graph for TGWin32VirtualGLProxy.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; winID h RETURN_METHOD_ARG1 (GLManager, Bool_t, MakeCurrent, Int_t, devInd) VOID_METHOD_ARG1(GLManager;  ; winID RETURN_METHOD_ARG1 (GLManager, Int_t, CreateGLContext, Int_t, winInd) RETURN_METHOD_ARG5(GLManager;  ; winID h RETURN_METHOD_ARG1 (GLManager, Int_t, GetVirtualXInd, Int_t, pixInd) VOID_METHOD_ARG2(GLManager;  ; winID h TVirtualViewer3D TVirtualGLPainter RETURN_METHOD_ARG3 (GLManager, Bool_t, PlotSelected, TVirtualGLPainter *, plot, Int_t, x, Int_t, y) RETURN_METHOD_ARG3(GLManager;  ; winID h TVirtualViewer3D TVirtualGLPainter char TVirtualGLPainter y RETURN_METHOD_ARG4 (GLManager, Bool_t, SelectManip, TVirtualGLManip *, manip, const TGLCamera *, camera, const TGLRect *, rect, const TGLBoundingBox *, box) RETURN_METHOD_ARG1(GLManager;  ; winID h RETURN_METHOD_ARG5 (GLManager, Bool_t, ResizeOffScreenDevice, Int_t, pixInd, Int_t, x, Int_t, y, UInt_t, w, UInt_t, h) VOID_METHOD_ARG1(GLManager;  ;  RETURN_PROXY_OBJECT (GLManager) RETURN_METHOD_ARG1(GLManager;  ; winID h TVirtualViewer3D VOID_METHOD_ARG1 (GLManager, PaintSingleObject, TVirtualGLPainter *, p, 1) VOID_METHOD_ARG3(GLManager;  ; winID h VOID_METHOD_ARG1 (GLManager, ReadGLBuffer, Int_t, devInd, 1) VOID_METHOD_ARG1(GLManager;  ; winID h VOID_METHOD_ARG2 (GLManager, ExtractViewport, Int_t, pixInd, Int_t *, vp, 1) VOID_METHOD_ARG1(GLManager;  . Variables; winID AttachOffScreenDevice;  ; winID Bool_t;  ; winID h DeleteGLContext;  ; winID h devInd;  ; winID h direct;  ; winID h Flush;  ; winID h TVirtualViewer3D TVir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualGLProxy_8cxx.html:113,Load,Loading,113,doc/master/TGWin32VirtualGLProxy_8cxx.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualGLProxy_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/src/TGWin32VirtualGLProxy.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGWin32VirtualGLProxy.cxx. Go to the documentation of this file. 1// @(#)root/win32gdk:$Id$; 2// Author: Valeriy Onuchin 05/08/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004,Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TGWin32ProxyDefs.h""; 13#include ""TGWin32VirtualGLProxy.h""; 14#include ""TGWin32.h""; 15#include ""TROOT.h""; 16#include ""TList.h""; 17 ; 18static TGLManager *gManager = 0;; 19 ; 20////////////////////////////////////////////////////////////////////////////////; 21 ; 22TGLManager *TGWin32GLManagerProxy::RealObject(); 23{; 24 if (!gManager) {; 25 gManager = (TGLManager *)gROOT->GetListOfSpecials()->FindObject(""gGLManager"");; 26 }; 27 ; 28 return gManager;; 29}; 30 ; 31TGWin32GLManagerProxy::TGWin32GLManagerProxy(); 32{; 33 fIsVirtualX = kFALSE;; 34}; 35 ; 36RETURN_PROXY_OBJECT(GLManager); 37RETURN_METHOD_ARG1(GLManager, Int_t, InitGLWindow, Window_t, winID); 38RETURN_METHOD_ARG1(GLManager, Int_t, CreateGLContext, Int_t, winInd); 39RETURN_METHOD_ARG5(GLManager, Bool_t, AttachOffScreenDevice, Int_t, winInd, Int_t, x, Int_t, y, UInt_t, w, UInt_t, h); 40RETURN_METHOD_ARG5(GLManager, Bool_t, ResizeOffScreenDevice, Int_t, pixInd, Int_t, x, Int_t, y, UInt_t, w, UInt_t, h); 41VOID_METHOD_ARG1(GLManager, SelectOffScreenDevice, Int_t, pixInd, 1); 42RETURN_METHOD_ARG1(GLManager, Int_t, GetVirtualXInd, Int_t, pixInd); 43VOID_METHOD_ARG2(GLManager, MarkForDirectCopy, Int_t, pixInd, Bool_t, direct, 1); 44RETURN_METHOD_ARG1(GLManager, Bool_t, MakeCurrent, Int_t, devInd); 45VOID_METHOD_ARG1(GLManager, Flush, Int_t, devInd, 1); 46VO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualGLProxy_8cxx_source.html:110,Load,Loading,110,doc/master/TGWin32VirtualGLProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualGLProxy_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/src/TGWin32VirtualXProxy.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; TGWin32VirtualXProxy.cxx File Reference. #include ""TGWin32ProxyDefs.h""; #include ""TGWin32VirtualXProxy.h""; #include ""TGWin32.h""; #include ""TList.h"". Include dependency graph for TGWin32VirtualXProxy.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner RETURN_METHOD_ARG0 (VirtualX, Region_t, CreateRegion) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t RETURN_METHOD_ARG0 (VirtualX, Window_t, GetInputFocus) RETURN_METHOD_ARG0(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap RETURN_METHOD_ARG0_CONST (VirtualX, Bool_t, HasTTFonts) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle RETURN_METHOD_ARG0_CONST (VirtualX, Bool_t, IsTransparent) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude RETURN_METHO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx.html:112,Load,Loading,112,doc/master/TGWin32VirtualXProxy_8cxx.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/src/TGWin32VirtualXProxy.cxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; TGWin32VirtualXProxy.cxx File Reference. #include ""TGWin32ProxyDefs.h""; #include ""TGWin32VirtualXProxy.h""; #include ""TGWin32.h""; #include ""TList.h"". Include dependency graph for TGWin32VirtualXProxy.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner RETURN_METHOD_ARG0 (VirtualX, Region_t, CreateRegion) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t RETURN_METHOD_ARG0 (VirtualX, Window_t, GetInputFocus) RETURN_METHOD_ARG0(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap RETURN_METHOD_ARG0_CONST (VirtualX, Bool_t, HasTTFonts) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle RETURN_METHOD_ARG0_CONST (VirtualX, Bool_t, IsTransparent) RETURN_METHOD_ARG0_CONST(VirtualX;  ; Option_t Option_t TPoint TPoint const char GetTextMagnitude RETURN_METHOD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TGWin32VirtualXProxy_8cxx.html:111,Load,Loading,111,doc/v632/TGWin32VirtualXProxy_8cxx.html,https://root.cern,https://root.cern/doc/v632/TGWin32VirtualXProxy_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/src/TGWin32VirtualXProxy.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGWin32VirtualXProxy.cxx. Go to the documentation of this file. 1// @(#)root/win32gdk:$Id$; 2// Author: Valeriy Onuchin 08/08/2003; 3 ; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13 ; 14//////////////////////////////////////////////////////////////////////////; 15// //; 16// TGWin32Proxy //; 17// //; 18// This class is the proxy interface to the Win32 graphics system. //; 19// //; 20//////////////////////////////////////////////////////////////////////////; 21 ; 22#include ""TGWin32ProxyDefs.h""; 23#include ""TGWin32VirtualXProxy.h""; 24#include ""TGWin32.h""; 25#include ""TList.h""; 26 ; 27TVirtualX *TGWin32VirtualXProxy::fgRealObject = 0;; 28 ; 29////////////////////////////////////////////////////////////////////////////////; 30////////////////////////////////////////////////////////////////////////////////; 31 ; 32TVirtualX *TGWin32VirtualXProxy::RealObject(); 33{; 34 return fgRealObject;; 35}; 36 ; 37RETURN_PROXY_OBJECT(VirtualX); 38VOID_METHOD_ARG0(VirtualX,SetFillAttributes,1); 39VOID_METHOD_ARG0(VirtualX,SetMarkerAttributes,1); 40VOID_METHOD_ARG0(VirtualX,SetLineAttributes,1); 41VOID_METHOD_ARG0(VirtualX,SetTextAttributes,1); 42VOID_METHOD_ARG1(VirtualX,ResetAttMarker,Option_t*,toption,1); 43VOID_METHOD_ARG1(VirtualX,ResetAttFill,Option_t*,option,1); 44VOID_METHOD_ARG1(VirtualX,ResetAttLine,Option_t*,option,1); 45VOID_METHOD_ARG1(VirtualX,ResetAttText,Option_t*,option,1); 46VOID_METHOD_ARG1(VirtualX,SetFillStyle,Style_t,style,1); 47VOID_METHOD_ARG1(VirtualX,SetTextAngle,Float_t,tangle,1); 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx_source.html:109,Load,Loading,109,doc/master/TGWin32VirtualXProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/src/gifencode.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Typedefs |; Functions |; Variables ; gifencode.c File Reference. #include <stdio.h>; #include <stdlib.h>; #include <string.h>. Include dependency graph for gifencode.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ARGS(alist)   ();  ; #define BITS   12 /* largest code size */;  ; #define HSIZE   5003 /* hash table size */;  ; #define put_byte(A)   (*put_b)((byte)(A)); Nbyte++;  ; #define SHIFT   4 /* shift for hashing */;  ; #define THELIMIT   4096 /* NEVER generate this */;  . Typedefs; typedef unsigned char byte;  . Functions; static void char_flush ();  ; static void char_init ();  ; static void char_out ();  ; static void char_out (int c);  ; long GIFencode (int Width, int Height, int Ncol, R, G, B, ScLine, void *get_scline, pb);  ; static void output ();  ; static void output (int code);  ; static void put_short ();  ; static void put_short (int word);  . Variables; static int a_count;  ; static char accum [256];  ; static int BitsPixel;  ; static int ClearCode;  ; static int CodeTab [5003];  ; static unsigned long cur_accum;  ; static int cur_bits;  ; static int CurCodeSize;  ; static int CurMaxCode;  ; static int EOFCode;  ; static int FreeCode;  ; static long HashTab [5003];  ; static int IniCodeSize;  ; static unsigned long masks [];  ; static long Nbyte;  ; static void(* put_b )();  . Macro Definition Documentation. ◆ ARGS. #define ARGS; (;  ; alist);    (). Definition at line 10 of file gifencode.c. ◆ BITS. #define BITS   12 /* largest code size */. Definition at line 13 of file gifencode.c. ◆ HSIZE. #define HSIZE   5003 /* hash table size */. Definition at line 15 of file gifencode.c. ◆ put_byte. #define put_byte; (;  ; A);    (*put_b)((byte)(A)); Nbyte++. Definition at line 18 of file gifencode.c. ◆ SHIFT. #define SHIFT   4 /* shift for hashing */. Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/win32gdk_2src_2gifencode_8c.html:99,Load,Loading,99,doc/master/win32gdk_2src_2gifencode_8c.html,https://root.cern,https://root.cern/doc/master/win32gdk_2src_2gifencode_8c.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/win32gdk/src/gifencode.c File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Typedefs |; Functions |; Variables ; gifencode.c File Reference. #include <stdio.h>; #include <stdlib.h>; #include <string.h>. Include dependency graph for gifencode.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ARGS(alist)   ();  ; #define BITS   12 /* largest code size */;  ; #define HSIZE   5003 /* hash table size */;  ; #define put_byte(A)   (*put_b)((byte)(A)); Nbyte++;  ; #define SHIFT   4 /* shift for hashing */;  ; #define THELIMIT   4096 /* NEVER generate this */;  . Typedefs; typedef unsigned char byte;  . Functions; static void char_flush ();  ; static void char_init ();  ; static void char_out ();  ; static void char_out (int c);  ; long GIFencode (int Width, int Height, int Ncol, R, G, B, ScLine, void *get_scline, pb);  ; static void output ();  ; static void output (int code);  ; static void put_short ();  ; static void put_short (int word);  . Variables; static int a_count;  ; static char accum [256];  ; static int BitsPixel;  ; static int ClearCode;  ; static int CodeTab [5003];  ; static unsigned long cur_accum;  ; static int cur_bits;  ; static int CurCodeSize;  ; static int CurMaxCode;  ; static int EOFCode;  ; static int FreeCode;  ; static long HashTab [5003];  ; static int IniCodeSize;  ; static unsigned long masks [];  ; static long Nbyte;  ; static void(* put_b )();  . Macro Definition Documentation. ◆ ARGS. #define ARGS; (;  ; alist);    (). Definition at line 10 of file gifencode.c. ◆ BITS. #define BITS   12 /* largest code size */. Definition at line 13 of file gifencode.c. ◆ HSIZE. #define HSIZE   5003 /* hash table size */. Definition at line 15 of file gifencode.c. ◆ put_byte. #define put_byte; (;  ; A);    (*put_b)((byte)(A)); Nbyte++. Definition at line 18 of file gifencode.c. ◆ SHIFT. #define SHIFT   4 /* shift for hashing */. Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/win32gdk_2src_2gifencode_8c.html:98,Load,Loading,98,doc/v632/win32gdk_2src_2gifencode_8c.html,https://root.cern,https://root.cern/doc/v632/win32gdk_2src_2gifencode_8c.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/x11/src/TGX11.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions |; Variables ; TGX11.cxx File Reference. #include ""TROOT.h""; #include ""TColor.h""; #include ""TGX11.h""; #include ""TPoint.h""; #include ""TMath.h""; #include ""TStorage.h""; #include ""TStyle.h""; #include ""TExMap.h""; #include ""TEnv.h""; #include ""TString.h""; #include ""TObjString.h""; #include ""TObjArray.h""; #include ""RStipples.h""; #include ""strlcpy.h""; #include <X11/Xlib.h>; #include <X11/Xutil.h>; #include <X11/Xatom.h>; #include <X11/cursorfont.h>; #include <X11/keysym.h>; #include <X11/xpm.h>; #include <cstdio>; #include <cstring>; #include <cstdlib>; #include <cctype>; #include <unistd.h>. Include dependency graph for TGX11.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  RVisual;  ; struct  RXColor;  ; struct  RXGCValues;  ; struct  RXImage;  ; struct  RXPoint;  ; struct  RXVisualInfo;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; static Int_t DummyX11ErrorHandler (Display *, XErrorEvent *);  Dummy error handler for X11. Used by FindUsableVisual(). ;  ; static void GetPixel (int y, int width, Byte_t *scline);  Get pixels in line y and put in array scline. ;  ; int GIFdecode (Byte_t *gifArr, Byte_t *pixArr, int *Width, int *Height, int *Ncols, Byte_t *R, Byte_t *G, Byte_t *B);  ; long GIFencode (int Width, int Height, Int_t Ncol, Byte_t R[], Byte_t G[], Byte_t B[], Byte_t ScLine[], void(*get_scline)(int, int, Byte_t *), void(*pb)(Byte_t));  ; int GIFinfo (Byte_t *gifArr, int *Width, int *Height, int *Ncols);  ; int GIFquantize (UInt_t width, UInt_t height, Int_t *ncol, Byte_t *red, Byte_t *green, Byte_t *blue, Byte_t *outputBuf, Byte_t *outputCmap);  ; static void PutByte (Byte_t b);  Put byte b i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGX11_8cxx.html:92,Load,Loading,92,doc/master/TGX11_8cxx.html,https://root.cern,https://root.cern/doc/master/TGX11_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/x11/src/TGX11.cxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions |; Variables ; TGX11.cxx File Reference. #include ""TROOT.h""; #include ""TColor.h""; #include ""TGX11.h""; #include ""TPoint.h""; #include ""TMath.h""; #include ""TStorage.h""; #include ""TStyle.h""; #include ""TExMap.h""; #include ""TEnv.h""; #include ""TString.h""; #include ""TObjString.h""; #include ""TObjArray.h""; #include ""RStipples.h""; #include ""strlcpy.h""; #include <X11/Xlib.h>; #include <X11/Xutil.h>; #include <X11/Xatom.h>; #include <X11/cursorfont.h>; #include <X11/keysym.h>; #include <X11/xpm.h>; #include <cstdio>; #include <cstring>; #include <cstdlib>; #include <cctype>; #include <unistd.h>. Include dependency graph for TGX11.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  RVisual;  ; struct  RXColor;  ; struct  RXGCValues;  ; struct  RXImage;  ; struct  RXPoint;  ; struct  RXVisualInfo;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; static Int_t DummyX11ErrorHandler (Display *, XErrorEvent *);  Dummy error handler for X11. Used by FindUsableVisual(). ;  ; static void GetPixel (int y, int width, Byte_t *scline);  Get pixels in line y and put in array scline. ;  ; int GIFdecode (Byte_t *gifArr, Byte_t *pixArr, int *Width, int *Height, int *Ncols, Byte_t *R, Byte_t *G, Byte_t *B);  ; long GIFencode (int Width, int Height, Int_t Ncol, Byte_t R[], Byte_t G[], Byte_t B[], Byte_t ScLine[], void(*get_scline)(int, int, Byte_t *), void(*pb)(Byte_t));  ; int GIFinfo (Byte_t *gifArr, int *Width, int *Height, int *Ncols);  ; int GIFquantize (UInt_t width, UInt_t height, Int_t *ncol, Byte_t *red, Byte_t *green, Byte_t *blue, Byte_t *outputBuf, Byte_t *outputCmap);  ; static void PutByte (Byte_t b);  Put byte b in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TGX11_8cxx.html:91,Load,Loading,91,doc/v632/TGX11_8cxx.html,https://root.cern,https://root.cern/doc/v632/TGX11_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: graf2d/x11/src/TGX11.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGX11.cxx. Go to the documentation of this file. 1// @(#)root/x11:$Id$; 2// Author: Rene Brun, Olivier Couet, Fons Rademakers 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/// \defgroup x11 X11 backend; 13/// \brief Interface to X11 graphics.; 14/// \ingroup GraphicsBackends; 15 ; 16/** \class TGX11; 17\ingroup x11; 18This class is the basic interface to the X11 (Xlib) graphics system.; 19It is an implementation of the abstract TVirtualX class.; 20 ; 21This class gives access to basic X11 graphics, pixmap, text and font handling; 22routines.; 23 ; 24The companion class for Win32 is TGWin32.; 25 ; 26The file G11Gui.cxx contains the implementation of the GUI methods of the; 27TGX11 class. Most of the methods are used by the machine independent; 28GUI classes (libGUI.so).; 29 ; 30This code was initially developed in the context of HIGZ and PAW; 31by Olivier Couet (package X11INT).; 32*/; 33 ; 34#include ""TROOT.h""; 35#include ""TColor.h""; 36#include ""TGX11.h""; 37#include ""TPoint.h""; 38#include ""TMath.h""; 39#include ""TStorage.h""; 40#include ""TStyle.h""; 41#include ""TExMap.h""; 42#include ""TEnv.h""; 43#include ""TString.h""; 44#include ""TObjString.h""; 45#include ""TObjArray.h""; 46#include ""RStipples.h""; 47#include ""strlcpy.h""; 48 ; 49#include <X11/Xlib.h>; 50#include <X11/Xutil.h>; 51#include <X11/Xatom.h>; 52#include <X11/cursorfont.h>; 53#include <X11/keysym.h>; 54#include <X11/xpm.h>; 55 ; 56#include <cstdio>; 57#include <cstring>; 58#include <cstdlib>; 59#include <cctype>; 60#include <unistd.h>; 61#ifdef R__AIX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGX11_8cxx_source.html:89,Load,Loading,89,doc/master/TGX11_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGX11_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf3d/eve7/glu/mesh.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Functions ; mesh.c File Reference. #include ""gluos.h""; #include <stddef.h>; #include <assert.h>; #include ""mesh.h""; #include ""memalloc.h"". Include dependency graph for mesh.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define FALSE   0;  ; #define TRUE   1;  . Functions; GLUhalfEdge * __gl_meshAddEdgeVertex (GLUhalfEdge *eOrg);  ; void __gl_meshCheckMesh (GLUmesh *mesh);  ; GLUhalfEdge * __gl_meshConnect (GLUhalfEdge *eOrg, GLUhalfEdge *eDst);  ; int __gl_meshDelete (GLUhalfEdge *eDel);  ; void __gl_meshDeleteMesh (GLUmesh *mesh);  ; GLUhalfEdge * __gl_meshMakeEdge (GLUmesh *mesh);  ; GLUmesh * __gl_meshNewMesh (void);  ; int __gl_meshSplice (GLUhalfEdge *eOrg, GLUhalfEdge *eDst);  ; GLUhalfEdge * __gl_meshSplitEdge (GLUhalfEdge *eOrg);  ; GLUmesh * __gl_meshUnion (GLUmesh *mesh1, GLUmesh *mesh2);  ; void __gl_meshZapFace (GLUface *fZap);  ; static GLUface * allocFace ();  ; static GLUvertex * allocVertex ();  ; static void KillEdge (GLUhalfEdge *eDel);  ; static void KillFace (GLUface *fDel, GLUface *newLface);  ; static void KillVertex (GLUvertex *vDel, GLUvertex *newOrg);  ; static GLUhalfEdge * MakeEdge (GLUhalfEdge *eNext);  ; static void MakeFace (GLUface *newFace, GLUhalfEdge *eOrig, GLUface *fNext);  ; static void MakeVertex (GLUvertex *newVertex, GLUhalfEdge *eOrig, GLUvertex *vNext);  ; static void Splice (GLUhalfEdge *a, GLUhalfEdge *b);  . Macro Definition Documentation. ◆ FALSE. #define FALSE   0. Definition at line 45 of file mesh.c. ◆ TRUE. #define TRUE   1. Definition at line 42 of file mesh.c. Function Documentation. ◆ __gl_meshAddEdgeVertex(). GLUhalfEdge * __gl_meshAddEdgeVertex ; (; GLUhalfEdge * ; eOrg). Definition at line 441 of file mesh.c. ◆ __gl_meshCheckMesh(). void __gl_meshCheckMesh ; (; GLUmesh * ; mesh). Definition at line 737 of file mesh.c. ◆ __gl_m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mesh_8c.html:90,Load,Loading,90,doc/master/mesh_8c.html,https://root.cern,https://root.cern/doc/master/mesh_8c.html,1,['Load'],['Loading']
Performance,". ROOT: graf3d/eve7/glu/mesh.c Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. mesh.c. Go to the documentation of this file. 1/*; 2 * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008); 3 * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.; 4 *; 5 * Permission is hereby granted, free of charge, to any person obtaining a; 6 * copy of this software and associated documentation files (the ""Software""),; 7 * to deal in the Software without restriction, including without limitation; 8 * the rights to use, copy, modify, merge, publish, distribute, sublicense,; 9 * and/or sell copies of the Software, and to permit persons to whom the; 10 * Software is furnished to do so, subject to the following conditions:; 11 *; 12 * The above copyright notice including the dates of first publication and; 13 * either this permission notice or a reference to; 14 * http://oss.sgi.com/projects/FreeB/; 15 * shall be included in all copies or substantial portions of the Software.; 16 *; 17 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; 18 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; 19 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; 20 * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,; 21 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF; 22 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; 23 * SOFTWARE.; 24 *; 25 * Except as contained in this notice, the name of Silicon Graphics, Inc.; 26 * shall not be used in advertising or otherwise to promote the sale, use or; 27 * other dealings in this Software without prior written authorization from; 28 * Silicon Graphics, Inc.; 29 */; 30/*; 31** Author: Eric Veach, July 1994.; 32**; 33*/; 34 ; 35#include ""gluos.h""; 36#include <stddef.h>; 37#include <assert.h>; 38#include ""mesh.h""; 39#include ""memalloc.h""; 40 ; 41#ifn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mesh_8c_source.html:87,Load,Loading,87,doc/master/mesh_8c_source.html,https://root.cern,https://root.cern/doc/master/mesh_8c_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf3d/eve7/glu/normal.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros |; Functions ; normal.c File Reference. #include ""gluos.h""; #include ""mesh.h""; #include ""tess.h""; #include ""normal.h""; #include <math.h>; #include <assert.h>. Include dependency graph for normal.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ABS(x)   ((x) < 0 ? -(x) : (x));  ; #define Dot(u, v)   (u[0]*v[0] + u[1]*v[1] + u[2]*v[2]);  ; #define FALSE   0;  ; #define S_UNIT_X   1.0;  ; #define S_UNIT_Y   0.0;  ; #define TRUE   1;  . Functions; void __gl_projectPolygon (GLUtesselator *tess);  ; static void CheckOrientation (GLUtesselator *tess);  ; static void ComputeNormal (GLUtesselator *tess, GLdouble norm[3]);  ; static int LongAxis (GLdouble v[3]);  . Macro Definition Documentation. ◆ ABS. #define ABS; (;  ; x);    ((x) < 0 ? -(x) : (x)). Definition at line 65 of file normal.c. ◆ Dot. #define Dot; (;  ; u, .  ; v . );    (u[0]*v[0] + u[1]*v[1] + u[2]*v[2]). Definition at line 49 of file normal.c. ◆ FALSE. #define FALSE   0. Definition at line 46 of file normal.c. ◆ S_UNIT_X. #define S_UNIT_X   1.0. Definition at line 190 of file normal.c. ◆ S_UNIT_Y. #define S_UNIT_Y   0.0. Definition at line 191 of file normal.c. ◆ TRUE. #define TRUE   1. Definition at line 43 of file normal.c. Function Documentation. ◆ __gl_projectPolygon(). void __gl_projectPolygon ; (; GLUtesselator * ; tess). Definition at line 198 of file normal.c. ◆ CheckOrientation(). static void CheckOrientation ; (; GLUtesselator * ; tess). static . Definition at line 141 of file normal.c. ◆ ComputeNormal(). static void ComputeNormal ; (; GLUtesselator * ; tess, . GLdouble ; norm[3] . ). static . Definition at line 76 of file normal.c. ◆ LongAxis(). static int LongAxis ; (; GLdouble ; v[3]). static . Definition at line 67 of file normal.c. graf3deve7glunormal.c. ROOT master - Reference Guide Generated on Tue Nov 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/normal_8c.html:92,Load,Loading,92,doc/master/normal_8c.html,https://root.cern,https://root.cern/doc/master/normal_8c.html,1,['Load'],['Loading']
Performance,". ROOT: graf3d/g3d/src/X3DBuffer.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; X3DBuffer.c File Reference. #include ""X3DBuffer.h""; #include ""../../x3d/src/X3DDefs.h""; #include <stdio.h>; #include <stdlib.h>. Include dependency graph for X3DBuffer.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; int AllocateX3DBuffer ();  ; void FillX3DBuffer (X3DBuffer *buff);  ; Size3D * gFuncSize3D ();  . Variables; Color * colors;  ; int currPoint = 0;  ; int currPoly = 0;  ; int currSeg = 0;  ; Size3D gVarSize3D;  ; point * points;  ; polygon * polys;  ; segment * segs;  . Function Documentation. ◆ AllocateX3DBuffer(). int AllocateX3DBuffer ; (; ). Definition at line 27 of file X3DBuffer.c. ◆ FillX3DBuffer(). void FillX3DBuffer ; (; X3DBuffer * ; buff). Definition at line 142 of file X3DBuffer.c. ◆ gFuncSize3D(). Size3D * gFuncSize3D ; (; ). Definition at line 10 of file X3DBuffer.c. Variable Documentation. ◆ colors. Color* colors. Definition at line 21 of file X3DBuffer.c. ◆ currPoint. int currPoint = 0. Definition at line 17 of file X3DBuffer.c. ◆ currPoly. int currPoly = 0. Definition at line 19 of file X3DBuffer.c. ◆ currSeg. int currSeg = 0. Definition at line 18 of file X3DBuffer.c. ◆ gVarSize3D. Size3D gVarSize3D. Definition at line 9 of file X3DBuffer.c. ◆ points. point* points. Definition at line 22 of file X3DBuffer.c. ◆ polys. polygon* polys. Definition at line 24 of file X3DBuffer.c. ◆ segs. segment* segs. Definition at line 23 of file X3DBuffer.c. graf3dg3dsrcX3DBuffer.c. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/X3DBuffer_8c.html:94,Load,Loading,94,doc/master/X3DBuffer_8c.html,https://root.cern,https://root.cern/doc/master/X3DBuffer_8c.html,1,['Load'],['Loading']
Performance,". ROOT: graf3d/g3d/src/X3DBuffer.c Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. X3DBuffer.c. Go to the documentation of this file. 1/* @(#)root/g3d:$Id$ */; 2/* Author: Nenad Buncic 13/12/95*/; 3 ; 4#include ""X3DBuffer.h""; 5#include ""../../x3d/src/X3DDefs.h""; 6#include <stdio.h>; 7#include <stdlib.h>; 8 ; 9Size3D gVarSize3D;; 10Size3D* gFuncSize3D(){ return &gVarSize3D; }; 11 ; 12#if defined (WIN32) || defined (__MWERKS__); 13 void FillX3DBuffer (X3DBuffer *buff) { }; 14 int AllocateX3DBuffer () { return 0;}; 15#else; 16 ; 17int currPoint = 0;; 18int currSeg = 0;; 19int currPoly = 0;; 20 ; 21Color *colors;; 22point *points;; 23segment *segs;; 24polygon *polys;; 25 ; 26 ; 27int AllocateX3DBuffer (); 28{; 29/******************************************************************************; 30 Allocate memory for points, colors, segments and polygons.; 31 Returns 1 if OK, otherwise 0.; 32******************************************************************************/; 33 ; 34 int ret = 1;; 35 ; 36 points = NULL;; 37 colors = NULL;; 38 segs = NULL;; 39 polys = NULL;; 40 ; 41 /*; 42 * Allocate memory for points; 43 */; 44 ; 45 if (gSize3D.numPoints) {; 46 points = (point *) calloc(gSize3D.numPoints, sizeof (point));; 47 if (!points) {; 48 puts (""Unable to allocate memory for points !"");; 49 ret = 0;; 50 }; 51 }; 52 else return (0); /* if there are no points, return back */; 53 ; 54 ; 55 ; 56 /*; 57 * Allocate memory for colors; 58 */; 59 ; 60 colors = (Color *) calloc(28+4, sizeof (Color));; 61 if(!colors) {; 62 puts (""Unable to allocate memory for colors !"");; 63 ret = 0;; 64 }; 65 else {; 66 colors[ 0].red = 92; colors[ 0].green = 92; colors[0].blue = 92;; 67 colors[ 1].red = 122; colors[ 1].green = 122; colors[1].blue = 122;; 68 colors[ 2].red = 184; colors[ 2].green = 184; colors[2].blue = 184;; 69 colors[ 3].red = 215; colors[ 3].green = 215; colors[3].blue = 215;; 70 colors[ 4].red = 138; colors[ 4].green = 15; colors[4].",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/X3DBuffer_8c_source.html:91,Load,Loading,91,doc/master/X3DBuffer_8c_source.html,https://root.cern,https://root.cern/doc/master/X3DBuffer_8c_source.html,1,['Load'],['Loading']
Performance,". ROOT: graf3d/gl/inc/TGLUtil.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Enumerations |; Functions |; Variables ; TGLUtil.h File Reference. #include ""Rtypes.h""; #include ""TError.h""; #include <vector>; #include <cmath>; #include <cassert>; #include <utility>. Include dependency graph for TGLUtil.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGLUtil::TColorLocker;  ; class  TGLUtil::TDrawQualityModifier;  ; class  TGLUtil::TDrawQualityScaler;  ; class  TGL2DArray< T >;  ; class  TGLCapabilityEnabler;  ; class  TGLCapabilitySwitch;  ; class  TGLColor;  Class encapsulating color information in preferred GL format - an array of four unsigned bytes. More...;  ; class  TGLColorSet;  Class encapsulating a set of colors used throughout standard rendering. More...;  ; class  TGLDisableGuard;  ; class  TGLEnableGuard;  ; class  TGLFloatHolder;  ; class  TGLLevelPalette;  ; class  TGLLine3;  3D space, fixed length, line class, with direction / length 'vector', passing through point 'vertex'. More...;  ; class  TGLMatrix;  16 component (4x4) transform matrix - column MAJOR as per GL. More...;  ; class  TGLPlane;  3D plane class - of format Ax + By + Cz + D = 0 More...;  ; class  TGLRect;  Viewport (pixel base) 2D rectangle class. More...;  ; class  TGLSelectionBuffer;  ; class  TGLUtil;  Wrapper class for various misc static functions - error checking, draw helpers etc. More...;  ; class  TGLVector3;  3 component (x/y/z) vector class. More...;  ; class  TGLVertex3;  3 component (x/y/z) vertex class. More...;  ; class  Rgl::TGuardBase;  ; class  Rgl::TOneArgGuard< Func, Arg >;  ; class  Rgl::TTwoArgsGuard< Func, Arg1, Arg2 >;  . Namespaces; namespace  Rgl;  . Typedefs; typedef ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGLUtil_8h.html:91,Load,Loading,91,doc/master/TGLUtil_8h.html,https://root.cern,https://root.cern/doc/master/TGLUtil_8h.html,1,['Load'],['Loading']
Performance,". ROOT: group Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; group Struct Reference. . Definition at line 50 of file TWinNTSystem.h. Public Attributes; int gr_gid;  ; char ** gr_mem;  ; char * gr_name;  ; char * gr_passwd;  . #include <TWinNTSystem.h>; Member Data Documentation. ◆ gr_gid. int group::gr_gid. Definition at line 53 of file TWinNTSystem.h. ◆ gr_mem. char** group::gr_mem. Definition at line 54 of file TWinNTSystem.h. ◆ gr_name. char* group::gr_name. Definition at line 51 of file TWinNTSystem.h. ◆ gr_passwd. char* group::gr_passwd. Definition at line 52 of file TWinNTSystem.h. Collaboration diagram for group:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; core/winnt/inc/TWinNTSystem.h. group. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:35 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structgroup.html:75,Load,Loading,75,doc/master/structgroup.html,https://root.cern,https://root.cern/doc/master/structgroup.html,1,['Load'],['Loading']
Performance,". ROOT: gui/browsable/src/RElement.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RElement.cxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#include <ROOT/Browsable/RElement.hxx>; 10 ; 11#include <ROOT/Browsable/RLevelIter.hxx>; 12#include <ROOT/Browsable/RItem.hxx>; 13#include <ROOT/RLogger.hxx>; 14 ; 15#include ""TBufferJSON.h""; 16 ; 17using namespace ROOT::Browsable;; 18using namespace std::string_literals;; 19 ; 20ROOT::Experimental::RLogChannel &ROOT::BrowsableLog(); 21{; 22 static ROOT::Experimental::RLogChannel sLog(""ROOT.Browsable"");; 23 return sLog;; 24}; 25 ; 26 ; 27/////////////////////////////////////////////////////////////////////; 28/// Returns child iterator (if any); 29 ; 30std::unique_ptr<RLevelIter> RElement::GetChildsIter(); 31{; 32 return nullptr;; 33}; 34 ; 35/////////////////////////////////////////////////////////////////////; 36/// Returns number of childs; 37/// By default creates iterator and iterates over all items; 38 ; 39int RElement::GetNumChilds(); 40{; 41 auto iter = GetChildsIter();; 42 if (!iter) return 0;; 43 int cnt = 0;; 44 while (iter->Next()) cnt++;; 45 return cnt;; 46}; 47 ; 48/////////////////////////////////////////////////////////////////////; 49/// Find item with specified name; 50/// Default implementation, should work for all; 51 ; 52RElement::EContentKind RElement::GetContentKind(const std::string &kind); 53{; 54 std::string lkind = kind;; 55 std::transform(lkind.begin(), lkind.end(), lkind.begin(), ::tolower);; 56 ; 57 if (lkind == ""text"") return kText;; 58 if ((lkind == ""image"") || (lkind == ""image64"")) re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RElement_8cxx_source.html:95,Load,Loading,95,doc/master/RElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RElement_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/browsable/src/RElement.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RElement.cxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#include <ROOT/Browsable/RElement.hxx>; 10 ; 11#include <ROOT/Browsable/RLevelIter.hxx>; 12#include <ROOT/Browsable/RItem.hxx>; 13#include <ROOT/RLogger.hxx>; 14 ; 15#include ""TBufferJSON.h""; 16 ; 17using namespace ROOT::Browsable;; 18using namespace std::string_literals;; 19 ; 20ROOT::Experimental::RLogChannel &ROOT::BrowsableLog(); 21{; 22 static ROOT::Experimental::RLogChannel sLog(""ROOT.Browsable"");; 23 return sLog;; 24}; 25 ; 26 ; 27/////////////////////////////////////////////////////////////////////; 28/// Returns child iterator (if any); 29 ; 30std::unique_ptr<RLevelIter> RElement::GetChildsIter(); 31{; 32 return nullptr;; 33}; 34 ; 35/////////////////////////////////////////////////////////////////////; 36/// Returns number of childs; 37/// By default creates iterator and iterates over all items; 38 ; 39int RElement::GetNumChilds(); 40{; 41 auto iter = GetChildsIter();; 42 if (!iter) return 0;; 43 int cnt = 0;; 44 while (iter->Next()) cnt++;; 45 return cnt;; 46}; 47 ; 48/////////////////////////////////////////////////////////////////////; 49/// Find item with specified name; 50/// Default implementation, should work for all; 51 ; 52RElement::EContentKind RElement::GetContentKind(const std::string &kind); 53{; 54 std::string lkind = kind;; 55 std::transform(lkind.begin(), lkind.end(), lkind.begin(), ::tolower);; 56 ; 57 if (lkind == ""text"") return kText;; 58 if ((lkind == ""image"") || (lkind == ""image64"")) ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RElement_8cxx_source.html:94,Load,Loading,94,doc/v632/RElement_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RElement_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/browserv7/inc/ROOT/RFileDialog.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RFileDialog.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <S.Linev@gsi.de>; 2// Date: 2019-10-31; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RFileDialog; 14#define ROOT7_RFileDialog; 15 ; 16#include <ROOT/RWebWindow.hxx>; 17#include <ROOT/RBrowserData.hxx>; 18 ; 19#include <vector>; 20#include <memory>; 21#include <stdint.h>; 22 ; 23namespace ROOT {; 24 ; 25namespace Details {; 26 class RWebWindowPlugin;; 27}; 28 ; 29/** \class ROOT::RFileDialog; 30\ingroup rbrowser; 31Initial message send to client to configure layout; 32*/; 33 ; 34/// function signature for file dialog call-backs; 35/// argument is selected file name; 36using RFileDialogCallback_t = std::function<void(const std::string &)>;; 37 ; 38 ; 39/** Web-based FileDialog */; 40 ; 41class RFileDialog {; 42 friend class Details::RWebWindowPlugin;; 43public:; 44 ; 45 enum EDialogTypes {; 46 kOpenFile,; 47 kSaveAs,; 48 kNewFile; 49 };; 50 ; 51protected:; 52 ; 53 EDialogTypes fKind{kOpenFile}; ///<! dialog kind OpenFile, SaveAs, NewFile; 54 std::string fTitle; ///<! title, when not specified default will be used; 55 RBrowserData fBrowsable; ///<! central browsing element; 56 bool fCanChangePath{true}; ///<! if working path can be changed via gui elements; 57 ; 58 std::shared_ptr<RWebWindow> fWebWindow; ///<! web window for file dialog; 59 ; 60 bool fDidSelect{false}; ///<! ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RFileDialog_8hxx_source.html:103,Load,Loading,103,doc/master/RFileDialog_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RFileDialog_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/browserv7/inc/ROOT/RFileDialog.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RFileDialog.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <S.Linev@gsi.de>; 2// Date: 2019-10-31; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RFileDialog; 14#define ROOT7_RFileDialog; 15 ; 16#include <ROOT/RWebWindow.hxx>; 17#include <ROOT/RBrowserData.hxx>; 18 ; 19#include <vector>; 20#include <memory>; 21#include <stdint.h>; 22 ; 23namespace ROOT {; 24 ; 25namespace Details {; 26 class RWebWindowPlugin;; 27}; 28 ; 29/** \class ROOT::RFileDialog; 30\ingroup rbrowser; 31Initial message send to client to configure layout; 32*/; 33 ; 34/// function signature for file dialog call-backs; 35/// argument is selected file name; 36using RFileDialogCallback_t = std::function<void(const std::string &)>;; 37 ; 38 ; 39/** Web-based FileDialog */; 40 ; 41class RFileDialog {; 42 friend class Details::RWebWindowPlugin;; 43public:; 44 ; 45 enum EDialogTypes {; 46 kOpenFile,; 47 kSaveAs,; 48 kNewFile; 49 };; 50 ; 51protected:; 52 ; 53 EDialogTypes fKind{kOpenFile}; ///<! dialog kind OpenFile, SaveAs, NewFile; 54 std::string fTitle; ///<! title, when not specified default will be used; 55 RBrowserData fBrowsable; ///<! central browsing element; 56 bool fCanChangePath{true}; ///<! if working path can be changed via gui elements; 57 ; 58 std::shared_ptr<RWebWindow> fWebWindow; ///<! web window for file dialog; 59 ; 60 bool fDidSelect{false}; ///<! t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RFileDialog_8hxx_source.html:102,Load,Loading,102,doc/v632/RFileDialog_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RFileDialog_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/browserv7/src/RBrowserData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RBrowserData.cxx. Go to the documentation of this file. 1// Author: Sergey Linev <S.Linev@gsi.de>; 2// Date: 2019-10-14; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include <ROOT/RBrowserData.hxx>; 14 ; 15#include <ROOT/Browsable/RGroup.hxx>; 16#include <ROOT/Browsable/RWrapper.hxx>; 17#include <ROOT/Browsable/RProvider.hxx>; 18#include <ROOT/Browsable/RLevelIter.hxx>; 19#include <ROOT/Browsable/TObjectHolder.hxx>; 20#include <ROOT/Browsable/RSysFile.hxx>; 21 ; 22#include <ROOT/RLogger.hxx>; 23 ; 24#include ""TFolder.h""; 25#include ""TROOT.h""; 26#include ""TBufferJSON.h""; 27#include ""TEnv.h""; 28 ; 29#include <algorithm>; 30#include <regex>; 31 ; 32using namespace ROOT;; 33using namespace std::string_literals;; 34 ; 35ROOT::Experimental::RLogChannel &ROOT::BrowserLog(); 36{; 37 static ROOT::Experimental::RLogChannel sLog(""ROOT.Browser"");; 38 return sLog;; 39}; 40 ; 41namespace ROOT {; 42 ; 43class RBrowserDataCleanup : public TObject {; 44 ; 45 RBrowserData &fData;; 46 ; 47public:; 48 RBrowserDataCleanup(RBrowserData &_data) : fData(_data) {}; 49 ; 50 void RecursiveRemove(TObject *obj) override; 51 {; 52 fData.RemoveFromCache(obj);; 53 }; 54};; 55 ; 56} // namespace ROOT; 57 ; 58 ; 59/** \class ROOT::RBrowserData; 60\ingroup rbrowser; 61\brief Way to browse (hopefully) everything in %ROOT; 62*/; 63 ; 64 ; 65////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RBrowserData_8cxx_source.html:99,Load,Loading,99,doc/master/RBrowserData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RBrowserData_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/browserv7/src/RBrowserData.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RBrowserData.cxx. Go to the documentation of this file. 1// Author: Sergey Linev <S.Linev@gsi.de>; 2// Date: 2019-10-14; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include <ROOT/RBrowserData.hxx>; 14 ; 15#include <ROOT/Browsable/RGroup.hxx>; 16#include <ROOT/Browsable/RWrapper.hxx>; 17#include <ROOT/Browsable/RProvider.hxx>; 18#include <ROOT/Browsable/RLevelIter.hxx>; 19#include <ROOT/Browsable/TObjectHolder.hxx>; 20#include <ROOT/Browsable/RSysFile.hxx>; 21 ; 22#include <ROOT/RLogger.hxx>; 23 ; 24#include ""TFolder.h""; 25#include ""TROOT.h""; 26#include ""TBufferJSON.h""; 27#include ""TEnv.h""; 28 ; 29#include <algorithm>; 30#include <regex>; 31 ; 32using namespace ROOT;; 33using namespace std::string_literals;; 34 ; 35ROOT::Experimental::RLogChannel &ROOT::BrowserLog(); 36{; 37 static ROOT::Experimental::RLogChannel sLog(""ROOT.Browser"");; 38 return sLog;; 39}; 40 ; 41namespace ROOT {; 42 ; 43class RBrowserDataCleanup : public TObject {; 44 ; 45 RBrowserData &fData;; 46 ; 47public:; 48 RBrowserDataCleanup(RBrowserData &_data) : fData(_data) {}; 49 ; 50 void RecursiveRemove(TObject *obj) override; 51 {; 52 fData.RemoveFromCache(obj);; 53 }; 54};; 55 ; 56} // namespace ROOT; 57 ; 58 ; 59/** \class ROOT::RBrowserData; 60\ingroup rbrowser; 61\brief Way to browse (hopefully) everything in %ROOT; 62*/; 63 ; 64 ; 65/////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RBrowserData_8cxx_source.html:98,Load,Loading,98,doc/v632/RBrowserData_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RBrowserData_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/gui/inc/TGButton.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGButton.h. Go to the documentation of this file. 1// @(#)root/gui:$Id$; 2// Author: Fons Rademakers 06/01/98; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGButton; 13#define ROOT_TGButton; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGButton, TGTextButton, TGPictureButton, TGCheckButton TGRadioButton //; 19// and TGSplitButton //; 20// //; 21// This header defines all GUI button widgets. //; 22// //; 23// TGButton is a button abstract base class. It defines general button //; 24// behaviour. //; 25// //; 26// Selecting a text or picture button will generate the event: //; 27// kC_COMMAND, kCM_BUTTON, button id, user data. //; 28// //; 29// Selecting a check button will generate the event: //; 30// kC_COMMAND, kCM_CHECKBUTTON, button id, user data. //; 31// //; 32// Selecting a radio button will generate the event: //; 33// kC_COMMAND, kCM_RADIOBUTTON, button id, user data. //; 34// //; 35// If a command string has been specified (via SetCommand()) then this //; 36// command string will be executed via the interpreter whenever a //; 37// button is selected. A command string can contain the macros: //; 38// $MSG -- kC_COMMAND, kCM[CHECK|RADIO]BUTTON packed message //; 39// (use GET_MSG() and GET_SUBMSG() to unpack) //; 40// $PARM1 -- button id //; 41// $PARM2 -- user data pointer //; 42// Before executing these macros are expanded into the respective //; 43// Long_t's //; 44// //; 45/////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGButton_8h_source.html:87,Load,Loading,87,doc/master/TGButton_8h_source.html,https://root.cern,https://root.cern/doc/master/TGButton_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/gui/inc/TGFrame.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TGFrame.h File Reference. #include ""TGWindow.h""; #include ""TQObject.h""; #include ""TGDimension.h""; #include ""TGGC.h""; #include ""TGFont.h""; #include ""TGLayout.h""; #include ""TGString.h"". Include dependency graph for TGFrame.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGCompositeFrame;  The base class for composite widgets (menu bars, list boxes, etc.). More...;  ; class  TGFrame;  A subclasses of TGWindow, and is used as base class for some simple widgets (buttons, labels, etc.). More...;  ; class  TGGroupFrame;  A composite frame with a border and a title. More...;  ; class  TGHeaderFrame;  Horizontal Frame used to contain header buttons and splitters in a list view. More...;  ; class  TGHorizontalFrame;  A composite frame that layout their children in horizontal way. More...;  ; class  TGMainFrame;  Defines top level windows that interact with the system Window Manager. More...;  ; class  TGMainFrame::TGMapKey;  ; class  TGTransientFrame;  Defines transient windows that typically are used for dialogs windows. More...;  ; class  TGVerticalFrame;  A composite frame that layout their children in vertical way. More...;  . Enumerations; enum  EDNDFlags { kIsDNDSource = (1ULL << ( 0 )); , kIsDNDTarget = (1ULL << ( 1 )); };  ; enum  EFrameCleanup { kNoCleanup = 0; , kLocalCleanup = 1; , kDeepCleanup = -1; };  ; enum  EFrameState { kIsVisible = (1ULL << ( 0 )); , kIsMapped = kIsVisible; , kIsArranged = (1ULL << ( 1 )); };  ; enum  EMWMHints { ;   kMWMFuncAll = (1ULL << ( 0 )); , kMWMFuncResize = (1ULL << ( 1 )); , kMWMFuncMove = (1ULL << ( 2 )); , kMWMFuncMinimize = (1ULL << ( 3 )); , ;   kMWMFuncMaximize = (1UL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGFrame_8h.html:89,Load,Loading,89,doc/master/TGFrame_8h.html,https://root.cern,https://root.cern/doc/master/TGFrame_8h.html,1,['Load'],['Loading']
Performance,". ROOT: gui/gui/inc/TRootBrowser.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRootBrowser.h. Go to the documentation of this file. 1// @(#)root/gui:$Id: 7cf312b9bc9940a03d7c0cee95eea0085dc9898c $; 2// Author: Bertrand Bellenot 26/09/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRootBrowser; 13#define ROOT_TRootBrowser; 14 ; 15#include ""TGFrame.h""; 16 ; 17#include ""TBrowserImp.h""; 18 ; 19class TGLayoutHints;; 20class TGTab;; 21class TGMenuBar;; 22class TGPopupMenu;; 23class TGStatusBar;; 24class TGVSplitter;; 25class TGHSplitter;; 26 ; 27 ; 28/** \class TBrowserPlugin; 29 \ingroup guiwidgets; 30 ; 31Helper class used to manage plugins (command or macro to be executed).; 32*/; 33 ; 34 ; 35class TBrowserPlugin : public TNamed; 36{; 37public:; 38 Int_t fTab{0}; ///< Tab number; 39 Int_t fSubTab{0}; ///< Tab element number; 40 TString fCommand; ///< Command to be executed; 41 ; 42 TBrowserPlugin(const char *name, const char *cmd = """", Int_t tab = 1,; 43 Int_t sub = -1) : TNamed(name, cmd), fTab(tab),; 44 fSubTab(sub), fCommand(cmd) { }; 45 ~TBrowserPlugin() override {}; 46 ; 47 void SetTab(Int_t tab) { fTab = tab; }; 48 void SetSubTab(Int_t sub) { fSubTab = sub; }; 49 void SetCommand(const char *cmd) { fCommand = cmd; }; 50 ; 51 ClassDefOverride(TBrowserPlugin, 0) // basic plugin description class; 52};; 53 ; 54class TRootBrowser : public TGMainFrame, public TBrowserImp {; 55 TRootBrowser(const TRootBrowser&) = delete;; 56 TRootBrowser& operator=(const TRootBrowser&) = delete;; 57 ; 58protected:; 59 ; 60 TGLayoutHints *fLH0, *fLH1, *fLH2, *fLH3; ///< Layout hints, part 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRootBrowser_8h_source.html:91,Load,Loading,91,doc/master/TRootBrowser_8h_source.html,https://root.cern,https://root.cern/doc/master/TRootBrowser_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/guihtml/src/TGHtmlTable.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; TGHtmlTable.cxx File Reference. #include <cstdlib>; #include <cstring>; #include <cctype>; #include <cmath>; #include ""TGHtml.h""; #include ""snprintf.h"". Include dependency graph for TGHtmlTable.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ColMin(A, B)   colMin[(A)-1][(B)-1];  ; #define ColReq(A, B)   colMin[(B)-1][(A)-1];  ; #define DFLT_BORDER   0;  ; #define DFLT_CELLPADDING   2;  ; #define DFLT_CELLSPACING_3D   5;  ; #define DFLT_CELLSPACING_FLAT   0;  ; #define DFLT_HSPACE   0;  ; #define DFLT_VSPACE   0;  ; #define MAX(A, B)   ((A) < (B) ? (B) : (A));  ; #define N   (HTML_MAX_COLUMNS+1);  ; #define SETMAX(A, B)   if ((A) < (B)) { (A) = (B); };  ; #define VAlign_Baseline   4;  ; #define VAlign_Bottom   2;  ; #define VAlign_Center   3;  ; #define VAlign_Top   1;  ; #define VAlign_Unknown   0;  . Macro Definition Documentation. ◆ ColMin. #define ColMin; (;  ; A, .  ; B . );    colMin[(A)-1][(B)-1]. ◆ ColReq. #define ColReq; (;  ; A, .  ; B . );    colMin[(B)-1][(A)-1]. ◆ DFLT_BORDER. #define DFLT_BORDER   0. Definition at line 38 of file TGHtmlTable.cxx. ◆ DFLT_CELLPADDING. #define DFLT_CELLPADDING   2. Definition at line 41 of file TGHtmlTable.cxx. ◆ DFLT_CELLSPACING_3D. #define DFLT_CELLSPACING_3D   5. Definition at line 39 of file TGHtmlTable.cxx. ◆ DFLT_CELLSPACING_FLAT. #define DFLT_CELLSPACING_FLAT   0. Definition at line 40 of file TGHtmlTable.cxx. ◆ DFLT_HSPACE. #define DFLT_HSPACE   0. Definition at line 42 of file TGHtmlTable.cxx. ◆ DFLT_VSPACE. #define DFLT_VSPACE   0. Definition at line 43 of file TGHtmlTable.cxx. ◆ MAX. #define MAX; (;  ; A, .  ; B . );    ((A) < (B) ? (B) : (A)). Definition at line 47 of file TGHtmlTable.cxx. ◆ N. #define N   (HTML_MAX_COLUMNS+1). ◆ SETMAX. #define SETMAX; (;  ; A, .  ; B . );    if ((A) < (B)) { (A) = (B); }. Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGHtmlTable_8cxx.html:99,Load,Loading,99,doc/master/TGHtmlTable_8cxx.html,https://root.cern,https://root.cern/doc/master/TGHtmlTable_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: gui/guihtml/src/TGHtmlTable.cxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Macros ; TGHtmlTable.cxx File Reference. #include <cstdlib>; #include <cstring>; #include <cctype>; #include <cmath>; #include ""TGHtml.h""; #include ""snprintf.h"". Include dependency graph for TGHtmlTable.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Macros; #define ColMin(A, B)   colMin[(A)-1][(B)-1];  ; #define ColReq(A, B)   colMin[(B)-1][(A)-1];  ; #define DFLT_BORDER   0;  ; #define DFLT_CELLPADDING   2;  ; #define DFLT_CELLSPACING_3D   5;  ; #define DFLT_CELLSPACING_FLAT   0;  ; #define DFLT_HSPACE   0;  ; #define DFLT_VSPACE   0;  ; #define MAX(A, B)   ((A) < (B) ? (B) : (A));  ; #define N   (HTML_MAX_COLUMNS+1);  ; #define SETMAX(A, B)   if ((A) < (B)) { (A) = (B); };  ; #define VAlign_Baseline   4;  ; #define VAlign_Bottom   2;  ; #define VAlign_Center   3;  ; #define VAlign_Top   1;  ; #define VAlign_Unknown   0;  . Macro Definition Documentation. ◆ ColMin. #define ColMin; (;  ; A, .  ; B . );    colMin[(A)-1][(B)-1]. ◆ ColReq. #define ColReq; (;  ; A, .  ; B . );    colMin[(B)-1][(A)-1]. ◆ DFLT_BORDER. #define DFLT_BORDER   0. Definition at line 38 of file TGHtmlTable.cxx. ◆ DFLT_CELLPADDING. #define DFLT_CELLPADDING   2. Definition at line 41 of file TGHtmlTable.cxx. ◆ DFLT_CELLSPACING_3D. #define DFLT_CELLSPACING_3D   5. Definition at line 39 of file TGHtmlTable.cxx. ◆ DFLT_CELLSPACING_FLAT. #define DFLT_CELLSPACING_FLAT   0. Definition at line 40 of file TGHtmlTable.cxx. ◆ DFLT_HSPACE. #define DFLT_HSPACE   0. Definition at line 42 of file TGHtmlTable.cxx. ◆ DFLT_VSPACE. #define DFLT_VSPACE   0. Definition at line 43 of file TGHtmlTable.cxx. ◆ MAX. #define MAX; (;  ; A, .  ; B . );    ((A) < (B) ? (B) : (A)). Definition at line 47 of file TGHtmlTable.cxx. ◆ N. #define N   (HTML_MAX_COLUMNS+1). ◆ SETMAX. #define SETMAX; (;  ; A, .  ; B . );    if ((A) < (B)) { (A) = (B); }. Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TGHtmlTable_8cxx.html:98,Load,Loading,98,doc/v632/TGHtmlTable_8cxx.html,https://root.cern,https://root.cern/doc/v632/TGHtmlTable_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: gui/webdisplay/inc/ROOT/RWebWindow.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebWindow.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2017-10-16; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RWebWindow; 14#define ROOT7_RWebWindow; 15 ; 16#include <ROOT/RWebDisplayHandle.hxx>; 17 ; 18#include ""ROOT/RConfig.hxx""; 19 ; 20#include <memory>; 21#include <vector>; 22#include <string>; 23#include <queue>; 24#include <map>; 25#include <functional>; 26#include <mutex>; 27#include <thread>; 28#include <chrono>; 29 ; 30class THttpCallArg;; 31class THttpServer;; 32 ; 33namespace ROOT {; 34 ; 35/// function signature for connect/disconnect call-backs; 36/// argument is connection id; 37using WebWindowConnectCallback_t = std::function<void(unsigned)>;; 38 ; 39/// function signature for call-backs from the window clients; 40/// first argument is connection id, second is received data; 41using WebWindowDataCallback_t = std::function<void(unsigned, const std::string &)>;; 42 ; 43/// function signature for waiting call-backs; 44/// Such callback used when calling thread need to waits for some special data,; 45/// but wants to run application event loop; 46/// As argument, spent time in second will be provided; 47/// Waiting will be performed until function returns non-zero value; 48using WebWindowWaitFunc_t = std::function<int(double)>;; 49 ; 50class RFileDialog;; 51class RWebWindowsManager;; 52c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindow_8hxx_source.html:103,Load,Loading,103,doc/master/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindow_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/webdisplay/inc/ROOT/RWebWindow.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebWindow.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2017-10-16; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RWebWindow; 14#define ROOT7_RWebWindow; 15 ; 16#include <ROOT/RWebDisplayHandle.hxx>; 17 ; 18#include <memory>; 19#include <vector>; 20#include <string>; 21#include <queue>; 22#include <map>; 23#include <functional>; 24#include <mutex>; 25#include <thread>; 26#include <chrono>; 27 ; 28class THttpCallArg;; 29class THttpServer;; 30 ; 31namespace ROOT {; 32 ; 33/// function signature for connect/disconnect call-backs; 34/// argument is connection id; 35using WebWindowConnectCallback_t = std::function<void(unsigned)>;; 36 ; 37/// function signature for call-backs from the window clients; 38/// first argument is connection id, second is received data; 39using WebWindowDataCallback_t = std::function<void(unsigned, const std::string &)>;; 40 ; 41/// function signature for waiting call-backs; 42/// Such callback used when calling thread need to waits for some special data,; 43/// but wants to run application event loop; 44/// As argument, spent time in second will be provided; 45/// Waiting will be performed until function returns non-zero value; 46using WebWindowWaitFunc_t = std::function<int(double)>;; 47 ; 48class RFileDialog;; 49class RWebWindowsManager;; 50class RWebWindowWSHandler;; 51 ; 52cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindow_8hxx_source.html:102,Load,Loading,102,doc/v632/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindow_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/webdisplay/inc/ROOT/RWebWindowsManager.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebWindowsManager.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2017-10-16; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RWebWindowsManager; 14#define ROOT7_RWebWindowsManager; 15 ; 16#include <memory>; 17#include <string>; 18#include <thread>; 19#include <mutex>; 20#include <functional>; 21 ; 22#include ""THttpEngine.h""; 23 ; 24#include <ROOT/RWebWindow.hxx>; 25 ; 26class THttpServer;; 27class THttpWSHandler;; 28class TExec;; 29 ; 30namespace ROOT {; 31 ; 32/// function signature for catching show calls of arbitrary RWebWindow; 33/// if returns true, normal show procedure will not be invoked; 34using WebWindowShowCallback_t = std::function<bool(RWebWindow &, const RWebDisplayArgs &)>;; 35 ; 36/// function signature for callback when RWebWindow destroyed; 37using WebWindowDeleteCallback_t = std::function<void(RWebWindow &)>;; 38 ; 39 ; 40class RWebWindowsManager {; 41 ; 42 friend class RWebWindow;; 43 ; 44private:; 45 std::unique_ptr<THttpServer> fServer; ///<! central communication with the all used displays; 46 std::string fAddr; ///<! HTTP address of the server; 47 std::string fSessionKey; ///<! secret session key used on client to code connections keys; 48 bool fUseSessionKey{false}; ///<! is session key has to be used for data signing; 49 std::recursive_mutex fMutex; ///<! main mutex, used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html:111,Load,Loading,111,doc/master/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindowsManager_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/webdisplay/inc/ROOT/RWebWindowsManager.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebWindowsManager.hxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2017-10-16; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT7_RWebWindowsManager; 14#define ROOT7_RWebWindowsManager; 15 ; 16#include <memory>; 17#include <string>; 18#include <thread>; 19#include <mutex>; 20#include <functional>; 21 ; 22#include ""THttpEngine.h""; 23 ; 24#include <ROOT/RWebWindow.hxx>; 25 ; 26class THttpServer;; 27class THttpWSHandler;; 28class TExec;; 29 ; 30namespace ROOT {; 31 ; 32/// function signature for catching show calls of arbitrary RWebWindow; 33/// if returns true, normal show procedure will not be invoked; 34using WebWindowShowCallback_t = std::function<bool(RWebWindow &, const RWebDisplayArgs &)>;; 35 ; 36class RWebWindowsManager {; 37 ; 38 friend class RWebWindow;; 39 ; 40private:; 41 std::unique_ptr<THttpServer> fServer; ///<! central communication with the all used displays; 42 std::string fAddr; ///<! HTTP address of the server; 43 std::string fSessionKey; ///<! secret session key used on client to code connections keys; 44 bool fUseSessionKey{false}; ///<! is session key has to be used for data signing; 45 std::recursive_mutex fMutex; ///<! main mutex, used for window creations; 46 unsigned fIdCnt{0}; ///<! counter for identifiers; 47 bool fUseHttpThrd{false}; ///<! use special thread for THttpServer; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindowsManager_8hxx_source.html:110,Load,Loading,110,doc/v632/RWebWindowsManager_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindowsManager_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/webdisplay/src/RWebDisplayArgs.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebDisplayArgs.cxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2018-10-24; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include <ROOT/RWebDisplayArgs.hxx>; 14 ; 15#include <ROOT/RConfig.hxx>; 16#include <ROOT/RLogger.hxx>; 17#include <ROOT/RWebWindow.hxx>; 18 ; 19#include ""TROOT.h""; 20#include <string>; 21 ; 22using namespace ROOT;; 23 ; 24ROOT::Experimental::RLogChannel &ROOT::WebGUILog(); 25{; 26 static ROOT::Experimental::RLogChannel sLog(""ROOT.WebGUI"");; 27 return sLog;; 28}; 29 ; 30 ; 31/** \class ROOT::RWebDisplayArgs; 32\ingroup webdisplay; 33 ; 34Holds different arguments for starting browser with RWebDisplayHandle::Display() method; 35 ; 36*/; 37 ; 38///////////////////////////////////////////////////////////////////////////////////////////; 39/// Default constructor.; 40/// Browser kind configured from gROOT->GetWebDisplay(); 41 ; 42RWebDisplayArgs::RWebDisplayArgs(); 43{; 44 SetBrowserKind("""");; 45}; 46 ; 47///////////////////////////////////////////////////////////////////////////////////////////; 48/// Constructor.; 49/// Browser kind specified as std::string.; 50/// See \ref SetBrowserKind method for description of allowed parameters; 51 ; 52RWebDisplayArgs::RWebDisplayArgs(const std::string &browser); 53{; 54 SetBrowserKind(browser);; 55}; 56 ; 57///////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebDisplayArgs_8cxx_source.html:103,Load,Loading,103,doc/master/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RWebDisplayArgs_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: gui/webdisplay/src/RWebDisplayArgs.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RWebDisplayArgs.cxx. Go to the documentation of this file. 1// Author: Sergey Linev <s.linev@gsi.de>; 2// Date: 2018-10-24; 3// Warning: This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include <ROOT/RWebDisplayArgs.hxx>; 14 ; 15#include <ROOT/RConfig.hxx>; 16#include <ROOT/RLogger.hxx>; 17#include <ROOT/RWebWindow.hxx>; 18 ; 19#include ""TROOT.h""; 20#include <string>; 21 ; 22using namespace ROOT;; 23 ; 24ROOT::Experimental::RLogChannel &ROOT::WebGUILog(); 25{; 26 static ROOT::Experimental::RLogChannel sLog(""ROOT.WebGUI"");; 27 return sLog;; 28}; 29 ; 30 ; 31/** \class ROOT::RWebDisplayArgs; 32\ingroup webdisplay; 33 ; 34Holds different arguments for starting browser with RWebDisplayHandle::Display() method; 35 ; 36*/; 37 ; 38///////////////////////////////////////////////////////////////////////////////////////////; 39/// Default constructor.; 40/// Browser kind configured from gROOT->GetWebDisplay(); 41 ; 42RWebDisplayArgs::RWebDisplayArgs(); 43{; 44 SetBrowserKind("""");; 45}; 46 ; 47///////////////////////////////////////////////////////////////////////////////////////////; 48/// Constructor.; 49/// Browser kind specified as std::string.; 50/// See \ref SetBrowserKind method for description of allowed parameters; 51 ; 52RWebDisplayArgs::RWebDisplayArgs(const std::string &browser); 53{; 54 SetBrowserKind(browser);; 55}; 56 ; 57////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html:102,Load,Loading,102,doc/v632/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: h1analysis Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; h1analysis Class Reference. . Definition at line 24 of file h1analysis.h. Public Member Functions;  h1analysis (TTree *tree=nullptr);  ;  ~h1analysis () override;  ; void Begin (TTree *tree) override;  ; TList * GetOutputList () const override;  ; void Init (TTree *tree) override;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; Bool_t Process (Long64_t entry) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void Reset ();  ; void SetInputList (TList *input) override;  ; void SetObject (TObject *obj) override;  ; void SetOption (const char *option) override;  ; void SlaveBegin (TTree *tree) override;  ; void SlaveTerminate () override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base imp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysis.html:79,Load,Loading,79,doc/master/classh1analysis.html,https://root.cern,https://root.cern/doc/master/classh1analysis.html,1,['Load'],['Loading']
Performance,". ROOT: h1analysisTreeReader Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; h1analysisTreeReader Class Reference. . Definition at line 12 of file h1analysisTreeReader.h. Public Member Functions;  h1analysisTreeReader (TTree *=nullptr);  ;  ~h1analysisTreeReader () override;  ; void Begin (TTree *) override;  ; TList * GetOutputList () const override;  ; void Init (TTree *myTree) override;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; Bool_t Process (Long64_t entry) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void Reset ();  ; void SetInputList (TList *input) override;  ; void SetObject (TObject *obj) override;  ; void SetOption (const char *option) override;  ; void SlaveBegin (TTree *) override;  ; void SlaveTerminate () override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysisTreeReader.html:89,Load,Loading,89,doc/master/classh1analysisTreeReader.html,https://root.cern,https://root.cern/doc/master/classh1analysisTreeReader.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hbook/src/THbookFile.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros |; Functions |; Variables ; THbookFile.cxx File Reference. #include <cstdlib>; #include <cstring>; #include <cctype>; #include ""TROOT.h""; #include ""THbookFile.h""; #include ""TH2.h""; #include ""THbookTree.h""; #include ""THbookBranch.h""; #include ""THbookKey.h""; #include ""TGraph.h""; #include ""TProfile.h""; #include ""TTreeFormula.h""; #include ""TLeafI.h""; #include ""TBrowser.h""; #include ""TSystem.h""; #include ""TMath.h""; #include ""strlcpy.h""; #include ""snprintf.h"". Include dependency graph for THbookFile.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define DEFCHAR   const char*;  ; #define hbnam   hbnam_;  ; #define hbnamc   hbnamc_;  ; #define hbname   hbname_;  ; #define hcbits   hcbits_;  ; #define hcbook   hcbook_;  ; #define hcdir   hcdir_;  ; #define hdcofl   hdcofl_;  ; #define hdelet   hdelet_;  ; #define hgive   hgive_;  ; #define hgiven   hgiven_;  ; #define hgnf   hgnf_;  ; #define hgnpar   hgnpar_;  ; #define hgnt   hgnt_;  ; #define hgnt1   hgnt1_;  ; #define hgntf   hgntf_;  ; #define hi   hi_;  ; #define hie   hie_;  ; #define hif   hif_;  ; #define hij   hij_;  ; #define hije   hije_;  ; #define hijxy   hijxy_;  ; #define hix   hix_;  ; #define hldir   hldir_;  ; #define hlimit   hlimit_;  ; #define hmaxim   hmaxim_;  ; #define hminim   hminim_;  ; #define hnoent   hnoent_;  ; #define hntvar2   hntvar2_;  ; #define hntvar3   hntvar3_;  ; #define hrend   hrend_;  ; #define hrin   hrin_;  ; #define hropen   hropen_;  ; #define PASSCHAR(string)   string;  ; #define pawc   pawc_;  ; #define PAWC_SIZE   4000000;  ; #define quest   quest_;  ; #define rzcl   rzcl_;  ; #defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THbookFile_8cxx.html:97,Load,Loading,97,doc/master/THbookFile_8cxx.html,https://root.cern,https://root.cern/doc/master/THbookFile_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hbook/src/THbookFile.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THbookFile.cxx. Go to the documentation of this file. 1// @(#)root/hbook:$Id$; 2// Author: Rene Brun 18/02/2002; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class THbookFile; 13 \ingroup Hist; 14 This class is an interface to the Hbook objects in Hbook files.; 15 Any Hbook object (1-D, 2-D, Profile, RWN or CWN can be read; 16 ; 17 NB: a THbookFile can only be used in READ mode; 18 Use the utility in $ROOTSYS/bin/h2root to convert Hbook to Root; 19 ; 20 Example of use:; 21 ; 22 gSystem->Load(""libHbook"");; 23 THbookFile f(""myfile.hbook"");; 24 f.ls();; 25 TH1F *h1 = (TH1F*)f.Get(1); //import histogram ID=1 in h1; 26 h1->Fit(""gaus"");; 27 THbookTree *T = (THbookTree*)f.Get(111); //import ntuple header; 28 T->Print(); //show the Hbook ntuple variables; 29 T->Draw(""x"",""y<0""); // as in normal TTree::Draw; 30 ; 31 THbookFile can be browsed via TBrowser.; 32*/; 33 ; 34#include <cstdlib>; 35#include <cstring>; 36#include <cctype>; 37 ; 38#include ""TROOT.h""; 39#include ""THbookFile.h""; 40#include ""TH2.h""; 41#include ""THbookTree.h""; 42#include ""THbookBranch.h""; 43#include ""THbookKey.h""; 44#include ""TGraph.h""; 45#include ""TProfile.h""; 46#include ""TTreeFormula.h""; 47#include ""TLeafI.h""; 48#include ""TBrowser.h""; 49#include ""TSystem.h""; 50#include ""TMath.h""; 51#include ""strlcpy.h""; 52#include ""snprintf.h""; 53 ; 54// NOTE: THe following comments and declarations are a duplicate; 55// of those in main/src/h2root.cxx; 56 ; 57// Note that with gcc3.4 or above the size of PAWC_SIZE must be the same; 58// as in the Fortran ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THbookFile_8cxx_source.html:94,Load,Loading,94,doc/master/THbookFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THbookFile_8cxx_source.html,2,['Load'],"['Load', 'Loading']"
Performance,". ROOT: hist/hist/inc/HFitInterface.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Enumerations |; Functions ; HFitInterface.h File Reference. #include ""TFitResultPtr.h"". Include dependency graph for HFitInterface.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  ; namespace  ROOT::Math;  . Enumerations; enum class  ROOT::Fit::EChisquareType { ROOT::Fit::kNeyman = 0; , ROOT::Fit::kPLikeRatio; , ROOT::Fit::kPearson; };  ; enum class  ROOT::Fit::EFitObjectType { ROOT::Fit::kHistogram; , ROOT::Fit::kGraph; };  . Functions; double ROOT::Fit::Chisquare (const TGraph &h1, TF1 &f1, bool useRange);  compute the chi2 value for a graph given a function (see TGraph::Chisquare) ;  ; double ROOT::Fit::Chisquare (const TH1 &h1, TF1 &f1, bool useRange, EChisquareType type);  compute the chi2 value for an histogram given a function (see TH1::Chisquare for the documentation) ;  ; void ROOT::Fit::FillData (BinData &dv, const TGraph *gr, TF1 *func=nullptr);  fill the data vector from a TGraph. ;  ; void ROOT::Fit::FillData (BinData &dv, const TGraph2D *gr, TF1 *func=nullptr);  fill the data vector from a TGraph2D. ;  ; void ROOT::Fit::FillData (BinData &dv, const TH1 *hist, TF1 *func=nullptr);  fill the data vector from a TH1. ;  ; void ROOT::Fit::FillData (BinData &dv, const THnBase *hist, TF1 *func=nullptr);  fill the data vector from a THnBase. ;  ; void ROOT::Fit::FillData (BinData &dv, const TMultiGraph *gr, TF1 *func=nullptr);  fill the data vector from a TMultiGraph. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8h.html:97,Load,Loading,97,doc/master/HFitInterface_8h.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/HFitInterface.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. HFitInterface.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: L. Moneta Thu Aug 31 10:40:20 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class HFitInterface; 12// set of free functions used to couple the ROOT data object with the fitting classes; 13 ; 14// avoid including this file when running CINT since free functions cannot be re-defined; 15 ; 16#ifndef ROOT_HFitInterface; 17#define ROOT_HFitInterface; 18 ; 19 ; 20class TH1;; 21class THnBase;; 22class TF1;; 23class TF2;; 24class TGraph;; 25class TGraphErrors;; 26class TGraph2D;; 27class TMultiGraph;; 28struct Foption_t;; 29 ; 30#include ""TFitResultPtr.h""; 31 ; 32namespace ROOT {; 33 ; 34 namespace Math {; 35 class MinimizerOptions;; 36 }; 37 ; 38 namespace Fit {; 39 ; 40 //class BinData;; 41 ; 42 class FitResult;; 43 class DataRange;; 44 class BinData;; 45 class UnBinData;; 46 class SparseData;; 47 ; 48 enum class EFitObjectType {; 49 kHistogram,; 50 kGraph; 51 };; 52 ; 53 enum class EChisquareType {; 54 kNeyman = 0,; 55 kPLikeRatio,; 56 kPearson; 57 };; 58 ; 59 ; 60 ; 61 /**; 62 Decode list of options into fitOption; 63 */; 64 void FitOptionsMake(EFitObjectType type, const char *option, Foption_t &fitOption);; 65 ; 66 /**; 67 fitting function for a TH1 (called from TH1::Fit); 68 */; 69 TFitResultPtr FitObject(TH1 * h1, TF1 *f1, Foption_t & option, const ROOT::Math::MinimizerOptions & moption, const char *goption, ROOT::Fit::DataRange & range);; 70 ; 71 /**; 72 fitting function for a TGraph (called from TGraph::Fit); 73 */; 74 TFitResultPtr FitObject(TGraph * gr, TF1 *f1 , Foption_t & option , const ROOT::Math::MinimizerOptions & moption, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8h_source.html:94,Load,Loading,94,doc/master/HFitInterface_8h_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/Math/WrappedMultiTF1.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; WrappedMultiTF1.h File Reference. #include ""Math/IParamFunction.h""; #include ""TF1.h""; #include <string>; #include <vector>; #include <algorithm>. Include dependency graph for WrappedMultiTF1.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Math::GeneralHessianCalc< T >;  ; struct  ROOT::Math::GeneralHessianCalc< double >;  ; struct  ROOT::Math::GeneralLinearFunctionDerivation< T >;  Auxiliar class to bypass the (provisional) lack of vectorization in TFormula::EvalPar. More...;  ; struct  ROOT::Math::GeneralLinearFunctionDerivation< double >;  ; class  ROOT::Math::WrappedMultiTF1Templ< T >;  Class to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface of multi-dimensions to be used in the ROOT::Math numerical algorithm. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Math;  ; namespace  ROOT::Math::Internal;  . Typedefs; using ROOT::Math::WrappedMultiTF1 = WrappedMultiTF1Templ< double >;  . Functions; TF1 * ROOT::Math::Internal::CopyTF1Ptr (const TF1 *funcToCopy);  ; double ROOT::Math::Internal::DerivPrecision (double eps);  . histhistincMathWrappedMultiTF1.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedMultiTF1_8h.html:104,Load,Loading,104,doc/master/WrappedMultiTF1_8h.html,https://root.cern,https://root.cern/doc/master/WrappedMultiTF1_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/Math/WrappedMultiTF1.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. WrappedMultiTF1.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta Wed Sep 6 09:52:26 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class WrappedTFunction; 12 ; 13#ifndef ROOT_Math_WrappedMultiTF1; 14#define ROOT_Math_WrappedMultiTF1; 15 ; 16 ; 17#include ""Math/IParamFunction.h""; 18 ; 19#include ""TF1.h""; 20#include <string>; 21#include <vector>; 22#include <algorithm>; 23 ; 24namespace ROOT {; 25 ; 26 namespace Math {; 27 ; 28 namespace Internal {; 29 double DerivPrecision(double eps);; 30 TF1 *CopyTF1Ptr(const TF1 *funcToCopy);; 31 };; 32 ; 33 /**; 34 Class to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface; 35 of multi-dimensions to be used in the ROOT::Math numerical algorithm.; 36 This wrapper class does not own the TF1 pointer, so it assumes it exists during the wrapper lifetime.; 37 The class copy the TF1 pointer only when it owns it.; 38 ; 39 The class from ROOT version 6.03 does not contain anymore a copy of the parameters. The parameters are; 40 stored in the TF1 class.; 41 ; 42 @ingroup CppFunctions; 43 */; 44 ; 45 //LM note: are there any issues when cloning the class for the parameters that are not copied anymore ??; 46 ; 47 template<class T>; 48 class WrappedMultiTF1Templ: virtual public ROOT::Math::IParametricGradFunctionMultiDimTempl<T> {; 49 ; 50 public:; 51 ; 52 typedef ROOT::Math::IParametricGradFunctionMultiDimTempl<T> BaseParamFunc;; 53 typedef typename ROOT::Math::IParametricFunctionMultiDimTempl<T>::BaseFunc BaseFunc;; 54 ; 55 /**; 56 constructor from a function pointer to a TF1; 57 If dim = 0 dimension is taken from TF1::GetNdim()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedMultiTF1_8h_source.html:101,Load,Loading,101,doc/master/WrappedMultiTF1_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedMultiTF1_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TAxis.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TAxis.h File Reference. #include ""TNamed.h""; #include ""TAttAxis.h""; #include ""TArrayD.h"". Include dependency graph for TAxis.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TAxis;  Class to manage histogram axis. More...;  . histhistincTAxis.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8h.html:89,Load,Loading,89,doc/master/TAxis_8h.html,https://root.cern,https://root.cern/doc/master/TAxis_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TAxis.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAxis.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TAxis; 13#define ROOT_TAxis; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TAxis //; 19// //; 20// Axis class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TAttAxis.h""; 26#include ""TArrayD.h""; 27 ; 28class THashList;; 29class TAxisModLab;; 30 ; 31class TAxis : public TNamed, public TAttAxis {; 32 ; 33private:; 34 Int_t fNbins; ///< Number of bins; 35 Double_t fXmin; ///< Low edge of first bin; 36 Double_t fXmax; ///< Upper edge of last bin; 37 TArrayD fXbins; ///< Bin edges array in X; 38 Int_t fFirst; ///< First bin to display; 39 Int_t fLast; ///< Last bin to display; 40 UShort_t fBits2; ///< Second bit status word; 41 Bool_t fTimeDisplay; ///< On/off displaying time values instead of numerics; 42 TString fTimeFormat; ///< Date&time format, ex: 09/12/99 12:34:00; 43 TObject *fParent; ///<! Object owning this axis; 44 THashList *fLabels; ///< List of labels; 45 TList *fModLabs; ///< List of modified labels; 46 ; 47 /// TAxis extra status bits (stored in fBits2); 48 enum {; 49 kAlphanumeric = BIT(0), ///< Axis is alphanumeric; 50 kCanExtend = BIT(1), ///< Axis can be extended; 51 kNotAlpha = BIT(2) ///< Axis is forced to be not alphanumeric; 52 };; 53 ; 54 Bool_t HasBinWithoutLabel() const;; 55 ; 56 ; 57 TAxisModLab ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8h_source.html:86,Load,Loading,86,doc/master/TAxis_8h_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TEfficiency.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEfficiency.h. Go to the documentation of this file. 1#ifndef ROOT_TEfficiency; 2#define ROOT_TEfficiency; 3 ; 4//standard header; 5#include <vector>; 6#include <utility>; 7 ; 8//ROOT header; 9#include ""TNamed.h""; 10 ; 11#include ""TAttLine.h""; 12 ; 13#include ""TAttFill.h""; 14 ; 15#include ""TAttMarker.h""; 16 ; 17#include ""TFitResultPtr.h""; 18 ; 19 ; 20class TCollection;; 21class TF1;; 22class TGraphAsymmErrors;; 23class TGraph2DAsymmErrors;; 24class TH1;; 25class TH2;; 26class TList;; 27 ; 28class TEfficiency: public TNamed, public TAttLine, public TAttFill, public TAttMarker; 29{; 30public:; 31 /// Enumeration type for different statistic options for calculating confidence intervals; 32 /// kF* ... frequentist methods; kB* ... bayesian methods; 33 enum EStatOption {; 34 kFCP = 0, ///< Clopper-Pearson interval (recommended by PDG); 35 kFNormal, ///< Normal approximation; 36 kFWilson, ///< Wilson interval; 37 kFAC, ///< Agresti-Coull interval; 38 kFFC, ///< Feldman-Cousins interval; 39 kBJeffrey, ///< Jeffrey interval (Prior ~ Beta(0.5,0.5); 40 kBUniform, ///< Prior ~ Uniform = Beta(1,1); 41 kBBayesian, ///< User specified Prior ~ Beta(fBeta_alpha,fBeta_beta); 42 kMidP ///< Mid-P Lancaster interval; 43 };; 44 ; 45protected:; 46 ; 47 Double_t fBeta_alpha; ///< Global parameter for prior beta distribution (default = 1); 48 Double_t fBeta_beta; ///< Global parameter for prior beta distribution (default = 1); 49 std::vector<std::pair<Double_t, Double_t> > fBeta_bin_params; ///< Parameter for prior beta distribution different bin by bin; 50 ///< (default vector is empty); 51 Double_t (*fBoundary)(Double_t,Double_t,Double_t,Bool_t); ///<! Pointer to a method calculating the boundaries of confidence intervals; 52 Double_t fConfLevel; ///< Confidence level (default = 0.683, 1 sigma); 53 TDirectory* fDirectory; ///<! Pointer to directory holding this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8h_source.html:92,Load,Loading,92,doc/master/TEfficiency_8h_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF1.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; TF1.h File Reference. #include ""RConfigure.h""; #include <functional>; #include <cassert>; #include <memory>; #include <string>; #include <vector>; #include ""TFormula.h""; #include ""TMethodCall.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TF1AbsComposition.h""; #include ""TMath.h""; #include ""Math/Types.h""; #include ""Math/ParamFunctor.h"". Include dependency graph for TF1.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Internal::GetFunctorType< T >;  Internal class used by TF1 for obtaining the type from a functor out of the set of valid operator() signatures. More...;  ; struct  ROOT::Internal::GetFunctorType< T(F::*)(const T *, const double *) const >;  ; struct  ROOT::Internal::GetFunctorType< T(F::*)(const T *, const double *)>;  ; struct  ROOT::Internal::GetFunctorType< T(F::*)(T *, double *) const >;  ; struct  ROOT::Internal::GetFunctorType< T(F::*)(T *, double *)>;  ; class  TF1;  1-Dim function class More...;  ; struct  ROOT::Internal::TF1Builder< Func >;  Internal class used by TF1 for defining template specialization for different TF1 constructors More...;  ; struct  ROOT::Internal::TF1Builder< const char * >;  TF1 building from a string used to build a TFormula based on a lambda function. More...;  ; struct  ROOT::Internal::TF1Builder< Func * >;  ; struct  TF1::TF1FunctorPointer;  ; struct  TF1::TF1FunctorPointerImpl< T >;  ; class  TF1Parameters;  TF1 Parameters class. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8h.html:87,Load,Loading,87,doc/master/TF1_8h.html,https://root.cern,https://root.cern/doc/master/TF1_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF1.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 18/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// ---------------------------------- F1.h; 12 ; 13#ifndef ROOT_TF1; 14#define ROOT_TF1; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TF1 //; 19// //; 20// The Parametric 1-D function //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""RConfigure.h""; 25#include <functional>; 26#include <cassert>; 27#include <memory>; 28#include <string>; 29#include <vector>; 30#include ""TFormula.h""; 31#include ""TMethodCall.h""; 32#include ""TAttLine.h""; 33#include ""TAttFill.h""; 34#include ""TAttMarker.h""; 35#include ""TF1AbsComposition.h""; 36#include ""TMath.h""; 37#include ""Math/Types.h""; 38#include ""Math/ParamFunctor.h""; 39 ; 40#include <string>; 41 ; 42class TF1;; 43class TH1;; 44class TAxis;; 45class TRandom;; 46 ; 47namespace ROOT {; 48 namespace Fit {; 49 class FitResult;; 50 }; 51}; 52 ; 53class TF1Parameters {; 54public:; 55 TF1Parameters() {} // needed for the I/O; 56 TF1Parameters(Int_t npar) :; 57 fParameters(std::vector<Double_t>(npar)),; 58 fParNames(std::vector<std::string>(npar)); 59 {; 60 for (int i = 0; i < npar; ++i) {; 61 fParNames[i] = std::string(TString::Format(""p%d"", i).Data());; 62 }; 63 }; 64 // copy constructor; 65 TF1Parameters(const TF1Parameters &rhs) :; 66 fParameters(rhs.fParameters),; 67 fParNames(rhs.fParNames); 68 {}; 69 // assignment; 70 TF1Parameters &operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8h_source.html:84,Load,Loading,84,doc/master/TF1_8h_source.html,https://root.cern,https://root.cern/doc/master/TF1_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF1Convolution.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TF1Convolution.h File Reference. #include ""TF1AbsComposition.h""; #include <memory>; #include <vector>; #include ""TF1.h""; #include ""TGraph.h"". Include dependency graph for TF1Convolution.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TF1Convolution;  Class wrapping convolution of two functions. More...;  . histhistincTF1Convolution.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1Convolution_8h.html:98,Load,Loading,98,doc/master/TF1Convolution_8h.html,https://root.cern,https://root.cern/doc/master/TF1Convolution_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF1Convolution.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1Convolution.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Authors: Lorenzo Moneta, Aurélie Flandi 27/08/14; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 ROOT Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#ifndef ROOT_TF1Convolution__; 12#define ROOT_TF1Convolution__; 13 ; 14#include ""TF1AbsComposition.h""; 15#include <memory>; 16#include <vector>; 17#include ""TF1.h""; 18#include ""TGraph.h""; 19 ; 20class TF1Convolution : public TF1AbsComposition {; 21 std::unique_ptr<TF1> fFunction1; ///< First function to be convolved; 22 std::unique_ptr<TF1> fFunction2; ///< Second function to be convolved; 23 std::unique_ptr<TGraph> fGraphConv; ///<! Graph of the convolution; 24 ; 25 std::vector < Double_t > fParams1;; 26 std::vector < Double_t > fParams2;; 27 ; 28 std::vector< TString > fParNames; ///< Parameters' names; 29 ; 30 Double_t fXmin; ///< Minimal bound of the range of the convolution; 31 Double_t fXmax; ///< Maximal bound of the range of the convolution; 32 Int_t fNofParams1;; 33 Int_t fNofParams2;; 34 Int_t fCstIndex; ///< Index of the constant parameter f the first function; 35 Int_t fNofPoints; ///< Number of point for FFT array; 36 Bool_t fFlagFFT; ///< Choose FFT or numerical convolution; 37 Bool_t fFlagGraph = false; ///<! Tells if the graph is already done or not; 38 static Double_t fgExtraRangeFraction; ///<! Additional default fraction of the range used for FFT convolution; 39 ; 40 Double_t EvalNumConv(Double_t t);; 41 Double_t EvalFFTConv(Double_t t);; 42 void InitializeDataMembers(TF1* function1, TF1* function2, Bool_t useFFT);; 43 void MakeFFTConv();; 44 ; 45public:; 46 TF1Convolution();; 47 TF1Convolution(TF1 *function1, TF1 *function2, Bool_t useFFT = true);; 48 TF1Convo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1Convolution_8h_source.html:95,Load,Loading,95,doc/master/TF1Convolution_8h_source.html,https://root.cern,https://root.cern/doc/master/TF1Convolution_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF1NormSum.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TF1NormSum.h File Reference. #include ""TF1AbsComposition.h""; #include <vector>; #include <memory>; #include ""TF1.h"". Include dependency graph for TF1NormSum.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TF1NormSum;  Class adding two functions: c1*f1+c2*f2. More...;  . histhistincTF1NormSum.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1NormSum_8h.html:94,Load,Loading,94,doc/master/TF1NormSum_8h.html,https://root.cern,https://root.cern/doc/master/TF1NormSum_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF1NormSum.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1NormSum.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Authors: Lorenzo Moneta, Aurélie Flandi 27/08/14; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 ROOT Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#ifndef ROOT_TF1NormSum__; 12#define ROOT_TF1NormSum__; 13 ; 14#include ""TF1AbsComposition.h""; 15#include <vector>; 16#include <memory>; 17#include ""TF1.h""; 18 ; 19class TF1NormSum : public TF1AbsComposition {; 20 ; 21protected:; 22 unsigned int fNOfFunctions; ///< Number of functions to add; 23 Double_t fScale; ///< Fixed Scale parameter to normalize function (e.g. bin width); 24 Double_t fXmin; ///< Minimal bound of range of NormSum; 25 Double_t fXmax; ///< Maximal bound of range of NormSum; 26 std::vector<std::unique_ptr<TF1>> fFunctions; ///< Vector of size fNOfFunctions containing TF1 functions; 27 std::vector < Double_t > fCoeffs; ///< Vector of size afNOfFunctions containing coefficients in front of each function; 28 std::vector < Int_t > fCstIndexes; ///< Vector with size of fNOfFunctions containing the index of the constant parameter/ function (the removed ones); 29 std::vector< TString > fParNames; ///< Parameter names; 30 ; 31 void InitializeDataMembers(const std::vector<TF1 *> &functions, const std::vector<Double_t> &coeffs,; 32 Double_t scale); // acts as a constructor; 33 ; 34public:; 35 ; 36 TF1NormSum();; 37 TF1NormSum(const std::vector <TF1*>&functions, const std::vector <Double_t> &coeffs, Double_t scale = 1.);; 38 TF1NormSum(TF1* function1, TF1* function2, Double_t coeff1 = 1., Double_t coeff2 = 1., Double_t scale = 1.);; 39 TF1NormSum(TF1* function1, TF1* function2, TF1*function3, Double_t coeff1 = 1., Double_t coeff2 = 1., Double_t coeff3 = 1., Double_t scale = 1.);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1NormSum_8h_source.html:91,Load,Loading,91,doc/master/TF1NormSum_8h_source.html,https://root.cern,https://root.cern/doc/master/TF1NormSum_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF2.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TF2.h File Reference. #include ""TF1.h""; #include ""TArrayD.h"". Include dependency graph for TF2.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TF2;  A 2-Dim function with parameters. More...;  . histhistincTF2.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8h.html:87,Load,Loading,87,doc/master/TF2_8h.html,https://root.cern,https://root.cern/doc/master/TF2_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF2.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF2.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 23/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// ---------------------------------- F2.h; 12 ; 13#ifndef ROOT_TF2; 14#define ROOT_TF2; 15 ; 16 ; 17 ; 18//////////////////////////////////////////////////////////////////////////; 19// //; 20// TF2 //; 21// //; 22// The Parametric 2-D function //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TF1.h""; 27#include ""TArrayD.h""; 28 ; 29class TF2 : public TF1 {; 30 ; 31protected:; 32 Double_t fYmin; ///< Lower bound for the range in y; 33 Double_t fYmax; ///< Upper bound for the range in y; 34 Int_t fNpy; ///< Number of points along y used for the graphical representation; 35 TArrayD fContour; ///< Array to display contour levels; 36 ; 37public:; 38 TF2();; 39 TF2(const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Option_t * opt = nullptr);; 40 TF2(const char *name, Double_t (*fcn)(Double_t *, Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Int_t npar=0,Int_t ndim = 2);; 41 TF2(const char *name, Double_t (*fcn)(const Double_t *, const Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Int_t npar=0, Int_t ndim = 2);; 42 ; 43 // Constructor using a functor; 44 TF2(const char *name, ROOT::Math::ParamFunctor f, Double_t xmin = 0, Double_t xmax = 1, Double_t ymin = 0, Double_t ymax = 1, Int_t npar = 0, Int_t ndim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8h_source.html:84,Load,Loading,84,doc/master/TF2_8h_source.html,https://root.cern,https://root.cern/doc/master/TF2_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TF3.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF3.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 27/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// ---------------------------------- F3.h; 12 ; 13#ifndef ROOT_TF3; 14#define ROOT_TF3; 15 ; 16 ; 17 ; 18//////////////////////////////////////////////////////////////////////////; 19// //; 20// TF3 //; 21// //; 22// The Parametric 3-D function //; 23// //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TF2.h""; 27 ; 28class TF3 : public TF2 {; 29 ; 30protected:; 31 Double_t fZmin; ///< Lower bound for the range in z; 32 Double_t fZmax; ///< Upper bound for the range in z; 33 Int_t fNpz; ///< Number of points along z used for the graphical representation; 34 Bool_t fClipBoxOn{kFALSE}; ///<! Is clip box on; 35 Double_t fClipBox[3]; ///<! Coordinates of clipbox; 36public:; 37 TF3();; 38 TF3(const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, Double_t ymin=0,; 39 Double_t ymax=1, Double_t zmin=0, Double_t zmax=1, Option_t * opt = nullptr);; 40 TF3(const char *name, Double_t (*fcn)(Double_t *, Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0,; 41 Double_t ymax=1, Double_t zmin=0, Double_t zmax=1, Int_t npar=0, Int_t ndim = 3);; 42 TF3(const char *name, Double_t (*fcn)(const Double_t *, const Double_t *), Double_t xmin=0, Double_t xmax=1, Double_t ymin=0,; 43 Double_t ymax=1, Double_t zmin=0, Double_t zmax=1, Int_t npar=0, Int_t ndim = 3);; 44 ; 45 // Constructor using a functor; 46 TF3(const char *na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF3_8h_source.html:84,Load,Loading,84,doc/master/TF3_8h_source.html,https://root.cern,https://root.cern/doc/master/TF3_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TFitResult.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TFitResult.h File Reference. #include ""TNamed.h""; #include ""Fit/FitResult.h""; #include ""TMatrixDSym.h""; #include <string>. Include dependency graph for TFitResult.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TFitResult;  Extends the ROOT::Fit::Result class with a TNamed inheritance providing easy possibility for I/O. More...;  . histhistincTFitResult.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResult_8h.html:94,Load,Loading,94,doc/master/TFitResult_8h.html,https://root.cern,https://root.cern/doc/master/TFitResult_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TFitResult.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResult.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: David Gonzalez Maline Tue Nov 10 15:01:24 2009; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFitResult; 13#define ROOT_TFitResult; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TFitResult //; 18// //; 19// Provides a way to view the fit result and to store them. //; 20// //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25 ; 26#include ""Fit/FitResult.h""; 27 ; 28#include ""TMatrixDSym.h""; 29 ; 30#include <string>; 31 ; 32class TGraph;; 33 ; 34class TFitResult:public TNamed, public ROOT::Fit::FitResult {; 35 ; 36public:; 37 ; 38 // Default constructor for I/O; 39 TFitResult(int status = 0): TNamed(""TFitResult"",""TFitResult""),; 40 ROOT::Fit::FitResult() {; 41 fStatus = status;; 42 };; 43 ; 44 // constructor from name and title; 45 TFitResult(const char * name, const char * title) :; 46 TNamed(name,title),; 47 ROOT::Fit::FitResult(); 48 {}; 49 ; 50 // constructor from an FitResult; 51 TFitResult(const ROOT::Fit::FitResult& f);; 52 ; 53 ~TFitResult() override {}; 54 ; 55 ; 56 void Print(Option_t *option="""") const override;; 57 ; 58 TMatrixDSym GetCovarianceMatrix() const;; 59 ; 60 TMatrixDSym GetCorrelationMatrix() const;; 61 ; 62 // scan likelihood value of parameter and fill the given graph.; 63 using ROOT::Fit::FitResult::Scan;; 64 bool Scan(unsigned int ipar, TGraph * gr, double xmin = 0, d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResult_8h_source.html:91,Load,Loading,91,doc/master/TFitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/TFitResult_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TFitResultPtr.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResultPtr.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: David Gonzalez Maline Tue Nov 10 15:01:24 2009; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFitResultPtr; 13#define ROOT_TFitResultPtr; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TFitResultPtr //; 18// //; 19// Provides an indirection to TFitResult class and with a semantics //; 20// identical to a TFitResult pointer //; 21// //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""Rtypes.h""; 26 ; 27#include <memory>; 28#include <string>; 29 ; 30class TFitResult;; 31 ; 32class TFitResultPtr {; 33public:; 34 ; 35 TFitResultPtr(int status = -1): fStatus(status), fPointer(nullptr) {}; 36 ; 37 TFitResultPtr(const std::shared_ptr<TFitResult> & p);; 38 ; 39 TFitResultPtr(TFitResult *p);; 40 ; 41 TFitResultPtr(const TFitResultPtr& rhs);; 42 ; 43 operator int() const { return fStatus; }; 44 ; 45 TFitResult& operator*() const;; 46 ; 47 TFitResult* operator->() const;; 48 ; 49 TFitResult* Get() const;; 50 ; 51 TFitResultPtr& operator= (const TFitResultPtr& rhs);; 52 ; 53 virtual ~TFitResultPtr();; 54 ; 55private:; 56 ; 57 int fStatus; ///< fit status code; 58 std::shared_ptr<TFitResult> fPointer; ///<! Smart Pointer to TFitResult class; 59 ; 60 ClassDef(TFitResultPtr,2) //indirection to TFitResult; 61};; 62 ; 63namespace cling {; 64 std::string printValue(const TFitResultPtr* val);; 65}; 66#endif; Rtypes.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResultPtr_8h_source.html:94,Load,Loading,94,doc/master/TFitResultPtr_8h_source.html,https://root.cern,https://root.cern/doc/master/TFitResultPtr_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraph.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGraph.h File Reference. #include ""TNamed.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TVectorFfwd.h""; #include ""TVectorDfwd.h""; #include ""TFitResultPtr.h"". Include dependency graph for TGraph.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGraph;  A TGraph is an object made of two arrays X and Y with npoints each. More...;  . histhistincTGraph.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8h.html:90,Load,Loading,90,doc/master/TGraph_8h.html,https://root.cern,https://root.cern/doc/master/TGraph_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraph.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun, Olivier Couet 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraph; 13#define ROOT_TGraph; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraph //; 19// //; 20// Graph graphics class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TAttLine.h""; 26#include ""TAttFill.h""; 27#include ""TAttMarker.h""; 28#include ""TVectorFfwd.h""; 29#include ""TVectorDfwd.h""; 30#include ""TFitResultPtr.h""; 31 ; 32class TBrowser;; 33class TAxis;; 34class TH1;; 35class TH1F;; 36class TCollection;; 37class TF1;; 38class TSpline;; 39class TList;; 40 ; 41class TGraph : public TNamed, public TAttLine, public TAttFill, public TAttMarker {; 42 ; 43protected:; 44 ; 45 Int_t fMaxSize; ///<!Current dimension of arrays fX and fY; 46 Int_t fNpoints; ///< Number of points <= fMaxSize; 47 Double_t *fX; ///<[fNpoints] array of X points; 48 Double_t *fY; ///<[fNpoints] array of Y points; 49 TList *fFunctions; ///< Pointer to list of functions (fits and user); 50 TH1F *fHistogram; ///< Pointer to histogram used for drawing axis; 51 Double_t fMinimum; ///< Minimum value for plotting along y; 52 Double_t fMaximum; ///< Maximum value for plotting along y; 53 TString fOption; ///< Options used for drawing the graph; 54 ; 55 static void SwapValues(Double_t* arr, Int_t pos1, Int_t pos2);; 56 virtual void SwapPoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8h_source.html:87,Load,Loading,87,doc/master/TGraph_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraph2D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGraph2D.h File Reference. #include ""TNamed.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TFitResultPtr.h"". Include dependency graph for TGraph2D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGraph2D;  Graphics object made of three arrays X, Y and Z with the same number of points each. More...;  . histhistincTGraph2D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8h.html:92,Load,Loading,92,doc/master/TGraph2D_8h.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraph2D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2D.h. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2D.h,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraph2D; 13#define ROOT_TGraph2D; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraph2D //; 19// //; 20// Graph 2D graphics class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TAttLine.h""; 26#include ""TAttFill.h""; 27#include ""TAttMarker.h""; 28 ; 29class TAxis;; 30class TList;; 31class TF2;; 32class TH1;; 33class TH2;; 34class TH2D;; 35class TView;; 36class TDirectory;; 37class TVirtualHistPainter;; 38 ; 39#include ""TFitResultPtr.h""; 40 ; 41class TGraph2D : public TNamed, public TAttLine, public TAttFill, public TAttMarker {; 42 ; 43protected:; 44 ; 45 Int_t fNpoints; ///< Number of points in the data set; 46 Int_t fNpx; ///< Number of bins along X in fHistogram; 47 Int_t fNpy; ///< Number of bins along Y in fHistogram; 48 Int_t fMaxIter; ///< Maximum number of iterations to find Delaunay triangles; 49 Int_t fSize; ///<!Real size of fX, fY and fZ; 50 Double_t *fX; ///<[fNpoints]; 51 Double_t *fY; ///<[fNpoints] Data set to be plotted; 52 Double_t *fZ; ///<[fNpoints]; 53 Double_t fMinimum; ///< Minimum value for plotting along z; 54 Double_t fMaximum; ///< Maximum value for plotting along z; 55 Double_t fMargin; ///< Extra space (in %) around interpolated area for fHistogram; 56 Double_t fZout; ///",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8h_source.html:89,Load,Loading,89,doc/master/TGraph2D_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraph2DErrors.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGraph2DErrors.h File Reference. #include ""TGraph2D.h"". Include dependency graph for TGraph2DErrors.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGraph2DErrors;  Graph 2D class with errors. More...;  . histhistincTGraph2DErrors.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8h.html:98,Load,Loading,98,doc/master/TGraph2DErrors_8h.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraph2DErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2DErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2DErrors.h,v 1.00; 2// Author: Olivier Couet 26/11/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraph2DErrors; 13#define ROOT_TGraph2DErrors; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraph2DErrors //; 19// //; 20// a 2D Graph with error bars //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TGraph2D.h""; 25 ; 26class TGraph2DErrors : public TGraph2D {; 27 ; 28protected:; 29 Double_t *fEX{nullptr}; ///<[fNpoints] array of X errors; 30 Double_t *fEY{nullptr}; ///<[fNpoints] array of Y errors; 31 Double_t *fEZ{nullptr}; ///<[fNpoints] array of Z errors; 32 ; 33public:; 34 TGraph2DErrors();; 35 TGraph2DErrors(Int_t n);; 36 TGraph2DErrors(Int_t n, Double_t *x, Double_t *y, Double_t *z,; 37 Double_t *ex = nullptr, Double_t *ey = nullptr, Double_t *ez = nullptr, Option_t *option = """");; 38 TGraph2DErrors(const TGraph2DErrors&);; 39 TGraph2DErrors& operator=(const TGraph2DErrors&);; 40 ~TGraph2DErrors() override;; 41 virtual void AddPointError(Double_t x, Double_t y, Double_t z, Double_t ex = 0., Double_t ey = 0., Double_t ez = 0.);; 42 Double_t GetErrorX(Int_t bin) const override;; 43 Double_t GetErrorY(Int_t bin) const override;; 44 Double_t GetErrorZ(Int_t bin) const override;; 45 Double_t *GetEX() const override {return fEX;}; 46 Double_t *GetEY() const override {return fEY;}; 47 Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8h_source.html:95,Load,Loading,95,doc/master/TGraph2DErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraphAsymmErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphAsymmErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 03/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphAsymmErrors; 13#define ROOT_TGraphAsymmErrors; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraphAsymmErrors //; 19// //; 20// a Graph with asymmetric error bars //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TGraph.h""; 25 ; 26class TGraphAsymmErrors : public TGraph {; 27 ; 28protected:; 29 Double_t *fEXlow{nullptr}; ///<[fNpoints] array of X low errors; 30 Double_t *fEXhigh{nullptr}; ///<[fNpoints] array of X high errors; 31 Double_t *fEYlow{nullptr}; ///<[fNpoints] array of Y low errors; 32 Double_t *fEYhigh{nullptr}; ///<[fNpoints] array of Y high errors; 33 ; 34 void SwapPoints(Int_t pos1, Int_t pos2) override;; 35 void UpdateArrays(const std::vector<Int_t> &sorting_indices, Int_t numSortedPoints, Int_t low) override;; 36 ; 37 Double_t** Allocate(Int_t size) override;; 38 void CopyAndRelease(Double_t **newarrays,; 39 Int_t ibegin, Int_t iend, Int_t obegin) override;; 40 Bool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend,; 41 Int_t obegin) override;; 42 Bool_t CtorAllocate();; 43 void FillZero(Int_t begin, Int_t end,; 44 Bool_t from_ctor = kTRUE) override;; 45 Bool_t DoMerge(const TGraph * g) override;; 46 ; 47public:; 48 TGraphAsymmErrors();; 49 TGraphAsymmErrors(Int_t n);; 50 TGraphAsymmErrors(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8h_source.html:98,Load,Loading,98,doc/master/TGraphAsymmErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraphBentErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphBentErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Dave Morrison 30/06/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphBentErrors; 13#define ROOT_TGraphBentErrors; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TGraphBentErrors //; 18// //; 19// a Graph with bent, asymmetric error bars //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TGraph.h""; 24 ; 25class TGraphBentErrors : public TGraph {; 26 ; 27protected:; 28 Double_t *fEXlow; ///<[fNpoints] array of X low errors; 29 Double_t *fEXhigh; ///<[fNpoints] array of X high errors; 30 Double_t *fEYlow; ///<[fNpoints] array of Y low errors; 31 Double_t *fEYhigh; ///<[fNpoints] array of Y high errors; 32 ; 33 Double_t *fEXlowd; ///<[fNpoints] array of X low displacements; 34 Double_t *fEXhighd; ///<[fNpoints] array of X high displacements; 35 Double_t *fEYlowd; ///<[fNpoints] array of Y low displacements; 36 Double_t *fEYhighd; ///<[fNpoints] array of Y high displacements; 37 ; 38 void SwapPoints(Int_t pos1, Int_t pos2) override;; 39 void UpdateArrays(const std::vector<Int_t> &sorting_indices, Int_t numSortedPoints, Int_t low) override;; 40 ; 41 Double_t** Allocate(Int_t size) override;; 42 void CopyAndRelease(Double_t **newarrays,; 43 Int_t ibegin, Int_t iend, Int_t obegin) override;; 44 Bool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend,; 45 Int_t obegin) override;; 46 Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphBentErrors_8h_source.html:97,Load,Loading,97,doc/master/TGraphBentErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphBentErrors_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraphDelaunay.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphDelaunay.h. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraphDelaunay.h,v 1.00; 2// Author: Olivier Couet, Luke Jones (Royal Holloway, University of London); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphDelaunay; 13#define ROOT_TGraphDelaunay; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraphDelaunay //; 19// //; 20// This class uses the Delaunay triangles technique to interpolate and //; 21// render the data set. //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TNamed.h""; 26 ; 27class TGraph2D;; 28class TView;; 29 ; 30class TGraphDelaunay : public TNamed {; 31 ; 32private:; 33 ; 34 TGraphDelaunay(const TGraphDelaunay&) = delete;; 35 TGraphDelaunay& operator=(const TGraphDelaunay&) = delete;; 36 ; 37protected:; 38 ; 39 Int_t fNdt; ///<! Number of Delaunay triangles found; 40 Int_t fNpoints; ///<! Number of data points in fGraph2D; 41 Int_t fNhull; ///<! Number of points in the hull; 42 Double_t *fX; ///<! Pointer to fGraph2D->fX; 43 Double_t *fY; ///<! Pointer to fGraph2D->fY; 44 Double_t *fZ; ///<! Pointer to fGraph2D->fZ; 45 Double_t *fXN; ///<! fGraph2D vectors normalized of size fNpoints; 46 Double_t *fYN; ///<! fGraph2D vectors normalized of size fNpoints; 47 Double_t fXNmin; ///<! Minimum value of fXN; 48 Double_t fXNmax; ///<! Maximum value of fXN; 49 Double_t fYNmin; ///<! Minimum value of fYN; 50 Double_t fYNmax; ///<! Maximum value of fY",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphDelaunay_8h_source.html:95,Load,Loading,95,doc/master/TGraphDelaunay_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphDelaunay_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraphErrors.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TGraphErrors.h File Reference. #include ""TGraph.h"". Include dependency graph for TGraphErrors.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TGraphErrors;  A TGraphErrors is a TGraph with error bars. More...;  . histhistincTGraphErrors.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8h.html:96,Load,Loading,96,doc/master/TGraphErrors_8h.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraphErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 15/09/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphErrors; 13#define ROOT_TGraphErrors; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraphErrors //; 19// //; 20// a Graph with error bars //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TGraph.h""; 25 ; 26class TGraphErrors : public TGraph {; 27 ; 28protected:; 29 Double_t *fEX{nullptr}; ///<[fNpoints] array of X errors; 30 Double_t *fEY{nullptr}; ///<[fNpoints] array of Y errors; 31 ; 32 void SwapPoints(Int_t pos1, Int_t pos2) override;; 33 void UpdateArrays(const std::vector<Int_t> &sorting_indices, Int_t numSortedPoints, Int_t low) override;; 34 ; 35 Double_t** Allocate(Int_t size) override;; 36 void CopyAndRelease(Double_t **newarrays,; 37 Int_t ibegin, Int_t iend, Int_t obegin) override;; 38 Bool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend,; 39 Int_t obegin) override;; 40 Bool_t CtorAllocate();; 41 void FillZero(Int_t begin, Int_t end,; 42 Bool_t from_ctor = kTRUE) override;; 43 Bool_t DoMerge(const TGraph * g) override;; 44 ; 45 ; 46public:; 47 TGraphErrors();; 48 TGraphErrors(Int_t n);; 49 TGraphErrors(Int_t n, const Float_t *x, const Float_t *y, const Float_t *ex = nullptr, const Float_t *ey = nullptr);; 50 TGraphErrors(Int_t n, const Double_t *x, const Double_t *y, const Double_t *ex = nullptr, const D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8h_source.html:93,Load,Loading,93,doc/master/TGraphErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TGraphMultiErrors.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphMultiErrors.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Simon Spies 18/02/19; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2018-2019, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphMultiErrors; 13#define ROOT_TGraphMultiErrors; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TGraphMultiErrors //; 18// //; 19// a Graph with asymmetric error bars and multiple y errors //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TGraph.h""; 24#include <vector>; 25 ; 26class TArrayF;; 27class TArrayD;; 28 ; 29class TGraphMultiErrors : public TGraph {; 30 ; 31protected:; 32 Int_t fNYErrors; ///< The amount of different y-errors; 33 Int_t fSumErrorsMode; ///< How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum =; 34 ///< Absolute Addition; 35 Double_t *fExL; ///<[fNpoints] array of X low errors; 36 Double_t *fExH; ///<[fNpoints] array of X high errors; 37 std::vector<TArrayD> fEyL; ///< Two dimensional array of Y low errors; 38 std::vector<TArrayD> fEyH; ///< Two dimensional array of Y high errors; 39 mutable Double_t *fEyLSum = nullptr; ///<! Array of summed Y low errors for fitting; 40 mutable Double_t *fEyHSum = nullptr; ///<! Array of summed Y high errors for fitting; 41 std::vector<TAttFill> fAttFill; ///< The AttFill attributes of the different errors; 42 std::vector<TAttLine> fAttLine; ///< The AttLine attributes of the different errors; 43 ; 44 Double_t **Allocate(Int_t size) ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8h_source.html:98,Load,Loading,98,doc/master/TGraphMultiErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TH1.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Functions ; TH1.h File Reference. #include ""TAxis.h""; #include ""TAttLine.h""; #include ""TAttFill.h""; #include ""TAttMarker.h""; #include ""TArrayC.h""; #include ""TArrayS.h""; #include ""TArrayI.h""; #include ""TArrayL64.h""; #include ""TArrayF.h""; #include ""TArrayD.h""; #include ""Foption.h""; #include ""TVectorFfwd.h""; #include ""TVectorDfwd.h""; #include ""TFitResultPtr.h""; #include <cfloat>; #include <string>. Include dependency graph for TH1.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TH1;  TH1 is the base class of all histogram classes in ROOT. More...;  ; class  TH1C;  1-D histogram with a byte per channel (see TH1 documentation) More...;  ; class  TH1D;  1-D histogram with a double per channel (see TH1 documentation) More...;  ; class  TH1F;  1-D histogram with a float per channel (see TH1 documentation) More...;  ; class  TH1I;  1-D histogram with an int per channel (see TH1 documentation) More...;  ; class  TH1L;  1-D histogram with a long64 per channel (see TH1 documentation) More...;  ; class  TH1S;  1-D histogram with a short per channel (see TH1 documentation) More...;  . Functions; TH1C operator* (const TH1C &h1, const TH1C &h2);  Operator *. ;  ; TH1C operator* (const TH1C &h1, Double_t c1);  ; TH1D operator* (const TH1D &h1, const TH1D &h2);  Operator *. ;  ; TH1D operator* (const TH1D &h1, Double_t c1);  ; TH1F operator* (const TH1F &h1, const TH1F &h2);  Operator *. ;  ; TH1F operator* (const TH1F &h1, Double_t c1);  ; TH1I operator* (const TH1I &h1, const TH1I &h2);  Operator *. ;  ; TH1I operator* (const TH1I &h1, Double_t c1);  ; TH1L operator* (const TH1L &h1, const TH1L &h2);  Operator *. ;  ; TH1L operator* (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h.html:87,Load,Loading,87,doc/master/TH1_8h.html,https://root.cern,https://root.cern/doc/master/TH1_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TH1.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TH1; 13#define ROOT_TH1; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TH1 //; 19// //; 20// 1-Dim histogram base class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TAxis.h""; 25 ; 26#include ""TAttLine.h""; 27 ; 28#include ""TAttFill.h""; 29 ; 30#include ""TAttMarker.h""; 31 ; 32#include ""TArrayC.h""; 33#include ""TArrayS.h""; 34#include ""TArrayI.h""; 35#include ""TArrayL64.h""; 36#include ""TArrayF.h""; 37#include ""TArrayD.h""; 38#include ""Foption.h""; 39 ; 40#include ""TVectorFfwd.h""; 41#include ""TVectorDfwd.h""; 42 ; 43#include ""TFitResultPtr.h""; 44 ; 45#include <cfloat>; 46#include <string>; 47 ; 48class TF1;; 49class TH1D;; 50class TBrowser;; 51class TDirectory;; 52class TList;; 53class TCollection;; 54class TVirtualFFT;; 55class TVirtualHistPainter;; 56class TRandom;; 57 ; 58 ; 59class TH1 : public TNamed, public TAttLine, public TAttFill, public TAttMarker {; 60 ; 61public:; 62 ; 63 /// Enumeration specifying type of statistics for bin errors; 64 enum EBinErrorOpt {; 65 kNormal = 0, ///< Errors with Normal (Wald) approximation: errorUp=errorLow= sqrt(N); 66 kPoisson = 1 , ///< Errors from Poisson interval at 68.3% (1 sigma); 67 kPoisson2 = 2 ///< Errors from Poisson interval at 95% CL (~ 2 sigma); 68 };; 69 ; 70 /// Enumeration specifying which axes can",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h_source.html:84,Load,Loading,84,doc/master/TH1_8h_source.html,https://root.cern,https://root.cern/doc/master/TH1_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TH1F.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1F.h File Reference. #include ""TH1.h"". Include dependency graph for TH1F.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. histhistincTH1F.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1F_8h.html:88,Load,Loading,88,doc/master/TH1F_8h.html,https://root.cern,https://root.cern/doc/master/TH1F_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TH1I.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1I.h File Reference. #include ""TH1.h"". Include dependency graph for TH1I.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. histhistincTH1I.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1I_8h.html:88,Load,Loading,88,doc/master/TH1I_8h.html,https://root.cern,https://root.cern/doc/master/TH1I_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TH2.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TH2.h File Reference. #include ""TH1.h""; #include ""TMatrixFBasefwd.h""; #include ""TMatrixDBasefwd.h"". Include dependency graph for TH2.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TH2;  Service class for 2-D histogram classes. More...;  ; class  TH2C;  2-D histogram with a byte per channel (see TH1 documentation) More...;  ; class  TH2D;  2-D histogram with a double per channel (see TH1 documentation) More...;  ; class  TH2F;  2-D histogram with a float per channel (see TH1 documentation) More...;  ; class  TH2I;  2-D histogram with an int per channel (see TH1 documentation) More...;  ; class  TH2L;  2-D histogram with a long64 per channel (see TH1 documentation) More...;  ; class  TH2S;  2-D histogram with a short per channel (see TH1 documentation) More...;  . histhistincTH2.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8h.html:87,Load,Loading,87,doc/master/TH2_8h.html,https://root.cern,https://root.cern/doc/master/TH2_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TH2.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TH2; 13#define ROOT_TH2; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TH2 //; 19// //; 20// 2-Dim histogram base class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH1.h""; 25#include ""TMatrixFBasefwd.h""; 26#include ""TMatrixDBasefwd.h""; 27 ; 28class TProfile;; 29 ; 30class TH2 : public TH1 {; 31 ; 32protected:; 33 Double_t fScalefactor; ///< Scale factor; 34 Double_t fTsumwy; ///< Total Sum of weight*Y; 35 Double_t fTsumwy2; ///< Total Sum of weight*Y*Y; 36 Double_t fTsumwxy; ///< Total Sum of weight*X*Y; 37 ; 38 TH2();; 39 TH2(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 40 ,Int_t nbinsy,Double_t ylow,Double_t yup);; 41 TH2(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 42 ,Int_t nbinsy,Double_t ylow,Double_t yup);; 43 TH2(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 44 ,Int_t nbinsy,const Double_t *ybins);; 45 TH2(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 46 ,Int_t nbinsy,const Double_t *ybins);; 47 TH2(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 48 ,Int_t nbinsy,const Float_t *ybins);; 49 ; 50 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t w);; 51 virtual TH1D *DoProjection(bool onX, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8h_source.html:84,Load,Loading,84,doc/master/TH2_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TH2Poly.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2Poly.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Olivier Couet, Deniz Gunceler; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TH2Poly; 13#define ROOT_TH2Poly; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TH2Poly //; 18// //; 19// 2-Dim histogram with polygon bins //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TH2.h""; 24 ; 25class TH2PolyBin: public TObject{; 26 ; 27public:; 28 TH2PolyBin();; 29 TH2PolyBin(TObject *poly, Int_t bin_number);; 30 ~TH2PolyBin() override;; 31 ; 32 void ClearContent(){fContent = 0;}; 33 void Fill(Double_t w) {fContent = fContent+w; SetChanged(true);}; 34 Double_t GetArea();; 35 Double_t GetContent() const{return fContent;}; 36 Bool_t GetChanged() const{return fChanged;}; 37 Int_t GetBinNumber() const {return fNumber;}; 38 TObject *GetPolygon() const {return fPoly;}; 39 Double_t GetXMax();; 40 Double_t GetXMin();; 41 Double_t GetYMax();; 42 Double_t GetYMin();; 43 Bool_t IsInside(Double_t x, Double_t y) const;; 44 void SetChanged(Bool_t flag){fChanged = flag;}; 45 void SetContent(Double_t content){fContent = content; SetChanged(true);}; 46 ; 47protected:; 48 Bool_t fChanged; ///< For the 3D Painter; 49 Int_t fNumber; ///< Bin number of the bin in TH2Poly; 50 TObject *fPoly; ///< Object holding the polygon definition; 51 Double_t fArea; ///< Bin area; 52 Double_t fContent; ///< Bin content; 53 Double_t fXmin; ///< X minimum value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8h_source.html:88,Load,Loading,88,doc/master/TH2Poly_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TH3.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH3.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 27/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TH3; 13#define ROOT_TH3; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TH3 //; 19// //; 20// 3-Dim histogram base class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH1.h""; 25 ; 26#include ""TAtt3D.h""; 27 ; 28class TH2D;; 29class TProfile2D;; 30 ; 31class TH3 : public TH1, public TAtt3D {; 32 ; 33protected:; 34 Double_t fTsumwy; ///< Total Sum of weight*Y; 35 Double_t fTsumwy2; ///< Total Sum of weight*Y*Y; 36 Double_t fTsumwxy; ///< Total Sum of weight*X*Y; 37 Double_t fTsumwz; ///< Total Sum of weight*Z; 38 Double_t fTsumwz2; ///< Total Sum of weight*Z*Z; 39 Double_t fTsumwxz; ///< Total Sum of weight*X*Z; 40 Double_t fTsumwyz; ///< Total Sum of weight*Y*Z; 41 ; 42 TH3();; 43 TH3(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 44 ,Int_t nbinsy,Double_t ylow,Double_t yup; 45 ,Int_t nbinsz,Double_t zlow,Double_t zup);; 46 TH3(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 47 ,Int_t nbinsy,const Float_t *ybins; 48 ,Int_t nbinsz,const Float_t *zbins);; 49 TH3(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 50 ,Int_t nbinsy,const Double_t *ybins; 51 ,Int_t nbinsz,const Double_t *zbins);; 52 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t z, Double_t w);; 53 ; 54 v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8h_source.html:84,Load,Loading,84,doc/master/TH3_8h_source.html,https://root.cern,https://root.cern/doc/master/TH3_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/THStack.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THStack.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 10/12/2001; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_THStack; 13#define ROOT_THStack; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// THStack //; 19// //; 20// A collection of histograms //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TObjArray.h""; 26 ; 27#ifdef R__LESS_INCLUDES; 28class TH1;; 29class TList;; 30class TAxis;; 31#else; 32#include ""TH1.h""; 33#endif; 34 ; 35#include <limits>; 36 ; 37class TBrowser;; 38class TFileMergeInfo;; 39 ; 40class THStack : public TNamed {; 41private:; 42 THStack& operator=(const THStack&) = delete;; 43 ; 44protected:; 45 TList *fHists{nullptr}; ///< Pointer to array of TH1; 46 TObjArray *fStack{nullptr}; ///<! Pointer to array of sums of TH1; 47 TH1 *fHistogram{nullptr}; ///< Pointer to histogram used for drawing axis; 48 Double_t fMaximum{-1111}; ///< Maximum value for plotting along y; 49 Double_t fMinimum{-1111}; ///< Minimum value for plotting along y; 50 ; 51 void BuildStack();; 52 ; 53 void BuildAndPaint(Option_t *chopt, Bool_t paint, Bool_t rebuild_stack = kFALSE);; 54 ; 55public:; 56 ; 57 THStack() {}; 58 THStack(const char *name, const char *title);; 59 THStack(TH1* hist, Option_t *axis=""x"",; 60 const char *name = nullptr, const char *title = nullptr,; 61 Int_t firstbin = 1, Int_t lastbin = -1,; 62 Int_t firstbin2 = 1, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THStack_8h_source.html:88,Load,Loading,88,doc/master/THStack_8h_source.html,https://root.cern,https://root.cern/doc/master/THStack_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/THn.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs ; THn.h File Reference. #include ""THnBase.h""; #include ""TNDArray.h""; #include ""TArrayD.h""; #include ""TAxis.h"". Include dependency graph for THn.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  THn;  Multidimensional histogram. More...;  ; class  THnT< T >;  Templated implementation of the abstract base THn. More...;  . Typedefs; typedef THnT< Char_t > THnC;  ; typedef THnT< Double_t > THnD;  ; typedef THnT< Float_t > THnF;  ; typedef THnT< Int_t > THnI;  ; typedef THnT< Long64_t > THnL;  ; typedef THnT< Long64_t > THnL64;  ; typedef THnT< Short_t > THnS;  . Typedef Documentation. ◆ THnC. typedef THnT<Char_t> THnC. Definition at line 245 of file THn.h. ◆ THnD. typedef THnT<Double_t> THnD. Definition at line 244 of file THn.h. ◆ THnF. typedef THnT<Float_t> THnF. Definition at line 243 of file THn.h. ◆ THnI. typedef THnT<Int_t> THnI. Definition at line 247 of file THn.h. ◆ THnL. typedef THnT<Long64_t> THnL. Definition at line 248 of file THn.h. ◆ THnL64. typedef THnT<Long64_t> THnL64. Definition at line 249 of file THn.h. ◆ THnS. typedef THnT<Short_t> THnS. Definition at line 246 of file THn.h. histhistincTHn.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THn_8h.html:87,Load,Loading,87,doc/master/THn_8h.html,https://root.cern,https://root.cern/doc/master/THn_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/THn.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THn.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Axel Naumann, Nov 2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_THN; 13#define ROOT_THN; 14 ; 15#include ""THnBase.h""; 16 ; 17#include ""TNDArray.h""; 18 ; 19#include ""TArrayD.h""; 20 ; 21#include ""TAxis.h""; 22 ; 23class TH1;; 24class TH1D;; 25class TH2D;; 26class TH3D;; 27class THnSparse;; 28class TF1;; 29 ; 30class THn: public THnBase {; 31 ; 32protected:; 33 void AllocCoordBuf() const;; 34 void InitStorage(Int_t* nbins, Int_t chunkSize) override;; 35 ; 36 THn() = default;; 37 THn(const char* name, const char* title, Int_t dim, const Int_t* nbins,; 38 const Double_t* xmin, const Double_t* xmax);; 39 ; 40 THn(const char *name, const char *title, Int_t dim, const Int_t *nbins,; 41 const std::vector<std::vector<double>> &xbins);; 42 ; 43public:; 44 ~THn() override;; 45 ; 46 static THn* CreateHn(const char* name, const char* title, const TH1* h1) {; 47 return (THn*) CreateHnAny(name, title, h1, kFALSE /*THn*/, -1);; 48 }; 49 static THn* CreateHn(const char* name, const char* title, const THnBase* hn) {; 50 return (THn*) CreateHnAny(name, title, hn, kFALSE /*THn*/, -1);; 51 }; 52 ; 53 ROOT::Internal::THnBaseBinIter* CreateIter(Bool_t respectAxisRange) const override;; 54 Long64_t GetNbins() const override { return GetArray().GetNbins(); }; 55 ; 56 Long64_t GetBin(const Int_t* idx) const override {; 57 return GetArray().GetBin(idx);; 58 }; 59 Long64_t GetBin(const Double_t* x) const override {; 60 if (fCoordBuf.empty()); 61 Al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THn_8h_source.html:84,Load,Loading,84,doc/master/THn_8h_source.html,https://root.cern,https://root.cern/doc/master/THn_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/THnSparse.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THnSparse.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Axel Naumann (2007-09-11); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_THnSparse; 13#define ROOT_THnSparse; 14 ; 15/*************************************************************************; 16 ; 17 THnSparse: histogramming multi-dimensional, sparse distributions in; 18 a memory-efficient way.; 19 ; 20*************************************************************************/; 21 ; 22 ; 23#include ""THnBase.h""; 24#include ""TExMap.h""; 25#include ""THnSparse_Internal.h""; 26 ; 27// needed only for template instantiations of THnSparseT:; 28#include ""TArrayF.h""; 29#include ""TArrayL.h""; 30#include ""TArrayL64.h""; 31#include ""TArrayI.h""; 32#include ""TArrayS.h""; 33#include ""TArrayC.h""; 34 ; 35class THnSparseCompactBinCoord;; 36 ; 37class THnSparse: public THnBase {; 38 private:; 39 Int_t fChunkSize; ///< Number of entries for each chunk; 40 Long64_t fFilledBins; ///< Number of filled bins; 41 TObjArray fBinContent; ///< Array of THnSparseArrayChunk; 42 TExMap fBins; ///<! Filled bins; 43 TExMap fBinsContinued; ///<! Filled bins for non-unique hashes, containing pairs of (bin index 0, bin index 1); 44 THnSparseCompactBinCoord *fCompactCoord; ///<! Compact coordinate; 45 ; 46 THnSparse(const THnSparse&) = delete;; 47 THnSparse& operator=(const THnSparse&) = delete;; 48 ; 49 protected:; 50 ; 51 THnSparse();; 52 THnSparse(const char* name, const char* title, Int_t dim,; 53 const Int_t* nbins, const Double_t* xmin, const Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THnSparse_8h_source.html:90,Load,Loading,90,doc/master/THnSparse_8h_source.html,https://root.cern,https://root.cern/doc/master/THnSparse_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TMultiGraph.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMultiGraph.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TMultiGraph; 13#define ROOT_TMultiGraph; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TMultiGraph //; 19// //; 20// A collection of TGraph objects //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TCollection.h""; 26#include ""TFitResultPtr.h""; 27 ; 28class TH1F;; 29class TAxis;; 30class TBrowser;; 31class TGraph;; 32class TF1;; 33 ; 34class TMultiGraph : public TNamed {; 35 ; 36protected:; 37 TList *fGraphs{nullptr}; ///< Pointer to list of TGraphs; 38 TList *fFunctions{nullptr}; ///< Pointer to list of functions (fits and user); 39 TH1F *fHistogram{nullptr}; ///< Pointer to histogram used for drawing axis; 40 Double_t fMaximum{-1111}; ///< Maximum value for plotting along y; 41 Double_t fMinimum{-1111}; ///< Minimum value for plotting along y; 42 ; 43 TMultiGraph(const TMultiGraph&) = delete;; 44 TMultiGraph& operator=(const TMultiGraph&) = delete;; 45 ; 46public:; 47 TMultiGraph();; 48 TMultiGraph(const char *name, const char *title);; 49 ~TMultiGraph() override;; 50 ; 51 virtual void Add(TGraph *graph, Option_t *chopt = """");; 52 virtual void Add(TMultiGraph *multigraph, Option_t *chopt = """");; 53 void Browse(TBrowser *b) override;; 54 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 55 void Draw(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMultiGraph_8h_source.html:92,Load,Loading,92,doc/master/TMultiGraph_8h_source.html,https://root.cern,https://root.cern/doc/master/TMultiGraph_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TPrincipal.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPrincipal.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Christian Holm Christensen 1/8/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TPrincipal; 13#define ROOT_TPrincipal; 14 ; 15#include ""TNamed.h""; 16#include ""TVectorD.h""; 17#include ""TMatrixD.h""; 18 ; 19class TList;; 20 ; 21class TPrincipal : public TNamed {; 22 ; 23protected:; 24 Int_t fNumberOfDataPoints; ///< Number of data points; 25 Int_t fNumberOfVariables; ///< Number of variables; 26 ; 27 TVectorD fMeanValues; ///< Mean value over all data points; 28 TVectorD fSigmas; ///< vector of sigmas; 29 TMatrixD fCovarianceMatrix; ///< Covariance matrix; 30 ; 31 TMatrixD fEigenVectors; ///< Eigenvector matrix of trans; 32 TVectorD fEigenValues; ///< Eigenvalue vector of trans; 33 ; 34 TVectorD fOffDiagonal; ///< Elements of the tridiagonal; 35 ; 36 TVectorD fUserData; ///< Vector of original data points; 37 ; 38 Double_t fTrace; ///< Trace of covarience matrix; 39 ; 40 TList *fHistograms; ///< List of histograms; 41 ; 42 Bool_t fIsNormalised; ///< Normalize matrix?; 43 Bool_t fStoreData; ///< Should we store input data?; 44 ; 45 TPrincipal(const TPrincipal&);; 46 TPrincipal& operator=(const TPrincipal&);; 47 ; 48 void MakeNormalised();; 49 void MakeRealCode(const char *filename, const char *prefix, Option_t *option="""");; 50 ; 51public:; 52 TPrincipal();; 53 ~TPrincipal() override;; 54 TPrincipal(Long64_t nVariables, Option_t *opt=""ND"");; 55 ; 56 virtual void AddRow(const Double_t *x);; 57 void Browse(TBrowser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPrincipal_8h_source.html:91,Load,Loading,91,doc/master/TPrincipal_8h_source.html,https://root.cern,https://root.cern/doc/master/TPrincipal_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TProfile.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; TProfile.h File Reference. #include ""TH1.h"". Include dependency graph for TProfile.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TProfile;  Profile Histogram. More...;  . Enumerations; enum  EErrorType { kERRORMEAN = 0; , kERRORSPREAD; , kERRORSPREADI; , kERRORSPREADG; };  . Enumeration Type Documentation. ◆ EErrorType. enum EErrorType. EnumeratorkERRORMEAN ; kERRORSPREAD ; kERRORSPREADI ; kERRORSPREADG . Definition at line 28 of file TProfile.h. histhistincTProfile.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8h.html:92,Load,Loading,92,doc/master/TProfile_8h.html,https://root.cern,https://root.cern/doc/master/TProfile_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TProfile.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 29/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TProfile; 13#define ROOT_TProfile; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TProfile //; 19// //; 20// Profile histogram class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH1.h""; 25 ; 26class TProfileHelper;; 27 ; 28enum EErrorType { kERRORMEAN = 0, kERRORSPREAD, kERRORSPREADI, kERRORSPREADG };; 29 ; 30class TF1;; 31 ; 32class TProfile : public TH1D {; 33 ; 34public:; 35 friend class TProfileHelper;; 36 friend class TH1Merger;; 37 ; 38protected:; 39 TArrayD fBinEntries; ///< number of entries per bin; 40 EErrorType fErrorMode; ///< Option to compute errors; 41 Double_t fYmin; ///< Lower limit in Y (if set); 42 Double_t fYmax; ///< Upper limit in Y (if set); 43 Bool_t fScaling; ///<! True when TProfile::Scale is called; 44 Double_t fTsumwy; ///< Total Sum of weight*Y; 45 Double_t fTsumwy2; ///< Total Sum of weight*Y*Y; 46 TArrayD fBinSumw2; ///< Array of sum of squares of weights per bin; 47 ; 48 static Bool_t fgApproximate; ///< bin error approximation option; 49 ; 50 Int_t BufferFill(Double_t, Double_t) override {return -2;} //may not use; 51 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t w);; 52 ; 53 // helper methods for the Merge unification in TProfileHelper; 54 void SetBins(const Int_t* nbins, const Double_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8h_source.html:89,Load,Loading,89,doc/master/TProfile_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TProfile2D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile2D.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 16/04/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TProfile2D; 13#define ROOT_TProfile2D; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TProfile2D //; 19// //; 20// Profile2D histogram class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH2.h""; 25#include ""TProfile.h""; 26 ; 27class TProfile2D : public TH2D {; 28 ; 29public:; 30 friend class TProfileHelper;; 31 friend class TH1Merger;; 32 ; 33protected:; 34 TArrayD fBinEntries; ///< Number of entries per bin; 35 EErrorType fErrorMode; ///< Option to compute errors; 36 Double_t fZmin; ///< Lower limit in Z (if set); 37 Double_t fZmax; ///< Upper limit in Z (if set); 38 Bool_t fScaling; ///<! True when TProfile2D::Scale is called; 39 Double_t fTsumwz; ///< Total Sum of weight*Z; 40 Double_t fTsumwz2; ///< Total Sum of weight*Z*Z; 41 TArrayD fBinSumw2; ///< Array of sum of squares of weights per bin; 42 static Bool_t fgApproximate; ///< Bin error approximation option; 43 ; 44 Int_t BufferFill(Double_t, Double_t) override {return -2;} //may not use; 45 Int_t BufferFill(Double_t, Double_t, Double_t) override {return -2;} //may not use; 46 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t z, Double_t w);; 47 ; 48 // helper methods for the Merge unification in TProfileHelper; 49 void SetBins(const Int_t* nbins, const Double_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8h_source.html:91,Load,Loading,91,doc/master/TProfile2D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TProfile3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile3D.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 17/05/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TProfile3D; 13#define ROOT_TProfile3D; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TProfile3D //; 19// //; 20// Profile3D histogram class. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TH3.h""; 25#include ""TProfile.h""; 26 ; 27class TProfile3D : public TH3D {; 28 ; 29public:; 30 friend class TProfileHelper;; 31 friend class TH1Merger;; 32 ; 33protected:; 34 TArrayD fBinEntries; ///< Number of entries per bin; 35 EErrorType fErrorMode; ///< Option to compute errors; 36 Double_t fTmin; ///< Lower limit in T (if set); 37 Double_t fTmax; ///< Upper limit in T (if set); 38 Bool_t fScaling; ///<! True when TProfile3D::Scale is called; 39 Double_t fTsumwt; ///< Total Sum of weight*T; 40 Double_t fTsumwt2; ///< Total Sum of weight*T*T; 41 TArrayD fBinSumw2; ///< Array of sum of squares of weights per bin; 42 static Bool_t fgApproximate; ///< Bin error approximation option; 43 ; 44 Int_t BufferFill(Double_t, Double_t) override {return -2;} //may not use; 45 Int_t BufferFill(Double_t, Double_t, Double_t) override {return -2;} //may not use; 46 Int_t BufferFill(Double_t, Double_t, Double_t, Double_t) override {return -2;} //may not use; 47 virtual Int_t BufferFill(Double_t x, Double_t y, Double_t z, Double_t t, Double_t w);; 48 ; 49 // hel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8h_source.html:91,Load,Loading,91,doc/master/TProfile3D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TScatter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TScatter.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Olivier Couet 18/05/2022; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TScatter; 13#define ROOT_TScatter; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TScatter //; 19// //; 20// A scatter plot able to draw four variables on a single plot //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TNamed.h""; 25#include ""TAttLine.h""; 26#include ""TAttFill.h""; 27#include ""TAttMarker.h""; 28#include ""TGraph.h""; 29 ; 30class TH2F;; 31 ; 32class TScatter : public TNamed, public TAttLine, public TAttFill, public TAttMarker {; 33 ; 34protected:; 35 Int_t fMaxSize{-1}; ///<!Current dimension of arrays fX and fY; 36 Int_t fNpoints{-1}; ///< Number of points <= fMaxSize; 37 TH2F *fHistogram{nullptr}; ///< Pointer to histogram used for drawing axis; 38 TGraph *fGraph{nullptr}; ///< Pointer to graph holding X and Y positions; 39 Double_t *fColor{nullptr}; ///< [fNpoints] array of colors; 40 Double_t *fSize{nullptr}; ///< [fNpoints] array of marker sizes; 41 Double_t fMaxMarkerSize{5.}; ///< Largest marker size used to paint the markers; 42 Double_t fMinMarkerSize{1.}; ///< Smallest marker size used to paint the markers; 43 Double_t fMargin{.1}; ///< Margin around the plot in %; 44 ; 45public:; 46 TScatter();; 47 TScatter(Int_t n);; 48 TScatter(Int_t n, const Double_t *x, const Double_t *y, const Double_t *col = nullptr, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TScatter_8h_source.html:89,Load,Loading,89,doc/master/TScatter_8h_source.html,https://root.cern,https://root.cern/doc/master/TScatter_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/TVirtualFitter.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TVirtualFitter.h File Reference. #include ""TNamed.h""; #include ""TMethodCall.h""; #include ""Foption.h"". Include dependency graph for TVirtualFitter.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TVirtualFitter;  Abstract Base Class for Fitting. More...;  . histhistincTVirtualFitter.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFitter_8h.html:98,Load,Loading,98,doc/master/TVirtualFitter_8h.html,https://root.cern,https://root.cern/doc/master/TVirtualFitter_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/inc/v5/TFormula.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFormula.h. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Nicolas Brun 19/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11// ---------------------------------- Formula.h; 12 ; 13#ifndef ROOT_v5_TFormula; 14#define ROOT_v5_TFormula; 15 ; 16 ; 17 ; 18//////////////////////////////////////////////////////////////////////////; 19// //; 20// TFormula //; 21// //; 22// The old formula base class f(x,y,z,par) //; 23// mantained for backward compatibility and TTree usage //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TNamed.h""; 27#include ""TBits.h""; 28#include ""TObjArray.h""; 29 ; 30 ; 31const Int_t kMAXFOUND = 500;; 32const Int_t kTFOperMask = 0x7fffff;; 33const UChar_t kTFOperShift = 23;; 34 ; 35 ; 36 ; 37namespace ROOT {; 38 namespace v5 {; 39 ; 40 class TFormulaPrimitive;; 41 ; 42class TOperOffset {; 43 friend class TFormula;; 44public:; 45 enum {; 46 kVariable = 0,; 47 kParameter = 1,; 48 kConstant = 2; 49 };; 50 TOperOffset();; 51protected:; 52 Short_t fType0; // type of operand 0; 53 Short_t fOffset0; // offset of operand 0; 54 Short_t fType1; // type of operand 1; 55 Short_t fOffset1; // offset of operand 1; 56 Short_t fType2; // type of operand 2; 57 Short_t fOffset2; // offset of operand 2; 58 Short_t fType3; // type of operand 3; 59 Short_t fOffset3; // offset of operand 3; 60 Short_t fToJump; // where to jump in case of optimized boolen; 61 Short_t fOldAction; // temporary variable used during optimization; 62};; 63 ; 64 ; 65cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/v5_2TFormula_8h_source.html:92,Load,Loading,92,doc/master/v5_2TFormula_8h_source.html,https://root.cern,https://root.cern/doc/master/v5_2TFormula_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/HFitImpl.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. HFitImpl.cxx. Go to the documentation of this file. 1// new HFit function; 2//______________________________________________________________________________; 3 ; 4 ; 5#include ""TH1.h""; 6#include ""TF1.h""; 7#include ""TF2.h""; 8#include ""TF3.h""; 9#include ""TError.h""; 10#include ""TGraph.h""; 11#include ""TMultiGraph.h""; 12#include ""TGraph2D.h""; 13#include ""THnBase.h""; 14 ; 15#include ""Fit/Fitter.h""; 16#include ""Fit/FitConfig.h""; 17#include ""Fit/BinData.h""; 18#include ""Fit/UnBinData.h""; 19#include ""Fit/Chi2FCN.h""; 20#include ""Fit/PoissonLikelihoodFCN.h""; 21#include ""HFitInterface.h""; 22#include ""Math/MinimizerOptions.h""; 23#include ""Math/Minimizer.h""; 24 ; 25#include ""Math/WrappedTF1.h""; 26#include ""Math/WrappedMultiTF1.h""; 27 ; 28#include ""TList.h""; 29#include ""TMath.h""; 30#include ""TROOT.h""; 31 ; 32#include ""TVirtualPad.h"" // for gPad; 33 ; 34#include ""TBackCompFitter.h""; 35#include ""TFitResultPtr.h""; 36#include ""TFitResult.h""; 37 ; 38#include <cstdlib>; 39#include <cmath>; 40#include <memory>; 41#include <limits>; 42 ; 43//#define DEBUG; 44 ; 45// utility functions used in TH1::Fit; 46 ; 47namespace HFit {; 48 ; 49 ; 50 int GetDimension(const TH1 * h1) { return h1->GetDimension(); }; 51 int GetDimension(const TGraph * ) { return 1; }; 52 int GetDimension(const TMultiGraph * ) { return 1; }; 53 int GetDimension(const TGraph2D * ) { return 2; }; 54 int GetDimension(const THnBase * s1) { return s1->GetNdimensions(); }; 55 ; 56 int CheckFitFunction(const TF1 * f1, int hdim);; 57 ; 58 ; 59 void GetFunctionRange(const TF1 & f1, ROOT::Fit::DataRange & range);; 60 ; 61 void FitOptionsMake(const char *option, Foption_t &fitOption);; 62 ; 63 void CheckGraphFitOptions(Foption_t &fitOption);; 64 ; 65 ; 66 void GetDrawingRange(TH1 * h1, ROOT::Fit::DataRange & range);; 67 void GetDrawingRange(TGraph * gr, ROOT::Fit::DataRange & range);; 68 void GetDrawingRang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:91,Load,Loading,91,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/HFitInterface.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. HFitInterface.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: L. Moneta Thu Aug 31 10:40:20 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class TH1Interface; 12 ; 13#include ""HFitInterface.h""; 14 ; 15#include ""Fit/BinData.h""; 16#include ""Fit/SparseData.h""; 17#include ""Fit/FitResult.h""; 18#include ""Math/IParamFunction.h""; 19 ; 20#include <vector>; 21 ; 22#include <cassert>; 23#include <cmath>; 24 ; 25#include ""TH1.h""; 26#include ""THnBase.h""; 27#include ""TF1.h""; 28#include ""TGraph2D.h""; 29#include ""TGraph.h""; 30#include ""TGraphErrors.h""; 31// #include ""TGraphErrors.h""; 32// #include ""TGraphBentErrors.h""; 33// #include ""TGraphAsymmErrors.h""; 34#include ""TMultiGraph.h""; 35#include ""TList.h""; 36#include ""TError.h""; 37 ; 38 ; 39//#define DEBUG; 40#ifdef DEBUG; 41#include ""TClass.h""; 42#include <iostream>; 43#endif; 44 ; 45 ; 46namespace ROOT {; 47 ; 48namespace Fit {; 49 ; 50// add a namespace to distinguish from the Graph functions; 51namespace HFitInterface {; 52 ; 53 ; 54bool IsPointOutOfRange(const TF1 * func, const double * x) {; 55 // function to check if a point is outside range; 56 if (func ==nullptr) return false;; 57 return !func->IsInside(x);; 58}; 59 ; 60bool AdjustError(const DataOptions & option, double & error, double value = 1) {; 61 // adjust the given error according to the option; 62 // return false when point must be skipped.; 63 // When point error = 0, the point is kept if the option UseEmpty is set or if; 64 // fErrors1 is set and the point value is not zero.; 65 // The value should be used only for points representing counts (histograms), not for the graph.; 66 // I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:96,Load,Loading,96,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/Haxis.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Haxis.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 18/05/95; 3 ; 4#include <cstring>; 5#include <cstdio>; 6#include <cctype>; 7 ; 8#include ""TH1.h""; 9 ; 10 ; 11////////////////////////////////////////////////////////////////////////////////; 12/// Choose an axis according to ""axis"".; 13 ; 14Int_t TH1::AxisChoice( Option_t *axis) const; 15{; 16 char achoice = toupper(axis[0]);; 17 if (achoice == 'X') return 1;; 18 if (achoice == 'Y') return 2;; 19 if (achoice == 'Z') return 3;; 20 return 0;; 21}; 22 ; 23 ; 24////////////////////////////////////////////////////////////////////////////////; 25/// Return the number of divisions for ""axis"".; 26 ; 27Int_t TH1::GetNdivisions( Option_t *axis) const; 28{; 29 Int_t ax = AxisChoice(axis);; 30 if (ax == 1) return fXaxis.GetNdivisions();; 31 if (ax == 2) return fYaxis.GetNdivisions();; 32 if (ax == 3) return fZaxis.GetNdivisions();; 33 return 0;; 34}; 35 ; 36 ; 37////////////////////////////////////////////////////////////////////////////////; 38/// Return the number of divisions for ""axis"".; 39 ; 40Color_t TH1::GetAxisColor( Option_t *axis) const; 41{; 42 Int_t ax = AxisChoice(axis);; 43 if (ax == 1) return fXaxis.GetAxisColor();; 44 if (ax == 2) return fYaxis.GetAxisColor();; 45 if (ax == 3) return fZaxis.GetAxisColor();; 46 return 0;; 47}; 48 ; 49 ; 50////////////////////////////////////////////////////////////////////////////////; 51/// Return the ""axis"" label color.; 52 ; 53Color_t TH1::GetLabelColor( Option_t *axis) const; 54{; 55 Int_t ax = AxisChoice(axis);; 56 if (ax == 1) return fXaxis.GetLabelColor();; 57 if (ax == 2) return fYaxis.GetLabelColor();; 58 if (ax == 3) return fZaxis.GetLabelColor();; 59 return 0;; 60}; 61 ; 62 ; 63////////////////////////////////////////////////////////////////////////////////; 64/// Return the ""axis"" label font.; 65 ; 66S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Haxis_8cxx_source.html:88,Load,Loading,88,doc/master/Haxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Haxis_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TAxis.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAxis.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TAxis.h""; 13#include ""TVirtualPad.h""; 14#include ""TStyle.h""; 15#include ""TError.h""; 16#include ""THashList.h""; 17#include ""TList.h""; 18#include ""TAxisModLab.h""; 19#include ""TH1.h""; 20#include ""TObjString.h""; 21#include ""TDatime.h""; 22#include ""TTimeStamp.h""; 23#include ""TBuffer.h""; 24#include ""TMath.h""; 25#include ""THLimitsFinder.h""; 26#include ""strlcpy.h""; 27#include ""snprintf.h""; 28 ; 29#include <iostream>; 30#include <ctime>; 31#include <cassert>; 32 ; 33ClassImp(TAxis);; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/** \class TAxis; 37 \ingroup Histograms; 38 \brief Class to manage histogram axis; 39 ; 40This class manages histogram axis. It is referenced by TH1 and TGraph.; 41To make a graphical representation of an histogram axis, this class; 42references the TGaxis class. TAxis supports axis with fixed or variable bin sizes.; 43Labels may be associated to individual bins.; 44See examples of various axis representations drawn by class TGaxis.; 45*///////////////////////////////////////////////////////////////////////////////; 46 ; 47////////////////////////////////////////////////////////////////////////////////; 48/// Default constructor.; 49 ; 50TAxis::TAxis(); 51{; 52 fNbins = 1;; 53 fXmin = 0;; 54 fXmax = 1;; 55 fFirst = 0;; 56 fLast = 0;; 57 fParent = nullptr;; 58 fLabels = nullptr;; 59 fModLabs = nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:88,Load,Loading,88,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TEfficiency.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEfficiency.cxx. Go to the documentation of this file. 1#ifndef ROOT_TEfficiency_cxx; 2#define ROOT_TEfficiency_cxx; 3 ; 4//standard header; 5#include <vector>; 6#include <string>; 7#include <cmath>; 8#include <cstdlib>; 9#include <cassert>; 10 ; 11//ROOT headers; 12#include ""Math/DistFuncMathCore.h""; 13#include ""TBinomialEfficiencyFitter.h""; 14#include ""TDirectory.h""; 15#include ""TF1.h""; 16#include ""TGraphAsymmErrors.h""; 17#include ""TGraph2DAsymmErrors.h""; 18#include ""TH1.h""; 19#include ""TH2.h""; 20#include ""TH3.h""; 21#include ""TList.h""; 22#include ""TMath.h""; 23#include ""TROOT.h""; 24#include ""TStyle.h""; 25#include ""TVirtualPad.h""; 26#include ""TError.h""; 27#include ""Math/BrentMinimizer1D.h""; 28#include ""Math/WrappedFunction.h""; 29 ; 30//custom headers; 31#include ""TEfficiency.h""; 32 ; 33// file with extra class for FC method; 34#include ""TEfficiencyHelper.h""; 35 ; 36//default values; 37const Double_t kDefBetaAlpha = 1;; 38const Double_t kDefBetaBeta = 1;; 39const Double_t kDefConfLevel = 0.682689492137; // 1 sigma; 40const TEfficiency::EStatOption kDefStatOpt = TEfficiency::kFCP;; 41const Double_t kDefWeight = 1;; 42 ; 43ClassImp(TEfficiency);; 44 ; 45////////////////////////////////////////////////////////////////////////////////; 46/** \class TEfficiency; 47 \ingroup Hist; 48 \brief Class to handle efficiency histograms; 49 ; 50- [I. Overview](\ref EFF01); 51- [II. Creating a TEfficiency object](\ref EFF02); 52 - [Example 1](\ref EFF02a); 53 - [Example 2](\ref EFF02b); 54- [III. Filling with events](\ref EFF03); 55- [IV. Statistic options](\ref EFF04); 56 - [Frequentist methods](\ref EFF04a); 57 - [Bayesian methods](\ref EFF04b); 58 - [IV.1 Coverage probabilities for different methods](\ref EFF041); 59- [V. Merging and combining TEfficiency objects](\ref EFF05); 60 - [Example](\ref EFF05a); 61 - [V.1 When should I use merging?](\ref EFF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:94,Load,Loading,94,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TEfficiencyHelper.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TEfficiencyHelper.h File Reference. #include <algorithm>; #include <cmath>; #include <vector>; #include ""Math/PdfFuncMathCore.h"". Include dependency graph for TEfficiencyHelper.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  BinomialNeymanInterval< Sorter >;  Implement noncentral binomial confidence intervals using the Neyman construction. More...;  ; class  BinomialProbHelper;  Helper class impelementing the binomial probability and the likelihood ratio used for ordering the interval in the FeldmanCousins interval class. More...;  ; class  FeldmanCousinsBinomialInterval;  ; struct  FeldmanCousinsSorter;  . histhistsrcTEfficiencyHelper.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiencyHelper_8h.html:101,Load,Loading,101,doc/master/TEfficiencyHelper_8h.html,https://root.cern,https://root.cern/doc/master/TEfficiencyHelper_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TF1.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 18/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include <memory>; 14#include ""strlcpy.h""; 15#include ""snprintf.h""; 16#include ""TROOT.h""; 17#include ""TBuffer.h""; 18#include ""TMath.h""; 19#include ""TF1.h""; 20#include ""TH1.h""; 21#include ""TGraph.h""; 22#include ""TVirtualPad.h""; 23#include ""TStyle.h""; 24#include ""TRandom.h""; 25#include ""TObjString.h""; 26#include ""TInterpreter.h""; 27#include ""TPluginManager.h""; 28#include ""TBrowser.h""; 29#include ""TColor.h""; 30#include ""TMethodCall.h""; 31#include ""TF1Helper.h""; 32#include ""TF1NormSum.h""; 33#include ""TF1Convolution.h""; 34#include ""TVirtualMutex.h""; 35#include ""Math/WrappedFunction.h""; 36#include ""Math/WrappedTF1.h""; 37#include ""Math/BrentRootFinder.h""; 38#include ""Math/BrentMinimizer1D.h""; 39#include ""Math/BrentMethods.h""; 40#include ""Math/Integrator.h""; 41#include ""Math/IntegratorMultiDim.h""; 42#include ""Math/IntegratorOptions.h""; 43#include ""Math/GaussIntegrator.h""; 44#include ""Math/GaussLegendreIntegrator.h""; 45#include ""Math/AdaptiveIntegratorMultiDim.h""; 46#include ""Math/RichardsonDerivator.h""; 47#include ""Math/Functor.h""; 48#include ""Math/Minimizer.h""; 49#include ""Math/MinimizerOptions.h""; 50#include ""Math/Factory.h""; 51#include ""Math/ChebyshevPol.h""; 52#include ""Fit/FitResult.h""; 53// for I/O backward compatibility; 54#include ""v5/TF1Data.h""; 55 ; 56#include ""AnalyticalIntegrals.h""; 57 ; 58std::atomic<Bool_t> TF1::fgAbsValue(kFALSE);; 59Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:86,Load,Loading,86,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TF1Convolution.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1Convolution.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Authors: Lorenzo Moneta, Aurélie Flandi 27/08/14; 3//; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 ROOT Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#include <memory>; 12 ; 13#include ""TF1Convolution.h""; 14#include ""TROOT.h""; 15#include ""TObject.h""; 16#include ""TObjString.h""; 17#include ""TObjArray.h""; 18#include ""TMath.h""; 19#include ""Math/Integrator.h""; 20#include ""Math/IntegratorMultiDim.h""; 21#include ""Math/IntegratorOptions.h""; 22#include ""Math/GaussIntegrator.h""; 23#include ""Math/GaussLegendreIntegrator.h""; 24#include ""Math/AdaptiveIntegratorMultiDim.h""; 25#include ""Math/Functor.h""; 26#include ""TVirtualFFT.h""; 27 ; 28/** \class TF1Convolution; 29 \ingroup Functions; 30 \brief Class wrapping convolution of two functions; 31 ; 32Class wrapping convolution of two functions: evaluation of \f$\int f(x)g(x-t)dx\f$; 33 ; 34The convolution is performed by default using FFTW if it is available .; 35One can pass optionally the range of the convolution (by default the first function range is used).; 36Note that when using Discrete Fourier Transform (as FFTW), it is a circular transform, so the functions should be; 37approximately zero at the end of the range. If they are significantly different than zero on one side (e.g. the left side); 38a spill over will occur on the other side (e.g right side).; 39If no function range is given by default the function1 range + 10% is used; 40One should use also a not too small number of points for the DFT (a minimum of 1000). By default 10000 points are used.; 41*/; 42 ; 43ClassImp(TF1Convolution);; 44 ; 45Double_t TF1Convolution::fgExtraRangeFraction = 0.1;; 46 ; 47class TF1Convolution_Eva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1Convolution_8cxx_source.html:97,Load,Loading,97,doc/master/TF1Convolution_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1Convolution_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TF1NormSum.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1NormSum.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Authors: Lorenzo Moneta, Aurélie Flandi 27/08/14; 3//; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 ROOT Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#include ""TROOT.h""; 12#include ""TClass.h""; 13#include ""TObjString.h""; 14#include ""TObjArray.h""; 15#include ""TF1NormSum.h""; 16#include ""Math/WrappedFunction.h""; 17#include ""Math/WrappedTF1.h""; 18 ; 19ClassImp(TF1NormSum);; 20 ; 21/** \class TF1NormSum; 22 \ingroup Functions; 23Class adding two functions: c1*f1+c2*f2; 24*/; 25 ; 26////////////////////////////////////////////////////////////////////////////////; 27/// Function to find and rename duplicate parameters with the same name; 28 ; 29template<class Iterator>; 30void FixDuplicateNames(Iterator begin, Iterator end) {; 31 ; 32 // make a map of values; 33 ; 34 std::multimap<TString, int > parMap;; 35 for (Iterator it = begin; it != end; ++it) {; 36 parMap.insert( std::make_pair( *it, std::distance(begin,it) ) );; 37 }; 38 for ( auto & elem : parMap) {; 39 TString name = elem.first;; 40 int n = parMap.count( name);; 41 if (n > 1 ) {; 42 std::pair <std::multimap<TString,int>::iterator, std::multimap<TString,int>::iterator> ret;; 43 ret = parMap.equal_range(name);; 44 int i = 0;; 45 for (std::multimap<TString,int>::iterator it=ret.first; it!=ret.second; ++it) {; 46 *(begin+it->second) = TString::Format(""%s%d"",name.Data(),++i);; 47 }; 48 }; 49 }; 50 ; 51}; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54 ; 55void TF1NormSum::InitializeDataMembers(const std::vector<TF1 *> &functions, const std::vector<Double_t> &coeffs,; 56 Double_t scale); 57{; 58 ; 59 fScale = scale;; 60 fCoeffs = coeffs;; 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1NormSum_8cxx_source.html:93,Load,Loading,93,doc/master/TF1NormSum_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1NormSum_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TF2.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF2.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 23/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TF2.h""; 14#include ""TMath.h""; 15#include ""TRandom.h""; 16#include ""TBuffer.h""; 17#include ""TH2.h""; 18#include ""TVirtualPad.h""; 19#include <iostream>; 20#include ""TColor.h""; 21#include ""TVirtualFitter.h""; 22#include ""Math/IntegratorOptions.h""; 23#include ""snprintf.h""; 24 ; 25ClassImp(TF2);; 26 ; 27/** \class TF2; 28 \ingroup Functions; 29 \brief A 2-Dim function with parameters.; 30 ; 31The following types of functions can be created:; 32 ; 331. [Expression using variables x and y](\ref TF2a); 342. [Expression using a user defined function](\ref TF2b); 353. [Lambda Expression with x and y variables and parameters](\ref TF2c); 36 ; 37\anchor TF2a; 38### Expression using variables x and y; 39 ; 40Begin_Macro (source); 41{; 42 auto f2 = new TF2(""f2"",""sin(x)*sin(y)/(x*y)"",0,5,0,5);; 43 f2->Draw();; 44}; 45End_Macro; 46 ; 47\anchor TF2b; 48### Expression using a user defined function; 49 ; 50~~~~{.cpp}; 51Double_t func(Double_t *val, Double_t *par); 52{; 53 Float_t x = val[0];; 54 Float_t y = val[1];; 55 Double_t f = x*x-y*y;; 56 return f;; 57}; 58 ; 59void fplot(); 60{; 61 auto f = new TF2(""f"",func,-1,1,-1,1);; 62 f->Draw(""surf1"");; 63}; 64~~~~; 65 ; 66\anchor TF2c; 67### Lambda Expression with x and y variables and parameters; 68 ; 69~~~~{.cpp}; 70root [0] TF2 f2(""f2"", [](double* x, double*p) { return x[0] + x[1] * p[0]; }, 0., 1., 0., 1., 1)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8cxx_source.html:86,Load,Loading,86,doc/master/TF2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF2_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TFitResult.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResult.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: David Gonzalez Maline 12/11/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TFitResult.h""; 13#include ""Math/WrappedMultiTF1.h""; 14#include ""TGraph.h""; 15 ; 16 ; 17#include <iostream>; 18 ; 19/** \class TFitResult; 20 \ingroup Hist; 21Extends the ROOT::Fit::Result class with a TNamed inheritance; 22providing easy possibility for I/O; 23*/; 24 ; 25ClassImp(TFitResult);; 26 ; 27////////////////////////////////////////////////////////////////////////////////; 28/// Constructor from a ROOT::Fit::FitResult; 29/// copy the contained TF1 pointer function if it is; 30 ; 31TFitResult::TFitResult(const ROOT::Fit::FitResult& f) :; 32 TNamed(""TFitResult"",""TFitResult""),; 33 ROOT::Fit::FitResult(f); 34{; 35 ROOT::Math::WrappedMultiTF1 * wfunc = dynamic_cast<ROOT::Math::WrappedMultiTF1 *>(ModelFunction().get() );; 36 if (wfunc) wfunc->SetAndCopyFunction();; 37}; 38 ; 39 ; 40////////////////////////////////////////////////////////////////////////////////; 41/// Print result of the fit, by default chi2, parameter values and errors.; 42/// if option ""V"" is given print also error matrix and correlation; 43 ; 44void TFitResult::Print(Option_t *option) const; 45{; 46 TString opt(option);; 47 opt.ToUpper();; 48 bool doCovMat = opt.Contains(""V"");; 49 ROOT::Fit::FitResult::Print( std::cout, doCovMat);; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Return the covariance matrix fro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResult_8cxx_source.html:93,Load,Loading,93,doc/master/TFitResult_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFitResult_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TFitResultPtr.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResultPtr.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: David Gonzalez Maline 12/11/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TFitResultPtr.h""; 13#include ""TFitResult.h""; 14#include ""TError.h""; 15 ; 16/** \class TFitResultPtr; 17Provides an indirection to the TFitResult class and with a semantics; 18identical to a TFitResult pointer, i.e. it is like a smart pointer to a TFitResult.; 19In addition it provides an automatic conversion to an integer. In this way it can be; 20returned from the TH1::Fit method and the change in TH1::Fit be backward compatible.; 21 */; 22 ; 23ClassImp(TFitResultPtr);; 24 ; 25////////////////////////////////////////////////////////////////////////////////; 26/// Constructor from a TFitResult pointer; 27 ; 28TFitResultPtr::TFitResultPtr(const std::shared_ptr<TFitResult> & p) :; 29 fStatus(-1),; 30 fPointer(p); 31{; 32 if (fPointer) fStatus = fPointer->Status();; 33}; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/// Constructor from a TFitResult pointer; 37 ; 38TFitResultPtr::TFitResultPtr(TFitResult * p) :; 39 fStatus(-1),; 40 fPointer(std::shared_ptr<TFitResult>(p)); 41{; 42 if (fPointer) fStatus = fPointer->Status();; 43}; 44 ; 45TFitResultPtr::TFitResultPtr(const TFitResultPtr& rhs) :; 46 fStatus(rhs.fStatus), fPointer(rhs.fPointer); 47{; 48}; 49 ; 50////////////////////////////////////////////////////////////////////////////////; 51/// Destructor. Delete the contained TFitResul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResultPtr_8cxx_source.html:96,Load,Loading,96,doc/master/TFitResultPtr_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFitResultPtr_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TFormula.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFormula.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Maciej Zimnoch 30/09/2013; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TMethod.h""; 15#include ""TF1.h""; 16#include ""TMethodCall.h""; 17#include <TBenchmark.h>; 18#include ""TError.h""; 19#include ""TInterpreter.h""; 20#include ""TInterpreterValue.h""; 21#include ""TFormula.h""; 22#include ""TRegexp.h""; 23 ; 24#include ""ROOT/StringUtils.hxx""; 25 ; 26#include <array>; 27#include <iostream>; 28#include <memory>; 29#include <unordered_map>; 30#include <functional>; 31#include <set>; 32#include <sstream>; 33 ; 34using std::map, std::pair, std::make_pair, std::list, std::max, std::string;; 35 ; 36#ifdef WIN32; 37#pragma optimize("""",off); 38#endif; 39#include ""v5/TFormula.h""; 40 ; 41ClassImp(TFormula);; 42 ; 43/** \class TFormula TFormula.h ""inc/TFormula.h""; 44 \ingroup Hist; 45 The Formula class; 46 ; 47 This is a new version of the TFormula class based on Cling.; 48 This class is not 100% backward compatible with the old TFormula class, which is still available in ROOT as; 49 `ROOT::v5::TFormula`. Some of the TFormula member functions available in version 5, such as; 50 `Analyze` and `AnalyzeFunction` are not available in the new TFormula.; 51 On the other hand formula expressions which were valid in version 5 are still valid in TFormula version 6; 52 ; 53 This class has been implemented during Google Summer of Code 2013 by Maciej Zimnoch.; 54 ; 55 ### Example of valid expressions:;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:91,Load,Loading,91,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TGraph.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun, Olivier Couet 12/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#include ""TROOT.h""; 14#include ""TBuffer.h""; 15#include ""TEnv.h""; 16#include ""TGraph.h""; 17#include ""TGraphErrors.h""; 18#include ""TGraphAsymmErrors.h""; 19#include ""TGraphBentErrors.h""; 20#include ""TH1.h""; 21#include ""TF1.h""; 22#include ""TStyle.h""; 23#include ""TMath.h""; 24#include ""TVectorD.h""; 25#include ""Foption.h""; 26#include ""TRandom.h""; 27#include ""TSpline.h""; 28#include ""TVirtualFitter.h""; 29#include ""TVirtualPad.h""; 30#include ""TVirtualGraphPainter.h""; 31#include ""TBrowser.h""; 32#include ""TSystem.h""; 33#include ""TPluginManager.h""; 34#include ""strtok.h""; 35 ; 36#include <cstdlib>; 37#include <string>; 38#include <cassert>; 39#include <iostream>; 40#include <fstream>; 41#include <cstring>; 42#include <numeric>; 43 ; 44#include ""HFitInterface.h""; 45#include ""Fit/DataRange.h""; 46#include ""Math/MinimizerOptions.h""; 47 ; 48extern void H1LeastSquareSeqnd(Int_t n, Double_t *a, Int_t idim, Int_t &ifail, Int_t k, Double_t *b);; 49 ; 50ClassImp(TGraph);; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53 ; 54/** \class TGraph; 55 \ingroup Graphs; 56A TGraph is an object made of two arrays X and Y with npoints each.; 57The TGraph painting is performed thanks to the TGraphPainter; 58class. All details about the various painting options are given in this class.; 59 ; 60#### Notes; 61 ; 62 - Unlike histogram or t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8cxx_source.html:89,Load,Loading,89,doc/master/TGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TGraph2D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2D.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2D.cxx,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TMath.h""; 15#include ""TH2.h""; 16#include ""TF2.h""; 17#include ""TList.h""; 18#include ""TGraph2D.h""; 19#include ""TGraphDelaunay.h""; 20#include ""TGraphDelaunay2D.h""; 21#include ""TVirtualPad.h""; 22#include ""TVirtualFitter.h""; 23#include ""TVirtualHistPainter.h""; 24#include ""TPluginManager.h""; 25#include ""TSystem.h""; 26#include ""strtok.h""; 27#include ""snprintf.h""; 28 ; 29#include <cstdlib>; 30#include <cassert>; 31#include <iostream>; 32#include <fstream>; 33 ; 34#include ""HFitInterface.h""; 35#include ""Fit/DataRange.h""; 36#include ""Math/MinimizerOptions.h""; 37 ; 38ClassImp(TGraph2D);; 39 ; 40 ; 41/** \class TGraph2D; 42 \ingroup Graphs; 43Graphics object made of three arrays X, Y and Z with the same number of points each.; 44 ; 45- [Creating a TGraph2D](\ref G2D00); 46- [Drawing options](\ref G2D01); 47- [Examples](\ref G2D02); 48 - [SURF1 Example](\ref G2D021); 49 - [Fitting Example](\ref G2D022); 50 - [PCOL Example](\ref G2D023); 51- [Definition of the Delaunay triangulation (After B. Delaunay)](\ref G2D03); 52 ; 53 ; 54\anchor G2D00; 55## Creating a TGraph2D; 56 ; 57This class has different constructors:; 58- With an array's dimension and three arrays x, y, and z:; 59~~~ {.cpp}; 60 auto g = new TGraph2D(n, x, y, z);; 61~~~; 62 x, y, z arrays can be doubles, floats, or ints.; 63- With an array's",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8cxx_source.html:91,Load,Loading,91,doc/master/TGraph2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TGraph2DErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2DErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2DErrors.cxx,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TBuffer.h""; 14#include ""TGraph2DErrors.h""; 15#include ""TH2.h""; 16#include ""TVirtualPad.h""; 17#include ""TVirtualFitter.h""; 18#include ""THLimitsFinder.h""; 19 ; 20ClassImp(TGraph2DErrors);; 21 ; 22/** \class TGraph2DErrors; 23 \ingroup Graphs; 24Graph 2D class with errors.; 25 ; 26A TGraph2DErrors is a TGraph2D with errors. It behaves like a TGraph2D and has; 27the same drawing options.; 28 ; 29The **""ERR""** drawing option allows to display the error bars. The; 30following example shows how to use it:; 31 ; 32Begin_Macro(source); 33{; 34 auto c = new TCanvas(""c"",""TGraph2DErrors example"",0,0,600,600);; 35 Double_t P = 6.;; 36 Int_t np = 200;; 37 ; 38 Double_t *rx=0, *ry=0, *rz=0;; 39 Double_t *ex=0, *ey=0, *ez=0;; 40 ; 41 rx = new Double_t[np];; 42 ry = new Double_t[np];; 43 rz = new Double_t[np];; 44 ex = new Double_t[np];; 45 ey = new Double_t[np];; 46 ez = new Double_t[np];; 47 ; 48 auto r = new TRandom();; 49 ; 50 for (Int_t N=0; N<np;N++) {; 51 rx[N] = 2*P*(r->Rndm(N))-P;; 52 ry[N] = 2*P*(r->Rndm(N))-P;; 53 rz[N] = rx[N]*rx[N]-ry[N]*ry[N];; 54 rx[N] = 10.+rx[N];; 55 ry[N] = 10.+ry[N];; 56 rz[N] = 40.+rz[N];; 57 ex[N] = r->Rndm(N);; 58 ey[N] = r->Rndm(N);; 59 ez[N] = 10*r->Rndm(N);; 60 }; 61 ; 62 auto g = new TGraph2DErrors(np, rx, ry, rz, ex, ey, ez);; 63 g->SetTitle(""TGraph2D with error bars:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html:97,Load,Loading,97,doc/master/TGraph2DErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TGraphAsymmErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphAsymmErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 03/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#include ""TEfficiency.h""; 14#include ""TROOT.h""; 15#include ""TBuffer.h""; 16#include ""TGraphAsymmErrors.h""; 17#include ""TGraphErrors.h""; 18#include ""TStyle.h""; 19#include ""TMath.h""; 20#include ""TVirtualPad.h""; 21#include ""TF1.h""; 22#include ""TH1.h""; 23#include ""TVector.h""; 24#include ""TVectorD.h""; 25#include ""TSystem.h""; 26#include ""Math/QuantFuncMathCore.h""; 27#include ""strtok.h""; 28 ; 29#include <cstring>; 30#include <iostream>; 31#include <fstream>; 32 ; 33 ; 34ClassImp(TGraphAsymmErrors);; 35 ; 36/** \class TGraphAsymmErrors; 37 \ingroup Graphs; 38TGraph with asymmetric error bars.; 39 ; 40The TGraphAsymmErrors painting is performed thanks to the TGraphPainter; 41class. All details about the various painting options are given in this class.; 42 ; 43The picture below gives an example:; 44 ; 45Begin_Macro(source); 46{; 47 auto c1 = new TCanvas(""c1"",""A Simple Graph with asymmetric error bars"",200,10,700,500);; 48 c1->SetFillColor(42);; 49 c1->SetGrid();; 50 c1->GetFrame()->SetFillColor(21);; 51 c1->GetFrame()->SetBorderSize(12);; 52 const Int_t n = 10;; 53 Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; 54 Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; 55 Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; 56 Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; 57 Double_t exh[n] = {.02,.08,.05,.0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:100,Load,Loading,100,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TGraphBentErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphBentErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Dave Morrison 30/06/2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstring>; 13#include <iostream>; 14 ; 15#include ""TROOT.h""; 16#include ""TGraphBentErrors.h""; 17#include ""TMath.h""; 18#include ""TVirtualPad.h""; 19#include ""TH1.h""; 20#include ""TF1.h""; 21 ; 22ClassImp(TGraphBentErrors);; 23 ; 24 ; 25////////////////////////////////////////////////////////////////////////////////; 26 ; 27/** \class TGraphBentErrors; 28 \ingroup Graphs; 29A TGraphBentErrors is a TGraph with bent, asymmetric error bars.; 30 ; 31The TGraphBentErrors painting is performed thanks to the TGraphPainter; 32class. All details about the various painting options are given in this class.; 33 ; 34The picture below gives an example:; 35Begin_Macro(source); 36{; 37 auto c1 = new TCanvas(""c1"",""A Simple Graph with bent error bars"",200,10,700,500);; 38 const Int_t n = 10;; 39 Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; 40 Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; 41 Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; 42 Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; 43 Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; 44 Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; 45 Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; 46 Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; 47 Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; 48 Double_t eyhd[n] = {.0,.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html:99,Load,Loading,99,doc/master/TGraphBentErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TGraphDelaunay.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphDelaunay.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraphDelaunay.cxx,v 1.00; 2// Author: Olivier Couet, Luke Jones (Royal Holloway, University of London); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TMath.h""; 13#include ""TGraph2D.h""; 14#include ""TGraphDelaunay.h""; 15 ; 16ClassImp(TGraphDelaunay);; 17 ; 18 ; 19/** \class TGraphDelaunay; 20 \ingroup Graphs; 21TGraphDelaunay generates a Delaunay triangulation of a TGraph2D. This; 22triangulation code derives from an implementation done by Luke Jones; 23(Royal Holloway, University of London) in April 2002 in the PAW context.; 24 ; 25This software cannot be guaranteed to work under all circumstances. They; 26were originally written to work with a few hundred points in an XY space; 27with similar X and Y ranges.; 28 ; 29Definition of Delaunay triangulation (After B. Delaunay):; 30For a set S of points in the Euclidean plane, the unique triangulation DT(S); 31of S such that no point in S is inside the circumcircle of any triangle in; 32DT(S). DT(S) is the dual of the Voronoi diagram of S. If n is the number of; 33points in S, the Voronoi diagram of S is the partitioning of the plane; 34containing S points into n convex polygons such that each polygon contains; 35exactly one point and every point in a given polygon is closer to its; 36central point than to any other. A Voronoi diagram is sometimes also known; 37as a Dirichlet tessellation.; 38 ; 39\image html tgraph2d_delaunay.png; 40 ; 41[This applet](http://www.cs.cor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphDelaunay_8cxx_source.html:97,Load,Loading,97,doc/master/TGraphDelaunay_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphDelaunay_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TGraphErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 15/09/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#include ""TROOT.h""; 14#include ""TBuffer.h""; 15#include ""TGraphErrors.h""; 16#include ""TStyle.h""; 17#include ""TMath.h""; 18#include ""TVirtualPad.h""; 19#include ""TH1.h""; 20#include ""TF1.h""; 21#include ""TVectorD.h""; 22#include ""TSystem.h""; 23#include ""strtok.h""; 24 ; 25#include <iostream>; 26#include <fstream>; 27#include <cstring>; 28#include <string>; 29 ; 30ClassImp(TGraphErrors);; 31 ; 32 ; 33////////////////////////////////////////////////////////////////////////////////; 34 ; 35/** \class TGraphErrors; 36 \ingroup Graphs; 37A TGraphErrors is a TGraph with error bars.; 38 ; 39The TGraphErrors painting is performed thanks to the TGraphPainter; 40class. All details about the various painting options are given in this class.; 41 ; 42The picture below gives an example:; 43 ; 44Begin_Macro(source); 45{; 46 auto c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);; 47 c1->SetFillColor(42);; 48 c1->SetGrid();; 49 c1->GetFrame()->SetFillColor(21);; 50 c1->GetFrame()->SetBorderSize(12);; 51 const Int_t n = 10;; 52 Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; 53 Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; 54 Double_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; 55 Double_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; 56 auto gr = new TGraphErrors(n,x,y,ex,ey);; 57 gr->SetTitle(""TGraphErrors Examp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:95,Load,Loading,95,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TGraphMultiErrors.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphMultiErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Simon Spies 18/02/19; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2018-2019, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TStyle.h""; 14#include ""TVirtualPad.h""; 15#include ""TEfficiency.h""; 16#include ""Riostream.h""; 17 ; 18#include ""TArrayD.h""; 19#include ""TVector.h""; 20#include ""TH1.h""; 21#include ""TF1.h""; 22#include ""TMath.h""; 23#include ""Math/QuantFuncMathCore.h""; 24 ; 25#include ""TGraphMultiErrors.h""; 26 ; 27ClassImp(TGraphMultiErrors); 28 ; 29/** \class TGraphMultiErrors; 30 \ingroup Graphs; 31TGraph with asymmetric error bars and multiple y error dimensions.; 32 ; 33The TGraphMultiErrors painting is performed thanks to the TGraphPainter; 34class. All details about the various painting options are given in this class.; 35 ; 36The picture below gives an example:; 37 ; 38Begin_Macro(source); 39{; 40 auto c1 = new TCanvas(""c1"", ""A Simple Graph with multiple y-errors"", 200, 10, 700, 500);; 41 c1->SetGrid();; 42 c1->GetFrame()->SetBorderSize(12);; 43 const Int_t np = 5;; 44 Double_t x[np] = {0, 1, 2, 3, 4};; 45 Double_t y[np] = {0, 2, 4, 1, 3};; 46 Double_t exl[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; 47 Double_t exh[np] = {0.3, 0.3, 0.3, 0.3, 0.3};; 48 Double_t eylstat[np] = {1, 0.5, 1, 0.5, 1};; 49 Double_t eyhstat[np] = {0.5, 1, 0.5, 1, 2};; 50 Double_t eylsys[np] = {0.5, 0.4, 0.8, 0.3, 1.2};; 51 Double_t eyhsys[np] = {0.6, 0.7, 0.6, 0.4, 0.8};; 52 auto gme = new TGraphMultiErrors(""gme"", ""TGraphMultiErrors Example"", np, x, y, exl, e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:100,Load,Loading,100,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TH1.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions |; Variables ; TH1.cxx File Reference. #include <array>; #include <cctype>; #include <climits>; #include <cmath>; #include <cstdio>; #include <cstdlib>; #include <cstring>; #include <iostream>; #include <sstream>; #include <fstream>; #include ""TROOT.h""; #include ""TBuffer.h""; #include ""TEnv.h""; #include ""TClass.h""; #include ""TMath.h""; #include ""THashList.h""; #include ""TH1.h""; #include ""TH2.h""; #include ""TH3.h""; #include ""TF2.h""; #include ""TF3.h""; #include ""TPluginManager.h""; #include ""TVirtualPad.h""; #include ""TRandom.h""; #include ""TVirtualFitter.h""; #include ""THLimitsFinder.h""; #include ""TProfile.h""; #include ""TStyle.h""; #include ""TVectorF.h""; #include ""TVectorD.h""; #include ""TBrowser.h""; #include ""TError.h""; #include ""TVirtualHistPainter.h""; #include ""TVirtualFFT.h""; #include ""TVirtualPaveStats.h""; #include ""HFitInterface.h""; #include ""Fit/DataRange.h""; #include ""Fit/BinData.h""; #include ""Math/GoFTest.h""; #include ""Math/MinimizerOptions.h""; #include ""Math/QuantFuncMathCore.h""; #include ""TH1Merger.h"". Include dependency graph for TH1.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; static Bool_t AlmostEqual (Double_t a, Double_t b, Double_t epsilon=0.00000001);  Test if two double are almost equal. ;  ; static Bool_t AlmostInteger (Double_t a, Double_t epsilon=0.00000001);  Test if a double is almost an integer. ;  ; void H1InitExpo ();  Compute Initial values of parameters for an exponential. ;  ; void H1InitGaus ();  Compute Initial values of parameters for a gaussian. ;  ; void H1InitPolynom ();  Compute Initial values of parameters for a polynom. ;  ; void H1LeastSquareFit (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx.html:89,Load,Loading,89,doc/master/TH1_8cxx.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TH1.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <array>; 13#include <cctype>; 14#include <climits>; 15#include <cmath>; 16#include <cstdio>; 17#include <cstdlib>; 18#include <cstring>; 19#include <iostream>; 20#include <sstream>; 21#include <fstream>; 22 ; 23#include ""TROOT.h""; 24#include ""TBuffer.h""; 25#include ""TEnv.h""; 26#include ""TClass.h""; 27#include ""TMath.h""; 28#include ""THashList.h""; 29#include ""TH1.h""; 30#include ""TH2.h""; 31#include ""TH3.h""; 32#include ""TF2.h""; 33#include ""TF3.h""; 34#include ""TPluginManager.h""; 35#include ""TVirtualPad.h""; 36#include ""TRandom.h""; 37#include ""TVirtualFitter.h""; 38#include ""THLimitsFinder.h""; 39#include ""TProfile.h""; 40#include ""TStyle.h""; 41#include ""TVectorF.h""; 42#include ""TVectorD.h""; 43#include ""TBrowser.h""; 44#include ""TError.h""; 45#include ""TVirtualHistPainter.h""; 46#include ""TVirtualFFT.h""; 47#include ""TVirtualPaveStats.h""; 48 ; 49#include ""HFitInterface.h""; 50#include ""Fit/DataRange.h""; 51#include ""Fit/BinData.h""; 52#include ""Math/GoFTest.h""; 53#include ""Math/MinimizerOptions.h""; 54#include ""Math/QuantFuncMathCore.h""; 55 ; 56#include ""TH1Merger.h""; 57 ; 58/** \addtogroup Histograms; 59@{; 60\class TH1C; 61\brief 1-D histogram with a byte per channel (see TH1 documentation); 62\class TH1S; 63\brief 1-D histogram with a short per channel (see TH1 documentation); 64\class TH1I; 65\brief 1-D histogram with an int per channel (see TH1 documentation); 66\class TH1L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:86,Load,Loading,86,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TH2.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 26/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TClass.h""; 15#include ""THashList.h""; 16#include ""TH2.h""; 17#include ""TVirtualPad.h""; 18#include ""TF2.h""; 19#include ""TProfile.h""; 20#include ""TRandom.h""; 21#include ""TMatrixFBase.h""; 22#include ""TMatrixDBase.h""; 23#include ""THLimitsFinder.h""; 24#include ""TError.h""; 25#include ""TMath.h""; 26#include ""TObjString.h""; 27#include ""TObjArray.h""; 28#include ""TVirtualHistPainter.h""; 29#include ""snprintf.h""; 30 ; 31ClassImp(TH2);; 32 ; 33/** \addtogroup Histograms; 34@{; 35\class TH2C; 36\brief 2-D histogram with a byte per channel (see TH1 documentation); 37\class TH2S; 38\brief 2-D histogram with a short per channel (see TH1 documentation); 39\class TH2I; 40\brief 2-D histogram with an int per channel (see TH1 documentation); 41\class TH2L; 42\brief 2-D histogram with a long64 per channel (see TH1 documentation); 43\class TH2F; 44\brief 2-D histogram with a float per channel (see TH1 documentation); 45\class TH2D; 46\brief 2-D histogram with a double per channel (see TH1 documentation); 47@}; 48*/; 49 ; 50/** \class TH2; 51 Service class for 2-D histogram classes; 52 ; 53- TH2C a 2-D histogram with one byte per cell (char). Maximum bin content = 127; 54- TH2S a 2-D histogram with two bytes per cell (short integer). Maximum bin content = 32767; 55- TH2I a 2-D histogram with four bytes per cell (32 bit integer). Maximum bin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:86,Load,Loading,86,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TH2Poly.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2Poly.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// TH2Poly v2.1; 3// Author: Olivier Couet, Deniz Gunceler, Danilo Piparo; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#include ""TH2Poly.h""; 14#include ""TMultiGraph.h""; 15#include ""TGraph.h""; 16#include ""TInterpreter.h""; 17#include ""Riostream.h""; 18#include ""TList.h""; 19#include ""TMath.h""; 20#include <cassert>; 21 ; 22ClassImp(TH2Poly);; 23 ; 24/** \class TH2Poly; 25 \ingroup Histograms; 262D Histogram with Polygonal Bins; 27 ; 28## Overview; 29`TH2Poly` is a 2D Histogram class (TH2) allowing to define polygonal; 30bins of arbitrary shape.; 31 ; 32Each bin in the `TH2Poly` histogram is a `TH2PolyBin` object.; 33`TH2PolyBin` is a very simple class containing the vertices (stored; 34as `TGraph`s or `TMultiGraph`s ) and contents of the polygonal; 35bin as well as several related functions.; 36 ; 37Essentially, a `TH2Poly` is a TList of `TH2PolyBin` objects; 38with methods to manipulate them.; 39 ; 40Bins are defined using one of the `AddBin()` methods. The bin definition; 41should be done before filling.; 42 ; 43The histogram can be filled with `Fill(Double_t x, Double_t y, Double_t w); 44`. `w` is the weight.; 45If no weight is specified, it is assumed to be 1.; 46 ; 47Not all histogram's area need to be binned. Filling an area without bins,; 48will falls into the overflows. Adding a bin is not retroactive; it doesn't; 49affect previous fillings. A `Fill()` call, that; 50was previously ignored due to the lack of a bin at the specified ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8cxx_source.html:90,Load,Loading,90,doc/master/TH2Poly_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TH3.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH3.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 27/10/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TClass.h""; 15#include ""THashList.h""; 16#include ""TH3.h""; 17#include ""TProfile2D.h""; 18#include ""TH2.h""; 19#include ""TF3.h""; 20#include ""TVirtualPad.h""; 21#include ""TVirtualHistPainter.h""; 22#include ""THLimitsFinder.h""; 23#include ""TRandom.h""; 24#include ""TError.h""; 25#include ""TMath.h""; 26#include ""TObjString.h""; 27 ; 28ClassImp(TH3);; 29 ; 30/** \addtogroup Histograms; 31@{; 32\class TH3C; 33\brief 3-D histogram with a byte per channel (see TH1 documentation); 34\class TH3S; 35\brief 3-D histogram with a short per channel (see TH1 documentation); 36\class TH3I; 37\brief 3-D histogram with an int per channel (see TH1 documentation); 38\class TH3L; 39\brief 3-D histogram with a long64 per channel (see TH1 documentation); 40\class TH3F; 41\brief 3-D histogram with a float per channel (see TH1 documentation); 42\class TH3D; 43\brief 3-D histogram with a double per channel (see TH1 documentation); 44@}; 45*/; 46 ; 47/** \class TH3; 48 \ingroup Histograms; 49The 3-D histogram classes derived from the 1-D histogram classes.; 50All operations are supported (fill, fit).; 51Drawing is currently restricted to one single option.; 52A cloud of points is drawn. The number of points is proportional to; 53cell content.; 54 ; 55- TH3C a 3-D histogram with one byte per cell (char). Maximum bin content = 127; 56- TH3S a 3-D histogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:86,Load,Loading,86,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/THStack.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THStack.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 10/12/2001; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TClassRef.h""; 14#include ""THStack.h""; 15#include ""TVirtualPad.h""; 16#include ""TVirtualHistPainter.h""; 17#include ""THashList.h""; 18#include ""TH2.h""; 19#include ""TH3.h""; 20#include ""TList.h""; 21#include ""TStyle.h""; 22#include ""TBrowser.h""; 23#include ""TMath.h""; 24#include ""TObjString.h""; 25#include ""TVirtualMutex.h""; 26#include ""strlcpy.h""; 27 ; 28#include <iostream>; 29 ; 30ClassImp(THStack);; 31 ; 32////////////////////////////////////////////////////////////////////////////////; 33 ; 34/** \class THStack; 35 \ingroup Histograms; 36The Histogram stack class; 37 ; 38A THStack is a collection of TH1 or TH2 histograms. By using THStack::Draw(), the entire; 39histogram collection is drawn at once according to the specified drawing option.; 40 ; 41THStack::Add() allows adding a new histogram to the list. Note that the THStack does not; 42take ownership of the objects in the list.; 43 ; 44\anchor HS00; 45### Stack painting; 46 ; 47By default, histograms are shown stacked:; 48 - the first histogram is painted; 49 - then the sum of the first and second histograms is painted, and so on; 50 ; 51The axis ranges are computed automatically along the X and Y axes to display the complete; 52histogram collection.; 53 ; 54Warning: Histogram bins with negative content may produce wrong plots.; 55 ; 56### Stack's drawing options; 57 ; 58The speci",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THStack_8cxx_source.html:90,Load,Loading,90,doc/master/THStack_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THStack_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/THn.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THn.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Axel Naumann (2011-12-13); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""THn.h""; 13 ; 14namespace {; 15 //______________________________________________________________________________; 16 //; 17 // Helper struct to hold one dimension's bin range for THnBinIter.; 18 /////////////////////////////////////////////////////////////////////////////; 19 ; 20 struct CounterRange_t {; 21 Int_t i;; 22 Int_t first;; 23 Int_t last;; 24 Int_t len;; 25 Long64_t cellSize;; 26 };; 27 ; 28 //______________________________________________________________________________; 29 //; 30 // THnBinIter iterates over all bins of a THn, recursing over all dimensions.; 31 /////////////////////////////////////////////////////////////////////////////; 32 ; 33 class THnBinIter: public ROOT::Internal::THnBaseBinIter {; 34 public:; 35 THnBinIter(Int_t dim, const TObjArray* axes, const TNDArray* arr,; 36 Bool_t respectAxisRange);; 37 ~THnBinIter() override { delete [] fCounter; }; 38 ; 39 Long64_t Next(Int_t* coord = nullptr) override;; 40 Int_t GetCoord(Int_t dim) const override { return fCounter[dim].i; }; 41 private:; 42 THnBinIter(const THnBinIter&) = delete; // intentionally unimplemented; 43 THnBinIter& operator=(const THnBinIter&) = delete; // intentionally unimplemented; 44 ; 45 public:; 46 Int_t fNdimensions;; 47 Long64_t fIndex;; 48 const TNDArray* fArray;; 49 CounterRange_t* fCounter;; 50 };; 51 ; 52 ; 53 //////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THn_8cxx_source.html:86,Load,Loading,86,doc/master/THn_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THn_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/THnSparse.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THnSparse.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Axel Naumann (2007-09-11); 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""THnSparse.h""; 13 ; 14#include ""TAxis.h""; 15#include ""TClass.h""; 16#include ""TDataMember.h""; 17#include ""TDataType.h""; 18 ; 19namespace {; 20//______________________________________________________________________________; 21//; 22// THnSparseBinIter iterates over all filled bins of a THnSparse.; 23//______________________________________________________________________________; 24 ; 25 class THnSparseBinIter: public ROOT::Internal::THnBaseBinIter {; 26 public:; 27 THnSparseBinIter(Bool_t respectAxisRange, const THnSparse* hist):; 28 ROOT::Internal::THnBaseBinIter(respectAxisRange), fHist(hist),; 29 fNbins(hist->GetNbins()), fIndex(-1) {; 30 // Construct a THnSparseBinIter; 31 fCoord = new Int_t[hist->GetNdimensions()];; 32 fCoord[0] = -1;; 33 }; 34 ~THnSparseBinIter() override { delete [] fCoord; }; 35 ; 36 Int_t GetCoord(Int_t dim) const override;; 37 Long64_t Next(Int_t* coord = nullptr) override;; 38 ; 39 private:; 40 THnSparseBinIter(const THnSparseBinIter&) = delete; // intentionally unimplemented; 41 THnSparseBinIter& operator=(const THnSparseBinIter&) = delete; // intentionally unimplemented; 42 ; 43 const THnSparse* fHist;; 44 Int_t* fCoord; // coord buffer for fIndex; fCoord[0] == -1 if not yet calculated; 45 Long64_t fNbins; // number of bins to iterate over; 46 Long64_t fIndex; // current bin index; 47 };; 48}; 49 ; 50Int_t THnSp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THnSparse_8cxx_source.html:92,Load,Loading,92,doc/master/THnSparse_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THnSparse_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TMultiGraph.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMultiGraph.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TEnv.h""; 14#include ""TBrowser.h""; 15#include ""TMultiGraph.h""; 16#include ""TGraph.h""; 17#include ""TH1.h""; 18#include ""TH2.h""; 19#include ""TVirtualPad.h""; 20#include ""TVirtualFitter.h""; 21#include ""TPluginManager.h""; 22#include ""TMath.h""; 23#include ""TF1.h""; 24#include ""strlcpy.h""; 25 ; 26#include ""HFitInterface.h""; 27#include ""Fit/DataRange.h""; 28#include ""Math/MinimizerOptions.h""; 29 ; 30#include <iostream>; 31#include <cstdlib>; 32#include <cctype>; 33 ; 34extern void H1LeastSquareSeqnd(Int_t n, Double_t *a, Int_t idim, Int_t &ifail, Int_t k, Double_t *b);; 35 ; 36ClassImp(TMultiGraph);; 37 ; 38 ; 39////////////////////////////////////////////////////////////////////////////////; 40 ; 41/** \class TMultiGraph; 42 \ingroup Graphs; 43 \brief A TMultiGraph is a collection of TGraph (or derived) objects.; 44 ; 45- [Introduction](\ref MG00); 46- [MultiGraphs' drawing](\ref MG01); 47 - [Setting drawing options](\ref MG01a); 48 - [Titles setting](\ref MG01b); 49 - [The option \""3D\""](\ref MG01c); 50 - [Legend drawing](\ref MG01d); 51 - [Automatic coloring](\ref MG01e); 52 - [Reverse axis](\ref MG01f); 53- [MultiGraphs' fitting](\ref MG02); 54 - [Fit box position](\ref MG02a); 55- [Axis' limits setting](\ref MG03); 56 ; 57 ; 58\anchor MG00; 59### Introduction; 60 ; 61A TMultiGraph allows to manipulate a set of graphs as a sing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMultiGraph_8cxx_source.html:94,Load,Loading,94,doc/master/TMultiGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMultiGraph_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TProfile.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 29/09/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TProfile.h""; 13#include ""TBuffer.h""; 14#include ""TMath.h""; 15#include ""TF1.h""; 16#include ""THLimitsFinder.h""; 17#include <iostream>; 18#include ""TError.h""; 19#include ""TClass.h""; 20#include ""TObjString.h""; 21 ; 22#include ""TProfileHelper.h""; 23 ; 24Bool_t TProfile::fgApproximate = kFALSE;; 25 ; 26ClassImp(TProfile);; 27 ; 28/** \class TProfile; 29 \ingroup Histograms; 30 Profile Histogram.; 31 Profile histograms are used to display the mean; 32 value of Y and its error for each bin in X. The displayed error is by default the; 33 standard error on the mean (i.e. the standard deviation divided by the sqrt(n) ).; 34 Profile histograms are in many cases an; 35 elegant replacement of two-dimensional histograms. The inter-relation of two; 36 measured quantities X and Y can always be visualized by a two-dimensional; 37 histogram or scatter plot, but if Y is an unknown (but single-valued); 38 approximate function of X, this function is displayed by a profile histogram with; 39 much better precision than by a scatter plot.; 40 ; 41 The following formulae show the cumulated contents (capital letters) and the values; 42 displayed by the printing or plotting routines (small letters) of the elements for bin j.; 43 \f[; 44 \begin{align}; 45 H(j) &= \sum w \cdot Y \\; 46 E(j) &= \sum w \cdot Y^2 \\; 47 W(j) &= \sum w & &\text{if weights different from 1, the numbe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:91,Load,Loading,91,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TProfile2D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile2D.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 16/04/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TProfile2D.h""; 13#include ""TBuffer.h""; 14#include ""TMath.h""; 15#include ""THLimitsFinder.h""; 16#include ""TError.h""; 17#include ""TClass.h""; 18#include ""TProfileHelper.h""; 19#include <iostream>; 20 ; 21Bool_t TProfile2D::fgApproximate = kFALSE;; 22 ; 23ClassImp(TProfile2D);; 24 ; 25/** \class TProfile2D; 26 \ingroup Histograms; 27 Profile2D histograms are used to display the mean; 28 value of Z and its error for each cell in X,Y.; 29 Profile2D histograms are in many cases an; 30 elegant replacement of three-dimensional histograms : the inter-relation of three; 31 measured quantities X, Y and Z can always be visualized by a three-dimensional; 32 histogram or scatter-plot; its representation on the line-printer is not particularly; 33 satisfactory, except for sparse data. If Z is an unknown (but single-valued); 34 approximate function of X,Y this function is displayed by a profile2D histogram with; 35 much better precision than by a scatter-plot.; 36 ; 37 The following formulae show the cumulated contents (capital letters) and the values; 38 displayed by the printing or plotting routines (small letters) of the elements for cell i, j.; 39 \f[; 40 \begin{align}; 41 H(i,j) &= \sum w \cdot Z \\; 42 E(i,j) &= \sum w \cdot Z^2 \\; 43 W(i,j) &= \sum w \\; 44 h(i,j) &= \frac{H(i,j)}{W(i,j)} \\; 45 s(i,j) &= \sqrt{E(i,j)/W(i,j)- h(i,j)^2} \\; 46 e(i,j) &= \",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:93,Load,Loading,93,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TProfile3D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile3D.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 17/05/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TProfile3D.h""; 13#include ""TProfile2D.h""; 14#include ""THashList.h""; 15#include ""TMath.h""; 16#include ""THLimitsFinder.h""; 17#include <iostream>; 18#include ""TError.h""; 19#include ""TClass.h""; 20 ; 21#include ""TProfileHelper.h""; 22 ; 23Bool_t TProfile3D::fgApproximate = kFALSE;; 24 ; 25ClassImp(TProfile3D);; 26 ; 27/** \class TProfile3D; 28 \ingroup Histograms; 29 Profile3D histograms are used to display the mean; 30 value of T and its RMS for each cell in X,Y,Z.; 31 Profile3D histograms are in many cases an; 32 The inter-relation of three measured quantities X, Y, Z and T can always; 33 be visualized by a four-dimensional histogram or scatter-plot;; 34 its representation on the line-printer is not particularly; 35 satisfactory, except for sparse data. If T is an unknown (but single-valued); 36 approximate function of X,Y,Z this function is displayed by a profile3D histogram with; 37 much better precision than by a scatter-plot.; 38 ; 39 The following formulae show the cumulated contents (capital letters) and the values; 40 displayed by the printing or plotting routines (small letters) of the elements for cell I, J.; 41 ; 42 2; 43 H(I,J,K) = sum T E(I,J,K) = sum T; 44 l(I,J,K) = sum l L(I,J,K) = sum l; 45 h(I,J,K) = H(I,J,K)/L(I,J,K) s(I,J,K) = sqrt(E(I,J,K)/L(I,J,K)- h(I,J,K)**2); 46 e(I,J,K) = s(I,J,K)/sqrt(L(I,J,K)); 47 ; 48 In the special cas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:93,Load,Loading,93,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TScatter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TScatter.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Olivier Couet 18/05/2022; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#include ""TROOT.h""; 14#include ""TBuffer.h""; 15#include ""TScatter.h""; 16#include ""TStyle.h""; 17#include ""TMath.h""; 18#include ""TVirtualPad.h""; 19#include ""TH2.h""; 20#include ""TVirtualGraphPainter.h""; 21#include ""strtok.h""; 22 ; 23#include <iostream>; 24#include <fstream>; 25#include <cstring>; 26#include <string>; 27 ; 28ClassImp(TScatter);; 29 ; 30 ; 31////////////////////////////////////////////////////////////////////////////////; 32 ; 33/** \class TScatter; 34 \ingroup Graphs; 35A TScatter is able to draw four variables scatter plot on a single plot. The two first; 36variables are the x and y position of the markers, the third is mapped on the current; 37color map and the fourth on the marker size.; 38 ; 39The following example demonstrates how it works:; 40 ; 41Begin_Macro(source); 42../../../tutorials/graphs/scatter.C; 43End_Macro; 44 ; 45### TScatter's plotting options; 46TScatter can be drawn with the following options:; 47 ; 48| Option | Description |; 49|----------|-------------------------------------------------------------------|; 50| ""A"" | Produce a new plot with Axis around the graph |; 51 ; 52*/; 53 ; 54 ; 55////////////////////////////////////////////////////////////////////////////////; 56/// TScatter default constructor.; 57 ; 58TScatter::TScatter(); 59{; 60}; 61 ; 62////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TScatter_8cxx_source.html:91,Load,Loading,91,doc/master/TScatter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TScatter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/hist/src/TVirtualFitter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualFitter.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id$; 2// Author: Rene Brun 31/08/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13/** \class TVirtualFitter; 14 \ingroup Hist; 15 Abstract Base Class for Fitting; 16*/; 17 ; 18#include ""TROOT.h""; 19#include ""TVirtualFitter.h""; 20#include ""TPluginManager.h""; 21#include ""TEnv.h""; 22#include ""Math/MinimizerOptions.h""; 23#include ""ThreadLocalStorage.h""; 24 ; 25 ; 26// Implement a thread local static member as a replacement; 27// for TVirtualFitter::fgFitter; 28namespace {; 29 struct FitterGlobals {; 30 FitterGlobals() : fFitter(nullptr),fMaxPar(0) {}; 31 ; 32 TVirtualFitter *fFitter;; 33 Int_t fMaxPar;; 34 TString fDefault;; 35 };; 36 FitterGlobals &GetGlobals() {; 37 TTHREAD_TLS_DECL(FitterGlobals,globals);; 38 return globals;; 39 }; 40 TVirtualFitter *&GetGlobalFitter() {; 41 return GetGlobals().fFitter;; 42 }; 43 Int_t &GetGlobalMaxPar() {; 44 return GetGlobals().fMaxPar;; 45 }; 46 TString &GetGlobalDefault() {; 47 return GetGlobals().fDefault;; 48 }; 49}; 50//Int_t TVirtualFitter::fgMaxpar = 0;; 51// Int_t TVirtualFitter::fgMaxiter = 5000;; 52// Double_t TVirtualFitter::fgPrecision = 1e-6;; 53// Double_t TVirtualFitter::fgErrorDef = 1;; 54//TString TVirtualFitter::fgDefault = """";; 55 ; 56ClassImp(TVirtualFitter);; 57 ; 58#ifdef R__COMPLETE_MEM_TERMINATION; 59namespace {; 60 struct TVirtualFitterCleanup {; 61 ~TVirtualFitterCleanup() {; 62 delete TVirtualFitter::GetFitter();; 63 }; 64 };; 65 TVirtualFitterCleanup cleanup;; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFitter_8cxx_source.html:97,Load,Loading,97,doc/master/TVirtualFitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFitter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/histpainter/inc/TGraphPainter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPainter.h. Go to the documentation of this file. 1// @(#)root/histpainter:$Id: TGraphPainter.h,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TGraphPainter; 13#define ROOT_TGraphPainter; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TGraphPainter //; 19// //; 20// helper class to draw graphs //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TVirtualGraphPainter.h""; 25#include <vector>; 26 ; 27class TGraph;; 28class TF1;; 29class TScatter;; 30 ; 31class TGraphPainter : public TVirtualGraphPainter {; 32 ; 33public:; 34 ; 35 TGraphPainter();; 36 ; 37 ~TGraphPainter() override;; 38 ; 39 void ComputeLogs(Int_t npoints, Int_t opt);; 40 Int_t DistancetoPrimitiveHelper(TGraph *theGraph, Int_t px, Int_t py) override;; 41 void DrawPanelHelper(TGraph *theGraph) override;; 42 void ExecuteEventHelper(TGraph *theGraph, Int_t event, Int_t px, Int_t py) override;; 43 char *GetObjectInfoHelper(TGraph *theGraph, Int_t px, Int_t py) const override;; 44 virtual Int_t GetHighlightPoint(TGraph *theGraph) const;; 45 virtual void HighlightPoint(TGraph *theGraph, Int_t hpoint, Int_t distance);; 46 virtual void PaintHighlightPoint(TGraph *theGraph, Option_t *option);; 47 void PaintHelper(TGraph *theGraph, Option_t *option) override;; 48 void PaintGraph(TGraph *theGraph, Int_t npoints, const Double_t *x, const Double_t *y, Option_t *chopt) override;; 49 void Pain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8h_source.html:101,Load,Loading,101,doc/master/TGraphPainter_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/histpainter/inc/THistPainter.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; THistPainter.h File Reference. #include ""TVirtualHistPainter.h""; #include ""TString.h""; #include <vector>; #include <utility>; #include <memory>. Include dependency graph for THistPainter.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  THistPainter;  The histogram painter class. More...;  ; struct  THistRenderingRegion;  . Variables; const Int_t kMaxCuts = 16;  . Variable Documentation. ◆ kMaxCuts. const Int_t kMaxCuts = 16. Definition at line 41 of file THistPainter.h. histhistpainterincTHistPainter.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8h.html:103,Load,Loading,103,doc/master/THistPainter_8h.html,https://root.cern,https://root.cern/doc/master/THistPainter_8h.html,1,['Load'],['Loading']
Performance,". ROOT: hist/histpainter/inc/THistPainter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THistPainter.h. Go to the documentation of this file. 1// @(#)root/histpainter:$Id$; 2// Author: Rene Brun, Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_THistPainter; 12#define ROOT_THistPainter; 13 ; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// THistPainter //; 18// //; 19// helper class to draw histograms //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23 ; 24#include ""TVirtualHistPainter.h""; 25#include ""TString.h""; 26 ; 27#include <vector>; 28#include <utility>; 29#include <memory>; 30 ; 31 ; 32class TH1;; 33class TAxis;; 34class TCutG;; 35class TGaxis;; 36class TPainter3dAlgorithms;; 37class TGraph2DPainter;; 38class TPie;; 39class TF3;; 40 ; 41const Int_t kMaxCuts = 16;; 42 ; 43struct THistRenderingRegion; 44{; 45 std::pair<Int_t, Int_t> fPixelRange;; 46 std::pair<Int_t, Int_t> fBinRange;; 47};; 48 ; 49 ; 50class THistPainter : public TVirtualHistPainter {; 51 ; 52protected:; 53 TH1 *fH; ///< Pointer to histogram to paint; 54 TAxis *fXaxis; ///< Pointer to X axis; 55 TAxis *fYaxis; ///< Pointer to Y axis; 56 TAxis *fZaxis; ///< Pointer to Z axis; 57 TList *fFunctions; ///< Pointer to histogram list of functions; 58 std::unique_ptr<TPainter3dAlgorithms> fLego; ///< Pointer to a TPainter3dAlgorithms object; 59 std::unique_ptr<TGraph2DPainter> fGraph2DPainter; ///< Pointer to a TGraph2DPainter object; 60 std::unique_ptr<TPie> fPie; ///< Pointer to a TPie in case of option PIE; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8h_source.html:100,Load,Loading,100,doc/master/THistPainter_8h_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/histpainter/src/TGraphPainter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPainter.cxx. Go to the documentation of this file. 1// @(#)root/histpainter:$Id: TGraphPainter.cxx,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TGraphPainter.h""; 14#include ""TMath.h""; 15#include ""TGraph.h""; 16#include ""TPolyLine.h""; 17#include ""TPolyMarker.h""; 18#include ""TCanvas.h""; 19#include ""TStyle.h""; 20#include ""TH1.h""; 21#include ""TH2.h""; 22#include ""TF1.h""; 23#include ""TPaveStats.h""; 24#include ""TGaxis.h""; 25#include ""TGraphAsymmErrors.h""; 26#include ""TGraphMultiErrors.h""; 27#include ""TGraphBentErrors.h""; 28#include ""TGraphPolargram.h""; 29#include ""TGraphPolar.h""; 30#include ""TGraphQQ.h""; 31#include ""TScatter.h""; 32#include ""TPaletteAxis.h""; 33#include ""TLatex.h""; 34#include ""TArrow.h""; 35#include ""TFrame.h""; 36#include ""TMarker.h""; 37#include ""TVirtualPadEditor.h""; 38#include ""TVirtualX.h""; 39#include ""TRegexp.h""; 40#include ""strlcpy.h""; 41#include ""snprintf.h""; 42#include <memory>; 43 ; 44Int_t TGraphPainter::fgMaxPointsPerLine = 50;; 45 ; 46static Int_t gHighlightPoint = -1; // highlight point of graph; 47static TGraph *gHighlightGraph = nullptr; // pointer to graph with highlight point; 48static std::unique_ptr<TMarker> gHighlightMarker; // highlight marker; 49 ; 50ClassImp(TGraphPainter);; 51 ; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54 ; 55/*! \class TGraphPainter; 56 \ingroup Histpainter; 57 \brief The graph painter class. Implements all graphs' drawing's options",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:103,Load,Loading,103,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: hist/histpainter/src/THistPainter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THistPainter.cxx. Go to the documentation of this file. 1// @(#)root/histpainter:$Id$; 2// Author: Rene Brun, Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <cstdlib>; 13#include <cstring>; 14#include <cstdio>; 15#include <cctype>; 16#include <iostream>; 17 ; 18#include ""TROOT.h""; 19#include ""TSystem.h""; 20#include ""THistPainter.h""; 21#include ""TH2.h""; 22#include ""TH2Poly.h""; 23#include ""TH3.h""; 24#include ""TProfile.h""; 25#include ""TProfile2D.h""; 26#include ""THStack.h""; 27#include ""TF2.h""; 28#include ""TF3.h""; 29#include ""TCutG.h""; 30#include ""TMatrixDBase.h""; 31#include ""TMatrixFBase.h""; 32#include ""TVectorD.h""; 33#include ""TVectorF.h""; 34#include ""TCanvas.h""; 35#include ""TPad.h""; 36#include ""TPaveStats.h""; 37#include ""TFrame.h""; 38#include ""TLatex.h""; 39#include ""TPolyLine.h""; 40#include ""TPoints.h""; 41#include ""TStyle.h""; 42#include ""TGraph.h""; 43#include ""TMultiGraph.h""; 44#include ""TPie.h""; 45#include ""TGaxis.h""; 46#include ""TColor.h""; 47#include ""TPainter3dAlgorithms.h""; 48#include ""TGraph2D.h""; 49#include ""TGraph2DPainter.h""; 50#include ""TGraphDelaunay2D.h""; 51#include ""TView.h""; 52#include ""TMath.h""; 53#include ""TRandom2.h""; 54#include ""TObjArray.h""; 55#include ""Hoption.h""; 56#include ""Hparam.h""; 57#include ""TPluginManager.h""; 58#include ""TPaletteAxis.h""; 59#include ""TCrown.h""; 60#include ""TArrow.h""; 61#include ""TVirtualPadEditor.h""; 62#include ""TVirtualX.h""; 63#include ""TEnv.h""; 64#include ""TPoint.h""; 65#include ""TImage.h""; 66#include ""TCandle.h""; 67#include ""strlcpy.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:102,Load,Loading,102,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['Load'],['Loading']
Performance,. ROOT: int Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. int Class Reference. The documentation for this class was generated from the following files:. int. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classint.html:72,Load,Loading,72,doc/master/classint.html,https://root.cern,https://root.cern/doc/master/classint.html,1,['Load'],['Loading']
Performance,. ROOT: int Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. int Class Reference. The documentation for this class was generated from the following files:. int. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classint.html:71,Load,Loading,71,doc/v632/classint.html,https://root.cern,https://root.cern/doc/v632/classint.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/inc/TDirectoryFile.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectoryFile.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 22/01/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TDirectoryFile; 13#define ROOT_TDirectoryFile; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TDirectoryFile //; 19// //; 20// Describe directory structure in a ROOT file. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""Compression.h""; 25#include ""TDirectory.h""; 26#include ""TDatime.h""; 27#include ""TList.h""; 28 ; 29class TKey;; 30class TFile;; 31 ; 32class TDirectoryFile : public TDirectory {; 33 ; 34protected:; 35 Bool_t fModified{kFALSE}; ///< True if directory has been modified; 36 Bool_t fWritable{kFALSE}; ///< True if directory is writable; 37 TDatime fDatimeC; ///< Date and time when directory is created; 38 TDatime fDatimeM; ///< Date and time of last modification; 39 Int_t fNbytesKeys{0}; ///< Number of bytes for the keys; 40 Int_t fNbytesName{0}; ///< Number of bytes in TNamed at creation time; 41 Int_t fBufferSize{0}; ///< Default buffer size to create new TKeys; 42 Long64_t fSeekDir{0}; ///< Location of directory on file; 43 Long64_t fSeekParent{0}; ///< Location of parent directory on file; 44 Long64_t fSeekKeys{0}; ///< Location of Keys record on file; 45 TFile *fFile{nullptr}; ///< Pointer to current file in memory; 46 TList *fKeys{nullptr}; ///< Pointer to keys list in memory; 47 ; 48 void CleanTargets();; 49 void I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8h_source.html:91,Load,Loading,91,doc/master/TDirectoryFile_8h_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/inc/TFile.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros ; TFile.h File Reference. #include <atomic>; #include <string>; #include ""Compression.h""; #include ""TDirectoryFile.h""; #include ""TUrl.h""; #include ""ROOT/RConcurrentHashColl.hxx""; #include ""ROOT/TRWSpinLock.hxx""; #include <mutex>. Include dependency graph for TFile.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TFile::InfoListRet;  Simple struct of the return value of GetStreamerInfoListImpl. More...;  ; class  TFile;  A ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-like logical structure, possibly including subdirectory hierarchies. More...;  ; class  TFileOpenHandle;  Class holding info about the file being opened. More...;  . Macros; #define gFile   (TFile::CurrentFile());  . Macro Definition Documentation. ◆ gFile. #define gFile   (TFile::CurrentFile()). Definition at line 347 of file TFile.h. ioioincTFile.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8h.html:85,Load,Loading,85,doc/master/TFile_8h.html,https://root.cern,https://root.cern/doc/master/TFile_8h.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/inc/TFile.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFile.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFile; 13#define ROOT_TFile; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TFile //; 19// //; 20// ROOT file. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include <atomic>; 25#include <string>; 26 ; 27#include ""Compression.h""; 28#include ""TDirectoryFile.h""; 29#include ""TUrl.h""; 30#include ""ROOT/RConcurrentHashColl.hxx""; 31 ; 32// Not a part of TFile interface; provide a forward declaration instead of #include.; 33// #ifndef R__LESS_INCLUDES; 34// #include ""TMap.h""; 35// #endif; 36 ; 37#ifdef R__USE_IMT; 38#include ""ROOT/TRWSpinLock.hxx""; 39#include <mutex>; 40#endif; 41 ; 42class TMap;; 43class TFree;; 44class TArrayC;; 45class TArchiveFile;; 46class TFileOpenHandle;; 47class TFileCacheRead;; 48class TFileCacheWrite;; 49class TProcessID;; 50class TStopwatch;; 51class TFilePrefetch;; 52 ; 53class TFile : public TDirectoryFile {; 54 friend class TDirectoryFile;; 55 friend class TFilePrefetch;; 56// TODO: We need to make sure only one TBasket is being written at a time; 57// if we are writing multiple baskets in parallel.; 58#ifdef R__USE_IMT; 59 friend class TBasket;; 60#endif; 61 ; 62public:; 63 /// Asynchronous open request status; 64 enum EAsyncOpenStatus { kAOSNotAsync = -1, kAOSFailure = 0,; 65 kAOSInProgress = 1, kAOSSuccess = 2 };; 66 /// Open timeo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8h_source.html:82,Load,Loading,82,doc/master/TFile_8h_source.html,https://root.cern,https://root.cern/doc/master/TFile_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/inc/TFree.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFree.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 28/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TFree; 13#define ROOT_TFree; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TFree //; 19// //; 20// Description of free segments on a file. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TObject.h""; 25 ; 26 ; 27class TFree : public TObject {; 28 ; 29protected:; 30 Long64_t fFirst; ///<First free word of segment; 31 Long64_t fLast; ///<Last free word of segment; 32 ; 33public:; 34 TFree();; 35 TFree(TList *lfree, Long64_t first, Long64_t last);; 36 ~TFree() override;; 37 TFree *AddFree(TList *lfree, Long64_t first, Long64_t last);; 38 virtual void FillBuffer(char *&buffer);; 39 TFree *GetBestFree(TList *lfree, Int_t nbytes);; 40 Long64_t GetFirst() const {return fFirst;}; 41 Long64_t GetLast() const {return fLast;}; 42 void ls(Option_t * = """") const override;; 43 virtual void ReadBuffer(char *&buffer);; 44 void SetFirst(Long64_t first) {fFirst=first;}; 45 void SetLast(Long64_t last) {fLast=last;}; 46 Int_t Sizeof() const;; 47 ; 48 ClassDefOverride(TFree,1); //Description of free segments on a file; 49};; 50 ; 51#endif; Int_tint Int_tDefinition RtypesCore.h:45; Long64_tlong long Long64_tDefinition RtypesCore.h:69; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; TObject.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFree_8h_source.html:82,Load,Loading,82,doc/master/TFree_8h_source.html,https://root.cern,https://root.cern/doc/master/TFree_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/inc/TKey.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TKey.h. Go to the documentation of this file. 1// @(#)root/io; 2// Author: Rene Brun 28/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TKey; 13#define ROOT_TKey; 14 ; 15#include ""TNamed.h""; 16#include ""TDatime.h""; 17#include ""TClass.h""; 18#ifdef R__LESS_INCLUDES; 19class TBuffer;; 20#else; 21#include ""TBuffer.h""; 22#endif; 23 ; 24class TBrowser;; 25class TDirectory;; 26class TFile;; 27 ; 28class TKey : public TNamed {; 29 ; 30private:; 31 enum EStatusBits {; 32 kIsDirectoryFile = BIT(14),; 33 kReproducible = BIT(15); 34 };; 35 TKey(const TKey&) = delete; // TKey objects are not copiable.; 36 TKey& operator=(const TKey&) = delete; // TKey objects are not copiable.; 37 ; 38protected:; 39 Int_t fVersion; ///< Key version identifier; 40 Int_t fNbytes; ///< Number of bytes for the object on file; 41 Int_t fObjlen; ///< Length of uncompressed object in bytes; 42 TDatime fDatime; ///< Date/Time of insertion in file; 43 Short_t fKeylen; ///< Number of bytes for the key itself; 44 Short_t fCycle; ///< Cycle number; 45 Long64_t fSeekKey; ///< Location of object on file; 46 Long64_t fSeekPdir; ///< Location of parent directory on file; 47 TString fClassName; ///< Object Class name; 48 Int_t fLeft; ///< Number of bytes left in current segment; 49 char *fBuffer; ///< Object buffer; 50 TBuffer *fBufferRef; ///< Pointer to the TBuffer object; 51 UShort_t fPidOffset; ///<!Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir; 52 TDirectory *fMotherDir; ///<!point",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8h_source.html:81,Load,Loading,81,doc/master/TKey_8h_source.html,https://root.cern,https://root.cern/doc/master/TKey_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/inc/TStreamerInfo.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfo.h. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TStreamerInfo; 13#define ROOT_TStreamerInfo; 14 ; 15#include <atomic>; 16#include <vector>; 17 ; 18#include ""TVirtualStreamerInfo.h""; 19 ; 20#include ""TVirtualCollectionProxy.h""; 21 ; 22#include ""TObjArray.h""; 23 ; 24 ; 25class TFile;; 26class TClass;; 27class TClonesArray;; 28class TDataMember;; 29class TMemberStreamer;; 30class TStreamerElement;; 31class TStreamerBasicType;; 32class TClassStreamer;; 33class TVirtualArray;; 34namespace ROOT { namespace Detail { class TCollectionProxyInfo; } }; 35namespace ROOT { class TSchemaRule; }; 36 ; 37namespace TStreamerInfoActions { class TActionSequence; }; 38 ; 39class TStreamerInfo : public TVirtualStreamerInfo {; 40 ; 41 class TCompInfo {; 42 // Class used to cache information (see fComp); 43 private:; 44 // TCompInfo(const TCompInfo&) = default;; 45 // TCompInfo& operator=(const TCompInfo&) = default;; 46 public:; 47 Int_t fType;; 48 Int_t fNewType;; 49 Int_t fOffset;; 50 Int_t fLength;; 51 TStreamerElement *fElem; ///< Not Owned; 52 ULongptr_t fMethod;; 53 TClass *fClass; ///< Not Owned; 54 TClass *fNewClass; ///< Not Owned; 55 TString fClassName;; 56 TMemberStreamer *fStreamer; ///< Not Owned; 57 TCompInfo() : fType(-1), fNewType(0), fOffset(0), fLength(0), fElem(nullptr), fMethod(0),; 58 fClass(nullptr), fNewClass(nullptr), fClassName(), fStreamer(nullptr) {}; 59 ~TCompInfo() {}; 60 void Update(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8h_source.html:90,Load,Loading,90,doc/master/TStreamerInfo_8h_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TDirectoryFile.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectoryFile.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 22/01/2007; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13 \class TDirectoryFile; 14 \ingroup IO; 15 ; 16 A ROOT file is structured in Directories (like a file system).; 17 Each Directory has a list of Keys (see TKeys) and a list of objects; 18 in memory. A Key is a small object that describes the type and location; 19 of a persistent object in a file. The persistent object may be a directory.; 20Begin_Macro; 21../../../tutorials/io/fildir.C; 22End_Macro; 23 The structure of a file is shown in TFile::TFile; 24*/; 25 ; 26#include <iostream>; 27#include ""Strlen.h""; 28#include ""strlcpy.h""; 29#include ""TDirectoryFile.h""; 30#include ""TFile.h""; 31#include ""TBufferFile.h""; 32#include ""TBufferJSON.h""; 33#include ""TMapFile.h""; 34#include ""TClassTable.h""; 35#include ""TInterpreter.h""; 36#include ""THashList.h""; 37#include ""TBrowser.h""; 38#include ""TFree.h""; 39#include ""TKey.h""; 40#include ""TStreamerInfo.h""; 41#include ""TROOT.h""; 42#include ""TError.h""; 43#include ""Bytes.h""; 44#include ""TClass.h""; 45#include ""TRegexp.h""; 46#include ""TSystem.h""; 47#include ""TStreamerElement.h""; 48#include ""TProcessUUID.h""; 49#include ""TVirtualMutex.h""; 50#include ""TEmulatedCollectionProxy.h""; 51 ; 52const UInt_t kIsBigFile = BIT(16);; 53const Int_t kMaxLen = 2048;; 54 ; 55ClassImp(TDirectoryFile);; 56 ; 57 ; 58////////////////////////////////////////////////////////////////////////////////; 59/// Default TDirectoryFile constructor; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html:93,Load,Loading,93,doc/master/TDirectoryFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TFile.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFile.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id: 3a19890259ad6443ee313e090166614971ad4296 $; 2// Author: Rene Brun 28/11/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13\file TFile.cxx; 14\class TFile; 15\ingroup IO; 16\brief A ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-like logical structure, possibly including subdirectory hierarchies.; 17\sa \ref IO; 18\sa \ref rootio (or `io/doc/TFile` folder in your codebase); 19 ; 20<details>; 21<summary>ROOT file data format specification</summary>; 22 ; 23A ROOT file is composed of a header, followed by consecutive data records; 24(`TKey` instances) with a well defined format.; 25 ; 26The first data record starts at byte fBEGIN (currently set to kBEGIN).; 27Bytes 1->kBEGIN contain the file description, when fVersion >= 1000000; 28it is a large file (> 2 GB) and the offsets will be 8 bytes long and; 29fUnits will be set to 8:; 30 ; 31Byte Range | Record Name | Description; 32----------------|-------------|------------; 331->4 | ""root"" | Root file identifier; 345->8 | fVersion | File format version; 359->12 | fBEGIN | Pointer to first data record; 3613->16 [13->20] | fEND | Pointer to first free word at the EOF; 3717->20 [21->28] | fSeekFree | Pointer to FREE data record; 3821->24 [29->32] | fNbytesFree | Number of bytes in FREE data record; 3925->28 [33->36] | nfree | Number of free data records; 4029->32 [37->40] | fNbytesName | Number of bytes in TNamed at creation time; 4133->33 [41->41] | f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:84,Load,Loading,84,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TFree.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFree.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 28/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TFree.h""; 13#include ""TList.h""; 14#include ""TFile.h""; 15#include ""Bytes.h""; 16#include <iostream>; 17 ; 18ClassImp(TFree);; 19 ; 20/**; 21\class TFree; 22\ingroup IO; 23Service class for TFile.; 24 ; 25Each file has a linked list of free segments. Each free segment is described; 26by its firts and last address.; 27When an object is written to a file, a new Key (see TKey); 28is created. The first free segment big enough to accomodate the object; 29is used.; 30If the object size has a length corresponding to the size of the free segment,; 31the free segment is deleted from the list of free segments.; 32When an object is deleted from a file, a new TFree object is generated.; 33If the deleted object is contiguous to an already deleted object, the free; 34segments are merged in one single segment.; 35*/; 36 ; 37////////////////////////////////////////////////////////////////////////////////; 38/// Default constructor.; 39 ; 40TFree::TFree(); 41{; 42 fFirst = fLast = 0;; 43}; 44 ; 45////////////////////////////////////////////////////////////////////////////////; 46/// Constructor for a free segment.; 47 ; 48TFree::TFree(TList *lfree, Long64_t first, Long64_t last); 49{; 50 fFirst = first;; 51 fLast = last;; 52 lfree->Add(this);; 53}; 54 ; 55////////////////////////////////////////////////////////////////////////////////; 56/// Add a new free segment to the list of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFree_8cxx_source.html:84,Load,Loading,84,doc/master/TFree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFree_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TGenCollectionProxy.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGenCollectionProxy.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Markus Frank 28/10/04; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TGenCollectionProxy.h""; 13#include ""TVirtualStreamerInfo.h""; 14#include ""TStreamerElement.h""; 15#include ""TClassEdit.h""; 16#include ""TClass.h""; 17#include ""TError.h""; 18#include ""TEnum.h""; 19#include ""TROOT.h""; 20#include ""TInterpreter.h"" // For gInterpreterMutex; 21#include ""TVirtualMutex.h""; 22#include ""TStreamerInfoActions.h""; 23#include ""THashTable.h""; 24#include ""THashList.h""; 25#include <cstdlib>; 26 ; 27#define MESSAGE(which,text); 28 ; 29/**; 30\class TGenVectorProxy; 31\ingroup IO; 32Local optimization class.; 33 ; 34Collection proxies get copied. On copy we switch the type of the; 35proxy to the concrete STL type. The concrete types are optimized; 36for element access.; 37*/; 38 ; 39class TGenVectorProxy : public TGenCollectionProxy {; 40public:; 41 // Standard Destructor; 42 TGenVectorProxy(const TGenCollectionProxy& c) : TGenCollectionProxy(c); 43 {; 44 }; 45 // Standard Destructor; 46 ~TGenVectorProxy() override; 47 {; 48 }; 49 // Return the address of the value at index 'idx'; 50 void* At(UInt_t idx) override; 51 {; 52 if ( fEnv && fEnv->fObject ) {; 53 fEnv->fIdx = idx;; 54 switch( idx ) {; 55 case 0:; 56 return fEnv->fStart = fFirst.invoke(fEnv);; 57 default:; 58 if (! fEnv->fStart ) fEnv->fStart = fFirst.invoke(fEnv);; 59 return ((char*)fEnv->fStart) + fValDiff*idx;; 60 }; 61 }; 62 Fatal(""TGenVectorProxy"",""At> Log",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html:98,Load,Loading,98,doc/master/TGenCollectionProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TKey.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TKey.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 28/12/94; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13\class TKey; 14\ingroup IO; 15 ; 16 Book space in a file, create I/O buffers, to fill them, (un)compress them.; 17 ; 18 The TKey class includes functions to book space in a file, to create I/O; 19 buffers, to fill these buffers, to compress/uncompress data buffers.; 20 Before saving (making persistent) an object in a file, a key must; 21 be created. The key structure contains all the information to; 22 uniquely identify a persistent object in a file.; 23 | Data Member | Explanation |; 24 |-------------|-------------|; 25 | fNbytes | Number of bytes for the compressed object and key. |; 26 | fObjlen | Length of uncompressed object. |; 27 | fDatime | Date/Time when the object was written. |; 28 | fKeylen | Number of bytes for the key structure. |; 29 | fCycle | Cycle number of the object. |; 30 | fSeekKey | Address of the object on file (points to fNbytes). This is a redundant information used to cross-check the data base integrity. |; 31 | fSeekPdir | Pointer to the directory supporting this object.|; 32 | fClassName | Object class name. |; 33 | fName | Name of the object. |; 34 | fTitle | Title of the object. |; 35 ; 36 In the 16 highest bits of fSeekPdir is encoded a pid offset. This; 37 offset is to be added to the pid index stored in the TRef object; 38 and the referenced TObject.; 39 ; 40 The TKey class is used by ROOT to:; 41 - Write an object in the current di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:83,Load,Loading,83,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TStreamerInfo.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfo.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TStreamerInfo; 13 \ingroup IO; 14 ; 15Describes a persistent version of a class.; 16 ; 17A ROOT file contains the list of TStreamerInfo objects for all the; 18class versions written to this file.; 19When reading a file, all the TStreamerInfo objects are read back in; 20memory and registered to the TClass list of TStreamerInfo.; 21One can see the list and contents of the TStreamerInfo on a file; 22with, e.g.,; 23~~~{.cpp}; 24 TFile f(""myfile.root"");; 25 f.ShowStreamerInfo();; 26~~~; 27A TStreamerInfo is a list of TStreamerElement objects (one per data; 28member or base class).; 29When streaming an object, the system (TClass) loops on all the; 30TStreamerElement objects and calls the appropriate function for each; 31element type.; 32*/; 33 ; 34#include ""TStreamerInfo.h""; 35#include ""TFile.h""; 36#include ""TROOT.h""; 37#include ""TClonesArray.h""; 38#include ""TStreamerElement.h""; 39#include ""TClass.h""; 40#include ""TClassEdit.h""; 41#include ""TClassTable.h""; 42#include ""TDataMember.h""; 43#include ""TDataType.h""; 44#include ""TRealData.h""; 45#include ""TBaseClass.h""; 46#include ""TBuffer.h""; 47#include ""TArrayC.h""; 48#include ""TArrayI.h""; 49#include ""TArrayF.h""; 50#include ""TArrayD.h""; 51#include ""TArrayS.h""; 52#include ""TArrayL.h""; 53#include ""TError.h""; 54#include ""TEnum.h""; 55#include ""TRef.h""; 56#include ""TProcessID.h""; 57#include ""TSystem.h""; 58#inclu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:92,Load,Loading,92,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TStreamerInfoActions.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfoActions.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Philippe Canal 05/2010; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TStreamerInfo.h""; 13#include ""TStreamerInfoActions.h""; 14#include ""TROOT.h""; 15#include ""TStreamerElement.h""; 16#include ""TVirtualMutex.h""; 17#include ""TInterpreter.h""; 18#include ""TError.h""; 19#include ""TVirtualArray.h""; 20#include ""TBufferFile.h""; 21#include ""TBufferText.h""; 22#include ""TMemberStreamer.h""; 23#include ""TClassEdit.h""; 24#include ""TVirtualCollectionIterators.h""; 25#include ""TProcessID.h""; 26#include ""TFile.h""; 27 ; 28static const Int_t kRegrouped = TStreamerInfo::kOffsetL;; 29 ; 30// More possible optimizations:; 31// Avoid call the virtual version of TBuffer::ReadInt and co.; 32// Merge the Reading of the version and the looking up or the StreamerInfo; 33// Avoid if (bytecnt) inside the CheckByteCount routines and avoid multiple (mostly useless nested calls); 34// Try to avoid if statement on onfile class being set (TBufferFile::ReadClassBuffer).; 35 ; 36using namespace TStreamerInfoActions;; 37 ; 38#ifdef _AIX; 39# define INLINE_TEMPLATE_ARGS; 40#else; 41# define INLINE_TEMPLATE_ARGS inline; 42#endif; 43 ; 44 ; 45namespace TStreamerInfoActions; 46{; 47 bool IsDefaultVector(TVirtualCollectionProxy &proxy); 48 {; 49 const auto props = proxy.GetProperties();; 50 const bool isVector = proxy.GetCollectionType() == ROOT::kSTLvector;; 51 const bool hasDefaultAlloc = !(props & TVirtualCollectionProxy::kCustomAlloc);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:99,Load,Loading,99,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TStreamerInfoReadBuffer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfoReadBuffer.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TBuffer.h""; 13#include ""TFile.h""; 14#include ""TClass.h""; 15#include ""TBufferFile.h""; 16#include ""TClonesArray.h""; 17#include ""TError.h""; 18#include ""TRef.h""; 19#include ""TProcessID.h""; 20#include ""TStreamer.h""; 21#include ""TStreamerElement.h""; 22#include ""TStreamerInfo.h""; 23#include ""TVirtualCollectionProxy.h""; 24#include ""TContainerConverters.h""; 25#include ""TVirtualArray.h""; 26#include ""TVirtualObject.h""; 27#include ""ThreadLocalStorage.h""; 28 ; 29// GetCurrentElement.; 30// Currently only used by TRef::Streamer.; 31 ; 32static TStreamerElement* &CurrentElement(); 33{; 34 //Pointer to current TStreamerElement; 35 //Thread local storage.; 36 ; 37 TTHREAD_TLS(TStreamerElement*) fgElement(0);; 38 ; 39 return fgElement;; 40}; 41 ; 42////////////////////////////////////////////////////////////////////////////////; 43///static function returning a pointer to the current TStreamerElement; 44///fgElement points to the current TStreamerElement being read in ReadBuffer; 45 ; 46TStreamerElement *TStreamerInfo::GetCurrentElement(); 47{; 48 return CurrentElement();; 49}; 50 ; 51//==========CPP macros; 52 ; 53#define DOLOOP for(Int_t k=0; k<narr; ++k); 54 ; 55#define ReadBasicTypeElem(name,index) \; 56 { \; 57 name *x=(name*)(arr[index]+ioffset); \; 58 b >> *x; \; 59 }; 60 ; 61#define ReadBasicType(name) \; 62 { \; 63 ReadBasicTypeElem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html:102,Load,Loading,102,doc/master/TStreamerInfoReadBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: io/io/src/TStreamerInfoWriteBuffer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfoWriteBuffer.cxx. Go to the documentation of this file. 1// @(#)root/io:$Id$; 2// Author: Rene Brun 12/10/2000; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TBuffer.h""; 13#include ""TClass.h""; 14#include ""TClonesArray.h""; 15#include ""TError.h""; 16#include ""TProcessID.h""; 17#include ""TStreamer.h""; 18#include ""TStreamerElement.h""; 19#include ""TStreamerInfo.h""; 20#include ""TVirtualCollectionProxy.h""; 21#include ""TRefTable.h""; 22#include ""TFile.h""; 23 ; 24#include ""TVirtualArray.h""; 25#include ""TBufferFile.h""; 26#include ""TInterpreter.h""; 27 ; 28//==========CPP macros; 29 ; 30#define DOLOOP for(int k=0; k<narr; ++k); 31 ; 32#define WriteBasicTypeElem(name,index) \; 33 { \; 34 name *x=(name*)(arr[index]+ioffset); \; 35 b << *x; \; 36 }; 37 ; 38#define WriteBasicType(name) \; 39 { \; 40 WriteBasicTypeElem(name,0); \; 41 }; 42 ; 43#define WriteBasicTypeLoop(name) \; 44 { \; 45 for(int k=0; k<narr; ++k) WriteBasicTypeElem(name,k); \; 46 }; 47 ; 48#define WriteBasicArrayElem(name,index) \; 49 { \; 50 name *x=(name*)(arr[index]+ioffset); \; 51 b.WriteFastArray(x,compinfo[i]->fLength); \; 52 }; 53 ; 54#define WriteBasicArray(name) \; 55 { \; 56 WriteBasicArrayElem(name,0); \; 57 }; 58 ; 59#define WriteBasicArrayLoop(name) \; 60 { \; 61 for(int k=0; k<narr; ++k) WriteBasicArrayElem(name,k); \; 62 }; 63 ; 64#define WriteBasicPointerElem(name,index) \; 65 { \; 66 Int_t *l = (Int_t*)(arr[index]+imethod); \; 67 name **f = (name**)(arr[index]+ioffset); \; 68 name *af = *f; \; 69 if (af && *l) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoWriteBuffer_8cxx_source.html:103,Load,Loading,103,doc/master/TStreamerInfoWriteBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoWriteBuffer_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: iterplugin Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; iterplugin Class Reference. . Definition at line 9 of file iterplugin.cxx. Public Member Functions;  iterplugin ();  ;  ~iterplugin () override;  ; TClass * IsA () const override;  ; void ProcessNode () override;  ; void Select (Int_t replica, Int_t color);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoIteratorPlugin;  TGeoIteratorPlugin ();  ;  ~TGeoIteratorPlugin () override;  ; TClass * IsA () const override;  ; void SetIterator (const TGeoIterator *iter);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classiterplugin.html:79,Load,Loading,79,doc/master/classiterplugin.html,https://root.cern,https://root.cern/doc/master/classiterplugin.html,1,['Load'],['Loading']
Performance,". ROOT: math/fumili/inc/TFumili.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFumili.h. Go to the documentation of this file. 1// @(#)root/fumili:$Id$; 2// Author: Rene Brun 31/08/99; 3 ; 4#ifndef ROOT_TFumili; 5#define ROOT_TFumili; 6 ; 7#include ""TVirtualFitter.h""; 8 ; 9class TF1;; 10 ; 11class TFumili : public TVirtualFitter {; 12private:; 13 Int_t fMaxParam; ///<; 14 Int_t fNlog; ///<; 15 Int_t fNfcn; ///< Number of FCN calls;; 16 Int_t fNED1; ///< Number of experimental vectors X=(x1,x2,...xK); 17 Int_t fNED2; ///< K - Length of vector X plus 2 (for chi2); 18 Int_t fNED12; ///< fNED1+fNED2; 19 Int_t fNpar; ///< fNpar - number of parameters; 20 Int_t fNstepDec; ///< fNstepDec - maximum number of step decreasing counter; 21 Int_t fNlimMul; ///< fNlimMul - after fNlimMul successful iterations permits four-fold increasing of fPL; 22 Int_t fNmaxIter; ///< fNmaxIter - maximum number of iterations; 23 Int_t fLastFixed; ///< Last fixed parameter number; 24 Int_t fENDFLG; ///< End flag of fit; 25 Int_t fINDFLG[5]; ///< internal flags;; 26 ; 27 ; 28 Bool_t fGRAD; ///< user calculated gradients; 29 Bool_t fWARN; ///< warnings; 30 Bool_t fDEBUG; ///< debug info; 31 Bool_t fLogLike; ///< LogLikelihood flag; 32 Bool_t fNumericDerivatives; ///<; 33 ; 34 Double_t *fZ0; ///< [fMaxParam2] Matrix of approximate second derivatives of objective function; 35 ///< This matrix is diagonal and always contain only variable parameter's; 36 ///< derivatives; 37 Double_t *fZ; ///< [fMaxParam2] Inverse fZ0 matrix - covariance matrix; 38 Double_t *fGr; ///< [fMaxParam] Gradients of objective function; 39 Double_t *fParamError; ///< [fMaxParam] Parameter errors; 40 Double_t *fSumLog; ///< [fNlog]; 41 Double_t *fEXDA; ///< [fNED12] experimental data poInt_ter; 42 ; 43 // don't calculate parameter errors - take them from fParamError array; 44 Double_t *fA; ///< [fMaxParam] Fit parameter array; 45 Double_t *fPL0; ///< [fMaxParam] Step initial bou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8h_source.html:90,Load,Loading,90,doc/master/TFumili_8h_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/fumili/src/TFumili.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFumili.cxx. Go to the documentation of this file. 1// @(#)root/fumili:$Id$; 2// Author: Stanislav Nesterov 07/05/2003; 3 ; 4 ; 5/** \class TFumili; 6 ; 7### FUMILI minimization package; 8 ; 9FUMILI is based on ideas, proposed by I.N. Silin [See NIM A440, 2000 (p431)].; 10It was converted from FORTRAN to C by Sergey Yaschenko <s.yaschenko@fz-juelich.de>; 11 ; 12 ; 13FUMILI is used to minimize Chi-square function or to search maximum of; 14likelihood function.; 15 ; 16Experimentally measured values \f$F_i\f$ are fitted with theoretical; 17functions \f$f_i({\vec x}_i,\vec\theta\,\,)\f$, where \f${\vec x}_i\f$ are; 18coordinates, and \f$\vec\theta\f$ -- vector of parameters.; 19 ; 20For better convergence Chi-square function has to be the following form; 21 ; 22\f[; 23{\chi^2\over2}={1\over2}\sum^n_{i=1}\left(f_i(\vec; 24x_i,\vec\theta\,\,)-F_i\over\sigma_i\right)^2 \tag{1}; 25\f]; 26 ; 27where \f$\sigma_i\f$ are errors of measured function.; 28 ; 29The minimum condition is; 30 ; 31\f[; 32{\partial\chi^2\over\partial\theta_i}=\sum^n_{j=1}{1\over\sigma^2_j}\cdot; 33{\partial f_j\over\partial\theta_i}\left[f_j(\vec; 34x_j,\vec\theta\,\,)-F_j\right]=0,\qquad i=1\ldots m\tag{2}; 35\f]; 36 ; 37where m is the quantity of parameters.; 38 ; 39Expanding left part of (2) over parameter increments and; 40retaining only linear terms one gets; 41 ; 42\f[; 43\left(\partial\chi^2\over\theta_i\right)_{\vec\theta={\vec\theta}^0}; 44+\sum_k\left(\partial^2\chi^2\over\partial\theta_i\partial\theta_k\right)_{; 45\vec\theta={\vec\theta}^0}\cdot(\theta_k-\theta_k^0); 46= 0\tag{3}; 47\f]; 48 ; 49Here \f${\vec\theta}_0\f$ is some initial value of parameters. In general case:; 50 ; 51\f[; 52{\partial^2\chi^2\over\partial\theta_i\partial\theta_k}=; 53\sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; 54{\partial f_j\over\theta_k} +; 55\sum^n_{j=1}{(f_j - F_j)\",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:92,Load,Loading,92,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genetic/inc/Math/GeneticMinimizer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GeneticMinimizer.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id; 2 ; 3/**********************************************************************; 4 * *; 5 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 6 * *; 7 * *; 8 **********************************************************************/; 9 ; 10// Header file for class GeneticMinimizer; 11 ; 12#ifndef ROOT_Math_GeneticMinimizer; 13#define ROOT_Math_GeneticMinimizer; 14 ; 15#include ""Math/Minimizer.h""; 16 ; 17#include ""RtypesCore.h""; 18 ; 19#include <vector>; 20#include <string>; 21 ; 22namespace TMVA {; 23 class IFitterTarget;; 24 class Interval;; 25}; 26 ; 27namespace ROOT {; 28 namespace Math {; 29 ; 30 ; 31//_______________________________________________________________________________; 32/*; 33 structure containing the parameters of the genetic minimizer; 34 */; 35struct GeneticMinimizerParameters {; 36 ; 37 Int_t fPopSize;; 38 Int_t fNsteps;; 39 Int_t fCycles;; 40 Int_t fSC_steps;; 41 Int_t fSC_rate;; 42 Double_t fSC_factor;; 43 Double_t fConvCrit;; 44 Int_t fSeed;; 45 ; 46 ; 47 // constructor with default value; 48 GeneticMinimizerParameters();; 49};; 50 ; 51 ; 52 ; 53//_______________________________________________________________________________; 54/**; 55 GeneticMinimizer; 56 ; 57 Minimizer class based on the Gentic algorithm implemented in TMVA; 58 ; 59 @ingroup MultiMin; 60*/; 61class GeneticMinimizer: public ROOT::Math::Minimizer {; 62 ; 63public:; 64 ; 65 //GeneticMinimizer (int = 0);; 66 GeneticMinimizer (int i = 0);; 67 ~GeneticMinimizer () override;; 68 ; 69 void Clear() override;; 70 using ROOT::Math::Minimizer::SetFunction;; 71 void SetFunction(const ROOT::Math::IMultiGenFunction & func) override;; 72 ; 73 bool SetLimitedVariable(unsigned int , const std::string& , double , double , double, double) override;; 74 bool SetVariable(u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GeneticMinimizer_8h_source.html:105,Load,Loading,105,doc/master/GeneticMinimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/GeneticMinimizer_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/AxisAngle.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. AxisAngle.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class AxisAngle; 12//; 13// Created by: Lorenzo Moneta at Wed May 11 10:37:10 2005; 14//; 15// Last update: Wed May 11 10:37:10 2005; 16//; 17#ifndef ROOT_Math_GenVector_AxisAngle; 18#define ROOT_Math_GenVector_AxisAngle 1; 19 ; 20#include ""Math/GenVector/Rotation3D.h""; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22#include ""Math/GenVector/PositionVector3D.h""; 23#include ""Math/GenVector/LorentzVector.h""; 24#include ""Math/GenVector/3DConversions.h""; 25#include <algorithm>; 26#include <cassert>; 27 ; 28 ; 29namespace ROOT {; 30namespace Math {; 31 ; 32 ; 33//__________________________________________________________________________________________; 34 /**; 35 AxisAngle class describing rotation represented with direction axis (3D Vector) and an; 36 angle of rotation around that axis.; 37 ; 38 @ingroup GenVector; 39 ; 40 @sa Overview of the @ref GenVector ""physics vector library""; 41 */; 42class AxisAngle {; 43 ; 44public:; 45 ; 46 typedef double Scalar;; 47 ; 48 /**; 49 definition of vector axis; 50 */; 51 typedef DisplacementVector3D<Cartesian3D<Scalar> > AxisVector;; 52 ; 53 ; 54 /**; 55 Default constructor (axis is z and angle is zero); 56 */; 57 AxisAngle() : fAxis(0,0,1), fAngle(0) { }; 58 ; 59 /**; 60 Construct from a non-zero vector (x,y,z) and an angle.; 61 Precondition: the Vector needs to implement x(), y(), z(), and unit(); 62 */; 63 template<class AnyVector>; 64 AxisAngle(const AnyVector & v, Scalar angle) :; 65 fAxis(v.unit()), f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2AxisAngle_8h_source.html:110,Load,Loading,110,doc/master/GenVector_2AxisAngle_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2AxisAngle_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/DisplacementVector2D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DisplacementVector2D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team and *; 7 * FNAL LCG ROOT MathLib Team *; 8 * *; 9 * *; 10 **********************************************************************/; 11 ; 12// Header source file for class DisplacementVector2D; 13//; 14// Created by: Lorenzo Moneta at Mon Apr 16 2007; 15//; 16 ; 17#ifndef ROOT_Math_GenVector_DisplacementVector2D; 18#define ROOT_Math_GenVector_DisplacementVector2D 1; 19 ; 20#include ""Math/GenVector/Cartesian2D.h""; 21 ; 22#include ""Math/GenVector/PositionVector2Dfwd.h""; 23 ; 24#include ""Math/GenVector/GenVectorIO.h""; 25 ; 26#include ""Math/GenVector/BitReproducible.h""; 27 ; 28#include ""Math/GenVector/CoordinateSystemTags.h""; 29 ; 30//#include ""Math/GenVector/Expression2D.h""; 31 ; 32 ; 33 ; 34 ; 35namespace ROOT {; 36 ; 37 namespace Math {; 38 ; 39 ; 40 ; 41//__________________________________________________________________________________________; 42 /**; 43 Class describing a generic displacement vector in 2 dimensions.; 44 This class is templated on the type of Coordinate system.; 45 One example is the XYVector which is a vector based on; 46 double precision x,y data members by using the; 47 ROOT::Math::Cartesian2D<double> Coordinate system.; 48 The class is having also an extra template parameter, the coordinate system tag,; 49 to be able to identify (tag) vector described in different reference coordinate system,; 50 like global or local coordinate systems.; 51 ; 52 @ingroup GenVector; 53 ; 54 @sa Overview of the @ref GenVector ""physics vector library""; 55 */; 56 ; 57 template <class CoordSystem, class Tag = DefaultCoordinateSystemTag >; 58 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2DisplacementVector2D_8h_source.html:121,Load,Loading,121,doc/master/GenVector_2DisplacementVector2D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2DisplacementVector2D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/DisplacementVector3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DisplacementVector3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team and *; 7 * FNAL LCG ROOT MathLib Team *; 8 * *; 9 * *; 10 **********************************************************************/; 11 ; 12// Header source file for class DisplacementVector3D; 13//; 14// Created by: Lorenzo Moneta at Mon May 30 12:21:43 2005; 15// Major rewrite: M. FIschler at Wed Jun 8 2005; 16//; 17// Last update: $Id$; 18//; 19 ; 20#ifndef ROOT_Math_GenVector_DisplacementVector3D; 21#define ROOT_Math_GenVector_DisplacementVector3D 1; 22 ; 23#include ""Math/GenVector/Cartesian3D.h""; 24 ; 25#include ""Math/GenVector/PositionVector3Dfwd.h""; 26 ; 27#include ""Math/GenVector/GenVectorIO.h""; 28 ; 29#include ""Math/GenVector/BitReproducible.h""; 30 ; 31#include ""Math/GenVector/CoordinateSystemTags.h""; 32 ; 33#include <cassert>; 34 ; 35 ; 36namespace ROOT {; 37 ; 38 namespace Math {; 39 ; 40 ; 41//__________________________________________________________________________________________; 42 /**; 43 Class describing a generic displacement vector in 3 dimensions.; 44 This class is templated on the type of Coordinate system.; 45 One example is the XYZVector which is a vector based on; 46 double precision x,y,z data members by using the; 47 ROOT::Math::Cartesian3D<double> Coordinate system.; 48 The class is having also an extra template parameter, the coordinate system tag,; 49 to be able to identify (tag) vector described in different reference coordinate system,; 50 like global or local coordinate systems.; 51 ; 52 @ingroup GenVector; 53 ; 54 @sa Overview of the @ref GenVector ""physics vector library""; 55 */; 56 ; 57 template <class Coor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2DisplacementVector3D_8h_source.html:121,Load,Loading,121,doc/master/GenVector_2DisplacementVector3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2DisplacementVector3D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/EulerAngles.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. EulerAngles.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class EulerAngles; 12//; 13// Created by: Lorenzo Moneta at Tue May 10 17:55:10 2005; 14//; 15// Last update: Tue May 10 17:55:10 2005; 16//; 17#ifndef ROOT_Math_GenVector_EulerAngles; 18#define ROOT_Math_GenVector_EulerAngles 1; 19 ; 20#include ""Math/GenVector/Rotation3D.h""; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22#include ""Math/GenVector/PositionVector3D.h""; 23#include ""Math/GenVector/LorentzVector.h""; 24#include ""Math/GenVector/3DConversions.h""; 25#include <algorithm>; 26#include <cassert>; 27 ; 28namespace ROOT {; 29namespace Math {; 30 ; 31 ; 32//__________________________________________________________________________________________; 33 /**; 34 EulerAngles class describing rotation as three angles (Euler Angles).; 35 The Euler angles definition matches that of Classical Mechanics (Goldstein).; 36 It is also the same convention defined in; 37 <A HREF=""http://mathworld.wolfram.com/EulerAngles.html"">mathworld</A>; 38 and used in Mathematica and CLHEP. Note that the ROOT class TRotation defines; 39 a slightly different convention.; 40 ; 41 @ingroup GenVector; 42 ; 43 @sa Overview of the @ref GenVector ""physics vector library""; 44 */; 45class EulerAngles {; 46 ; 47public:; 48 ; 49 typedef double Scalar;; 50 ; 51 /**; 52 Default constructor; 53 */; 54 constexpr EulerAngles() : fPhi(0.0), fTheta(0.0), fPsi(0.0) { }; 55 ; 56 /**; 57 Constructor from phi, theta and psi; 58 */; 59 EulerAngles( Scalar phi, Scalar theta, Scalar psi )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2EulerAngles_8h_source.html:112,Load,Loading,112,doc/master/GenVector_2EulerAngles_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2EulerAngles_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/GenVectorIO.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GenVectorIO.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team (FNAL component) *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Support templates (class and function) for stream i/o of vectors; 12// This is a utuility to allow for control, via manipulators, of the; 13// form of; 14//; 15// Created by: W. E. Brown and M. Fischler at Tue Jun 21 2005; 16//; 17// Last update: Tue Jun 21 2005; 18//; 19#ifndef ROOT_Math_GenVector_GenVectorIO; 20#define ROOT_Math_GenVector_GenVectorIO 1; 21 ; 22#include <cctype>; 23#include <iostream>; 24 ; 25 ; 26namespace ROOT {; 27namespace Math {; 28 ; 29namespace detail {; 30 ; 31 ; 32// -------- Manipulator support ----------; 33 ; 34 ; 35enum manip_t { open, sep, close, bitforbit };; 36 ; 37 ; 38inline int; 39 ios_data( int k ); 40{; 41 static int const ios_data[4] = { std::ios::xalloc() // open; 42 , std::ios::xalloc() // sep; 43 , std::ios::xalloc() // close; 44 , std::ios::xalloc() // bitforbit; 45 };; 46 ; 47 return ios_data[k];; 48 ; 49} // ios_data(); 50 ; 51 ; 52template< class char_t, class traits_t >; 53 inline char_t; 54 get_manip( std::basic_ios<char_t,traits_t> & ios; 55 , manip_t m; 56 ); 57{; 58 char_t ch = static_cast<char_t>( ios.iword( ios_data(m) ) );; 59 if( ch ) return ch;; 60 ; 61 switch( m ); 62 { default : return ios.widen( '?' );; 63 case open : return ios.widen( '(' );; 64 case close : return ios.widen( ')' );; 65 case sep : return ios.widen( ',' );; 66 case bitforbit : return ch;; 67 }; 68 ; 69} // get_manip<>(); 70 ; 71 ; 72template< class char_t, class traits_t >; 73 inline void; 74 set_manip( std::basic_io",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVectorIO_8h_source.html:112,Load,Loading,112,doc/master/GenVectorIO_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVectorIO_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/GenVector_exception.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GenVector_exception.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_GenVector_GenVector_exception; 5#define ROOT_Math_GenVector_GenVector_exception 1; 6 ; 7// ======================================================================; 8// $Id $; 9//; 10// Define the exception type used throughout this package.; 11// ======================================================================; 12 ; 13// ----------------------------------------------------------------------; 14// Prolog; 15 ; 16#include <stdexcept>; 17#include <string>; 18 ; 19namespace ROOT {; 20namespace Math {; 21 ; 22class GenVector_exception;; 23inline void Throw(GenVector_exception &e);; 24namespace GenVector {; 25inline void Throw(const char *);; 26}; 27 ; 28// ----------------------------------------------------------------------; 29// GenVector_exception class definition; 30//; 31// This class needs to be entirely contained in this header, otherwise; 32// the interactive usage of entities such as ROOT::Math::PtEtaPhiMVector; 33// is not possible because of missing symbols.; 34// This is due to the fact that the Throw function is used in the inline; 35// code bu this function is implemented in the Genvector library.; 36class GenVector_exception : public std::runtime_error {; 37public:; 38 GenVector_exception(const std::string &s) : runtime_error(s) {}; 39 ; 40 // Compiler-generated copy ctor, copy assignment, dtor are fine; 41 // Inherited what() from runtime_error is fine; 42 ; 43 static bool EnableThrow(); 44 {; 45 bool tmp = GenVector_exception::IsOn();; 46 IsOn() = true;; 47 return tmp;; 48 }; 49 static bool DisableThrow(); 50 {; 51 bool tmp = GenVector_exception::IsOn();; 52 IsOn() = false;; 53 return tmp;; 54 }; 55 ; 56private:; 57 friend void Throw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector__exception_8h_source.html:120,Load,Loading,120,doc/master/GenVector__exception_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector__exception_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/LorentzVector.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. LorentzVector.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LorentzVector; 12//; 13// Created by: moneta at Tue May 31 17:06:09 2005; 14// Major mods by: fischler at Wed Jul 20 2005; 15//; 16// Last update: $Id$; 17//; 18#ifndef ROOT_Math_GenVector_LorentzVector; 19#define ROOT_Math_GenVector_LorentzVector 1; 20 ; 21#include ""Math/GenVector/PxPyPzE4D.h""; 22 ; 23#include ""Math/GenVector/DisplacementVector3D.h""; 24 ; 25#include ""Math/GenVector/GenVectorIO.h""; 26 ; 27#include <cmath>; 28#include <string>; 29 ; 30namespace ROOT {; 31 ; 32 namespace Math {; 33 ; 34//__________________________________________________________________________________________; 35/** @ingroup GenVector; 36 ; 37Class describing a generic LorentzVector in the 4D space-time,; 38using the specified coordinate system for the spatial vector part.; 39The metric used for the LorentzVector is (-,-,-,+).; 40In the case of LorentzVector we don't distinguish the concepts; 41of points and displacement vectors as in the 3D case,; 42since the main use case for 4D Vectors is to describe the kinematics of; 43relativistic particles. A LorentzVector behaves like a; 44DisplacementVector in 4D. The Minkowski components could be viewed as; 45v and t, or for kinematic 4-vectors, as p and E.; 46 ; 47ROOT provides specialisations and aliases to them of the ROOT::Math::LorentzVector template:; 48- ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; 49- ROOT::Math::PtEtaPhiEVector based on pt (rho),eta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2LorentzVector_8h_source.html:114,Load,Loading,114,doc/master/GenVector_2LorentzVector_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2LorentzVector_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/Plane3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Plane3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta 12/2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LorentzVector; 12//; 13// Created by: moneta at Fri Dec 02 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_Plane3D; 18#define ROOT_Math_GenVector_Plane3D 1; 19 ; 20#include <type_traits>; 21 ; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24 ; 25 ; 26 ; 27namespace ROOT {; 28 ; 29namespace Math {; 30 ; 31namespace Impl {; 32 ; 33//_______________________________________________________________________________; 34/**; 35 Class describing a geometrical plane in 3 dimensions.; 36 A Plane3D is a 2 dimensional surface spanned by two linearly independent vectors.; 37 The plane is described by the equation; 38 \f$ a*x + b*y + c*z + d = 0 \f$ where (a,b,c) are the components of the; 39 normal vector to the plane \f$ n = (a,b,c) \f$ and \f$ d = - n \dot x \f$, where x is any point; 40 belonging to plane.; 41 More information on the mathematics describing a plane in 3D is available on; 42 <A HREF=http://mathworld.wolfram.com/Plane.html>MathWord</A>.; 43 The Plane3D class contains the 4 scalar values in T which represent the; 44 four coefficients, fA, fB, fC, fD. fA, fB, fC are the normal components normalized to 1,; 45 i.e. fA**2 + fB**2 + fC**2 = 1; 46 ; 47 @ingroup GenVector; 48 ; 49 @sa Overview of the @ref GenVector ""physics vector library""; 50*/; 51 ; 52template <typename T = double>; 53class Plane3D {; 54 ; 55public:; 56 // ------ ctors ------; 57 ; 58 typedef T Scalar;; 59 ; 60 typedef Displa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Plane3D_8h_source.html:108,Load,Loading,108,doc/master/GenVector_2Plane3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Plane3D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/PositionVector2D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PositionVector2D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class PositionVector2D; 12//; 13// Created by: Lorenzo Moneta at Mon Apr 16 2007; 14//; 15//; 16#ifndef ROOT_Math_GenVector_PositionVector2D; 17#define ROOT_Math_GenVector_PositionVector2D 1; 18 ; 19#include ""Math/GenVector/DisplacementVector2D.h""; 20 ; 21#include ""Math/GenVector/GenVectorIO.h""; 22 ; 23#include ""Math/GenVector/BitReproducible.h""; 24 ; 25#include ""Math/GenVector/CoordinateSystemTags.h""; 26 ; 27 ; 28namespace ROOT {; 29 ; 30 namespace Math {; 31 ; 32 ; 33//__________________________________________________________________________________________; 34 /**; 35 Class describing a generic position vector (point) in 2 dimensions.; 36 This class is templated on the type of Coordinate system.; 37 One example is the XYPoint which is a vector based on; 38 double precision x,y data members by using the; 39 ROOT::Math::Cartesian2D<double> Coordinate system.; 40 The class is having also an extra template parameter, the coordinate system tag,; 41 to be able to identify (tag) vector described in different reference coordinate system,; 42 like global or local coordinate systems.; 43 ; 44 @ingroup GenVector; 45 ; 46 @sa Overview of the @ref GenVector ""physics vector library""; 47 */; 48 ; 49 template <class CoordSystem, class Tag = DefaultCoordinateSystemTag >; 50 class PositionVector2D {; 51 ; 52 public:; 53 ; 54 typedef typename CoordSystem::Scalar Scalar;; 55 typedef CoordSystem CoordinateType;; 56 typedef Tag CoordinateSystemTag;; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2PositionVector2D_8h_source.html:117,Load,Loading,117,doc/master/GenVector_2PositionVector2D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2PositionVector2D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/PositionVector3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PositionVector3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class PositionVector3D; 12//; 13// Created by: Lorenzo Moneta at Mon May 30 15:25:04 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_PositionVector3D; 18#define ROOT_Math_GenVector_PositionVector3D 1; 19 ; 20#include ""Math/GenVector/DisplacementVector3Dfwd.h""; 21 ; 22#include ""Math/GenVector/Cartesian3D.h""; 23 ; 24#include ""Math/GenVector/GenVectorIO.h""; 25 ; 26#include ""Math/GenVector/BitReproducible.h""; 27 ; 28#include ""Math/GenVector/CoordinateSystemTags.h""; 29 ; 30 ; 31#include <cassert>; 32 ; 33namespace ROOT {; 34 ; 35 namespace Math {; 36 ; 37 ; 38//__________________________________________________________________________________________; 39 /**; 40 Class describing a generic position vector (point) in 3 dimensions.; 41 This class is templated on the type of Coordinate system.; 42 One example is the XYZPoint which is a vector based on; 43 double precision x,y,z data members by using the; 44 ROOT::Math::Cartesian3D<double> Coordinate system.; 45 The class is having also an extra template parameter, the coordinate system tag,; 46 to be able to identify (tag) vector described in different reference coordinate system,; 47 like global or local coordinate systems.; 48 ; 49 @ingroup GenVector; 50 ; 51 @sa Overview of the @ref GenVector ""physics vector library""; 52 */; 53 ; 54 template <class CoordSystem, class Tag = DefaultCoordinateSystemTag >; 55 class PositionVector3D {; 56 ; 57 public:; 58 ; 59 typedef ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2PositionVector3D_8h_source.html:117,Load,Loading,117,doc/master/GenVector_2PositionVector3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2PositionVector3D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/Quaternion.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Quaternion.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for rotation in 3 dimensions, represented by a quaternion; 12// Created by: Mark Fischler Thurs June 9 2005; 13//; 14// Last update: $Id$; 15//; 16#ifndef ROOT_Math_GenVector_Quaternion; 17#define ROOT_Math_GenVector_Quaternion 1; 18 ; 19 ; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22#include ""Math/GenVector/PositionVector3D.h""; 23#include ""Math/GenVector/LorentzVector.h""; 24#include ""Math/GenVector/3DConversions.h""; 25#include ""Math/GenVector/3DDistances.h""; 26 ; 27#include <algorithm>; 28#include <cassert>; 29 ; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//__________________________________________________________________________________________; 36 /**; 37 Rotation class with the (3D) rotation represented by; 38 a unit quaternion (u, i, j, k).; 39 This is the optimal representation for multiplication of multiple; 40 rotations, and for computation of group-manifold-invariant distance; 41 between two rotations.; 42 See also ROOT::Math::AxisAngle, ROOT::Math::EulerAngles, and ROOT::Math::Rotation3D.; 43 ; 44 @ingroup GenVector; 45 ; 46 @sa Overview of the @ref GenVector ""physics vector library""; 47 */; 48 ; 49class Quaternion {; 50 ; 51public:; 52 ; 53 typedef double Scalar;; 54 ; 55 // ========== Constructors and Assignment =====================; 56 ; 57 /**; 58 Default constructor (identity rotation); 59 */; 60 Quaternion(); 61 : fU(1.0); 62 , fI(0.0); 63 , fJ(0.0); 64 , fK(0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Quaternion_8h_source.html:111,Load,Loading,111,doc/master/GenVector_2Quaternion_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Quaternion_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/Rotation3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Rotation3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Rotation in 3 dimensions, represented by 3x3 matrix; 12//; 13// Created by: Mark Fischler Thurs June 9 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_Rotation3D; 18#define ROOT_Math_GenVector_Rotation3D 1; 19 ; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24#include ""Math/GenVector/PxPyPzE4D.h""; 25#include ""Math/GenVector/LorentzVector.h""; 26#include ""Math/GenVector/3DConversions.h""; 27#include ""Math/GenVector/3DDistances.h""; 28 ; 29#include ""Math/GenVector/Rotation3Dfwd.h""; 30#include ""Math/GenVector/AxisAnglefwd.h""; 31#include ""Math/GenVector/EulerAnglesfwd.h""; 32#include ""Math/GenVector/Quaternionfwd.h""; 33#include ""Math/GenVector/RotationXfwd.h""; 34#include ""Math/GenVector/RotationYfwd.h""; 35#include ""Math/GenVector/RotationZfwd.h""; 36 ; 37 ; 38#include <algorithm>; 39#include <cassert>; 40#include <iostream>; 41 ; 42 ; 43namespace ROOT {; 44namespace Math {; 45 ; 46 ; 47//__________________________________________________________________________________________; 48 /**; 49 Rotation class with the (3D) rotation represented by; 50 a 3x3 orthogonal matrix.; 51 This is the optimal representation for application to vectors.; 52 See also ROOT::Math::AxisAngle, ROOT::Math::EulerAngles, and ROOT::Math::Quaternion for; 53 classes which have conversion operators to Rotation3D.; 54 ; 55 All Rotations types (not onl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Rotation3D_8h_source.html:111,Load,Loading,111,doc/master/GenVector_2Rotation3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Rotation3D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/RotationX.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationX.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class RotationZ representing a rotation about the Z axis; 12//; 13// Created by: Mark Fischler Mon July 18 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_RotationX; 18#define ROOT_Math_GenVector_RotationX 1; 19 ; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24#include ""Math/GenVector/LorentzVector.h""; 25#include ""Math/GenVector/3DDistances.h""; 26 ; 27#include ""Math/GenVector/RotationXfwd.h""; 28 ; 29#include <cmath>; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//__________________________________________________________________________________________; 36 /**; 37 Rotation class representing a 3D rotation about the X axis by the angle of rotation.; 38 For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; 39 ; 40 @ingroup GenVector; 41 ; 42 @sa Overview of the @ref GenVector ""physics vector library""; 43 */; 44 ; 45class RotationX {; 46 ; 47public:; 48 ; 49 typedef double Scalar;; 50 ; 51 ; 52 // ========== Constructors and Assignment =====================; 53 ; 54 /**; 55 Default constructor (identity rotation); 56 */; 57 RotationX() : fAngle(0), fSin(0), fCos(1) { }; 58 ; 59 /**; 60 Construct from an angle; 61 */; 62 explicit RotationX( Scalar angle ) : fAngle(angle),; 63 fSin(std::sin(angle)),; 64 fCos(std::cos(angle)); 65 {; 66 Rectify();; 67 }; 68 ; 69 // The compil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2RotationX_8h_source.html:110,Load,Loading,110,doc/master/GenVector_2RotationX_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2RotationX_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/RotationY.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationY.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class RotationY representing a rotation about the Y axis; 12//; 13// Created by: Mark Fischler Mon July 18 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_RotationY; 18#define ROOT_Math_GenVector_RotationY 1; 19 ; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24#include ""Math/GenVector/LorentzVector.h""; 25#include ""Math/GenVector/3DDistances.h""; 26 ; 27#include ""Math/GenVector/RotationYfwd.h""; 28 ; 29#include <cmath>; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//__________________________________________________________________________________________; 36 /**; 37 Rotation class representing a 3D rotation about the Y axis by the angle of rotation.; 38 For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; 39 ; 40 @ingroup GenVector; 41 ; 42 @sa Overview of the @ref GenVector ""physics vector library""; 43 */; 44 ; 45class RotationY {; 46 ; 47public:; 48 ; 49 typedef double Scalar;; 50 ; 51 ; 52 // ========== Constructors and Assignment =====================; 53 ; 54 /**; 55 Default constructor (identity rotation); 56 */; 57 RotationY() : fAngle(0), fSin(0), fCos(1) { }; 58 ; 59 /**; 60 Construct from an angle; 61 */; 62 explicit RotationY( Scalar angle ) : fAngle(angle),; 63 fSin(std::sin(angle)),; 64 fCos(std::cos(angle)); 65 {; 66 Rectify();; 67 }; 68 ; 69 // The compil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2RotationY_8h_source.html:110,Load,Loading,110,doc/master/GenVector_2RotationY_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2RotationY_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/RotationZ.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationZ.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class RotationZ representing a rotation about the Z axis; 12//; 13// Created by: Mark Fischler Mon July 18 2005; 14//; 15// Last update: $Id$; 16//; 17#ifndef ROOT_Math_GenVector_RotationZ; 18#define ROOT_Math_GenVector_RotationZ 1; 19 ; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/PositionVector3D.h""; 24#include ""Math/GenVector/LorentzVector.h""; 25#include ""Math/GenVector/3DDistances.h""; 26 ; 27#include ""Math/GenVector/RotationZfwd.h""; 28 ; 29#include <cmath>; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//__________________________________________________________________________________________; 36 /**; 37 Rotation class representing a 3D rotation about the Z axis by the angle of rotation.; 38 For efficiency reason, in addition to the angle, the sine and cosine of the angle are held; 39 ; 40 @ingroup GenVector; 41 ; 42 @sa Overview of the @ref GenVector ""physics vector library""; 43 */; 44 ; 45class RotationZ {; 46 ; 47public:; 48 ; 49 typedef double Scalar;; 50 ; 51 ; 52 // ========== Constructors and Assignment =====================; 53 ; 54 /**; 55 Default constructor (identity rotation); 56 */; 57 RotationZ() : fAngle(0), fSin(0), fCos(1) { }; 58 ; 59 /**; 60 Construct from an angle; 61 */; 62 explicit RotationZ( Scalar angle ) : fAngle(angle),; 63 fSin(std::sin(angle)),; 64 fCos(std::cos(angle)); 65 {; 66 Rectify();; 67 }; 68 ; 69 // The compil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2RotationZ_8h_source.html:110,Load,Loading,110,doc/master/GenVector_2RotationZ_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2RotationZ_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/RotationZYX.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationZYX.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: J. Palacios, L. Moneta 2007; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2007 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Rotation in 3 dimensions, described by 3 Z-Y-X Euler angles; 12// representing a rotation along Z, Y and X; 13//; 14// Created by: Lorenzo Moneta, Wed. May 22, 2007; 15//; 16// Last update: $Id$; 17//; 18#ifndef ROOT_Math_GenVector_RotationZYX; 19#define ROOT_Math_GenVector_RotationZYX 1; 20 ; 21#include ""Math/Math.h""; 22 ; 23#include ""Math/GenVector/Rotation3D.h""; 24 ; 25 ; 26#include ""Math/GenVector/DisplacementVector3D.h""; 27 ; 28#include ""Math/GenVector/PositionVector3D.h""; 29 ; 30#include ""Math/GenVector/LorentzVector.h""; 31 ; 32#include ""Math/GenVector/3DConversions.h""; 33 ; 34 ; 35#include <algorithm>; 36#include <cassert>; 37#include <iostream>; 38 ; 39 ; 40namespace ROOT {; 41namespace Math {; 42 ; 43 ; 44//__________________________________________________________________________________________; 45 /**; 46 Rotation class with the (3D) rotation represented by; 47 angles describing first a rotation of; 48 an angle phi (yaw) about the Z axis,; 49 followed by a rotation of an angle theta (pitch) about the Y axis,; 50 followed by a third rotation of an angle psi (roll) about the X axis.; 51 Note that the rotations are extrinsic rotations happening around a fixed coordinate system. ; 52 This is different than the convention of the ROOT::Math::EulerAngles class, where the rotation are intrinsic. ; 53 Also it has not to be confused with the typical Goldstein definition of the Euler Angles; 54 (Z-X-Z or 313 sequence) which is used by the ROOT::M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2RotationZYX_8h_source.html:112,Load,Loading,112,doc/master/GenVector_2RotationZYX_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2RotationZYX_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/Transform3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Transform3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Transform3D; 12//; 13// Created by: Lorenzo Moneta October 21 2005; 14//; 15//; 16#ifndef ROOT_Math_GenVector_Transform3D; 17#define ROOT_Math_GenVector_Transform3D 1; 18 ; 19 ; 20 ; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22 ; 23#include ""Math/GenVector/PositionVector3D.h""; 24 ; 25#include ""Math/GenVector/Rotation3D.h""; 26 ; 27#include ""Math/GenVector/Translation3D.h""; 28 ; 29 ; 30#include ""Math/GenVector/AxisAnglefwd.h""; 31#include ""Math/GenVector/EulerAnglesfwd.h""; 32#include ""Math/GenVector/Quaternionfwd.h""; 33#include ""Math/GenVector/RotationZYXfwd.h""; 34#include ""Math/GenVector/RotationXfwd.h""; 35#include ""Math/GenVector/RotationYfwd.h""; 36#include ""Math/GenVector/RotationZfwd.h""; 37 ; 38#include <iostream>; 39#include <type_traits>; 40#include <cmath>; 41 ; 42//#include ""Math/Vector3Dfwd.h""; 43 ; 44 ; 45 ; 46namespace ROOT {; 47 ; 48namespace Math {; 49 ; 50namespace Impl {; 51 ; 52//_________________________________________________________________________________________; 53/**; 54 Basic 3D Transformation class describing a rotation and then a translation; 55 The internal data are a 3D rotation data (represented as a 3x3 matrix) and a 3D vector data.; 56 They are represented and held in this class like a 3x4 matrix (a simple array of 12 numbers).; 57 ; 58 The class can be constructed from any 3D rotation object; 59 (ROOT::Math::Rotation3D, ROOT::Math::AxisAngle, ROOT::Math::Quaternion, etc...) and/or; 60 a 3D Vector (R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Transform3D_8h_source.html:112,Load,Loading,112,doc/master/GenVector_2Transform3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Transform3D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/Translation3D.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Translation3D.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Translation3D; 12//; 13// Created by: Lorenzo Moneta October 21 2005; 14//; 15//; 16#ifndef ROOT_Math_GenVector_Translation3D; 17#define ROOT_Math_GenVector_Translation3D 1; 18 ; 19 ; 20#include ""Math/GenVector/DisplacementVector3D.h""; 21 ; 22#include ""Math/GenVector/Plane3D.h""; 23 ; 24#include ""Math/GenVector/PositionVector3Dfwd.h""; 25 ; 26#include ""Math/GenVector/LorentzVectorfwd.h""; 27 ; 28#include <iostream>; 29#include <type_traits>; 30 ; 31namespace ROOT {; 32 ; 33namespace Math {; 34 ; 35namespace Impl {; 36 ; 37//____________________________________________________________________________________________________; 38/**; 39 Class describing a 3 dimensional translation. It can be combined (using the operator *); 40 with the ROOT::Math::Rotation3D classes and ROOT::Math::Transform3D to obtained combined; 41 transformations and to operate on points and vectors.; 42 Note that a the translation applied to a Vector object (DisplacementVector3D and LorentzVector classes); 43 performs a noop, i.e. it returns the same vector. A translation can be applied only to the Point objects; 44 (PositionVector3D classes).; 45 ; 46 @ingroup GenVector; 47 ; 48 @sa Overview of the @ref GenVector ""physics vector library""; 49 ; 50*/; 51 ; 52template <typename T = double>; 53class Translation3D {; 54 ; 55public:; 56 typedef T Scalar;; 57 ; 58 typedef DisplacementVector3D<Cartesian3D<T>, DefaultCoordinateSystemTag> Vector;; 59 ; 60 /**; 61 Default constr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Translation3D_8h_source.html:114,Load,Loading,114,doc/master/GenVector_2Translation3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Translation3D_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/GenVector/etaMax.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. etaMax.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11 ; 12// Header source file for function etaMax; 13//; 14// Created by: Mark Fischler at Thu Jun 2 2005; 15 ; 16 ; 17#ifndef ROOT_Math_GenVector_etaMax; 18#define ROOT_Math_GenVector_etaMax 1; 19 ; 20 ; 21#include <limits>; 22#include <cmath>; 23 ; 24 ; 25namespace ROOT {; 26 ; 27 namespace Math {; 28 ; 29 /**; 30 The following function could be called to provide the maximum possible; 31 value of pseudorapidity for a non-zero rho. This is log ( max/min ); 32 where max and min are the extrema of positive values for type; 33 long double.; 34 */; 35 inline; 36 long double etaMax_impl() {; 37 using std::log;; 38 return log ( std::numeric_limits<long double>::max()/256.0l ) -; 39 log ( std::numeric_limits<long double>::denorm_min()*256.0l ); 40 + 16.0 * log(2.0);; 41 // Actual usage of etaMax() simply returns the number 22756, which is; 42 // the answer this would supply, rounded to a higher integer.; 43 }; 44 ; 45 /**; 46 Function providing the maximum possible value of pseudorapidity for; 47 a non-zero rho, in the Scalar type with the largest dynamic range.; 48 */; 49 template <class T>; 50 inline; 51 T etaMax() {; 52 return static_cast<T>(22756.0);; 53 }; 54 ; 55 } // namespace Math; 56 ; 57} // namespace ROOT; 58 ; 59 ; 60#endif /* ROOT_Math_GenVector_etaMax */; MathNamespace for new Math classes and functions.; ROOT::Math::etaMax_impllong double etaMax_impl()The following function could be called to provide the maximum possible value of pseudorapidity for a ...Definition etaMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/etaMax_8h_source.html:107,Load,Loading,107,doc/master/etaMax_8h_source.html,https://root.cern,https://root.cern/doc/master/etaMax_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Point2D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Point2D.h File Reference. #include ""Math/Point2Dfwd.h""; #include ""Math/GenVector/Cartesian2D.h""; #include ""Math/GenVector/Polar2D.h""; #include ""Math/GenVector/PositionVector2D.h"". Include dependency graph for Point2D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathPoint2D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Point2D_8h.html:101,Load,Loading,101,doc/master/Point2D_8h.html,https://root.cern,https://root.cern/doc/master/Point2D_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Point2Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Point2Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file Point2Dfwd; 12//; 13// Created by: Lorenzo Moneta at Mon Apr 16 2007; 14//; 15 ; 16#ifndef ROOT_Math_Point2Dfwd; 17#define ROOT_Math_Point2Dfwd 1; 18 ; 19// forward declareations of position vectors (Points) and type defs definitions; 20 ; 21namespace ROOT {; 22 ; 23 namespace Math {; 24 ; 25 template<class CoordSystem, class Tag> class PositionVector2D;; 26 ; 27 template<typename T> class Cartesian2D;; 28 template<typename T> class Polar2D;; 29 ; 30 class DefaultCoordinateSystemTag;; 31 ; 32 /**; 33 2D Point based on the cartesian coordinates x,y,z in double precision; 34 */; 35 typedef PositionVector2D< Cartesian2D<double>, DefaultCoordinateSystemTag > XYPoint;; 36 typedef XYPoint XYPointD;; 37 ; 38 /**; 39 2D Point based on the cartesian coordinates x,y,z in single precision; 40 */; 41 typedef PositionVector2D< Cartesian2D<float>, DefaultCoordinateSystemTag > XYPointF;; 42 ; 43 ; 44 /**; 45 2D Point based on the polar coordinates rho, theta, phi in double precision.; 46 */; 47 typedef PositionVector2D< Polar2D<double>, DefaultCoordinateSystemTag > Polar2DPoint;; 48 typedef Polar2DPoint Polar2DPointD;; 49 ; 50 /**; 51 2D Point based on the polar coordinates rho, theta, phi in single precision.; 52 */; 53 typedef PositionVector2D< Polar2D<float>, DefaultCoordinateSystemTag > Polar2DPointF;; 54 ; 55 ; 56 ; 57 } // end namespace Math; 58 ; 59} // end namespace ROOT; 60 ; 61 ; 62#endif /* ROOT_Math_Point2Dfwd */; ROOT::Math::DefaultCoordinateSystemTagDefaultCoo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Point2Dfwd_8h_source.html:101,Load,Loading,101,doc/master/Point2Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Point2Dfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Point3D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Point3D.h File Reference. #include ""Math/Point3Dfwd.h""; #include ""Math/GenVector/Cartesian3D.h""; #include ""Math/GenVector/CylindricalEta3D.h""; #include ""Math/GenVector/Polar3D.h""; #include ""Math/GenVector/Cylindrical3D.h""; #include ""Math/GenVector/PositionVector3D.h"". Include dependency graph for Point3D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathPoint3D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Point3D_8h.html:101,Load,Loading,101,doc/master/Point3D_8h.html,https://root.cern,https://root.cern/doc/master/Point3D_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Point3Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Point3Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file Point3Dfwd; 12//; 13// Created by: Lorenzo Moneta at Mon May 30 18:12:14 2005; 14//; 15// Last update: Mon May 30 18:12:14 2005; 16//; 17#ifndef ROOT_Math_Point3Dfwd; 18#define ROOT_Math_Point3Dfwd 1; 19 ; 20// forward declareations of position vectors (Points) and type defs definitions; 21 ; 22namespace ROOT {; 23 ; 24 namespace Math {; 25 ; 26 template<class CoordSystem, class Tag> class PositionVector3D;; 27 ; 28 template<typename T> class Cartesian3D;; 29 template<typename T> class Cylindrical3D;; 30 template<typename T> class CylindricalEta3D;; 31 template<typename T> class Polar3D;; 32 ; 33 class DefaultCoordinateSystemTag;; 34 ; 35 /**; 36 3D Point based on the cartesian coordinates x,y,z in double precision; 37 */; 38 typedef PositionVector3D< Cartesian3D<double>, DefaultCoordinateSystemTag > XYZPoint;; 39 ; 40 /**; 41 3D Point based on the cartesian coordinates x,y,z in single precision; 42 */; 43 typedef PositionVector3D< Cartesian3D<float>, DefaultCoordinateSystemTag > XYZPointF;; 44 typedef XYZPoint XYZPointD;; 45 ; 46 /**; 47 3D Point based on the eta based cylindrical coordinates rho, eta, phi in double precision.; 48 */; 49 typedef PositionVector3D< CylindricalEta3D<double>, DefaultCoordinateSystemTag > RhoEtaPhiPoint;; 50 /**; 51 3D Point based on the eta based cylindrical coordinates rho, eta, phi in single precision.; 52 */; 53 typedef PositionVector3D< CylindricalEta3D<float>, DefaultCoordinateSystemTag > RhoEtaPhiPointF;; 54 typedef RhoEta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Point3Dfwd_8h_source.html:101,Load,Loading,101,doc/master/Point3Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Point3Dfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Vector2D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector2D.h File Reference. #include ""Math/Vector2Dfwd.h""; #include ""Math/GenVector/Cartesian2D.h""; #include ""Math/GenVector/Polar2D.h""; #include ""Math/GenVector/DisplacementVector2D.h"". Include dependency graph for Vector2D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathVector2D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector2D_8h.html:102,Load,Loading,102,doc/master/Vector2D_8h.html,https://root.cern,https://root.cern/doc/master/Vector2D_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Vector2Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector2Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file Vector2Dfwd; 12//; 13// Created by: Lorenzo Moneta at Mon Apr 16 2007; 14//; 15//; 16#ifndef ROOT_Math_Vector2Dfwd; 17#define ROOT_Math_Vector2Dfwd 1; 18 ; 19// forward declarations of displacement vectors (Vectors) and type defs definitions; 20 ; 21namespace ROOT {; 22 ; 23 namespace Math {; 24 ; 25 ; 26 template<class CoordSystem, class Tag> class DisplacementVector2D;; 27 ; 28 template<typename T> class Cartesian2D;; 29 template<typename T> class Polar2D;; 30 ; 31 class DefaultCoordinateSystemTag;; 32 ; 33 ; 34 /**; 35 2D Vector based on the cartesian coordinates x,y in double precision; 36 ; 37 To use it add the line `#include <Vector2D.h>`; 38 ; 39 See the documentation on the DisplacementVector2D page.; 40 */; 41 typedef DisplacementVector2D< Cartesian2D<double>, DefaultCoordinateSystemTag > XYVector;; 42 typedef XYVector XYVectorD;; 43 ; 44 /**; 45 2D Vector based on the cartesian coordinates x,y,z in single precision; 46 ; 47 To use it add the line `#include <Vector2D.h>`; 48 ; 49 See the documentation on the DisplacementVector2D page.; 50 */; 51 typedef DisplacementVector2D< Cartesian2D<float>, DefaultCoordinateSystemTag > XYVectorF;; 52 ; 53 ; 54 /**; 55 2D Vector based on the polar coordinates rho, phi in double precision.; 56 ; 57 To use it add the line `#include <Vector2D.h>`; 58 ; 59 See the documentation on the DisplacementVector2D page.; 60 */; 61 typedef DisplacementVector2D< Polar2D<double>, DefaultCoordinateSystemTag > Polar2DVector;; 62 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector2Dfwd_8h_source.html:102,Load,Loading,102,doc/master/Vector2Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Vector2Dfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Vector3D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector3D.h File Reference. #include ""Math/Vector3Dfwd.h""; #include ""Math/GenVector/Cartesian3D.h""; #include ""Math/GenVector/CylindricalEta3D.h""; #include ""Math/GenVector/Polar3D.h""; #include ""Math/GenVector/Cylindrical3D.h""; #include ""Math/GenVector/DisplacementVector3D.h"". Include dependency graph for Vector3D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathVector3D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector3D_8h.html:102,Load,Loading,102,doc/master/Vector3D_8h.html,https://root.cern,https://root.cern/doc/master/Vector3D_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Vector3Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector3Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file Vector3Dfwd; 12//; 13// Created by: Lorenzo Moneta at Mon May 30 18:08:35 2005; 14//; 15// Last update: Mon May 30 18:08:35 2005; 16//; 17#ifndef ROOT_Math_Vector3Dfwd; 18#define ROOT_Math_Vector3Dfwd 1; 19 ; 20// forward declarations of displacement vectors (Vectors) and type defs definitions; 21 ; 22namespace ROOT {; 23 ; 24 namespace Math {; 25 ; 26 ; 27 template<class CoordSystem, class Tag> class DisplacementVector3D;; 28 ; 29 template<typename T> class Cartesian3D;; 30 template<typename T> class CylindricalEta3D;; 31 template<typename T> class Polar3D;; 32 template<typename T> class Cylindrical3D;; 33 ; 34 class DefaultCoordinateSystemTag;; 35 ; 36 ; 37 /**; 38 3D Vector based on the cartesian coordinates x,y,z in double precision; 39 ; 40 To use it add the line `#include <Vector3D.h>`; 41 ; 42 See the documentation on the DisplacementVector3D page.; 43 */; 44 typedef DisplacementVector3D< Cartesian3D<double>, DefaultCoordinateSystemTag > XYZVector;; 45 /**; 46 3D Vector based on the cartesian coordinates x,y,z in single precision; 47 ; 48 To use it add the line `#include <Vector3D.h>`; 49 ; 50 See the documentation on the DisplacementVector3D page.; 51 */; 52 typedef DisplacementVector3D< Cartesian3D<float>, DefaultCoordinateSystemTag > XYZVectorF;; 53 typedef XYZVector XYZVectorD;; 54 ; 55 /**; 56 3D Vector based on the eta based cylindrical coordinates rho, eta, phi in double precision.; 57 ; 58 To use it add the line `#include <Vector3D.h>`; 59 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector3Dfwd_8h_source.html:102,Load,Loading,102,doc/master/Vector3Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Vector3Dfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Vector4D.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector4D.h File Reference. #include ""Math/Vector4Dfwd.h""; #include ""Math/GenVector/PxPyPzE4D.h""; #include ""Math/GenVector/PtEtaPhiE4D.h""; #include ""Math/GenVector/PxPyPzM4D.h""; #include ""Math/GenVector/PtEtaPhiM4D.h""; #include ""Math/GenVector/LorentzVector.h"". Include dependency graph for Vector4D.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. mathgenvectorincMathVector4D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector4D_8h.html:102,Load,Loading,102,doc/master/Vector4D_8h.html,https://root.cern,https://root.cern/doc/master/Vector4D_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/inc/Math/Vector4Dfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vector4Dfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LorentzVectorfwd; 12//; 13// Created by: moneta at Tue May 31 21:06:43 2005; 14//; 15// Last update: Tue May 31 21:06:43 2005; 16//; 17#ifndef ROOT_Math_Vector4Dfwd; 18#define ROOT_Math_Vector4Dfwd 1; 19 ; 20 ; 21namespace ROOT {; 22 ; 23 namespace Math {; 24 ; 25 ; 26 // forward declarations of Lorentz Vectors and type defs definitions; 27 ; 28 template<class CoordSystem> class LorentzVector;; 29 ; 30 template<typename T> class PxPyPzE4D;; 31 template<typename T> class PtEtaPhiE4D;; 32 template<typename T> class PxPyPzM4D;; 33 template<typename T> class PtEtaPhiM4D;; 34// template<typename T> class EEtaPhiMSystem;; 35 ; 36 ; 37 // for LorentzVector have only double classes (define the vector in the global ref frame); 38 ; 39 /**; 40 LorentzVector based on x,y,x,t (or px,py,pz,E) coordinates in double precision with metric (-,-,-,+); 41 ; 42 To use it add the line `#include <Math/Vector4D.h>`; 43 ; 44 See the documentation on the LorentzVector page.; 45 */; 46 typedef LorentzVector<PxPyPzE4D<double> > XYZTVector;; 47 // for consistency; 48 typedef LorentzVector<PxPyPzE4D<double> > PxPyPzEVector;; 49 ; 50 ; 51 /**; 52 LorentzVector based on x,y,x,t (or px,py,pz,E) coordinates in float precision with metric (-,-,-,+); 53 ; 54 To use it add the line `#include <Math/Vector4D.h>`; 55 ; 56 See the documentation on the LorentzVector page.; 57 */; 58 typedef LorentzVector< PxPyPzE4D <float> > XYZTVectorF;; 59 ; 60 ; 61 /**; 62 LorentzVector based on the x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vector4Dfwd_8h_source.html:102,Load,Loading,102,doc/master/Vector4Dfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/Vector4Dfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/AxisAngle.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. AxisAngle.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class AxisAngle, a rotation in 3 dimensions; 12// represented by its axis and angle of rotation; 13//; 14// Created by: Mark Fischler Tues July 5 2005; 15//; 16#include ""Math/GenVector/AxisAngle.h""; 17 ; 18#include <cmath>; 19#include <algorithm>; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/Rotation3D.h""; 24 ; 25namespace ROOT {; 26 ; 27namespace Math {; 28 ; 29// ========== Constructors and Assignment =====================; 30 ; 31void AxisAngle::RectifyAngle() {; 32 // Note: We could require the angle to be in [0,pi) since we; 33 // can represent negative angles by flipping the axis.; 34 // We choose not to do this.; 35 ; 36 if ( fAngle <= Pi() && fAngle > -Pi() ) return;; 37 ; 38 if ( fAngle > 0 ) {; 39 int n = static_cast<int>( (fAngle+Pi())/(2*Pi()) );; 40 fAngle -= 2*Pi()*n;; 41 } else {; 42 int n = static_cast<int>( -(fAngle-Pi())/(2*Pi()) );; 43 fAngle += 2*Pi()*n;; 44 }; 45} // RectifyAngle(); 46 ; 47void AxisAngle::Rectify(); 48{; 49 // The two conditions are that the angle is in (-pi, pi] and; 50 // the axis is a unit vector.; 51 ; 52 Scalar r2 = fAxis.Mag2();; 53 if ( r2 == 0 ) {; 54 fAxis.SetCoordinates(0,0,1);; 55 fAngle = 0;; 56 return;; 57 }; 58 fAxis *= (1.0/r2);; 59 RectifyAngle();; 60} // Rectify(); 61 ; 62// ======== Transformation to other Rotation Forms ==================; 63 ; 64enum ERotation3DMatrixIndex {; 65 kXX = 0, kXY = 1, kXZ = 2; 66 , kYX =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/AxisAngle_8cxx_source.html:97,Load,Loading,97,doc/master/AxisAngle_8cxx_source.html,https://root.cern,https://root.cern/doc/master/AxisAngle_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/AxisAngleXother.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. AxisAngleXother.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for multiplications of AxisAngle by a rotation; 12//; 13// Created by: Mark Fischler Tues July 5 2005; 14//; 15 ; 16#include ""Math/GenVector/AxisAngle.h""; 17 ; 18#include <cmath>; 19 ; 20#include ""Math/GenVector/Quaternion.h""; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/RotationX.h""; 23#include ""Math/GenVector/RotationY.h""; 24#include ""Math/GenVector/RotationZ.h""; 25 ; 26#include ""Math/GenVector/Rotation3Dfwd.h""; 27#include ""Math/GenVector/EulerAnglesfwd.h""; 28 ; 29namespace ROOT {; 30 ; 31namespace Math {; 32 ; 33 ; 34AxisAngle AxisAngle::operator * (const Rotation3D & r) const {; 35 // combination with a Rotation3D; 36 return operator* ( Quaternion(r) );; 37 ; 38}; 39 ; 40AxisAngle AxisAngle::operator * (const AxisAngle & a) const {; 41 // combination with another AxisAngle; 42 return operator* ( Quaternion(a) );; 43}; 44 ; 45AxisAngle AxisAngle::operator * (const EulerAngles & e) const {; 46 // combination with EulerAngles; 47 return operator* ( Quaternion(e) );; 48}; 49 ; 50AxisAngle AxisAngle::operator * (const RotationZYX & r) const {; 51 // combination with RotationZYX; 52 return operator* ( Quaternion(r) );; 53}; 54 ; 55AxisAngle AxisAngle::operator * (const Quaternion & q) const {; 56 // combination with Quaternion; 57 return AxisAngle ( Quaternion(*this) * q );; 58}; 59 ; 60#ifdef MOVE; 61 ; 62AxisAngle AxisAngle::operator * (const Quaternion & q) const {; 63 // combination with quaternion (not used); 64 const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/AxisAngleXother_8cxx_source.html:103,Load,Loading,103,doc/master/AxisAngleXother_8cxx_source.html,https://root.cern,https://root.cern/doc/master/AxisAngleXother_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/Boost.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Boost.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: M. Fischler 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Boost, a 4x4 symmetric matrix representation of; 12// an axial Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Nov 1 2005; 15//; 16#include ""Math/GenVector/Boost.h""; 17#include ""Math/GenVector/LorentzVector.h""; 18#include ""Math/GenVector/PxPyPzE4D.h""; 19#include ""Math/GenVector/DisplacementVector3D.h""; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/GenVector_exception.h""; 22 ; 23#include <cmath>; 24#include <algorithm>; 25 ; 26//#ifdef TEX; 27/**; 28 ; 29 A variable names bgamma appears in several places in this file. A few; 30 words of elaboration are needed to make its meaning clear. On page 69; 31 of Misner, Thorne and Wheeler, (Exercise 2.7) the elements of the matrix; 32 for a general Lorentz boost are given as; 33 ; 34 \f[ \Lambda^{j'}_k = \Lambda^{k'}_j; 35 = (\gamma - 1) n^j n^k + \delta^{jk} \f]; 36 ; 37 where the n^i are unit vectors in the direction of the three spatial; 38 axes. Using the definitions, \f$ n^i = \beta_i/\beta \f$ , then, for example,; 39 ; 40 \f[ \Lambda_{xy} = (\gamma - 1) n_x n_y; 41 = (\gamma - 1) \beta_x \beta_y/\beta^2 \f]; 42 ; 43 By definition, \f[ \gamma^2 = 1/(1 - \beta^2) \f]; 44 ; 45 so that \f[ \gamma^2 \beta^2 = \gamma^2 - 1 \f]; 46 ; 47 or \f[ \beta^2 = (\gamma^2 - 1)/\gamma^2 \f]; 48 ; 49 If we insert this into the expression for \f$ \Lambda_{xy} \f$, we get; 50 ; 51 \f[ \Lambda_{xy} = (\gamma - 1) \gamma^2/(\gamma^2 - 1) \beta_x \beta_y \f]; 52 ; 53 or, finally; 54 ; 55 \f[ \Lambda_{xy} = \gam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Boost_8cxx_source.html:93,Load,Loading,93,doc/master/Boost_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Boost_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/BoostX.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BoostX.cxx. Go to the documentation of this file. 1 // @(#)root/mathcore:$Id$; 2// Authors: M. Fischler 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class BoostX, a 4x4 symmetric matrix representation of; 12// an axial Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Nov 1 2005; 15//; 16#include ""Math/GenVector/BoostX.h""; 17#include ""Math/GenVector/LorentzVector.h""; 18#include ""Math/GenVector/PxPyPzE4D.h""; 19#include ""Math/GenVector/DisplacementVector3D.h""; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/GenVector_exception.h""; 22 ; 23#include <cmath>; 24#include <algorithm>; 25 ; 26namespace ROOT {; 27 ; 28namespace Math {; 29 ; 30 ; 31BoostX::BoostX() : fBeta(0.0), fGamma(1.0) {}; 32 ; 33void BoostX::SetComponents (Scalar bx ) {; 34 // set component; 35 Scalar bp2 = bx*bx;; 36 if (bp2 >= 1) {; 37 GenVector::Throw (; 38 ""Beta Vector supplied to set BoostX represents speed >= c"");; 39 return;; 40 }; 41 fBeta = bx;; 42 fGamma = 1.0 / std::sqrt(1.0 - bp2);; 43}; 44 ; 45void BoostX::GetComponents (Scalar& bx) const {; 46 // get component; 47 bx = fBeta;; 48}; 49 ; 50DisplacementVector3D< Cartesian3D<BoostX::Scalar> >; 51BoostX::BetaVector() const {; 52 // return beta vector; 53 return DisplacementVector3D< Cartesian3D<Scalar> > ( fBeta, 0.0, 0.0 );; 54}; 55 ; 56void BoostX::GetLorentzRotation (Scalar r[]) const {; 57 // get corresponding LorentzRotation; 58 r[kLXX] = fGamma; r[kLXY] = 0.0; r[kLXZ] = 0.0; r[kLXT] = fGamma*fBeta;; 59 r[kLYX] = 0.0; r[kLYY] = 1.0; r[kLYZ] = 0.0; r[kLYT] = 0.0;; 60 r[kLZX] = 0.0; r[kLZY] = 0.0; r[kLZZ] = 1.0; r[kLZT] = 0.0;; 61 r[kLTX] = fGamma*fBeta; r[kLTY] =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BoostX_8cxx_source.html:94,Load,Loading,94,doc/master/BoostX_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BoostX_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/BoostY.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BoostY.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: M. Fischler 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class BoostY, a 4x4 symmetric matrix representation of; 12// an axial Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Nov 1 2005; 15//; 16#include ""Math/GenVector/BoostY.h""; 17#include ""Math/GenVector/LorentzVector.h""; 18#include ""Math/GenVector/PxPyPzE4D.h""; 19#include ""Math/GenVector/DisplacementVector3D.h""; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/GenVector_exception.h""; 22 ; 23#include <cmath>; 24#include <algorithm>; 25 ; 26namespace ROOT {; 27 ; 28namespace Math {; 29 ; 30BoostY::BoostY() : fBeta(0.0), fGamma(1.0) {}; 31 ; 32void BoostY::SetComponents (Scalar by) {; 33 // set component; 34 Scalar bp2 = by*by;; 35 if (bp2 >= 1) {; 36 GenVector::Throw(; 37 ""Beta Vector supplied to set BoostY represents speed >= c"");; 38 return;; 39 }; 40 fBeta = by;; 41 fGamma = 1.0 / std::sqrt(1.0-bp2);; 42}; 43 ; 44void BoostY::GetComponents (Scalar& by) const {; 45 // get component; 46 by = fBeta;; 47}; 48 ; 49DisplacementVector3D< Cartesian3D<BoostY::Scalar> >; 50BoostY::BetaVector() const {; 51 // return beta vector; 52 return DisplacementVector3D< Cartesian3D<Scalar> > ( 0.0, fBeta, 0.0 );; 53}; 54 ; 55void BoostY::GetLorentzRotation (Scalar r[]) const {; 56 // get corresponding LorentzRotation; 57 r[kLXX] = 1.0; r[kLXY] = 0.0; r[kLXZ] = 0.0; r[kLXT] = 0.0;; 58 r[kLYX] = 0.0; r[kLYY] = fGamma; r[kLYZ] = 0.0; r[kLYT] = fGamma*fBeta;; 59 r[kLZX] = 0.0; r[kLZY] = 0.0; r[kLZZ] = 1.0; r[kLZT] = 0.0;; 60 r[kLTX] = 0.0; r[kLTY] = fGamma*fBeta; r[kL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BoostY_8cxx_source.html:94,Load,Loading,94,doc/master/BoostY_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BoostY_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/BoostZ.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BoostZ.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: M. Fischler 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class BoostZ, a 4x4 symmetric matrix representation of; 12// an axial Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Nov 1 2005; 15//; 16#include ""Math/GenVector/BoostZ.h""; 17#include ""Math/GenVector/LorentzVector.h""; 18#include ""Math/GenVector/PxPyPzE4D.h""; 19#include ""Math/GenVector/DisplacementVector3D.h""; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/GenVector_exception.h""; 22 ; 23#include <cmath>; 24#include <algorithm>; 25 ; 26namespace ROOT {; 27 ; 28namespace Math {; 29 ; 30BoostZ::BoostZ() : fBeta(0.0), fGamma(1.0) {}; 31 ; 32void BoostZ::SetComponents (Scalar bz) {; 33 // set component; 34 Scalar bp2 = bz*bz;; 35 if (bp2 >= 1) {; 36 GenVector::Throw (; 37 ""Beta Vector supplied to set BoostZ represents speed >= c"");; 38 return;; 39 }; 40 fBeta = bz;; 41 fGamma = 1.0 / std::sqrt(1.0 - bp2);; 42}; 43 ; 44void BoostZ::GetComponents (Scalar& bz) const {; 45 // get component; 46 bz = fBeta;; 47}; 48 ; 49DisplacementVector3D< Cartesian3D<BoostZ::Scalar> >; 50BoostZ::BetaVector() const {; 51 // return beta vector; 52 return DisplacementVector3D< Cartesian3D<Scalar> >; 53 ( 0.0, 0.0, fBeta );; 54}; 55 ; 56void BoostZ::GetLorentzRotation (Scalar r[]) const {; 57 // get corresponding LorentzRotation; 58 r[kLXX] = 1.0; r[kLXY] = 0.0; r[kLXZ] = 0.0; r[kLXT] = 0.0 ;; 59 r[kLYX] = 0.0; r[kLYY] = 1.0; r[kLYZ] = 0.0; r[kLYT] = 0.0 ;; 60 r[kLZX] = 0.0; r[kLZY] = 0.0; r[kLZZ] = fGamma; r[kLZT] = fGamma*fBeta;; 61 r[kLTX] = 0.0; r[kLTY] = 0.0; r[kL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BoostZ_8cxx_source.html:94,Load,Loading,94,doc/master/BoostZ_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BoostZ_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/EulerAngles.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. EulerAngles.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for rotation in 3 dimensions, represented by EulerAngles; 12//; 13// Created by: Mark Fischler Thurs June 9 2005; 14//; 15// Last update: $Id$; 16//; 17#include ""Math/GenVector/EulerAngles.h""; 18 ; 19#include <cmath>; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/Rotation3D.h""; 24#include ""Math/GenVector/Quaternion.h""; 25#include ""Math/GenVector/RotationX.h""; 26#include ""Math/GenVector/RotationY.h""; 27#include ""Math/GenVector/RotationZ.h""; 28 ; 29#include ""Math/GenVector/AxisAnglefwd.h""; 30 ; 31namespace ROOT {; 32 ; 33namespace Math {; 34 ; 35// ========== Constructors and Assignment =====================; 36 ; 37void EulerAngles::Rectify(); 38{; 39 // rectify; 40 if ( fTheta < 0 || fTheta > Pi() ) {; 41 Scalar t = fTheta - std::floor( fTheta/(2*Pi()) ) * 2*Pi();; 42 if ( t <= Pi() ) {; 43 fTheta = t;; 44 } else {; 45 fTheta = 2*Pi() - t;; 46 fPhi = fPhi + Pi();; 47 fPsi = fPsi + Pi();; 48 }; 49 }; 50 ; 51 if ( fPhi <= -Pi()|| fPhi > Pi() ) {; 52 fPhi = fPhi - std::floor( fPhi/(2*Pi()) +.5 ) * 2*Pi();; 53 }; 54 ; 55 if ( fPsi <= -Pi()|| fPsi > Pi() ) {; 56 fPsi = fPsi - std::floor( fPsi/(2*Pi()) +.5 ) * 2*Pi();; 57 }; 58 ; 59} // Rectify(); 60 ; 61 ; 62// ========== Operations =====================; 63 ; 64// DisplacementVector3D< Cartesian3D<double> >; 65// EulerAngles::; 66// operator() (const DisplacementVector3D< Cartesian3D<double> > & v) const; 67// {; 68// r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/EulerAngles_8cxx_source.html:99,Load,Loading,99,doc/master/EulerAngles_8cxx_source.html,https://root.cern,https://root.cern/doc/master/EulerAngles_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/LorentzRotation.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. LorentzRotation.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LorentzRotation, a 4x4 matrix representation of; 12// a general Lorentz transformation; 13//; 14// Created by: Mark Fischler Mon Aug 8 2005; 15//; 16 ; 17#include ""Math/GenVector/GenVectorIO.h""; 18 ; 19#include ""Math/GenVector/LorentzRotation.h""; 20#include ""Math/GenVector/LorentzVector.h""; 21#include ""Math/GenVector/PxPyPzE4D.h""; 22#include ""Math/GenVector/GenVector_exception.h""; 23 ; 24#include <cmath>; 25#include <algorithm>; 26 ; 27#include ""Math/GenVector/Rotation3D.h""; 28#include ""Math/GenVector/RotationX.h""; 29#include ""Math/GenVector/RotationY.h""; 30#include ""Math/GenVector/RotationZ.h""; 31 ; 32namespace ROOT {; 33 ; 34namespace Math {; 35 ; 36LorentzRotation::LorentzRotation() {; 37 // constructor of an identity LR; 38 fM[kXX] = 1.0; fM[kXY] = 0.0; fM[kXZ] = 0.0; fM[kXT] = 0.0;; 39 fM[kYX] = 0.0; fM[kYY] = 1.0; fM[kYZ] = 0.0; fM[kYT] = 0.0;; 40 fM[kZX] = 0.0; fM[kZY] = 0.0; fM[kZZ] = 1.0; fM[kZT] = 0.0;; 41 fM[kTX] = 0.0; fM[kTY] = 0.0; fM[kTZ] = 0.0; fM[kTT] = 1.0;; 42}; 43 ; 44LorentzRotation::LorentzRotation(Rotation3D const & r) {; 45 // construct from Rotation3D; 46 r.GetComponents ( fM[kXX], fM[kXY], fM[kXZ],; 47 fM[kYX], fM[kYY], fM[kYZ],; 48 fM[kZX], fM[kZY], fM[kZZ] );; 49 fM[kXT] = 0.0;; 50 fM[kYT] = 0.0;; 51 fM[kZT] = 0.0;; 52 fM[kTX] = 0.0; fM[kTY] = 0.0; fM[kTZ] = 0.0; fM[kTT] = 1.0;; 53}; 54 ; 55LorentzRotation::LorentzRotation(AxisAngle const & a) {; 56 // construct from AxisAngle; 57 const Rotation3D r(a);; 58 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/LorentzRotation_8cxx_source.html:103,Load,Loading,103,doc/master/LorentzRotation_8cxx_source.html,https://root.cern,https://root.cern/doc/master/LorentzRotation_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/Quaternion.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Quaternion.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for rotation in 3 dimensions, represented by quaternion; 12//; 13// Created by: Mark Fischler Thurs June 9 2005; 14//; 15// Last update: $Id$; 16//; 17#include ""Math/GenVector/Quaternion.h""; 18 ; 19#include <cmath>; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23 ; 24#include ""Math/GenVector/Rotation3Dfwd.h""; 25#include ""Math/GenVector/AxisAnglefwd.h""; 26#include ""Math/GenVector/EulerAnglesfwd.h""; 27 ; 28namespace ROOT {; 29 ; 30namespace Math {; 31 ; 32// ========== Constructors and Assignment =====================; 33 ; 34void Quaternion::Rectify(); 35{; 36 ; 37 // The vector should be a unit vector, and the first element should be; 38 // non-negative (though negative fU quaternions would work just fine,; 39 // being isomorphic to a quaternion with positive fU).; 40 ; 41 if ( fU < 0 ) {; 42 fU = - fU; fI = - fI; fJ = - fJ; fK = - fK;; 43 }; 44 ; 45 Scalar a = 1.0 / std::sqrt(fU*fU + fI*fI + fJ*fJ + fK*fK);; 46 fU *= a;; 47 fI *= a;; 48 fJ *= a;; 49 fK *= a;; 50 ; 51} // Rectify(); 52 ; 53 ; 54// ========== Operations =====================; 55 ; 56// DisplacementVector3D< Cartesian3D<double> >; 57// Quaternion::operator() (const DisplacementVector3D< Cartesian3D<double> > & v) const; 58// {; 59// // apply to a 3D Vector; 60// }; 61 ; 62// Quaternion Quaternion::operator * (const Quaternion & q) const {; 63// // combination of rotations; 64// return Quaternion (; 65// fU*q.fU - fI*q.fI - fJ*q.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Quaternion_8cxx_source.html:98,Load,Loading,98,doc/master/Quaternion_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Quaternion_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/QuaternionXaxial.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. QuaternionXaxial.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for quaternion times other non-axial rotations.; 12// Decoupled from main Quaternion implementations.; 13//; 14// Created by: Mark Fischler Tues July 19, 2005; 15//; 16// Last update: $Id$; 17//; 18#include ""Math/GenVector/Quaternion.h""; 19 ; 20namespace ROOT {; 21 ; 22namespace Math {; 23 ; 24 ; 25// Although the same technique would work with axial rotations,; 26// we know that two of the four quaternion components will be zero,; 27// and we exploit that knowledge:; 28 ; 29Quaternion Quaternion::operator * (const RotationX & rx) const {; 30 // combination with a RotationX; 31 Quaternion q(rx);; 32 return Quaternion (; 33 U()*q.U() - I()*q.I(); 34 , I()*q.U() + U()*q.I(); 35 , J()*q.U() + K()*q.I(); 36 , K()*q.U() - J()*q.I(); 37 );; 38}; 39 ; 40Quaternion Quaternion::operator * (const RotationY & ry) const {; 41 // combination with a RotationY; 42 Quaternion q(ry);; 43 return Quaternion (; 44 U()*q.U() - J()*q.J(); 45 , I()*q.U() - K()*q.J(); 46 , J()*q.U() + U()*q.J(); 47 , K()*q.U() + I()*q.J(); 48 );; 49}; 50 ; 51Quaternion Quaternion::operator * (const RotationZ & rz) const {; 52 // combination with a RotationZ; 53 Quaternion q(rz);; 54 return Quaternion (; 55 U()*q.U() - K()*q.K(); 56 , I()*q.U() + J()*q.K(); 57 , J()*q.U() - I()*q.K(); 58 , K()*q.U() + U()*q.K(); 59 );; 60}; 61 ; 62Quaternion; 63operator * ( RotationX const & r, Quaternion const & q ) {; 64 return Quaternion(r) * q; // TODO: improve performance; 65}; 66 ; 67Qua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/QuaternionXaxial_8cxx_source.html:104,Load,Loading,104,doc/master/QuaternionXaxial_8cxx_source.html,https://root.cern,https://root.cern/doc/master/QuaternionXaxial_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/Rotation3D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Rotation3D.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Rotation in 3 dimensions, represented by 3x3 matrix; 12//; 13// Created by: Mark Fischler Tues July 5 2005; 14//; 15#include ""Math/GenVector/Rotation3D.h""; 16 ; 17#include <cmath>; 18#include <algorithm>; 19 ; 20#include ""Math/GenVector/Cartesian3D.h""; 21#include ""Math/GenVector/DisplacementVector3D.h""; 22 ; 23namespace ROOT {; 24 ; 25namespace Math {; 26 ; 27// ========== Constructors and Assignment =====================; 28 ; 29Rotation3D::Rotation3D(); 30{; 31 // constructor of a identity rotation; 32 fM[kXX] = 1.0; fM[kXY] = 0.0; fM[kXZ] = 0.0;; 33 fM[kYX] = 0.0; fM[kYY] = 1.0; fM[kYZ] = 0.0;; 34 fM[kZX] = 0.0; fM[kZY] = 0.0; fM[kZZ] = 1.0;; 35}; 36 ; 37 ; 38void Rotation3D::Rectify(); 39{; 40 // rectify rotation matrix (make orthogonal); 41 // The ""nearest"" orthogonal matrix X to a nearly-orthogonal matrix A; 42 // (in the sense that X is exactly orthogonal and the sum of the squares; 43 // of the element differences X-A is as small as possible) is given by; 44 // X = A * inverse(sqrt(A.transpose()*A.inverse())).; 45 ; 46 // Step 1 -- form symmetric M = A.transpose * A; 47 ; 48 double m11 = fM[kXX]*fM[kXX] + fM[kYX]*fM[kYX] + fM[kZX]*fM[kZX];; 49 double m12 = fM[kXX]*fM[kXY] + fM[kYX]*fM[kYY] + fM[kZX]*fM[kZY];; 50 double m13 = fM[kXX]*fM[kXZ] + fM[kYX]*fM[kYZ] + fM[kZX]*fM[kZZ];; 51 double m22 = fM[kXY]*fM[kXY] + fM[kYY]*fM[kYY] + fM[kZY]*fM[kZY];; 52 double m23 = fM[kXY]*fM[kXZ] + fM[kYY]*fM[kYZ] + fM[kZY]*fM[kZZ];; 53 double m33 = fM[kXZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Rotation3D_8cxx_source.html:98,Load,Loading,98,doc/master/Rotation3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Rotation3D_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/Rotation3DxAxial.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Rotation3DxAxial.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4#include ""Math/GenVector/Rotation3D.h""; 5 ; 6#include ""Math/GenVector/RotationX.h""; 7#include ""Math/GenVector/RotationY.h""; 8#include ""Math/GenVector/RotationZ.h""; 9 ; 10namespace ROOT {; 11 ; 12namespace Math {; 13 ; 14Rotation3D Rotation3D::operator * (const RotationX & rx) const {; 15 // combination of a Rotation3D with a RotationX; 16 Scalar s = rx.SinAngle();; 17 Scalar c = rx.CosAngle();; 18 return Rotation3D; 19 (; 20 fM[kXX], fM[kXY]*c + fM[kXZ]*s, fM[kXZ]*c - fM[kXY]*s; 21 , fM[kYX], fM[kYY]*c + fM[kYZ]*s, fM[kYZ]*c - fM[kYY]*s; 22 , fM[kZX], fM[kZY]*c + fM[kZZ]*s, fM[kZZ]*c - fM[kZY]*s; 23 );; 24}; 25 ; 26Rotation3D Rotation3D::operator * (const RotationY & ry) const {; 27 // combination of a Rotation3D with a RotationY; 28 Scalar s = ry.SinAngle();; 29 Scalar c = ry.CosAngle();; 30 return Rotation3D; 31 (; 32 fM[kXX]*c - fM[kXZ]*s, fM[kXY], fM[kXX]*s + fM[kXZ]*c; 33 , fM[kYX]*c - fM[kYZ]*s, fM[kYY], fM[kYX]*s + fM[kYZ]*c; 34 , fM[kZX]*c - fM[kZZ]*s, fM[kZY], fM[kZX]*s + fM[kZZ]*c; 35 );; 36}; 37 ; 38 ; 39Rotation3D Rotation3D::operator * (const RotationZ & rz) const {; 40 // combination of a Rotation3D with a RotationZ; 41 Scalar s = rz.SinAngle();; 42 Scalar c = rz.CosAngle();; 43 return Rotation3D; 44 (; 45 fM[kXX]*c + fM[kXY]*s, fM[kXY]*c - fM[kXX]*s, fM[kXZ]; 46 , fM[kYX]*c + fM[kYY]*s, fM[kYY]*c - fM[kYX]*s, fM[kYZ]; 47 , fM[kZX]*c + fM[kZY]*s, fM[kZY]*c - fM[kZX]*s, fM[kZZ]; 48 );; 49}; 50 ; 51Rotation3D operator* (RotationX const & r1, Rotation3D const & r2) {; 52 // combination of a RotationX with a Rotation3D; 53 // TODO -- recode for much better efficiency!; 54 return Rotation3D(r1)*r2;; 55}; 56 ; 57Rotation3D operator* (RotationY const & r1, Rotation3D const & r2)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Rotation3DxAxial_8cxx_source.html:104,Load,Loading,104,doc/master/Rotation3DxAxial_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Rotation3DxAxial_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/genvector/src/RotationZYX.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RotationZYX.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for rotation in 3 dimensions, represented by RotationZYX; 12//; 13// Created by: Lorenzo Moneta, May 23 2007; 14//; 15// Last update: $Id$; 16//; 17#include ""Math/GenVector/RotationZYX.h""; 18 ; 19#include <cmath>; 20 ; 21#include ""Math/GenVector/Cartesian3D.h""; 22#include ""Math/GenVector/DisplacementVector3D.h""; 23#include ""Math/GenVector/Rotation3D.h""; 24#include ""Math/GenVector/Quaternion.h""; 25#include ""Math/GenVector/RotationX.h""; 26#include ""Math/GenVector/RotationY.h""; 27#include ""Math/GenVector/RotationZ.h""; 28 ; 29#include ""Math/GenVector/AxisAnglefwd.h""; 30 ; 31namespace ROOT {; 32 ; 33namespace Math {; 34 ; 35// ========== Constructors and Assignment =====================; 36 ; 37 ; 38 ; 39// ========== Operations =====================; 40 ; 41// DisplacementVector3D< Cartesian3D<double> >; 42// RotationZYX::; 43// operator() (const DisplacementVector3D< Cartesian3D<double> > & v) const; 44// {; 45// return Rotation3D(*this)(v);; 46// }; 47 ; 48 ; 49RotationZYX RotationZYX::operator * (const Rotation3D & r) const {; 50 // combine with a Rotation3D; 51 return RotationZYX ( Rotation3D(*this) * r );; 52}; 53 ; 54RotationZYX RotationZYX::operator * (const AxisAngle & a) const {; 55 // combine with a AxisAngle; 56 return RotationZYX ( Quaternion(*this) * Quaternion(a) );; 57}; 58 ; 59RotationZYX RotationZYX::operator * (const EulerAngles & e) const {; 60 // combine with EulerAngles; 61 return RotationZYX ( Quaternion(*this) * Quaternion(e) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RotationZYX_8cxx_source.html:99,Load,Loading,99,doc/master/RotationZYX_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RotationZYX_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/BinData.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; BinData.h File Reference. #include ""Fit/FitData.h""; #include ""Math/Error.h""; #include <cmath>; #include <vector>. Include dependency graph for BinData.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Fit::BinData;  Class describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  . mathmathcoreincFitBinData.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h.html:99,Load,Loading,99,doc/master/BinData_8h.html,https://root.cern,https://root.cern/doc/master/BinData_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/BinData.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BinData.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:15:23 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class BinData; 12 ; 13#ifndef ROOT_Fit_BinData; 14#define ROOT_Fit_BinData; 15 ; 16#include ""Fit/FitData.h""; 17#include ""Math/Error.h""; 18#include <cmath>; 19#include <vector>; 20 ; 21namespace ROOT {; 22 ; 23 namespace Fit {; 24 ; 25 ; 26 ; 27//___________________________________________________________________________________; 28/**; 29 Class describing the binned data sets :; 30 vectors of x coordinates, y values and optionally error on y values and error on coordinates; 31 The dimension of the coordinate is free; 32 There are 4 different options:; 33 - only coordinates and values (for binned likelihood fits) : kNoError; 34 - coordinate, values and error on values (for normal least square fits) : kValueError; 35 - coordinate, values, error on values and coordinates (for effective least square fits) : kCoordError; 36 - coordinate, values, error on coordinates and asymmetric error on values : kAsymError; 37 ; 38 In addition there is the option to construct Bindata copying the data in (using the DataVector class); 39 or using pointer to external data (DataWrapper) class.; 40 In general is found to be more efficient to copy the data.; 41 In case of really large data sets for limiting memory consumption then the other option can be used; 42 Specialized constructor exists for data up to 3 dimensions.; 43 ; 44 When the data are copying in the number of points can be set later (or re-set) using Initialize and; 45 the data are inserted one by one using the Add metho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:96,Load,Loading,96,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/Chi2FCN.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs ; Chi2FCN.h File Reference. #include ""ROOT/EExecutionPolicy.hxx""; #include ""Fit/BasicFCN.h""; #include ""Fit/BinData.h""; #include ""Fit/FitUtil.h""; #include ""Math/IFunction.h""; #include ""Math/IFunctionfwd.h""; #include ""Math/IParamFunction.h""; #include <memory>; #include <vector>. Include dependency graph for Chi2FCN.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >;  Chi2FCN class for binned fits using the least square methods. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  . Typedefs; typedef Chi2FCN< ROOT::Math::IMultiGenFunction, ROOT::Math::IParamMultiFunction > ROOT::Fit::Chi2Function;  ; typedef Chi2FCN< ROOT::Math::IMultiGradFunction, ROOT::Math::IParamMultiFunction > ROOT::Fit::Chi2GradFunction;  . mathmathcoreincFitChi2FCN.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Chi2FCN_8h.html:99,Load,Loading,99,doc/master/Chi2FCN_8h.html,https://root.cern,https://root.cern/doc/master/Chi2FCN_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/Chi2FCN.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Chi2FCN.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Sep 5 09:13:32 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Chi2FCN; 12 ; 13#ifndef ROOT_Fit_Chi2FCN; 14#define ROOT_Fit_Chi2FCN; 15 ; 16#include ""ROOT/EExecutionPolicy.hxx""; 17#include ""Fit/BasicFCN.h""; 18#include ""Fit/BinData.h""; 19#include ""Fit/FitUtil.h""; 20#include ""Math/IFunction.h""; 21#include ""Math/IFunctionfwd.h""; 22#include ""Math/IParamFunction.h""; 23 ; 24#include <memory>; 25#include <vector>; 26 ; 27/**; 28@defgroup FitMethodFunc Fit Method Classes; 29 ; 30Classes describing Fit Method functions; 31@ingroup Fit; 32*/; 33 ; 34namespace ROOT {; 35 ; 36 ; 37 namespace Fit {; 38 ; 39//___________________________________________________________________________________; 40/**; 41 Chi2FCN class for binned fits using the least square methods; 42 ; 43 @ingroup FitMethodFunc; 44*/; 45template<class DerivFunType, class ModelFunType = ROOT::Math::IParamMultiFunction>; 46class Chi2FCN : public BasicFCN<DerivFunType, ModelFunType, BinData> {; 47 ; 48public:; 49 ; 50 typedef typename ModelFunType::BackendType T;; 51 typedef BasicFCN<DerivFunType, ModelFunType, BinData> BaseFCN;; 52 ; 53 typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> BaseObjFunction;; 54 typedef typename BaseObjFunction::BaseFunction BaseFunction;; 55 ; 56 //typedef typename ::ROOT::Math::ParamFunctionTrait<FunType>::PFType IModelFunction;; 57 typedef ::ROOT::Math::IParamMultiFunctionTempl<T> IModelFunction;; 58 typedef typename BaseObjFunction::Type_t Type_t;; 59 ; 60 /**; 61 Constructor from data set (binned ) and model function; 62 */; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Chi2FCN_8h_source.html:96,Load,Loading,96,doc/master/Chi2FCN_8h_source.html,https://root.cern,https://root.cern/doc/master/Chi2FCN_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/DataOptions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataOptions.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:04:59 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class DataOptions; 12 ; 13#ifndef ROOT_Fit_DataOptions; 14#define ROOT_Fit_DataOptions; 15 ; 16 ; 17namespace ROOT {; 18 ; 19 namespace Fit {; 20 ; 21 ; 22//___________________________________________________________________________________; 23/**; 24 DataOptions : simple structure holding the options on how the data are filled; 25 ; 26 @ingroup FitData; 27*/; 28struct DataOptions {; 29 ; 30 ; 31 /**; 32 Default constructor: use the default options; 33 */; 34 DataOptions () :; 35 fIntegral(false),; 36 fBinVolume(false),; 37 fNormBinVolume(false),; 38 fUseEmpty(false),; 39 fUseRange(false),; 40 fErrors1(false),; 41 fExpErrors(false),; 42 fCoordErrors(true),; 43 fAsymErrors(true); 44 {}; 45 ; 46 ; 47 bool fIntegral; ///< use integral of bin content instead of bin center (default is false); 48 bool fBinVolume; ///< normalize data by the bin volume (it is used in the Poisson likelihood fits); 49 bool fNormBinVolume; ///< normalize data by a normalized the bin volume (bin volume divided by a reference value); 50 bool fUseEmpty; ///< use empty bins (default is false) with a fixed error of 1; 51 bool fUseRange; ///< use the function range when creating the fit data (default is false); 52 bool fErrors1; ///< use all errors equal to 1, i.e. fit without errors (default is false); 53 bool fExpErrors; ///< use expected errors from the function and not from the data; 54 bool fCoordErrors; ///< use errors on the x coordinates when available (default is true); 55 boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataOptions_8h_source.html:100,Load,Loading,100,doc/master/DataOptions_8h_source.html,https://root.cern,https://root.cern/doc/master/DataOptions_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/DataRange.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataRange.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:02 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class DataRange; 12 ; 13#ifndef ROOT_Fit_DataRange; 14#define ROOT_Fit_DataRange; 15 ; 16#include <vector>; 17#include <utility>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Fit {; 22 ; 23 ; 24//___________________________________________________________________________________; 25/**; 26 class describing the range in the coordinates; 27 it supports multiple range in a coordinate.; 28 The range dimension is the dimension of the coordinate, its size is; 29 the number of interval for each coordinate.; 30 Default range is -inf, inf; 31 Range can be modified with the add range method; 32 ; 33 @ingroup FitData; 34*/; 35class DataRange {; 36 ; 37public:; 38 ; 39 typedef std::vector<std::pair<double,double> > RangeSet;; 40 typedef std::vector< RangeSet > RangeIntervals;; 41 ; 42 /**; 43 Default constructor (infinite range); 44 */; 45 explicit DataRange (unsigned int dim = 1) :; 46 fRanges ( std::vector<RangeSet> (dim) ); 47 {}; 48 ; 49 /**; 50 construct a range for [xmin, xmax]; 51 */; 52 DataRange(double xmin, double xmax);; 53 ; 54 /**; 55 construct a range for [xmin, xmax] , [ymin, ymax]; 56 */; 57 DataRange(double xmin, double xmax, double ymin, double ymax);; 58 /**; 59 construct a range for [xmin, xmax] , [ymin, ymax] , [zmin, zmax]; 60 */; 61 DataRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax);; 62 /**; 63 get range dimension; 64 */; 65 unsigned int NDim() const { return fRanges.size(); }; 66 ; 67 /**; 68 return range siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataRange_8h_source.html:98,Load,Loading,98,doc/master/DataRange_8h_source.html,https://root.cern,https://root.cern/doc/master/DataRange_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/FitConfig.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FitConfig.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Sep 21 16:21:29 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class FitConfig; 12 ; 13#ifndef ROOT_Fit_FitConfig; 14#define ROOT_Fit_FitConfig; 15 ; 16 ; 17#include ""Fit/ParameterSettings.h""; 18 ; 19#include ""Math/MinimizerOptions.h""; 20 ; 21#include ""Math/IParamFunctionfwd.h""; 22 ; 23#include ""TMath.h""; 24 ; 25#include <vector>; 26#include <string>; 27 ; 28namespace ROOT {; 29 ; 30 namespace Math {; 31 ; 32 class Minimizer;; 33 class MinimizerOptions;; 34 }; 35 ; 36 namespace Fit {; 37 ; 38 class FitResult;; 39 ; 40//___________________________________________________________________________________; 41/**; 42 Class describing the configuration of the fit, options and parameter settings; 43 using the ROOT::Fit::ParameterSettings class; 44 ; 45 @ingroup FitMain; 46*/; 47class FitConfig {; 48 ; 49public:; 50 ; 51 /**; 52 Default constructor; 53 */; 54 FitConfig (unsigned int npar = 0);; 55 ; 56 ; 57 /*; 58 Copy constructor; 59 */; 60 FitConfig(const FitConfig & rhs);; 61 ; 62 /**; 63 Destructor; 64 */; 65 ~FitConfig ();; 66 ; 67 /*; 68 Assignment operator; 69 */; 70 FitConfig & operator= (const FitConfig & rhs);; 71 ; 72 ; 73 /**; 74 get the parameter settings for the i-th parameter (const method); 75 */; 76 const ParameterSettings & ParSettings(unsigned int i) const { return fSettings.at(i); }; 77 ; 78 /**; 79 get the parameter settings for the i-th parameter (non-const method); 80 */; 81 ParameterSettings & ParSettings(unsigned int i) { return fSettings.at(i); }; 82 ; 83 /**; 84 get the vector of parameter settings ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:98,Load,Loading,98,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/FitResult.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FitResult.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:34 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class FitResult; 12 ; 13#ifndef ROOT_Fit_FitResult; 14#define ROOT_Fit_FitResult; 15 ; 16#include ""Math/IFunctionfwd.h""; 17#include ""Math/IParamFunctionfwd.h""; 18 ; 19#include <vector>; 20#include <map>; 21#include <string>; 22#include <cmath>; 23#include <memory>; 24 ; 25namespace ROOT {; 26 ; 27 namespace Math {; 28 class Minimizer;; 29 }; 30 ; 31 ; 32 namespace Fit {; 33 ; 34 class FitConfig;; 35 class FitData;; 36 class BinData;; 37 ; 38//___________________________________________________________________________________; 39/**; 40 class containing the result of the fit and all the related information; 41 (fitted parameter values, error, covariance matrix and minimizer result information); 42 Contains a pointer also to the fitted (model) function, modified with the fit parameter values.; 43 When the fit is valid, it is constructed from a Minimizer and a model function pointer; 44 ; 45 @ingroup FitMain; 46*/; 47class FitResult {; 48 ; 49public:; 50 ; 51 typedef ROOT::Math::IParamMultiFunction IModelFunction;; 52 ; 53 /**; 54 Default constructor for an empty (non valid) fit result; 55 */; 56 FitResult ();; 57 ; 58 /**; 59 Constructor from a fit-config for a dummy fit; 60 (e.g. when only one fcn evaluation is done); 61 */; 62 FitResult (const FitConfig & fconfig);; 63 ; 64 // default copy constructor and assignment can be used; 65 ; 66 /**; 67 Destructor; 68 */; 69 virtual ~FitResult () {}; 70 ; 71 ; 72public:; 73 ; 74 /**; 75 Fill the fit result from a M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8h_source.html:98,Load,Loading,98,doc/master/FitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/Fitter.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs ; Fitter.h File Reference. #include ""Fit/BinData.h""; #include ""Fit/UnBinData.h""; #include ""Fit/FitConfig.h""; #include ""ROOT/EExecutionPolicy.hxx""; #include ""Fit/FitResult.h""; #include ""Math/IParamFunction.h""; #include <memory>; #include ""Math/WrappedFunction.h"". Include dependency graph for Fitter.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Fit::Fitter;  Fitter class, entry point for performing all type of fits. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  ; namespace  ROOT::Math;  . Typedefs; typedef BasicFitMethodFunction< ROOT::Math::IMultiGenFunction > ROOT::Math::FitMethodFunction;  ; typedef BasicFitMethodFunction< ROOT::Math::IMultiGradFunction > ROOT::Math::FitMethodGradFunction;  . mathmathcoreincFitFitter.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h.html:98,Load,Loading,98,doc/master/Fitter_8h.html,https://root.cern,https://root.cern/doc/master/Fitter_8h.html,2,"['Load', 'perform']","['Loading', 'performing']"
Performance,". ROOT: math/mathcore/inc/Fit/Fitter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Fitter.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:19 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Fitter; 12 ; 13#ifndef ROOT_Fit_Fitter; 14#define ROOT_Fit_Fitter; 15 ; 16/**; 17@defgroup Fit Fitting and Parameter Estimation; 18 ; 19Classes used for fitting (regression analysis) and estimation of parameter values given a data sample.; 20 ; 21@ingroup MathCore; 22 ; 23*/; 24 ; 25#include ""Fit/BinData.h""; 26#include ""Fit/UnBinData.h""; 27#include ""Fit/FitConfig.h""; 28#include ""ROOT/EExecutionPolicy.hxx""; 29#include ""Fit/FitResult.h""; 30#include ""Math/IParamFunction.h""; 31#include <memory>; 32 ; 33namespace ROOT {; 34 ; 35 ; 36 namespace Math {; 37 class Minimizer;; 38 ; 39 // should maybe put this in a FitMethodFunctionfwd file; 40 template<class FunctionType> class BasicFitMethodFunction;; 41 ; 42 // define the normal and gradient function; 43 typedef BasicFitMethodFunction<ROOT::Math::IMultiGenFunction> FitMethodFunction;; 44 typedef BasicFitMethodFunction<ROOT::Math::IMultiGradFunction> FitMethodGradFunction;; 45 ; 46 }; 47 ; 48 /**; 49 Namespace for the fitting classes; 50 @ingroup Fit; 51 */; 52 ; 53 namespace Fit {; 54 ; 55/**; 56 @defgroup FitMain User Fitting classes; 57 ; 58 Main Classes used for fitting a given data set; 59 @ingroup Fit; 60*/; 61 ; 62 ; 63//___________________________________________________________________________________; 64/**; 65 Fitter class, entry point for performing all type of fits.; 66 Fits are performed using the generic ROOT::Fit::Fitter::Fit method.; 67 The inputs are the data points and a model function (using a R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:95,Load,Loading,95,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/LogLikelihoodFCN.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. LogLikelihoodFCN.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Aug 17 14:29:24 2007; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class LogLikelihoodFCN; 12 ; 13#ifndef ROOT_Fit_LogLikelihoodFCN; 14#define ROOT_Fit_LogLikelihoodFCN; 15 ; 16#include ""ROOT/EExecutionPolicy.hxx""; 17#include ""Fit/BasicFCN.h""; 18#include ""Fit/FitUtil.h""; 19#include ""Fit/UnBinData.h""; 20#include ""Math/IParamFunction.h""; 21 ; 22#include <memory>; 23#include <vector>; 24 ; 25namespace ROOT {; 26 ; 27 namespace Fit {; 28 ; 29 ; 30//___________________________________________________________________________________; 31/**; 32 LogLikelihoodFCN class; 33 for likelihood fits; 34 ; 35 it is template to distinguish gradient and non-gradient case; 36 ; 37 @ingroup FitMethodFunc; 38*/; 39template<class DerivFunType,class ModelFunType = ROOT::Math::IParamMultiFunction>; 40class LogLikelihoodFCN : public BasicFCN<DerivFunType,ModelFunType,UnBinData> {; 41 ; 42public:; 43 ; 44 typedef typename ModelFunType::BackendType T;; 45 typedef BasicFCN<DerivFunType,ModelFunType,UnBinData> BaseFCN;; 46 ; 47 typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> BaseObjFunction;; 48 typedef typename BaseObjFunction::BaseFunction BaseFunction;; 49 ; 50 typedef ::ROOT::Math::IParamMultiFunctionTempl<T> IModelFunction;; 51 typedef typename BaseObjFunction::Type_t Type_t;; 52 ; 53 ; 54 /**; 55 Constructor from unbin data set and model function (pdf); 56 */; 57 LogLikelihoodFCN (const std::shared_ptr<UnBinData> & data, const std::shared_ptr<IModelFunction> & func, int weight = 0, bool extended = false, const ::ROOT::EE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/LogLikelihoodFCN_8h_source.html:105,Load,Loading,105,doc/master/LogLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/LogLikelihoodFCN_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/ParameterSettings.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ParameterSettings.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Sep 21 16:21:48 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class ParameterSettings; 12 ; 13#ifndef ROOT_Fit_ParameterSettings; 14#define ROOT_Fit_ParameterSettings; 15 ; 16#include <string>; 17 ; 18namespace ROOT {; 19 ; 20 namespace Fit {; 21 ; 22 ; 23//___________________________________________________________________________________; 24/**; 25 Class, describing value, limits and step size of the parameters; 26 Provides functionality also to set/retrieve values, step sizes, limits and fix the; 27 parameters.; 28 ; 29 To be done: add constraints (equality and inequality) as functions of the parameters; 30 ; 31 @ingroup FitMain; 32*/; 33class ParameterSettings {; 34 ; 35public:; 36 ; 37 /**; 38 Default constructor; 39 */; 40 ParameterSettings () {}; 41 ; 42 ; 43 ///constructor for unlimited named Parameter; 44 ParameterSettings(const std::string & name, double val, double err) :; 45 fValue(val), fStepSize(err),; 46 fName(name); 47 {}; 48 ; 49 ///constructor for double limited Parameter. The given value should be within the given limits [min,max]; 50 ParameterSettings(const std::string & name, double val, double err,; 51 double min, double max) :; 52 fValue(val), fStepSize(err),; 53 fName(name); 54 {; 55 SetLimits(min,max);; 56 }; 57 ; 58 ///constructor for fixed Parameter; 59 ParameterSettings(const std::string & name, double val) :; 60 fValue(val), fStepSize(0), fFix(true),; 61 fName(name); 62 {}; 63 ; 64 ; 65 ; 66 ; 67 /// set value and name (unlimited parameter); 68 void Set(const std::string &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ParameterSettings_8h_source.html:106,Load,Loading,106,doc/master/ParameterSettings_8h_source.html,https://root.cern,https://root.cern/doc/master/ParameterSettings_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/PoissonLikelihoodFCN.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PoissonLikelihoodFCN.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Aug 17 14:29:24 2007; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class PoissonLikelihoodFCN; 12 ; 13#ifndef ROOT_Fit_PoissonLikelihoodFCN; 14#define ROOT_Fit_PoissonLikelihoodFCN; 15 ; 16#include ""ROOT/EExecutionPolicy.hxx""; 17#include ""Fit/BasicFCN.h""; 18#include ""Fit/BinData.h""; 19#include ""Fit/FitUtil.h""; 20#include ""Math/IParamFunction.h""; 21 ; 22#include <memory>; 23#include <vector>; 24 ; 25//#define PARALLEL; 26// #ifdef PARALLEL; 27// #ifndef ROOT_Fit_FitUtilParallel; 28// #include ""Fit/FitUtilParallel.h""; 29// #endif; 30// #endif; 31 ; 32namespace ROOT {; 33 ; 34 namespace Fit {; 35 ; 36 ; 37//___________________________________________________________________________________; 38/**; 39 class evaluating the log likelihood; 40 for binned Poisson likelihood fits; 41 it is template to distinguish gradient and non-gradient case; 42 ; 43 @ingroup FitMethodFunc; 44*/; 45template<class DerivFunType, class ModelFunType = ROOT::Math::IParamMultiFunction>; 46class PoissonLikelihoodFCN : public BasicFCN<DerivFunType,ModelFunType,BinData> {; 47 ; 48public:; 49 typedef typename ModelFunType::BackendType T;; 50 typedef BasicFCN<DerivFunType,ModelFunType,BinData> BaseFCN;; 51 ; 52 typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> BaseObjFunction;; 53 typedef typename BaseObjFunction::BaseFunction BaseFunction;; 54 ; 55 typedef ::ROOT::Math::IParamMultiFunctionTempl<T> IModelFunction;; 56 typedef typename BaseObjFunction::Type_t Type_t;; 57 ; 58 /**; 59 Constructor from unbin data set and model f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html:109,Load,Loading,109,doc/master/PoissonLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Fit/UnBinData.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. UnBinData.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:15:23 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class UnBinData; 12 ; 13#ifndef ROOT_Fit_UnBinData; 14#define ROOT_Fit_UnBinData; 15 ; 16#include ""Fit/FitData.h""; 17#include ""Math/Error.h""; 18 ; 19#include <vector>; 20 ; 21namespace ROOT {; 22 ; 23 namespace Fit {; 24 ; 25 ; 26//___________________________________________________________________________________; 27/**; 28 Class describing the un-binned data sets (just x coordinates values) of any dimensions; 29 ; 30 There is the option to construct UnBindata copying the data inside; 31 (in the base FitData class) or using a pointer to external data, depending on which; 32 constructor of the UnBinData class is used.; 33 It is recommended to copy the input data inside, since this will be more efficient and; 34 less error prone, since the input provided data will have to be kept alive for all the time the; 35 Fit classes will be used.; 36 In case of really large data sets for limiting memory consumption then the other option can be used; 37 with special care.; 38 Specialized constructor exists for using external data up to 3 dimensions.; 39 ; 40 When the data are copying in the number of points can be set later (or re-set) using Initialize and; 41 the data are inserted one by one using the Add method.; 42 It is mandatory to set the size before using the Add method.; 43 ; 44 @ingroup FitData; 45*/; 46class UnBinData : public FitData {; 47 ; 48public :; 49 ; 50 /**; 51 constructor from dimension of point and max number of points (to pre-allocate vector); 52 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/UnBinData_8h_source.html:98,Load,Loading,98,doc/master/UnBinData_8h_source.html,https://root.cern,https://root.cern/doc/master/UnBinData_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/ChebyshevPol.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ChebyshevPol.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta, 11/2012; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// Header file declaring functions for the evaluation of the Chebyshev //; 15// polynomials and the ChebyshevPol class which can be used for //; 16// creating a TF1. //; 17// //; 18//////////////////////////////////////////////////////////////////////////; 19 ; 20#ifndef ROOT_Math_ChebyshevPol; 21#define ROOT_Math_ChebyshevPol; 22 ; 23#include <sys/types.h>; 24#include <cstring>; 25 ; 26namespace ROOT {; 27 ; 28 namespace Math {; 29 ; 30 /// template recursive functions for defining evaluation of Chebyshev polynomials; 31 /// T_n(x) and the series S(x) = Sum_i c_i* T_i(x); 32 namespace Chebyshev {; 33 ; 34 template<int N> double T(double x) {; 35 return (2.0 * x * T<N-1>(x)) - T<N-2>(x);; 36 }; 37 ; 38 template<> double T<0> (double );; 39 template<> double T<1> (double x);; 40 template<> double T<2> (double x);; 41 template<> double T<3> (double x);; 42 ; 43 template<int N> double Eval(double x, const double * c) {; 44 return c[N]*T<N>(x) + Eval<N-1>(x,c);; 45 }; 46 ; 47 template<> double Eval<0> (double , const double *c);; 48 template<> double Eval<1> (double x, const double *c);; 49 template<> double Eval<2> (double x, const double *c);; 50 template<> double Eval<3> (double x, const double *c);; 51 ; 52 } // end namespace Chebyshev; 53 ; 54 ; 55 // impl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ChebyshevPol_8h_source.html:102,Load,Loading,102,doc/master/ChebyshevPol_8h_source.html,https://root.cern,https://root.cern/doc/master/ChebyshevPol_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/Functor.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functor.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Mon Nov 13 15:58:13 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for Functor classes.; 12// designed is inspired by the Loki Functor; 13 ; 14#ifndef ROOT_Math_Functor; 15#define ROOT_Math_Functor; 16 ; 17#include ""Math/IFunction.h""; 18 ; 19// #ifndef Root_Math_StaticCheck; 20// #include ""Math/StaticCheck.h""; 21// #endif; 22 ; 23#include <memory>; 24#include <functional>; 25#include <vector>; 26 ; 27namespace ROOT {; 28 ; 29namespace Math {; 30 ; 31/**; 32 Documentation for class Functor class.; 33 It is used to wrap in a very simple and convenient way multi-dimensional function objects.; 34 It can wrap all the following types:; 35 <ul>; 36 <li> any C++ callable object implementation double operator()( const double * ); 37 <li> a free C function of type double ()(const double * ); 38 <li> an std::function of type std::function<double (double const *)>; 39 <li> a member function with the correct signature like Foo::Eval(const double * ).; 40 In this case one pass the object pointer and a pointer to the member function (&Foo::Eval); 41 </ul>; 42 The function dimension is required when constructing the functor.; 43 ; 44 @ingroup GenFunc; 45 ; 46 */; 47class Functor : public IBaseFunctionMultiDim {; 48 ; 49public:; 50 ; 51 /// Default constructor.; 52 Functor () {}; 53 ; 54 /// Construct from a pointer to member function (multi-dim type).; 55 template <class PtrObj, typename MemFn>; 56 Functor(const PtrObj& p, MemFn memFn, unsigned int dim ); 57 : fDim{dim}, fFunc{std::bind(memFn, p, std::placeholders::_1)}; 58 {}; 59 ; 60 /// Cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Functor_8h_source.html:97,Load,Loading,97,doc/master/Functor_8h_source.html,https://root.cern,https://root.cern/doc/master/Functor_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/IFunction.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. IFunction.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta 11/2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for function interfaces; 12//; 13// Generic Interfaces for one or multi-dimensional functions; 14//; 15// Created by: Lorenzo Moneta : Wed Nov 13 2006; 16//; 17//; 18#ifndef ROOT_Math_IFunction; 19#define ROOT_Math_IFunction; 20 ; 21/**; 22@defgroup CppFunctions Function Classes and Interfaces; 23 ; 24 Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods; 25 for describing function classes. They define function and gradient evaluation and as well the; 26 functionality for dealing with parameters in the case of parametric functions which are used for; 27 fitting and data modeling.; 28 Included are also adapter classes, such as functors, to wrap generic callable C++ objects; 29 in the desired interface.; 30 ; 31@ingroup MathCore; 32*/; 33 ; 34#include ""Math/IFunctionfwd.h""; 35 ; 36 ; 37namespace ROOT {; 38 namespace Math {; 39 ; 40 /**; 41 @defgroup GenFunc Generic Function Evaluation Interfaces; 42 Interface classes for evaluation of function object classes in one or multi-dimensions.; 43 @ingroup CppFunctions; 44 */; 45 ; 46//___________________________________________________________________________________; 47 /**; 48 Documentation for the abstract class IBaseFunctionMultiDim.; 49 Interface (abstract class) for generic functions objects of multi-dimension; 50 Provides a method to evaluate the function given a vector of coordinate values,; 51 by implementing operator() (const double *).; 52 In addition it defines the interface for copying f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/IFunction_8h_source.html:99,Load,Loading,99,doc/master/IFunction_8h_source.html,https://root.cern,https://root.cern/doc/master/IFunction_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/IFunctionfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. IFunctionfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Nov 14 14:38:48 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Defines Forward declaration for template IFunction class and useful typedefs; 12 ; 13#ifndef ROOT_Math_IFunctionfwd; 14#define ROOT_Math_IFunctionfwd; 15 ; 16namespace ROOT {; 17 ; 18 namespace Math {; 19 ; 20 class IBaseFunctionOneDim;; 21 class IGradientFunctionOneDim;; 22 template<class T>; 23 class IBaseFunctionMultiDimTempl;; 24 template <class T>; 25 class IGradientFunctionMultiDimTempl;; 26 template <class T>; 27 class IGradientMultiDimTempl;; 28 ; 29 template<class T>; 30 using IMultiGenFunctionTempl = IBaseFunctionMultiDimTempl<T>;; 31 using IBaseFunctionMultiDim = IBaseFunctionMultiDimTempl<double>;; 32 using IMultiGenFunction = IMultiGenFunctionTempl<double>;; 33 ; 34 using IGradientFunctionMultiDim = IGradientFunctionMultiDimTempl<double>;; 35 using IGradientMultiDim = IGradientMultiDimTempl<double>;; 36 ; 37 typedef IBaseFunctionOneDim IGenFunction;; 38 typedef IBaseFunctionMultiDim IMultiGenFunction;; 39 ; 40 typedef IGradientFunctionOneDim IGradFunction;; 41 typedef IGradientFunctionMultiDim IMultiGradFunction;; 42 ; 43 ; 44 } // end namespace Math; 45 ; 46} // end namespace ROOT; 47 ; 48 ; 49#endif /* ROOT_Math_IFunctionfwd */; ROOT::Math::IBaseFunctionMultiDimTemplDocumentation for the abstract class IBaseFunctionMultiDim.Definition IFunction.h:61; ROOT::Math::IBaseFunctionOneDimInterface (abstract class) for generic functions objects of one-dimension Provides a method to evalua...Definition IFunction.h:112; ROOT::Math::IGradientFunctionMultiDimTem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/IFunctionfwd_8h_source.html:102,Load,Loading,102,doc/master/IFunctionfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/IFunctionfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/IParamFunctionfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. IParamFunctionfwd.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Nov 14 14:38:52 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Forward declarations for template class IParamFunction class; 12 ; 13#ifndef ROOT_Math_IParamFunctionfwd; 14#define ROOT_Math_IParamFunctionfwd; 15 ; 16#include ""Math/IFunctionfwd.h""; 17 ; 18namespace ROOT {; 19 ; 20 namespace Math {; 21 ; 22 class IParametricFunctionOneDim;; 23 class IParametricGradFunctionOneDim;; 24 template<class T>; 25 class IParametricFunctionMultiDimTempl;; 26 using IParametricFunctionMultiDim = IParametricFunctionMultiDimTempl<double>;; 27 template<class T>; 28 class IParametricGradFunctionMultiDimTempl;; 29 using IParametricGradFunctionMultiDim = IParametricGradFunctionMultiDimTempl<double>;; 30 ; 31 typedef IParametricFunctionOneDim IParamFunction;; 32 typedef IParametricFunctionMultiDim IParamMultiFunction;; 33 template<class T>; 34 using IParamMultiFunctionTempl = IParametricFunctionMultiDimTempl<T>;; 35 ; 36 typedef IParametricGradFunctionOneDim IParamGradFunction;; 37 typedef IParametricGradFunctionMultiDim IParamMultiGradFunction;; 38 template<class T>; 39 using IParamMultiGradFunctionTempl = IParametricGradFunctionMultiDimTempl<T>;; 40 ; 41 ; 42 } // end namespace Math; 43 ; 44} // end namespace ROOT; 45 ; 46 ; 47#endif /* ROOT_Math_IParamFunctionfwd */; IFunctionfwd.h; ROOT::Math::IParametricFunctionMultiDimTempl< double >; ROOT::Math::IParametricFunctionOneDimSpecialized IParamFunction interface (abstract class) for one-dimensional parametric functions It is ...Definition IParamFunction.h:161; ROOT::Math::IParametricGrad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/IParamFunctionfwd_8h_source.html:107,Load,Loading,107,doc/master/IParamFunctionfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/IParamFunctionfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/Integrator.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Integrator.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, M. Slawinska 10/2007; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Integrator; 12//; 13//; 14#ifndef ROOT_Math_Integrator; 15#define ROOT_Math_Integrator; 16 ; 17#include ""Math/AllIntegrationTypes.h""; 18 ; 19#include ""Math/IntegratorOptions.h""; 20 ; 21#include ""Math/IFunction.h""; 22 ; 23#include ""Math/VirtualIntegrator.h""; 24 ; 25#include <memory>; 26#include <vector>; 27#include <string>; 28 ; 29 ; 30/**; 31@defgroup NumAlgo Numerical Algorithms; 32 ; 33Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries.; 34 ; 35@ingroup MathCore; 36@ingroup MathMore; 37 ; 38*/; 39 ; 40 ; 41/**; 42 ; 43@defgroup Integration Numerical Integration; 44 ; 45Classes for numerical integration of functions.; 46These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods; 47and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator).; 48The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class; 49ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones.; 50The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and; 51ROOT::Math::IntegratorMultiDimOptions classes.; 52 ; 53@ingroup NumAlgo; 54 ; 55*/; 56 ; 57 ; 58 ; 59namespace ROOT {; 60namespace Math {; 61 ; 62 ; 63 ; 64 ; 65//___________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Integrator_8h_source.html:100,Load,Loading,100,doc/master/Integrator_8h_source.html,https://root.cern,https://root.cern/doc/master/Integrator_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/Math.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Math.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Nov 14 15:44:38 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// mathematical constants like Pi; 12 ; 13#ifndef ROOT_Math_Math; 14#define ROOT_Math_Math; 15 ; 16#ifdef _MSC_VER; 17#define _USE_MATH_DEFINES; 18#endif; 19 ; 20#include <cmath>; 21 ; 22#if defined(__sun) || defined(_MSC_VER); 23//Microsoft and solaris definition of cmath does not include math.h which has the definitions of numerical constants; 24#include <math.h>; 25#endif; 26 ; 27 ; 28#ifdef HAVE_NO_EXPM1; 29// needed to implement expm1; 30#include <limits>; 31#endif; 32 ; 33 ; 34#ifndef M_PI; 35 ; 36#define M_PI 3.14159265358979323846264338328 // Pi; 37#endif; 38 ; 39#ifndef M_PI_2; 40#define M_PI_2 1.57079632679489661923132169164 // Pi/2; 41#endif; 42 ; 43#ifndef M_PI_4; 44#define M_PI_4 0.78539816339744830961566084582 // Pi/4; 45#endif; 46 ; 47/**; 48 \namespace ROOT; 49 Namespace for new ROOT classes and functions; 50 */; 51 ; 52namespace ROOT {; 53 ; 54/**; 55\namespace Math; 56Namespace for new Math classes and functions.; 57See the \ref Math ""Math Libraries"" page for a detailed description.; 58*/; 59 ; 60namespace Math {; 61// Enable Vc/VecCore template instantiations to replace std math functions.; 62//; 63// Vc declares `std::sqrt(Vc-type)`. To use this for Vc-`SCALAR`s, the call; 64// to `sqrt()` must only be resolved at the template instantiation time, when; 65// the Vc headers are guaranteed to be included, and thus its `sqrt()`; 66// overloads have been declared.; 67// The trick is to keep sqrt() dependent (on its argument type) by making it; 68// an unqualified name.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Math_8h_source.html:94,Load,Loading,94,doc/master/Math_8h_source.html,https://root.cern,https://root.cern/doc/master/Math_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/MinimTransformVariable.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MinimTransformVariable.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta 2009; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10// Header file for class MinimizerVariable; 11 ; 12#ifndef ROOT_Math_MinimizerVariable; 13#define ROOT_Math_MinimizerVariable; 14 ; 15#include ""MinimizerVariableTransformation.h""; 16 ; 17#include <memory>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Math {; 22 ; 23 /**; 24 Enumeration describing the status of the variable; 25 The enumeration are used in the minimizer classes to categorize the variables; 26 */; 27 enum EMinimVariableType {; 28 kDefault, ///< free variable (unlimited); 29 kFix, ///< fixed variable; 30 kBounds, ///< variable has two bounds; 31 kLowBound, ///< variable has a lower bound; 32 kUpBound ///< variable has an upper bounds; 33 };; 34 ; 35 ; 36 ; 37/**; 38 MinimTransformVariable class; 39 Contains meta information of the variables such as bounds, fix flags and; 40 deals with transformation of the variable; 41 The class does not contain the values and the step size (error) of the variable; 42 This is an internal class used by the MinimTransformFunction class; 43 ; 44 @ingroup MultiMin; 45*/; 46 ; 47 ; 48class MinimTransformVariable {; 49 ; 50public:; 51 ; 52 /**; 53 Default Constructor for an unlimited variable; 54 */; 55 MinimTransformVariable () :; 56 fFix(false), fLowBound(false), fUpBound(false), fBounds(false),; 57 fLower(1), fUpper(0); 58 {}; 59 ; 60 // constructor for fixed variable; 61 MinimTransformVariable (double value) :; 62 fFix(true), fLowBound(false), fUpBound(false), fBounds(false),; 63 fLower(value), fUpper(value); 64 {}; 65 ; 66 // con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimTransformVariable_8h_source.html:112,Load,Loading,112,doc/master/MinimTransformVariable_8h_source.html,https://root.cern,https://root.cern/doc/master/MinimTransformVariable_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/Minimizer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Minimizer.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Sep 22 15:06:47 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class Minimizer; 12 ; 13#ifndef ROOT_Math_Minimizer; 14#define ROOT_Math_Minimizer; 15 ; 16#include ""Math/IFunction.h""; 17#include ""Math/MinimizerOptions.h""; 18 ; 19#include <ROOT/RSpan.hxx>; 20 ; 21#include <string>; 22#include <limits>; 23#include <cmath>; 24#include <vector>; 25#include <functional>; 26 ; 27 ; 28 ; 29namespace ROOT {; 30 ; 31 namespace Fit {; 32 class ParameterSettings;; 33 }; 34 ; 35 ; 36 namespace Math {; 37 ; 38/**; 39 @defgroup MultiMin Multi-dimensional Minimization; 40 @ingroup NumAlgo; 41 ; 42 Classes implementing algorithms for multi-dimensional minimization; 43 */; 44 ; 45 ; 46 ; 47//_______________________________________________________________________________; 48/**; 49 Abstract Minimizer class, defining the interface for the various minimizer; 50 (like Minuit2, Minuit, GSL, etc..) in ROOT.; 51 Plug-in's exist in ROOT to be able to instantiate the derived classes without linking the library; 52 using the static function ROOT::Math::Factory::CreateMinimizer.; 53 ; 54 Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated:; 55 The name shown below can be used to create them. More documentation can be found in the respective class; 56 ; 57 - Minuit (class TMinuitMinimizer); 58 - Migrad (default); 59 - MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of [Minuit tutorial on Function Minimization](https://seal.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:99,Load,Loading,99,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/MinimizerOptions.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; MinimizerOptions.h File Reference. #include <string>; #include <iostream>. Include dependency graph for MinimizerOptions.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Math::MinimizerOptions;  Minimizer options. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Math;  . mathmathcoreincMathMinimizerOptions.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimizerOptions_8h.html:109,Load,Loading,109,doc/master/MinimizerOptions_8h.html,https://root.cern,https://root.cern/doc/master/MinimizerOptions_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/MinimizerOptions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MinimizerOptions.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Aug 15 2008; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2008 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#ifndef ROOT_Math_MinimizerOptions; 12#define ROOT_Math_MinimizerOptions; 13 ; 14#include <string>; 15 ; 16#include <iostream>; 17 ; 18namespace ROOT {; 19 ; 20 ; 21namespace Math {; 22 ; 23 ; 24class IOptions;; 25 ; 26//_______________________________________________________________________________; 27/**; 28 Minimizer options; 29 ; 30 @ingroup MultiMin; 31 ; 32 Class defining the options for the minimizer.; 33 It contains also static methods for setting the default Minimizer option values; 34 that will be used by default by all Minimizer instances.; 35 To see the current default options do:; 36 ; 37 ROOT::Math::MinimizerOptions::PrintDefault();; 38 ; 39*/; 40class MinimizerOptions {; 41 ; 42public:; 43 ; 44 // static methods for setting and retrieving the default options; 45 ; 46 /// Set the default Minimizer type and corresponding algorithms.; 47 /// Here is the list of the available minimizers and their corresponding algorithms.; 48 /// For some minimizers (e.g. Fumili) there are no specific algorithms available, then there is no need to specify it.; 49 ///; 50 /// \anchor ROOTMinimizers; 51 /// ### ROOT Minimizers; 52 ///; 53 /// - Minuit Minimizer based on TMinuit, the legacy Minuit implementation. Here are the available algorithms:; 54 /// - Migrad default algorithm based on the variable metric minimizer; 55 /// - Minimize combination of Simplex and Migrad; 56 /// - Simplex minimization algorithm not using the gradient information; 57 /// - Scan brute function s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimizerOptions_8h_source.html:106,Load,Loading,106,doc/master/MinimizerOptions_8h_source.html,https://root.cern,https://root.cern/doc/master/MinimizerOptions_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/MixMaxEngine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MixMaxEngine.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Aug 4 2015; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// random engines based on ROOT; 12 ; 13#ifndef ROOT_Math_MixMaxEngine; 14#define ROOT_Math_MixMaxEngine; 15 ; 16#include <cstdint>; 17#include <vector>; 18 ; 19#include ""Math/TRandomEngine.h""; 20 ; 21 ; 22// struct rng_state_st; /// forward declare generator state; 23 ; 24// typedef struct rng_state_st rng_state_t;; 25 ; 26// namespace mixmax {; 27// template<int Ndim>; 28// class mixmax_engine;; 29// }; 30 ; 31namespace ROOT {; 32 ; 33 namespace Math {; 34 ; 35 template<int N>; 36 class MixMaxEngineImpl;; 37 ; 38/**; 39MixMaxEngine is a wrapper class for the MIXMAX Random number generator.; 40MIXMAX is a matrix-recursive random number generator introduced by; 41G. Savvidy.; 42 ; 43The real implementation of the generator, written in C, is in the mixmax.h and mixmax.cxx files.; 44This generator code is available also at hepforge: http://mixmax.hepforge.org; 45The MIXMAX code has been created and developed by Konstantin Savvidy and it is; 46released under GNU Lesser General Public License v3.; 47 ; 48This wrapper class provides 3 different variants of MIXMAX according to the template para extra parameter N.; 49The extra parameter, `SkipNumber`, is used to perform additional iterations of the generator before returning the random numbers.; 50For example, when `SkipNumber = 2`, the generator will have two extra iterations that will be discarder.; 51 ; 52 - MIXMAX with N = 240. This is a new version of the generator (version 2.0beta) described in the; 53 <a href=""http://dx.doi.org",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MixMaxEngine_8h_source.html:102,Load,Loading,102,doc/master/MixMaxEngine_8h_source.html,https://root.cern,https://root.cern/doc/master/MixMaxEngine_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/ParamFunctor.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ParamFunctor.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Mon Nov 13 15:58:13 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for Functor classes.; 12// design is inspired by the Loki Functor; 13 ; 14#ifndef ROOT_Math_ParamFunctor; 15#define ROOT_Math_ParamFunctor; 16 ; 17// #ifndef ROOT_Math_IFunction; 18// #include ""Math/IFunction.h""; 19// #endif; 20 ; 21// #ifndef Root_Math_StaticCheck; 22// #include ""Math/StaticCheck.h""; 23// #endif; 24 ; 25//#include <memory>; 26 ; 27#include ""RtypesCore.h""; 28#include <functional>; 29#include <iostream>; 30 ; 31namespace ROOT {; 32 ; 33namespace Math {; 34 ; 35/**; 36 * \defgroup ParamFunctor_int N-D parametric functions; 37 * \brief Multi-dimensional parametric functions; 38 */; 39 ; 40/** class defining the signature for multi-dim parametric functions; 41 ; 42 @ingroup ParamFunctor_int; 43 */; 44template<class T>; 45class ParamFunctionBase {; 46 public:; 47 virtual ~ParamFunctionBase() {}; 48 virtual T operator() (const T * x, const double *p) = 0;; 49 virtual T operator() (T * x, double *p) = 0;; 50 virtual ParamFunctionBase * Clone() const = 0;; 51};; 52 ; 53 ; 54 ; 55/**; 56 ParamFunctor Handler class is responsible for wrapping any other functor and pointer to; 57 free C functions.; 58 It can be created from any function implementing the correct signature; 59 corresponding to the requested type; 60 ; 61 @ingroup ParamFunctor_int; 62 ; 63*/; 64 ; 65template<class ParentFunctor, class Func >; 66class ParamFunctorHandler : public ParentFunctor::Impl {; 67 ; 68 typedef typename ParentFunctor::EvalType EvalType;; 69 typedef typename Par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ParamFunctor_8h_source.html:102,Load,Loading,102,doc/master/ParamFunctor_8h_source.html,https://root.cern,https://root.cern/doc/master/ParamFunctor_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/ProbFuncMathCore.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ProbFuncMathCore.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta, A. Zsenei 06/2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#ifndef ROOT_Math_ProbFuncMathCore; 12#define ROOT_Math_ProbFuncMathCore; 13 ; 14 ; 15namespace ROOT {; 16namespace Math {; 17 ; 18 ; 19 /** @defgroup ProbFunc Cumulative Distribution Functions (CDF); 20 ; 21 @ingroup StatFunc; 22 ; 23 * Cumulative distribution functions of various distributions.; 24 * The functions with the extension <em>_cdf</em> calculate the; 25 * lower tail integral of the probability density function; 26 *; 27 * \f[ D(x) = \int_{-\infty}^{x} p(x') dx' \f]; 28 *; 29 * while those with the <em>_cdf_c</em> extension calculate the complement of; 30 * cumulative distribution function, called in statistics the survival; 31 * function.; 32 * It corresponds to the upper tail integral of the; 33 * probability density function; 34 *; 35 * \f[ D(x) = \int_{x}^{+\infty} p(x') dx' \f]; 36 *; 37 *; 38 * <strong>NOTE:</strong> In the old releases (< 5.14) the <em>_cdf</em> functions were called; 39 * <em>_quant</em> and the <em>_cdf_c</em> functions were called; 40 * <em>_prob</em>.; 41 * These names are currently kept for backward compatibility, but; 42 * their usage is deprecated.; 43 *; 44 * These functions are defined in the header file <em>Math/ProbFunc.h</em> or in the global one; 45 * including all statistical functions <em>Math/DistFunc.h</em>; 46 *; 47 */; 48 ; 49 ; 50 ; 51 /**; 52 ; 53 Complement of the cumulative distribution function of the beta distribution.; 54 Upper tail of the integral of the #beta_pdf; 55 ; 56 @ingroup ProbFunc; 57 ; 58 */; 59 ; 60",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ProbFuncMathCore_8h_source.html:106,Load,Loading,106,doc/master/ProbFuncMathCore_8h_source.html,https://root.cern,https://root.cern/doc/master/ProbFuncMathCore_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/Random.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Random.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta 8/2015; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2015 , ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for random class; 12//; 13//; 14// Created by: Lorenzo Moneta : Tue 4 Aug 2015; 15//; 16//; 17#ifndef ROOT_Math_Random; 18#define ROOT_Math_Random; 19 ; 20/**; 21@defgroup Random Interface classes for Random number generation; 22*/; 23 ; 24#include ""Math/RandomFunctions.h""; 25 ; 26#include <string>; 27#include <vector>; 28#include <cstdint>; 29 ; 30 ; 31namespace ROOT {; 32namespace Math {; 33 ; 34 ; 35//___________________________________________________________________________________; 36 /**; 37 Documentation for the Random class; 38 ; 39 @ingroup Random; 40 */; 41 ; 42 template < class Engine>; 43 class Random {; 44 ; 45 public:; 46 ; 47 typedef typename Engine::BaseType EngineBaseType;; 48 typedef RandomFunctions<Engine, EngineBaseType> RndmFunctions;; 49 ; 50 Random() :; 51 fEngine(),; 52 fFunctions(fEngine); 53 {}; 54 ; 55 explicit Random(unsigned int seed) :; 56 fEngine(),; 57 fFunctions(fEngine); 58 {; 59 fEngine.SetSeed(seed);; 60 }; 61 ; 62 double Rndm() {; 63 return fEngine();; 64 }; 65 ; 66 /**; 67 Generate an array of random numbers between ]0,1]; 68 0 is excluded and 1 is included; 69 Function to preserve ROOT Trandom compatibility; 70 */; 71 void RndmArray(int n, double * array) {; 72 fEngine.RandomArray(array, array+n);; 73 }; 74 ; 75 /**; 76 Return the type (name) of the used generator; 77 */; 78 std::string Type() const {; 79 return fEngine.Name();; 80 }; 81 ; 82 /**; 83 Return the size of the generator state; 84 */; 85 unsigned int EngineSize() const {; 86 return fEngine.Si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Random_8h_source.html:96,Load,Loading,96,doc/master/Random_8h_source.html,https://root.cern,https://root.cern/doc/master/Random_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/RanluxppEngine.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RanluxppEngine.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Jonas Hahnfeld 11/2020; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_Math_RanluxppEngine; 13#define ROOT_Math_RanluxppEngine; 14 ; 15#include ""Math/TRandomEngine.h""; 16 ; 17#include <cstdint>; 18#include <memory>; 19 ; 20namespace ROOT {; 21namespace Math {; 22 ; 23template <int w, int p, int u = 0>; 24class RanluxppEngineImpl;; 25 ; 26template <int p>; 27class RanluxppEngine final : public TRandomEngine {; 28 ; 29private:; 30 using ImplType = RanluxppEngineImpl<48, p>;; 31 std::unique_ptr<ImplType> fImpl;; 32 ; 33public:; 34 RanluxppEngine(uint64_t seed = 314159265);; 35 ~RanluxppEngine() override;; 36 ; 37 /// Generate a double-precision random number with 48 bits of randomness; 38 double Rndm() override;; 39 /// Generate a double-precision random number (non-virtual method); 40 double operator()();; 41 /// Generate a random integer value with 48 bits; 42 uint64_t IntRndm();; 43 ; 44 /// Initialize and seed the state of the generator; 45 void SetSeed(uint64_t seed);; 46 /// Skip `n` random numbers without generating them; 47 void Skip(uint64_t n);; 48 ; 49 /// Get name of the generator; 50 static const char *Name() { return ""RANLUX++""; }; 51};; 52 ; 53using RanluxppEngine24 = RanluxppEngine<24>;; 54using RanluxppEngine2048 = RanluxppEngine<2048>;; 55 ; 56extern template class RanluxppEngine<24>;; 57extern template class RanluxppEngine<2048>;; 58 ; 59 ; 60template <int p>; 61class Ranluxp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RanluxppEngine_8h_source.html:104,Load,Loading,104,doc/master/RanluxppEngine_8h_source.html,https://root.cern,https://root.cern/doc/master/RanluxppEngine_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/TDataPoint.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDataPoint.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: C. Gumpert 09/2011; 3/**********************************************************************; 4 * *; 5 * Copyright (c) 2011 , LCG ROOT MathLib Team *; 6 * *; 7 * *; 8 **********************************************************************/; 9//; 10// Header file for TDataPointclass; 11//; 12 ; 13#ifndef ROOT_Math_TDataPoint; 14#define ROOT_Math_TDataPoint; 15 ; 16//ROOT include(s); 17#include ""RtypesCore.h""; 18 ; 19 ; 20namespace ROOT; 21{; 22namespace Math; 23{; 24 ; 25 ; 26template<unsigned int K,typename _val_type = float>; 27class TDataPoint; 28{; 29public:; 30 typedef _val_type value_type;; 31 enum {; 32 kDimension = K //the dimensionality of this data point; 33 };; 34 static UInt_t Dimension() {return kDimension;}; 35 TDataPoint();; 36#ifndef __MAKECINT__; 37 template<typename _coord_typ>; 38 TDataPoint(const _coord_typ* pData,_val_type fWeight = 1);; 39#endif; 40 //virtual ~TDataPoint() {}; 41#ifndef __MAKECINT__; 42 template<typename _val>; 43 value_type Distance(const TDataPoint<K,_val>& rPoint) const;; 44#endif; 45 value_type GetCoordinate(unsigned int iAxis) const;; 46 value_type GetWeight() const {return m_fWeight;}; 47 Bool_t Less(TDataPoint& rPoint,unsigned int iAxis) const;; 48 void SetCoordinate(unsigned int iAxis,_val_type fValue);; 49 void SetWeight(float fWeight) {m_fWeight = fWeight;}; 50 ; 51private:; 52 value_type m_vCoordinates[K]; ///< coordinates; 53 value_type m_fWeight; ///< weight at this point; 54};; 55 ; 56// some typedef definitions; 57typedef TDataPoint<1,Float_t> TDataPoint1F;; 58typedef TDataPoint<2,Float_t> TDataPoint2F;; 59typedef TDataPoint<3,Float_t> TDataPoint3F;; 60typedef TDataPoint<1,Double_t> TDataPoint1D;; 61typedef TDataPoint<2,Double_t> TDataPoint2D;; 62typedef TDataPoint<3,Double_t> TDataPoint3D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDataPoint_8h_source.html:100,Load,Loading,100,doc/master/TDataPoint_8h_source.html,https://root.cern,https://root.cern/doc/master/TDataPoint_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/Types.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Types.h. Go to the documentation of this file. 1#ifndef ROOT_Math_VecTypes; 2#define ROOT_Math_VecTypes; 3 ; 4#include ""RConfigure.h""; 5 ; 6#ifdef R__HAS_VECCORE; 7 ; 8#if defined(R__HAS_VC); 9 ; 10#pragma GCC diagnostic push; 11#pragma GCC diagnostic ignored ""-Wall""; 12#pragma GCC diagnostic ignored ""-Wunused-parameter""; 13#pragma GCC diagnostic ignored ""-Wdeprecated-declarations""; 14#if (__cplusplus >= 202002L) // only for C++20; 15#pragma GCC diagnostic ignored ""-Wdeprecated-enum-enum-conversion""; 16#endif; 17 ; 18#ifdef __clang__; 19#pragma clang diagnostic ignored ""-Wconditional-uninitialized""; 20#pragma clang diagnostic ignored ""-Wdeprecated-copy""; 21#endif; 22 ; 23#include <Vc/Vc>; 24#pragma GCC diagnostic pop; 25#endif; 26 ; 27#include <VecCore/VecCore>; 28 ; 29namespace ROOT {; 30 ; 31namespace Internal {; 32 using ScalarBackend = vecCore::backend::Scalar;; 33#ifdef VECCORE_ENABLE_VC; 34 using VectorBackend = vecCore::backend::VcVector;; 35#else; 36 using VectorBackend = vecCore::backend::Scalar;; 37#endif; 38}; 39 using Float_v = typename Internal::VectorBackend::Float_v;; 40 using Double_v = typename Internal::VectorBackend::Double_v;; 41 using Int_v = typename Internal::VectorBackend::Int_v;; 42 using Int32_v = typename Internal::VectorBackend::Int32_v;; 43 using UInt_v = typename Internal::VectorBackend::UInt_v;; 44 using UInt32_v = typename Internal::VectorBackend::UInt32_v;; 45}; 46 ; 47#else // R__HAS_VECCORE; 48 ; 49// We do not have explicit vectorisation support enabled. Fall back to regular ROOT types.; 50 ; 51#include ""RtypesCore.h""; 52 ; 53namespace ROOT {; 54 using Float_v = Float_t;; 55 using Double_v = Double_t;; 56 using Int_v = Int_t;; 57 using Int32_v = Int_t; // FIXME: Should we introduce Int32_t in RtypesCore.h?; 58 using UInt_v = UInt_t;; 59 using UInt32_v = UInt_t; // FIXME: Should we introduce UInt32_t i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/math_2mathcore_2inc_2Math_2Types_8h_source.html:95,Load,Loading,95,doc/master/math_2mathcore_2inc_2Math_2Types_8h_source.html,https://root.cern,https://root.cern/doc/master/math_2mathcore_2inc_2Math_2Types_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/Types.h Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Types.h. Go to the documentation of this file. 1#ifndef ROOT_Math_VecTypes; 2#define ROOT_Math_VecTypes; 3 ; 4#include ""RConfigure.h""; 5 ; 6#ifdef R__HAS_VECCORE; 7 ; 8#if defined(R__HAS_VC); 9 ; 10#pragma GCC diagnostic push; 11#pragma GCC diagnostic ignored ""-Wall""; 12#pragma GCC diagnostic ignored ""-Wunused-parameter""; 13#pragma GCC diagnostic ignored ""-Wdeprecated-declarations""; 14#if (__cplusplus >= 202002L) // only for C++20; 15#pragma GCC diagnostic ignored ""-Wdeprecated-enum-enum-conversion""; 16#endif; 17 ; 18#ifdef __clang__; 19#pragma clang diagnostic ignored ""-Wconditional-uninitialized""; 20#pragma clang diagnostic ignored ""-Wdeprecated-copy""; 21#endif; 22 ; 23#include <Vc/Vc>; 24#pragma GCC diagnostic pop; 25#endif; 26 ; 27#include <VecCore/VecCore>; 28 ; 29namespace ROOT {; 30 ; 31namespace Internal {; 32 using ScalarBackend = vecCore::backend::Scalar;; 33#ifdef VECCORE_ENABLE_VC; 34 using VectorBackend = vecCore::backend::VcVector;; 35#else; 36 using VectorBackend = vecCore::backend::Scalar;; 37#endif; 38}; 39 using Float_v = typename Internal::VectorBackend::Float_v;; 40 using Double_v = typename Internal::VectorBackend::Double_v;; 41 using Int_v = typename Internal::VectorBackend::Int_v;; 42 using Int32_v = typename Internal::VectorBackend::Int32_v;; 43 using UInt_v = typename Internal::VectorBackend::UInt_v;; 44 using UInt32_v = typename Internal::VectorBackend::UInt32_v;; 45}; 46 ; 47#else // R__HAS_VECCORE; 48 ; 49// We do not have explicit vectorisation support enabled. Fall back to regular ROOT types.; 50 ; 51#include ""RtypesCore.h""; 52 ; 53namespace ROOT {; 54 using Float_v = Float_t;; 55 using Double_v = Double_t;; 56 using Int_v = Int_t;; 57 using Int32_v = Int_t; // FIXME: Should we introduce Int32_t in RtypesCore.h?; 58 using UInt_v = UInt_t;; 59 using UInt32_v = UInt_t; // FIXME: Should we introduce UInt32_t in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/math_2mathcore_2inc_2Math_2Types_8h_source.html:94,Load,Loading,94,doc/v632/math_2mathcore_2inc_2Math_2Types_8h_source.html,https://root.cern,https://root.cern/doc/v632/math_2mathcore_2inc_2Math_2Types_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/Util.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Util.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Tue Nov 14 15:44:38 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Utility functions for all ROOT Math classes; 12 ; 13#ifndef ROOT_Math_Util; 14#define ROOT_Math_Util; 15 ; 16#include <string>; 17#include <sstream>; 18 ; 19#include <cmath>; 20#include <limits>; 21#include <numeric>; 22 ; 23 ; 24// This can be protected against by defining ROOT_Math_VecTypes; 25// This is only used for the R__HAS_VECCORE define; 26// and a single VecCore function in EvalLog; 27#ifndef ROOT_Math_VecTypes; 28#include ""Types.h""; 29#endif; 30 ; 31 ; 32// for defining unused variables in the interfaces; 33// and have still them in the documentation; 34#define MATH_UNUSED(var) (void)var; 35 ; 36 ; 37namespace ROOT {; 38 ; 39 namespace Math {; 40 ; 41 /**; 42 namespace defining Utility functions needed by mathcore; 43 */; 44 namespace Util {; 45 ; 46 /**; 47 Utility function for conversion to strings; 48 */; 49 template <class T>; 50 std::string ToString(const T &val); 51 {; 52 std::ostringstream buf;; 53 buf << val;; 54 ; 55 std::string ret = buf.str();; 56 return ret;; 57 }; 58 ; 59 /// safe evaluation of log(x) with a protections against negative or zero argument to the log; 60 /// smooth linear extrapolation below function values smaller than epsilon; 61 /// (better than a simple cut-off); 62 ; 63 template<class T>; 64 inline T EvalLog(T x) {; 65 static const T epsilon = T(2.0 * std::numeric_limits<double>::min());; 66#ifdef R__HAS_VECCORE; 67 T logval = vecCore::Blend<T>(x <= epsilon, x / epsilon + std::log(epsilon) - T(1.0), std::log(x));; 68#else; 69 T logval = x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Util_8h_source.html:94,Load,Loading,94,doc/master/Util_8h_source.html,https://root.cern,https://root.cern/doc/master/Util_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/WrappedFunction.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. WrappedFunction.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 CERN *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 * *; 12 **********************************************************************/; 13 ; 14#ifndef ROOT_Math_WrappedFunction; 15#define ROOT_Math_WrappedFunction; 16 ; 17#include ""IFunction.h""; 18 ; 19 ; 20namespace ROOT {; 21namespace Math {; 22 ; 23 ; 24 ; 25 ; 26struct NullTypeFunc1D {};; 27 ; 28typedef double(*FreeFunctionPtr)(double);; 29 ; 30typedef double(*FreeMultiFunctionPtr)(const double*);; 31 ; 32/**; 33 Template class to wrap any C++ callable object which takes one argument; 34 i.e. implementing operator() (double x) in a One-dimensional function interface.; 35 It provides a ROOT::Math::IGenFunction-like signature; 36 ; 37 Note: If you want to wrap just the reference (to avoid copying) you need to use; 38 Func& or const Func & as template parameter. The former should be used when the; 39 operator() is not a const method of Func; 40 ; 41 @ingroup GenFunc; 42 ; 43 */; 44template< typename Func = FreeFunctionPtr >; 45class WrappedFunction : public IGenFunction {; 46 ; 47 ; 48 public:; 49 ; 50 /**; 51 construct from the pointer to the object and the member function; 52 */; 53 WrappedFunction( Func f ) :; 54 fFunc( f ); 55 { /* no op */ }; 56 ; 57 // use default copy constructor and assignment operator; 58 ; 59 /// clone (required by the interface); 60 WrappedFunction * Clone() const override {; 61 return new WrappedFunction(fFunc);; 62 }; 63 ; 64 // virtual ~WrappedFunction() { /**/ }; 65 ; 66private:; 67 ; 68 double DoEval (d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedFunction_8h_source.html:105,Load,Loading,105,doc/master/WrappedFunction_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedFunction_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/Math/WrappedParamFunction.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. WrappedParamFunction.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Nov 23 10:38:32 2006; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2006 CERN *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 * *; 12 **********************************************************************/; 13 ; 14// Header file for class WrappedParamFunction; 15 ; 16#ifndef ROOT_Math_WrappedParamFunction; 17#define ROOT_Math_WrappedParamFunction; 18 ; 19#include ""Math/IParamFunction.h""; 20 ; 21//#include <iostream>; 22//#include <iterator>; 23 ; 24#include <vector>; 25 ; 26 ; 27namespace ROOT {; 28 ; 29 namespace Math {; 30 ; 31 ; 32typedef double( * FreeParamMultiFunctionPtr ) (const double *, const double * );; 33 ; 34/**; 35 WrappedParamFunction class to wrap any multi-dimensional function object; 36 implementing the operator()(const double * x, const double * p); 37 in an interface-like IParamFunction with a vector storing and caching internally the; 38 parameter values; 39 ; 40 @ingroup ParamFunc; 41 ; 42*/; 43template< typename FuncPtr = FreeParamMultiFunctionPtr >; 44class WrappedParamFunction : public IParamMultiFunction {; 45 ; 46public:; 47 ; 48 /**; 49 Constructor a wrapped function from a pointer to a callable object, the function dimension and number of parameters; 50 which are set to zero by default; 51 */; 52 WrappedParamFunction (FuncPtr func, unsigned int dim = 1, unsigned int npar = 0, double * par = nullptr) :; 53 fFunc(func),; 54 fDim(dim),; 55 fParams(std::vector<double>(npar) ); 56 {; 57 if (par) std::copy(par, par+npar, fParams.begin());; 58 }; 59 ; 60// /**; 61// Constructor a wrapped function from a non-const pointe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedParamFunction_8h_source.html:110,Load,Loading,110,doc/master/WrappedParamFunction_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedParamFunction_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TMath.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; TMath.h File Reference. #include ""TMathBase.h""; #include ""TError.h""; #include <algorithm>; #include <limits>; #include <cmath>; #include <cfloat>. Include dependency graph for TMath.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TMath::Limits< T >;  . Namespaces; namespace  TMath;  TMath. ;  . Functions; Double_t TMath::ACos (Double_t);  Returns the principal value of the arc cosine of x, expressed in radians. ;  ; Double_t TMath::ACosH (Double_t);  Returns the nonnegative area hyperbolic cosine of x. ;  ; Bool_t TMath::AreEqualAbs (Double_t af, Double_t bf, Double_t epsilon);  Comparing floating points. ;  ; Bool_t TMath::AreEqualRel (Double_t af, Double_t bf, Double_t relPrec);  Comparing floating points. ;  ; Double_t TMath::ASin (Double_t);  Returns the principal value of the arc sine of x, expressed in radians. ;  ; Double_t TMath::ASinH (Double_t);  Returns the area hyperbolic sine of x. ;  ; Double_t TMath::ATan (Double_t);  Returns the principal value of the arc tangent of x, expressed in radians. ;  ; Double_t TMath::ATan2 (Double_t y, Double_t x);  Returns the principal value of the arc tangent of y/x, expressed in radians. ;  ; Double_t TMath::ATanH (Double_t);  Returns the area hyperbolic tangent of x. ;  ; Double_t TMath::BesselI (Int_t n, Double_t x);  Computes the Integer Order Modified Bessel function I_n(x) for n=0,1,2,... and any real x. ;  ; Double_t TMath::BesselI0 (Double_t x);  Integer order modified Bessel function K_n(x) ;  ; Double_t TMath::BesselI1 (Double_t x);  Modified Bessel function K_0(x) ;  ; Double_t TMath::BesselJ0 (Double_t x);  Modified Bessel function K_1(x) ;  ; Double_t TMath::BesselJ1 (Double_t x);  Bessel function J0(x) for any real x. ;  ; Double_t TMath::BesselK (Int_t n, Double_t x);  Integer order m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8h.html:93,Load,Loading,93,doc/master/TMath_8h.html,https://root.cern,https://root.cern/doc/master/TMath_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TMath.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMath.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: Rene Brun, Anna Kreshuk, Eddy Offermann, Fons Rademakers 29/07/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TMath; 13#define ROOT_TMath; 14 ; 15#include ""TMathBase.h""; 16 ; 17#include ""TError.h""; 18#include <algorithm>; 19#include <limits>; 20#include <cmath>; 21 ; 22////////////////////////////////////////////////////////////////////////////////; 23///; 24/// TMath; 25///; 26/// Encapsulate most frequently used Math functions.; 27/// NB. The basic functions Min, Max, Abs and Sign are defined; 28/// in TMathBase.; 29 ; 30namespace TMath {; 31 ; 32////////////////////////////////////////////////////////////////////////////////; 33// Fundamental constants; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/// \f$ \pi\f$; 37constexpr Double_t Pi(); 38{; 39 return 3.14159265358979323846;; 40}; 41 ; 42////////////////////////////////////////////////////////////////////////////////; 43/// \f$ 2\pi\f$; 44constexpr Double_t TwoPi(); 45{; 46 return 2.0 * Pi();; 47}; 48 ; 49////////////////////////////////////////////////////////////////////////////////; 50/// \f$ \frac{\pi}{2} \f$; 51constexpr Double_t PiOver2(); 52{; 53 return Pi() / 2.0;; 54}; 55 ; 56////////////////////////////////////////////////////////////////////////////////; 57/// \f$ \frac{\pi}{4} \f$; 58constexpr Double_t PiOver4(); 59{; 60 return Pi() / 4.0;; 61}; 62 ; 63////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8h_source.html:90,Load,Loading,90,doc/master/TMath_8h_source.html,https://root.cern,https://root.cern/doc/master/TMath_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TRandom.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TRandom.h File Reference. #include ""Math/TRandomEngine.h""; #include ""TNamed.h"". Include dependency graph for TRandom.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TRandom;  This is the base class for the ROOT Random number generators. More...;  . Variables; R__EXTERN TRandom * gRandom;  . Variable Documentation. ◆ gRandom. R__EXTERN TRandom* gRandom. Definition at line 62 of file TRandom.h. mathmathcoreincTRandom.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8h.html:95,Load,Loading,95,doc/master/TRandom_8h.html,https://root.cern,https://root.cern/doc/master/TRandom_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TRandom.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Rene Brun 15/12/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRandom; 13#define ROOT_TRandom; 14 ; 15#include ""Math/TRandomEngine.h""; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TRandom //; 20// //; 21// Simple prototype random number generator class (periodicity = 10**9) //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TNamed.h""; 26 ; 27class TRandom : public TNamed, public ROOT::Math::TRandomEngine {; 28 ; 29protected:; 30 UInt_t fSeed; //Random number generator seed; 31 ; 32public:; 33 TRandom(UInt_t seed=65539);; 34 ~TRandom() override;; 35 virtual Int_t Binomial(Int_t ntot, Double_t prob);; 36 virtual Double_t BreitWigner(Double_t mean=0, Double_t gamma=1);; 37 virtual void Circle(Double_t &x, Double_t &y, Double_t r);; 38 virtual Double_t Exp(Double_t tau);; 39 virtual Double_t Gaus(Double_t mean=0, Double_t sigma=1);; 40 virtual UInt_t GetSeed() const;; 41 virtual UInt_t Integer(UInt_t imax);; 42 virtual Double_t Landau(Double_t mean=0, Double_t sigma=1);; 43 virtual ULong64_t Poisson(Double_t mean);; 44 virtual Double_t PoissonD(Double_t mean);; 45 virtual void Rannor(Float_t &a, Float_t &b);; 46 virtual void Rannor(Double_t &a, Double_t &b);; 47 virtual void ReadRandom(const char *filename);; 48 virtual void SetSeed(ULong_t seed=0);; 49 Double_t Rndm() override;; 50 // keep for backwar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8h_source.html:92,Load,Loading,92,doc/master/TRandom_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TRandom1.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom1.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Rene Brun 04/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRandom1; 13#define ROOT_TRandom1; 14 ; 15 ; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TRandom1 //; 20// //; 21// Ranlux random number generator class (periodicity > 10**14) //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TRandom.h""; 26 ; 27class TRandom1 : public TRandom {; 28 ; 29protected:; 30 Int_t fNskip;; 31 Int_t fLuxury;; 32 Int_t fIlag;; 33 Int_t fJlag;; 34 Int_t fCount24;; 35 Float_t fFloatSeedTable[24];; 36 Float_t fCarry;; 37 const Int_t fIntModulus;; 38 static Int_t fgNumEngines;; 39 static Int_t fgMaxIndex;; 40 const UInt_t *fTheSeeds; //! Temporary array of seed values (transient); 41 const Double_t fMantissaBit24;; 42 const Double_t fMantissaBit12;; 43 ; 44public:; 45 TRandom1();; 46 TRandom1(UInt_t seed, Int_t lux = 3);; 47 TRandom1(Int_t rowIndex, Int_t colIndex, Int_t lux);; 48 ~TRandom1() override;; 49 /////////////////////////////////////////////////////////////////////////////; 50 /// Returns current luxury value.; 51 virtual Int_t GetLuxury() const {return fLuxury;}; 52 /////////////////////////////////////////////////////////////////////////////; 53 /// Returns the current seed (first element of the seed table); 54 /// \warning This is not the initial seed!; 55 UInt_t GetSeed() const override { return UInt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom1_8h_source.html:93,Load,Loading,93,doc/master/TRandom1_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom1_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TRandom2.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom2.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Rene Brun 04/03/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRandom2; 13#define ROOT_TRandom2; 14 ; 15 ; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TRandom2 //; 20// //; 21// random number generator class (periodicity > 10**26) //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TRandom.h""; 26 ; 27class TRandom2 : public TRandom {; 28 ; 29protected:; 30 UInt_t fSeed1; //Random number generator seed 1; 31 UInt_t fSeed2; //Random number generator seed 2; 32 ; 33public:; 34 TRandom2(UInt_t seed=1);; 35 ~TRandom2() override;; 36 Double_t Rndm( ) override;; 37 using TRandom::Rndm;; 38 void RndmArray(Int_t n, Float_t *array) override;; 39 void RndmArray(Int_t n, Double_t *array) override;; 40 void SetSeed(ULong_t seed=0) override;; 41 UInt_t GetSeed() const override;; 42 ; 43 ClassDefOverride(TRandom2, 1) // Random number generator with periodicity of 10**26; 44};; 45 ; 46R__EXTERN TRandom *gRandom;; 47 ; 48#endif; R__EXTERN#define R__EXTERNDefinition DllImport.h:26; ULong_tunsigned long ULong_tDefinition RtypesCore.h:55; Float_tfloat Float_tDefinition RtypesCore.h:57; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; gRandomR__EXTERN TRandom * gRandomDefinition TRandom2.h:46; TRandom.h; TRandom2Random number generator class based on the maximally quidistributed combined Tau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom2_8h_source.html:93,Load,Loading,93,doc/master/TRandom2_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom2_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TRandom3.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TRandom3.h File Reference. #include ""TRandom.h"". Include dependency graph for TRandom3.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TRandom3;  Random number generator class based on M. More...;  . Variables; R__EXTERN TRandom * gRandom;  . Variable Documentation. ◆ gRandom. R__EXTERN TRandom* gRandom. Definition at line 50 of file TRandom3.h. mathmathcoreincTRandom3.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom3_8h.html:96,Load,Loading,96,doc/master/TRandom3_8h.html,https://root.cern,https://root.cern/doc/master/TRandom3_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TRandom3.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom3.h. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Peter Malzacher 31/08/99; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TRandom3; 13#define ROOT_TRandom3; 14 ; 15 ; 16 ; 17//////////////////////////////////////////////////////////////////////////; 18// //; 19// TRandom3 //; 20// //; 21// random number generator class: Mersenne Twister //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TRandom.h""; 26 ; 27class TRandom3 : public TRandom {; 28 ; 29private:; 30 UInt_t fMt[624];; 31 Int_t fCount624;; 32 ; 33public:; 34 TRandom3(UInt_t seed=4357);; 35 ~TRandom3() override;; 36 /// Return one element of the generator state used to generate the random numbers.; 37 /// Note that it is not the seed of the generator that was used in the SetSeed function and ; 38 /// the full state (624 numbers) is required to define the generator and have a reproducible output.; 39 UInt_t GetSeed() const override { return fMt[fCount624 % 624];}; 40 using TRandom::Rndm;; 41 Double_t Rndm( ) override;; 42 void RndmArray(Int_t n, Float_t *array) override;; 43 void RndmArray(Int_t n, Double_t *array) override;; 44 void SetSeed(ULong_t seed=0) override;; 45 virtual const UInt_t *GetState() const { return fMt; }; 46 ; 47 ClassDefOverride(TRandom3,2) //Random number generator: Mersenne Twister; 48};; 49 ; 50R__EXTERN TRandom *gRandom;; 51 ; 52#endif; R__EXTERN#define R__EXTERNDefinition DllImport.h:26; Int_tint Int_tDefinition Rtype",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom3_8h_source.html:93,Load,Loading,93,doc/master/TRandom3_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom3_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/inc/TRandomGen.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs ; TRandomGen.h File Reference. #include ""TRandom.h""; #include <string>; #include ""Math/StdEngine.h""; #include ""Math/MixMaxEngine.h""; #include ""Math/RanluxppEngine.h"". Include dependency graph for TRandomGen.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TRandomGen< Engine >;  . Typedefs; typedef TRandomGen< ROOT::Math::MixMaxEngine< 240, 0 > > TRandomMixMax;  MIXMAX generator based on a state of N=240. ;  ; typedef TRandomGen< ROOT::Math::MixMaxEngine< 17, 0 > > TRandomMixMax17;  MIXMAX generator based on a state of N=17. ;  ; typedef TRandomGen< ROOT::Math::MixMaxEngine< 256, 2 > > TRandomMixMax256;  MIXMAX generator based on a state of N=256, based on the generator described in this paper: ;  ; typedef TRandomGen< ROOT::Math::StdEngine< std::mt19937_64 > > TRandomMT64;  Generator based on a the Mersenne-Twister generator with 64 bits, using the implementation provided by the standard library, std::mt19937_64 (see http://www.cplusplus.com/reference/random/mt19937_64/ ) ;  ; typedef TRandomGen< ROOT::Math::StdEngine< std::ranlux48 > > TRandomRanlux48;  Generator based on a the RanLux generator with 48 bits, using the implementation provided by the standard library, std::ranlux48 (see http://www.cplusplus.com/reference/random/ranlux48/ ) ;  ; typedef TRandomGen< ROOT::Math::RanluxppEngine2048 > TRandomRanluxpp;  . Typedef Documentation. ◆ TRandomRanluxpp. typedef TRandomGen<ROOT::Math::RanluxppEngine2048> TRandomRanluxpp. Definition at line 132 of file TRandomGen.h. mathmathcoreincTRandomGen.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandomGen_8h.html:98,Load,Loading,98,doc/master/TRandomGen_8h.html,https://root.cern,https://root.cern/doc/master/TRandomGen_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/BinData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BinData.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: M. Borinsky; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class BinData; 12 ; 13#include ""Fit/BinData.h""; 14#include ""Math/Error.h""; 15 ; 16#include <cassert>; 17#include <cmath>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Fit; 22 {; 23 ; 24 BinData::BinData(unsigned int maxpoints, unsigned int dim,; 25 ErrorType err ) :; 26 FitData( maxpoints, dim ),; 27 fErrorType( err ),; 28 fDataPtr( nullptr ),; 29 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 30 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 31 {; 32 InitializeErrors();; 33 InitDataVector( );; 34 }; 35 ; 36 ; 37 /**; 38 constructor from option and default range; 39 */; 40 BinData::BinData (const DataOptions & opt, unsigned int maxpoints,; 41 unsigned int dim, ErrorType err ) :; 42 FitData( opt, maxpoints, dim ),; 43 fErrorType( err ),; 44 fDataPtr( nullptr ),; 45 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 46 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 47 {; 48 InitializeErrors();; 49 InitDataVector( );; 50 }; 51 ; 52 /**; 53 constructor from options and range; 54 efault is 1D and value errors; 55 */; 56 BinData::BinData (const DataOptions & opt, const DataRange & range,; 57 unsigned int maxpoints, unsigned int dim, ErrorType err ) :; 58 FitData( opt, range, maxpoints, dim ),; 59 fErrorType( err ),; 60 fDataPtr( nullptr ),; 61 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 62 fpTmpCoordErrorVector( nullptr ), fpTmpBinEd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:94,Load,Loading,94,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/BrentMinimizer1D.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BrentMinimizer1D.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: David Gonzalez Maline 2/2008; 3 /**********************************************************************; 4 * *; 5 * Copyright (c) 2006 CERN *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 * *; 11 **********************************************************************/; 12 ; 13// Header file for class BrentMinimizer1D; 14//; 15// Created by: Maline at Mon Feb 4 09:32:36 2008; 16//; 17//; 18 ; 19#include ""Math/BrentMinimizer1D.h""; 20#include ""Math/BrentMethods.h""; 21#include ""Math/IFunction.h""; 22#include ""Math/IFunctionfwd.h""; 23 ; 24#include ""Math/Error.h""; 25 ; 26namespace ROOT {; 27namespace Math {; 28 ; 29static int gDefaultNpx = 100; // default nunmber of points used in the grid to bracked the minimum; 30static int gDefaultNSearch = 10; // number of time the iteration (bracketing -Brent ) is repeted; 31 ; 32 ; 33 BrentMinimizer1D::BrentMinimizer1D():; 34 fFunction(nullptr),; 35 fLogScan(false), fNIter(0),; 36 fNpx(0), fStatus(-1),; 37 fXMin(0), fXMax(0), fXMinimum(0); 38{; 39// Default Constructor.; 40 fNpx = gDefaultNpx;; 41}; 42 ; 43void BrentMinimizer1D::SetDefaultNpx(int n) { gDefaultNpx = n; }; 44 ; 45void BrentMinimizer1D::SetDefaultNSearch(int n) { gDefaultNSearch = n; }; 46 ; 47 ; 48void BrentMinimizer1D::SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); 49{; 50// Sets function to be minimized.; 51 ; 52 fFunction = &f;; 53 fStatus = -1; // reset the status; 54 ; 55 if (xlow >= xup); 56 {; 57 double tmp = xlow;; 58 xlow = xup;; 59 xup = tmp;; 60 }; 61 fXMin = xlow;; 62 fXMax = xup;; 63}; 64 ; 65 ; 66 ; 67double BrentMinimizer1D::FValMinimum() const; 68{ return (*fFunction)(fXMinimum); }; 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BrentMinimizer1D_8cxx_source.html:103,Load,Loading,103,doc/master/BrentMinimizer1D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BrentMinimizer1D_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/BrentRootFinder.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BrentRootFinder.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: David Gonzalez Maline 01/2008; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2006 CERN *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 * *; 12 **********************************************************************/; 13 ; 14#include ""Math/BrentRootFinder.h""; 15#include ""Math/BrentMethods.h""; 16#include ""Math/IFunctionfwd.h""; 17#include <cmath>; 18 ; 19#include ""Math/Error.h""; 20 ; 21namespace ROOT {; 22namespace Math {; 23 ; 24 ; 25static int gDefaultNpx = 100; // default nunmber of points used in the grid to bracked the root; 26static int gDefaultNSearch = 10; // number of time the iteration (bracketing -Brent ) is repeted; 27 ; 28 BrentRootFinder::BrentRootFinder() : fFunction(nullptr),; 29 fLogScan(false), fNIter(0),; 30 fNpx(0), fStatus(-1),; 31 fXMin(0), fXMax(0), fRoot(0); 32{; 33 // default constructor (number of points used to bracket value is set to 100); 34 fNpx = gDefaultNpx;; 35}; 36 ; 37void BrentRootFinder::SetDefaultNpx(int n) { gDefaultNpx = n; }; 38 ; 39void BrentRootFinder::SetDefaultNSearch(int n) { gDefaultNSearch = n; }; 40 ; 41 ; 42bool BrentRootFinder::SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); 43{; 44// Set function to solve and the interval in where to look for the root.; 45 ; 46 fFunction = &f;; 47 // invalid previous status; 48 fStatus = -1;; 49 ; 50 if (xlow >= xup); 51 {; 52 double tmp = xlow;; 53 xlow = xup;; 54 xup = tmp;; 55 }; 56 fXMin = xlow;; 57 fXMax = xup;; 58 ; 59 return true;; 60}; 61 ; 62const char* BrentRootFinder::Name() const; 63{ return ""BrentRootFinder""; }; 64 ; 65 ; 66bool BrentRootFinder::S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BrentRootFinder_8cxx_source.html:102,Load,Loading,102,doc/master/BrentRootFinder_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BrentRootFinder_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/DataRange.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataRange.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:02 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class DataRange; 12 ; 13#include ""Fit/DataRange.h""; 14#include ""Math/Error.h""; 15 ; 16#include <algorithm>; 17#include <limits>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Fit {; 22 ; 23DataRange::DataRange(double xmin, double xmax) :; 24 fRanges( std::vector<RangeSet> (1) ); 25{; 26 // construct a range for [xmin, xmax]; 27 if (xmin < xmax) {; 28 RangeSet rx(1);; 29 rx[0] = std::make_pair(xmin, xmax);; 30 fRanges[0] = rx;; 31 }; 32}; 33 ; 34 ; 35DataRange::DataRange(double xmin, double xmax, double ymin, double ymax) :; 36 fRanges( std::vector<RangeSet> (2) ); 37{; 38 // construct a range for [xmin, xmax] , [ymin, ymax]; 39 if (xmin < xmax) {; 40 RangeSet rx(1);; 41 rx[0] = std::make_pair(xmin, xmax);; 42 fRanges[0] = rx;; 43 }; 44 ; 45 if (ymin < ymax) {; 46 RangeSet ry(1);; 47 ry[0] = std::make_pair(ymin, ymax);; 48 fRanges[1] = ry;; 49 }; 50}; 51 ; 52DataRange::DataRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax) :; 53 fRanges( std::vector<RangeSet> (3) ); 54{; 55 // construct a range for [xmin, xmax] , [ymin, ymax] , [zmin, zmax]; 56 if (xmin < xmax) {; 57 RangeSet rx(1);; 58 rx[0] = std::make_pair(xmin, xmax);; 59 fRanges[0] = rx;; 60 }; 61 if (ymin < ymax) {; 62 RangeSet ry(1);; 63 ry[0] = std::make_pair(ymin, ymax);; 64 fRanges[1] = ry;; 65 }; 66 if (zmin < zmax) {; 67 RangeSet rz(1);; 68 rz[0] = std::make_pair(zmin, zmax);; 69 fRanges[2] = rz;; 70 }; 71}; 72 ; 73bool lessRange( const std::pair<double,doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataRange_8cxx_source.html:96,Load,Loading,96,doc/master/DataRange_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataRange_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/FitConfig.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FitConfig.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Sep 21 16:21:29 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class FitConfig; 12 ; 13#include ""Fit/FitConfig.h""; 14 ; 15#include ""Fit/FitResult.h""; 16 ; 17#include ""Math/IParamFunction.h""; 18#include ""Math/Util.h""; 19 ; 20#include ""Math/Minimizer.h""; 21#include ""Math/Factory.h""; 22 ; 23#include <cmath>; 24 ; 25#include <string>; 26#include <sstream>; 27 ; 28#include ""Math/Error.h""; 29 ; 30//#define DEBUG; 31#ifdef DEBUG; 32#endif; 33 ; 34namespace ROOT {; 35 ; 36namespace Fit {; 37 ; 38 ; 39 ; 40FitConfig::FitConfig(unsigned int npar) :; 41 fNormErrors(false),; 42 fParabErrors(false), // ensure that in any case correct parabolic errors are estimated; 43 fMinosErrors(false), // do full Minos error analysis for all parameters; 44 fUpdateAfterFit(true), // update after fit; 45 fWeightCorr(false),; 46 fSettings(std::vector<ParameterSettings>(npar) ); 47{; 48 // constructor implementation; 49}; 50 ; 51 ; 52FitConfig::~FitConfig(); 53{; 54 // destructor implementation. No Operations; 55}; 56 ; 57FitConfig::FitConfig(const FitConfig &rhs) {; 58 // Implementation of copy constructor; 59 (*this) = rhs;; 60}; 61 ; 62FitConfig & FitConfig::operator = (const FitConfig &rhs) {; 63 // Implementation of assignment operator.; 64 if (this == &rhs) return *this; // time saving self-test; 65 ; 66 fNormErrors = rhs.fNormErrors;; 67 fParabErrors = rhs.fParabErrors;; 68 fMinosErrors = rhs.fMinosErrors;; 69 fUpdateAfterFit = rhs.fUpdateAfterFit;; 70 fWeightCorr = rhs.fWeightCorr;; 71 ; 72 fSettings = rhs.fSettings;; 73 fMinosParam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8cxx_source.html:96,Load,Loading,96,doc/master/FitConfig_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/FitResult.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FitResult.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:05:34 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class FitResult; 12 ; 13#include ""Fit/FitResult.h""; 14 ; 15#include ""Fit/FitConfig.h""; 16 ; 17#include ""Fit/BinData.h""; 18 ; 19//#include ""Fit/Chi2FCN.h""; 20 ; 21#include ""Math/Minimizer.h""; 22 ; 23#include ""Math/IParamFunction.h""; 24#include ""Math/OneDimFunctionAdapter.h""; 25 ; 26#include ""Math/ProbFuncMathCore.h""; 27#include ""Math/QuantFuncMathCore.h""; 28 ; 29#include ""TMath.h""; 30#include ""Math/RichardsonDerivator.h""; 31#include ""Math/Error.h""; 32 ; 33#include <cassert>; 34#include <cmath>; 35#include <iostream>; 36#include <iomanip>; 37 ; 38namespace ROOT {; 39 ; 40 namespace Fit {; 41 ; 42 ; 43const int gInitialResultStatus = -99; // use this special convention to flag it when printing result; 44 ; 45FitResult::FitResult() :; 46 fValid(false), fNormalized(false), fNFree(0), fNdf(0), fNCalls(0),; 47 fStatus(-1), fCovStatus(0), fVal(0), fEdm(-1), fChi2(-1); 48{; 49 // Default constructor implementation.; 50}; 51 ; 52FitResult::FitResult(const FitConfig & fconfig) :; 53 fValid(false),; 54 fNormalized(false),; 55 fNFree(0),; 56 fNdf(0),; 57 fNCalls(0),; 58 fStatus(gInitialResultStatus),; 59 fCovStatus(0),; 60 fVal(0),; 61 fEdm(-1),; 62 fChi2(-1),; 63 fFitFunc(nullptr),; 64 fParams(std::vector<double>( fconfig.NPar() ) ),; 65 fErrors(std::vector<double>( fconfig.NPar() ) ),; 66 fParNames(std::vector<std::string> ( fconfig.NPar() ) ); 67{; 68 // create a Fit result from a fit config (i.e. with initial parameter values; 69 // and errors equal to step",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8cxx_source.html:96,Load,Loading,96,doc/master/FitResult_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/FitUtil.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; FitUtil.cxx File Reference. #include ""Fit/FitUtil.h""; #include ""Fit/BinData.h""; #include ""Fit/UnBinData.h""; #include ""Math/IFunctionfwd.h""; #include ""Math/IParamFunction.h""; #include ""Math/Integrator.h""; #include ""Math/IntegratorMultiDim.h""; #include ""Math/WrappedFunction.h""; #include ""Math/OneDimFunctionAdapter.h""; #include ""Math/RichardsonDerivator.h""; #include ""Math/Error.h""; #include ""Math/Util.h""; #include <limits>; #include <cmath>; #include <cassert>; #include <algorithm>; #include <numeric>; #include ""TROOT.h"". Include dependency graph for FitUtil.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Fit::FitUtil::ParamDerivFunc< GradFunc >;  ; class  ROOT::Fit::FitUtil::SimpleGradientCalculator;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Fit;  Namespace for the fitting classes. ;  ; namespace  ROOT::Fit::FitUtil;  namespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ;  . Functions; template<class GFunc > ; void ROOT::Fit::FitUtil::CalculateGradientIntegral (const GFunc &gfunc, const double *x1, const double *x2, const double *p, double *g);  ; bool ROOT::Fit::FitUtil::CheckInfNaNValue (double &rval);  ; double ROOT::Fit::FitUtil::CorrectValue (double rval);  . mathmathcoresrcFitUtil.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitUtil_8cxx.html:97,Load,Loading,97,doc/master/FitUtil_8cxx.html,https://root.cern,https://root.cern/doc/master/FitUtil_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/Fitter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Fitter.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Mon Sep 4 17:00:10 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class Fitter; 12 ; 13 ; 14#include ""Fit/Fitter.h""; 15#include ""Fit/Chi2FCN.h""; 16#include ""Fit/PoissonLikelihoodFCN.h""; 17#include ""Fit/LogLikelihoodFCN.h""; 18#include ""Math/Minimizer.h""; 19#include ""Math/MinimizerOptions.h""; 20#include ""Math/FitMethodFunction.h""; 21#include ""Fit/BasicFCN.h""; 22#include ""Fit/BinData.h""; 23#include ""Fit/UnBinData.h""; 24#include ""Fit/FcnAdapter.h""; 25#include ""Fit/FitConfig.h""; 26#include ""Fit/FitResult.h""; 27#include ""Math/Error.h""; 28 ; 29#include <memory>; 30 ; 31#include ""Math/IParamFunction.h""; 32 ; 33#include ""Math/MultiDimParamFunctionAdapter.h""; 34 ; 35// #include ""TMatrixDSym.h""; 36// for debugging; 37//#include ""TMatrixD.h""; 38// #include <iomanip>; 39 ; 40namespace ROOT {; 41 ; 42 namespace Fit {; 43 ; 44// use a static variable to get default minimizer options for error def; 45// to see if user has changed it later on. If it has not been changed we set; 46// for the likelihood method an error def of 0.5; 47// t.b.d : multiply likelihood by 2 so have same error def definition as chi2; 48 double gDefaultErrorDef = ROOT::Math::MinimizerOptions::DefaultErrorDef();; 49 ; 50 ; 51Fitter::Fitter(const std::shared_ptr<FitResult> & result) :; 52 fResult(result); 53{; 54 if (result->fFitFunc) SetFunction(*fResult->fFitFunc); // this will create also the configuration; 55 if (result->fObjFunc) fObjFunction = fResult->fObjFunc;; 56 if (result->fFitData) fData = fResult->fFitData;; 57}; 58 ; 59void Fitter::SetFunction(const I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8cxx_source.html:93,Load,Loading,93,doc/master/Fitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/GenAlgoOptions.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GenAlgoOptions.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Nov 2010; 3/**********************************************************************; 4 * *; 5 * Copyright (c) 2010 LCG ROOT Math Team, CERN/PH-SFT *; 6 * *; 7 * *; 8 **********************************************************************/; 9 ; 10// implementation file for static methods of GenAlgoOptions; 11// this file contains also the pointer to the static std::map<algorithm name, options>; 12 ; 13#include ""Math/GenAlgoOptions.h""; 14#include <cassert>; 15 ; 16// for toupper; 17#include <algorithm>; 18#include <functional>; 19#include <cctype> // need to use c version of tolower defined here; 20#include <string>; 21 ; 22namespace ROOT {; 23namespace Math {; 24 ; 25typedef std::map<std::string, ROOT::Math::GenAlgoOptions > OptionsMap;; 26 ; 27namespace GenAlgoOptUtil {; 28 ; 29 // map with the generic options for all ROOT::Math numerical algorithm; 30 static OptionsMap gAlgoOptions;; 31 ; 32 ; 33 IOptions * DoFindDefault(std::string & algoname, OptionsMap & gOpts) {; 34 // internal function to retrieve the; 35 // default extra options for the given algorithm type; 36 // return zero if not found; 37 // store always name in upper case; 38 std::transform(algoname.begin(), algoname.end(), algoname.begin(), (int(*)(int)) toupper );; 39 ; 40 OptionsMap::iterator pos = gOpts.find(algoname);; 41 if (pos != gOpts.end() ) {; 42 return &(pos->second);; 43 }; 44 return nullptr;; 45 }; 46}; 47 ; 48 IOptions * GenAlgoOptions::FindDefault(const char * algo) {; 49 // find default options - return 0 if not found; 50 std::string algoname(algo);; 51 OptionsMap & gOpts = GenAlgoOptUtil::gAlgoOptions;; 52 return GenAlgoOptUtil::DoFindDefault(algoname, gOpts);; 53 }; 54 ; 55 IOptions & GenAlgoOptions::Default(const char * algo) {; 56 // create def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenAlgoOptions_8cxx_source.html:101,Load,Loading,101,doc/master/GenAlgoOptions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GenAlgoOptions_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/GoFTest.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GoFTest.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: Bartolomeu Rabacal 05/2010; 3/**********************************************************************; 4 * *; 5 * Copyright (c) 2006 , LCG ROOT MathLib Team *; 6 * *; 7 * *; 8 **********************************************************************/; 9// implementation file for GoFTest; 10 ; 11 ; 12#include <algorithm>; 13#include <functional>; 14#include <iostream>; 15#include <map>; 16#include <memory>; 17#include <numeric>; 18#include <cstring>; 19#include <cassert>; 20 ; 21#include ""Math/Error.h""; 22#include ""Math/Math.h""; 23#include ""Math/IFunction.h""; 24#include ""Math/IFunctionfwd.h""; 25#include ""Math/Integrator.h""; 26#include ""Math/ProbFuncMathCore.h""; 27#include ""Math/WrappedFunction.h""; 28 ; 29#include ""Math/GoFTest.h""; 30 ; 31#include ""Fit/BinData.h""; 32 ; 33#include ""TStopwatch.h""; 34 ; 35/* Note: The references mentioned here are stated in GoFTest.h */; 36 ; 37namespace ROOT {; 38namespace Math {; 39 ; 40 struct CDFWrapper : public IGenFunction {; 41 // wrapper around a cdf function to re-scale for the range; 42 Double_t fXmin; // lower range for x; 43 Double_t fXmax; // lower range for x; 44 Double_t fNorm; // normalization; 45 const IGenFunction* fCDF; // cdf pointer (owned by the class); 46 ; 47 ; 48 ~CDFWrapper() override { if (fCDF) delete fCDF; }; 49 ; 50 CDFWrapper(const IGenFunction& cdf, Double_t xmin=0, Double_t xmax=-1) :; 51 fCDF(cdf.Clone()); 52 {; 53 if (xmin >= xmax) {; 54 fNorm = 1;; 55 fXmin = -std::numeric_limits<double>::infinity();; 56 fXmax = std::numeric_limits<double>::infinity();; 57 }; 58 else {; 59 fNorm = cdf(xmax) - cdf(xmin);; 60 fXmin = xmin;; 61 fXmax = xmax;; 62 }; 63 }; 64 ; 65 Double_t DoEval(Double_t x) const override {; 66 if (x <= fXmin) return 0;; 67 if (x >= fXmax) return 1.0;; 68 return (*fCDF)(x)/f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GoFTest_8cxx_source.html:94,Load,Loading,94,doc/master/GoFTest_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GoFTest_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/Minimizer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Minimizer.cxx. Go to the documentation of this file. 1/*; 2 * Copyright (c) 2023, CERN; 3 */; 4 ; 5#include <Math/Minimizer.h>; 6 ; 7#include <Math/Error.h>; 8#include <Math/Util.h>; 9 ; 10namespace ROOT {; 11namespace Math {; 12 ; 13/** set initial second derivatives; 14 */; 15bool Minimizer::SetCovarianceDiag(std::span<const double> g2, unsigned int n); 16{; 17 MATH_UNUSED(g2);; 18 MATH_UNUSED(n);; 19 return false;; 20}; 21 ; 22/** set initial values for covariance/error matrix; 23 The covariance matrix must be provided in compressed form (row-major ordered upper traingular part); 24*/; 25bool Minimizer::SetCovariance(std::span<const double> cov, unsigned int nrow); 26{; 27 MATH_UNUSED(cov);; 28 MATH_UNUSED(nrow);; 29 return false;; 30}; 31 ; 32/// set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited; 33/// variable; 34bool Minimizer::SetLimitedVariable(unsigned int ivar, const std::string &name, double val, double step, double lower,; 35 double upper); 36{; 37 MATH_WARN_MSG(""Minimizer::SetLimitedVariable"", ""Setting of limited variable not implemented - set as unlimited"");; 38 MATH_UNUSED(lower);; 39 MATH_UNUSED(upper);; 40 return SetVariable(ivar, name, val, step);; 41}; 42 ; 43/// set a new fixed variable (override if minimizer supports them ); 44bool Minimizer::SetFixedVariable(unsigned int ivar, const std::string &name, double val); 45{; 46 MATH_ERROR_MSG(""Minimizer::SetFixedVariable"", ""Setting of fixed variable not implemented"");; 47 MATH_UNUSED(ivar);; 48 MATH_UNUSED(name);; 49 MATH_UNUSED(val);; 50 return false;; 51}; 52/// set the value of an already existing variable; 53bool Minimizer::SetVariableValue(unsigned int ivar, double value); 54{; 55 MATH_ERROR_MSG(""Minimizer::SetVariableValue"", ""Set of a variable value not implemented"");; 56 MATH_UNUSED(ivar);; 57 MATH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:96,Load,Loading,96,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/MinimizerOptions.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MinimizerOptions.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Fri Aug 15 2008; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2008 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#include ""Math/MinimizerOptions.h""; 12 ; 13#include ""Math/GenAlgoOptions.h""; 14 ; 15// case of using ROOT plug-in manager; 16#ifndef MATH_NO_PLUGIN_MANAGER; 17#include ""TEnv.h""; 18#include ""TVirtualRWMutex.h""; 19#endif; 20 ; 21 ; 22#include <iomanip>; 23 ; 24namespace ROOT {; 25 ; 26 ; 27namespace Math {; 28 ; 29 namespace Minim {; 30 static std::string gDefaultMinimizer; // take from /etc/system.rootrc in ROOT Fitter; 31 static std::string gDefaultMinimAlgo = ""Migrad"";; 32 static double gDefaultErrorDef = 1.;; 33 static double gDefaultTolerance = 1.E-2;; 34 static double gDefaultPrecision = -1; // value <= 0 means left to minimizer; 35 static int gDefaultMaxCalls = 0; // 0 means leave default values Deaf; 36 static int gDefaultMaxIter = 0;; 37 static int gDefaultStrategy = 1;; 38 static int gDefaultPrintLevel = 0;; 39 static IOptions * gDefaultExtraOptions = nullptr; // pointer to default extra options; 40 }; 41 ; 42 ; 43void MinimizerOptions::SetDefaultMinimizer(const char * type, const char * algo) {; 44 // set the default minimizer type and algorithm; 45 if (type) Minim::gDefaultMinimizer = std::string(type);; 46 if (algo) Minim::gDefaultMinimAlgo = std::string(algo);; 47 if (Minim::gDefaultMinimAlgo.empty() && ( Minim::gDefaultMinimizer == ""Minuit"" ||; 48 Minim::gDefaultMinimizer == ""Minuit2"") ); 49 Minim::gDefaultMinimAlgo = ""Migrad"";; 50}; 51void MinimizerOptions::SetDefaultErrorDef(double up) {; 52 // set the default error definition; 53 Minim::gDefaultErrorDef ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimizerOptions_8cxx_source.html:103,Load,Loading,103,doc/master/MinimizerOptions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MinimizerOptions_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/ParameterSettings.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ParameterSettings.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Thu Sep 21 16:21:48 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class ParameterSettings; 12 ; 13#include <Fit/ParameterSettings.h>; 14 ; 15#include <Math/Error.h>; 16 ; 17namespace ROOT {; 18 ; 19namespace Fit {; 20 ; 21/// set a double side limit,; 22/// if low == up the parameter is fixed if low > up the limits are removed; 23/// The current parameter value should be within the given limits [low,up].; 24/// If the value is outside the limits, then a new parameter value is set to = (up+low)/2; 25void ParameterSettings::SetLimits(double low, double up); 26{; 27 ; 28 if (low > up) {; 29 RemoveLimits();; 30 return;; 31 }; 32 if (low == up && low == fValue) {; 33 Fix();; 34 return;; 35 }; 36 if (low > fValue || up < fValue) {; 37 MATH_INFO_MSG(""ParameterSettings"",; 38 ""lower/upper bounds outside current parameter value. The value will be set to (low+up)/2 "");; 39 fValue = 0.5 * (up + low);; 40 }; 41 fLowerLimit = low;; 42 fUpperLimit = up;; 43 fHasLowerLimit = true;; 44 fHasUpperLimit = true;; 45}; 46 ; 47} // end namespace Fit; 48 ; 49} // end namespace ROOT; Error.h; MATH_INFO_MSG#define MATH_INFO_MSG(loc, str)Pre-processor macro to report messages which can be configured to use ROOT error or simply an std::io...Definition Error.h:77; ParameterSettings.h; ROOT::Fit::ParameterSettings::RemoveLimitsvoid RemoveLimits()remove all limitDefinition ParameterSettings.h:140; ROOT::Fit::ParameterSettings::fLowerLimitdouble fLowerLimitlower parameter limitDefinition ParameterSettings.h:152; ROOT::Fit::Param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ParameterSettings_8cxx_source.html:104,Load,Loading,104,doc/master/ParameterSettings_8cxx_source.html,https://root.cern,https://root.cern/doc/master/ParameterSettings_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/ProbFuncMathCore.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ProbFuncMathCore.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: L. Moneta, A. Zsenei 06/2005; 3 ; 4 ; 5 ; 6#include ""Math/Math.h""; 7#include ""Math/Error.h""; 8#include ""Math/ProbFuncMathCore.h""; 9#include ""Math/SpecFuncMathCore.h""; 10#include <cstdio>; 11#include <limits>; 12 ; 13namespace ROOT {; 14namespace Math {; 15 ; 16 ; 17 ; 18 static const double kSqrt2 = 1.41421356237309515; // sqrt(2.); 19 ; 20 double beta_cdf_c(double x, double a, double b); 21 {; 22 // use the fact that I(x,a,b) = 1. - I(1-x,b,a); 23 return ROOT::Math::inc_beta(1-x, b, a);; 24 }; 25 ; 26 ; 27 double beta_cdf(double x, double a, double b ); 28 {; 29 return ROOT::Math::inc_beta(x, a, b);; 30 }; 31 ; 32 ; 33 double breitwigner_cdf_c(double x, double gamma, double x0); 34 {; 35 return 0.5 - std::atan(2.0 * (x-x0) / gamma) / M_PI;; 36 }; 37 ; 38 ; 39 double breitwigner_cdf(double x, double gamma, double x0); 40 {; 41 return 0.5 + std::atan(2.0 * (x-x0) / gamma) / M_PI;; 42 }; 43 ; 44 ; 45 double cauchy_cdf_c(double x, double b, double x0); 46 {; 47 return 0.5 - std::atan( (x-x0) / b) / M_PI;; 48 }; 49 ; 50 ; 51 double cauchy_cdf(double x, double b, double x0); 52 {; 53 return 0.5 + std::atan( (x-x0) / b) / M_PI;; 54 }; 55 ; 56 ; 57 double chisquared_cdf_c(double x, double r, double x0); 58 {; 59 return ROOT::Math::inc_gamma_c ( 0.5 * r , 0.5* (x-x0) );; 60 }; 61 ; 62 ; 63 double chisquared_cdf(double x, double r, double x0); 64 {; 65 return ROOT::Math::inc_gamma ( 0.5 * r , 0.5* (x-x0) );; 66 }; 67 ; 68 ; 69 double crystalball_cdf(double x, double alpha, double n, double sigma, double mean ); 70 {; 71 if (n <= 1.) {; 72 MATH_ERROR_MSG(""crystalball_cdf"",""CrystalBall cdf not defined for n <=1"");; 73 return std::numeric_limits<double>::quiet_NaN();; 74 }; 75 ; 76 double abs_alpha = std::abs(alpha);; 77 double C = n/abs_alp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ProbFuncMathCore_8cxx_source.html:103,Load,Loading,103,doc/master/ProbFuncMathCore_8cxx_source.html,https://root.cern,https://root.cern/doc/master/ProbFuncMathCore_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/SparseData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SparseData.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: David Gonzalez Maline Wed Aug 28 15:33:03 2009; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class BinData; 12 ; 13#include <iostream>; 14#include <iterator>; 15#include <algorithm>; 16 ; 17#include <vector>; 18#include <list>; 19 ; 20#include <stdexcept>; 21 ; 22#include <cmath>; 23#include <limits>; 24 ; 25#include ""Fit/BinData.h""; 26#include ""Fit/SparseData.h""; 27 ; 28using std::cout, std::endl, std::vector, std::list, std::ostream, std::ostream_iterator;; 29 ; 30namespace ROOT {; 31 ; 32 namespace Fit {; 33 ; 34 //This class is a helper. It represents a bin in N; 35 //dimensions. The change in the name is to avoid name collision.; 36 class Box; 37 {; 38 public:; 39 // Creates a Box with limits specified by the vectors and; 40 // content=value and error=error; 41 Box(const vector<double>& min, const vector<double>& max,; 42 const double value = 0.0, const double error = 1.0):; 43 fMin(min), fMax(max), fVal(value), fError(error); 44 { }; 45 ; 46 // Compares to Boxes to see if they are equal in all its; 47 // variables. This is to be used by the std::find algorithm; 48 bool operator==(const Box& b); 49 { return (fMin == b.fMin) && (fMax == b.fMax); 50 && (fVal == b.fVal) && (fError == b.fError); }; 51 ; 52 // Get the list of minimum coordinates; 53 const vector<double>& GetMin() const { return fMin; }; 54 // Get the list of maximum coordinates; 55 const vector<double>& GetMax() const { return fMax; }; 56 // Get the value of the Box; 57 double GetVal() const { return fVal; }; 58 // Get the error of the Box; 59 double GetError",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SparseData_8cxx_source.html:97,Load,Loading,97,doc/master/SparseData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SparseData_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/SpecFuncCephes.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SpecFuncCephes.cxx. Go to the documentation of this file. 1//; 2//; 3// gamma and related functions from Cephes library; 4// see: http://www.netlib.org/cephes; 5//; 6// Copyright 1985, 1987, 2000 by Stephen L. Moshier; 7//; 8//; 9 ; 10#include ""SpecFuncCephes.h""; 11#include ""Math/Math.h""; 12 ; 13 ; 14#include <cmath>; 15 ; 16#include <limits>; 17 ; 18 ; 19 ; 20namespace ROOT {; 21namespace Math {; 22 ; 23namespace Cephes {; 24 ; 25 ; 26static double kBig = 4.503599627370496e15;; 27static double kBiginv = 2.22044604925031308085e-16;; 28 ; 29/* log( sqrt( 2*pi ) ) */; 30static double LS2PI = 0.91893853320467274178;; 31 ; 32 ; 33// incomplete gamma function (complement integral); 34// igamc(a,x) = 1 - igam(a,x); 35//; 36// inf.; 37// -; 38// 1 | | -t a-1; 39// = ----- | e t dt.; 40// - | |; 41// | (a) -; 42// x; 43//; 44//; 45 ; 46// In this implementation both arguments must be positive.; 47// The integral is evaluated by either a power series or; 48// continued fraction expansion, depending on the relative; 49// values of a and x.; 50 ; 51double igamc( double a, double x ); 52{; 53 ; 54 double ans, ax, c, yc, r, t, y, z;; 55 double pk, pkm1, pkm2, qk, qkm1, qkm2;; 56 ; 57 // LM: for negative values returns 0.0; 58 // This is correct if a is a negative integer since Gamma(-n) = +/- inf; 59 if (a <= 0) return 0.0;; 60 ; 61 if (x <= 0) return 1.0;; 62 ; 63 if( (x < 1.0) || (x < a) ); 64 return( 1.0 - igam(a,x) );; 65 ; 66 ax = a * std::log(x) - x - lgam(a);; 67 if( ax < -kMAXLOG ); 68 return( 0.0 );; 69 ; 70 ax = std::exp(ax);; 71 ; 72/* continued fraction */; 73 y = 1.0 - a;; 74 z = x + y + 1.0;; 75 c = 0.0;; 76 pkm2 = 1.0;; 77 qkm2 = x;; 78 pkm1 = x + 1.0;; 79 qkm1 = z * x;; 80 ans = pkm1/qkm1;; 81 ; 82 do; 83 {; 84 c += 1.0;; 85 y += 1.0;; 86 z += 2.0;; 87 yc = y * c;; 88 pk = pkm1 * z - pkm2 * yc;; 89 qk = qkm1 * z - qkm2 * yc;; 9",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SpecFuncCephes_8cxx_source.html:101,Load,Loading,101,doc/master/SpecFuncCephes_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SpecFuncCephes_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/SpecFuncMathCore.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros ; SpecFuncMathCore.cxx File Reference. #include ""SpecFuncCephes.h""; #include <cmath>; #include <limits>. Include dependency graph for SpecFuncMathCore.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Math;  . Macros; #define PI   3.14159265358979323846264338328 /* pi */;  ; #define USE_CEPHES;  . Functions; Special Functions from MathCore; double ROOT::Math::beta (double x, double y);  Calculates the beta function. ;  ; double ROOT::Math::cosint (double x);  Calculates the real part of the cosine integral Re(Ci). ;  ; double ROOT::Math::erf (double x);  Error function encountered in integrating the normal distribution. ;  ; double ROOT::Math::erfc (double x);  Complementary error function. ;  ; double ROOT::Math::inc_beta (double x, double a, double b);  Calculates the normalized (regularized) incomplete beta function. ;  ; double ROOT::Math::inc_gamma (double a, double x);  Calculates the normalized (regularized) lower incomplete gamma function (lower integral) ;  ; double ROOT::Math::inc_gamma_c (double a, double x);  Calculates the normalized (regularized) upper incomplete gamma function (upper integral) ;  ; double ROOT::Math::lgamma (double x);  Calculates the logarithm of the gamma function. ;  ; double ROOT::Math::sinint (double x);  Calculates the sine integral. ;  ; double ROOT::Math::tgamma (double x);  The gamma function is defined to be the extension of the factorial to real numbers. ;  . Macro Definition Documentation. ◆ PI. #define PI   3.14159265358979323846264338328 /* pi */. Definition at line 23 of file SpecFuncMathCore.cxx. ◆ USE_CEPHES. #d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SpecFuncMathCore_8cxx.html:106,Load,Loading,106,doc/master/SpecFuncMathCore_8cxx.html,https://root.cern,https://root.cern/doc/master/SpecFuncMathCore_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/SpecFuncMathCore.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SpecFuncMathCore.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: Andras Zsenei & Lorenzo Moneta 06/2005; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , LCG ROOT MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11#if defined(__sun) || defined(__sgi) || defined(_WIN32) || defined(_AIX); 12#define NOT_HAVE_TGAMMA; 13#endif; 14 ; 15 ; 16#include ""SpecFuncCephes.h""; 17 ; 18 ; 19#include <cmath>; 20#include <limits>; 21 ; 22#ifndef PI; 23#define PI 3.14159265358979323846264338328 /* pi */; 24#endif; 25 ; 26// use cephes for functions which are also in C99; 27#define USE_CEPHES; 28 ; 29// platforms not implemening C99; 30// #if defined(__sun) || defined(__sgi) || defined(_WIN32) || defined(_AIX); 31// #define USE_CEPHES; 32// #endif; 33 ; 34 ; 35namespace ROOT {; 36namespace Math {; 37 ; 38 ; 39 ; 40 ; 41 ; 42// (26.x.21.2) complementary error function; 43 ; 44double erfc(double x) {; 45 ; 46 ; 47#ifdef USE_CEPHES; 48 // use cephes implementation; 49 return ROOT::Math::Cephes::erfc(x);; 50#else; 51 return ::erfc(x);; 52#endif; 53 ; 54}; 55 ; 56 ; 57// (26.x.21.1) error function; 58 ; 59double erf(double x) {; 60 ; 61 ; 62#ifdef USE_CEPHES; 63 return ROOT::Math::Cephes::erf(x);; 64#else; 65 return ::erf(x);; 66#endif; 67 ; 68 ; 69}; 70 ; 71 ; 72 ; 73 ; 74double lgamma(double z) {; 75 ; 76#ifdef USE_CEPHES; 77 return ROOT::Math::Cephes::lgam(z);; 78#else; 79 return ::lgamma(z);; 80#endif; 81 ; 82}; 83 ; 84 ; 85 ; 86 ; 87// (26.x.18) gamma function; 88 ; 89double tgamma(double x) {; 90 ; 91#ifdef USE_CEPHES; 92 return ROOT::Math::Cephes::gamma(x);; 93#else; 94 return ::tgamma(x);; 95#endif; 96 ; 97}; 98 ; 99double inc_gamma( double a, double x) {; 100 return ROOT::Math::Cephes::iga",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SpecFuncMathCore_8cxx_source.html:103,Load,Loading,103,doc/master/SpecFuncMathCore_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SpecFuncMathCore_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/TMath.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMath.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Authors: Rene Brun, Anna Kreshuk, Eddy Offermann, Fons Rademakers 29/07/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12////////////////////////////////////////////////////////////////////////////////; 13// TMath; 14//; 15// Encapsulate math routines.; 16 ; 17#include ""TMath.h""; 18#include ""TError.h""; 19#include <cmath>; 20#include <cstring>; 21#include <algorithm>; 22#include <iostream>; 23#include ""TString.h""; 24 ; 25#include <Math/SpecFuncMathCore.h>; 26#include <Math/PdfFuncMathCore.h>; 27#include <Math/ProbFuncMathCore.h>; 28 ; 29//const Double_t; 30// TMath::Pi = 3.14159265358979323846,; 31// TMath::E = 2.7182818284590452354;; 32 ; 33 ; 34// Without this macro the THtml doc for TMath can not be generated; 35#if !defined(R__SOLARIS) && !defined(R__ACC) && !defined(R__FBSD); 36NamespaceImp(TMath); 37#endif; 38 ; 39namespace TMath {; 40 ; 41 Double_t GamCf(Double_t a,Double_t x);; 42 Double_t GamSer(Double_t a,Double_t x);; 43 Double_t VavilovDenEval(Double_t rlam, Double_t *AC, Double_t *HC, Int_t itype);; 44 void VavilovSet(Double_t rkappa, Double_t beta2, Bool_t mode, Double_t *WCM, Double_t *AC, Double_t *HC, Int_t &itype, Int_t &npt);; 45 ; 46}; 47 ; 48////////////////////////////////////////////////////////////////////////////////; 49/// Returns `sqrt(x*x + y*y)`; 50 ; 51Long_t TMath::Hypot(Long_t x, Long_t y); 52{; 53 return (Long_t) (hypot((Double_t)x, (Double_t)y) + 0.5);; 54}; 55 ; 56///////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:92,Load,Loading,92,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/TRandom.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Rene Brun, Lorenzo Moneta 15/12/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/**; 13 ; 14\class TRandom; 15 ; 16@ingroup Random; 17 ; 18This is the base class for the ROOT Random number generators.; 19This class defines the ROOT Random number interface and it should not be instantiated directly but used via its derived; 20classes. The generator provided in TRandom itself is a LCG (Linear Congruential Generator), the <a; 21href=""https://www.gnu.org/software/gsl/manual/html_node/Unix-random-number-generators.html"">BSD `rand` generator</a>,; 22that it should not be used because its period is only 2**31, i.e. approximately 2 billion events, that can be generated; 23in just few seconds.; 24 ; 25To generate random numbers, one should use one of the derived classes, which are:; 26- TRandom3: it is based on the ""Mersenne Twister generator"",; 27it is fast and a very long period of about \f$10^{6000}\f$. However it fails some of the most stringent tests of the; 28<a href=""http://simul.iro.umontreal.ca/testu01/tu01.html"">TestU01 suite</a>.; 29In addition this generator provide only numbers with 32 random bits, which might be not sufficient for some application; 30based on double or extended precision. This generator is however used in ROOT used to instantiate the global pointer to; 31the ROOT generator, *gRandom*.; 32- ::TRandomRanluxpp : New implementation of the Ranlux generator algorithm based on a fast modular multiplic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8cxx_source.html:94,Load,Loading,94,doc/master/TRandom_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/TRandom3.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom3.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: Peter Malzacher 31/08/99; 3 ; 4/**; 5 ; 6\class TRandom3; 7 ; 8Random number generator class based on; 9 M. Matsumoto and T. Nishimura,; 10 Mersenne Twister: A 623-diminsionally equidistributed; 11 uniform pseudorandom number generator; 12 ACM Transactions on Modeling and Computer Simulation,; 13 Vol. 8, No. 1, January 1998, pp 3--30.; 14 ; 15For more information see the Mersenne Twister homepage; 16 [http://www.math.keio.ac.jp/~matumoto/emt.html]; 17 ; 18Advantage:; 19 ; 20- large period 2**19937 -1; 21- relatively fast (slightly slower than TRandom2 but much faster than TRandom1); 22 ; 23Drawback:; 24- a relative large internal state of 624 integers ; 25- generate only 32 random bits ; 26- not passing all the random generator tests. It fails some tests in TestU01; 27 (see [http://simul.iro.umontreal.ca/testu01/tu01.html]); 28 ; 29An altenativly excellent generator passing all tests of TestU01, having 61 random bits and ; 30fast as Mersenne and Twister is MIXMAX (TRandomMixMax). ; 31 ; 32@ingroup Random; 33 ; 34*/; 35 ; 36//////////////////////////////////////////////////////////////////////; 37// Aug.99 ROOT implementation based on CLHEP by P.Malzacher; 38//; 39// the original code contains the following copyright notice:; 40/* This library is free software; you can redistribute it and/or */; 41/* modify it under the terms of the GNU Library General Public */; 42/* License as published by the Free Software Foundation; either */; 43/* version 2 of the License, or (at your option) any later */; 44/* version. */; 45/* This library is distributed in the hope that it will be useful, */; 46/* but WITHOUT ANY WARRANTY; without even the implied warranty of */; 47/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. */; 48/* See the GNU Library Genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom3_8cxx_source.html:95,Load,Loading,95,doc/master/TRandom3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom3_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathcore/src/UnBinData.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. UnBinData.cxx. Go to the documentation of this file. 1// @(#)root/mathcore:$Id$; 2// Author: L. Moneta Wed Aug 30 11:10:03 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class UnBinData; 12 ; 13#include ""Fit/UnBinData.h""; 14#include ""Math/Error.h""; 15 ; 16#include <cassert>; 17#include <cmath>; 18 ; 19namespace ROOT {; 20 ; 21 namespace Fit {; 22 ; 23/// copy constructor; 24UnBinData::UnBinData(const UnBinData & rhs) :; 25 FitData(rhs),; 26 fWeighted(rhs.fWeighted); 27{}; 28 ; 29///assignment operator; 30UnBinData & UnBinData::operator= ( const UnBinData & rhs ); 31{; 32 FitData::operator=( rhs );; 33 fWeighted = rhs.fWeighted;; 34 return *this;; 35}; 36 ; 37 ; 38 } // end namespace Fit; 39 ; 40} // end namespace ROOT; 41 ; Error.h; UnBinData.h; ROOT::Fit::FitDataBase class for all the fit data types: Stores the coordinates and the DataOptions.Definition FitData.h:56; ROOT::Fit::FitData::operator=FitData & operator=(const FitData &rhs)Definition FitData.cxx:218; ROOT::Fit::UnBinDataClass describing the un-binned data sets (just x coordinates values) of any dimensions.Definition UnBinData.h:46; ROOT::Fit::UnBinData::operator=UnBinData & operator=(const UnBinData &)assignment operatorDefinition UnBinData.cxx:30; ROOT::Fit::UnBinData::fWeightedbool fWeightedDefinition UnBinData.h:293; ROOT::Fit::UnBinData::UnBinDataUnBinData(unsigned int maxpoints=0, unsigned int dim=1, bool isWeighted=false)constructor from dimension of point and max number of points (to pre-allocate vector)Definition UnBinData.h:54; HFit::FitTFitResultPtr Fit(FitObject *h1, TF1 *f1, Foption_t &option, const ROOT::Math::MinimizerOptions &moption, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/UnBinData_8cxx_source.html:96,Load,Loading,96,doc/master/UnBinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/UnBinData_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/inc/Math/GSLFunctionAdapter.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLFunctionAdapter.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLFunctionAdapter; 26//; 27// Generic adapter for gsl_function signature; 28// usable for any c++ class which defines operator( ); 29//; 30// Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; 31//; 32// Last update: Fri Nov 12 16:58:51 2004; 33//; 34#ifndef ROOT_Math_GSLFunctionAdapter; 35#define ROOT_Math_GSLFunctionAdapter; 36 ; 37 ; 38namespace ROOT {; 39namespace Math {; 40 ; 41 /**; 42 Function pointer corresponding to gsl_function signature; 43 */; 44 ; 45 typedef double ( * GSLFuncPointer ) ( double, void *);; 46 ; 47 ; 48 /**; 49 Class for adapting any C++ functor class to C function pointers used by GSL.; 50 The ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLFunctionAdapter_8h_source.html:108,Load,Loading,108,doc/master/GSLFunctionAdapter_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLFunctionAdapter_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/inc/Math/GSLMultiRootFinder.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiRootFinder.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta 03/2011; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLMultiRootFinder; 26//; 27 ; 28#ifndef ROOT_Math_GSLMultiRootFinder; 29#define ROOT_Math_GSLMultiRootFinder; 30 ; 31 ; 32 ; 33#include ""Math/IFunction.h""; 34 ; 35#include ""Math/WrappedFunction.h""; 36 ; 37#include <vector>; 38#include <utility>; 39#include <iostream>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44 ; 45 class GSLMultiRootBaseSolver;; 46 ; 47 /** @defgroup MultiRoot Multidimensional ROOT finding; 48 Classes for finding the roots of a multi-dimensional system.; 49 @ingroup NumAlgo; 50 */; 51 ; 52 /**; 53 Class for Multidimensional root finding algorithms bassed on GSL. This class is used to solve a; 54 non-linear system",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFinder_8h_source.html:108,Load,Loading,108,doc/master/GSLMultiRootFinder_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFinder_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/inc/Math/GSLRandom.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLRandom.h. Go to the documentation of this file. 1#ifndef ROOT_Math_GSLRandom; 2#define ROOT_Math_GSLRandom; 3 ; 4#include ""Math/Random.h""; 5#include ""Math/GSLRndmEngines.h""; 6 ; 7namespace ROOT {; 8namespace Math {; 9 ; 10 ; 11 typedef Random<ROOT::Math::GSLRngMT> RandomMT;; 12 typedef Random<ROOT::Math::GSLRngTaus> RandomTaus;; 13 typedef Random<ROOT::Math::GSLRngRanLux> RandomRanLux;; 14 typedef Random<ROOT::Math::GSLRngGFSR4> RandomGFSR4;; 15 ; 16 ; 17} // namespace Math; 18} // namespace ROOT; 19 ; 20#endif; GSLRndmEngines.h; Random.h; ROOT::Math::RandomDocumentation for the Random class.Definition Random.h:43; MathNamespace for new Math classes and functions.; ROOT::Math::RandomMTRandom< ROOT::Math::GSLRngMT > RandomMTDefinition GSLRandom.h:11; ROOT::Math::RandomRanLuxRandom< ROOT::Math::GSLRngRanLux > RandomRanLuxDefinition GSLRandom.h:13; ROOT::Math::RandomGFSR4Random< ROOT::Math::GSLRngGFSR4 > RandomGFSR4Definition GSLRandom.h:14; ROOT::Math::RandomTausRandom< ROOT::Math::GSLRngTaus > RandomTausDefinition GSLRandom.h:12; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. mathmathmoreincMathGSLRandom.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLRandom_8h_source.html:99,Load,Loading,99,doc/master/GSLRandom_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLRandom_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/inc/Math/GSLRndmEngines.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLRndmEngines.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLRandom; 26//; 27// Created by: moneta at Sun Nov 21 16:26:03 2004; 28//; 29// Last update: Sun Nov 21 16:26:03 2004; 30//; 31#ifndef ROOT_Math_GSLRndmEngines; 32#define ROOT_Math_GSLRndmEngines; 33 ; 34#include <string>; 35#include <vector>; 36 ; 37 ; 38namespace ROOT {; 39namespace Math {; 40 ; 41 ; 42 class GSLRngWrapper;; 43 class GSLMCIntegrator;; 44 ; 45 //_________________________________________________________________; 46 /**; 47 GSLRandomEngine; 48 Base class for all GSL random engines,; 49 normally user instantiate the derived classes; 50 which creates internally the generator.; 51 ; 52 The main GSL generators (see; 53 <A HR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLRndmEngines_8h_source.html:104,Load,Loading,104,doc/master/GSLRndmEngines_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLRndmEngines_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/inc/Math/PdfFuncMathMore.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PdfFuncMathMore.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25 ; 26#ifndef ROOT_Math_PdfFuncMathMore; 27#define ROOT_Math_PdfFuncMathMore; 28 ; 29namespace ROOT {; 30 namespace Math {; 31 ; 32 ; 33 /**; 34 ; 35 Probability density function of the non central \f$\chi^2\f$ distribution with \f$r\f$; 36 degrees of freedom and the noon-central parameter \f$\lambda\f$; 37 ; 38 \f[ p_r(x) = \frac{1}{\Gamma(r/2) 2^{r/2}} x^{r/2-1} e^{-x/2} \f]; 39 ; 40 for \f$x \geq 0\f$.; 41 For detailed description see; 42 <A HREF=""http://mathworld.wolfram.com/NoncentralChi-SquaredDistribution.html"">; 43 Mathworld</A>.; 44 ; 45 @ingroup PdfFunc; 46 ; 47 */; 48 ; 49 double noncentral_chisquared_pdf(double x, double r, double lambda);; 50 ; 51",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PdfFuncMathMore_8h_source.html:105,Load,Loading,105,doc/master/PdfFuncMathMore_8h_source.html,https://root.cern,https://root.cern/doc/master/PdfFuncMathMore_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/inc/Math/QuasiRandom.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. QuasiRandom.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Author: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLRandom; 26//; 27// Created by: moneta at Sun Nov 21 16:26:03 2004; 28//; 29// Last update: Sun Nov 21 16:26:03 2004; 30//; 31#ifndef ROOT_Math_QuasiRandom; 32#define ROOT_Math_QuasiRandom; 33 ; 34#include <string>; 35 ; 36/**; 37 @defgroup QuasiRandom QuasiRandom number generators and distributions; 38 Classes for generating QuasiRandom numbers and based on GSL ; 39 @ingroup Random; 40 @ingroup MathMore; 41*/; 42 ; 43 ; 44 ; 45namespace ROOT {; 46namespace Math {; 47 ; 48 ; 49//_____________________________________________________________________________________; 50/**; 51 User class for MathMore random numbers template on the Engine type.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/QuasiRandom_8h_source.html:101,Load,Loading,101,doc/master/QuasiRandom_8h_source.html,https://root.cern,https://root.cern/doc/master/QuasiRandom_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/src/GSLFunctionWrapper.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLFunctionWrapper.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLFunctionWrapper; 32#define ROOT_Math_GSLFunctionWrapper; 33 ; 34#include ""gsl/gsl_math.h""; 35 ; 36#include ""Math/GSLFunctionAdapter.h""; 37 ; 38#include <cassert>; 39 ; 40namespace ROOT {; 41namespace Math {; 42 ; 43 ; 44 ; 45typedef double ( * GSLFuncPointer ) ( double, void *);; 46typedef void ( * GSLFdfPointer ) ( double, void *, double *, double *);; 47 ; 48 ; 49/**; 50 Wrapper class to the gsl_function C structure.; 51 This class to fill the GSL C structure gsl_function with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLFunctionWrapper_8h_source.html:103,Load,Loading,103,doc/master/GSLFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLFunctionWrapper_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/src/GSLMCIntegrationWorkspace.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; GSLMCIntegrationWorkspace.h File Reference. #include ""gsl/gsl_math.h""; #include ""gsl/gsl_monte.h""; #include ""gsl/gsl_monte_vegas.h""; #include ""gsl/gsl_monte_miser.h""; #include ""gsl/gsl_monte_plain.h""; #include ""Math/MCParameters.h""; #include ""Math/MCIntegrationTypes.h"". Include dependency graph for GSLMCIntegrationWorkspace.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Math::GSLMCIntegrationWorkspace;  ; class  ROOT::Math::GSLMiserIntegrationWorkspace;  Workspace for MISER. More...;  ; class  ROOT::Math::GSLPlainIntegrationWorkspace;  ; class  ROOT::Math::GSLVegasIntegrationWorkspace;  workspace for VEGAS More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Math;  . mathmathmoresrcGSLMCIntegrationWorkspace.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMCIntegrationWorkspace_8h.html:113,Load,Loading,113,doc/master/GSLMCIntegrationWorkspace_8h.html,https://root.cern,https://root.cern/doc/master/GSLMCIntegrationWorkspace_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/src/GSLMultiFitFunctionWrapper.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiFitFunctionWrapper.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta Dec 2006; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLMultiMinFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLMultiFitFunctionWrapper; 32#define ROOT_Math_GSLMultiFitFunctionWrapper; 33 ; 34#include ""gsl/gsl_multifit.h""; 35 ; 36#include ""GSLMultiFitFunctionAdapter.h""; 37 ; 38 ; 39#include <cassert>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44 ; 45 ; 46 typedef double ( * GSLMultiFitFPointer ) ( const gsl_vector *, void *, gsl_vector *);; 47 typedef void ( * GSLMultiFitDfPointer ) ( const gsl_vector *, void *, gsl_matrix *);; 48 typedef void ( * GSLMultiFitFdfPoint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiFitFunctionWrapper_8h_source.html:111,Load,Loading,111,doc/master/GSLMultiFitFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiFitFunctionWrapper_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/src/GSLMultiMinFunctionWrapper.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiMinFunctionWrapper.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, 12/2006; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLMultiMinFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLMultiMinFunctionWrapper; 32#define ROOT_Math_GSLMultiMinFunctionWrapper; 33 ; 34#include ""gsl/gsl_multimin.h""; 35 ; 36#include ""GSLMultiMinFunctionAdapter.h""; 37 ; 38 ; 39#include <cassert>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44 ; 45 ; 46 typedef double ( * GSLMultiMinFuncPointer ) ( const gsl_vector *, void *);; 47 typedef void ( * GSLMultiMinDfPointer ) ( const gsl_vector *, void *, gsl_vector *);; 48 typedef void ( * GSLMultiMinFdfPointer ) ( cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiMinFunctionWrapper_8h_source.html:111,Load,Loading,111,doc/master/GSLMultiMinFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiMinFunctionWrapper_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/src/GSLMultiRootFinder.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiRootFinder.cxx. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta, A. Zsenei 08/2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Implementation file for class GSLMultiRootFinder; 26//; 27// Created by: moneta at Sun Nov 14 11:27:11 2004; 28//; 29// Last update: Sun Nov 14 11:27:11 2004; 30//; 31 ; 32#include ""Math/IFunction.h""; 33#include ""Math/GSLMultiRootFinder.h""; 34#include ""GSLMultiRootSolver.h""; 35#include ""Math/Error.h""; 36 ; 37#include ""gsl/gsl_multiroots.h""; 38#include ""gsl/gsl_errno.h""; 39#include <cmath>; 40#include <iomanip>; 41 ; 42#include <algorithm>; 43#include <functional>; 44#include <cctype> // need to use c version of tolower defined here; 45 ; 46 ; 47namespace ROOT {; 48namespace Math {; 49 ; 50 // default values; 51 ; 52 int gDefaultMaxIter = 100;; 53 doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFinder_8cxx_source.html:105,Load,Loading,105,doc/master/GSLMultiRootFinder_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFinder_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/src/GSLMultiRootFunctionWrapper.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GSLMultiRootFunctionWrapper.h. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: L. Moneta Dec 2006; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 7 * *; 8 * This library is free software; you can redistribute it and/or *; 9 * modify it under the terms of the GNU General Public License *; 10 * as published by the Free Software Foundation; either version 2 *; 11 * of the License, or (at your option) any later version. *; 12 * *; 13 * This library is distributed in the hope that it will be useful, *; 14 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 15 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 16 * General Public License for more details. *; 17 * *; 18 * You should have received a copy of the GNU General Public License *; 19 * along with this library (see file COPYING); if not, write *; 20 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLMultiRootFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLMultiRootFunctionWrapper; 32#define ROOT_Math_GSLMultiRootFunctionWrapper; 33 ; 34#include ""gsl/gsl_multiroots.h""; 35 ; 36#include ""GSLMultiRootFunctionAdapter.h""; 37 ; 38 ; 39#include <cassert>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44 ; 45 ; 46// can re-use same type for multi-fit; 47 ; 48 typedef double ( * GSLMultiRootFPointer ) ( const gsl_vector *, void *, gsl_vector *);; 49 typedef void ( * GSLMultiRootDfPointer ) ( const gsl_vector *, void *,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFunctionWrapper_8h_source.html:112,Load,Loading,112,doc/master/GSLMultiRootFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFunctionWrapper_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/mathmore/src/Vavilov.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Vavilov.cxx. Go to the documentation of this file. 1// @(#)root/mathmore:$Id$; 2// Authors: B. List 29.4.2010; 3 ; 4 ; 5 /**********************************************************************; 6 * *; 7 * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; 8 * *; 9 * This library is free software; you can redistribute it and/or *; 10 * modify it under the terms of the GNU General Public License *; 11 * as published by the Free Software Foundation; either version 2 *; 12 * of the License, or (at your option) any later version. *; 13 * *; 14 * This library is distributed in the hope that it will be useful, *; 15 * but WITHOUT ANY WARRANTY; without even the implied warranty of *; 16 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; 17 * General Public License for more details. *; 18 * *; 19 * You should have received a copy of the GNU General Public License *; 20 * along with this library (see file COPYING); if not, write *; 21 * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; 22 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 23 * *; 24 **********************************************************************/; 25 ; 26// Implementation file for class Vavilov; 27//; 28// Created by: blist at Thu Apr 29 11:19:00 2010; 29//; 30// Last update: Thu Apr 29 11:19:00 2010; 31//; 32 ; 33 ; 34#include ""Math/Vavilov.h""; 35#include ""Math/VavilovAccurate.h""; 36#include ""Math/SpecFuncMathCore.h""; 37#include ""Math/SpecFuncMathMore.h""; 38 ; 39#include <cmath>; 40 ; 41namespace ROOT {; 42namespace Math {; 43 ; 44static const double eu = 0.577215664901532860606; // Euler's constant; 45 ; 46Vavilov::Vavilov(); 47{; 48}; 49 ; 50Vavilov::~Vavilov(); 51{; 52 // destructor (clean up resources); 53}; 54 ; 55 ; 56double Vavilov::Mode() const {; 57 double x = -4.22784335098467134e-01-std::log(GetKappa())-GetBeta2();; 58 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Vavilov_8cxx_source.html:94,Load,Loading,94,doc/master/Vavilov_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Vavilov_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/matrix/inc/TMatrixDBasefwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TMatrixDBasefwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TMatrixDBasefwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TMatrixTBase< Double_t > TMatrixDBase;  . Typedef Documentation. ◆ TMatrixDBase. typedef TMatrixTBase<Double_t> TMatrixDBase. Definition at line 26 of file TMatrixDBasefwd.h. mathmatrixincTMatrixDBasefwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixDBasefwd_8h.html:101,Load,Loading,101,doc/master/TMatrixDBasefwd_8h.html,https://root.cern,https://root.cern/doc/master/TMatrixDBasefwd_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/matrix/inc/TMatrixDSymfwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TMatrixDSymfwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TMatrixDSymfwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TMatrixTSym< Double_t > TMatrixDSym;  . Typedef Documentation. ◆ TMatrixDSym. typedef TMatrixTSym<Double_t> TMatrixDSym. Definition at line 23 of file TMatrixDSymfwd.h. mathmatrixincTMatrixDSymfwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixDSymfwd_8h.html:100,Load,Loading,100,doc/master/TMatrixDSymfwd_8h.html,https://root.cern,https://root.cern/doc/master/TMatrixDSymfwd_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/matrix/inc/TMatrixFBasefwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TMatrixFBasefwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TMatrixFBasefwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TMatrixTBase< Float_t > TMatrixFBase;  . Typedef Documentation. ◆ TMatrixFBase. typedef TMatrixTBase<Float_t> TMatrixFBase. Definition at line 26 of file TMatrixFBasefwd.h. mathmatrixincTMatrixFBasefwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixFBasefwd_8h.html:101,Load,Loading,101,doc/master/TMatrixFBasefwd_8h.html,https://root.cern,https://root.cern/doc/master/TMatrixFBasefwd_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/matrix/inc/TVectorDfwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TVectorDfwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TVectorDfwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TVectorT< Double_t > TVectorD;  . Typedef Documentation. ◆ TVectorD. typedef TVectorT<Double_t> TVectorD. Definition at line 23 of file TVectorDfwd.h. mathmatrixincTVectorDfwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVectorDfwd_8h.html:97,Load,Loading,97,doc/master/TVectorDfwd_8h.html,https://root.cern,https://root.cern/doc/master/TVectorDfwd_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/matrix/inc/TVectorFfwd.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Typedefs ; TVectorFfwd.h File Reference. #include ""RtypesCore.h"". Include dependency graph for TVectorFfwd.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Typedefs; typedef TVectorT< Float_t > TVectorF;  . Typedef Documentation. ◆ TVectorF. typedef TVectorT<Float_t> TVectorF. Definition at line 23 of file TVectorFfwd.h. mathmatrixincTVectorFfwd.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVectorFfwd_8h.html:97,Load,Loading,97,doc/master/TVectorFfwd_8h.html,https://root.cern,https://root.cern/doc/master/TVectorFfwd_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/matrix/src/TMatrixT.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMatrixT.cxx. Go to the documentation of this file. 1// @(#)root/matrix:$Id$; 2// Authors: Fons Rademakers, Eddy Offermann Nov 2003; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TMatrixT; 13 \ingroup Matrix; 14 ; 15TMatrixT; 16 ; 17Template class of a general matrix in the linear algebra package; 18 ; 19See the \ref Matrix page for the documentation of the linear algebra package; 20 ; 21*/; 22 ; 23#include <typeinfo>; 24 ; 25#include ""TMatrixT.h""; 26#include ""TBuffer.h""; 27#include ""TMatrixTSym.h""; 28#include ""TMatrixTLazy.h""; 29#include ""TMatrixTCramerInv.h""; 30#include ""TDecompLU.h""; 31#include ""TMatrixDEigen.h""; 32#include ""TMath.h""; 33 ; 34templateClassImp(TMatrixT);; 35 ; 36////////////////////////////////////////////////////////////////////////////////; 37/// Constructor for (nrows x ncols) matrix; 38 ; 39template <class Element>; 40TMatrixT<Element>::TMatrixT(Int_t nrows, Int_t ncols); 41{; 42 Allocate(nrows, ncols, 0, 0, 1);; 43}; 44 ; 45////////////////////////////////////////////////////////////////////////////////; 46/// Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix; 47 ; 48template <class Element>; 49TMatrixT<Element>::TMatrixT(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); 50{; 51 Allocate(row_upb - row_lwb + 1, col_upb - col_lwb + 1, row_lwb, col_lwb, 1);; 52}; 53 ; 54////////////////////////////////////////////////////////////////////////////////; 55/// option=""F"": array elements contains the matrix stored column-wise; 56/// like in Fortran, so a[i,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixT_8cxx_source.html:93,Load,Loading,93,doc/master/TMatrixT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMatrixT_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/minuit/inc/TMinuit.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Variables ; TMinuit.h File Reference. #include ""TNamed.h""; #include ""TMethodCall.h"". Include dependency graph for TMinuit.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMinuit;  . Variables; R__EXTERN TMinuit * gMinuit;  . Variable Documentation. ◆ gMinuit. R__EXTERN TMinuit* gMinuit. Definition at line 271 of file TMinuit.h. mathminuitincTMinuit.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h.html:93,Load,Loading,93,doc/master/TMinuit_8h.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h.html,1,['Load'],['Loading']
Performance,". ROOT: math/minuit/inc/TMinuit.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMinuit.h. Go to the documentation of this file. 1// @(#)root/minuit:$Id$; 2// Author: Rene Brun, Frederick James 12/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12//////////////////////////////////////////////////////////////////////////; 13// //; 14// TMinuit //; 15// //; 16// The MINUIT minimisation package (base class) //; 17// //; 18//////////////////////////////////////////////////////////////////////////; 19 ; 20#ifndef ROOT_TMinuit; 21#define ROOT_TMinuit; 22 ; 23#include ""TNamed.h""; 24 ; 25#include ""TMethodCall.h""; 26 ; 27class TMinuit : public TNamed {; 28 ; 29private:; 30 TMinuit(const TMinuit &m);; 31 TMinuit& operator=(const TMinuit &m); // Not implemented; 32 ; 33// should become private....; 34public:; 35 enum{kMAXWARN=100};; 36 ; 37 Int_t fNpfix; //Number of fixed parameters; 38 Int_t fEmpty; //Initialization flag (1 = Minuit initialized); 39 Int_t fMaxpar; //Maximum number of parameters; 40 Int_t fMaxint; //Maximum number of internal parameters; 41 Int_t fNpar; //Number of free parameters (total number of pars = fNpar + fNfix); 42 Int_t fMaxext; //Maximum number of external parameters; 43 Int_t fMaxIterations; //Maximum number of iterations; 44 Int_t fMaxpar5; // fMaxpar*(fMaxpar+1)/2; 45 Int_t fMaxcpt;; 46 Int_t fMaxpar2; // fMaxpar*fMaxpar; 47 Int_t fMaxpar1; // fMaxpar*(fMaxpar+1); 48 ; 49 Double_t fAmin; //Minimum value found for FCN; 50 Double_t fUp; //FCN+-UP defines errors (for chisquare fits UP=1); 51 Double_t fEDM; //Estimated vertical distance to the minimum; 52 Double_t fFval3;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h_source.html:90,Load,Loading,90,doc/master/TMinuit_8h_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/minuit/src/TMinuit.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMinuit.cxx. Go to the documentation of this file. 1// @(#)root/minuit:$Id$; 2// Author: Rene Brun, Frederick James 12/08/95; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13/*! \class TMinuit; 14\see Minuit2 for a newer version of this package; 15\ingroup MinuitOld; 16 ; 17Implementation in C++ of the Minuit package written by Fred James.; 18This is a straightforward conversion of the original Fortran version.; 19 ; 20The main changes are:; 21 ; 22 - The variables in the various Minuit labelled common blocks; 23 have been changed to the TMinuit class data members.; 24 ; 25 - The internal arrays with a maximum dimension depending on the; 26 maximum number of parameters are now data members arrays with; 27 a dynamic dimension such that one can fit very large problems; 28 by simply initialising the TMinuit constructor with the maximum; 29 number of parameters.; 30 ; 31 - The include file Minuit.h has been commented as much as possible; 32 using existing comments in the code or the printed documentation; 33 ; 34 - The original Minuit subroutines are now member functions.; 35 ; 36 - Constructors and destructor have been added.; 37 ; 38 - Instead of passing the FCN function in the argument; 39 list, the addresses of this function is stored as pointer; 40 in the data members of the class. This is by far more elegant; 41 and flexible in an interactive environment.; 42 The member function SetFCN can be used to define this pointer.; 43 ; 44 - The ROOT static function Printf is provided to replace all; 45 format sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:92,Load,Loading,92,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/rtools/src/RMinimizer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RMinimizer.cxx. Go to the documentation of this file. 1 ; 2#include ""TRInterface.h""; 3#include ""Math/RMinimizer.h""; 4#include ""Math/IFunction.h""; 5#include <TVectorD.h>; 6#include ""Math/BasicMinimizer.h""; 7 ; 8namespace ROOT {; 9 namespace Math{; 10 ; 11 /// function wrapper for the function to be minimized; 12 const ROOT::Math::IMultiGenFunction *gFunction;; 13 /// function wrapper for the gradient of the function to be minimized; 14 const ROOT::Math::IMultiGradFunction *gGradFunction;; 15 /// integer for the number of function calls; 16 int gNCalls = 0; ; 17 ; 18 ///function to return the function values at point x; 19 double minfunction(const std::vector<double> & x){; 20 gNCalls++;; 21 //return (*gFunction)(x.GetMatrixArray());; 22 return (*gFunction)(x.data());; 23 }; 24 ///function to return the gradient values at point y; 25 TVectorD mingradfunction(TVectorD y){; 26 unsigned int size = y.GetNoElements();; 27 const double * yy = y.GetMatrixArray();; 28 double z[size];; 29 gGradFunction->Gradient(yy,z);; 30 TVectorD zz(size,z);; 31 return zz;; 32 }; 33 ; 34 /*Default constructor with option for the method of minimization, can be any of the following:; 35 *; 36 *""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"", ""Brent"" (Brent only for 1D minimization); 37 */; 38 RMinimizer::RMinimizer(Option_t *method){; 39 fMethod=method;; 40 if (fMethod.empty() || fMethod==""Migrad"") fMethod=""BFGS""; ; 41 }; 42 ; 43 ///returns number of function calls; 44 unsigned int RMinimizer::NCalls() const { return gNCalls; }; 45 ; 46 ///function for finding the minimum; 47 bool RMinimizer::Minimize() {; 48 ; 49 //Set the functions; 50 (gFunction)= ObjFunction();; 51 (gGradFunction) = GradObjFunction();; 52 ; 53 gNCalls = 0; ; 54 ; 55 //pass functions and variables to R; 56 ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; 57 ; 58 r[""minfunction""] = ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RMinimizer_8cxx_source.html:95,Load,Loading,95,doc/master/RMinimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RMinimizer_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/BinaryOperators.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BinaryOperators.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_BinaryOperators; 5#define ROOT_Math_BinaryOperators; 6//======================================================; 7//; 8// ATTENTION: This file was automatically generated,; 9// do not edit!; 10//; 11// author: Thorsten Glebe; 12// HERA-B Collaboration; 13// Max-Planck-Institut fuer Kernphysik; 14// Saupfercheckweg 1; 15// 69117 Heidelberg; 16// Germany; 17// E-mail: T.Glebe@mpi-hd.mpg.de; 18//; 19//======================================================; 20 ; 21#include ""Math/BinaryOpPolicy.h""; 22#include ""Math/Expression.h""; 23 ; 24namespace ROOT {; 25 ; 26 namespace Math {; 27 ; 28 ; 29 ; 30template <class T, unsigned int D> class SVector;; 31template <class T, unsigned int D1, unsigned int D2, class R> class SMatrix;; 32 ; 33 ; 34//==============================================================================; 35// AddOp; 36//==============================================================================; 37/**; 38 Addition Operation Class; 39 ; 40 @ingroup Expression; 41 */; 42template <class T>; 43class AddOp {; 44public:; 45 static inline T apply(const T& lhs, const T& rhs) {; 46 return lhs + rhs;; 47 }; 48};; 49 ; 50 ; 51/**; 52 Addition of two vectors v3 = v1+v2; 53 returning a vector expression; 54 ; 55 @ingroup VectFunction; 56*/; 57//==============================================================================; 58// operator+ (SVector, binary); 59//==============================================================================; 60template < class T, unsigned int D>; 61inline VecExpr<BinaryOp<AddOp<T>, SVector<T,D>, SVector<T,D>, T>, T, D>; 62 operator+(const SVector<T,D>& lhs, const SVector<T,D>& rhs) {; 63 typedef BinaryOp<AddOp<T>, SVector<T,D>, SVector<T,D>, T> AddOpBinOp;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinaryOperators_8h_source.html:104,Load,Loading,104,doc/master/BinaryOperators_8h_source.html,https://root.cern,https://root.cern/doc/master/BinaryOperators_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/Dfactir.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Dfactir.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_Dfactir; 5#define ROOT_Math_Dfactir; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 02. Apr 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Determinant of a square matrix, needed for Dfinv(); 23// Code was taken from CERNLIB::kernlib dfact function, translated; 24// from FORTRAN to C++ and optimized.; 25//; 26// changes:; 27// 02 Apr 2001 (TG) creation; 28//; 29// ********************************************************************; 30 ; 31#include <cmath>; 32 ; 33namespace ROOT {; 34 ; 35 namespace Math {; 36 ; 37 ; 38/** Dfactir.; 39 Function to compute the determinant from a square matrix, Det(A) of; 40 dimension idim and order n. A working area ir is returned which is; 41 needed by the Dfinv routine.; 42 ; 43 @author T. Glebe; 44*/; 45template <class Matrix, unsigned int n, unsigned int idim>; 46bool Dfactir(Matrix& rhs, typename Matrix::value_type& det, unsigned int* ir); 47 // int *n, float *a, int *idim, int *ir, int *ifail, float *det, int *jfail); 48{; 49 ; 50#ifdef XXX; 51 if (idim < n || n <= 0) {; 52 return false;; 53 }; 54#endif; 55 ; 56 ; 57 /* Initialized data */; 58 typename Matrix::value_type* a = rhs.Array();; 59 ; 60 /* Local variables */; 61 unsigned int nxch, i, j, k, l;; 62 typename Matrix::value_type p, q, tf;; 63 ; 64 /* Parameter adjustments */; 65 a -= idim + 1;; 66 --ir;; 67 ; 68 /* Function Body */; 69 ; 70 // fact.inc; 71 nxch = 0;; 72 det = 1.;; 73 for (j = 1; j <= n; ++j) {; 74 const unsigned int j",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Dfactir_8h_source.html:96,Load,Loading,96,doc/master/Dfactir_8h_source.html,https://root.cern,https://root.cern/doc/master/Dfactir_8h_source.html,2,"['Load', 'optimiz']","['Loading', 'optimized']"
Performance,". ROOT: math/smatrix/inc/Math/Dfinv.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Dfinv.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_Dfinv; 5#define ROOT_Math_Dfinv; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 03. Apr 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Matrix inversion; 23// Code was taken from CERNLIB::kernlib dfinv function, translated; 24// from FORTRAN to C++ and optimized.; 25//; 26// changes:; 27// 03 Apr 2001 (TG) creation; 28//; 29// ********************************************************************; 30 ; 31 ; 32namespace ROOT {; 33 ; 34 namespace Math {; 35 ; 36 ; 37 ; 38 ; 39/** Dfinv.; 40 Function to compute the inverse of a square matrix (\f$A^{-1}\f$) of; 41 dimension \f$idim\f$ and order \f$n\f$. The routine Dfactir must be called; 42 before Dfinv!; 43 ; 44 @author T. Glebe; 45*/; 46template <class Matrix, unsigned int n, unsigned int idim>; 47bool Dfinv(Matrix& rhs, unsigned int* ir) {; 48#ifdef XXX; 49 if (idim < n || n <= 0 || n==1) {; 50 return false;; 51 }; 52#endif; 53 ; 54 typename Matrix::value_type* a = rhs.Array();; 55 ; 56 /* Local variables */; 57 unsigned int nxch, i, j, k, m, ij;; 58 unsigned int im2, nm1, nmi;; 59 typename Matrix::value_type s31, s34, ti;; 60 ; 61 /* Parameter adjustments */; 62 a -= idim + 1;; 63 --ir;; 64 ; 65 /* Function Body */; 66 ; 67 /* finv.inc */; 68 ; 69 a[idim + 2] = -a[(idim << 1) + 2] * (a[idim + 1] * a[idim + 2]);; 70 a[(idim << 1) + 1] = -a[(idim << 1) + 1];; 71 ; 72 if (n != 2) {; 73 for (i = 3; i <= n; ++i) {; 74 const unsigned int ii = i * idim;; 75 const unsigned int iii = i + ii;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Dfinv_8h_source.html:94,Load,Loading,94,doc/master/Dfinv_8h_source.html,https://root.cern,https://root.cern/doc/master/Dfinv_8h_source.html,2,"['Load', 'optimiz']","['Loading', 'optimized']"
Performance,". ROOT: math/smatrix/inc/Math/Expression.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Expression.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_Expression; 5#define ROOT_Math_Expression; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 19. Mar 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Expression Template Elements for SVector; 23//; 24// changes:; 25// 19 Mar 2001 (TG) creation; 26// 20 Mar 2001 (TG) added rows(), cols() to Expr; 27// 21 Mar 2001 (TG) added Expr::value_type; 28// 11 Apr 2001 (TG) rows(), cols() replaced by rows, cols; 29// 10 Okt 2001 (TG) added print() and operator<<() for Expr class; 30//; 31// ********************************************************************; 32 ; 33/**; 34\defgroup Expression Expression Template Classes; 35\ingroup SMatrixGroup; 36*/; 37 ; 38//==============================================================================; 39// Expr: class representing SVector expressions; 40//=============================================================================; 41 ; 42// modified BinaryOp with two extension BinaryOpCopyL and BinaryOpCopyR to store the; 43// object in BinaryOp by value and not reference. When used with constant BinaryOp reference give problems; 44// on some compilers (like Windows) where a temporary Constant object is ccreated and then destructed; 45 ; 46 ; 47#include <iomanip>; 48#include <iostream>; 49 ; 50namespace ROOT {; 51 ; 52 namespace Math {; 53 ; 54 ; 55 ; 56// template <class T, unsigned int D, unsigned int D2> class MatRepStd;; 57 ; 58/**; 59 Expression wrapper class for Vector objects; 60 ; 61 @ingro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Expression_8h_source.html:99,Load,Loading,99,doc/master/Expression_8h_source.html,https://root.cern,https://root.cern/doc/master/Expression_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/Functions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_Functions; 5#define ROOT_Math_Functions; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 16. Mar 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Functions which are not applied like a unary operator; 23//; 24// changes:; 25// 16 Mar 2001 (TG) creation; 26// 03 Apr 2001 (TG) minimum added, doc++ comments added; 27// 07 Apr 2001 (TG) Lmag2, Lmag added; 28// 19 Apr 2001 (TG) added #include <cmath>; 29// 24 Apr 2001 (TG) added sign(); 30// 26 Jul 2001 (TG) round() added; 31// 27 Sep 2001 (TG) added Expr declaration; 32//; 33// ********************************************************************; 34#include <cmath>; 35 ; 36#include ""Math/Expression.h""; 37 ; 38/**; 39\defgroup TempFunction Generic Template Functions; 40\ingroup SMatrixGroup; 41 ; 42 These functions apply for any type T, such as a scalar, a vector or a matrix.; 43*/; 44 ; 45/**; 46\defgroup VectFunction Vector Template Functions; 47\ingroup SMatrixGroup; 48 ; 49These functions apply to SVector types (and also to Vector expressions) and can; 50return a vector expression or; 51a scalar, like in the Dot product, or a matrix, like in the Tensor product; 52*/; 53 ; 54 ; 55namespace ROOT {; 56 ; 57 namespace Math {; 58 ; 59 ; 60 ; 61template <class T, unsigned int D> class SVector;; 62 ; 63 ; 64/** square; 65 Template function to compute \f$x\cdot x \f$, for any type T returning a type T; 66 ; 67 @ingroup TempFunction; 68 @author T. Glebe; 69*/; 70//======================",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/math_2smatrix_2inc_2Math_2Functions_8h_source.html:98,Load,Loading,98,doc/master/math_2smatrix_2inc_2Math_2Functions_8h_source.html,https://root.cern,https://root.cern/doc/master/math_2smatrix_2inc_2Math_2Functions_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/MatrixFunctions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MatrixFunctions.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_MatrixFunctions; 5#define ROOT_Math_MatrixFunctions; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 20. Mar 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Functions/Operators special to Matrix; 23//; 24// changes:; 25// 20 Mar 2001 (TG) creation; 26// 20 Mar 2001 (TG) Added Matrix * Vector multiplication; 27// 21 Mar 2001 (TG) Added transpose, product; 28// 11 Apr 2001 (TG) transpose() speed improvement by removing rows(), cols(); 29// through static members of Matrix and Expr class; 30//; 31// ********************************************************************; 32 ; 33 ; 34/**; 35\defgroup MatrixFunctions Matrix Template Functions; 36\ingroup SMatrixGroup; 37 ; 38These function apply to matrices (and also Matrix expression) and can return a; 39matrix expression of a particular defined type, like in the matrix multiplication or; 40a vector, like in the matrix-vector product or a scalar like in the Similarity; 41vector-matrix product.; 42 ; 43*/; 44 ; 45#include ""Math/BinaryOpPolicy.h""; 46#include ""Math/Expression.h""; 47#include ""Math/HelperOps.h""; 48#include ""Math/CholeskyDecomp.h""; 49 ; 50namespace ROOT {; 51 ; 52 namespace Math {; 53 ; 54 template <class T, unsigned int D>; 55 class SVector;; 56 ; 57#ifdef XXX; 58//==============================================================================; 59// SMatrix * SVector; 60//==============================================================================; 61templat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MatrixFunctions_8h_source.html:104,Load,Loading,104,doc/master/MatrixFunctions_8h_source.html,https://root.cern,https://root.cern/doc/master/MatrixFunctions_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/SMatrix.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SMatrix.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Author: T. Glebe, L. Moneta, J. Palacios 2005; 3 ; 4#ifndef ROOT_Math_SMatrix; 5#define ROOT_Math_SMatrix; 6 ; 7/*********************************************************************************; 8//; 9// source:; 10//; 11// type: source code; 12//; 13// created: 20. Mar 2001; 14//; 15// author: Thorsten Glebe; 16// HERA-B Collaboration; 17// Max-Planck-Institut fuer Kernphysik; 18// Saupfercheckweg 1; 19// 69117 Heidelberg; 20// Germany; 21// E-mail: T.Glebe@mpi-hd.mpg.de; 22//; 23// Description: A fixed size two dimensional Matrix class; 24//; 25// changes:; 26// 20 Mar 2001 (TG) creation; 27// 21 Mar 2001 (TG) added operators +=, -=, *=, /=; 28// 26 Mar 2001 (TG) place_in_row(), place_in_col() added; 29// 02 Apr 2001 (TG) non-const Array() added; 30// 03 Apr 2001 (TG) invert() added; 31// 07 Apr 2001 (TG) CTOR from SVertex (dyadic product) added; 32// 09 Apr 2001 (TG) CTOR from array added; 33// 11 Apr 2001 (TG) rows(), cols(), size() replaced by rows, cols, size; 34// 25 Mai 2001 (TG) row(), col() added; 35// 04 Sep 2001 (TG) moved inlined functions to .icc file; 36// 11 Jan 2002 (TG) added operator==(), operator!=(); 37// 14 Jan 2002 (TG) added more operator==(), operator!=(), operator>(), operator<(); 38//; 39***************************************************************************/; 40// for platform specific configurations; 41 ; 42#include ""Math/MConfig.h""; 43 ; 44#include <iosfwd>; 45 ; 46 ; 47/**; 48\defgroup SMatrixSVector Matrix and Vector classes; 49\ingroup SMatrixGroup; 50 ; 51Classes representing Matrices and Vectors of arbitrary type and dimension.; 52For a detailed description and usage examples see:; 53 ; 54 - \ref SVectorDoc; 55 - \ref SMatrixDoc; 56 - \ref MatVecFunctions; 57 ; 58*/; 59 ; 60 ; 61#include ""Math/Expression.h""; 62#includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SMatrix_8h_source.html:96,Load,Loading,96,doc/master/SMatrix_8h_source.html,https://root.cern,https://root.cern/doc/master/SMatrix_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/SMatrixDfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SMatrixDfwd.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_SMatrixDfwd; 5#define ROOT_Math_SMatrixDfwd; 6 ; 7namespace ROOT {; 8 ; 9namespace Math{; 10 ; 11 template <class T, unsigned int D1, unsigned int D2, class R> class SMatrix;; 12 ; 13 template <class T, unsigned int D1, unsigned int D2> class MatRepStd;; 14 template <class T, unsigned int D> class MatRepSym;; 15 ; 16 typedef SMatrix<double,2,2,MatRepStd<double,2,2> > SMatrix2D;; 17 typedef SMatrix<double,3,3,MatRepStd<double,3,3> > SMatrix3D;; 18 typedef SMatrix<double,4,4,MatRepStd<double,4,4> > SMatrix4D;; 19 typedef SMatrix<double,5,5,MatRepStd<double,5,5> > SMatrix5D;; 20 typedef SMatrix<double,6,6,MatRepStd<double,6,6> > SMatrix6D;; 21 typedef SMatrix<double,7,7,MatRepStd<double,7,7> > SMatrix7D;; 22 ; 23 ; 24 typedef SMatrix<double,2,2,MatRepSym<double,2> > SMatrixSym2D;; 25 typedef SMatrix<double,3,3,MatRepSym<double,3> > SMatrixSym3D;; 26 typedef SMatrix<double,4,4,MatRepSym<double,4> > SMatrixSym4D;; 27 typedef SMatrix<double,5,5,MatRepSym<double,5> > SMatrixSym5D;; 28 typedef SMatrix<double,6,6,MatRepSym<double,6> > SMatrixSym6D;; 29 typedef SMatrix<double,7,7,MatRepSym<double,7> > SMatrixSym7D;; 30 ; 31} // namespace Math; 32 ; 33} // namespace ROOT; 34 ; 35 ; 36#endif; ROOT::Math::SMatrixSMatrix: a generic fixed size D1 x D2 Matrix class.Definition SMatrix.h:101; MathNamespace for new Math classes and functions.; ROOT::Math::SMatrix5DSMatrix< double, 5, 5, MatRepStd< double, 5, 5 > > SMatrix5DDefinition SMatrixDfwd.h:19; ROOT::Math::SMatrix2DSMatrix< double, 2, 2, MatRepStd< double, 2, 2 > > SMatrix2DDefinition SMatrixDfwd.h:16; ROOT::Math::SMatrixSym6DSMatrix< double, 6, 6, MatRepSym< double, 6 > > SMatrixSym6DDefinition SMatrixDfwd.h:28; ROOT::Math::SMatrix4DSMatrix< double, 4, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SMatrixDfwd_8h_source.html:100,Load,Loading,100,doc/master/SMatrixDfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/SMatrixDfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/SMatrixFfwd.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SMatrixFfwd.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_SMatrixFfwd; 5#define ROOT_Math_SMatrixFfwd; 6 ; 7namespace ROOT {; 8 ; 9namespace Math{; 10 ; 11 template <class T, unsigned int D1, unsigned int D2, class R> class SMatrix;; 12 ; 13 template <class T, unsigned int D1, unsigned int D2> class MatRepStd;; 14 template <class T, unsigned int D> class MatRepSym;; 15 ; 16 typedef SMatrix<float,2,2,MatRepStd<float,2,2> > SMatrix2F;; 17 typedef SMatrix<float,3,3,MatRepStd<float,3,3> > SMatrix3F;; 18 typedef SMatrix<float,4,4,MatRepStd<float,4,4> > SMatrix4F;; 19 typedef SMatrix<float,5,5,MatRepStd<float,5,5> > SMatrix5F;; 20 typedef SMatrix<float,6,6,MatRepStd<float,6,6> > SMatrix6F;; 21 typedef SMatrix<float,7,7,MatRepStd<float,7,7> > SMatrix7F;; 22 ; 23 typedef SMatrix<float,2,2,MatRepSym<float,2> > SMatrixSym2F;; 24 typedef SMatrix<float,3,3,MatRepSym<float,3> > SMatrixSym3F;; 25 typedef SMatrix<float,4,4,MatRepSym<float,4> > SMatrixSym4F;; 26 typedef SMatrix<float,5,5,MatRepSym<float,5> > SMatrixSym5F;; 27 typedef SMatrix<float,6,6,MatRepSym<float,6> > SMatrixSym6F;; 28 typedef SMatrix<float,7,7,MatRepSym<float,7> > SMatrixSym7F;; 29 ; 30 ; 31} // namespace Math; 32 ; 33} // namespace ROOT; 34 ; 35#endif; ROOT::Math::SMatrixSMatrix: a generic fixed size D1 x D2 Matrix class.Definition SMatrix.h:101; MathNamespace for new Math classes and functions.; ROOT::Math::SMatrixSym6FSMatrix< float, 6, 6, MatRepSym< float, 6 > > SMatrixSym6FDefinition SMatrixFfwd.h:27; ROOT::Math::SMatrix7FSMatrix< float, 7, 7, MatRepStd< float, 7, 7 > > SMatrix7FDefinition SMatrixFfwd.h:21; ROOT::Math::SMatrixSym5FSMatrix< float, 5, 5, MatRepSym< float, 5 > > SMatrixSym5FDefinition SMatrixFfwd.h:26; ROOT::Math::SMatrix6FSMatrix< float, 6, 6, MatRepStd< float, 6, 6 > > SMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SMatrixFfwd_8h_source.html:100,Load,Loading,100,doc/master/SMatrixFfwd_8h_source.html,https://root.cern,https://root.cern/doc/master/SMatrixFfwd_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/SVector.icc Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. SVector.icc. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_SVector_icc; 5#define ROOT_Math_SVector_icc; 6// ********************************************************************; 7//; 8// source:; 9//; 10// type: source code; 11//; 12// created: 21. Mar 2001; 13//; 14// author: Thorsten Glebe; 15// HERA-B Collaboration; 16// Max-Planck-Institut fuer Kernphysik; 17// Saupfercheckweg 1; 18// 69117 Heidelberg; 19// Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: A fixed size Vector class; 23//; 24// changes:; 25// 21 Mar 2001 (TG) creation; 26// 26 Mar 2001 (TG) added place_at(); 27// 06 Apr 2001 (TG) CTORS added; 28// 07 Apr 2001 (TG) CTORS added; 29// 22 Aug 2001 (TG) CTOR(T*,len) added; 30// 14 Jan 2002 (TG) added operator==(), operator!=(), operator>(), operator<(); 31//; 32// ********************************************************************; 33 ; 34#ifndef ROOT_Math_SVector; 35#error ""Do not use SVector.icc directly. #include \""Math/SVector.h\"" instead.""; 36#endif // ROOT_Math_SVector; 37 ; 38#include <iostream>; 39#include <assert.h>; 40#include <algorithm>; 41 ; 42#include ""Math/StaticCheck.h""; 43 ; 44namespace ROOT {; 45 ; 46namespace Math {; 47 ; 48 ; 49//==============================================================================; 50// Constructors; 51//==============================================================================; 52template <class T, unsigned int D>; 53SVector<T,D>::SVector() {; 54 for(unsigned int i=0; i<D; ++i); 55 fArray[i] = 0;; 56}; 57 ; 58template <class T, unsigned int D>; 59template <class A>; 60SVector<T,D>::SVector(const VecExpr<A,T,D>& rhs) {; 61 operator=(rhs);; 62}; 63 ; 64template <class T, unsigned int D>; 65SVector<T,D>::SVector(const SVector<T,D>& rhs) {; 66 for(unsigned int i=0; i<D; ++",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SVector_8icc_source.html:98,Load,Loading,98,doc/master/SVector_8icc_source.html,https://root.cern,https://root.cern/doc/master/SVector_8icc_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/smatrix/inc/Math/UnaryOperators.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. UnaryOperators.h. Go to the documentation of this file. 1// @(#)root/smatrix:$Id$; 2// Authors: T. Glebe, L. Moneta 2005; 3 ; 4#ifndef ROOT_Math_UnaryOperators; 5#define ROOT_Math_UnaryOperators; 6//======================================================; 7//; 8// ATTENTION: This file was automatically generated,; 9// do not edit!; 10//; 11// author: Thorsten Glebe; 12// HERA-B Collaboration; 13// Max-Planck-Institut fuer Kernphysik; 14// Saupfercheckweg 1; 15// 69117 Heidelberg; 16// Germany; 17// E-mail: T.Glebe@mpi-hd.mpg.de; 18//; 19//======================================================; 20 ; 21#include <cmath>; 22 ; 23#include ""Math/Expression.h""; 24 ; 25namespace ROOT {; 26 ; 27 namespace Math {; 28 ; 29 ; 30 ; 31template <class T, unsigned int D> class SVector;; 32template <class T, unsigned int D1, unsigned int D2, class R> class SMatrix;; 33 ; 34 ; 35/**; 36 Unary Minus Operation Class; 37 ; 38 @ingroup Expression; 39 */; 40//==============================================================================; 41// Minus; 42//==============================================================================; 43template <class T>; 44class Minus {; 45public:; 46 static inline T apply(const T& rhs) {; 47 return -(rhs);; 48 }; 49};; 50 ; 51//==============================================================================; 52// operator- (Expr, unary); 53//==============================================================================; 54template <class A, class T, unsigned int D>; 55inline VecExpr<UnaryOp<Minus<T>, VecExpr<A,T,D>, T>, T, D>; 56 operator-(const VecExpr<A,T,D>& rhs) {; 57 typedef UnaryOp<Minus<T>, VecExpr<A,T,D>, T> MinusUnaryOp;; 58 ; 59 return VecExpr<MinusUnaryOp,T,D>(MinusUnaryOp(Minus<T>(),rhs));; 60}; 61 ; 62 ; 63/**; 64 Unary - operator v2 = -v1 .; 65 returning a vector expression; 66 ; 67 @ingroup VectFunction; 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/UnaryOperators_8h_source.html:103,Load,Loading,103,doc/master/UnaryOperators_8h_source.html,https://root.cern,https://root.cern/doc/master/UnaryOperators_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/unuran/inc/TUnuran.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnuran.h. Go to the documentation of this file. 1// @(#)root/unuran:$Id$; 2// Author: L. Moneta Tue Sep 26 16:25:09 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class TUnuran; 12 ; 13#ifndef ROOT_TUnuran; 14#define ROOT_TUnuran; 15 ; 16#include <string>; 17 ; 18#include ""TUnuranBaseDist.h""; 19 ; 20 ; 21class TUnuranContDist;; 22class TUnuranDiscrDist;; 23class TUnuranMultiContDist;; 24class TUnuranEmpDist;; 25 ; 26#include <memory>; 27 ; 28 ; 29/**; 30 ; 31 \class TUnuran; 32 \ingroup Unuran; 33 ; 34 TUnuran class.; 35 Interface to the UNU.RAN package for generating non uniform random; 36 numbers. This class wraps the UNU.RAN calls in C++ methods.; 37 It provides methods for initializing Unuran and then to sample the; 38 desired distribution.; 39 It provides support for initializing UNU.RAN in these following way (various signatures; 40 for TUnuran::Init); 41 - with string API via TUnuran::Init passing the distribution type and the method; 42 - using a one-dimensional distribution object defined by TUnuranContDist; 43 - using a multi-dimensional distribution object defined by TUnuranMultiContDist; 44 - using a discrete one-dimensional distribution object defined by TUnuranDiscrDist; 45 - using an empirical distribution defined by TUnuranEmpDist; 46 - using pre-defined distributions. Presently only support for Poisson (TUnuran::InitPoisson); 47 and Binomial (TUnuran::InitBinomial) are provided. Other distributions can however be generated; 48 using the previous methods (in particular via the string API); 49 ; 50 The sampling is provided via these methods:; 51 - TUnuran::Sample() returns a double for all one-dimensional distrib",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnuran_8h_source.html:90,Load,Loading,90,doc/master/TUnuran_8h_source.html,https://root.cern,https://root.cern/doc/master/TUnuran_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/unuran/src/TUnuran.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnuran.cxx. Go to the documentation of this file. 1// @(#)root/unuran:$Id$; 2// Authors: L. Moneta, J. Leydold Tue Sep 26 16:25:09 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class TUnuran; 12 ; 13#include ""TUnuran.h""; 14 ; 15#include ""TUnuranContDist.h""; 16#include ""TUnuranMultiContDist.h""; 17#include ""TUnuranDiscrDist.h""; 18#include ""TUnuranEmpDist.h""; 19 ; 20#include ""UnuranRng.h""; 21#include ""UnuranDistrAdapter.h""; 22 ; 23#include ""TRandom.h""; 24 ; 25#include <cassert>; 26 ; 27#include <unuran.h>; 28 ; 29#include ""TError.h""; 30 ; 31 ; 32TUnuran::TUnuran(TRandom * r, unsigned int debugLevel) :; 33 fGen(nullptr),; 34 fUdistr(nullptr),; 35 fUrng(nullptr),; 36 fRng(r); 37{; 38 // constructor implementation with a ROOT random generator; 39 // if no generator is given the ROOT default is used; 40 if (fRng == nullptr) fRng = gRandom;; 41 // set debug level at global level; 42 // (should be in a static initialization function of the library ? ); 43 if ( debugLevel > 1); 44 unur_set_default_debug(UNUR_DEBUG_ALL);; 45 else if (debugLevel == 1); 46 unur_set_default_debug(UNUR_DEBUG_INIT);; 47 else; 48 unur_set_default_debug(UNUR_DEBUG_OFF);; 49 ; 50}; 51 ; 52 ; 53TUnuran::~TUnuran(); 54{; 55 // Destructor implementation; 56 if (fGen != nullptr) unur_free(fGen);; 57 if (fUrng != nullptr) unur_urng_free(fUrng);; 58 // we can delete now the distribution object; 59 if (fUdistr != nullptr) unur_distr_free(fUdistr);; 60}; 61 ; 62bool TUnuran::Init(const std::string & dist, const std::string & method); 63{; 64 // initialize with a string; 65 std::string s = dist + "" & "" + method;; 66 fGen = unur_str2gen(s.c_str() );; 67 if (fGen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnuran_8cxx_source.html:92,Load,Loading,92,doc/master/TUnuran_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnuran_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/vecops/inc/ROOT/RVec.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RVec.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Enric Tejedor, Danilo Piparo CERN 04/2021; 2// Implementation adapted from from llvm::SmallVector.; 3// See /math/vecops/ARCHITECTURE.md for more information.; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_RVEC; 14#define ROOT_RVEC; 15 ; 16#if __cplusplus > 201402L; 17#define R__RVEC_NODISCARD [[nodiscard]]; 18#else; 19#define R__RVEC_NODISCARD; 20#endif; 21 ; 22#ifdef _WIN32; 23 #ifndef M_PI; 24 #ifndef _USE_MATH_DEFINES; 25 #define _USE_MATH_DEFINES; 26 #endif; 27 #include <math.h>; 28 #undef _USE_MATH_DEFINES; 29 #endif; 30 #define _VECOPS_USE_EXTERN_TEMPLATES false; 31#else; 32 #define _VECOPS_USE_EXTERN_TEMPLATES true; 33#endif; 34 ; 35#include <Rtypes.h> // R__CLING_PTRCHECK; 36#include <TError.h> // R__ASSERT; 37 ; 38#include <algorithm>; 39#include <cmath>; 40#include <cstring>; 41#include <limits> // for numeric_limits; 42#include <memory> // uninitialized_value_construct; 43#include <new>; 44#include <numeric> // for inner_product; 45#include <sstream>; 46#include <stdexcept>; 47#include <string>; 48#include <tuple>; 49#include <type_traits>; 50#include <utility>; 51#include <vector>; 52 ; 53#ifdef R__HAS_VDT; 54#include <vdt/vdtMath.h>; 55#endif; 56 ; 57 ; 58namespace ROOT {; 59 ; 60namespace VecOps {; 61template<typename T>; 62class RVec;; 63}; 64 ; 65namespace Internal {; 66namespace VecOps {; 67 ; 68template<typename T>; 69using RVec = ROOT::VecOps::RVec<T>;; 70 ; 71// clang-format off; 72template <typena",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVec_8hxx_source.html:94,Load,Loading,94,doc/master/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RVec_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: math/vecops/inc/ROOT/RVec.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RVec.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Enric Tejedor, Danilo Piparo CERN 04/2021; 2// Implementation adapted from from llvm::SmallVector.; 3// See /math/vecops/ARCHITECTURE.md for more information.; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_RVEC; 14#define ROOT_RVEC; 15 ; 16#if __cplusplus > 201402L; 17#define R__RVEC_NODISCARD [[nodiscard]]; 18#else; 19#define R__RVEC_NODISCARD; 20#endif; 21 ; 22#ifdef _WIN32; 23 #ifndef M_PI; 24 #ifndef _USE_MATH_DEFINES; 25 #define _USE_MATH_DEFINES; 26 #endif; 27 #include <math.h>; 28 #undef _USE_MATH_DEFINES; 29 #endif; 30 #define _VECOPS_USE_EXTERN_TEMPLATES false; 31#else; 32 #define _VECOPS_USE_EXTERN_TEMPLATES true; 33#endif; 34 ; 35#include <Rtypes.h> // R__CLING_PTRCHECK; 36#include <TError.h> // R__ASSERT; 37 ; 38#include <algorithm>; 39#include <cmath>; 40#include <cstring>; 41#include <limits> // for numeric_limits; 42#include <memory> // uninitialized_value_construct; 43#include <new>; 44#include <numeric> // for inner_product; 45#include <sstream>; 46#include <stdexcept>; 47#include <string>; 48#include <tuple>; 49#include <type_traits>; 50#include <utility>; 51#include <vector>; 52 ; 53#ifdef R__HAS_VDT; 54#include <vdt/vdtMath.h>; 55#endif; 56 ; 57 ; 58namespace ROOT {; 59 ; 60namespace VecOps {; 61template<typename T>; 62class RVec;; 63}; 64 ; 65namespace Internal {; 66namespace VecOps {; 67 ; 68template<typename T>; 69using RVec = ROOT::VecOps::RVec<T>;; 70 ; 71// clang-format off; 72template <typenam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RVec_8hxx_source.html:93,Load,Loading,93,doc/v632/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RVec_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: net/auth/src/rsalib.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; rsalib.cxx File Reference. #include <stdio.h>; #include <string.h>; #include <ctype.h>; #include <stdlib.h>; #include <errno.h>; #include ""rsaaux.h""; #include ""rsalib.h"". Include dependency graph for rsalib.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; void num_init ();  ; void rsa_assign (rsa_NUMBER *d, rsa_NUMBER *s);  ; int rsa_cmp (rsa_NUMBER *c1, rsa_NUMBER *c2);  ; int rsa_decode (char *bufin, int lin, rsa_NUMBER n, rsa_NUMBER e);  ; int rsa_encode (char *bufin, int lin, rsa_NUMBER n, rsa_NUMBER e);  ; int rsa_encode_size (rsa_NUMBER n);  ; rsa_NUMBER rsa_genprim (int len, int prob);  ; int rsa_genrsa (rsa_NUMBER p1, rsa_NUMBER p2, rsa_NUMBER *n, rsa_NUMBER *e, rsa_NUMBER *d);  ; int rsa_num_fget (rsa_NUMBER *n, FILE *f);  ; int rsa_num_fput (rsa_NUMBER *n, FILE *f);  ; int rsa_num_sget (rsa_NUMBER *n, char *s);  ; int rsa_num_sput (rsa_NUMBER *n, char *s, int l);  . Variables; static int g_clear_siz;  ; static int g_enc_siz;  ; static rsa_NUMBER gbits [9];  ; static const char * gHEX =""0123456789ABCDEF"";  ; static const char * ghex =""0123456789abcdef"";  ; static int ginit = 0;  ; static rsa_NUMBER gint16 [16];  ; int gLog = 0;  ; int kMAXT = 100;  . Function Documentation. ◆ num_init(). void num_init ; (; ). Definition at line 258 of file rsalib.cxx. ◆ rsa_assign(). void rsa_assign ; (; rsa_NUMBER * ; d, . rsa_NUMBER * ; s . ). Definition at line 487 of file rsalib.cxx. ◆ rsa_cmp(). int rsa_cmp ; (; rsa_NUMBER * ; c1, . rsa_NUMBER * ; c2 . ). Definition at line 476 of file rsalib.cxx. ◆ rsa_decode(). int rsa_decode ; (; char * ; bufin, . int ; lin, . rsa_NUMBER ; n, . rsa_NUMBER ; e . ). Definition at line 177 of file rsalib.cxx. ◆ rsa_encode(). int rsa_encode ; (; char * ; bufin, . int ; lin, . rsa_NUMBER ; n, . rsa_NUMBER ; e . ). Definition at line 13",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rsalib_8cxx.html:91,Load,Loading,91,doc/master/rsalib_8cxx.html,https://root.cern,https://root.cern/doc/master/rsalib_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: net/auth/src/rsalib.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rsalib.cxx. Go to the documentation of this file. 1/* @(#)root/auth:$Id$ */; 2/* Author: Martin Nicolay 22/11/1988 */; 3 ; 4/******************************************************************************; 5Copyright (C) 2006 Martin Nicolay <m.nicolay@osm-gmbh.de>; 6 ; 7This library is free software; you can redistribute it and/or; 8modify it under the terms of the GNU Lesser General Public; 9License as published by the Free Software Foundation; either; 10version 2.1 of the License, or (at your option) any later; 11version.; 12 ; 13This library is distributed in the hope that it will be useful,; 14but WITHOUT ANY WARRANTY; without even the implied warranty of; 15MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; 16GNU Lesser General Public License for more details.; 17 ; 18You should have received a copy of the GNU Lesser General Public; 19License along with this library; if not, write to the Free; 20Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,; 21MA 02110-1301 USA; 22******************************************************************************/; 23 ; 24/*******************************************************************************; 25* *; 26* Simple RSA public key code. *; 27* Adaptation in library for ROOT by G. Ganis, July 2003 *; 28* (gerardo.ganis@cern.ch) *; 29* *; 30*******************************************************************************/; 31 ; 32#include <stdio.h>; 33#include <string.h>; 34#include <ctype.h>; 35#include <stdlib.h>; 36#include <errno.h>; 37 ; 38#include ""rsaaux.h""; 39#include ""rsalib.h""; 40 ; 41static int g_clear_siz; /* clear-text blocksize */; 42static int g_enc_siz; /* encoded blocksize */; 43 /* g_clear_siz < g_enc_siz */; 44 ; 45int gLog = 0;; 46int kMAXT = 100;; 47 ; 48rsa_NUMBER rsa_genprim(int len, int prob); 49{; 50 rsa_NUMBER a_three,a_four;; 51 rsa_NUMBER prim;; 52 int i;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rsalib_8cxx_source.html:88,Load,Loading,88,doc/master/rsalib_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rsalib_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: net/http/civetweb/civetweb.c File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Typedefs |; Enumerations |; Functions |; Variables ; civetweb.c File Reference. #include ""civetweb.h""; #include <errno.h>; #include <fcntl.h>; #include <signal.h>; #include <stdlib.h>; #include <sys/stat.h>; #include <sys/types.h>; #include <stdint.h>; #include <inttypes.h>; #include <arpa/inet.h>; #include <ctype.h>; #include <dirent.h>; #include <grp.h>; #include <limits.h>; #include <netdb.h>; #include <netinet/in.h>; #include <netinet/tcp.h>; #include <pthread.h>; #include <pwd.h>; #include <stdarg.h>; #include <stddef.h>; #include <stdio.h>; #include <string.h>; #include <sys/poll.h>; #include <sys/socket.h>; #include <sys/time.h>; #include <sys/utsname.h>; #include <sys/wait.h>; #include <time.h>; #include <unistd.h>; #include <dlfcn.h>; #include ""md5.inl""; #include ""openssl_dl.inl""; #include ""response.inl""; #include ""handle_form.inl"". Include dependency graph for civetweb.c:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ah;  ; struct  cgi_environment;  ; struct  de;  ; struct  dir_scan_data;  ; struct  mg_connection;  ; struct  mg_context;  ; struct  mg_domain_context;  ; struct  mg_file;  ; struct  mg_file_access;  ; struct  mg_file_stat;  ; struct  mg_handler_info;  ; struct  mg_http_method_info;  ; struct  mg_workerTLS;  ; struct  process_control_data;  ; struct  read_auth_file_struct;  ; struct  socket;  ; union  usa;  ; struct  vec;  ; struct  websocket_client_thread_data;  . Macros; #define __STDC_FORMAT_MACROS   /* <inttypes.h> wants this for C++ */;  ; #define __STDC_LIMIT_MACROS   /* C++ wants that for INT64_MAX */;  ; #define _DARWIN_UNLIMITED_SELECT;  ; #define _FILE_OFFSET_BITS   64 /* Use 64-bit file offsets by default */;  ; #define _GNU_SOURCE   /* for setgroups(), pthread_setname_np() */;  ; #define _LARGEFILE_SOURCE   /* For fseeko(), ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c.html:96,Load,Loading,96,doc/master/civetweb_8c.html,https://root.cern,https://root.cern/doc/master/civetweb_8c.html,1,['Load'],['Loading']
Performance,". ROOT: net/http/civetweb/civetweb.c Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. civetweb.c. Go to the documentation of this file. 1/* Copyright (c) 2013-2021 the Civetweb developers; 2 * Copyright (c) 2004-2013 Sergey Lyubka; 3 *; 4 * Permission is hereby granted, free of charge, to any person obtaining a copy; 5 * of this software and associated documentation files (the ""Software""), to deal; 6 * in the Software without restriction, including without limitation the rights; 7 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; 8 * copies of the Software, and to permit persons to whom the Software is; 9 * furnished to do so, subject to the following conditions:; 10 *; 11 * The above copyright notice and this permission notice shall be included in; 12 * all copies or substantial portions of the Software.; 13 *; 14 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; 15 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; 16 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; 17 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; 18 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; 19 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; 20 * THE SOFTWARE.; 21 */; 22 ; 23#if defined(__GNUC__) || defined(__MINGW32__); 24#define GCC_VERSION \; 25 (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__); 26#if GCC_VERSION >= 40500; 27/* gcc diagnostic pragmas available */; 28#define GCC_DIAGNOSTIC; 29#endif; 30#endif; 31 ; 32#if defined(GCC_DIAGNOSTIC); 33/* Disable unused macros warnings - not all defines are required; 34 * for all systems and all compilers. */; 35#pragma GCC diagnostic ignored ""-Wunused-macros""; 36/* A padding warning is just plain useless */; 37#pragma GCC diagnostic ignored ""-Wpadded""; 38#endif; 39 ; 40#if defined(__clang__",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:93,Load,Loading,93,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['Load'],['Loading']
Performance,". ROOT: net/http/civetweb/civetweb.c Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. civetweb.c. Go to the documentation of this file. 1/* Copyright (c) 2013-2021 the Civetweb developers; 2 * Copyright (c) 2004-2013 Sergey Lyubka; 3 *; 4 * Permission is hereby granted, free of charge, to any person obtaining a copy; 5 * of this software and associated documentation files (the ""Software""), to deal; 6 * in the Software without restriction, including without limitation the rights; 7 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; 8 * copies of the Software, and to permit persons to whom the Software is; 9 * furnished to do so, subject to the following conditions:; 10 *; 11 * The above copyright notice and this permission notice shall be included in; 12 * all copies or substantial portions of the Software.; 13 *; 14 * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; 15 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; 16 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; 17 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; 18 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; 19 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; 20 * THE SOFTWARE.; 21 */; 22 ; 23#if defined(__GNUC__) || defined(__MINGW32__); 24#define GCC_VERSION \; 25 (__GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__); 26#if GCC_VERSION >= 40500; 27/* gcc diagnostic pragmas available */; 28#define GCC_DIAGNOSTIC; 29#endif; 30#endif; 31 ; 32#if defined(GCC_DIAGNOSTIC); 33/* Disable unused macros warnings - not all defines are required; 34 * for all systems and all compilers. */; 35#pragma GCC diagnostic ignored ""-Wunused-macros""; 36/* A padding warning is just plain useless */; 37#pragma GCC diagnostic ignored ""-Wpadded""; 38#endif; 39 ; 40#if defined(__clang__)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:92,Load,Loading,92,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['Load'],['Loading']
Performance,". ROOT: net/http/civetweb/md5.inl File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Typedefs |; Functions ; md5.inl File Reference. #include <stdint.h>; #include <string.h>. Include dependency graph for md5.inl:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  md5_state_s;  . Macros; #define BYTE_ORDER   (0);  ; #define F(x, y, z)   (((x) & (y)) | (~(x) & (z)));  ; #define G(x, y, z)   (((x) & (z)) | ((y) & ~(z)));  ; #define H(x, y, z)   ((x) ^ (y) ^ (z));  ; #define I(x, y, z)   ((y) ^ ((x) | ~(z)));  ; #define md5_INCLUDED;  ; #define ROTATE_LEFT(x, n)   (((x) << (n)) | ((x) >> (32 - (n))));  ; #define SET(a, b, c, d, k, s, Ti);  ; #define SET(a, b, c, d, k, s, Ti);  ; #define SET(a, b, c, d, k, s, Ti);  ; #define SET(a, b, c, d, k, s, Ti);  ; #define T1   /* 0xd76aa478 */ (T_MASK ^ 0x28955b87);  ; #define T10   /* 0x8b44f7af */ (T_MASK ^ 0x74bb0850);  ; #define T11   /* 0xffff5bb1 */ (T_MASK ^ 0x0000a44e);  ; #define T12   /* 0x895cd7be */ (T_MASK ^ 0x76a32841);  ; #define T13   (0x6b901122);  ; #define T14   /* 0xfd987193 */ (T_MASK ^ 0x02678e6c);  ; #define T15   /* 0xa679438e */ (T_MASK ^ 0x5986bc71);  ; #define T16   (0x49b40821);  ; #define T17   /* 0xf61e2562 */ (T_MASK ^ 0x09e1da9d);  ; #define T18   /* 0xc040b340 */ (T_MASK ^ 0x3fbf4cbf);  ; #define T19   (0x265e5a51);  ; #define T2   /* 0xe8c7b756 */ (T_MASK ^ 0x173848a9);  ; #define T20   /* 0xe9b6c7aa */ (T_MASK ^ 0x16493855);  ; #define T21   /* 0xd62f105d */ (T_MASK ^ 0x29d0efa2);  ; #define T22   (0x02441453);  ; #define T23   /* 0xd8a1e681 */ (T_MASK ^ 0x275e197e);  ; #define T24   /* 0xe7d3fbc8 */ (T_MASK ^ 0x182c0437);  ; #define T25   (0x21e1cde6);  ; #define T26   /* 0xc33707d6 */ (T_MASK ^ 0x3cc8f829);  ; #define T27   ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/md5_8inl.html:93,Load,Loading,93,doc/master/md5_8inl.html,https://root.cern,https://root.cern/doc/master/md5_8inl.html,1,['Load'],['Loading']
Performance,". ROOT: net/http/civetweb/md5.inl Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. md5.inl. Go to the documentation of this file. 1/*; 2 * This an amalgamation of md5.c and md5.h into a single file; 3 * with all static declaration to reduce linker conflicts; 4 * in Civetweb.; 5 *; 6 * The MD5_STATIC declaration was added to facilitate static; 7 * inclusion.; 8 * No Face Press, LLC; 9 */; 10 ; 11/* $Id: md5.h,v 1.4 2002/04/13 19:20:28 lpd Exp $ */; 12/*; 13 Independent implementation of MD5 (RFC 1321).; 14 ; 15 This code implements the MD5 Algorithm defined in RFC 1321, whose; 16 text is available at; 17 http://www.ietf.org/rfc/rfc1321.txt; 18 The code is derived from the text of the RFC, including the test suite; 19 (section A.5) but excluding the rest of Appendix A. It does not include; 20 any code or documentation that is identified in the RFC as being; 21 copyrighted.; 22 ; 23 The original and principal author of md5.h is L. Peter Deutsch; 24 <ghost@aladdin.com>. Other authors are noted in the change history; 25 that follows (in reverse chronological order):; 26 ; 27 2002-04-13 lpd Removed support for non-ANSI compilers; removed; 28 references to Ghostscript; clarified derivation from RFC 1321;; 29 now handles byte order either statically or dynamically.; 30 1999-11-04 lpd Edited comments slightly for automatic TOC extraction.; 31 1999-10-18 lpd Fixed typo in header comment (ansi2knr rather than md5);; 32 added conditionalization for C++ compilation from Martin; 33 Purschke <purschke@bnl.gov>.; 34 1999-05-03 lpd Original version.; 35 */; 36 ; 37#if !defined(md5_INCLUDED); 38#define md5_INCLUDED; 39 ; 40/*; 41 * This package supports both compile-time and run-time determination of CPU; 42 * byte order. If ARCH_IS_BIG_ENDIAN is defined as 0, the code will be; 43 * compiled to run only on little-endian CPUs; if ARCH_IS_BIG_ENDIAN is; 44 * defined as non-zero, the code will be compiled to run only on big-endian; 45 * CPUs; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/md5_8inl_source.html:90,Load,Loading,90,doc/master/md5_8inl_source.html,https://root.cern,https://root.cern/doc/master/md5_8inl_source.html,1,['Load'],['Loading']
Performance,". ROOT: net/http/civetweb/sha1.inl File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Functions ; sha1.inl File Reference. #include <stdint.h>; #include <string.h>. Include dependency graph for sha1.inl:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; union  CHAR64LONG16;  ; struct  SHA_CTX;  . Macros; #define blk(block, i);  ; #define R0(v, w, x, y, z, i);  ; #define R1(v, w, x, y, z, i);  ; #define R2(v, w, x, y, z, i);  ; #define R3(v, w, x, y, z, i);  ; #define R4(v, w, x, y, z, i);  ; #define rol(value, bits)   (((value) << (bits)) | ((value) >> (32 - (bits))));  ; #define SHA1_DIGEST_SIZE   20;  . Functions; static uint32_t blk0 (CHAR64LONG16 *block, int i);  ; SHA_API void SHA1_Final (unsigned char *digest, SHA_CTX *context);  ; SHA_API void SHA1_Init (SHA_CTX *context);  ; static void SHA1_Transform (uint32_t state[5], const uint8_t buffer[64]);  ; SHA_API void SHA1_Update (SHA_CTX *context, const uint8_t *data, const uint32_t len);  . Macro Definition Documentation. ◆ blk. #define blk; (;  ; block, .  ; i . ). Value: ((block)->l[(i)&15] = \; rol((block)->l[((i) + 13) & 15] ^ (block)->l[((i) + 8) & 15] \; ^ (block)->l[((i) + 2) & 15] ^ (block)->l[(i)&15], \; 1)); lTLine lDefinition textangle.C:4. Definition at line 124 of file sha1.inl. ◆ R0. #define R0; (;  ; v, .  ; w, .  ; x, .  ; y, .  ; z, .  ; i . ). Value: z += ((w & (x ^ y)) ^ y) + blk0(block, i) + 0x5A827999 + rol(v, 5); \; w = rol(w, 30);; blk0#define blk0(i)Definition RSha256.hxx:93; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; v@ vDefinition rootcling_impl.cxx:3699; rol#define rol(value, bits)Definition sha1.inl:100. Definition at line 131 of file sha1.inl. ◆ R1. #define R1; (;  ; v, .  ; w, .  ; x, .  ; y, .  ; z, .  ; i . ). Value: z += ((w & (x ^ y)) ^ y) + blk(block, i) + 0x5A827999 + rol(v, 5); \; w ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/sha1_8inl.html:94,Load,Loading,94,doc/master/sha1_8inl.html,https://root.cern,https://root.cern/doc/master/sha1_8inl.html,1,['Load'],['Loading']
Performance,". ROOT: net/http/inc/THttpServer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THttpServer.h. Go to the documentation of this file. 1// $Id$; 2// Author: Sergey Linev 21/12/2013; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_THttpServer; 13#define ROOT_THttpServer; 14 ; 15#include ""TNamed.h""; 16#include ""TList.h""; 17#include ""THttpCallArg.h""; 18 ; 19#include <mutex>; 20#include <map>; 21#include <string>; 22#include <memory>; 23#include <queue>; 24#include <thread>; 25#include <vector>; 26 ; 27class THttpEngine;; 28class THttpTimer;; 29class TRootSniffer;; 30 ; 31class THttpServer : public TNamed {; 32 ; 33protected:; 34 TList fEngines; ///<! engines which runs http server; 35 std::unique_ptr<THttpTimer> fTimer; ///<! timer used to access main thread; 36 std::unique_ptr<TRootSniffer> fSniffer; ///<! sniffer provides access to ROOT objects hierarchy; 37 Bool_t fTerminated{kFALSE}; ///<! termination flag, disables all requests processing; 38 Long_t fMainThrdId{0}; ///<! id of the thread for processing requests; 39 Long_t fProcessingThrdId{0}; ///<! id of the thread where events are recently processing; 40 Bool_t fOwnThread{kFALSE}; ///<! true when specialized thread allocated for processing requests; 41 std::thread fThrd; ///<! own thread; 42 Bool_t fWSOnly{kFALSE}; ///<! when true, handle only websockets / longpoll engine; 43 ; 44 TString fJSROOTSYS; ///<! location of local JSROOT files; 45 TString fTopName{""ROOT""}; ///<! name of top folder, default - ""ROOT""; 46 TString fJSROOT; ///<! location of external JSROOT files; 47 ; 48 std::map<std::string, std::string> fLocations; //",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THttpServer_8h_source.html:91,Load,Loading,91,doc/master/THttpServer_8h_source.html,https://root.cern,https://root.cern/doc/master/THttpServer_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: net/http/src/THttpServer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THttpServer.cxx. Go to the documentation of this file. 1// $Id$; 2// Author: Sergey Linev 21/12/2013; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""THttpServer.h""; 13 ; 14#include ""TThread.h""; 15#include ""TTimer.h""; 16#include ""TSystem.h""; 17#include ""TROOT.h""; 18#include ""TUrl.h""; 19#include ""TEnv.h""; 20#include ""TError.h""; 21#include ""TClass.h""; 22#include ""RConfigure.h""; 23#include ""TRegexp.h""; 24#include ""TObjArray.h""; 25 ; 26#include ""THttpEngine.h""; 27#include ""THttpLongPollEngine.h""; 28#include ""THttpWSHandler.h""; 29#include ""TRootSniffer.h""; 30#include ""TRootSnifferStore.h""; 31#include ""TCivetweb.h""; 32#include ""TFastCgi.h""; 33 ; 34#include <chrono>; 35#include <cstdlib>; 36#include <cstring>; 37#include <fstream>; 38#include <memory>; 39#include <string>; 40#include <thread>; 41 ; 42class THttpTimer : public TTimer {; 43 Long_t fNormalTmout{0};; 44 Bool_t fSlow{kFALSE};; 45 Int_t fSlowCnt{0};; 46 ; 47public:; 48 THttpServer &fServer; ///!< server processing requests; 49 ; 50 /// constructor; 51 THttpTimer(Long_t milliSec, Bool_t mode, THttpServer &serv) : TTimer(milliSec, mode), fNormalTmout(milliSec), fServer(serv) {}; 52 ; 53 void SetSlow(Bool_t flag); 54 {; 55 fSlow = flag;; 56 fSlowCnt = 0;; 57 Long_t ms = fNormalTmout;; 58 if (fSlow) {; 59 if (ms < 100); 60 ms = 500;; 61 else if (ms < 500); 62 ms = 3000;; 63 else; 64 ms = 10000;; 65 }; 66 ; 67 SetTime(ms);; 68 }; 69 Bool_t IsSlow() const { return fSlow; }; 70 ; 71 /// timeout handler; 72 /// used to process http requests in main ROOT ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THttpServer_8cxx_source.html:93,Load,Loading,93,doc/master/THttpServer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THttpServer_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: object Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. object Class Reference. Inheritance diagram for object:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this class was generated from the following file:; geom/gdml/ROOTwriter.py. object. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classobject.html:75,Load,Loading,75,doc/master/classobject.html,https://root.cern,https://root.cern/doc/master/classobject.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofit/src/RooLagrangianMorphFunc.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; RooLagrangianMorphFunc.cxx File Reference. #include ""Riostream.h""; #include ""RooAbsCollection.h""; #include ""RooArgList.h""; #include ""RooArgProxy.h""; #include ""RooArgSet.h""; #include ""RooBinning.h""; #include ""RooDataHist.h""; #include ""RooFormulaVar.h""; #include ""RooHistFunc.h""; #include ""RooLagrangianMorphFunc.h""; #include ""RooLinearCombination.h""; #include ""RooParamHistFunc.h""; #include ""RooProduct.h""; #include ""RooRealVar.h""; #include ""RooWorkspace.h""; #include ""RooFactoryWSTool.h""; #include ""ROOT/StringUtils.hxx""; #include ""TFile.h""; #include ""TFolder.h""; #include ""TH1.h""; #include ""TMap.h""; #include ""TParameter.h""; #include ""TRandom3.h""; #include <algorithm>; #include <array>; #include <cmath>; #include <cstddef>; #include <iostream>; #include <limits>; #include <map>; #include <memory>; #include <sstream>; #include <stdexcept>; #include <type_traits>; #include <typeinfo>; #include ""TDecompLU.h"". Include dependency graph for RooLagrangianMorphFunc.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  RooLagrangianMorphFunc::CacheElem;  ; struct  is_specialization< Test, Ref >;  ; struct  is_specialization< Ref< Args... >, Ref >;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define NaN   std::numeric_limits<double>::quiet_NaN();  . Typedefs; typedef TMatrixD Matrix;  . Functions; Matrix diagMatrix (size_t n);  create a new diagonal matrix of size n ;  ; double invertMatrix (const Matrix &matrix, Matrix &inverse);  ; TMatrixD makeRootMatrix (const Matrix &in);  convert a matrix into a TMatrixD ;  ; Matrix makeSuperMatrix (const TMatrixD &in)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooLagrangianMorphFunc_8cxx.html:112,Load,Loading,112,doc/master/RooLagrangianMorphFunc_8cxx.html,https://root.cern,https://root.cern/doc/master/RooLagrangianMorphFunc_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofit/src/RooLagrangianMorphFunc.cxx File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Macros |; Typedefs |; Functions |; Variables ; RooLagrangianMorphFunc.cxx File Reference. #include ""Riostream.h""; #include ""RooAbsCollection.h""; #include ""RooArgList.h""; #include ""RooArgProxy.h""; #include ""RooArgSet.h""; #include ""RooBinning.h""; #include ""RooDataHist.h""; #include ""RooFormulaVar.h""; #include ""RooHistFunc.h""; #include ""RooLagrangianMorphFunc.h""; #include ""RooLinearCombination.h""; #include ""RooParamHistFunc.h""; #include ""RooProduct.h""; #include ""RooRealVar.h""; #include ""RooWorkspace.h""; #include ""RooFactoryWSTool.h""; #include ""ROOT/StringUtils.hxx""; #include ""TFile.h""; #include ""TFolder.h""; #include ""TH1.h""; #include ""TMap.h""; #include ""TParameter.h""; #include ""TRandom3.h""; #include <algorithm>; #include <array>; #include <cmath>; #include <cstddef>; #include <iostream>; #include <limits>; #include <map>; #include <memory>; #include <sstream>; #include <stdexcept>; #include <type_traits>; #include <typeinfo>; #include ""TDecompLU.h"". Include dependency graph for RooLagrangianMorphFunc.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  RooLagrangianMorphFunc::CacheElem;  ; struct  is_specialization< Test, Ref >;  ; struct  is_specialization< Ref< Args... >, Ref >;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define NaN   std::numeric_limits<double>::quiet_NaN();  . Typedefs; typedef TMatrixD Matrix;  . Functions; Matrix diagMatrix (size_t n);  create a new diagonal matrix of size n ;  ; double invertMatrix (const Matrix &matrix, Matrix &inverse);  ; TMatrixD makeRootMatrix (const Matrix &in);  convert a matrix into a TMatrixD ;  ; Matrix makeSuperMatrix (const TMatrixD &in);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RooLagrangianMorphFunc_8cxx.html:111,Load,Loading,111,doc/v632/RooLagrangianMorphFunc_8cxx.html,https://root.cern,https://root.cern/doc/v632/RooLagrangianMorphFunc_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofitcore/inc/RooAbsArg.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; RooAbsArg.h File Reference. #include <RooAbsCache.h>; #include <RooFit/Config.h>; #include <RooFit/Detail/NormalizationHelpers.h>; #include <RooLinkedListIter.h>; #include <RooNameReg.h>; #include <RooPrintable.h>; #include <RooSTLRefCountList.h>; #include <RooStringView.h>; #include <TNamed.h>; #include <TObjArray.h>; #include <TRefArray.h>; #include <ROOT/RConfig.hxx>; #include <deque>; #include <iostream>; #include <map>; #include <memory>; #include <set>; #include <stack>; #include <string>; #include <unordered_map>. Include dependency graph for RooAbsArg.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  RooAbsArg::ProxyListCache;  ; class  RooAbsArg;  Common abstract base class for objects that represent a value and a ""shape"" in RooFit. More...;  ; class  RooRefArray;  . Namespaces; namespace  RooFit;  The namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or other types of arguments). ;  ; namespace  RooFit::Detail;  . Typedefs; using RooListProxy = RooCollectionProxy< RooArgList >;  ; using RooSetProxy = RooCollectionProxy< RooArgSet >;  . Functions; std::ostream & operator<< (std::ostream &os, const RooAbsArg &arg);  Ostream operator. ;  ; std::istream & operator>> (std::istream &is, RooAbsArg &arg);  Istream operator. ;  . Typedef Documentation. ◆ RooListProxy. using RooListProxy = RooCollectionProxy<RooArgList>. Definition at line 55 of file RooAbsArg.h. ◆ RooSetProxy. using RooSetProxy = RooCollectionProxy<RooArgSet>. Definition at line 54 of file RooAbsArg.h. Function Documentation. ◆ operator<<(). std::ostream & operator<<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsArg_8h.html:101,Load,Loading,101,doc/master/RooAbsArg_8h.html,https://root.cern,https://root.cern/doc/master/RooAbsArg_8h.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofitcore/inc/RooAbsPdf.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsPdf.h. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * File: $Id: RooAbsPdf.h,v 1.90 2007/07/21 21:32:52 wouter Exp $; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16#ifndef ROO_ABS_PDF; 17#define ROO_ABS_PDF; 18 ; 19#include <RooAbsReal.h>; 20#include <RooDataHist.h>; 21#include <RooDataSet.h>; 22#include <RooFit/UniqueId.h>; 23#include <RooGlobalFunc.h>; 24#include <RooObjCacheManager.h>; 25 ; 26class RooArgSet ;; 27class RooAbsGenContext ;; 28class RooFitResult ;; 29class RooExtendPdf ;; 30class RooCategory ;; 31class TPaveText;; 32class TH1F;; 33class TH2F;; 34class TList ;; 35class RooMinimizer ;; 36class RooNumGenConfig ;; 37class RooRealIntegral ;; 38 ; 39 ; 40class RooAbsPdf : public RooAbsReal {; 41public:; 42 ; 43 // Constructors, assignment etc; 44 RooAbsPdf() ;; 45 RooAbsPdf(const char *name, const char *title=nullptr) ;; 46 RooAbsPdf(const char *name, const char *title, double minVal, double maxVal) ;; 47 // RooAbsPdf(const RooAbsPdf& other, const char* name=nullptr);; 48 ~RooAbsPdf() override;; 49 ; 50 // Toy MC generation; 51 ; 52 ////////////////////////////////////////////////////////////////////////////////; 53 /// See RooAbsPdf::generate(const RooArgSet&,const RooCmdArg&,c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:98,Load,Loading,98,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofitcore/inc/RooAbsReal.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsReal.h. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * File: $Id: RooAbsReal.h,v 1.75 2007/07/13 21:50:24 wouter Exp $; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16#ifndef ROO_ABS_REAL; 17#define ROO_ABS_REAL; 18 ; 19#include ""RooAbsArg.h""; 20#include ""RooArgList.h""; 21#include ""RooArgSet.h""; 22#include ""RooCmdArg.h""; 23#include ""RooCurve.h""; 24#include ""RooFit/Detail/CodeSquashContext.h""; 25#include ""RooFit/EvalContext.h""; 26#include ""RooGlobalFunc.h""; 27 ; 28#include <ROOT/RSpan.hxx>; 29 ; 30class RooDataSet ;; 31class RooPlot;; 32class RooRealVar;; 33class RooAbsFunc;; 34class RooAbsCategoryLValue ;; 35class RooLinkedList ;; 36class RooNumIntConfig ;; 37class RooDataHist ;; 38class RooFunctor ;; 39class RooFitResult ;; 40class RooAbsMoment ;; 41class RooDerivative ;; 42class RooVectorDataStore ;; 43struct TreeReadBuffer; /// A space to attach TBranches; 44namespace RooBatchCompute {; 45struct RunContext;; 46}; 47 ; 48class TH1;; 49class TH1F;; 50class TH2F;; 51class TH3F;; 52 ; 53#include <iostream>; 54#include <list>; 55#include <map>; 56#include <string>; 57#include <sstream>; 58 ; 59class RooAbsReal : public RooAbsArg {; 60public:; 61 using value_type = double;; 62 ; 63 /// A RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:99,Load,Loading,99,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofitcore/inc/RooArgSet.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooArgSet.h. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * File: $Id: RooArgSet.h,v 1.45 2007/08/09 19:55:47 wouter Exp $; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16#ifndef ROO_ARG_SET; 17#define ROO_ARG_SET; 18 ; 19#include ""RooAbsCollection.h""; 20 ; 21class RooAbsArg ;; 22class RooArgList ;; 23 ; 24class RooArgSet : public RooAbsCollection {; 25public:; 26 ; 27 // Constructors, assignment etc.; 28 RooArgSet();; 29 ; 30 /// Construct a (non-owning) RooArgSet from one or more; 31 /// RooFit objects. The set will not own its contents.; 32 /// \tparam Ts Parameter pack of objects that derive from RooAbsArg or RooFit collections; or a name.; 33 /// \param arg A RooFit object.; 34 /// Note that you can also pass a `double` as first argument; 35 /// when constructing a RooArgSet, and another templated; 36 /// constructor will be used where a RooConstVar is implicitly; 37 /// created from the `double` value.; 38 /// \param moreArgsOrName Arbitrary number of; 39 /// - Further RooFit objects that derive from RooAbsArg; 40 /// - RooFit collections of such objects; 41 /// - `double`s from which a RooConstVar is implicitly created via `RooFit::RooConst`.; 42 /// - A name for the set. Given multiple na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooArgSet_8h_source.html:98,Load,Loading,98,doc/master/RooArgSet_8h_source.html,https://root.cern,https://root.cern/doc/master/RooArgSet_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofitcore/inc/RooFit/Detail/MathFuncs.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MathFuncs.h. Go to the documentation of this file. 1/*; 2 * Project: RooFit; 3 * Authors:; 4 * Jonas Rembser, CERN 2024; 5 * Garima Singh, CERN 2023; 6 *; 7 * Copyright (c) 2024, CERN; 8 *; 9 * Redistribution and use in source and binary forms,; 10 * with or without modification, are permitted according to the terms; 11 * listed in LICENSE (http://roofit.sourceforge.net/license.txt); 12 */; 13 ; 14#ifndef RooFit_Detail_MathFuncs_h; 15#define RooFit_Detail_MathFuncs_h; 16 ; 17#include <TMath.h>; 18#include <Math/PdfFuncMathCore.h>; 19#include <Math/ProbFuncMathCore.h>; 20 ; 21#include <cmath>; 22 ; 23namespace RooFit {; 24 ; 25namespace Detail {; 26 ; 27namespace MathFuncs {; 28 ; 29/// Calculates the binomial coefficient n over k.; 30/// Equivalent to TMath::Binomial, but inlined.; 31inline double binomial(int n, int k); 32{; 33 if (n < 0 || k < 0 || n < k); 34 return TMath::SignalingNaN();; 35 if (k == 0 || n == k); 36 return 1;; 37 ; 38 int k1 = std::min(k, n - k);; 39 int k2 = n - k1;; 40 double fact = k2 + 1;; 41 for (double i = k1; i > 1.; --i) {; 42 fact *= (k2 + i) / i;; 43 }; 44 return fact;; 45}; 46 ; 47/// The caller needs to make sure that there is at least one coefficient.; 48inline double bernstein(double x, double xmin, double xmax, double *coefs, int nCoefs); 49{; 50 double xScaled = (x - xmin) / (xmax - xmin); // rescale to [0,1]; 51 int degree = nCoefs - 1; // n+1 polys of degree n; 52 ; 53 // in case list of arguments passed is empty; 54 if (degree < 0) {; 55 return TMath::SignalingNaN();; 56 } else if (degree == 0) {; 57 return coefs[0];; 58 } else if (degree == 1) {; 59 ; 60 double a0 = coefs[0]; // c0; 61 double a1 = coefs[1] - a0; // c1 - c0; 62 return a1 * xScaled + a0;; 63 ; 64 } else if (degree == 2) {; 65 ; 66 double a0 = coefs[0]; // c0; 67 double a1 = 2 * (coefs[1] - a0); // 2 * (c1 - c0); 68",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MathFuncs_8h_source.html:112,Load,Loading,112,doc/master/MathFuncs_8h_source.html,https://root.cern,https://root.cern/doc/master/MathFuncs_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofitcore/src/RooAbsPdf.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsPdf.cxx. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * @(#)root/roofitcore:$Id$; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16 ; 17//////////////////////////////////////////////////////////////////////////////; 18/** \class RooAbsPdf; 19 \ingroup Roofitcore; 20 \brief Abstract interface for all probability density functions.; 21 ; 22## RooAbsPdf, the base class of all PDFs; 23 ; 24RooAbsPdf is the base class for all probability density; 25functions (PDFs). The class provides hybrid analytical/numerical; 26normalization for its implementations, error tracing, and a Monte Carlo; 27generator interface.; 28 ; 29### A Minimal PDF Implementation; 30 ; 31A minimal implementation of a PDF class derived from RooAbsPdf; 32should override the `evaluate()` function. This function should; 33return the PDF's value (which does not need to be normalised).; 34 ; 35 ; 36#### Normalization/Integration; 37 ; 38Although the normalization of a PDF is an integral part of a; 39probability density function, normalization is treated separately; 40in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; 41PDF: it can be a building block for a more complex composite PDF; 42if any of its variables are f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:100,Load,Loading,100,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofitcore/src/RooAbsReal.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsReal.cxx. Go to the documentation of this file. 1/*****************************************************************************; 2 * Project: RooFit *; 3 * Package: RooFitCore *; 4 * @(#)root/roofitcore:$Id$; 5 * Authors: *; 6 * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; 7 * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; 8 * *; 9 * Copyright (c) 2000-2005, Regents of the University of California *; 10 * and Stanford University. All rights reserved. *; 11 * *; 12 * Redistribution and use in source and binary forms, *; 13 * with or without modification, are permitted according to the terms *; 14 * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; 15 *****************************************************************************/; 16 ; 17//////////////////////////////////////////////////////////////////////////////; 18 ; 19/** \class RooAbsReal; 20 ; 21 Abstract base class for objects that represent a; 22 real value and implements functionality common to all real-valued objects; 23 such as the ability to plot them, to construct integrals of them, the; 24 ability to advertise (partial) analytical integrals etc.; 25 ; 26 Implementation of RooAbsReal may be derived, thus no interface; 27 is provided to modify the contents.; 28 ; 29 \ingroup Roofitcore; 30*/; 31 ; 32#include ""RooAbsReal.h""; 33 ; 34#include ""FitHelpers.h""; 35#include ""RooAbsCategoryLValue.h""; 36#include ""RooAbsData.h""; 37#include ""RooAddPdf.h""; 38#include ""RooAddition.h""; 39#include ""RooArgList.h""; 40#include ""RooArgProxy.h""; 41#include ""RooArgSet.h""; 42#include ""RooBinning.h""; 43#include ""RooBrentRootFinder.h""; 44#include ""RooCachedReal.h""; 45#include ""RooCategory.h""; 46#include ""RooCmdConfig.h""; 47#include ""RooConstVar.h""; 48#include ""RooCurve.h""; 49#include ""RooCustomizer.h""; 50#include ""RooDataHist.h""; 51#include ""RooDataS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:101,Load,Loading,101,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Macros |; Typedefs |; Enumerations |; Functions |; Variables ; RooAdaptiveGaussKronrodIntegrator1D.cxx File Reference. #include <cassert>; #include <cstdlib>; #include ""TClass.h""; #include ""Riostream.h""; #include ""RooAdaptiveGaussKronrodIntegrator1D.h""; #include ""RooArgSet.h""; #include ""RooRealVar.h""; #include ""RooNumber.h""; #include ""RooNumIntFactory.h""; #include ""TMath.h""; #include ""RooMsgService.h"". Include dependency graph for RooAdaptiveGaussKronrodIntegrator1D.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  extrapolation_table;  ; struct  gsl_function_struct;  ; struct  gsl_integration_workspace;  ; struct  il_params;  ; struct  iu_params;  . Macros; #define GSL_COERCE_DBL(x)   (gsl_coerce_double(x));  ; #define GSL_DBL_EPSILON   2.2204460492503131e-16;  ; #define GSL_DBL_MAX   1.7976931348623157e+308;  ; #define GSL_DBL_MIN   2.2250738585072014e-308;  ; #define GSL_EBADTOL   13 /* user specified an invalid tolerance */;  ; #define GSL_EDIVERGE   6;  ; #define GSL_EDOM   1 /* input domain error, e.g sqrt(-1) */;  ; #define GSL_EFAILED   5;  ; #define GSL_EINVAL   2;  ; #define GSL_EMAXITER   3;  ; #define GSL_ENOMEM   8 /* malloc failed */;  ; #define GSL_EROUND   7;  ; #define GSL_ERROR(a, b)   oocoutE(nullptr,Integration) << ""RooAdaptiveGaussKronrodIntegrator1D::integral() ERROR: "" << a << endl ; return b ;;  ; #define GSL_ERROR_VAL(reason, gsl_errno, value)   return value ;;  ; #define GSL_ESING   4;  ; #define GSL_ETOL   14 /* failed to reach the specified tolerance */;  ; #define GSL_FN_EVAL(F, x)   (*((F)->function))(x,(F)->params);  ; #define GSL_MAX(a, b)   ((a) > (b) ? (a) : (b));  ; #define GSL_SUCCESS   0;  . Typedefs; typedef struct gsl_function_struct gsl_function;  ; typedef void gsl_integration_rule(const gsl_fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAdaptiveGaussKronrodIntegrator1D_8cxx.html:129,Load,Loading,129,doc/master/RooAdaptiveGaussKronrodIntegrator1D_8cxx.html,https://root.cern,https://root.cern/doc/master/RooAdaptiveGaussKronrodIntegrator1D_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: socket Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; socket Struct Reference. . Definition at line 1893 of file civetweb.c. Public Attributes; unsigned char in_use;  ; unsigned char is_ssl;  ; union usa lsa;  ; union usa rsa;  ; SOCKET sock;  ; unsigned char ssl_redir;  . Member Data Documentation. ◆ in_use. unsigned char socket::in_use. Definition at line 1900 of file civetweb.c. ◆ is_ssl. unsigned char socket::is_ssl. Definition at line 1897 of file civetweb.c. ◆ lsa. union usa socket::lsa. Definition at line 1895 of file civetweb.c. ◆ rsa. union usa socket::rsa. Definition at line 1896 of file civetweb.c. ◆ sock. SOCKET socket::sock. Definition at line 1894 of file civetweb.c. ◆ ssl_redir. unsigned char socket::ssl_redir. Definition at line 1898 of file civetweb.c. Collaboration diagram for socket:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; net/http/civetweb/civetweb.c. socket. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structsocket.html:76,Load,Loading,76,doc/master/structsocket.html,https://root.cern,https://root.cern/doc/master/structsocket.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/pymva/src/PyMethodBase.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. PyMethodBase.cxx. Go to the documentation of this file. 1// @(#)root/tmva/pymva $Id$; 2// Authors: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer 2015, Stefan Wunsch 2017; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : PyMethodBase *; 8 * *; 9 * Description: *; 10 * Virtual base class for all MVA method based on python *; 11 * *; 12 **********************************************************************************/; 13 ; 14#include <Python.h> // Needs to be included first to avoid redefinition of _POSIX_C_SOURCE; 15#include <TMVA/PyMethodBase.h>; 16 ; 17#include ""TMVA/DataSet.h""; 18#include ""TMVA/DataSetInfo.h""; 19#include ""TMVA/MsgLogger.h""; 20#include ""TMVA/Results.h""; 21#include ""TMVA/Timer.h""; 22#include ""TMVA/Tools.h""; 23 ; 24#include ""TSystem.h""; 25 ; 26#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; 27#include <numpy/arrayobject.h>; 28 ; 29using namespace TMVA;; 30 ; 31namespace TMVA {; 32namespace Internal {; 33class PyGILRAII {; 34 PyGILState_STATE m_GILState;; 35 ; 36public:; 37 PyGILRAII() : m_GILState(PyGILState_Ensure()) {}; 38 ~PyGILRAII() { PyGILState_Release(m_GILState); }; 39};; 40} // namespace Internal; 41 ; 42/// get current Python executable used by ROOT; 43TString Python_Executable() {; 44 TString python_version = gSystem->GetFromPipe(""root-config --python-version"");; 45 if (python_version.IsNull()) {; 46 TMVA::gTools().Log() << kFATAL << ""Can't find a valid Python version used to build ROOT"" << Endl;; 47 return nullptr;; 48 }; 49#ifdef _MSC_VER; 50 // on Windows there is a space before the version and the executable is python.exe; 51 // for both versions of Python; 52 python_version.ReplaceAll("" "", """");; 53 if (python_version[0] == '2' || python_version[0] == ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PyMethodBase_8cxx_source.html:96,Load,Loading,96,doc/master/PyMethodBase_8cxx_source.html,https://root.cern,https://root.cern/doc/master/PyMethodBase_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/sofie/src/Prototype.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; Prototype.cxx File Reference. #include <memory>; #include ""TMVA/RModel.hxx""; #include ""TMVA/RModelParser_ONNX.hxx""; #include <cctype>; #include <algorithm>. Include dependency graph for Prototype.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; int main ();  . Function Documentation. ◆ main(). int main ; (; ). Definition at line 12 of file Prototype.cxx. tmvasofiesrcPrototype.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Prototype_8cxx.html:96,Load,Loading,96,doc/master/Prototype_8cxx.html,https://root.cern,https://root.cern/doc/master/Prototype_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/sofie/src/Prototype.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Prototype.cxx. Go to the documentation of this file. 1#include <memory>; 2 ; 3#include ""TMVA/RModel.hxx""; 4#include ""TMVA/RModelParser_ONNX.hxx""; 5 ; 6#include <cctype>; 7#include <algorithm>; 8 ; 9 ; 10using namespace TMVA::Experimental::SOFIE;; 11 ; 12int main(){; 13 ; 14 ; 15 RModelParser_ONNX parser;; 16 RModel model = parser.Parse(""./Linear_64.onnx"");; 17 RModel model2 = std::move(model);; 18 model2.PrintRequiredInputTensors();; 19 model2.PrintInitializedTensors();; 20 model2.HeadInitializedTensors(""18bias"");; 21 model2.HeadInitializedTensors(""0weight"");; 22 ; 23 std::cout << ""==="" << std::endl;; 24 ; 25 model2.Generate();; 26 //model2.PrintGenerated();; 27 //model2.Initialize();; 28 model2.PrintInitializedTensors();; 29 model2.HeadInitializedTensors(""6bias"", 100);; 30 ; 31 ; 32 std::cout << ""==="" << std::endl;; 33 ; 34 ; 35 ; 36 //model2.PrintGenerated();; 37 model2.OutputGenerated();; 38 //model2.PrintIntermediateTensors();; 39/*; 40 std::cout << ""==="" << std::endl;; 41 ; 42 RModel model3;; 43 model3.AddInputTensorInfo(""1"", ETensorType::FLOAT, {1,2,3,4});; 44 //auto op = std::make_unique<ROperator_Transpose<float>>({3,2,1,0}, ""1"", ""2"");; 45 std::unique_ptr<ROperator>op ( new ROperator_Transpose<float>({3,2,1,0}, ""1"", ""2"")) ;; 46 model3.AddOperator(std::move(op));; 47 //op->Initialize(model3);; 48 //std::cout << (op->Generate(""1""));; 49 ; 50 model3.AddInputTensorInfo(""3"", ETensorType::FLOAT, {2,3});; 51 model3.AddInputTensorInfo(""4"", ETensorType::FLOAT, {3,2});; 52 std::unique_ptr<ROperator> op2 (new ROperator_Gemm<float> (1.0, 1.0, 0, 0, ""3"", ""4"", ""5""));; 53 model3.AddOperator(std::move(op2));; 54 std::unique_ptr<ROperator> op3 (new ROperator_Relu<float> (""5"", ""6""));; 55 model3.AddOperator(std::move(op3));; 56 //op2->Initialize(model3);; 57 //std::cout << (op2->Generate(""2""));; 58 ; 59 model3.Generate();; 60 model3.PrintGenerated()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Prototype_8cxx_source.html:93,Load,Loading,93,doc/master/Prototype_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Prototype_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. CudaMatrix.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 13/07/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12///////////////////////////////////////////////////////////////////////; 13// Contains the TCudaMatrix class for the representation of matrices //; 14// on CUDA devices as well as the TCudaDeviceReference class which //; 15// is a helper class to emulate lvalue references to floating point //; 16// values on the device. //; 17///////////////////////////////////////////////////////////////////////; 18 ; 19#ifndef TMVA_DNN_ARCHITECTURES_CUDA_CUDAMATRIX; 20#define TMVA_DNN_ARCHITECTURES_CUDA_CUDAMATRIX; 21 ; 22// in case we compile C++ code with std-17 and cuda with lower standard; 23// use experimental string_view, otherwise keep as is; 24#include ""RConfigure.h""; 25 ; 26#include ""cuda.h""; 27#include ""cuda_runtime.h""; 28#include ""cublas_v2.h""; 29#include ""curand_kernel.h""; 30 ; 31#include ""TMatrixT.h""; 32#include ""CudaBuffers.h""; 33 ; 34#define CUDACHECK(ans) {cudaError((ans), __FILE__, __LINE__); }; 35 ; 36namespace TMVA {; 37namespace DNN {; 38 ; 39/** Function to check cuda return code. Taken from; 40 * http://stackoverflow.com/questions/14038589/; 41 */; 42inline void cudaError(cudaError_t code, const char *file, int line, bool abort=true);; 43 ; 44//____________________________________________________________________________; 45//; 46// Cuda Device Reference; 47//__________________________________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaMatrix_8h_source.html:119,Load,Loading,119,doc/master/CudaMatrix_8h_source.html,https://root.cern,https://root.cern/doc/master/CudaMatrix_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaTensor.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. CudaTensor.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 13/07/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12///////////////////////////////////////////////////////////////////////; 13// Contains the TCudaMatrix class for the representation of matrices //; 14// on CUDA devices as well as the TCudaDeviceReference class which //; 15// is a helper class to emulate lvalue references to floating point //; 16// values on the device. //; 17///////////////////////////////////////////////////////////////////////; 18 ; 19#ifndef TMVA_DNN_ARCHITECTURES_CUDA_CUDATENSOR; 20#define TMVA_DNN_ARCHITECTURES_CUDA_CUDATENSOR; 21 ; 22 ; 23#include <vector>; 24#include <cstring>; 25#include <cassert>; 26#include <iostream>; 27 ; 28#include ""CudaMatrix.h""; 29#include ""TMatrixT.h""; 30#include ""CudaBuffers.h""; 31 ; 32//#include ""TMVA/RTensor.hxx""; 33 ; 34#ifdef R__HAS_CUDNN; 35#include ""cudnn.h""; 36#define CUDNNCHECK(ans) {cudnnError((ans), __FILE__, __LINE__); }; 37#endif; 38 ; 39namespace TMVA {; 40 ; 41 ; 42 ; 43#ifndef TMVA_RTENSOR; 44 ; 45namespace Experimental {; 46/// Memory layout type (copy from RTensor.hxx); 47enum class MemoryLayout : uint8_t {; 48 RowMajor = 0x01,; 49 ColumnMajor = 0x02; 50};; 51}; 52#endif; 53 ; 54namespace DNN {; 55 ; 56using MemoryLayout = TMVA::Experimental::MemoryLayout;; 57 ; 58#ifdef R__HAS_CUDNN; 59/**; 60 * Function to handle the status output of cuDNN function calls. See also; 61 * CUDACHECK in CudaMatrix.h.; 62 */; 63inli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaTensor_8h_source.html:119,Load,Loading,119,doc/master/CudaTensor_8h_source.html,https://root.cern,https://root.cern/doc/master/CudaTensor_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/DNN/DataLoader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataLoader.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 08/08/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/////////////////////////////////////////////////////////////////////; 13// Generic data loader for neural network input data. Provides a //; 14// high level abstraction for the transfer of training data to the //; 15// device. //; 16/////////////////////////////////////////////////////////////////////; 17 ; 18#ifndef TMVA_DNN_DATALOADER; 19#define TMVA_DNN_DATALOADER; 20 ; 21#include ""TMatrix.h""; 22#include ""TMVA/Event.h""; 23 ; 24#include <algorithm>; 25#include <random>; 26#include <vector>; 27#include <utility>; 28 ; 29namespace TMVA {; 30 ; 31class DataSetInfo;; 32 ; 33namespace DNN {; 34 ; 35//; 36// Input Data Types; 37//______________________________________________________________________________; 38using MatrixInput_t = std::tuple<const TMatrixT<Double_t> &, const TMatrixT<Double_t> &, const TMatrixT<Double_t> &>;; 39using TMVAInput_t =; 40 std::tuple<const std::vector<Event *> &, const DataSetInfo &>;; 41 ; 42using IndexIterator_t = typename std::vector<size_t>::iterator;; 43 ; 44/** TBatch; 45 *; 46 * Class representing training batches consisting of a matrix of input data; 47 * and a matrix of output data. The input and output data can be accessed using; 48 * the GetInput() and GetOutput() member functions.; 49 *; 50 * \tparam AArchitecture The underlying architecture.; 51 */; 52//_________________________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DNN_2DataLoader_8h_source.html:100,Load,Loading,100,doc/master/DNN_2DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DNN_2DataLoader_8h_source.html,2,"['Load', 'load']","['Loading', 'loader']"
Performance,". ROOT: tmva/tmva/inc/TMVA/DNN/Functions.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 20/06/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/////////////////////////////////////////////////////////////////////; 13// Contains function enums for activation and output functions, as //; 14// well as generic evaluation functions, that delegate the call to //; 15// the corresponding evaluation kernel. //; 16/////////////////////////////////////////////////////////////////////; 17 ; 18#ifndef TMVA_DNN_FUNCTIONS; 19#define TMVA_DNN_FUNCTIONS; 20 ; 21namespace TMVA; 22{; 23namespace DNN; 24{; 25//______________________________________________________________________________; 26//; 27// Enum Definitions; 28//______________________________________________________________________________; 29 ; 30/*! Enum that represents layer activation functions. */; 31enum class EActivationFunction; 32{; 33 kIdentity = 0,; 34 kRelu = 1,; 35 kSigmoid = 2,; 36 kTanh = 3,; 37 kSymmRelu = 4,; 38 kSoftSign = 5,; 39 kGauss = 6,; 40 kFastTanh = 7; 41 ; 42};; 43 ; 44/*! Enum that represents output functions */; 45enum class EOutputFunction; 46{; 47 kIdentity = 'I',; 48 kSigmoid = 'S',; 49 kSoftmax = 'M'; 50};; 51 ; 52/*! Enum that represents objective functions for the net, i.e. functions; 53* that take the output from the last layer in the net together with the; 54* truths and return the objective function values that is to be minimized; 55* in the training process. */; 56enum class ELossFunction; 57{; 58 kCrossEntropy = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2DNN_2Functions_8h_source.html:99,Load,Loading,99,doc/master/tmva_2tmva_2inc_2TMVA_2DNN_2Functions_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2DNN_2Functions_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/DNN/GeneralLayer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. GeneralLayer.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Vladimir Ilievski; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : TGeneralLayer *; 8 * *; 9 * *; 10 * Description: *; 11 * General Deep Neural Network Layer *; 12 * *; 13 * Authors (alphabetical): *; 14 * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; 15 * *; 16 * Copyright (c) 2005-2015: *; 17 * CERN, Switzerland *; 18 * U. of Victoria, Canada *; 19 * MPI-K Heidelberg, Germany *; 20 * U. of Bonn, Germany *; 21 * *; 22 * Redistribution and use in source and binary forms, with or without *; 23 * modification, are permitted according to the terms listed in LICENSE *; 24 * (see tmva/doc/LICENSE) *; 25 **********************************************************************************/; 26 ; 27#ifndef TMVA_DNN_GENERALLAYER; 28#define TMVA_DNN_GENERALLAYER; 29 ; 30#include <sstream>; 31#include <limits>; 32#include <vector>; 33#include <string>; 34 ; 35// for xml; 36#include ""TMVA/Tools.h""; 37#include ""TError.h"" // for R__ASSERT; 38 ; 39#include ""TMVA/DNN/Functions.h""; 40 ; 41namespace TMVA {; 42namespace DNN {; 43 ; 44/** \class VGeneralLayer; 45 Generic General Layer class.; 46 ; 47 This class represents the general class for all layers in the Deep Learning; 48 Module.; 49 */; 50template <typename Architecture_t>; 51class VGeneralLayer {; 52 ; 53 using Tensor_t = typename Architecture_t::Tensor_t;; 54 using Matrix_t = typename Architecture_t::Matrix_t;; 55 using Scalar_t = typename Architecture_t::Scalar_t;; 56 ; 57 ; 58protected:; 59 size_t fBatchSize; ///< Batch size used for training and evaluation; 60 ; 61 size_t fInputDepth; ///< The depth of the previous ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GeneralLayer_8h_source.html:102,Load,Loading,102,doc/master/GeneralLayer_8h_source.html,https://root.cern,https://root.cern/doc/master/GeneralLayer_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/DNN/TensorDataLoader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TensorDataLoader.h. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Vladimir Ilievski; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : TTensorDataLoader *; 8 * *; 9 * *; 10 * Description: *; 11 * Tensor Data Loader Class *; 12 * *; 13 * Authors (alphabetical): *; 14 * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; 15 * *; 16 * Copyright (c) 2005-2015: *; 17 * CERN, Switzerland *; 18 * U. of Victoria, Canada *; 19 * MPI-K Heidelberg, Germany *; 20 * U. of Bonn, Germany *; 21 * *; 22 * Redistribution and use in source and binary forms, with or without *; 23 * modification, are permitted according to the terms listed in LICENSE *; 24 * (see tmva/doc/LICENSE) *; 25 **********************************************************************************/; 26 ; 27#ifndef TMVA_DNN_TENSORDATALOADER; 28#define TMVA_DNN_TENSORDATALOADER; 29 ; 30#include ""TMatrix.h""; 31#include ""TMVA/Event.h""; 32#include <algorithm>; 33#include <vector>; 34#include <utility>; 35 ; 36namespace TMVA {; 37 class DataSetInfo;; 38namespace DNN {; 39 ; 40//; 41// Input Data Types; 42//______________________________________________________________________________; 43using TensorInput =; 44 std::tuple<const std::vector<TMatrixT<Double_t>> &, const TMatrixT<Double_t> &, const TMatrixT<Double_t> &>;; 45 ; 46using TMVAInput_t = std::tuple<const std::vector<Event *> &, const DataSetInfo &>;; 47using IndexIterator_t = typename std::vector<size_t>::iterator;; 48 ; 49/** TTensorBatch; 50 *; 51 * Class representing training batches consisting of a vector of matrices as input data; 52 * and a matrix of output data. The input and output data can be accessed using; 53 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TensorDataLoader_8h_source.html:106,Load,Loading,106,doc/master/TensorDataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/TensorDataLoader_8h_source.html,2,['Load'],"['Loader', 'Loading']"
Performance,". ROOT: tmva/tmva/inc/TMVA/DataLoader.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; DataLoader.h File Reference. #include <vector>; #include ""TCut.h""; #include ""TMVA/Configurable.h""; #include ""TMVA/Types.h""; #include ""TMVA/DataSet.h"". Include dependency graph for DataLoader.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::DataLoader;  . Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; void TMVA::DataLoaderCopy (TMVA::DataLoader *des, TMVA::DataLoader *src);  . tmvatmvaincTMVADataLoader.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h.html:99,Load,Loading,99,doc/master/DataLoader_8h.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/DataLoader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataLoader.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag, Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; 3//NOTE: Based on TMVA::Factory; 4 ; 5/**********************************************************************************; 6 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 7 * Package: TMVA *; 8 * Class : DataLoader *; 9 * *; 10 * *; 11 * Description: *; 12 * This is a class to load datasets into every booked method *; 13 * *; 14 * Authors (alphabetical): *; 15 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 16 * Omar Zapata <andresete.chaos@gmail.com> - ITM/UdeA, Colombia *; 17 * Sergei Gleyzer<sergei.gleyzer@cern.ch> - CERN, Switzerland *; 18 * *; 19 * Copyright (c) 2005-2011: *; 20 * CERN, Switzerland *; 21 * ITM/UdeA, Colombia *; 22 * *; 23 * Redistribution and use in source and binary forms, with or without *; 24 * modification, are permitted according to the terms listed in LICENSE *; 25 * (see tmva/doc/LICENSE) *; 26 **********************************************************************************/; 27 ; 28#ifndef ROOT_TMVA_DataLoader; 29#define ROOT_TMVA_DataLoader; 30 ; 31#include <vector>; 32#include ""TCut.h""; 33 ; 34#include ""TMVA/Configurable.h""; 35#include ""TMVA/Types.h""; 36#include ""TMVA/DataSet.h""; 37 ; 38class TFile;; 39class TTree;; 40class TH2;; 41 ; 42namespace TMVA {; 43 ; 44 class CvSplit;; 45 class DataInputHandler;; 46 class DataSetInfo;; 47 class DataSetManager;; 48 class VariableTransformBase;; 49 ; 50 class DataLoader : public Configurable {; 51 public:; 52 ; 53 DataLoader(TString thedlName=""default"");; 54 ; 55 // default destructor; 56 virtual ~DataLoader();; 57 ; 58 ; 59 // add events to training and testing trees; 60 void Ad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:96,Load,Loading,96,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,2,"['Load', 'load']","['Loading', 'load']"
Performance,". ROOT: tmva/tmva/inc/TMVA/DataSetFactory.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataSetFactory.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Helge Voss; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : DataSetFactory *; 8 * *; 9 * *; 10 * Description: *; 11 * Contains all the data information *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 16 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 17 * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; 18 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 19 * *; 20 * Copyright (c) 2006: *; 21 * CERN, Switzerland *; 22 * MPI-K Heidelberg, Germany *; 23 * *; 24 * Redistribution and use in source and binary forms, with or without *; 25 * modification, are permitted according to the terms listed in LICENSE *; 26 * (see tmva/doc/LICENSE) *; 27 **********************************************************************************/; 28 ; 29#ifndef ROOT_TMVA_DataSetFactory; 30#define ROOT_TMVA_DataSetFactory; 31 ; 32//////////////////////////////////////////////////////////////////////////; 33// //; 34// DataSetFactory //; 35// //; 36// Class that contains all the data information //; 37// //; 38//////////////////////////////////////////////////////////////////////////; 39 ; 40#include <vector>; 41#include <map>; 42 ; 43#include ""TString.h""; 44#include ""TTree.h""; 45#include ""TCut.h""; 46#include ""TTreeFormula.h""; 47#include ""TMatrixDfwd.h""; 48#include ""TPrincipal.h""; 49#include ""TRandom3.h""; 50 ; 51#include ""TMVA/Types.h""; 52#include ""TMVA/VariableIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8h_source.html:100,Load,Loading,100,doc/master/DataSetFactory_8h_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/Factory.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; Factory.h File Reference. #include <vector>; #include <map>; #include ""TCut.h""; #include ""TMVA/Configurable.h""; #include ""TMVA/Types.h""; #include ""TMVA/DataSet.h"". Include dependency graph for Factory.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::Factory;  This is the main MVA steering class. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . tmvatmvaincTMVAFactory.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h.html:96,Load,Loading,96,doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/Factory.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Factory.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; 3// Updated by: Omar Zapata, Lorenzo Moneta, Sergei Gleyzer; 4 ; 5/**********************************************************************************; 6 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 7 * Package: TMVA *; 8 * Class : Factory *; 9 * *; 10 * *; 11 * Description: *; 12 * This is the main MVA steering class: it creates (books) all MVA methods, *; 13 * and guides them through the training, testing and evaluation phases. *; 14 * *; 15 * Authors (alphabetical): *; 16 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 17 * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; 18 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 19 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 20 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 21 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 22 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 23 * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; 24 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 25 * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; 26 * *; 27 * Copyright (c) 2005-2011: *; 28 * CERN, Switzerland *; 29 * U. of Victoria, Canada *; 30 * MPI-K Heidelberg, Germany *; 31 * U. of Bonn, Germany *; 32 * UdeA/ITM, Colombia *; 33 * U. of Florida, USA *; 34 * *; 35 * Redistribution and use in source and binary forms, with or without *; 36 * modification, are permitted according to the terms listed in LICENSE *; 37 * (see tmva/doc/LICENSE) *; 38 **********************************************************************************/; 39 ; 40#ifndef ROOT_T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html:93,Load,Loading,93,doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/MethodBase.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodBase.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : MethodBase *; 8 * *; 9 * *; 10 * Description: *; 11 * Virtual base class for all MVA method *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 17 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 18 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 19 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 20 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 21 * *; 22 * Copyright (c) 2005-2011: *; 23 * CERN, Switzerland *; 24 * U. of Victoria, Canada *; 25 * MPI-K Heidelberg, Germany *; 26 * U. of Bonn, Germany *; 27 * *; 28 * Redistribution and use in source and binary forms, with or without *; 29 * modification, are permitted according to the terms listed in LICENSE *; 30 * (see tmva/doc/LICENSE) *; 31 **********************************************************************************/; 32 ; 33#ifndef ROOT_TMVA_MethodBase; 34#define ROOT_TMVA_MethodBase; 35 ; 36//////////////////////////////////////////////////////////////////////////; 37// //; 38// MethodBase //; 39// //; 40// Virtual base class for all TMVA method //; 41// //; 42//////////////////////////////////////////////////////////////////////////; 43 ; 44#include <iosfwd>; 45#include <vector>; 46#include <map>; 47#include ""assert.h""; 48 ; 49#include """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:96,Load,Loading,96,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/MethodCuts.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; MethodCuts.h File Reference. #include <vector>; #include ""TMVA/MethodBase.h""; #include ""TMVA/BinarySearchTree.h""; #include ""TMVA/PDF.h""; #include ""TMatrixDfwd.h""; #include ""IFitterTarget.h"". Include dependency graph for MethodCuts.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::MethodCuts;  Multivariate optimisation of signal efficiency for given background efficiency, applying rectangular minimum and maximum requirements. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . tmvatmvaincTMVAMethodCuts.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h.html:99,Load,Loading,99,doc/master/MethodCuts_8h.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/MethodCuts.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodCuts.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Helge Voss, Kai Voss; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : MethodCuts *; 8 * *; 9 * *; 10 * Description: *; 11 * Multivariate optimisation of signal efficiency for given background *; 12 * efficiency, using rectangular minimum and maximum requirements on *; 13 * input variables *; 14 * *; 15 * Authors (alphabetical): *; 16 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 17 * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; 18 * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; 19 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 20 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 21 * *; 22 * Copyright (c) 2005: *; 23 * CERN, Switzerland *; 24 * U. of Victoria, Canada *; 25 * MPI-K Heidelberg, Germany *; 26 * LAPP, Annecy, France *; 27 * *; 28 * Redistribution and use in source and binary forms, with or without *; 29 * modification, are permitted according to the terms listed in LICENSE *; 30 * (see tmva/doc/LICENSE) *; 31 **********************************************************************************/; 32 ; 33#ifndef ROOT_TMVA_MethodCuts; 34#define ROOT_TMVA_MethodCuts; 35 ; 36//////////////////////////////////////////////////////////////////////////; 37// //; 38// MethodCuts //; 39// //; 40// Multivariate optimisation of signal efficiency for given background //; 41// efficiency, using rectangular minimum and maximum requirements on //; 42// input variables //; 43// //; 44//////////////////////////////////////////////////////////////////////////; 45 ; 46#i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h_source.html:96,Load,Loading,96,doc/master/MethodCuts_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/MsgLogger.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MsgLogger.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Attila Krasznahorkay, Andreas Hoecker, Joerg Stelzer, Eckhard von Toerne; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : MsgLogger *; 8 * *; 9 * *; 10 * Description: *; 11 * TMVA output logger class producing nicely formatted log messages *; 12 * *; 13 * Author: *; 14 * Attila Krasznahorkay <Attila.Krasznahorkay@cern.ch> - CERN, Switzerland *; 15 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; 17 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 18 * *; 19 * Copyright (c) 2005-2011: *; 20 * CERN, Switzerland *; 21 * U. of Victoria, Canada *; 22 * MPI-K Heidelberg, Germany *; 23 * U. of Bonn, Germany *; 24 * *; 25 * Redistribution and use in source and binary forms, with or without *; 26 * modification, are permitted according to the terms listed in LICENSE *; 27 * (see tmva/doc/LICENSE) *; 28 **********************************************************************************/; 29 ; 30#ifndef ROOT_TMVA_MsgLogger; 31#define ROOT_TMVA_MsgLogger; 32 ; 33//////////////////////////////////////////////////////////////////////////; 34// //; 35// MsgLogger //; 36// //; 37// ostringstream derivative to redirect and format output //; 38// //; 39//////////////////////////////////////////////////////////////////////////; 40 ; 41// STL include(s):; 42#include <string>; 43#include <sstream>; 44#include <iostream>; 45#include <map>; 46#include <atomic>; 47 ; 48// ROOT include(s); 49#include ""TObject.h""; 50 ; 51#include ""TMVA/Types.h""; 52 ; 53// Local include(s):; 54 ; 55namespace TMVA {; 56 ; 57 class MsgLogger : public std::ostri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MsgLogger_8h_source.html:95,Load,Loading,95,doc/master/MsgLogger_8h_source.html,https://root.cern,https://root.cern/doc/master/MsgLogger_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/NeuralNet.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NeuralNet.h. Go to the documentation of this file. 1/**; 2 * @file TMVA/NeuralNet.h; 3 * @author Peter Speckmayer; 4 * @version 1.0; 5 *; 6 * @section LICENSE; 7 *; 8 *; 9 * @section Neural net implementation; 10 *; 11 * An implementation of a neural net for TMVA. This neural net uses multithreading; 12 *; 13 */; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// NeuralNet //; 19// //; 20// A neural net implementation //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#ifndef TMVA_NEURAL_NET; 25#define TMVA_NEURAL_NET; 26#pragma once; 27 ; 28#include <vector>; 29#include <iostream>; 30#include <algorithm>; 31#include <iterator>; 32#include <functional>; 33#include <tuple>; 34#include <cmath>; 35#include <cassert>; 36#include <random>; 37#include <thread>; 38#include <future>; 39#include <type_traits>; 40#include <string>; 41#include <utility>; 42 ; 43#include ""Pattern.h""; 44#include ""Monitoring.h""; 45 ; 46#include ""TApplication.h""; 47#include ""Timer.h""; 48 ; 49#include ""TH1F.h""; 50#include ""TH2F.h""; 51 ; 52#include <fenv.h> // turn on or off exceptions for NaN and other numeric exceptions; 53 ; 54 ; 55namespace TMVA; 56{; 57 ; 58 class IPythonInteractive;; 59 ; 60 namespace DNN; 61 {; 62 ; 63 // double gaussDoubl (edouble mean, double sigma);; 64 ; 65 ; 66 ; 67 double gaussDouble (double mean, double sigma);; 68 double uniformDouble (double minValue, double maxValue);; 69 int randomInt (int maxValue);; 70 ; 71 ; 72 ; 73 ; 74 class MeanVariance; 75 {; 76 public:; 77 MeanVariance(); 78 : m_n(0); 79 , m_sumWeights(0); 80 , m_mean(0); 81 , m_squared(0); 82 {}; 83 ; 84 inline void clear(); 85 {; 86 m_n = 0;; 87 m_sumWeights = 0;; 88 m_mean = 0;; 89 m_squared = 0;; 90 }; 91 ; 92 template <typename T>; 93 inline void add(T value, double weight = 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:95,Load,Loading,95,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/NeuralNet.icc Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NeuralNet.icc. Go to the documentation of this file. 1#ifndef TMVA_NEURAL_NET_I; 2#define TMVA_NEURAL_NET_I; 3 ; 4#ifndef TMVA_NEURAL_NET; 5#error ""Do not use NeuralNet.icc directly. #include \""NeuralNet.h\"" instead.""; 6#endif // TMVA_NEURAL_NET; 7#pragma once; 8#ifndef _MSC_VER; 9#pragma GCC diagnostic ignored ""-Wunused-variable""; 10#endif; 11 ; 12#include ""Math/Util.h""; 13 ; 14#include ""TMVA/Pattern.h""; 15#include ""TMVA/MethodBase.h""; 16 ; 17#include <tuple>; 18#include <future>; 19#include <random>; 20 ; 21namespace TMVA; 22{; 23 namespace DNN; 24 {; 25 ; 26 ; 27 ; 28 ; 29 ; 30 ; 31 ; 32 ; 33 template <typename T>; 34 T uniformFromTo (T from, T to); 35 {; 36 return from + (rand ()* (to - from)/RAND_MAX);; 37 }; 38 ; 39 ; 40 ; 41 template <typename Container, typename T>; 42 void uniformDouble (Container& container, T maxValue); 43 {; 44 for (auto it = begin (container), itEnd = end (container); it != itEnd; ++it); 45 {; 46// (*it) = uniformFromTo (-1.0*maxValue, 1.0*maxValue);; 47 (*it) = TMVA::DNN::uniformFromTo (-1.0*maxValue, 1.0*maxValue);; 48 }; 49 }; 50 ; 51 ; 52 extern std::shared_ptr<std::function<double(double)>> ZeroFnc;; 53 ; 54 ; 55 extern std::shared_ptr<std::function<double(double)>> Sigmoid;; 56 extern std::shared_ptr<std::function<double(double)>> InvSigmoid;; 57 ; 58 extern std::shared_ptr<std::function<double(double)>> Tanh;; 59 extern std::shared_ptr<std::function<double(double)>> InvTanh;; 60 ; 61 extern std::shared_ptr<std::function<double(double)>> Linear;; 62 extern std::shared_ptr<std::function<double(double)>> InvLinear;; 63 ; 64 extern std::shared_ptr<std::function<double(double)>> SymmReLU;; 65 extern std::shared_ptr<std::function<double(double)>> InvSymmReLU;; 66 ; 67 extern std::shared_ptr<std::function<double(double)>> ReLU;; 68 extern std::shared_ptr<std::function<double(double)>> InvReLU;; 69 ; 70 ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:97,Load,Loading,97,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/Reader.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; Reader.h File Reference. #include ""TMVA/Configurable.h""; #include ""TMVA/Types.h""; #include ""TMVA/DataSetInfo.h""; #include ""TMVA/DataInputHandler.h""; #include ""TMVA/DataSetManager.h""; #include <vector>; #include <map>; #include <stdexcept>; #include <string>. Include dependency graph for Reader.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::Reader;  The Reader class serves to use the MVAs in a specific analysis context. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . tmvatmvaincTMVAReader.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8h.html:95,Load,Loading,95,doc/master/Reader_8h.html,https://root.cern,https://root.cern/doc/master/Reader_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/Reader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Reader.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Reader *; 8 * *; 9 * *; 10 * Description: *; 11 * Reader class to be used in the user application to interpret the trained *; 12 * MVAs in an analysis context *; 13 * *; 14 * Authors (alphabetical order): *; 15 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 16 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 17 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 18 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 19 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 20 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 21 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 22 * *; 23 * Copyright (c) 2005-2011: *; 24 * CERN, Switzerland *; 25 * U. of Victoria, Canada *; 26 * MPI-K Heidelberg, Germany *; 27 * U. of Bonn, Germany *; 28 * *; 29 * Redistribution and use in source and binary forms, with or without *; 30 * modification, are permitted according to the terms listed in LICENSE *; 31 * (see tmva/doc/LICENSE) *; 32 **********************************************************************************/; 33 ; 34#ifndef ROOT_TMVA_Reader; 35#define ROOT_TMVA_Reader; 36 ; 37//////////////////////////////////////////////////////////////////////////; 38// //; 39// Reader //; 40// //; 41// Reader class to be used in the user application to interpret the //; 42// trained MVAs in an analysis context //; 43// //; 44/////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8h_source.html:92,Load,Loading,92,doc/master/Reader_8h_source.html,https://root.cern,https://root.cern/doc/master/Reader_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/Tools.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; Tools.h File Reference. #include <vector>; #include <string>; #include <sstream>; #include <iostream>; #include <atomic>; #include ""TXMLEngine.h""; #include ""TMatrixDSymfwd.h""; #include ""TMatrixDfwd.h""; #include ""TVectorDfwd.h""; #include ""TMVA/Types.h""; #include ""TMVA/VariableTransformBase.h""; #include ""TString.h""; #include ""TMVA/MsgLogger.h"". Include dependency graph for Tools.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TMVA::RandomGenerator< TRandomLike, UIntType, max_val >;  ; class  TMVA::Tools;  Global auxiliary applications and data treatment routines. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; Tools & TMVA::gTools ();  . tmvatmvaincTMVATools.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8h.html:94,Load,Loading,94,doc/master/Tools_8h.html,https://root.cern,https://root.cern/doc/master/Tools_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/inc/TMVA/Types.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Types.h. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Types *; 8 * *; 9 * *; 10 * Description: *; 11 * GLobal types (singleton class) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 17 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 18 * *; 19 * Copyright (c) 2005: *; 20 * CERN, Switzerland *; 21 * U. of Victoria, Canada *; 22 * MPI-K Heidelberg, Germany *; 23 * *; 24 * Redistribution and use in source and binary forms, with or without *; 25 * modification, are permitted according to the terms listed in LICENSE *; 26 * (http://mva.sourceforge.net/license.txt) *; 27 **********************************************************************************/; 28 ; 29#ifndef ROOT_TMVA_Types; 30#define ROOT_TMVA_Types; 31 ; 32//////////////////////////////////////////////////////////////////////////; 33// //; 34// Types //; 35// //; 36// Singleton class for Global types used by TMVA //; 37// //; 38//////////////////////////////////////////////////////////////////////////; 39 ; 40#include <map>; 41#include <atomic>; 42 ; 43#include ""RtypesCore.h""; 44 ; 45#include ""TString.h""; 46 ; 47namespace TMVA {; 48 ; 49 typedef UInt_t TMVAVersion_t;; 50 ; 51 class MsgLogger;; 52 ; 53 // message types for MsgLogger; 54 // define outside of Types class to facilite access; 55 enum EMsgType {; 56 kDEBUG = 1,; 57 kVERBOSE = 2,; 58 kINFO = 3,; 59 kWARNING = 4,; 60 kERROR = 5,; 61 kFATAL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html:91,Load,Loading,91,doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. CudaMatrix.cu. Go to the documentation of this file. 1// @(#)root/tmva/tmva/dnn:$Id$; 2// Author: Simon Pfreundschuh 13/07/16; 3 ; 4/*************************************************************************; 5 * Copyright (C) 2016, Simon Pfreundschuh *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/////////////////////////////////////////////; 13// Implementation of the TCudaMatrix class. //; 14/////////////////////////////////////////////; 15 ; 16#include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h""; 17#include ""TMVA/DNN/Architectures/Cuda/Device.h""; 18 ; 19#include <iostream>; 20 ; 21namespace TMVA {; 22namespace DNN {; 23 ; 24 ; 25//____________________________________________________________________________; 26__global__ void CurandInitializationKernel(unsigned long long seed,; 27 curandState_t *state); 28{; 29 int i = blockDim.y * blockIdx.y + threadIdx.y;; 30 int j = blockDim.x * blockIdx.x + threadIdx.x;; 31 int tid = i * gridDim.x + j;; 32 curand_init(seed + tid, 0, tid, state + tid);; 33}; 34 ; 35// Static members.; 36//____________________________________________________________________________; 37template<typename AFloat>; 38size_t TCudaMatrix<AFloat>::fInstances = 0;; 39template<typename AFloat>; 40cublasHandle_t TCudaMatrix<AFloat>::fCublasHandle = nullptr;; 41template<typename AFloat>; 42AFloat * TCudaMatrix<AFloat>::fDeviceReturn = nullptr;; 43template<typename AFloat>; 44AFloat * TCudaMatrix<AFloat>::fOnes = nullptr;; 45template<typename AFloat>; 46curandState_t * TCudaMatrix<AFloat>::fCurandStates = nullptr;; 47template<typename AFloat>; 48size_t TCudaMatrix<AFloat>::fNCurandStates = 0;; 49template<typename AFlo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaMatrix_8cu_source.html:115,Load,Loading,115,doc/master/CudaMatrix_8cu_source.html,https://root.cern,https://root.cern/doc/master/CudaMatrix_8cu_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/DataLoader.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataLoader.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Omar Zapata; 3// Mentors: Lorenzo Moneta, Sergei Gleyzer; 4//NOTE: Based on TMVA::Factory; 5 ; 6/**********************************************************************************; 7 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 8 * Package: TMVA *; 9 * Class : DataLoader *; 10 * *; 11 * *; 12 * Description: *; 13 * This is a class to load datasets into every booked method *; 14 * *; 15 * Authors (alphabetical): *; 16 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 17 * Omar Zapata <Omar.Zapata@cern.ch> - ITM/UdeA, Colombia *; 18 * Sergei Gleyzer<sergei.gleyzer@cern.ch> - CERN, Switzerland *; 19 * *; 20 * Copyright (c) 2005-2015: *; 21 * CERN, Switzerland *; 22 * ITM/UdeA, Colombia *; 23 * *; 24 * Redistribution and use in source and binary forms, with or without *; 25 * modification, are permitted according to the terms listed in LICENSE *; 26 * (see tmva/doc/LICENSE) *; 27 **********************************************************************************/; 28 ; 29 ; 30/*! \class TMVA::DataLoader; 31\ingroup TMVA; 32 ; 33*/; 34 ; 35#include ""TTree.h""; 36#include ""TH2.h""; 37#include ""TMatrixD.h""; 38 ; 39#include ""TMVA/DataLoader.h""; 40#include ""TMVA/Config.h""; 41#include ""TMVA/CvSplit.h""; 42#include ""TMVA/Tools.h""; 43#include ""TMVA/IMethod.h""; 44#include ""TMVA/MethodBase.h""; 45#include ""TMVA/DataInputHandler.h""; 46#include ""TMVA/DataSetManager.h""; 47#include ""TMVA/DataSetInfo.h""; 48#include ""TMVA/MethodBoost.h""; 49#include ""TMVA/MethodCategory.h""; 50 ; 51#include ""TMVA/VariableInfo.h""; 52#include ""TMVA/VariableIdentityTransform.h""; 53#include ""TMVA/VariableDecorrTransform.h""; 54#include ""TMVA/VariablePCATransform.h""; 55#include ""TMVA/VariableGaussTransform.h""; 56#include ""TMVA/VariableNormalizeTransfor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:93,Load,Loading,93,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,2,"['Load', 'load']","['Loading', 'load']"
Performance,". ROOT: tmva/tmva/src/DataSetFactory.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. DataSetFactory.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Eckhard von Toerne, Helge Voss; 3 ; 4/*****************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : DataSetFactory *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU, USA *; 17 * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; 18 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 19 * *; 20 * Copyright (c) 2009: *; 21 * CERN, Switzerland *; 22 * MPI-K Heidelberg, Germany *; 23 * U. of Bonn, Germany *; 24 * Redistribution and use in source and binary forms, with or without *; 25 * modification, are permitted according to the terms listed in LICENSE *; 26 * (see tmva/doc/LICENSE) *; 27 *****************************************************************************/; 28 ; 29/*! \class TMVA::DataSetFactory; 30\ingroup TMVA; 31 ; 32Class that contains all the data information; 33 ; 34*/; 35 ; 36#include <assert.h>; 37 ; 38#include <map>; 39#include <vector>; 40#include <iomanip>; 41#include <iostream>; 42 ; 43#include <algorithm>; 44#include <functional>; 45#include <numeric>; 46#include <random>; 47 ; 48#include ""TMVA/DataSetFactory.h""; 49 ; 50#include ""TEventList.h""; 51#include ""TFile.h""; 52#include ""TRandom3.h""; 53#include ""TMatrixF.h""; 54#include ""TVectorF.h""; 55#include ""TMath.h""; 56#include ""TTree.h""; 57#include ""TBranch.h""; 58 ; 59#include ""TMVA/MsgLogger.h""; 60#inclu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:97,Load,Loading,97,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/Factory.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros |; Functions |; Variables ; Factory.cxx File Reference. #include ""TMVA/Factory.h""; #include ""TMVA/ClassifierFactory.h""; #include ""TMVA/Config.h""; #include ""TMVA/Configurable.h""; #include ""TMVA/Tools.h""; #include ""TMVA/Ranking.h""; #include ""TMVA/DataSet.h""; #include ""TMVA/IMethod.h""; #include ""TMVA/MethodBase.h""; #include ""TMVA/DataInputHandler.h""; #include ""TMVA/DataSetManager.h""; #include ""TMVA/DataSetInfo.h""; #include ""TMVA/DataLoader.h""; #include ""TMVA/MethodBoost.h""; #include ""TMVA/MethodCategory.h""; #include ""TMVA/ROCCalc.h""; #include ""TMVA/ROCCurve.h""; #include ""TMVA/MsgLogger.h""; #include ""TMVA/VariableInfo.h""; #include ""TMVA/VariableTransform.h""; #include ""TMVA/Results.h""; #include ""TMVA/ResultsClassification.h""; #include ""TMVA/ResultsRegression.h""; #include ""TMVA/ResultsMulticlass.h""; #include <list>; #include <bitset>; #include <set>; #include ""TMVA/Types.h""; #include ""TROOT.h""; #include ""TFile.h""; #include ""TLeaf.h""; #include ""TEventList.h""; #include ""TH2.h""; #include ""TGraph.h""; #include ""TStyle.h""; #include ""TMatrixF.h""; #include ""TMatrixDSym.h""; #include ""TMultiGraph.h""; #include ""TPrincipal.h""; #include ""TMath.h""; #include ""TSystem.h""; #include ""TCanvas.h"". Include dependency graph for Factory.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  . Macros; #define READXML   kTRUE;  ; #define VIBITS   32;  . Functions; static uint64_t sum (uint64_t i);  . Variables; const Int_t MinNoTrainingEvents = 10;  . Macro Definition Documentation. ◆ READXML. #define READXML   kTRUE. Definition at line 100 of file Factory.cxx. ◆ VIBITS. #define VIBITS   32. Definition at line 103 of file Fact",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx.html:93,Load,Loading,93,doc/master/tmva_2tmva_2src_2Factory_8cxx.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/Factory.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Factory.cxx. Go to the documentation of this file. 1// @(#)Root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag; 3// Updated by: Omar Zapata, Kim Albertsson; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Factory *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors : *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; 16 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 17 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 18 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 19 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 20 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 21 * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; 22 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 23 * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; 24 * Kim Albertsson <kim.albertsson@cern.ch> - LTU & CERN *; 25 * *; 26 * Copyright (c) 2005-2015: *; 27 * CERN, Switzerland *; 28 * U. of Victoria, Canada *; 29 * MPI-K Heidelberg, Germany *; 30 * U. of Bonn, Germany *; 31 * UdeA/ITM, Colombia *; 32 * U. of Florida, USA *; 33 * *; 34 * Redistribution and use in source and binary forms, with or without *; 35 * modification, are permitted according to the terms listed in LICENSE *; 36 * (see tmva/doc/LICENSE) *; 37 **********************************************************************************/; 38 ; 39/*! \class TMVA::Factory; 40\ingroup TMVA; 41 ; 42This is the main MVA steering class.; 43It cr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:90,Load,Loading,90,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/MethodCuts.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodCuts.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Eckhard von Toerne, Helge Voss, Kai Voss; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; 6 * Package: TMVA *; 7 * Class : TMVA::MethodCuts *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; 16 * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; 17 * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; 18 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 19 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 20 * *; 21 * Copyright (c) 2005: *; 22 * CERN, Switzerland *; 23 * U. of Victoria, Canada *; 24 * MPI-K Heidelberg, Germany *; 25 * *; 26 * Redistribution and use in source and binary forms, with or without *; 27 * modification, are permitted according to the terms listed in LICENSE *; 28 * (see tmva/doc/LICENSE) *; 29 **********************************************************************************/; 30 ; 31/*! \class TMVA::MethodCuts; 32\ingroup TMVA; 33 ; 34 Multivariate optimisation of signal efficiency for given background; 35 efficiency, applying rectangular minimum and maximum requirements.; 36 ; 37 Also implemented is a ""decorrelate/diagonalized cuts approach"",; 38 which improves over the uncorrelated cuts approach by; 39 transforming linearly the input variables into a diagonal space,; 40 using the square-root of the covariance matrix.; 41 ; 42 Other optimisation criteria, such as maximising the si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:93,Load,Loading,93,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/MethodDL.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodDL.cxx. Go to the documentation of this file. 1// @(#)root/tmva/tmva/cnn:$Id$Ndl; 2// Authors: Vladimir Ilievski, Lorenzo Moneta, Saurav Shekhar, Ravi Kiran; 3/**********************************************************************************; 4 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 5 * Package: TMVA *; 6 * Class : MethodDL *; 7 * *; 8 * *; 9 * Description: *; 10 * Deep Neural Network Method *; 11 * *; 12 * Authors (alphabetical): *; 13 * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; 14 * Saurav Shekhar <sauravshekhar01@gmail.com> - ETH Zurich, Switzerland *; 15 * Ravi Kiran S <sravikiran0606@gmail.com> - CERN, Switzerland *; 16 * *; 17 * Copyright (c) 2005-2015: *; 18 * CERN, Switzerland *; 19 * U. of Victoria, Canada *; 20 * MPI-K Heidelberg, Germany *; 21 * U. of Bonn, Germany *; 22 * *; 23 * Redistribution and use in source and binary forms, with or without *; 24 * modification, are permitted according to the terms listed in LICENSE *; 25 * (see tmva/doc/LICENSE) *; 26 **********************************************************************************/; 27 ; 28#include ""TFormula.h""; 29#include ""TString.h""; 30#include ""TMath.h""; 31#include ""TObjString.h""; 32 ; 33#include ""TMVA/Tools.h""; 34#include ""TMVA/Configurable.h""; 35#include ""TMVA/IMethod.h""; 36#include ""TMVA/ClassifierFactory.h""; 37#include ""TMVA/MethodDL.h""; 38#include ""TMVA/Types.h""; 39#include ""TMVA/DNN/TensorDataLoader.h""; 40#include ""TMVA/DNN/Functions.h""; 41#include ""TMVA/DNN/DLMinimizers.h""; 42#include ""TMVA/DNN/SGD.h""; 43#include ""TMVA/DNN/Adam.h""; 44#include ""TMVA/DNN/Adagrad.h""; 45#include ""TMVA/DNN/RMSProp.h""; 46#include ""TMVA/DNN/Adadelta.h""; 47#include ""TMVA/Timer.h""; 48 ; 49#ifdef R__HAS_TMVAGPU; 50#include ""TMVA/DNN/Architectures/Cuda.h""; 51#ifdef R__HAS_CUDNN; 52#include ""TMVA/DNN/Architectures/TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:91,Load,Loading,91,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/MethodDNN.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. MethodDNN.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Peter Speckmayer; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : MethodDNN *; 8 * *; 9 * *; 10 * Description: *; 11 * A neural network implementation *; 12 * *; 13 * Authors (alphabetical): *; 14 * Simon Pfreundschuh <s.pfreundschuh@gmail.com> - CERN, Switzerland *; 15 * Peter Speckmayer <peter.speckmayer@gmx.ch> - CERN, Switzerland *; 16 * *; 17 * Copyright (c) 2005-2015: *; 18 * CERN, Switzerland *; 19 * U. of Victoria, Canada *; 20 * MPI-K Heidelberg, Germany *; 21 * U. of Bonn, Germany *; 22 * *; 23 * Redistribution and use in source and binary forms, with or without *; 24 * modification, are permitted according to the terms listed in LICENSE *; 25 * (see tmva/doc/LICENSE) *; 26 **********************************************************************************/; 27 ; 28/*! \class TMVA::MethodDNN; 29\ingroup TMVA; 30Deep Neural Network Implementation.; 31*/; 32 ; 33#include ""TMVA/MethodDNN.h""; 34 ; 35#include ""TString.h""; 36#include ""TFormula.h""; 37#include ""TObjString.h""; 38 ; 39#include ""TMVA/ClassifierFactory.h""; 40#include ""TMVA/Configurable.h""; 41#include ""TMVA/IMethod.h""; 42#include ""TMVA/MsgLogger.h""; 43#include ""TMVA/MethodBase.h""; 44#include ""TMVA/Timer.h""; 45#include ""TMVA/Types.h""; 46#include ""TMVA/Tools.h""; 47#include ""TMVA/Config.h""; 48#include ""TMVA/Ranking.h""; 49 ; 50#include ""TMVA/DNN/Net.h""; 51#include ""TMVA/DNN/Architectures/Reference.h""; 52 ; 53#include ""TMVA/NeuralNet.h""; 54#include ""TMVA/Monitoring.h""; 55 ; 56#ifdef R__HAS_TMVACPU; 57#include ""TMVA/DNN/Architectures/Cpu.h""; 58#endif; 59#ifdef R__HAS_TMVAGPU; 60#include ""TMVA/DNN/Architectures/Cuda.h""; 61#endif; 62 ; 63#includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:92,Load,Loading,92,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/NeuralNet.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NeuralNet.cxx. Go to the documentation of this file. 1 ; 2 ; 3#include ""TMVA/NeuralNet.h""; 4 ; 5#include ""TMVA/MethodDNN.h""; 6 ; 7namespace TMVA; 8{; 9 namespace DNN; 10 {; 11 ; 12 std::shared_ptr<std::function<double(double)>> Gauss = std::make_shared<std::function<double(double)>> ([](double value){ const double s = 6.0; return exp (-std::pow(value*s,2.0)); });; 13 std::shared_ptr<std::function<double(double)>> GaussComplement = std::make_shared<std::function<double(double)>> ([](double value){ const double s = 6.0; return 1.0 - exp (-std::pow(value*s,2.0)); });; 14 std::shared_ptr<std::function<double(double)>> InvGauss = std::make_shared<std::function<double(double)>> ([](double value){ const double s = 6.0; return -2.0 * value * s*s * (*Gauss.get ()) (value); });; 15 std::shared_ptr<std::function<double(double)>> InvGaussComplement = std::make_shared<std::function<double(double)>> ([](double value){ const double s = 6.0; return +2.0 * value * s*s * (*GaussComplement.get ()) (value); });; 16 std::shared_ptr<std::function<double(double)>> InvLinear = std::make_shared<std::function<double(double)>> ([](double /*value*/){ return 1.0; });; 17 std::shared_ptr<std::function<double(double)>> InvReLU = std::make_shared<std::function<double(double)>> ([](double value){ const double margin = 0.0; return value > margin ? 1.0 : 0; });; 18 std::shared_ptr<std::function<double(double)>> InvSigmoid = std::make_shared<std::function<double(double)>> ([](double value){ double s = (*Sigmoid.get ()) (value); return s*(1.0-s); });; 19 std::shared_ptr<std::function<double(double)>> InvSoftPlus = std::make_shared<std::function<double(double)>> ([](double value){ return 1.0 / (1.0 + std::exp (-value)); });; 20 std::shared_ptr<std::function<double(double)>> InvSoftSign = std::make_shared<std::function<double(double)>> ([](double value){ return std::pow ((1.0 -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8cxx_source.html:92,Load,Loading,92,doc/master/NeuralNet_8cxx_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/Reader.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Reader.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne, Jan Therhaag; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Reader *; 8 * *; 9 * *; 10 * Description: *; 11 * Reader class to be used in the user application to interpret the trained *; 12 * MVAs in an analysis context *; 13 * *; 14 * Authors (alphabetical order): *; 15 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 16 * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; 17 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 18 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 19 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 20 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 21 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 22 * *; 23 * Copyright (c) 2005-2011: *; 24 * CERN, Switzerland *; 25 * U. of Victoria, Canada *; 26 * MPI-K Heidelberg, Germany *; 27 * U. of Bonn, Germany *; 28 * *; 29 * Redistribution and use in source and binary forms, with or without *; 30 * modification, are permitted according to the terms listed in LICENSE *; 31 * (see tmva/doc/LICENSE) *; 32 **********************************************************************************/; 33 ; 34/*! \class TMVA::Reader; 35\ingroup TMVA; 36 ; 37 The Reader class serves to use the MVAs in a specific analysis context.; 38 Within an event loop, a vector is filled that corresponds to the variables; 39 that were used to train the MVA(s) during the training stage. This vector; 40 is transfered to the Reader, who takes care of interpreting the weight; 41 file of the MVA of choice, an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:89,Load,Loading,89,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/Tools.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Tools.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Jan Therhaag; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : Tools *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 16 * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; 17 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 18 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 19 * *; 20 * Copyright (c) 2005-2011: *; 21 * CERN, Switzerland *; 22 * U. of Victoria, Canada *; 23 * MPI-K Heidelberg, Germany *; 24 * U. of Bonn, Germany *; 25 * *; 26 * Redistribution and use in source and binary forms, with or without *; 27 * modification, are permitted according to the terms listed in LICENSE *; 28 * (see tmva/doc/LICENSE) *; 29 **********************************************************************************/; 30 ; 31/*! \class TMVA::Tools; 32\ingroup TMVA; 33Global auxiliary applications and data treatment routines.; 34*/; 35 ; 36#include ""TMVA/Tools.h""; 37 ; 38#include ""TMVA/Config.h""; 39#include ""TMVA/Event.h""; 40#include ""TMVA/Version.h""; 41#include ""TMVA/PDF.h""; 42#include ""TMVA/MsgLogger.h""; 43#include ""TMVA/Types.h""; 44 ; 45#include ""TObjString.h""; 46#include ""TMath.h""; 47#include ""TString.h""; 48#include ""TTree.h""; 49#include ""TLeaf.h""; 50#include ""TH1.h""; 51#include ""TH2.h""; 52#include ""TList.h""; 53#include ""TSpline.h""; 54#include ""TVector.h""; 55#include ""TMatrixD.h""; 56#include ""TMatrixDSymE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:88,Load,Loading,88,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmva/src/VariableTransform.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. VariableTransform.cxx. Go to the documentation of this file. 1// @(#)root/tmva $Id$; 2// Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Omar Zapata; 3 ; 4/**********************************************************************************; 5 * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; 6 * Package: TMVA *; 7 * Class : VariableTransformBase *; 8 * *; 9 * *; 10 * Description: *; 11 * Implementation (see header for description) *; 12 * *; 13 * Authors (alphabetical): *; 14 * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; 15 * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; 16 * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; 17 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 18 * *; 19 * Copyright (c) 2005: *; 20 * CERN, Switzerland *; 21 * MPI-K Heidelberg, Germany *; 22 * *; 23 * Redistribution and use in source and binary forms, with or without *; 24 * modification, are permitted according to the terms listed in LICENSE *; 25 * (see tmva/doc/LICENSE) *; 26 **********************************************************************************/; 27 ; 28#include ""TMVA/VariableTransformBase.h""; 29#include ""TMVA/VariableIdentityTransform.h""; 30#include ""TMVA/VariableDecorrTransform.h""; 31#include ""TMVA/VariableInfo.h""; 32#include ""TMVA/VariablePCATransform.h""; 33#include ""TMVA/VariableGaussTransform.h""; 34#include ""TMVA/VariableNormalizeTransform.h""; 35 ; 36#include ""TMVA/Config.h""; 37#include ""TMVA/DataSetInfo.h""; 38#include ""TMVA/MsgLogger.h""; 39#include ""TMVA/Ranking.h""; 40#include ""TMVA/Tools.h""; 41#include ""TMVA/Types.h""; 42#include ""TMVA/Version.h""; 43#include ""TMVA/TransformationHandler.h""; 44 ; 45#include ""THashTable.h""; 46#include ""TList.h""; 47#include ""TObjString.h""; 48 ; 49#include <algorithm>; 50#include <cass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:100,Load,Loading,100,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmvagui/inc/TMVA/BDT.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. BDT.h. Go to the documentation of this file. 1#ifndef BDT__HH; 2#define BDT__HH; 3 ; 4#include <vector>; 5 ; 6#include ""tmvaglob.h""; 7 ; 8#include ""RQ_OBJECT.h""; 9 ; 10#include ""TStyle.h""; 11#include ""TPad.h""; 12#include ""TCanvas.h""; 13#include ""TColor.h""; 14#include ""TPaveText.h""; 15#include ""TControlBar.h""; 16 ; 17#include ""TGWindow.h""; 18#include ""TGButton.h""; 19#include ""TGLabel.h""; 20#include ""TGNumberEntry.h""; 21 ; 22#include ""TMVA/DecisionTree.h""; 23#include ""TMVA/Tools.h""; 24#include ""TXMLEngine.h""; 25 ; 26// Uncomment this only if the link problem is solved. The include statement tends; 27// to use the ROOT classes rather than the local TMVA release; 28// #include ""TMVA/DecisionTree.h""; 29// #include ""TMVA/DecisionTreeNode.h""; 30namespace TMVA{; 31 ; 32 // this macro displays a decision tree read in from the weight file; 33 ; 34 ; 35 inline Int_t getSigColorF () {return TColor::GetColor( ""#0000FF"" );} // Pure Signal; 36 inline Int_t getBkgColorF () {return TColor::GetColor( ""#FF0000"" );} // Pure Backgr.; 37 inline Int_t getIntColorF () {return TColor::GetColor( ""#33aa77"" );} // novel green; 38 ; 39 ; 40 inline Int_t getSigColorT () {return 10;}; 41 inline Int_t getBkgColorT () {return 10;}; 42 inline Int_t getIntColorT () {return 10;}; 43 ; 44 ; 45 ; 46 class StatDialogBDT {; 47 ; 48 RQ_OBJECT(""StatDialogBDT""); 49 ; 50 public:; 51 ; 52 StatDialogBDT(TString dataset, const TGWindow* p, TString wfile,; 53 TString methName = ""BDT"", Int_t itree = 0 );; 54 virtual ~StatDialogBDT() {; 55 TMVA::DecisionTreeNode::SetIsTraining(false);; 56 fThis = nullptr;; 57 fMain->CloseWindow();; 58 fMain->Cleanup();; 59 if(gROOT->GetListOfCanvases()->FindObject(fCanvas)); 60 delete fCanvas;; 61 }; 62 ; 63 // draw method; 64 void DrawTree(Int_t itree );; 65 ; 66 void RaiseDialog() { if (fMain) { fMain->RaiseWindow(); fMain->Layout(); fMain->MapWindow();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BDT_8h_source.html:92,Load,Loading,92,doc/master/BDT_8h_source.html,https://root.cern,https://root.cern/doc/master/BDT_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmvagui/inc/TMVA/TMVAGui.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; TMVAGui.h File Reference. #include ""TList.h""; #include ""TKey.h""; #include ""TString.h""; #include ""TControlBar.h""; #include ""tmvaglob.h"". Include dependency graph for TMVAGui.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  TMVA::TMVAGUI;  . Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; void TMVA::ActionButton (TControlBar *cbar, const TString &title, const TString &macro, const TString &comment, const TString &buttonType, TString requiredKey="""");  ; TList * TMVA::GetKeyList (const TString &pattern);  ; void TMVA::TMVAGui (const char *fName=""TMVA.root"", TString dataset="""");  . tmvatmvaguiincTMVATMVAGui.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAGui_8h.html:99,Load,Loading,99,doc/master/TMVAGui_8h.html,https://root.cern,https://root.cern/doc/master/TMVAGui_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmvagui/inc/TMVA/TMVAMultiClassGui.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions ; TMVAMultiClassGui.h File Reference. #include ""TList.h""; #include ""TKey.h""; #include ""TString.h""; #include ""TControlBar.h""; #include ""tmvaglob.h"". Include dependency graph for TMVAMultiClassGui.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; void TMVA::MultiClassActionButton (TControlBar *cbar, const TString &title, const TString &macro, const TString &comment, const TString &buttonType, TString requiredKey="""");  ; TList * TMVA::MultiClassGetKeyList (const TString &pattern);  ; void TMVA::TMVAMultiClassGui (const char *fName=""TMVAMulticlass.root"", TString dataset="""");  . tmvatmvaguiincTMVATMVAMultiClassGui.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultiClassGui_8h.html:109,Load,Loading,109,doc/master/TMVAMultiClassGui_8h.html,https://root.cern,https://root.cern/doc/master/TMVAMultiClassGui_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmvagui/inc/TMVA/TMVARegGui.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions ; TMVARegGui.h File Reference. #include ""TString.h""; #include ""TControlBar.h""; #include ""tmvaglob.h"". Include dependency graph for TMVARegGui.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  TMVA;  create variable transformations ;  . Functions; void TMVA::RegGuiActionButton (TControlBar *cbar, const TString &title, const TString &macro, const TString &comment, const TString &buttonType, TString requiredKey="""");  ; TList * TMVA::RegGuiGetKeyList (const TString &pattern);  ; void TMVA::TMVARegGui (const char *fName=""TMVAReg.root"", TString dataset="""");  . tmvatmvaguiincTMVATMVARegGui.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegGui_8h.html:102,Load,Loading,102,doc/master/TMVARegGui_8h.html,https://root.cern,https://root.cern/doc/master/TMVARegGui_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tmva/tmvagui/src/efficienciesMulticlass.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions |; Variables ; efficienciesMulticlass.cxx File Reference. #include ""TMVA/efficienciesMulticlass.h""; #include ""TMVA/Config.h""; #include ""TMVA/tmvaglob.h""; #include ""TControlBar.h""; #include ""TFile.h""; #include ""TGraph.h""; #include ""TH2F.h""; #include ""TIterator.h""; #include ""TKey.h""; #include ""TROOT.h""; #include <iostream>. Include dependency graph for efficienciesMulticlass.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  EfficiencyPlotWrapper;  Note: This file assumes a certain structure on the input file. More...;  . Namespaces; namespace  TMVA;  create variable transformations ;  . Typedefs; using classcanvasmap_t = std::map< TString, EfficiencyPlotWrapper * >;  ; using roccurvelist_t = std::vector< std::tuple< TString, TString, TGraph * > >;  . Functions; std::vector< TString > TMVA::getclassnames (TString dataset, TString fin);  ; roccurvelist_t TMVA::getRocCurves (TDirectory *binDir, TString methodPrefix, TString graphNameRef);  ; void TMVA::plotEfficienciesMulticlass (roccurvelist_t rocCurves, classcanvasmap_t classCanvasMap);  . Variables; const char * BUTTON_TYPE = ""button"";  . Typedef Documentation. ◆ classcanvasmap_t. using classcanvasmap_t = std::map<TString, EfficiencyPlotWrapper *>. Definition at line 116 of file efficienciesMulticlass.cxx. ◆ roccurvelist_t. using roccurvelist_t = std::vector<std::tuple<TString, TString, TGraph *> >. Definition at line 117 of file efficienciesMulticlass.cxx. Variable Documentation. ◆ BUTTON_TYPE. const char* BUTTON_TYPE = ""button"". Definition at line 120 of file efficienciesMulticlass.cxx. tmvatmvaguisrcefficienciesMulticlass.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/efficienciesMulticlass_8cxx.html:111,Load,Loading,111,doc/master/efficienciesMulticlass_8cxx.html,https://root.cern,https://root.cern/doc/master/efficienciesMulticlass_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RArrowDS.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RArrowDS.hxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#ifndef ROOT_RARROWTDS; 10#define ROOT_RARROWTDS; 11 ; 12#include ""ROOT/RDataFrame.hxx""; 13#include ""ROOT/RDataSource.hxx""; 14 ; 15#include <memory>; 16 ; 17namespace arrow {; 18class Table;; 19}; 20 ; 21namespace ROOT {; 22namespace Internal {; 23namespace RDF {; 24class TValueGetter;; 25} // namespace RDF; 26} // namespace Internal; 27 ; 28namespace RDF {; 29 ; 30class RArrowDS final : public RDataSource {; 31private:; 32 std::shared_ptr<arrow::Table> fTable;; 33 std::vector<std::pair<ULong64_t, ULong64_t>> fEntryRanges;; 34 std::vector<std::string> fColumnNames;; 35 size_t fNSlots = 0U;; 36 ; 37 std::vector<std::pair<size_t, size_t>> fGetterIndex; // (columnId, visitorId); 38 std::vector<std::unique_ptr<ROOT::Internal::RDF::TValueGetter>> fValueGetters; // Visitors to be used to track and get entries. One per column.; 39 std::vector<void *> GetColumnReadersImpl(std::string_view name, const std::type_info &type) final;; 40 ; 41public:; 42 RArrowDS(std::shared_ptr<arrow::Table> table, std::vector<std::string> const &columns);; 43 ~RArrowDS();; 44 const std::vector<std::string> &GetColumnNames() const final;; 45 std::vector<std::pair<ULong64_t, ULong64_t>> GetEntryRanges() final;; 46 std::string GetTypeName(std::string_view colName) const final;; 47 bool HasColumn(std::string_view colName) const final;; 48 bool SetEntry(unsigned int slot, ULong64_t entry) final;; 49 void InitSlot(unsigned int slot, ULong64_t fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RArrowDS_8hxx_source.html:101,Load,Loading,101,doc/master/RArrowDS_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RArrowDS_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ActionHelpers.hxx File ReferenceDataframe. #include ""Compression.h""; #include <string_view>; #include ""ROOT/RVec.hxx""; #include ""ROOT/TBufferMerger.hxx""; #include ""ROOT/RDF/RCutFlowReport.hxx""; #include ""ROOT/RDF/RSampleInfo.hxx""; #include ""ROOT/RDF/Utils.hxx""; #include ""ROOT/RSnapshotOptions.hxx""; #include ""ROOT/TypeTraits.hxx""; #include ""ROOT/RDF/RDisplay.hxx""; #include ""RtypesCore.h""; #include ""TBranch.h""; #include ""TClassEdit.h""; #include ""TClassRef.h""; #include ""TDirectory.h""; #include ""TError.h""; #include ""TFile.h""; #include ""TH1.h""; #include ""TGraph.h""; #include ""TGraphAsymmErrors.h""; #include ""TLeaf.h""; #include ""TObject.h""; #include ""TTree.h""; #include ""TTreeReader.h""; #include ""TStatistic.h""; #include ""ROOT/RDF/RActionImpl.hxx""; #include ""ROOT/RDF/RMergeableValue.hxx""; #include <algorithm>; #include <functional>; #include <limits>; #include <memory>; #include <stdexcept>; #include <string>; #include <type_traits>; #include <utility>; #include <vector>; #include <iomanip>; #include <numeric>. Include dependency graph for ActionHelpers.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Detailed Description; AuthorEnrico Guiraud, CERN . Danilo Piparo, CERN ; Date2016-12 ; AuthorVincenzo Eduardo Padulano ; Date2020-06 ; Definition in file ActionHelpers.hxx. treedataframeincROOTRDFActionHelpers.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ActionHelpers_8hxx.html:113,Load,Loading,113,doc/master/ActionHelpers_8hxx.html,https://root.cern,https://root.cern/doc/master/ActionHelpers_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDF/HistoModels.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. HistoModels.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 09/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDFHISTOMODELS; 12#define ROOT_RDFHISTOMODELS; 13 ; 14#include <TString.h>; 15#include <memory>; 16 ; 17class TH1D;; 18class TH2D;; 19class TH3D;; 20template <typename T>; 21class THnT;; 22using THnD = THnT<double>;; 23class TProfile;; 24class TProfile2D;; 25 ; 26namespace ROOT {; 27 ; 28namespace RDF {; 29 ; 30struct TH1DModel {; 31 TString fName;; 32 TString fTitle;; 33 int fNbinsX = 128;; 34 double fXLow = 0.;; 35 double fXUp = 64.;; 36 std::vector<double> fBinXEdges;; 37 ; 38 TH1DModel() = default;; 39 TH1DModel(const TH1DModel &) = default;; 40 ~TH1DModel();; 41 TH1DModel(const ::TH1D &h);; 42 TH1DModel(const char *name, const char *title, int nbinsx, double xlow, double xup);; 43 TH1DModel(const char *name, const char *title, int nbinsx, const float *xbins);; 44 TH1DModel(const char *name, const char *title, int nbinsx, const double *xbins);; 45 std::shared_ptr<::TH1D> GetHistogram() const;; 46};; 47 ; 48struct TH2DModel {; 49 TString fName;; 50 TString fTitle;; 51 int fNbinsX = 128;; 52 double fXLow = 0.;; 53 double fXUp = 64.;; 54 int fNbinsY = 128;; 55 double fYLow = 0.;; 56 double fYUp = 64.;; 57 std::vector<double> fBinXEdges;; 58 std::vector<double> fBinYEdges;; 59 ; 60 TH2DModel() = default;; 61 TH2DModel(const TH2DModel &) = default;; 62 ~TH2DModel();; 63 TH2DModel(const ::TH2D &h);; 64 TH2DModel(const char *name,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HistoModels_8hxx_source.html:108,Load,Loading,108,doc/master/HistoModels_8hxx_source.html,https://root.cern,https://root.cern/doc/master/HistoModels_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDF/InterfaceUtils.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. InterfaceUtils.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 02/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_TINTERFACE_UTILS; 12#define ROOT_RDF_TINTERFACE_UTILS; 13 ; 14#include ""RColumnRegister.hxx""; 15#include <ROOT/RDF/RAction.hxx>; 16#include <ROOT/RDF/ActionHelpers.hxx> // for BuildAction; 17#include <ROOT/RDF/RColumnRegister.hxx>; 18#include <ROOT/RDF/RDefine.hxx>; 19#include <ROOT/RDF/RDefinePerSample.hxx>; 20#include <ROOT/RDF/RFilter.hxx>; 21#include <ROOT/RDF/Utils.hxx>; 22#include <ROOT/RDF/RJittedAction.hxx>; 23#include <ROOT/RDF/RJittedDefine.hxx>; 24#include <ROOT/RDF/RJittedFilter.hxx>; 25#include <ROOT/RDF/RJittedVariation.hxx>; 26#include <ROOT/RDF/RLoopManager.hxx>; 27#include <string_view>; 28#include <ROOT/RDF/RVariation.hxx>; 29#include <ROOT/TypeTraits.hxx>; 30#include <TError.h> // gErrorIgnoreLevel; 31#include <TH1.h>; 32#include <TROOT.h> // IsImplicitMTEnabled; 33 ; 34#include <deque>; 35#include <functional>; 36#include <map>; 37#include <memory>; 38#include <string>; 39#include <type_traits>; 40#include <typeinfo>; 41#include <vector>; 42#include <unordered_map>; 43 ; 44class TObjArray;; 45class TTree;; 46namespace ROOT {; 47namespace Detail {; 48namespace RDF {; 49class RNodeBase;; 50}; 51}; 52namespace RDF {; 53template <typename T>; 54class RResultPtr;; 55template<typename T, typename V>; 56class RInterface;; 57using RNode = RInterface<::ROOT::Detail::RDF::RNodeBase, void>;; 58class RDataSour",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/InterfaceUtils_8hxx_source.html:111,Load,Loading,111,doc/master/InterfaceUtils_8hxx_source.html,https://root.cern,https://root.cern/doc/master/InterfaceUtils_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDF/RActionImpl.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RActionImpl.hxx. Go to the documentation of this file. 1/*************************************************************************; 2 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 3 * All rights reserved. *; 4 * *; 5 * For the licensing terms see $ROOTSYS/LICENSE. *; 6 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 7 *************************************************************************/; 8 ; 9#ifndef ROOT_RDF_DETAIL_RACTIONIMPL; 10#define ROOT_RDF_DETAIL_RACTIONIMPL; 11 ; 12#include <ROOT/RDF/RSampleInfo.hxx> // SampleCallback_t; 13 ; 14#include <memory> // std::unique_ptr; 15#include <stdexcept> // std::logic_error; 16#include <utility> // std::declval; 17 ; 18namespace ROOT {; 19namespace Detail {; 20namespace RDF {; 21 ; 22class RMergeableValueBase;; 23 ; 24/// Base class for action helpers, see RInterface::Book() for more information.; 25template <typename Helper>; 26class R__CLING_PTRCHECK(off) RActionImpl {; 27public:; 28 virtual ~RActionImpl() = default;; 29 // call Helper::FinalizeTask if present, do nothing otherwise; 30 template <typename T = Helper>; 31 auto CallFinalizeTask(unsigned int slot) -> decltype(std::declval<T>().FinalizeTask(slot)); 32 {; 33 static_cast<Helper *>(this)->FinalizeTask(slot);; 34 }; 35 ; 36 template <typename... Args>; 37 void CallFinalizeTask(unsigned int, Args...) {}; 38 ; 39 template <typename H = Helper>; 40 auto CallPartialUpdate(unsigned int slot) -> decltype(std::declval<H>().PartialUpdate(slot), (void *)(nullptr)); 41 {; 42 return &static_cast<Helper *>(this)->PartialUpdate(slot);; 43 }; 44 ; 45 template <typename... Args>; 46 [[noreturn]] void *CallPartialUpdate(...); 47 {; 48 throw std::logic_error(""This action does not support callbacks!"");; 49 }; 50 ; 51 template <typename T = Helper>; 52 auto CallMakeNew(void *typeErasedResSharedPtr) -> decl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RActionImpl_8hxx_source.html:108,Load,Loading,108,doc/master/RActionImpl_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RActionImpl_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDF/RDatasetSpec.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDatasetSpec.hxx. Go to the documentation of this file. 1// Author: Vincenzo Eduardo Padulano CERN/UPV, Ivan Kabadzhov CERN 06/2022; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_RDATASETSPEC; 12#define ROOT_RDF_RDATASETSPEC; 13 ; 14#include <limits>; 15#include <string>; 16#include <utility> // std::pair; 17#include <vector>; 18 ; 19#include <ROOT/RDF/RSample.hxx>; 20#include <ROOT/RFriendInfo.hxx>; 21#include <RtypesCore.h> // Long64_t; 22 ; 23namespace ROOT {; 24namespace Detail {; 25namespace RDF {; 26class RLoopManager;; 27}; 28} // namespace Detail; 29namespace RDF {; 30namespace Experimental {; 31 ; 32// clang-format off; 33/**; 34\class ROOT::RDF::Experimental::RDatasetSpec; 35\ingroup dataframe; 36\brief The dataset specification for RDataFrame.; 37 ; 38This class allows users to create the dataset specification for RDataFrame ; 39to which they add samples (using the RSample class object) with tree names and file names, ; 40and, optionally, the metadata information (using the RMetaData class objects). ; 41Adding global friend trees and/or setting the range of events to be processed; 42are also available.; 43 ; 44Note, there exists yet another method to build RDataFrame from the dataset information using the JSON file format: \ref FromSpec(const std::string &jsonFile) ""FromSpec()"". ; 45*/; 46 ; 47class RDatasetSpec {; 48 // clang-format on ; 49 friend class ::ROOT::Detail::RDF::RLoopManager; // for MoveOutSamples; 50 ; 51public:; 52 struct REntryRange {; 53 Long64_t fB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDatasetSpec_8hxx_source.html:109,Load,Loading,109,doc/master/RDatasetSpec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDatasetSpec_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDF/RInterface.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RInterface.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 03/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_TINTERFACE; 12#define ROOT_RDF_TINTERFACE; 13 ; 14#include ""ROOT/RDataSource.hxx""; 15#include ""ROOT/RDF/ActionHelpers.hxx""; 16#include ""ROOT/RDF/HistoModels.hxx""; 17#include ""ROOT/RDF/InterfaceUtils.hxx""; 18#include ""ROOT/RDF/RColumnRegister.hxx""; 19#include ""ROOT/RDF/RDefaultValueFor.hxx""; 20#include ""ROOT/RDF/RDefine.hxx""; 21#include ""ROOT/RDF/RDefinePerSample.hxx""; 22#include ""ROOT/RDF/RFilter.hxx""; 23#include ""ROOT/RDF/RInterfaceBase.hxx""; 24#include ""ROOT/RDF/RVariation.hxx""; 25#include ""ROOT/RDF/RLazyDSImpl.hxx""; 26#include ""ROOT/RDF/RLoopManager.hxx""; 27#include ""ROOT/RDF/RRange.hxx""; 28#include ""ROOT/RDF/RFilterWithMissingValues.hxx""; 29#include ""ROOT/RDF/Utils.hxx""; 30#include ""ROOT/RDF/RDFDescription.hxx""; 31#include ""ROOT/RDF/RVariationsDescription.hxx""; 32#include ""ROOT/RResultPtr.hxx""; 33#include ""ROOT/RSnapshotOptions.hxx""; 34#include <string_view>; 35#include ""ROOT/RVec.hxx""; 36#include ""ROOT/TypeTraits.hxx""; 37#include ""RtypesCore.h"" // for ULong64_t; 38#include ""TDirectory.h""; 39#include ""TH1.h"" // For Histo actions; 40#include ""TH2.h"" // For Histo actions; 41#include ""TH3.h"" // For Histo actions; 42#include ""THn.h""; 43#include ""TProfile.h""; 44#include ""TProfile2D.h""; 45#include ""TStatistic.h""; 46 ; 47#include <algorithm>; 48#include <cstddef>; 49#include <initializer_list>; 50#include <iterator> // std::back",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:107,Load,Loading,107,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDF/RResultMap.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RResultMap.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, CERN 11/2021; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_RRESULTMAP; 12#define ROOT_RDF_RRESULTMAP; 13 ; 14#include ""ROOT/RDF/RActionBase.hxx""; 15#include ""ROOT/RDF/RLoopManager.hxx""; 16#include ""ROOT/RDF/RMergeableValue.hxx""; 17#include ""ROOT/RDF/Utils.hxx"" // Union; 18 ; 19#include <memory>; 20#include <stdexcept>; 21#include <string>; 22#include <unordered_map>; 23#include <vector>; 24 ; 25namespace ROOT {; 26 ; 27namespace RDF {; 28 ; 29namespace Experimental {; 30// fwd decl for MakeResultMap; 31template <typename T>; 32class RResultMap;; 33} // namespace Experimental; 34} // namespace RDF; 35 ; 36namespace Detail {; 37namespace RDF {; 38template <typename T>; 39std::unique_ptr<RMergeableVariations<T>> GetMergeableValue(ROOT::RDF::Experimental::RResultMap<T> &rmap);; 40} // namespace RDF; 41} // namespace Detail; 42 ; 43namespace Internal {; 44namespace RDF {; 45template <typename T>; 46ROOT::RDF::Experimental::RResultMap<T>; 47MakeResultMap(std::shared_ptr<T> nominalResult, std::vector<std::shared_ptr<T>> &&variedResults,; 48 std::vector<std::string> &&keys, RLoopManager &lm,; 49 std::shared_ptr<ROOT::Internal::RDF::RActionBase> nominalAction,; 50 std::shared_ptr<ROOT::Internal::RDF::RActionBase> variedAction); 51{; 52 return ROOT::RDF::Experimental::RResultMap<T>(std::move(nominalResult), std::move(variedResults), std::move(keys),; 53 lm, std::move(nominalAction), std::move(variedAction))",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RResultMap_8hxx_source.html:107,Load,Loading,107,doc/master/RResultMap_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RResultMap_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDF/RSampleInfo.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RSampleInfo.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, 2021; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_RSAMPLEINFO; 12#define ROOT_RDF_RSAMPLEINFO; 13 ; 14#include <ROOT/RDF/RSample.hxx>; 15#include <string_view>; 16#include <Rtypes.h>; 17 ; 18#include <functional>; 19#include <stdexcept>; 20#include <string>; 21 ; 22#include <tuple>; 23 ; 24namespace ROOT {; 25namespace RDF {; 26 ; 27/// This type represents a sample identifier, to be used in conjunction with RDataFrame features such as; 28/// \ref ROOT::RDF::RInterface< Proxied, DS_t >::DefinePerSample ""DefinePerSample()"" and per-sample callbacks.; 29///; 30/// When the input data comes from a TTree, the string representation of RSampleInfo (which is returned by AsString(); 31/// and that can be queried e.g. with Contains()) is of the form ""<filename>/<treename>"".; 32///; 33/// In multi-thread runs, different tasks might process different entry ranges of the same sample,; 34/// so RSampleInfo also provides methods to inspect which part of a sample is being taken into consideration.; 35class RSampleInfo {; 36 std::string fID;; 37 std::pair<ULong64_t, ULong64_t> fEntryRange;; 38 ; 39 const ROOT::RDF::Experimental::RSample *fSample = nullptr; // non-owning; 40 ; 41 void ThrowIfNoSample() const; 42 {; 43 if (fSample == nullptr) {; 44 const auto msg = ""RSampleInfo: sample data was requested but no samples are available."";; 45 throw std::logic_error(msg);; 46 }; 47 }; 48 ; 49public:; 50 RSampleInfo(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSampleInfo_8hxx_source.html:108,Load,Loading,108,doc/master/RSampleInfo_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RSampleInfo_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDFHelpers.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Typedefs |; Functions ; RDFHelpers.hxx File Reference. #include <ROOT/RDF/GraphUtils.hxx>; #include <ROOT/RDF/RActionBase.hxx>; #include <ROOT/RDF/RResultMap.hxx>; #include <ROOT/RResultHandle.hxx>; #include <ROOT/TypeTraits.hxx>; #include <array>; #include <chrono>; #include <fstream>; #include <functional>; #include <map>; #include <memory>; #include <mutex>; #include <type_traits>; #include <utility>; #include <vector>. Include dependency graph for RDFHelpers.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::RDF::Experimental::ProgressHelper;  RDF progress helper. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  ; namespace  ROOT::Internal::RDF;  ; namespace  ROOT::RDF;  ; namespace  ROOT::RDF::Experimental;  . Typedefs; using ROOT::RDF::Experimental::SnapshotPtr_t = ROOT::RDF::RResultPtr< ROOT::RDF::RInterface< ROOT::Detail::RDF::RLoopManager, void > >;  . Functions; void ROOT::RDF::Experimental::AddProgressBar (ROOT::RDataFrame df);  Add ProgressBar to an RDataFrame. ;  ; void ROOT::RDF::Experimental::AddProgressBar (ROOT::RDF::RNode df);  Add ProgressBar to a ROOT::RDF::RNode. ;  ; template<typename NodeType > ; RNode ROOT::RDF::AsRNode (NodeType node);  Cast a RDataFrame node to the common type ROOT::RDF::RNode. ;  ; template<typename F , typename Args = typename ROOT::TypeTraits::CallableTraits<std::decay_t<F>>::arg_types_nodecay, typename Ret = typename ROOT::TypeTraits::CallableTraits<std::decay_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8hxx.html:106,Load,Loading,106,doc/master/RDFHelpers_8hxx.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDFHelpers.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDFHelpers.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 02/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11// This header contains helper free functions that slim down RDataFrame's programming model; 12 ; 13#ifndef ROOT_RDF_HELPERS; 14#define ROOT_RDF_HELPERS; 15 ; 16#include <ROOT/RDF/GraphUtils.hxx>; 17#include <ROOT/RDF/RActionBase.hxx>; 18#include <ROOT/RDF/RResultMap.hxx>; 19#include <ROOT/RResultHandle.hxx> // users of RunGraphs might rely on this transitive include; 20#include <ROOT/TypeTraits.hxx>; 21 ; 22#include <array>; 23#include <chrono>; 24#include <fstream>; 25#include <functional>; 26#include <map>; 27#include <memory>; 28#include <mutex>; 29#include <type_traits>; 30#include <utility> // std::index_sequence; 31#include <vector>; 32 ; 33namespace ROOT {; 34namespace Internal {; 35namespace RDF {; 36template <typename... ArgTypes, typename F>; 37std::function<bool(ArgTypes...)> NotHelper(ROOT::TypeTraits::TypeList<ArgTypes...>, F &&f); 38{; 39 return std::function<bool(ArgTypes...)>([=](ArgTypes... args) mutable { return !f(args...); });; 40}; 41 ; 42template <typename... ArgTypes, typename Ret, typename... Args>; 43std::function<bool(ArgTypes...)> NotHelper(ROOT::TypeTraits::TypeList<ArgTypes...>, Ret (*f)(Args...)); 44{; 45 return std::function<bool(ArgTypes...)>([=](ArgTypes... args) mutable { return !f(args...); });; 46}; 47 ; 48template <typename I, typename T, typename F>; 49class PassAsVecHelper;; 50 ; 51template <std::size_t... ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8hxx_source.html:103,Load,Loading,103,doc/master/RDFHelpers_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDataFrame.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RDataFrame.hxx File Reference. #include ""TROOT.h""; #include ""ROOT/RDF/RDatasetSpec.hxx""; #include ""ROOT/RDF/RInterface.hxx""; #include ""ROOT/RDF/Utils.hxx""; #include <string_view>; #include ""RtypesCore.h""; #include <initializer_list>; #include <memory>; #include <string>; #include <vector>. Include dependency graph for RDataFrame.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::RDataFrame;  ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::RDF;  ; namespace  ROOT::RDF::Experimental;  . Functions; ROOT::RDataFrame ROOT::RDF::Experimental::FromSpec (const std::string &jsonFile);  Factory method to create an RDataFrame from a JSON specification file. ;  . treedataframeincROOTRDataFrame.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8hxx.html:106,Load,Loading,106,doc/master/RDataFrame_8hxx.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RDataFrame.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDataFrame.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 12/2016; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11/**; 12 \defgroup dataframe Dataframe; 13ROOT's RDataFrame allows to analyse data stored in TTrees with a high level interface.; 14*/; 15 ; 16#ifndef ROOT_RDATAFRAME; 17#define ROOT_RDATAFRAME; 18 ; 19#include ""TROOT.h"" // To allow ROOT::EnableImplicitMT without including ROOT.h; 20#include ""ROOT/RDF/RDatasetSpec.hxx""; 21#include ""ROOT/RDF/RInterface.hxx""; 22#include ""ROOT/RDF/Utils.hxx""; 23#include <string_view>; 24#include ""RtypesCore.h""; 25 ; 26#include <initializer_list>; 27#include <memory>; 28#include <string>; 29#include <vector>; 30 ; 31class TDirectory;; 32class TTree;; 33 ; 34namespace ROOT {; 35namespace RDF {; 36class RDataSource;; 37}; 38 ; 39namespace RDFDetail = ROOT::Detail::RDF;; 40 ; 41class RDataFrame : public ROOT::RDF::RInterface<RDFDetail::RLoopManager> {; 42public:; 43 using ColumnNames_t = ROOT::RDF::ColumnNames_t;; 44 RDataFrame(std::string_view treeName, std::string_view filenameglob, const ColumnNames_t &defaultColumns = {});; 45 RDataFrame(std::string_view treename, const std::vector<std::string> &filenames,; 46 const ColumnNames_t &defaultColumns = {});; 47 RDataFrame(std::string_view treename, std::initializer_list<std::string> filenames,; 48 const ColumnNames_t &defaultColumns = {}):; 49 RDataFrame(treename, std::vector<std::string>(filenames), defaultColumns) {}; 50 RDataFrame(std::string_view treeName, ::TDirector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8hxx_source.html:103,Load,Loading,103,doc/master/RDataFrame_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RNTupleDS.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RNTupleDS.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDataSource.hxx>; #include <ROOT/RNTupleUtil.hxx>; #include <string_view>; #include <condition_variable>; #include <cstdint>; #include <memory>; #include <mutex>; #include <string>; #include <thread>; #include <vector>; #include <unordered_map>. Include dependency graph for RNTupleDS.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Experimental::RNTupleDS::REntryRangeDS;  The PrepareNextRanges() method populates the fNextRanges list with REntryRangeDS records. More...;  ; struct  ROOT::Experimental::RNTupleDS::RFieldInfo;  Holds useful information about fields added to the RNTupleDS. More...;  ; class  ROOT::Experimental::RNTupleDS;  The RDataSource implementation for RNTuple. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  ; namespace  ROOT::RDF;  ; namespace  ROOT::RDF::Experimental;  . Functions; RDataFrame ROOT::RDF::Experimental::FromRNTuple (ROOT::RNTuple *ntuple);  ; RDataFrame ROOT::RDF::Experimental::FromRNTuple (std::string_view ntupleName, const std::vector< std::string > &fileNames);  ; RDataFrame ROOT::RDF::Experimental::FromRNTuple (std::string_view ntupleName, std::string_view fileName);  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h . Enrico Guiraud enric.nosp@m.o.gu.nosp@m.iraud.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleDS_8hxx.html:105,Load,Loading,105,doc/master/RNTupleDS_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleDS_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RResultPtr.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RResultPtr.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 03/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RRESULTPTR; 12#define ROOT_RRESULTPTR; 13 ; 14#include ""ROOT/RDF/RActionBase.hxx""; 15#include ""RtypesCore.h""; 16#include ""ROOT/RDF/RLoopManager.hxx""; 17#include ""ROOT/TypeTraits.hxx""; 18#include ""TError.h"" // Warning; 19 ; 20#include <memory>; 21#include <functional>; 22#include <type_traits> // std::is_constructible; 23 ; 24namespace ROOT {; 25namespace RDF {; 26template <typename T>; 27class RResultPtr;; 28 ; 29namespace Experimental {; 30template <typename T>; 31class RResultMap;; 32 ; 33template <typename T>; 34RResultMap<T> VariationsFor(RResultPtr<T> resPtr);; 35} // namespace Experimental; 36 ; 37template <typename Proxied, typename DataSource>; 38class RInterface;; 39} // namespace RDF; 40 ; 41namespace Internal {; 42namespace RDF {; 43class GraphCreatorHelper;; 44/**; 45 * \brief Creates a new RResultPtr with a cloned action.; 46 *; 47 * \tparam T The type of the result held by the RResultPtr.; 48 * \param inptr The pointer.; 49 * \return A new pointer with a cloned action.; 50 */; 51template <typename T>; 52ROOT::RDF::RResultPtr<T> CloneResultAndAction(const ROOT::RDF::RResultPtr<T> &inptr); 53{; 54 // We call the copy constructor, to copy also the metadata of certain; 55 // result types, e.g. a for a TH1D we have to create a new histogram with; 56 // the same binning and axis limits.; 57 std::shared_ptr<T> copiedResult{new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RResultPtr_8hxx_source.html:103,Load,Loading,103,doc/master/RResultPtr_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RResultPtr_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/RSnapshotOptions.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RSnapshotOptions.hxx. Go to the documentation of this file. 1// Author: Guilherme Amadio, Enrico Guiraud, Danilo Piparo CERN 2/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_RSNAPSHOTOPTIONS; 12#define ROOT_RSNAPSHOTOPTIONS; 13 ; 14#include <Compression.h>; 15#include <string_view>; 16#include <string>; 17 ; 18namespace ROOT {; 19 ; 20namespace RDF {; 21/// A collection of options to steer the creation of the dataset on file; 22struct RSnapshotOptions {; 23 using ECAlgo = ROOT::RCompressionSetting::EAlgorithm::EValues;; 24 RSnapshotOptions() = default;; 25 RSnapshotOptions(const RSnapshotOptions &) = default;; 26 RSnapshotOptions(RSnapshotOptions &&) = default;; 27 RSnapshotOptions(std::string_view mode, ECAlgo comprAlgo, int comprLevel, int autoFlush, int splitLevel, bool lazy,; 28 bool overwriteIfExists = false, bool vector2RVec = true); 29 : fMode(mode),; 30 fCompressionAlgorithm(comprAlgo),; 31 fCompressionLevel{comprLevel},; 32 fAutoFlush(autoFlush),; 33 fSplitLevel(splitLevel),; 34 fLazy(lazy),; 35 fOverwriteIfExists(overwriteIfExists),; 36 fVector2RVec(vector2RVec); 37 {; 38 }; 39 std::string fMode = ""RECREATE""; ///< Mode of creation of output file; 40 ECAlgo fCompressionAlgorithm =; 41 ROOT::RCompressionSetting::EAlgorithm::kZLIB; ///< Compression algorithm of output file; 42 int fCompressionLevel = 1; ///< Compression level of output file; 43 int fAutoFlush = 0; ///< AutoFlush value for output tree; 44 int fSplitLevel = 99; ///< Split level of output tree; 45 bool fL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSnapshotOptions_8hxx_source.html:109,Load,Loading,109,doc/master/RSnapshotOptions_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RSnapshotOptions_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/TDataFrame.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDataFrame.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 05/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_TDATAFRAME; 12#define ROOT_TDATAFRAME; 13#include ""RDataFrame.hxx""; 14namespace ROOT {; 15 ; 16using TDataFrame = ROOT::RDataFrame;; 17 ; 18} // End NS ROOT; 19 ; 20#warning The TDataFrame.hxx header has been replaced by RDataFrame.hxx; 21 ; 22#endif; RDataFrame.hxx; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. treedataframeincROOTTDataFrame.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDataFrame_8hxx_source.html:103,Load,Loading,103,doc/master/TDataFrame_8hxx_source.html,https://root.cern,https://root.cern/doc/master/TDataFrame_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/inc/ROOT/TDataFrame.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TDataFrame.hxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 05/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_TDATAFRAME; 12#define ROOT_TDATAFRAME; 13#include ""RDataFrame.hxx""; 14namespace ROOT {; 15 ; 16using TDataFrame = ROOT::RDataFrame;; 17 ; 18} // End NS ROOT; 19 ; 20#warning The TDataFrame.hxx header has been replaced by RDataFrame.hxx; 21 ; 22#endif; RDataFrame.hxx; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. treedataframeincROOTTDataFrame.hxx. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:09:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TDataFrame_8hxx_source.html:102,Load,Loading,102,doc/v632/TDataFrame_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/TDataFrame_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/src/RCsvDS.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RCsvDS.cxx. Go to the documentation of this file. 1// Author: Enric Tejedor CERN 10/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11// clang-format off; 12/** \class ROOT::RDF::RCsvDS; 13 \ingroup dataframe; 14 \brief RDataFrame data source class for reading CSV files.; 15 ; 16The RCsvDS class implements a CSV file reader for RDataFrame.; 17 ; 18A RDataFrame that reads from a CSV file can be constructed using the factory method; 19ROOT::RDF::FromCSV, which accepts five parameters:; 201. Path to the CSV file.; 212. Boolean that specifies whether the first row of the CSV file contains headers or; 22not (optional, default `true`). If `false`, header names will be automatically generated as Col0, Col1, ..., ColN.; 233. Delimiter (optional, default ',').; 244. Chunk size (optional, default is -1 to read all) - number of lines to read at a time; 255. Column Types (optional, default is an empty map). A map with column names as keys and their type; 26(expressed as a single character, see below) as values.; 27 ; 28The type of columns that do not appear in the map is inferred from the data.; 29The supported types are:; 30- Integer: stored as a 64-bit long long int; can be specified in the column types map with 'L'.; 31- Floating point number: stored with double precision; specified with 'D'.; 32- Boolean: matches the literals `true` and `false`; specified with 'O'.; 33- String: stored as an std::string, matches anything that does not fall into any of the; 34previous types; specified with 'T'.; 35 ; 36These are som",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RCsvDS_8cxx_source.html:94,Load,Loading,94,doc/master/RCsvDS_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RCsvDS_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/src/RDFHelpers.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDFHelpers.cxx. Go to the documentation of this file. 1// Author: Stefan Wunsch, Enrico Guiraud CERN 09/2020; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""ROOT/RDFHelpers.hxx""; 12#include ""TROOT.h"" // IsImplicitMTEnabled; 13#include ""TError.h"" // Warning; 14#include ""TStopwatch.h""; 15#include ""RConfigure.h"" // R__USE_IMT; 16#include ""ROOT/RLogger.hxx""; 17#include ""ROOT/RDF/RLoopManager.hxx"" // for RLoopManager; 18#include ""ROOT/RDF/Utils.hxx""; 19#include ""ROOT/RResultHandle.hxx"" // for RResultHandle, RunGraphs; 20#ifdef R__USE_IMT; 21#include ""ROOT/TThreadExecutor.hxx""; 22#endif // R__USE_IMT; 23 ; 24#include <algorithm>; 25#include <iostream>; 26#include <set>; 27#include <cstdio>; 28 ; 29// TODO, this function should be part of core libraries; 30#include <numeric>; 31#if (!defined(_WIN32)) && (!defined(_WIN64)); 32#include <unistd.h>; 33#endif; 34 ; 35#if defined(_WIN32) || defined(_WIN64); 36#define WIN32_LEAN_AND_MEAN; 37#define VC_EXTRALEAN; 38#include <io.h>; 39#include <Windows.h>; 40#else; 41#include <sys/ioctl.h>; 42#endif; 43 ; 44// Get terminal size for progress bar; 45int get_tty_size(); 46{; 47#if defined(_WIN32) || defined(_WIN64); 48 if (!_isatty(_fileno(stdout))); 49 return 0;; 50 int width = 0;; 51 CONSOLE_SCREEN_BUFFER_INFO csbi;; 52 if (GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi)); 53 width = (int)(csbi.srWindow.Right - csbi.srWindow.Left + 1);; 54 return width;; 55#else; 56 int width = 0;; 57 struct winsize w;; 58 ioctl(fileno(stdout), TIOCGWINSZ, &w)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8cxx_source.html:98,Load,Loading,98,doc/master/RDFHelpers_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/src/RDFUtils.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDFUtils.cxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 03/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""RConfigure.h"" // R__USE_IMT; 12#include ""ROOT/RDataSource.hxx""; 13#include ""ROOT/RDF/RDefineBase.hxx""; 14#include ""ROOT/RDF/RLoopManager.hxx""; 15#include ""ROOT/RDF/Utils.hxx""; 16#include ""ROOT/RLogger.hxx""; 17#include ""RtypesCore.h""; 18#include ""TBranch.h""; 19#include ""TBranchElement.h""; 20#include ""TClass.h""; 21#include ""TClassEdit.h""; 22#include ""TClassRef.h""; 23#include ""TError.h"" // Info; 24#include ""TInterpreter.h""; 25#include ""TLeaf.h""; 26#include ""TROOT.h"" // IsImplicitMTEnabled, GetThreadPoolSize; 27#include ""TTree.h""; 28 ; 29#include <stdexcept>; 30#include <string>; 31#include <cstring>; 32#include <typeinfo>; 33 ; 34using namespace ROOT::Detail::RDF;; 35using namespace ROOT::RDF;; 36 ; 37ROOT::Experimental::RLogChannel &ROOT::Detail::RDF::RDFLogChannel(); 38{; 39 static ROOT::Experimental::RLogChannel c(""ROOT.RDF"");; 40 return c;; 41}; 42 ; 43namespace {; 44using TypeInfoRef = std::reference_wrapper<const std::type_info>;; 45struct TypeInfoRefHash {; 46 std::size_t operator()(TypeInfoRef id) const { return id.get().hash_code(); }; 47};; 48 ; 49struct TypeInfoRefEqualComp {; 50 bool operator()(TypeInfoRef left, TypeInfoRef right) const { return left.get() == right.get(); }; 51};; 52} // namespace; 53 ; 54namespace ROOT {; 55namespace Internal {; 56namespace RDF {; 57 ; 58/// Return the type_info associated to a name. If the association",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFUtils_8cxx_source.html:96,Load,Loading,96,doc/master/RDFUtils_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDFUtils_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/src/RDataFrame.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RDataFrame.cxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 12/2016; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""ROOT/InternalTreeUtils.hxx""; 12#include ""ROOT/RDataFrame.hxx""; 13#include ""ROOT/RDataSource.hxx""; 14#include ""ROOT/RDF/RDatasetSpec.hxx""; 15#include ""ROOT/RDF/RInterface.hxx""; 16#include ""ROOT/RDF/RLoopManager.hxx""; 17#include ""ROOT/RDF/Utils.hxx""; 18#include <string_view>; 19#include ""TChain.h""; 20#include ""TDirectory.h""; 21#include ""RtypesCore.h"" // for ULong64_t; 22#include ""TTree.h""; 23 ; 24#include <fstream> // std::ifstream; 25#include <nlohmann/json.hpp> // nlohmann::json::parse; 26#include <memory> // for make_shared, allocator, shared_ptr; 27#include <ostream> // ostringstream; 28#include <stdexcept>; 29#include <string>; 30#include <vector>; 31 ; 32// clang-format off; 33/**; 34* \class ROOT::RDataFrame; 35* \ingroup dataframe; 36* \brief ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python.; 37 ; 38In addition, multi-threading and other low-level optimisations allow users to exploit all the resources available; 39on their machines completely transparently.<br>; 40Skip to the [class reference](#reference) or keep reading for the user guide.; 41 ; 42In a nutshell:; 43~~~{.cpp}; 44ROOT::EnableImplicitMT(); // Tell ROOT you want to go parallel; 45ROOT::RDataFrame d(""myTree"", ""file_*.root""); // Interface to TTree and TChain; 46auto myHisto = d.Histo1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:98,Load,Loading,98,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/src/RDataFrame.cxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. RDataFrame.cxx. Go to the documentation of this file. 1// Author: Enrico Guiraud, Danilo Piparo CERN 12/2016; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include ""ROOT/InternalTreeUtils.hxx""; 12#include ""ROOT/RDataFrame.hxx""; 13#include ""ROOT/RDataSource.hxx""; 14#include ""ROOT/RDF/RDatasetSpec.hxx""; 15#include ""ROOT/RDF/RInterface.hxx""; 16#include ""ROOT/RDF/RLoopManager.hxx""; 17#include ""ROOT/RDF/Utils.hxx""; 18#include <string_view>; 19#include ""TChain.h""; 20#include ""TDirectory.h""; 21#include ""RtypesCore.h"" // for ULong64_t; 22#include ""TTree.h""; 23 ; 24#include <fstream> // std::ifstream; 25#include <nlohmann/json.hpp> // nlohmann::json::parse; 26#include <memory> // for make_shared, allocator, shared_ptr; 27#include <ostream> // ostringstream; 28#include <stdexcept>; 29#include <string>; 30#include <vector>; 31 ; 32// clang-format off; 33/**; 34* \class ROOT::RDataFrame; 35* \ingroup dataframe; 36* \brief ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python.; 37 ; 38In addition, multi-threading and other low-level optimisations allow users to exploit all the resources available; 39on their machines completely transparently.<br>; 40Skip to the [class reference](#reference) or keep reading for the user guide.; 41 ; 42In a nutshell:; 43~~~{.cpp}; 44ROOT::EnableImplicitMT(); // Tell ROOT you want to go parallel; 45ROOT::RDataFrame d(""myTree"", ""file_*.root""); // Interface to TTree and TChain; 46auto myHisto = d.Histo1D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:97,Load,Loading,97,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/dataframe/src/RSqliteDS.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RSqliteDS.cxx. Go to the documentation of this file. 1// Author: Jakob Blomer CERN 07/2018; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#include <ROOT/RSqliteDS.hxx>; 12#include <ROOT/RRawFile.hxx>; 13 ; 14#include ""TError.h""; 15#include ""TRandom.h""; 16#include ""TSystem.h""; 17 ; 18#include <algorithm>; 19#include <cctype>; 20#include <cerrno>; 21#include <cstring> // for memcpy; 22#include <ctime>; 23#include <memory> // for placement new; 24#include <stdexcept>; 25#include <utility>; 26 ; 27#include <sqlite3.h>; 28 ; 29namespace {; 30 ; 31// In order to provide direct access to remote sqlite files through HTTP and HTTPS, this datasource provides a custom; 32// ""SQlite VFS module"" that uses Davix for data access. The SQlite VFS modules are roughly what TSystem is; 33// for ROOT -- an abstraction of the operating system interface.; 34//; 35// SQlite allows for registering custom VFS modules, which are a set of C callback functions that SQlite invokes when; 36// it needs to read from a file, write to a file, etc. More information is available under https://sqlite.org/vfs.html; 37//; 38// In the context of a data source, SQlite will only ever call reading functions from the VFS module, the sqlite; 39// files are not modified. Therefore, only a subset of the callback functions provide a non-trivial implementation.; 40// The custom VFS module uses a RRawFile for the byte access, thereby it can access local and remote files.; 41 ; 42////////////////////////////////////////////////////////////////////////////;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSqliteDS_8cxx_source.html:97,Load,Loading,97,doc/master/RSqliteDS_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RSqliteDS_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RField.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RField.hxx. Go to the documentation of this file. 1/// \file ROOT/RField.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2018-10-09; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RField; 17#define ROOT7_RField; 18 ; 19#include <ROOT/RError.hxx>; 20#include <ROOT/RFieldBase.hxx>; 21#include <ROOT/RNTupleSerialize.hxx>; 22#include <ROOT/RNTupleUtil.hxx>; 23#include <ROOT/RSpan.hxx>; 24#include <string_view>; 25#include <ROOT/TypeTraits.hxx>; 26 ; 27#include <TGenericClassInfo.h>; 28 ; 29#include <algorithm>; 30#include <array>; 31#include <cstddef>; 32#include <iostream>; 33#include <memory>; 34#include <string>; 35#include <type_traits>; 36#include <typeinfo>; 37#include <vector>; 38 ; 39class TClass;; 40class TEnum;; 41class TObject;; 42class TVirtualStreamerInfo;; 43 ; 44namespace ROOT {; 45 ; 46class TSchemaRule;; 47 ; 48namespace Experimental {; 49 ; 50class REntry;; 51 ; 52namespace Detail {; 53class RFieldVisitor;; 54} // namespace Detail; 55 ; 56/// The container field for an ntuple model, which itself has no physical representation.; 57/// Therefore, the zero field must not be connected to a page source or sink.; 58class RFieldZero final : public RFieldBase {; 59protected:; 60 std::unique_ptr<RFieldBase> CloneImpl(std::string_view newName) const final;; 61 void ConstructValue(void *) const final {};",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RField_8hxx_source.html:99,Load,Loading,99,doc/master/RField_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RField_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTuple.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RNTuple.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <Rtypes.h>; #include <cstdint>. Include dependency graph for RNTuple.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::RNTuple;  Representation of an RNTuple data set in a ROOT file. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  . Functions; RNTuple ROOT::Experimental::Internal::CreateAnchor (std::uint16_t versionEpoch, std::uint16_t versionMajor, std::uint16_t versionMinor, std::uint16_t versionPatch, std::uint64_t seekHeader, std::uint64_t nbytesHeader, std::uint64_t lenHeader, std::uint64_t seekFooter, std::uint64_t nbytesFooter, std::uint64_t lenFooter, std::uint64_t maxKeySize);  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h ; Date2023-09-19 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition in file RNTuple.hxx. treentuplev7incROOTRNTuple.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTuple_8hxx.html:103,Load,Loading,103,doc/master/RNTuple_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTuple_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTuple.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTuple.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTuple.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2023-09-19; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTuple; 17#define ROOT7_RNTuple; 18 ; 19#include <Rtypes.h>; 20 ; 21#include <cstdint>; 22 ; 23class TCollection;; 24class TFile;; 25class TFileMergeInfo;; 26 ; 27namespace ROOT {; 28 ; 29class RNTuple;; 30 ; 31namespace Experimental {; 32namespace Internal {; 33class RNTupleFileWriter;; 34class RPageSourceFile;; 35 ; 36RNTuple CreateAnchor(std::uint16_t versionEpoch, std::uint16_t versionMajor, std::uint16_t versionMinor,; 37 std::uint16_t versionPatch, std::uint64_t seekHeader, std::uint64_t nbytesHeader,; 38 std::uint64_t lenHeader, std::uint64_t seekFooter, std::uint64_t nbytesFooter,; 39 std::uint64_t lenFooter, std::uint64_t maxKeySize);; 40 ; 41} // namespace Internal; 42} // namespace Experimental; 43 ; 44// clang-format off; 45/**; 46\class ROOT::RNTuple; 47\ingroup NTuple; 48\brief Representation of an RNTuple data set in a ROOT file; 49 ; 50The class points to the header and footer keys, which in turn have the references to the pages (via page lists).; 51Only the RNTuple key will be listed in the list of keys. Like TBaskets, the pages are ""invisible"" keys.; 52Byte offset references in the RNTuple header and footer r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTuple_8hxx_source.html:100,Load,Loading,100,doc/master/RNTuple_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTuple_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RNTupleModel.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/REntry.hxx>; #include <ROOT/RError.hxx>; #include <ROOT/RField.hxx>; #include <ROOT/RNTupleUtil.hxx>; #include <string_view>; #include <cstdint>; #include <functional>; #include <memory>; #include <string>; #include <unordered_map>; #include <unordered_set>; #include <utility>. Include dependency graph for RNTupleModel.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Experimental::RNTupleModel::NameWithDescription_t;  A wrapper over a field name and an optional description; used in AddField() and RUpdater::AddField() More...;  ; class  ROOT::Experimental::RNTupleModel;  The RNTupleModel encapulates the schema of an ntuple. More...;  ; class  ROOT::Experimental::Internal::RNTupleModelChangeset;  The incremental changes to a RNTupleModel More...;  ; class  ROOT::Experimental::Internal::RProjectedFields;  The projected fields of a RNTupleModel More...;  ; class  ROOT::Experimental::RNTupleModel::RUpdater;  A model is usually immutable after passing it to an RNTupleWriter. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  . Functions; RFieldZero & ROOT::Experimental::Internal::GetFieldZeroOfModel (RNTupleModel &model);  ; RProjectedFields & ROOT::Experimental::Internal::GetProjectedFieldsOfModel (RNTupleModel &model);  . Detailed Description; AuthorJakob Blomer jb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleModel_8hxx.html:108,Load,Loading,108,doc/master/RNTupleModel_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleModel_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleModel.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleModel.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleModel.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2018-10-04; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTupleModel; 17#define ROOT7_RNTupleModel; 18 ; 19#include <ROOT/REntry.hxx>; 20#include <ROOT/RError.hxx>; 21#include <ROOT/RField.hxx>; 22#include <ROOT/RNTupleUtil.hxx>; 23#include <string_view>; 24 ; 25#include <cstdint>; 26#include <functional>; 27#include <memory>; 28#include <string>; 29#include <unordered_map>; 30#include <unordered_set>; 31#include <utility>; 32 ; 33namespace ROOT {; 34namespace Experimental {; 35 ; 36class RNTupleModel;; 37class RNTupleWriter;; 38class RNTupleWriteOptions;; 39 ; 40namespace Internal {; 41class RProjectedFields;; 42 ; 43RFieldZero &GetFieldZeroOfModel(RNTupleModel &model);; 44RProjectedFields &GetProjectedFieldsOfModel(RNTupleModel &model);; 45 ; 46// clang-format off; 47/**; 48\class ROOT::Experimental::Internal::RProjectedFields; 49\ingroup NTuple; 50\brief The projected fields of a `RNTupleModel`; 51 ; 52Projected fields are fields whose columns are reused from existing fields. Projected fields are not attached; 53to the models zero field. Only the real source fields are written to, projected fields are stored as meta-data; 54(header) information only. Only top-level",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleModel_8hxx_source.html:105,Load,Loading,105,doc/master/RNTupleModel_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleModel_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleReader.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Enumerations ; RNTupleReader.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/RConfig.hxx>; #include <ROOT/RError.hxx>; #include <ROOT/RNTupleDescriptor.hxx>; #include <ROOT/RNTupleMetrics.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleReadOptions.hxx>; #include <ROOT/RNTupleUtil.hxx>; #include <ROOT/RNTupleView.hxx>; #include <ROOT/RPageStorage.hxx>; #include <ROOT/RSpan.hxx>; #include <iostream>; #include <iterator>; #include <memory>; #include <string>; #include <string_view>. Include dependency graph for RNTupleReader.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Experimental::RNTupleReader::RIterator;  ; class  ROOT::Experimental::RNTupleReader;  An RNTuple that is used to read data from storage. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  . Enumerations; enum class  ROOT::Experimental::ENTupleInfo { ROOT::Experimental::kSummary; , ROOT::Experimental::kStorageDetails; , ROOT::Experimental::kMetrics; };  Listing of the different options that can be printed by RNTupleReader::GetInfo() More...;  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h ; Date2024-02-20 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition in file RNTupleReader.hxx. treentuplev7incROOTRNTupleReader.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleReader_8hxx.html:109,Load,Loading,109,doc/master/RNTupleReader_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleReader_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleReader.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleReader.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleReader.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2024-02-20; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTupleReader; 17#define ROOT7_RNTupleReader; 18 ; 19#include <ROOT/RConfig.hxx> // for R__unlikely; 20#include <ROOT/RError.hxx>; 21#include <ROOT/RNTupleDescriptor.hxx>; 22#include <ROOT/RNTupleMetrics.hxx>; 23#include <ROOT/RNTupleModel.hxx>; 24#include <ROOT/RNTupleReadOptions.hxx>; 25#include <ROOT/RNTupleUtil.hxx>; 26#include <ROOT/RNTupleView.hxx>; 27#include <ROOT/RPageStorage.hxx>; 28#include <ROOT/RSpan.hxx>; 29 ; 30#include <iostream>; 31#include <iterator>; 32#include <memory>; 33#include <string>; 34#include <string_view>; 35 ; 36namespace ROOT {; 37class RNTuple;; 38 ; 39namespace Experimental {; 40class REntry;; 41 ; 42/// Listing of the different options that can be printed by RNTupleReader::GetInfo(); 43enum class ENTupleInfo {; 44 kSummary, // The ntuple name, description, number of entries; 45 kStorageDetails, // size on storage, page sizes, compression factor, etc.; 46 kMetrics, // internals performance counters, requires that EnableMetrics() was called; 47};; 48 ; 49// clang-format off; 50/**; 51\class ROOT::Experimental::RNTupleReader; 52\ingroup NTuple; 53\brief An RNTuple that is used t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleReader_8hxx_source.html:106,Load,Loading,106,doc/master/RNTupleReader_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleReader_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleUtil.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleUtil.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleUtil.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2018-10-04; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTupleUtil; 17#define ROOT7_RNTupleUtil; 18 ; 19#include <cstdint>; 20 ; 21#include <string>; 22#include <variant>; 23 ; 24#include <ROOT/RLogger.hxx>; 25#include <ROOT/RNTupleReadOptions.hxx>; 26 ; 27namespace ROOT {; 28 ; 29/// Helper types to present an offset column as array of collection sizes.; 30/// See RField<RNTupleCardinality<SizeT>> for details.; 31template <typename SizeT>; 32struct RNTupleCardinality {; 33 static_assert(std::is_same_v<SizeT, std::uint32_t> || std::is_same_v<SizeT, std::uint64_t>,; 34 ""RNTupleCardinality is only supported with std::uint32_t or std::uint64_t template parameters"");; 35 ; 36 using ValueType = SizeT;; 37 ; 38 RNTupleCardinality() : fValue(0) {}; 39 explicit constexpr RNTupleCardinality(ValueType value) : fValue(value) {}; 40 RNTupleCardinality &operator=(const ValueType value); 41 {; 42 fValue = value;; 43 return *this;; 44 }; 45 operator ValueType() const { return fValue; }; 46 ; 47 ValueType fValue;; 48};; 49 ; 50namespace Experimental {; 51 ; 52class RLogChannel;; 53/// Log channel for RNTuple diagnostics.; 54RLogChannel &NTupleLog();; 55 ; 56// clang-format off; 57/**; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleUtil_8hxx_source.html:104,Load,Loading,104,doc/master/RNTupleUtil_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleUtil_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces |; Functions ; RNTupleWriter.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/RConfig.hxx>; #include <ROOT/REntry.hxx>; #include <ROOT/RError.hxx>; #include <ROOT/RNTupleFillContext.hxx>; #include <ROOT/RNTupleFillStatus.hxx>; #include <ROOT/RNTupleMetrics.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleUtil.hxx>; #include <ROOT/RPageStorage.hxx>; #include <cstddef>; #include <cstdint>; #include <memory>; #include <string_view>; #include <utility>. Include dependency graph for RNTupleWriter.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  ROOT::Experimental::RNTupleWriter;  An RNTuple that gets filled with entries (data) and writes them to storage. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  . Functions; std::unique_ptr< RNTupleWriter > ROOT::Experimental::Internal::CreateRNTupleWriter (std::unique_ptr< RNTupleModel > model, std::unique_ptr< Internal::RPageSink > sink);  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h ; Date2024-02-20 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition in file RNTupleWriter.hxx. treentuplev7incROOTRNTupleWriter.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8hxx.html:109,Load,Loading,109,doc/master/RNTupleWriter_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleWriter.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleWriter.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2024-02-20; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTupleWriter; 17#define ROOT7_RNTupleWriter; 18 ; 19#include <ROOT/RConfig.hxx> // for R__unlikely; 20#include <ROOT/REntry.hxx>; 21#include <ROOT/RError.hxx>; 22#include <ROOT/RNTupleFillContext.hxx>; 23#include <ROOT/RNTupleFillStatus.hxx>; 24#include <ROOT/RNTupleMetrics.hxx>; 25#include <ROOT/RNTupleModel.hxx>; 26#include <ROOT/RNTupleUtil.hxx>; 27#include <ROOT/RPageStorage.hxx>; 28 ; 29#include <cstddef>; 30#include <cstdint>; 31#include <memory>; 32#include <string_view>; 33#include <utility>; 34 ; 35class TFile;; 36 ; 37namespace ROOT {; 38namespace Experimental {; 39 ; 40class RNTupleWriteOptions;; 41 ; 42namespace Internal {; 43// Non-public factory method for an RNTuple writer that uses an already constructed page sink; 44std::unique_ptr<RNTupleWriter>; 45CreateRNTupleWriter(std::unique_ptr<RNTupleModel> model, std::unique_ptr<Internal::RPageSink> sink);; 46} // namespace Internal; 47 ; 48// clang-format off; 49/**; 50\class ROOT::Experimental::RNTupleWriter; 51\ingroup NTuple; 52\brief An RNTuple that gets filled with entries (data) and writes them to storage; 53 ; 54An output ntuple can be filled",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8hxx_source.html:106,Load,Loading,106,doc/master/RNTupleWriter_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/inc/ROOT/RPageStorageFile.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; RPageStorageFile.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/RMiniFile.hxx>; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleSerialize.hxx>; #include <ROOT/RNTupleZip.hxx>; #include <ROOT/RPageStorage.hxx>; #include <ROOT/RRawFile.hxx>; #include <string_view>; #include <array>; #include <cstdio>; #include <memory>; #include <optional>; #include <string>; #include <utility>. Include dependency graph for RPageStorageFile.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Experimental::Internal::RPageSinkFile::CommitBatch;  ; class  ROOT::Experimental::Internal::RPageSinkFile;  Storage provider that write ntuple pages into a file. More...;  ; class  ROOT::Experimental::Internal::RPageSourceFile;  Storage provider that reads ntuple pages from a file. More...;  ; struct  ROOT::Experimental::Internal::RPageSourceFile::RStructureBuffer;  Holds the uncompressed header and footer. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Experimental;  ; namespace  ROOT::Experimental::Internal;  ; namespace  ROOT::Internal;  . Detailed Description; AuthorJakob Blomer jblom.nosp@m.er@c.nosp@m.ern.c.nosp@m.h ; Date2019-11-21 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition in file RPageStorageFile.hxx. treentuplev7incROOTRPageStorageFile.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RPageStorageFile_8hxx.html:112,Load,Loading,112,doc/master/RPageStorageFile_8hxx.html,https://root.cern,https://root.cern/doc/master/RPageStorageFile_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/src/RNTupleModel.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleModel.cxx. Go to the documentation of this file. 1/// \file RNTupleModel.cxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2018-10-15; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include <ROOT/RError.hxx>; 17#include <ROOT/RField.hxx>; 18#include <ROOT/RNTupleModel.hxx>; 19#include <ROOT/RNTupleWriter.hxx>; 20#include <ROOT/StringUtils.hxx>; 21 ; 22#include <atomic>; 23#include <cstdlib>; 24#include <memory>; 25#include <utility>; 26 ; 27namespace {; 28std::uint64_t GetNewModelId(); 29{; 30 static std::atomic<std::uint64_t> gLastModelId = 0;; 31 return ++gLastModelId;; 32}; 33} // anonymous namespace; 34 ; 35ROOT::Experimental::RFieldZero &; 36ROOT::Experimental::Internal::GetFieldZeroOfModel(ROOT::Experimental::RNTupleModel &model); 37{; 38 return *model.fFieldZero;; 39}; 40 ; 41ROOT::Experimental::Internal::RProjectedFields &; 42ROOT::Experimental::Internal::GetProjectedFieldsOfModel(ROOT::Experimental::RNTupleModel &model); 43{; 44 return *model.fProjectedFields;; 45}; 46 ; 47//------------------------------------------------------------------------------; 48 ; 49ROOT::Experimental::RResult<void>; 50ROOT::Experimental::Internal::RProjectedFields::EnsureValidMapping(const RFieldBase *target, const FieldMap_t &fieldMap); 51{; 52 auto source = fieldMap.at(target);; 53 const bool hasCompatibleStructure =; 54 (so",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleModel_8cxx_source.html:100,Load,Loading,100,doc/master/RNTupleModel_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleModel_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/src/RNTupleReader.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleReader.cxx. Go to the documentation of this file. 1/// \file RNTupleReader.cxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2024-02-20; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include <ROOT/RNTupleReader.hxx>; 17 ; 18#include <ROOT/RField.hxx>; 19#include <ROOT/RFieldVisitor.hxx>; 20#include <ROOT/RNTupleImtTaskScheduler.hxx>; 21#include <ROOT/RNTuple.hxx>; 22#include <ROOT/RNTupleModel.hxx>; 23#include <ROOT/RPageSourceFriends.hxx>; 24#include <ROOT/RPageStorageFile.hxx>; 25 ; 26#include <TROOT.h>; 27 ; 28void ROOT::Experimental::RNTupleReader::ConnectModel(RNTupleModel &model); 29{; 30 auto &fieldZero = Internal::GetFieldZeroOfModel(model);; 31 // We must not use the descriptor guard to prevent recursive locking in field.ConnectPageSource; 32 DescriptorId_t fieldZeroId = fSource->GetSharedDescriptorGuard()->GetFieldZeroId();; 33 fieldZero.SetOnDiskId(fieldZeroId);; 34 // Iterate only over fieldZero's direct subfields; their descendants are recursively handled in; 35 // RFieldBase::ConnectPageSource; 36 for (auto &field : fieldZero.GetSubFields()) {; 37 // If the model has been created from the descriptor, the on-disk IDs are already set.; 38 // User-provided models instead need to find their corresponding IDs in the descriptor.; 39 if (field->GetOnDiskId() == kInvalidDescriptorId) {; 40 field->SetOnDisk",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleReader_8cxx_source.html:101,Load,Loading,101,doc/master/RNTupleReader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleReader_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntuple/v7/src/RNTupleWriter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleWriter.cxx. Go to the documentation of this file. 1/// \file RNTupleReader.cxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2024-02-20; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include <ROOT/RNTupleWriter.hxx>; 17 ; 18#include <ROOT/RLogger.hxx>; 19#include <ROOT/RNTupleImtTaskScheduler.hxx>; 20#include <ROOT/RNTupleFillContext.hxx>; 21#include <ROOT/RNTupleMetrics.hxx>; 22#include <ROOT/RNTupleModel.hxx>; 23#include <ROOT/RNTupleWriteOptions.hxx>; 24#include <ROOT/RPageSinkBuf.hxx>; 25#include <ROOT/RPageStorage.hxx>; 26#include <ROOT/RPageStorageFile.hxx>; 27 ; 28#include <TROOT.h>; 29 ; 30#include <utility>; 31 ; 32ROOT::Experimental::RNTupleWriter::RNTupleWriter(std::unique_ptr<ROOT::Experimental::RNTupleModel> model,; 33 std::unique_ptr<ROOT::Experimental::Internal::RPageSink> sink); 34 : fFillContext(std::move(model), std::move(sink)), fMetrics(""RNTupleWriter""); 35{; 36#ifdef R__USE_IMT; 37 if (IsImplicitMTEnabled() &&; 38 fFillContext.fSink->GetWriteOptions().GetUseImplicitMT() == RNTupleWriteOptions::EImplicitMT::kDefault) {; 39 fZipTasks = std::make_unique<Internal::RNTupleImtTaskScheduler>();; 40 fFillContext.fSink->SetTaskScheduler(fZipTasks.get());; 41 }; 42#endif; 43 // Observe directly the sink's metrics to avoid an additional prefix from the fill context.; 44 fMetrics.ObserveMetrics(fFillCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8cxx_source.html:101,Load,Loading,101,doc/master/RNTupleWriter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Namespaces ; RNTupleImporter.hxx File ReferenceNTuple-related classes | ROOT7 classes. #include <ROOT/REntry.hxx>; #include <ROOT/RError.hxx>; #include <ROOT/RField.hxx>; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleWriteOptions.hxx>; #include <ROOT/RNTupleWriter.hxx>; #include <string_view>; #include <TFile.h>; #include <TTree.h>; #include <cstdlib>; #include <functional>; #include <map>; #include <memory>; #include <vector>. Include dependency graph for RNTupleImporter.hxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; struct  ROOT::Experimental::RNTupleImporter::RCStringTransformation;  Transform a NULL terminated C string branch into an std::string field. More...;  ; struct  ROOT::Experimental::RNTupleImporter::RImportBranch;  ; struct  ROOT::Experimental::RNTupleImporter::RImportField;  ; struct  ROOT::Experimental::RNTupleImporter::RImportGuard;  When the schema is set up and the import started, it needs to be reset before the next Import() call can start. More...;  ; struct  ROOT::Experimental::RNTupleImporter::RImportLeafCountCollection;  Leaf count arrays require special treatment. More...;  ; struct  ROOT::Experimental::RNTupleImporter::RImportTransformation;  Base class to perform data transformations from TTree branches to RNTuple fields if necessary. More...;  ; class  ROOT::Experimental::RNTupleImporter;  Converts a TTree into an RNTuple. More...;  ; class  ROOT::Experimental::RNTupleImporter::RProgressCallback;  Used to report every ~100 MB (compressed), and at the end about the status of the import. More...;  . Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleImporter_8hxx.html:115,Load,Loading,115,doc/master/RNTupleImporter_8hxx.html,https://root.cern,https://root.cern/doc/master/RNTupleImporter_8hxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleImporter.hxx. Go to the documentation of this file. 1/// \file ROOT/RNTupleImporter.hxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2022-11-22; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#ifndef ROOT7_RNTuplerImporter; 17#define ROOT7_RNTuplerImporter; 18 ; 19#include <ROOT/REntry.hxx>; 20#include <ROOT/RError.hxx>; 21#include <ROOT/RField.hxx>; 22#include <ROOT/RNTupleModel.hxx>; 23#include <ROOT/RNTupleWriteOptions.hxx>; 24#include <ROOT/RNTupleWriter.hxx>; 25#include <string_view>; 26 ; 27#include <TFile.h>; 28#include <TTree.h>; 29 ; 30#include <cstdlib>; 31#include <functional>; 32#include <map>; 33#include <memory>; 34#include <vector>; 35 ; 36class TLeaf;; 37 ; 38namespace ROOT {; 39namespace Experimental {; 40 ; 41// clang-format off; 42/**; 43\class ROOT::Experimental::RNTupleImporter; 44\ingroup NTuple; 45\brief Converts a TTree into an RNTuple; 46 ; 47Example usage (see the ntpl008_import.C tutorial for a full example):; 48 ; 49~~~ {.cpp}; 50#include <ROOT/RNTupleImporter.hxx>; 51using ROOT::Experimental::RNTupleImporter;; 52 ; 53auto importer = RNTupleImporter::Create(""data.root"", ""TreeName"", ""output.root"");; 54// As required: importer->SetNTupleName(), importer->SetWriteOptions(), ...; 55importer->Import();; 56~~~; 57 ; 58The output file is created if it does not exist, otherwise the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleImporter_8hxx_source.html:112,Load,Loading,112,doc/master/RNTupleImporter_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleImporter_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/ntupleutil/v7/src/RNTupleImporter.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RNTupleImporter.cxx. Go to the documentation of this file. 1/// \file RNTupleImporter.cxx; 2/// \ingroup NTuple ROOT7; 3/// \author Jakob Blomer <jblomer@cern.ch>; 4/// \date 2022-11-22; 5/// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; 6/// is welcome!; 7 ; 8/*************************************************************************; 9 * Copyright (C) 1995-2022, Rene Brun and Fons Rademakers. *; 10 * All rights reserved. *; 11 * *; 12 * For the licensing terms see $ROOTSYS/LICENSE. *; 13 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 14 *************************************************************************/; 15 ; 16#include <ROOT/RError.hxx>; 17#include <ROOT/RField.hxx>; 18#include <ROOT/RNTupleImporter.hxx>; 19#include <ROOT/RNTupleUtil.hxx>; 20#include <ROOT/RNTupleWriteOptions.hxx>; 21#include <ROOT/RNTupleWriter.hxx>; 22#include <ROOT/RPageSinkBuf.hxx>; 23#include <ROOT/RPageStorage.hxx>; 24#include <ROOT/RPageStorageFile.hxx>; 25#include <string_view>; 26 ; 27#include <TBranch.h>; 28#include <TChain.h>; 29#include <TClass.h>; 30#include <TDataType.h>; 31#include <TLeaf.h>; 32#include <TLeafC.h>; 33#include <TLeafElement.h>; 34#include <TLeafObject.h>; 35 ; 36#include <cassert>; 37#include <cstdint>; 38#include <cstring>; 39#include <iostream>; 40#include <utility>; 41 ; 42namespace {; 43 ; 44class RDefaultProgressCallback : public ROOT::Experimental::RNTupleImporter::RProgressCallback {; 45private:; 46 static constexpr std::uint64_t gUpdateFrequencyBytes = 100 * 1000 * 1000; // report every 100 MB; 47 std::uint64_t fNbytesNext = gUpdateFrequencyBytes;; 48 ; 49public:; 50 ~RDefaultProgressCallback() override {}; 51 void Call(std::uint64_t nbytesWritten, std::uint64_t neventsWritten) final; 52 {; 53 // Report if more than 100 MB (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleImporter_8cxx_source.html:107,Load,Loading,107,doc/master/RNTupleImporter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleImporter_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/doc/macros/entrylist_figure1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; entrylist_figure1.C File Reference. Functions; pt Draw ();  ; c Range (0, 0, 1, 1);  ; pt SetBorderSize (1);  ; c SetBorderSize (2);  ; arrow SetFillColor (1);  ; pt SetFillColor (kWhite);  ; arrow SetFillStyle (1001);  ; c SetFrameFillColor (0);  ; pt SetTextColor (4);  ; pt SetTextFont (42);  . Variables; TArrow * arrow = new TArrow(0.277202,0.356757,0.418605,0.505435,0.05,"">"");  ; TPaveText * pt = new TPaveText(0.00518135,0.810811,0.507772,0.989189,""br"");  ; TText * text = pt->AddText(""TEntryList for a TTree"");  . Function Documentation. ◆ Draw(). pt Draw ; (; ). ◆ Range(). c Range ; (; 0 ; , . 0 ; , . 1 ; , . 1 ;  . ). ◆ SetBorderSize() [1/2]. pt SetBorderSize ; (; 1 ; ). ◆ SetBorderSize() [2/2]. c SetBorderSize ; (; 2 ; ). ◆ SetFillColor() [1/2]. arrow SetFillColor ; (; 1 ; ). ◆ SetFillColor() [2/2]. pt SetFillColor ; (; kWhite ; ). ◆ SetFillStyle(). arrow SetFillStyle ; (; 1001 ; ). ◆ SetFrameFillColor(). c SetFrameFillColor ; (; 0 ; ). ◆ SetTextColor(). pt SetTextColor ; (; 4 ; ). ◆ SetTextFont(). pt SetTextFont ; (; 42 ; ). Variable Documentation. ◆ arrow. TArrow* arrow = new TArrow(0.277202,0.356757,0.418605,0.505435,0.05,"">""). Definition at line 41 of file entrylist_figure1.C. ◆ pt. pt = new TPaveText(0.00518135,0.810811,0.507772,0.989189,""br""). Definition at line 7 of file entrylist_figure1.C. ◆ text. text = pt->AddText(""TEntryList for a TTree""). Definition at line 10 of file entrylist_figure1.C. treetreedocmacrosentrylist_figure1.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/entrylist__figure1_8C.html:108,Load,Loading,108,doc/master/entrylist__figure1_8C.html,https://root.cern,https://root.cern/doc/master/entrylist__figure1_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/doc/macros/entrylist_figure1.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. entrylist_figure1.C. Go to the documentation of this file. 1{; 2 TCanvas *c = new TCanvas(""c"", ""c"",213,172,460,253);; 3 c->Range(0,0,1,1);; 4 c->SetBorderSize(2);; 5 c->SetFrameFillColor(0);; 6 ; 7 TPaveText *pt = new TPaveText(0.00518135,0.810811,0.507772,0.989189,""br"");; 8 pt->SetFillColor(kWhite);; 9 pt->SetTextColor(4);; 10 TText *text = pt->AddText(""TEntryList for a TTree"");; 11 pt->Draw();; 12 ; 13 pt = new TPaveText(0.0387597,0.483696,0.307494,0.657609,""br"");; 14 pt->SetFillColor(kWhite);; 15 text = pt->AddText(""TEntryList"");; 16 pt->Draw();; 17 ; 18 pt = new TPaveText(0.0363636,0.107527,0.306494,0.489247,""br"");; 19 pt->SetFillColor(kWhite);; 20 pt->SetTextFont(42);; 21 text = pt->AddText(""fBlocks"");; 22 text = pt->AddText(""fLists = 0"");; 23 pt->Draw();; 24 ; 25 pt = new TPaveText(0.338501,0.23913,0.627907,0.375,""br"");; 26 pt->SetBorderSize(1);; 27 pt->SetFillColor(kWhite);; 28 text = pt->AddText(""Info on entries 0-63999"");; 29 pt->Draw();; 30 ; 31 pt = new TPaveText(0.643411,0.23913,0.989664,0.375,""br"");; 32 pt->SetBorderSize(1);; 33 pt->SetFillColor(kWhite);; 34 text = pt->AddText(""entries 64000-127999"");; 35 pt->Draw();; 36 ; 37 pt = new TPaveText(0.423773,0.423913,0.870801,0.576087,""br"");; 38 pt->SetFillColor(kWhite);; 39 text = pt->AddText(""TObjArray of TEntryListBlock objects"");; 40 pt->Draw();; 41 TArrow *arrow = new TArrow(0.277202,0.356757,0.418605,0.505435,0.05,"">"");; 42 arrow->SetFillColor(1);; 43 arrow->SetFillStyle(1001);; 44 arrow->Draw();; 45}; c#define c(i)Definition RSha256.hxx:101; kWhite@ kWhiteDefinition Rtypes.h:65; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/entrylist__figure1_8C_source.html:105,Load,Loading,105,doc/master/entrylist__figure1_8C_source.html,https://root.cern,https://root.cern/doc/master/entrylist__figure1_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/doc/macros/entrylistblock_figure1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; entrylistblock_figure1.C File Reference. Functions; pt Draw ();  ; c Range (0, 0, 1, 1);  ; pt SetBorderSize (0);  ; c SetBorderSize (2);  ; arrow SetFillColor (1);  ; pt SetFillColor (kWhite);  ; arrow SetFillStyle (1001);  ; c SetFrameFillColor (0);  ; pt SetTextAlign (12);  ; text SetTextAngle (-15);  ; pt SetTextColor (4);  ; pt SetTextSize (0.048583);  . Variables; TArrow * arrow = new TArrow(0.225552,0.572271,0.35489,0.283186,0.03,""|>"");  ; TLine * line = new TLine(0.35,0.5,0.95,0.5);  ; TPaveText * pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");  ; TText * text = pt->AddText(""TEntryListBlock"");  . Function Documentation. ◆ Draw(). pt Draw ; (; ). ◆ Range(). c Range ; (; 0 ; , . 0 ; , . 1 ; , . 1 ;  . ). ◆ SetBorderSize() [1/2]. pt SetBorderSize ; (; 0 ; ). ◆ SetBorderSize() [2/2]. c SetBorderSize ; (; 2 ; ). ◆ SetFillColor() [1/2]. arrow SetFillColor ; (; 1 ; ). ◆ SetFillColor() [2/2]. pt SetFillColor ; (; kWhite ; ). ◆ SetFillStyle(). arrow SetFillStyle ; (; 1001 ; ). ◆ SetFrameFillColor(). c SetFrameFillColor ; (; 0 ; ). ◆ SetTextAlign(). pt SetTextAlign ; (; 12 ; ). ◆ SetTextAngle(). text SetTextAngle ; (; - ; 15). ◆ SetTextColor(). pt SetTextColor ; (; 4 ; ). ◆ SetTextSize(). pt SetTextSize ; (; 0. ; 048583). Variable Documentation. ◆ arrow. arrow = new TArrow(0.225552,0.572271,0.35489,0.283186,0.03,""|>""). Definition at line 227 of file entrylistblock_figure1.C. ◆ line. line = new TLine(0.35,0.5,0.95,0.5). Definition at line 235 of file entrylistblock_figure1.C. ◆ pt. pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br""). Definition at line 7 of file entrylistblock_figure1.C. ◆ text. text = pt->AddText(""TEntryListBlock""). Definition at line 9 of file entrylistblock_figure1.C. treetreedocmacrosentrylistblock_figure1.C. ROOT master - Reference Guide Generated on ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/entrylistblock__figure1_8C.html:113,Load,Loading,113,doc/master/entrylistblock__figure1_8C.html,https://root.cern,https://root.cern/doc/master/entrylistblock__figure1_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/doc/macros/entrylistblock_figure1.C File Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions |; Variables ; entrylistblock_figure1.C File Reference. Functions; pt Draw ();  ; c Range (0, 0, 1, 1);  ; pt SetBorderSize (0);  ; c SetBorderSize (2);  ; arrow SetFillColor (1);  ; pt SetFillColor (kWhite);  ; arrow SetFillStyle (1001);  ; c SetFrameFillColor (0);  ; pt SetTextAlign (12);  ; text SetTextAngle (-15);  ; pt SetTextColor (4);  ; pt SetTextSize (0.048583);  . Variables; TArrow * arrow = new TArrow(0.225552,0.572271,0.35489,0.283186,0.03,""|>"");  ; TLine * line = new TLine(0.35,0.5,0.95,0.5);  ; TPaveText * pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");  ; TText * text = pt->AddText(""TEntryListBlock"");  . Function Documentation. ◆ Draw(). pt Draw ; (; ). ◆ Range(). c Range ; (; 0 ; , . 0 ; , . 1 ; , . 1 ;  . ). ◆ SetBorderSize() [1/2]. pt SetBorderSize ; (; 0 ; ). ◆ SetBorderSize() [2/2]. c SetBorderSize ; (; 2 ; ). ◆ SetFillColor() [1/2]. arrow SetFillColor ; (; 1 ; ). ◆ SetFillColor() [2/2]. pt SetFillColor ; (; kWhite ; ). ◆ SetFillStyle(). arrow SetFillStyle ; (; 1001 ; ). ◆ SetFrameFillColor(). c SetFrameFillColor ; (; 0 ; ). ◆ SetTextAlign(). pt SetTextAlign ; (; 12 ; ). ◆ SetTextAngle(). text SetTextAngle ; (; - ; 15). ◆ SetTextColor(). pt SetTextColor ; (; 4 ; ). ◆ SetTextSize(). pt SetTextSize ; (; 0. ; 048583). Variable Documentation. ◆ arrow. arrow = new TArrow(0.225552,0.572271,0.35489,0.283186,0.03,""|>""). Definition at line 227 of file entrylistblock_figure1.C. ◆ line. line = new TLine(0.35,0.5,0.95,0.5). Definition at line 235 of file entrylistblock_figure1.C. ◆ pt. pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br""). Definition at line 7 of file entrylistblock_figure1.C. ◆ text. text = pt->AddText(""TEntryListBlock""). Definition at line 9 of file entrylistblock_figure1.C. treetreedocmacrosentrylistblock_figure1.C. ROOT v6-32 - Reference Guide Generated on Fr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/entrylistblock__figure1_8C.html:112,Load,Loading,112,doc/v632/entrylistblock__figure1_8C.html,https://root.cern,https://root.cern/doc/v632/entrylistblock__figure1_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/doc/macros/entrylistblock_figure1.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. entrylistblock_figure1.C. Go to the documentation of this file. 1{; 2 TCanvas *c = new TCanvas(""c"", ""c"",49,123,752,435);; 3 c->Range(0,0,1,1);; 4 c->SetBorderSize(2);; 5 c->SetFrameFillColor(0);; 6 ; 7 TPaveText *pt = new TPaveText(0.00313972,0.650146,0.22135,0.772595,""br"");; 8 pt->SetFillColor(kWhite);; 9 TText *text = pt->AddText(""TEntryListBlock"");; 10 pt->Draw();; 11 ; 12 pt = new TPaveText(0.00313972,0.827988,0.675039,0.994169,""br"");; 13 pt->SetFillColor(kWhite);; 14 pt->SetTextColor(4);; 15 text = pt->AddText(""Indices representation in a TEntryListBlock"");; 16 pt->Draw();; 17 ; 18 pt = new TPaveText(0.00410678,0.412955,0.221766,0.651822,""br"");; 19 pt->SetFillColor(kWhite);; 20 pt->SetTextAlign(12);; 21 pt->SetTextSize(0.048583);; 22 text = pt->AddText(""UShort_t* fIndices"");; 23 text = pt->AddText(""Int_t fType"");; 24 pt->Draw();; 25 ; 26 pt = new TPaveText(0.324961,0.708455,0.959184,0.804665,""br"");; 27 pt->SetFillColor(kWhite);; 28 text = pt->AddText(""Suppose,that this block stores entries"");; 29 text = pt->AddText(""0, 2, 4, 10, 11, 12"");; 30 pt->Draw();; 31 ; 32 pt = new TPaveText(0.232227,0.541176,0.333333,0.641176,""br"");; 33 pt->SetBorderSize(0);; 34 pt->SetFillColor(kWhite);; 35 text = pt->AddText(""fType=0"");; 36 text->SetTextAngle(-15);; 37 pt->Draw();; 38 ; 39 pt = new TPaveText(0.355114,0.189066,0.457386,0.255125,""br"");; 40 pt->SetBorderSize(0);; 41 pt->SetFillColor(kWhite);; 42 text = pt->AddText(""fIndices[0]"");; 43 pt->Draw();; 44 ; 45 pt = new TPaveText(0.521193,0.38484,0.77708,0.48105,""br"");; 46 pt->SetBorderSize(0);; 47 pt->SetFillColor(kWhite);; 48 text = pt->AddText(""fIndices[0]"");; 49 pt->Draw();; 50 ; 51 pt = new TPaveText(0.355619,0.239726,0.458037,0.305936,""br"");; 52 pt->SetBorderSize(0);; 53 pt->SetFillColor(kWhite);; 54 pt->SetTextSize(0.0342466);; 55 text = pt->AddText(""0"");; 56 pt->Draw();; 57 ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/entrylistblock__figure1_8C_source.html:110,Load,Loading,110,doc/master/entrylistblock__figure1_8C_source.html,https://root.cern,https://root.cern/doc/master/entrylistblock__figure1_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/ROOT/TIOFeatures.hxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TIOFeatures.hxx. Go to the documentation of this file. 1// Author: Brian Bockelman UNL 09/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_TIO_FEATURES; 12#define ROOT_TIO_FEATURES; 13 ; 14#include ""Rtypes.h""; 15 ; 16class TBasket;; 17class TBranch;; 18class TTree;; 19 ; 20// keep it here to have a note that was removed; 21// #ifndef R__LESS_INCLUDES; 22// #include ""TBasket.h""; 23// #include <memory>; 24// #include <sstream>; 25// #include <initializer_list>; 26// #include <typeinfo>; 27// #include <type_traits> // is_same, enable_if; 28// #endif; 29 ; 30namespace ROOT {; 31 ; 32 ; 33// These are the known, supported, and enabled-by-default features for ROOT IO.; 34//; 35// Note that the `kSupported` members for EIOFeatures, Experimental::EIOFeatures, and; 36// Experiment::EIOUnsupportedFeatures should have no intersection and a union of equal; 37// to BITS(kIOFeatureCount).; 38//; 39enum class EIOFeatures {; 40 kSupported = 0 // Union of all known, supported, and enabled-by-default features (currently none).; 41};; 42 ; 43 ; 44namespace Experimental {; 45 ; 46// These are the known and supported ""experimental"" features, not enabled by default.; 47// When these are enabled by default, they will move to `ROOT::EIOFeatures`.; 48//; 49// Note that these all show up in TBasket::EIOBits, but it is desired to have the enum be at; 50// the ""ROOT-IO-wide"" level and not restricted to TBasket -- even if all the currently-foreseen; 51// usage of this mechanism somehow involves baskets currently.; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TIOFeatures_8hxx_source.html:99,Load,Loading,99,doc/master/TIOFeatures_8hxx_source.html,https://root.cern,https://root.cern/doc/master/TIOFeatures_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/ROOT/TIOFeatures.hxx Source File. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. TIOFeatures.hxx. Go to the documentation of this file. 1// Author: Brian Bockelman UNL 09/2017; 2 ; 3/*************************************************************************; 4 * Copyright (C) 1995-2017, Rene Brun and Fons Rademakers. *; 5 * All rights reserved. *; 6 * *; 7 * For the licensing terms see $ROOTSYS/LICENSE. *; 8 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 9 *************************************************************************/; 10 ; 11#ifndef ROOT_TIO_FEATURES; 12#define ROOT_TIO_FEATURES; 13 ; 14#include ""Rtypes.h""; 15 ; 16class TBasket;; 17class TBranch;; 18class TTree;; 19 ; 20// keep it here to have a note that was removed; 21// #ifndef R__LESS_INCLUDES; 22// #include ""TBasket.h""; 23// #include <memory>; 24// #include <sstream>; 25// #include <initializer_list>; 26// #include <typeinfo>; 27// #include <type_traits> // is_same, enable_if; 28// #endif; 29 ; 30namespace ROOT {; 31 ; 32 ; 33// These are the known, supported, and enabled-by-default features for ROOT IO.; 34//; 35// Note that the `kSupported` members for EIOFeatures, Experimental::EIOFeatures, and; 36// Experiment::EIOUnsupportedFeatures should have no intersection and a union of equal; 37// to BITS(kIOFeatureCount).; 38//; 39enum class EIOFeatures {; 40 kSupported = 0 // Union of all known, supported, and enabled-by-default features (currently none).; 41};; 42 ; 43 ; 44namespace Experimental {; 45 ; 46// These are the known and supported ""experimental"" features, not enabled by default.; 47// When these are enabled by default, they will move to `ROOT::EIOFeatures`.; 48//; 49// Note that these all show up in TBasket::EIOBits, but it is desired to have the enum be at; 50// the ""ROOT-IO-wide"" level and not restricted to TBasket -- even if all the currently-foreseen; 51// usage of this mechanism somehow involves baskets currently.; 52",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TIOFeatures_8hxx_source.html:98,Load,Loading,98,doc/v632/TIOFeatures_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/TIOFeatures_8hxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TBranch.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranch.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBranch; 13#define ROOT_TBranch; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBranch //; 19// //; 20// A TTree object is a list of TBranchs. //; 21// A TBranch describes the branch data structure and supports : //; 22// the list of TBaskets (branch buffers) associated to this branch. //; 23// the list of TLeaves (branch description) //; 24//////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TNamed.h""; 27#include ""TAttFill.h""; 28#include ""TObjArray.h""; 29#include ""TBranchCacheInfo.h""; 30#include ""TDataType.h""; 31#include ""Compression.h""; 32#include ""ROOT/TIOFeatures.hxx""; 33 ; 34class TTree;; 35class TBasket;; 36class TBranchElement;; 37class TLeaf;; 38class TBrowser;; 39class TDirectory;; 40class TFile;; 41class TClonesArray;; 42class TTreeCloner;; 43class TTreeCache;; 44 ; 45namespace ROOT {; 46namespace Experimental {; 47namespace Internal {; 48class TBulkBranchRead;; 49}; 50}; 51namespace Internal {; 52class TBranchIMTHelper; ///< A helper class for managing IMT work during TTree:Fill operations.; 53}; 54}; 55 ; 56const Int_t kDoNotProcess = BIT(10); // Active bit for branches; 57const Int_t kIsClone = BIT(11); // to indicate a TBranchClones; 58const Int_t kBranchObject = BIT(12); // branch is a TObject*; 59const Int_t kBranchAny = BIT(17); // branch is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8h_source.html:88,Load,Loading,88,doc/master/TBranch_8h_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TBranchElement.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranchElement.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 14/01/2001; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TBranchElement; 13#define ROOT_TBranchElement; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TBranchElement //; 19// //; 20// A Branch for the case of an object. //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23 ; 24#include ""TBranch.h""; 25 ; 26#include ""TClassRef.h""; 27 ; 28#include ""TTree.h""; 29 ; 30class TFolder;; 31class TStreamerInfo;; 32class TVirtualCollectionProxy;; 33class TVirtualCollectionIterators;; 34class TVirtualCollectionPtrIterators;; 35class TVirtualArray;; 36 ; 37#include ""TStreamerInfoActions.h""; 38 ; 39class TBranchElement : public TBranch {; 40 ; 41// Friends; 42 friend class TTreeCloner;; 43 friend class TLeafElement;; 44 ; 45/// Types; 46protected:; 47 enum EStatusBits {; 48 kBranchFolder = BIT(14),; 49 kDeleteObject = BIT(16), ///< We are the owner of fObject.; 50 kCache = BIT(18), ///< Need to pushd/pop fOnfileObject.; 51 kOwnOnfileObj = BIT(19), ///< We are the owner of fOnfileObject.; 52 kAddressSet = BIT(20), ///< The addressing set have been called for this branch; 53 kMakeClass = BIT(21), ///< This branch has been switched to using the MakeClass Mode; 54 kDecomposedObj = BIT(21) ///< More explicit alias for kMakeClass.; 55 };; 56 ; 57 ; 58// Data Members; 59protected:; 60 TString fClassName; ///< Class name of r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8h_source.html:95,Load,Loading,95,doc/master/TBranchElement_8h_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TChain.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TChain.h File Reference. #include ""TTree.h"". Include dependency graph for TChain.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TChain;  A chain is a collection of files containing TTree objects. More...;  . treetreeincTChain.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8h.html:90,Load,Loading,90,doc/master/TChain_8h.html,https://root.cern,https://root.cern/doc/master/TChain_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TChain.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TChain.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 03/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TChain; 13#define ROOT_TChain; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TChain //; 19// //; 20// A chain of TTrees. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TTree.h""; 25 ; 26class TFile;; 27class TBrowser;; 28class TCut;; 29class TEntryList;; 30class TEventList;; 31class TCollection;; 32 ; 33class TChain : public TTree {; 34 ; 35protected:; 36 Int_t fTreeOffsetLen; ///< Current size of fTreeOffset array; 37 Int_t fNtrees; ///< Number of trees; 38 Int_t fTreeNumber; ///<! Current Tree number in fTreeOffset table; 39 Long64_t *fTreeOffset; ///<[fTreeOffsetLen] Array of variables; 40 bool fCanDeleteRefs; ///<! If true, TProcessIDs are deleted when closing a file; 41 TTree *fTree; ///<! Pointer to current tree (Note: We do *not* own this tree.); 42 TFile *fFile; ///<! Pointer to current file (We own the file).; 43 TObjArray *fFiles; ///< -> List of file names containing the trees (TChainElement, owned); 44 TList *fStatus; ///< -> List of active/inactive branches (TChainElement, owned); 45 TChain *fProofChain; ///<! chain proxy when going to be processed by PROOF; 46 bool fGlobalRegistration; ///<! if true, bypass use of global lists; 47 ; 48private:; 49 TChain(const TChain&); // not implemented; 50 TChain& operator=(const TChain&); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8h_source.html:87,Load,Loading,87,doc/master/TChain_8h_source.html,https://root.cern,https://root.cern/doc/master/TChain_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TChainElement.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TChainElement.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 11/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11#ifndef ROOT_TChainElement; 12#define ROOT_TChainElement; 13 ; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TChainElement //; 18// //; 19// Describes a component of a TChain. //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23 ; 24#include ""TNamed.h""; 25 ; 26class TBranch;; 27 ; 28class TChainElement : public TNamed {; 29 ; 30 /// TChainElement status bits; 31 enum EStatusBits {; 32 kHasBeenLookedUp = BIT(15); 33 };; 34 ; 35protected:; 36 Long64_t fEntries; ///< Number of entries in the tree of this chain element; 37 Int_t fNPackets; ///< Number of packets; 38 Int_t fPacketSize; ///< Number of events in one packet for parallel root; 39 Int_t fStatus; ///< branch status when used as a branch; 40 void *fBaddress; ///<! branch address when used as a branch; 41 TString fBaddressClassName; ///<! Name of the class pointed to by fBaddress; 42 UInt_t fBaddressType; ///<! Type of the value pointed to by fBaddress; 43 bool fBaddressIsPtr : 1; ///<! True if the address is a pointer to an address; 44 bool fDecomposedObj : 1; ///<! True if the address needs the branch in MakeClass/DecomposedObj mode.; 45 bool fCheckedType : 1; ///<! True if the branch type and the address type have been checked.; 46 char *fPackets; ///<! Packet descriptor string; 47 TBranch **fBranchPtr; //",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChainElement_8h_source.html:94,Load,Loading,94,doc/master/TChainElement_8h_source.html,https://root.cern,https://root.cern/doc/master/TChainElement_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TCut.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCut.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 14/04/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TCut; 13#define ROOT_TCut; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TCut //; 18// //; 19// A specialized string object used in TTree selections. //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23#include ""TNamed.h""; 24 ; 25class TCut : public TNamed {; 26private:; 27 // Prevent meaningless operator (which otherwise can be reached via; 28 // the conversion to 'const char*'; 29 bool operator<(const TCut &rhs); // Intentional left unimplemented; 30 bool operator<=(const TCut &rhs); // Intentional left unimplemented; 31 bool operator>(const TCut &rhs); // Intentional left unimplemented; 32 bool operator>=(const TCut &rhs); // Intentional left unimplemented; 33public:; 34 TCut();; 35 TCut(const char *title);; 36 TCut(const char *name, const char *title);; 37 TCut(const TCut &cut);; 38 ~TCut() override;; 39 ; 40 // Assignment; 41 TCut& operator=(const char *rhs);; 42 TCut& operator=(const TCut &rhs);; 43 TCut& operator+=(const char *rhs);; 44 TCut& operator+=(const TCut &rhs);; 45 TCut& operator*=(const char *rhs);; 46 TCut& operator*=(const TCut &rhs);; 47 ; 48 // Comparison; 49 bool operator==(const char *rhs) const;; 50 bool operator==(const TCut &rhs) const;; 51 bool operator!=(const char *rhs) const;; 52 bool operator!=(const TCut &rhs) const;; 53 ; 54 frie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCut_8h_source.html:85,Load,Loading,85,doc/master/TCut_8h_source.html,https://root.cern,https://root.cern/doc/master/TCut_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TEntryList.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEntryList.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Anna Kreshuk 27/10/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TEntryList; 13#define ROOT_TEntryList; 14 ; 15#include ""TNamed.h""; 16 ; 17class TTree;; 18class TDirectory;; 19class TObjArray;; 20class TString;; 21 ; 22class TList;; 23class TCollection;; 24 ; 25class TEntryList: public TNamed; 26{; 27 private:; 28 TEntryList& operator=(const TEntryList&); // Not implemented; 29 ; 30 protected:; 31 TList *fLists; ///< a list of underlying entry lists for each tree of a chain; 32 TEntryList *fCurrent; ///<! currently filled entry list; 33 ; 34 Int_t fNBlocks; ///< number of TEntryListBlocks; 35 TObjArray *fBlocks; ///< blocks with indices of passing events (TEntryListBlocks); 36 Long64_t fN; ///< number of entries in the list; 37 Long64_t fEntriesToProcess; ///< used on proof to set the number of entries to process in a packet; 38 TString fTreeName; ///< name of the tree; 39 TString fFileName; ///< name of the file, where the tree is; 40 ULong_t fStringHash; ///<! Hash value of a string of treename and filename; 41 Int_t fTreeNumber; ///<! the index of the tree in the chain (used when the entry; 42 ///< list is used as input (TTree::SetEntryList()); 43 ; 44 Long64_t fLastIndexQueried; ///<! used to optimize GetEntry() function from a loop; 45 Long64_t fLastIndexReturned; ///<! used to optimize GetEntry() function from a loop; 46 bool fShift; ///<! true when some sub-lists don't correspond to trees; 47 ///< ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEntryList_8h_source.html:91,Load,Loading,91,doc/master/TEntryList_8h_source.html,https://root.cern,https://root.cern/doc/master/TEntryList_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TEventList.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEventList.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 11/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TEventList; 13#define ROOT_TEventList; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TEventList //; 19// //; 20// A list of selected entries in a TTree. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TNamed.h""; 26 ; 27class TDirectory;; 28class TCollection;; 29 ; 30 ; 31class TEventList : public TNamed {; 32 ; 33protected:; 34 Int_t fN; ///< Number of elements in the list; 35 Int_t fSize; ///< Size of array; 36 Int_t fDelta; ///< Increment size; 37 bool fReapply; ///< If true, TTree::Draw will 'reapply' the original cut; 38 Long64_t *fList; ///<[fN]Array of elements; 39 TDirectory *fDirectory; ///<! Pointer to directory holding this tree; 40 ; 41public:; 42 TEventList();; 43 TEventList(const char *name, const char *title="""",Int_t initsize=0, Int_t delta = 0);; 44 TEventList(const TEventList &list);; 45 ~TEventList() override;; 46 virtual void Add(const TEventList *list);; 47 void Clear(Option_t *option="""") override {Reset(option);}; 48 virtual bool Contains(Long64_t entry);; 49 virtual bool ContainsRange(Long64_t entrymin, Long64_t entrymax);; 50 virtual void DirectoryAutoAdd(TDirectory *);; 51 virtual void Enter(Long64_t entry);; 52 TDirectory *GetDirectory() const {return fDirectory;}; 53 virtual Long64_t GetEntry(Int_t inde",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEventList_8h_source.html:91,Load,Loading,91,doc/master/TEventList_8h_source.html,https://root.cern,https://root.cern/doc/master/TEventList_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TLeaf.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLeaf.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TLeaf; 13#define ROOT_TLeaf; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TLeaf //; 19// //; 20// A TTree object is a list of TBranch. //; 21// A TBranch object is a list of TLeaf. In most cases, the TBranch //; 22// will have one TLeaf. //; 23// A TLeaf describes the branch data types and holds the data. //; 24// //; 25// A few notes about the data held by the leaf. It can contain: //; 26// 1 a single object or primitive (e.g., one float), //; 27// 2 a fixed-number of objects (e.g., each entry has two floats). //; 28// The number of elements per entry is saved in `fLen`. //; 29// 3 a dynamic number of primitives. The number of objects in each //; 30// entry is saved in the `fLeafCount` branch. //; 31// //; 32// Note options (2) and (3) can combined - if fLeafCount says an entry //; 33// has 3 elements and fLen is 2, then there will be 6 objects in that //; 34// entry. //; 35// //; 36// Additionally, `fNdata` is transient and generated on read to //; 37// determine the necessary size of a buffer to hold event data; //; 38// depending on the call-site, it may be sized larger than the number //; 39// of elements //; 40// //; 41//////////////////////////////////////////////////////////////////////////; 42 ; 43 ; 44#include ""TNamed.h""; 45 ; 46#include <vector>; 47 ; 48#ifdef R__LESS_INCLUDES; 49class TBr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLeaf_8h_source.html:86,Load,Loading,86,doc/master/TLeaf_8h_source.html,https://root.cern,https://root.cern/doc/master/TLeaf_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TNtuple.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNtuple.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 06/04/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TNtuple; 13#define ROOT_TNtuple; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TNtuple //; 19// //; 20// A simple tree with branches of floats. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24#include ""TTree.h""; 25 ; 26class TBrowser;; 27 ; 28class TNtuple : public TTree {; 29 ; 30protected:; 31 Int_t fNvar; ///< Number of columns; 32 Float_t *fArgs; ///<! [fNvar] Array of variables; 33 ; 34 Int_t Fill() override;; 35 ; 36private:; 37 TNtuple(const TNtuple&) = delete;; 38 TNtuple& operator=(const TNtuple&) = delete;; 39 ; 40public:; 41 TNtuple();; 42 TNtuple(const char *name,const char *title, const char *varlist, Int_t bufsize=32000);; 43 ~TNtuple() override;; 44 ; 45 void Browse(TBrowser *b) override;; 46 TTree *CloneTree(Long64_t nentries = -1, Option_t* option = """") override;; 47 virtual Int_t Fill(const Float_t *x);; 48 Int_t Fill(Int_t x0) { return Fill((Float_t)x0); }; 49 Int_t Fill(Double_t x0) { return Fill((Float_t)x0); }; 50 virtual Int_t Fill(Float_t x0, Float_t x1=0, Float_t x2=0, Float_t x3=0,; 51 Float_t x4=0, Float_t x5=0, Float_t x6=0, Float_t x7=0,; 52 Float_t x8=0, Float_t x9=0, Float_t x10=0,; 53 Float_t x11=0, Float_t x12=0, Float_t x13=0,; 54 Float_t x14=0);; 55 virtual Int_t GetNvar() const { return fNvar; }; 56 Float_t *GetA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8h_source.html:88,Load,Loading,88,doc/master/TNtuple_8h_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TSelector.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSelector.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 05/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TSelector; 13#define ROOT_TSelector; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TSelector //; 19// //; 20// A utility class for Trees selections. //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TObject.h""; 26#include ""TString.h""; 27#include ""TSelectorList.h""; 28 ; 29class TTree;; 30 ; 31class TSelector : public TObject {; 32 ; 33public:; 34 enum EAbort { kContinue, kAbortProcess, kAbortFile };; 35 ; 36protected:; 37 Long64_t fStatus; ///< Selector status; 38 EAbort fAbort; ///< Abort status; 39 TString fOption; ///< Option given to TTree::Process; 40 TObject *fObject; ///<! Current object if processing object (vs. TTree); 41 TList *fInput; ///< List of objects available during processing; 42 TSelectorList *fOutput; ///<! List of objects created during processing; 43 ; 44private:; 45 TSelector(const TSelector&); // not implemented; 46 TSelector& operator=(const TSelector&); // not implemented; 47 ; 48public:; 49 TSelector();; 50 ~TSelector() override;; 51 ; 52 virtual int Version() const { return 0; }; 53 virtual void Init(TTree *) { }; 54 virtual void Begin(TTree *) { }; 55 virtual void SlaveBegin(TTree *) { }; 56 bool Notify() override { return true; }; 57 const char *GetOption() const override { return fOption.Data(); }; 58 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSelector_8h_source.html:90,Load,Loading,90,doc/master/TSelector_8h_source.html,https://root.cern,https://root.cern/doc/master/TSelector_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TTree.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; TTree.h File Reference. #include ""Compression.h""; #include ""ROOT/TIOFeatures.hxx""; #include ""TArrayD.h""; #include ""TArrayI.h""; #include ""TAttFill.h""; #include ""TAttLine.h""; #include ""TAttMarker.h""; #include ""TClass.h""; #include ""TDataType.h""; #include ""TDirectory.h""; #include ""TObjArray.h""; #include ""TVirtualTreePlayer.h""; #include ""TBranch.h""; #include ""TList.h""; #include <array>; #include <atomic>; #include <vector>; #include <utility>. Include dependency graph for TTree.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. This graph shows which files directly or indirectly include this file:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Classes; class  TTree::TClusterIterator;  Helper class to iterate over cluster of baskets. More...;  ; class  TTree::TFriendLock;  Helper class to prevent infinite recursion in the usage of TTree Friends. More...;  ; class  TTree;  A TTree represents a columnar dataset. More...;  ; class  TTreeFriendLeafIter;  Iterator on all the leaves in a TTree and its friend. More...;  . treetreeincTTree.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8h.html:89,Load,Loading,89,doc/master/TTree_8h.html,https://root.cern,https://root.cern/doc/master/TTree_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TTree.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTree.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TTree; 13#define ROOT_TTree; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TTree //; 18// //; 19// A TTree object is a list of TBranch. //; 20// To Create a TTree object one must: //; 21// - Create the TTree header via the TTree constructor //; 22// - Call the TBranch constructor for every branch. //; 23// //; 24// To Fill this object, use member function Fill with no parameters. //; 25// The Fill function loops on all defined TBranch. //; 26// //; 27//////////////////////////////////////////////////////////////////////////; 28 ; 29#include ""Compression.h""; 30#include ""ROOT/TIOFeatures.hxx""; 31#include ""TArrayD.h""; 32#include ""TArrayI.h""; 33#include ""TAttFill.h""; 34#include ""TAttLine.h""; 35#include ""TAttMarker.h""; 36#include ""TClass.h""; 37#include ""TDataType.h""; 38#include ""TDirectory.h""; 39#include ""TObjArray.h""; 40#include ""TVirtualTreePlayer.h""; 41 ; 42#ifdef R__LESS_INCLUDES; 43class TBranch;; 44class TList;; 45#else; 46#include ""TBranch.h""; 47// #include ""TBuffer.h""; 48#include ""TList.h""; 49#endif; 50 ; 51#include <array>; 52#include <atomic>; 53#include <vector>; 54#include <utility>; 55 ; 56class TBuffer;; 57class TBrowser;; 58class TFile;; 59class TLeaf;; 60class TH1;; 61class TTreeFormula;; 62class TPolyMarker;; 63class TEventList;; 64class TEntryList;; 65class TSQLResult;; 66class TSelector;; 67c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8h_source.html:86,Load,Loading,86,doc/master/TTree_8h_source.html,https://root.cern,https://root.cern/doc/master/TTree_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/inc/TVirtualIndex.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualIndex.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 05/07/2004; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TVirtualIndex; 13#define ROOT_TVirtualIndex; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TVirtualIndex //; 19// //; 20// Abstract interface for Tree Index //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TNamed.h""; 26 ; 27class TTree;; 28class TTreeFormula;; 29 ; 30class TVirtualIndex : public TNamed {; 31 ; 32protected:; 33 TTree *fTree; //! pointer to Tree; 34 ; 35public:; 36 TVirtualIndex();; 37 ~TVirtualIndex() override;; 38 virtual void Append(const TVirtualIndex *,bool delaySort = false) = 0;; 39 virtual Long64_t GetEntryNumberFriend(const TTree * /*parent*/) = 0;; 40 virtual Long64_t GetEntryNumberWithIndex(Long64_t major, Long64_t minor) const = 0;; 41 virtual Long64_t GetEntryNumberWithBestIndex(Long64_t major, Long64_t minor) const = 0;; 42 virtual const char *GetMajorName() const = 0;; 43 virtual const char *GetMinorName() const = 0;; 44 virtual bool IsValidFor(const TTree *parent) = 0;; 45 virtual Long64_t GetN() const = 0;; 46 virtual TTree *GetTree() const {return fTree;}; 47 virtual void UpdateFormulaLeaves(const TTree *parent) = 0;; 48 virtual void SetTree(TTree *T) = 0;; 49 ; 50 ClassDefOverride(TVirtualIndex,1); //Abstract interface for Tree Index; 51};; 52 ; 53#endif; 54 ; Long64_tlong long Long64_tD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualIndex_8h_source.html:94,Load,Loading,94,doc/master/TVirtualIndex_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualIndex_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TBranch.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranch.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TBranchCacheInfo.h""; 13 ; 14#include ""TBranch.h""; 15 ; 16#include ""Bytes.h""; 17#include ""Compression.h""; 18#include ""TBasket.h""; 19#include ""TBranchBrowsable.h""; 20#include ""TBrowser.h""; 21#include ""TBuffer.h""; 22#include ""TClass.h""; 23#include ""TBufferFile.h""; 24#include ""TClonesArray.h""; 25#include ""TFile.h""; 26#include ""TLeaf.h""; 27#include ""TLeafB.h""; 28#include ""TLeafC.h""; 29#include ""TLeafD.h""; 30#include ""TLeafD32.h""; 31#include ""TLeafF.h""; 32#include ""TLeafF16.h""; 33#include ""TLeafI.h""; 34#include ""TLeafL.h""; 35#include ""TLeafG.h""; 36#include ""TLeafO.h""; 37#include ""TLeafObject.h""; 38#include ""TLeafS.h""; 39#include ""TMessage.h""; 40#include ""TROOT.h""; 41#include ""TSystem.h""; 42#include ""TMath.h""; 43#include ""TTree.h""; 44#include ""TTreeCache.h""; 45#include ""TTreeCacheUnzip.h""; 46#include ""TVirtualMutex.h""; 47#include ""TVirtualPad.h""; 48#include ""TVirtualPerfStats.h""; 49#include ""strlcpy.h""; 50#include ""snprintf.h""; 51 ; 52#include ""TBranchIMTHelper.h""; 53 ; 54#include ""ROOT/TIOFeatures.hxx""; 55 ; 56#include <atomic>; 57#include <cstddef>; 58#include <cstring>; 59#include <cstdio>; 60 ; 61 ; 62Int_t TBranch::fgCount = 0;; 63 ; 64/** \class TBranch; 65\ingroup tree; 66 ; 67A TTree is a list of TBranches; 68 ; 69A TBranch supports:; 70 - The list of TLeaf describing this branch.; 71 - The list of TBasket (branch buffers).; 72 ; 73See TBranch struct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:90,Load,Loading,90,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TBranchElement.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranchElement.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Authors Rene Brun , Philippe Canal, Markus Frank 14/01/2001; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TBranchElement; 13\ingroup tree; 14 ; 15A Branch for the case of an object.; 16*/; 17 ; 18#include ""TBranchElement.h""; 19 ; 20#include ""TBasket.h""; 21#include ""TBranchObject.h""; 22#include ""TBranchRef.h""; 23#include ""TBrowser.h""; 24#include ""TClass.h""; 25#include ""TClassEdit.h""; 26#include ""TClonesArray.h""; 27#include ""TDataMember.h""; 28#include ""TDataType.h""; 29#include ""TError.h""; 30#include ""TMath.h""; 31#include ""TFile.h""; 32#include ""TFolder.h""; 33#include ""TLeafElement.h""; 34#include ""TRealData.h""; 35#include ""TStreamerElement.h""; 36#include ""TStreamerInfo.h""; 37#include ""TTree.h""; 38#include ""TVirtualCollectionProxy.h""; 39#include ""TVirtualCollectionIterators.h""; 40#include ""TVirtualMutex.h""; 41#include ""TVirtualPad.h""; 42#include ""TBranchSTL.h""; 43#include ""TVirtualArray.h""; 44#include ""TBufferFile.h""; 45#include ""TInterpreter.h""; 46#include ""TROOT.h""; 47 ; 48#include ""TStreamerInfoActions.h""; 49#include ""TSchemaRuleSet.h""; 50 ; 51ClassImp(TBranchElement);; 52 ; 53////////////////////////////////////////////////////////////////////////////////; 54 ; 55namespace {; 56 void RemovePrefix(TString& str, const TString &prefix) {; 57 // -- Remove a prefix from a string.; 58 // -- Require a '.' after the prefix.; 59 if (prefix.Length() && prefix.Length() <= str.Length(); 60 && (str.Data()[prefix.Length()]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:97,Load,Loading,97,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TChain.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TChain.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 03/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TChain; 13\ingroup tree; 14 ; 15A chain is a collection of files containing TTree objects.; 16When the chain is created, the first parameter is the default name; 17for the Tree to be processed later on.; 18 ; 19Enter a new element in the chain via the TChain::Add function.; 20Once a chain is defined, one can use the normal TTree functions; 21to Draw,Scan,etc.; 22 ; 23Use TChain::SetBranchStatus to activate one or more branches for all; 24the trees in the chain.; 25*/; 26 ; 27#include ""TChain.h""; 28#include ""ROOT/InternalTreeUtils.hxx""; 29 ; 30#include <iostream>; 31#include <cfloat>; 32#include <string>; 33 ; 34#include ""TBranch.h""; 35#include ""TBrowser.h""; 36#include ""TBuffer.h""; 37#include ""TChainElement.h""; 38#include ""TClass.h""; 39#include ""TColor.h""; 40#include ""TCut.h""; 41#include ""TError.h""; 42#include ""TFile.h""; 43#include ""TFileInfo.h""; 44#include ""TFriendElement.h""; 45#include ""TLeaf.h""; 46#include ""TList.h""; 47#include ""TObjString.h""; 48#include ""TPluginManager.h""; 49#include ""TROOT.h""; 50#include ""TRegexp.h""; 51#include ""TSelector.h""; 52#include ""TSystem.h""; 53#include ""TTree.h""; 54#include ""TTreeCache.h""; 55#include ""TUrl.h""; 56#include ""TVirtualIndex.h""; 57#include ""TEventList.h""; 58#include ""TEntryList.h""; 59#include ""TEntryListFromFile.h""; 60#include ""TFileStager.h""; 61#include ""TFilePrefetch.h""; 62#include ""TVirtualMutex.h""; 63#include",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:89,Load,Loading,89,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TEntryList.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEntryList.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Anna Kreshuk 27/10/2006; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TEntryList; 13\ingroup tree; 14 ; 15A List of entry numbers in a TTree or TChain. ; 16 ; 17Note: It is recommended to use approaches such as TTreeReader::SetEntryRange or ; 18ROOT::RDataFrame instead of TEntryList if possible.; 19 ; 20## Operations on entry lists; 21 ; 22- __Add__() - if the lists are for the same tree, adds all the entries of the second list; 23 to the first list. If the lists are for different trees, creates a TEntryList; 24 with 2 sublists for each TTree. If the lists are for TChains, merges the ones; 25 for the same trees and adds new sublists for the TTrees that were not included; 26 in the first TEntryList; 27- __Subtract__() - if the lists are for the same TTree, removes the entries of the second; 28 list from the first list. If the lists are for TChains, loops over all; 29 sub-lists; 30- __GetEntry(n)__ - returns the n-th entry number; 31- __Next__() - returns next entry number. Note, that this function is; 32 much faster than GetEntry, and it's called when GetEntry() is called; 33 for 2 or more indices in a row.; 34 ; 35## TTree::Draw() and TChain::Draw(); 36 ; 37Use option __entrylist__ to write the results of TTree::Draw and TChain::Draw into; 38an entry list. Example:; 39~~~ {.cpp}; 40 tree->Draw("">>elist"", ""x<0 && y>0"", ""entrylist"");; 41 TEntryList *elist = (TEntryList*)gDirectory->Get(""elist"");; 42~~~; 43## E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEntryList_8cxx_source.html:93,Load,Loading,93,doc/master/TEntryList_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEntryList_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TEventList.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEventList.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 11/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TEventList; 13\ingroup tree; 14 ; 15\legacy{TEventList}; 16 ; 17A TEventList object is a list of selected events (entries) in a TTree.; 18 ; 19A TEventList is automatically generated by TTree::Draw: example; 20~~~ {.cpp}; 21 tree->Draw("">>elist1"",""x<0 && y> 0"");; 22~~~; 23In this example, a TEventList object named ""elist1"" will be; 24generated. (Previous contents are overwritten).; 25~~~ {.cpp}; 26 tree->Draw("">>+elist1"",""x<0 && y> 0"");; 27~~~; 28In this example, selected entries are added to the list.; 29 ; 30The TEventList object is added to the list of objects in the current; 31directory.; 32 ; 33Use TTree:SetEventList(TEventList *list) to inform TTree that you; 34want to use the list as input. The following code gets a pointer to; 35the TEventList object created in the above commands:; 36~~~ {.cpp}; 37 TEventList *list = (TEventList*)gDirectory->Get(""elist1"");; 38~~~; 39- Use function Enter to enter an element in the list; 40- The function Add may be used to merge two lists.; 41- The function Subtract may be used to subtract two lists.; 42- The function Reset may be used to reset a list.; 43- Use TEventList::Print(option) to print the contents.; 44 (option ""all"" prints all the list entries).; 45- Operators + and - correspond to functions Add and Subtract.; 46- A TEventList object can be saved on a file via the Write function.; 47*/; 48 ; 49",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEventList_8cxx_source.html:93,Load,Loading,93,doc/master/TEventList_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEventList_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TLeaf.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLeaf.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TLeaf; 13\ingroup tree; 14 ; 15A TLeaf describes individual elements of a TBranch; 16See TBranch structure in TTree.; 17 ; 18A TTree object is a list of TBranch.; 19A TBranch object is a list of TLeaf. In most cases, the TBranch; 20will have one TLeaf.; 21A TLeaf describes the branch data types and holds the data.; 22 ; 23A few notes about the data held by the leaf. It can contain:; 24 1. a single object or primitive (e.g., one float),; 25 2. a fixed-number of objects (e.g., each entry has two floats).; 26 The number of elements per entry is saved in `fLen`.; 27 3. a dynamic number of primitives. The number of objects in each; 28 entry is saved in the `fLeafCount` branch.; 29 ; 30Note options (2) and (3) can combined - if fLeafCount says an entry; 31has 3 elements and fLen is 2, then there will be 6 objects in that; 32entry.; 33 ; 34Additionally, `fNdata` is transient and generated on read to; 35determine the necessary size of a buffer to hold event data;; 36depending on the call-site, it may be sized larger than the number; 37of elements; 38 ; 39*/; 40 ; 41#include ""TLeaf.h""; 42#include ""TBranch.h""; 43#include ""TBuffer.h""; 44#include ""TTree.h""; 45#include ""TVirtualPad.h""; 46#include ""TBrowser.h""; 47#include ""strlcpy.h""; 48 ; 49#include <cctype>; 50 ; 51ClassImp(TLeaf);; 52 ; 53/////////////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLeaf_8cxx_source.html:88,Load,Loading,88,doc/master/TLeaf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLeaf_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TNtuple.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNtuple.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 06/04/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TNtuple.h""; 13#include ""TBuffer.h""; 14#include ""TTree.h""; 15#include ""TBranch.h""; 16#include ""TLeaf.h""; 17#include ""TBrowser.h""; 18#include ""TreeUtils.h""; 19#include ""strlcpy.h""; 20 ; 21#include <string>; 22 ; 23ClassImp(TNtuple);; 24 ; 25/** \class TNtuple; 26\ingroup tree; 27 ; 28A simple TTree restricted to a list of float variables only.; 29 ; 30Each variable goes to a separate branch.; 31 ; 32A Ntuple is created via; 33~~~ {.cpp}; 34 TNtuple(name,title,varlist,bufsize); 35~~~; 36It is filled via:; 37~~~ {.cpp}; 38 TNtuple::Fill(*x) or; 39 TNtuple::Fill(v1,v2,v3.....); 40~~~; 41*/; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// Default constructor for Ntuple.; 45 ; 46TNtuple::TNtuple(): TTree(); 47{; 48 fNvar = 0;; 49 fArgs = nullptr;; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Create an Ntuple.; 54///; 55/// The parameter varlist describes the list of the ntuple variables; 56/// separated by a colon:; 57///; 58/// Example: `x:y:z:energy`; 59///; 60/// For each variable in the list a separate branch is created.; 61///; 62/// NOTE:; 63/// - Use TTree to create branches with variables of different data types.; 64/// - Use TTree when the number of branches is large (> 100).; 65 ; 66TNtuple::TNtuple(const char *name, const char *title, const char *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8cxx_source.html:90,Load,Loading,90,doc/master/TNtuple_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TSelector.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSelector.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 05/02/97; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TSelector; 13\ingroup tree; 14 ; 15A TSelector object is used by the TTree::Draw, TTree::Scan,; 16TTree::Process to navigate in a TTree and make selections.; 17It contains the following main methods:; 18 ; 19- void TSelector::Init(TTree *t). Called every time a new TTree is; 20 attached.; 21 ; 22- void TSelector::SlaveBegin(). Create e.g. histograms in this method.; 23 This method is called (with or without PROOF) before looping on the; 24 entries in the Tree. When using PROOF, this method is called on; 25 each worker node.; 26 ; 27- void TSelector::Begin(). Mostly for backward compatibility; use; 28 SlaveBegin() instead. Both methods are called before looping on the; 29 entries in the Tree. When using PROOF, Begin() is called on the; 30 client only.; 31 ; 32- bool TSelector::Notify(). This method is called at the first entry; 33 of a new file in a chain.; 34 ; 35- bool TSelector::Process(Long64_t entry). This method is called; 36 to process an entry. It is the user's responsibility to read; 37 the corresponding entry in memory (may be just a partial read).; 38 Once the entry is in memory one can apply a selection and if the; 39 entry is selected histograms can be filled. Processing stops; 40 when this function returns false. This function combines the; 41 next two functions in one, avoiding to have to maintain state; 42 in the class to communica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSelector_8cxx_source.html:92,Load,Loading,92,doc/master/TSelector_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSelector_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TTree.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions |; Variables ; TTree.cxx File Reference. #include <ROOT/RConfig.hxx>; #include ""TTree.h""; #include ""ROOT/TIOFeatures.hxx""; #include ""TArrayC.h""; #include ""TBufferFile.h""; #include ""TBaseClass.h""; #include ""TBasket.h""; #include ""TBranchClones.h""; #include ""TBranchElement.h""; #include ""TBranchObject.h""; #include ""TBranchRef.h""; #include ""TBrowser.h""; #include ""TClass.h""; #include ""TClassEdit.h""; #include ""TClonesArray.h""; #include ""TCut.h""; #include ""TDataMember.h""; #include ""TDataType.h""; #include ""TDirectory.h""; #include ""TError.h""; #include ""TEntryList.h""; #include ""TEnv.h""; #include ""TEventList.h""; #include ""TFile.h""; #include ""TFolder.h""; #include ""TFriendElement.h""; #include ""TInterpreter.h""; #include ""TLeaf.h""; #include ""TLeafB.h""; #include ""TLeafC.h""; #include ""TLeafD.h""; #include ""TLeafElement.h""; #include ""TLeafF.h""; #include ""TLeafI.h""; #include ""TLeafL.h""; #include ""TLeafObject.h""; #include ""TLeafS.h""; #include ""TList.h""; #include ""TMath.h""; #include ""TMemFile.h""; #include ""TROOT.h""; #include ""TRealData.h""; #include ""TRegexp.h""; #include ""TRefTable.h""; #include ""TStreamerElement.h""; #include ""TStreamerInfo.h""; #include ""TStyle.h""; #include ""TSystem.h""; #include ""TTreeCloner.h""; #include ""TTreeCache.h""; #include ""TTreeCacheUnzip.h""; #include ""TVirtualCollectionProxy.h""; #include ""TEmulatedCollectionProxy.h""; #include ""TVirtualIndex.h""; #include ""TVirtualPerfStats.h""; #include ""TVirtualPad.h""; #include ""TBranchSTL.h""; #include ""TSchemaRuleSet.h""; #include ""TFileMergeInfo.h""; #include ""ROOT/StringConv.hxx""; #include ""TVirtualMutex.h""; #include ""strlcpy.h""; #include ""snprintf.h""; #include ""TBranchIMTHelper.h""; #include ""TNotifyLink.h""; #include <chrono>; #include <cstddef>; #include <iostream>; #include <fstream>; #include <sstream>; #include <string>; #include <cstdio>; #include <climits>; #include <algorithm>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx.html:91,Load,Loading,91,doc/master/TTree_8cxx.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/tree/src/TTree.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTree.cxx. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Rene Brun 12/01/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11/**; 12 \defgroup tree Tree Library; 13 ; 14 In order to store columnar datasets, ROOT provides the TTree, TChain,; 15 TNtuple and TNtupleD classes.; 16 The TTree class represents a columnar dataset. Any C++ type can be stored in the; 17 columns. The TTree has allowed to store about **1 EB** of data coming from the LHC alone:; 18 it is demonstrated to scale and it's battle tested. It has been optimized during the years; 19 to reduce dataset sizes on disk and to deliver excellent runtime performance.; 20 It allows to access only part of the columns of the datasets, too.; 21 The TNtuple and TNtupleD classes are specialisations of the TTree class which can; 22 only hold single precision and double precision floating-point numbers respectively;; 23 The TChain is a collection of TTrees, which can be located also in different files.; 24 ; 25*/; 26 ; 27/** \class TTree; 28\ingroup tree; 29 ; 30A TTree represents a columnar dataset. Any C++ type can be stored in its columns.; 31 ; 32A TTree, often called in jargon *tree*, consists of a list of independent columns or *branches*,; 33represented by the TBranch class.; 34Behind each branch, buffers are allocated automatically by ROOT.; 35Such buffers are automatically written to disk or kept in memory until the size stored in the; 36attribute fMaxVirtualSize is reached.; 37Variables of one branch are written to the same buffer. A b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:88,Load,Loading,88,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/treeplayer/inc/TTreePerfStats.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreePerfStats.h. Go to the documentation of this file. 1// @(#)root/treeplayer:$Id$; 2// Author: Rene Brun 29/10/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TTreePerfStats; 13#define ROOT_TTreePerfStats; 14 ; 15//////////////////////////////////////////////////////////////////////////; 16// //; 17// TTreePerfStats //; 18// //; 19// TTree I/O performance measurement //; 20// //; 21//////////////////////////////////////////////////////////////////////////; 22 ; 23 ; 24#include ""TVirtualPerfStats.h""; 25#include ""TString.h""; 26#include <vector>; 27#include <unordered_map>; 28 ; 29class TBrowser;; 30class TFile;; 31class TTree;; 32class TStopwatch;; 33class TPaveText;; 34class TGraphErrors;; 35class TGaxis;; 36class TText;; 37 ; 38class TTreePerfStats : public TVirtualPerfStats {; 39 ; 40public:; 41 struct BasketInfo {; 42 UInt_t fUsed = {0}; ///< Number of times the basket was requested from the disk.; 43 UInt_t fLoaded = {0}; ///< Number of times the basket was put in the primary TTreeCache; 44 UInt_t fLoadedMiss = {0}; ///< Number of times the basket was put in the secondary cache; 45 UInt_t fMissed = {0}; ///< Number of times the basket was read directly from the file.; 46 };; 47 ; 48 using BasketList_t = std::vector<std::pair<TBranch*, std::vector<size_t>>>;; 49 ; 50protected:; 51 Int_t fTreeCacheSize; ///< TTreeCache buffer size; 52 Int_t fNleaves; ///< Number of leaves in the tree; 53 Int_t fReadCalls; ///< Number of read calls; 54 Int_t fReadaheadSize; ///< Read-ahead cache siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreePerfStats_8h_source.html:101,Load,Loading,101,doc/master/TTreePerfStats_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreePerfStats_8h_source.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: tree/treeplayer/inc/TTreeReader.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeReader.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Axel Naumann, 2010-08-02; 3// Author: Vincenzo Eduardo Padulano CERN 09/2024; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_TTreeReader; 14#define ROOT_TTreeReader; 15 ; 16 ; 17////////////////////////////////////////////////////////////////////////////; 18// //; 19// TTreeReader //; 20// //; 21// A simple interface for reading trees or chains. //; 22// //; 23// //; 24////////////////////////////////////////////////////////////////////////////; 25 ; 26#include ""TTree.h""; 27#include ""TTreeReaderUtils.h""; 28#include ""TNotifyLink.h""; 29 ; 30#include <deque>; 31#include <iterator>; 32#include <unordered_map>; 33#include <string>; 34 ; 35class TDictionary;; 36class TDirectory;; 37class TFileCollection;; 38 ; 39namespace ROOT {; 40namespace Internal {; 41 class TBranchProxyDirector;; 42 class TFriendProxy;; 43}; 44}; 45 ; 46class TTreeReader: public TObject {; 47public:; 48 ; 49 ///\class TTreeReader::Iterator_t; 50 /// Iterate through the entries of a TTree.; 51 ///; 52 /// This iterator drives the associated TTreeReader; its; 53 /// dereferencing (and actually even the iteration) will; 54 /// set the entry number represented by this iterator.; 55 /// It does not really represent a data element; it simply; 56 /// returns the entry number (or -1 once the end of the tree; 57 /// is reached).; 58 class Iterator_t {; 59 private:; 60 Long64_t fEntry; ///< Entry number of the tree referenced by this iterator; -1 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeReader_8h_source.html:98,Load,Loading,98,doc/master/TTreeReader_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreeReader_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/treeplayer/inc/TTreeReaderValue.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeReaderValue.h. Go to the documentation of this file. 1// @(#)root/tree:$Id$; 2// Author: Axel Naumann, 2010-08-02; 3// Author: Vincenzo Eduardo Padulano CERN 09/2024; 4 ; 5/*************************************************************************; 6 * Copyright (C) 1995-2024, Rene Brun and Fons Rademakers. *; 7 * All rights reserved. *; 8 * *; 9 * For the licensing terms see $ROOTSYS/LICENSE. *; 10 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 11 *************************************************************************/; 12 ; 13#ifndef ROOT_TTreeReaderValue; 14#define ROOT_TTreeReaderValue; 15 ; 16////////////////////////////////////////////////////////////////////////////; 17// //; 18// TTreeReaderValue //; 19// //; 20// A simple interface for reading data from trees or chains. //; 21// //; 22// //; 23////////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TString.h""; 26#include ""TDictionary.h""; 27#include ""TBranchProxy.h""; 28 ; 29#include <type_traits>; 30#include <vector>; 31#include <string>; 32 ; 33class TBranch;; 34class TBranchElement;; 35class TLeaf;; 36class TTreeReader;; 37 ; 38namespace ROOT {; 39namespace Internal {; 40 ; 41/** \class TTreeReaderValueBase; 42Base class of TTreeReaderValue.; 43*/; 44 ; 45 class TTreeReaderValueBase {; 46 public:; 47 ; 48 /// Status flags, 0 is good; 49 enum ESetupStatus {; 50 kSetupNotSetup = -7, ///< No initialization has happened yet.; 51 kSetupTreeDestructed = -8, ///< The TTreeReader has been destructed / not set.; 52 kSetupMakeClassModeMismatch = -9, ///< readers disagree on whether TTree::SetMakeBranch() should be on; 53 kSetupMissingCounterBranch = -6, ///< The array cannot find its counter branch: Array[CounterBranch]; 54 kSetupMissingBranch = -5, ///< The specified branch cannot be found.; 55 kSetupInternalError = -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeReaderValue_8h_source.html:103,Load,Loading,103,doc/master/TTreeReaderValue_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreeReaderValue_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/treeplayer/src/TTreePerfStats.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreePerfStats.cxx. Go to the documentation of this file. 1// @(#)root/treeplayer:$Id$; 2// Author: Rene Brun 29/10/09; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TTreePerfStats; 13 ; 14TTree I/O performance measurement. see example of use below.; 15 ; 16The function FileReadEvent is called from TFile::ReadBuffer.; 17For each call the following information is stored in fGraphIO; 18 - x[i] = Tree entry number; 19 - y[i] = 1e-6*(file position); 20 - ey[i] = 1e-9*number of bytes read; 21For each call the following information is stored in fGraphTime; 22 - x[i] = Tree entry number; 23 - y[i] = Time now; 24 - ey[i] = readtime, eg timenow - start; 25The TTreePerfStats object can be saved in a ROOT file in such a way that; 26its inspection can be done outside the job that generated it.; 27 ; 28Example of use:; 29~~~{.cpp}; 30{; 31 TFile *f = TFile::Open(""RelValMinBias-GEN-SIM-RECO.root"");; 32 T = (TTree*)f->Get(""Events"");; 33 Long64_t nentries = T->GetEntries();; 34 T->SetCacheSize(10000000);; 35 T->SetCacheEntryRange(0,nentries);; 36 T->AddBranchToCache(""*"");; 37//; 38 TTreePerfStats *ps= new TTreePerfStats(""ioperf"",T);; 39//; 40 for (Int_t i=0;i<nentries;i++) {; 41 T->GetEntry(i);; 42 }; 43 ps->SaveAs(""cmsperf.root"");; 44}; 45~~~; 46then, in a root interactive session, one can do:; 47~~~{.cpp}; 48 root > TFile f(""cmsperf.root"");; 49 root > ioperf->Draw();; 50 root > ioperf->Print();; 51~~~; 52The Draw or Print functions print the following information:; 53 - TreeCache = TTree cache size in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreePerfStats_8cxx_source.html:103,Load,Loading,103,doc/master/TTreePerfStats_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreePerfStats_8cxx_source.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: tree/treeplayer/src/TTreePlayer.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions |; Variables ; TTreePlayer.cxx File Reference. #include ""TTreePlayer.h""; #include <cstring>; #include <cstdio>; #include <cstdlib>; #include <iostream>; #include <fstream>; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TSystem.h""; #include ""TFile.h""; #include ""TEnv.h""; #include ""TEventList.h""; #include ""TEntryList.h""; #include ""TBranchObject.h""; #include ""TBranchElement.h""; #include ""TStreamerInfo.h""; #include ""TStreamerElement.h""; #include ""TLeafObject.h""; #include ""TLeafF.h""; #include ""TLeafD.h""; #include ""TLeafC.h""; #include ""TLeafB.h""; #include ""TLeafI.h""; #include ""TLeafS.h""; #include ""TMath.h""; #include ""TH1.h""; #include ""TPolyMarker.h""; #include ""TPolyMarker3D.h""; #include ""TText.h""; #include ""TDirectory.h""; #include ""TClonesArray.h""; #include ""TClass.h""; #include ""TVirtualPad.h""; #include ""TProfile.h""; #include ""TProfile2D.h""; #include ""TTreeFormula.h""; #include ""TTreeFormulaManager.h""; #include ""TStyle.h""; #include ""Foption.h""; #include ""TTreeResult.h""; #include ""TTreeRow.h""; #include ""TPrincipal.h""; #include ""TChain.h""; #include ""TChainElement.h""; #include ""TF1.h""; #include ""TVirtualFitter.h""; #include ""THLimitsFinder.h""; #include ""TSelectorDraw.h""; #include ""TSelectorEntries.h""; #include ""TPluginManager.h""; #include ""TObjString.h""; #include ""TTreeProxyGenerator.h""; #include ""TTreeReaderGenerator.h""; #include ""TTreeIndex.h""; #include ""TChainIndex.h""; #include ""TRefProxy.h""; #include ""TRefArrayProxy.h""; #include ""TVirtualMonitoring.h""; #include ""TTreeCache.h""; #include ""TVirtualMutex.h""; #include ""ThreadLocalStorage.h""; #include ""strlcpy.h""; #include ""snprintf.h""; #include ""HFitInterface.h""; #include ""Fit/BinData.h""; #include ""Fit/UnBinData.h""; #include ""Math/MinimizerOptions.h"". Include dependency graph for TTreePlayer.cxx:. This browser is not able to show SVG: try Firefox, Chrome, S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreePlayer_8cxx.html:103,Load,Loading,103,doc/master/TTreePlayer_8cxx.html,https://root.cern,https://root.cern/doc/master/TTreePlayer_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/treeplayer/src/TTreeProxyGenerator.cxx File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Functions ; TTreeProxyGenerator.cxx File Reference. #include ""TTreeProxyGenerator.h""; #include ""TFriendProxyDescriptor.h""; #include ""TBranchProxyDescriptor.h""; #include ""TBranchProxyClassDescriptor.h""; #include ""TList.h""; #include ""Varargs.h""; #include <cstdio>; #include ""TClass.h""; #include ""TClassEdit.h""; #include ""TClonesArray.h""; #include ""TError.h""; #include ""TROOT.h""; #include ""TObjString.h""; #include ""TTreeFormula.h""; #include ""TFormLeafInfo.h""; #include ""TBranchElement.h""; #include ""TChain.h""; #include ""TFile.h""; #include ""TFriendElement.h""; #include ""TLeaf.h""; #include ""TLeafC.h""; #include ""TTree.h""; #include ""TVirtualStreamerInfo.h""; #include ""TStreamerElement.h""; #include ""TSystem.h""; #include ""TLeafObject.h""; #include ""TVirtualCollectionProxy.h"". Include dependency graph for TTreeProxyGenerator.cxx:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Functions; void Debug (Int_t level, const char *fmt,...);  ; TString ROOT::Internal::GetArrayType (TStreamerElement *element, const char *subtype, TTreeProxyGenerator::EContainer container);  ; static bool ROOT::Internal::R__AddPragmaForClass (TTreeProxyGenerator *gen, const char *classname);  Add the ""pragma C++ class"" if needed and return true if it has been added or if it is known to not be needed. ;  ; static bool ROOT::Internal::R__AddPragmaForClass (TTreeProxyGenerator *gen, TClass *cl);  Add the ""pragma C++ class"" if needed and return true if it has been added or if it is known to not be needed. ;  . Function Documentation. ◆ Debug(). void Debug ; (; Int_t ; level, . const char * ; fmt, .  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeProxyGenerator_8cxx.html:111,Load,Loading,111,doc/master/TTreeProxyGenerator_8cxx.html,https://root.cern,https://root.cern/doc/master/TTreeProxyGenerator_8cxx.html,1,['Load'],['Loading']
Performance,". ROOT: tree/treeplayer/src/TTreeProxyGenerator.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeProxyGenerator.cxx. Go to the documentation of this file. 1// @(#)root/treeplayer:$Id$; 2// Author: Philippe Canal 06/06/2004; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/*; 13 TODO:; 14 Have separate names for the wrapper classes in the cases of: [done]; 15 clones/non clones; 16 split/non split; 17 split levels; 18 ; 19 Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]; 20 ; 21 Have a solution for the return by references of abstract classes [not done]; 22 ; 23 Have object inside ClonesArray properly treated! [done]; 24 Why is there 2 TRef proxy classes? [done]; 25 ; 26 check why some inheritance are TObjProxy and not TPx_; 27 ; 28 Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!; 29 ; 30 When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(; 31 ; 32 CINT does not properly call the custom operators when doing return fNtrack.; 33 ; 34 CINT does not handle fMatrix[2][1] well.; 35 ; 36 The user's function in script.h are not exposed by ACLiC.; 37 ; 38 Review the method to avoid the useless refreshing of the generated file; 39 - for most efficiency it would require a different name for each tree; 40*/; 41 ; 42#include ""TTreeProxyGenerator.h""; 43 ; 44#include ""TFriendProxyDescriptor.h""; 45#include ""TBranchProxyDescriptor.h""; 46#include ""TBranchProxyClassDescriptor.h""; 47 ; 48#include ""TList.h""; 49#include ""Varargs.h""; 50#include <cstdio>; 51 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeProxyGenerator_8cxx_source.html:108,Load,Loading,108,doc/master/TTreeProxyGenerator_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreeProxyGenerator_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/treeviewer/inc/TTreeViewer.h Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeViewer.h. Go to the documentation of this file. 1// @(#)root/treeviewer:$Id$; 2//Author : Andrei Gheata 16/08/00; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TTreeViewer; 13#define ROOT_TTreeViewer; 14 ; 15////////////////////////////////////////////////////; 16// //; 17// TTreeViewer - A GUI oriented tree viewer //; 18// //; 19////////////////////////////////////////////////////; 20 ; 21#include ""TGFrame.h""; 22 ; 23#include ""TTree.h""; 24 ; 25class TTVLVContainer;; 26class TTVLVEntry;; 27class TTVSession;; 28class TGSelectBox;; 29class TBranch;; 30class TContextMenu;; 31class TList;; 32class TGPicture;; 33class TTimer;; 34class TGLayoutHints;; 35class TGMenuBar;; 36class TGPopupMenu;; 37class TGToolBar;; 38class TGLabel;; 39class TGCheckButton;; 40class TGComboBox;; 41class TGTextButton;; 42class TGTextEntry;; 43class TGDoubleVSlider;; 44class TGPictureButton;; 45class TGStatusBar;; 46class TGCanvas;; 47class TGListTree;; 48class TGListTreeItem;; 49class TGListView;; 50class TGHProgressBar;; 51class TGButton;; 52 ; 53 ; 54class TTreeViewer : public TGMainFrame {; 55 ; 56friend class TGClient;; 57friend class TGButton;; 58 ; 59public:; 60 /// Item types used as user data; 61 enum EListItemType {; 62 kLTNoType = 0,; 63 kLTPackType = BIT(0),; 64 kLTTreeType = BIT(1),; 65 kLTBranchType = BIT(2),; 66 kLTLeafType = BIT(3),; 67 kLTActionType = BIT(4),; 68 kLTDragType = BIT(5),; 69 kLTExpressionType = BIT(6),; 70 kLTCutType = BIT(7); 71 };; 72 ; 73private:; 74 ; 75///@{; 76 TTree *fTree; ///",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8h_source.html:98,Load,Loading,98,doc/master/TTreeViewer_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8h_source.html,1,['Load'],['Loading']
Performance,". ROOT: tree/treeviewer/src/TTreeViewer.cxx Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeViewer.cxx. Go to the documentation of this file. 1// @(#)root/treeviewer:$Id: c8e226dde2f9b6f39946bfe90cabcb778d63dc4f $; 2//Author : Andrei Gheata 16/08/00; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class TTreeViewer; 13A graphic user interface designed to handle ROOT trees and to take advantage of; 14TTree class features.; 15 ; 16It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; 17in the same session.; 18 ; 19### The following capabilities are making the viewer a helpful tool for analysis:; 20 ; 21 - several trees may be opened in the same session;; 22 - branches and leaves can be easily browsed or scanned;; 23 - fast drawing of branch expressions by double-clicking;; 24 - new variables/selections easy to compose with the built-in editor;; 25 - histograms can be composed by dragging leaves or user-defined expressions; 26 to X, Y and Z axis items;; 27 - the tree entries to be processed can be selected with a double slider;; 28 - selections can be defined and activated by dragging them to the 'Cut' item;; 29 - all expressions can be aliased and aliases can be used in composing others;; 30 - input/output event lists easy to handle;; 31 - menu with histogram drawing options;; 32 - user commands may be executed within the viewer and the current command; 33 can be echoed;; 34 - current 'Draw' event loop is reflected by a progress bar and may be; 35 interrupted by the user;; 36 - all widgets have self-explaining tool tips and/or context menus;; 37 - expressions/leav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8cxx_source.html:100,Load,Loading,100,doc/master/TTreeViewer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8cxx_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tutorials Directory Reference. Directory dependency graph for tutorials:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Directories;  cocoa;  ;  cont;  ;  dataframe;  ;  eve;  ;  eve7;  ;  fft;  ;  fit;  ;  fitsio;  ;  foam;  ;  geom;  ;  gl;  ;  graphics;  ;  graphs;  ;  gui;  ;  hist;  ;  histfactory;  ;  http;  ;  image;  ;  io;  ;  legacy;  ;  math;  ;  matrix;  ;  mc;  ;  multicore;  ;  net;  ;  physics;  ;  proof;  ;  pyroot;  ;  pythia;  ;  quadp;  ;  r;  ;  rcanvas;  ;  roofit;  ;  roostats;  ;  spectrum;  ;  splot;  ;  sql;  ;  tmva;  ;  tree;  ;  unfold;  ;  unuran;  ;  v7;  ;  vecops;  ;  webcanv;  ;  webgui;  ;  xml;  . Files;  .enableImplicitMTWrapper.py;  ;  .rootlogon.py;  ;  demos.C;  This macro shows a control bar to run some of the ROOT tutorials. ;  ;  demoshelp.C;  This macro shows help on running the Demos. ;  ;  hsimple.C;   This program creates : ;  ;  rootlogoff.C;  Example of rootlogoff.C. ;  ;  rootlogon.C;  Example of rootlogon.C. ;  . tutorials. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_d7ff98e99d8733492dd662d455f89a38.html:82,Load,Loading,82,doc/master/dir_d7ff98e99d8733492dd662d455f89a38.html,https://root.cern,https://root.cern/doc/master/dir_d7ff98e99d8733492dd662d455f89a38.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. dataframe Directory Reference. Directory dependency graph for dataframe:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Files;  df000_simple.C;   Simple RDataFrame example in C++. ;  ;  df000_simple.py;   Simple RDataFrame example in Python. ;  ;  df001_introduction.C;   Basic RDataFrame usage. ;  ;  df001_introduction.py;   Basic usage of RDataFrame from python. ;  ;  df002_dataModel.C;   Show how to work with non-flat data models, e.g. ;  ;  df002_dataModel.py;   Show how to work with non-flat data models, e.g. ;  ;  df003_profiles.C;   Use TProfiles with RDataFrame. ;  ;  df003_profiles.py;   Use TProfiles with RDataFrame. ;  ;  df004_cutFlowReport.C;   Display cut/Filter efficiencies with RDataFrame. ;  ;  df004_cutFlowReport.py;   Display cut/Filter efficiencies with RDataFrame. ;  ;  df005_fillAnyObject.C;   Using the generic Fill action. ;  ;  df006_ranges.C;   Use Range to limit the amount of data processed. ;  ;  df006_ranges.py;   Use Range to limit the amount of data processed. ;  ;  df007_snapshot.C;   Write ROOT data with RDataFrame. ;  ;  df007_snapshot.py;   Write ROOT data with RDataFrame. ;  ;  df008_createDataSetFromScratch.C;   Create data from scratch with RDataFrame. ;  ;  df008_createDataSetFromScratch.py;   Create data from scratch with RDataFrame. ;  ;  df009_FromScratchVSTTree.C;   Compare creation of a ROOT dataset with RDataFrame and TTree. ;  ;  df010_trivialDataSource.C;   Use the ""trivial data source"", an example data source implementation. ;  ;  df010_trivialDataSource.py;   Use the ""trivial data source"", an example data source implementation. ;  ;  df012_DefinesAndFiltersAsStrings.C;   Use just-in-time-compiled Filters and Defines for quick prototyping. ;  ;  df012_DefinesAndFiltersAsStrings.py;   Use just-in-time-compiled Filters and Defines for quick prototyping. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_a1b0d055c02f6056ea201bfa3ee242a7.html:92,Load,Loading,92,doc/master/dir_a1b0d055c02f6056ea201bfa3ee242a7.html,https://root.cern,https://root.cern/doc/master/dir_a1b0d055c02f6056ea201bfa3ee242a7.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df000_simple.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df000_simple.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Simple RDataFrame example in C++. ; This tutorial shows a minimal example of RDataFrame. It starts without input data, generates a new column x with random numbers, and finally draws a histogram for x.; ; void df000_simple(); {; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);; ; // Define a new column `x` that contains random numbers; auto rdf_x = rdf.Define(""x"", [](){ return gRandom->Rndm(); });; ; // Create a histogram from `x`; auto h = rdf_x.Histo1D(""x"");; ; // At the end of this function, the histogram pointed to by `h` will be deleted.; // Draw a copy of the histogram object instead:; h->DrawClone();; }; h#define h(i)Definition RSha256.hxx:106; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TRandom::RndmDouble_t Rndm() overrideMachine independent random number generator.Definition TRandom.cxx:559; df000_simpleDefinition df000_simple.py:1; ; DateSeptember 2021 ; AuthorEnric Tejedor (CERN) ; Definition in file df000_simple.C. tutorialsdataframedf000_simple.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df000__simple_8C.html:102,Load,Loading,102,doc/master/df000__simple_8C.html,https://root.cern,https://root.cern/doc/master/df000__simple_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df000_simple.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df000_simple.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Simple RDataFrame example in Python. ; This tutorial shows a minimal example of RDataFrame. It starts without input data, generates a new column x with random numbers, and finally draws a histogram for x.; ; import ROOT; ; # Create a data frame with 100 rows; rdf = ROOT.RDataFrame(100); ; # Define a new column `x` that contains random numbers; rdf_x = rdf.Define(""x"", ""gRandom->Rndm()""); ; # Create a histogram from `x` and draw it; h = rdf_x.Histo1D(""x""); h.Draw(); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; DateSeptember 2021 ; AuthorEnric Tejedor (CERN) ; Definition in file df000_simple.py. tutorialsdataframedf000_simple.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df000__simple_8py.html:103,Load,Loading,103,doc/master/df000__simple_8py.html,https://root.cern,https://root.cern/doc/master/df000__simple_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df001_introduction.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df001_introduction.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Basic RDataFrame usage. ; This tutorial illustrates the basic features of the RDataFrame class, a utility which allows to interact with data stored in TTrees following a functional-chain like approach.; ; // ## Preparation; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(10);; d.Define(""b1"", [](ULong64_t entry) -> double { return entry; }, {""rdfentry_""}); .Define(""b2"", [](ULong64_t entry) -> int { return entry * entry; }, {""rdfentry_""}); .Snapshot(treeName, fileName);; }; ; int df001_introduction(); {; ; // We prepare an input tree to run on; auto fileName = ""df001_introduction.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame, a class that; // allows us to interact with the data contained in the tree.; // We select a default column, a *branch* to adopt ROOT jargon, which will; // be looked at if none is specified by the user when dealing with filters; // and actions.; ROOT::RDataFrame d(treeName, fileName, {""b1""});; ; // ## Operations on the dataframe; // We now review some *actions* which can be performed on the data frame.; // Actions can be divided into instant actions (e. g. Foreach()) and lazy; // actions (e. g. Count()), depending on whether they trigger the event; // loop immediately or only when one of the results is accessed for the; // first time. Actions that return ""something"" either return their result; // wrapped in a RResultPtr or in a RDataFrame.; // But first of all, let us define our cut-flow with two lambda; // functions. We can use free functions too.; auto cutb1 = [](double b1) { return b1 < 5.; };; auto cutb1b2 = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df001__introduction_8C.html:108,Load,Loading,108,doc/master/df001__introduction_8C.html,https://root.cern,https://root.cern/doc/master/df001__introduction_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df001_introduction.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df001_introduction.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Basic usage of RDataFrame from python. ; This tutorial illustrates the basic features of the RDataFrame class, a utility which allows to interact with data stored in TTrees following a functional-chain like approach.; ; import ROOT; ; def fill_tree(treeName, fileName):; """"""A simple helper function to fill a test tree: this makes the example stand-alone.""""""; df = ROOT.RDataFrame(10); df.Define(""b1"", ""static_cast<double>(rdfentry_)"")\; .Define(""b2"", ""static_cast<int>(rdfentry_ * rdfentry_)"").Snapshot(treeName, fileName); ; # We prepare an input tree to run on; fileName = ""df001_introduction_py.root""; treeName = ""myTree""; fill_tree(treeName, fileName); ; ; # We read the tree from the file and create a RDataFrame, a class that; # allows us to interact with the data contained in the tree.; d = ROOT.RDataFrame(treeName, fileName); ; # Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.; cutb1 = 'b1 < 5.'; cutb1b2 = 'b2 % 2 && b1 < 4.'; ; # `Count` action; # The `Count` allows to retrieve the number of the entries that passed the; # filters. Here we show how the automatic selection of the column kicks; #",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df001__introduction_8py.html:109,Load,Loading,109,doc/master/df001__introduction_8py.html,https://root.cern,https://root.cern/doc/master/df001__introduction_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df002_dataModel.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df002_dataModel.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how to work with non-flat data models, e.g. ; vectors of tracks.; This tutorial shows the possibility to use data models which are more complex than flat ntuples with RDataFrame.; ; using FourVector = ROOT::Math::XYZTVector;; using FourVectorVec = std::vector<FourVector>;; using FourVectorRVec = ROOT::VecOps::RVec<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *filename, const char *treeName); {; const double M = 0.13957; // set pi+ mass; TRandom3 R(1);; ; auto genTracks = [&](){; FourVectorVec tracks;; const auto nPart = R.Poisson(15);; tracks.reserve(nPart);; for (int j = 0; j < nPart; ++j) {; const auto px = R.Gaus(0, 10);; const auto py = R.Gaus(0, 10);; const auto pt = sqrt(px * px + py * py);; const auto eta = R.Uniform(-3, 3);; const auto phi = R.Uniform(0.0, 2 * TMath::Pi());; CylFourVector vcyl(pt, eta, phi);; // set energy; auto E = sqrt(vcyl.R() * vcyl.R() + M * M);; // fill track vector; tracks.emplace_back(vcyl.X(), vcyl.Y(), vcyl.Z(), E);; }; return tracks;; };; ; ROOT::RDataFrame d(64);; d.Define(""tracks"", genTracks).Snapshot<FourVectorVec>(treeName, filename, {""tracks""});; }; ; int df002_dataModel(); {; ; // We prepare an input tree to run on; auto fileName = ""df002_dataModel.root"";; auto treeName = ""myTree"";; fill_tree(fileName, treeName);; ; // We read the tree from the file and create a RDataFrame, a class that; // allows us to interact with the data contained in the tree.; ROOT::RDataFrame d(treeName, fileName, {""tracks""});; ; // ## Operating on branches which are collections of objects; // Here we deal with the simplest of the cuts: we decide to accept the event; // only if the num",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df002__dataModel_8C.html:105,Load,Loading,105,doc/master/df002__dataModel_8C.html,https://root.cern,https://root.cern/doc/master/df002__dataModel_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df002_dataModel.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df002_dataModel.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how to work with non-flat data models, e.g. ; vectors of tracks.; This tutorial shows the possibility to use data models which are more complex than flat ntuples with RDataFrame.; ; import ROOT; ; # A simple helper function to fill a test tree: this makes the example stand-alone.; fill_tree_code = '''; using FourVector = ROOT::Math::XYZTVector;; using FourVectorVec = std::vector<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *filename, const char *treeName); {; const double M = 0.13957; // set pi+ mass; TRandom3 R(1);; ; auto genTracks = [&](){; FourVectorVec tracks;; const auto nPart = R.Poisson(15);; tracks.reserve(nPart);; for (int j = 0; j < nPart; ++j) {; const auto px = R.Gaus(0, 10);; const auto py = R.Gaus(0, 10);; const auto pt = sqrt(px * px + py * py);; const auto eta = R.Uniform(-3, 3);; const auto phi = R.Uniform(0.0, 2 * TMath::Pi());; CylFourVector vcyl(pt, eta, phi);; // set energy; auto E = sqrt(vcyl.R() * vcyl.R() + M * M);; // fill track vector; tracks.emplace_back(vcyl.X(), vcyl.Y(), vcyl.Z(), E);; }; return tracks;; };; ; ROOT::RDataFrame d(64);; d.Define(""tracks"", genTracks).Snapshot<FourVectorVec>(treeName, filename, {""tracks""});; }; '''; ; # We prepare an input tree to run on; fileName = ""df002_dataModel_py.root""; treeName = ""myTree""; ROOT.gInterpreter.Declare(fill_tree_code); ROOT.fill_tree(fileName, treeName); ; # We read the tree from the file and create a RDataFrame, a class that; # allows us to interact with the data contained in the tree.; d = ROOT.RDataFrame(treeName, fileName); ; # Operating on branches which are collections of objects; # Here we deal with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df002__dataModel_8py.html:106,Load,Loading,106,doc/master/df002__dataModel_8py.html,https://root.cern,https://root.cern/doc/master/df002__dataModel_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df003_profiles.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df003_profiles.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use TProfiles with RDataFrame. ; This tutorial illustrates how to use TProfiles in combination with the RDataFrame. See the documentation of TProfile and TProfile2D to better understand the analogy of this code with the example one. ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(25000);; d.Define(""px"", []() { return gRandom->Gaus(); }); .Define(""py"", []() { return gRandom->Gaus(); }); .Define(""pz"", [](double px, double py) { return sqrt(px * px + py * py); }, {""px"", ""py""}); .Snapshot(treeName, fileName);; }; ; void df003_profiles(); {; // We prepare an input tree to run on; auto fileName = ""df003_profiles.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame.; ROOT::RDataFrame d(treeName, fileName);; ; // Create the profiles; auto hprof1d = d.Profile1D({""hprof1d"", ""Profile of py versus px"", 64, -4, 4}, ""px"", ""py"");; auto hprof2d =; d.Profile2D({""hprof2d"", ""Profile of pz versus px and py"", 40, -4, 4, 40, -4, 4, 0, 20}, ""px"", ""py"", ""pz"");; ; // And Draw; auto c1 = new TCanvas(""c1"", ""Profile histogram example"", 200, 10, 700, 500);; hprof1d->DrawClone();; auto c2 = new TCanvas(""c2"", ""Profile2D histogram example"", 200, 10, 700, 500);; hprof2d->DrawClone(""BOX"");; }; d#define d(i)Definition RSha256.hxx:102; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df003__profiles_8C.html:104,Load,Loading,104,doc/master/df003__profiles_8C.html,https://root.cern,https://root.cern/doc/master/df003__profiles_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df003_profiles.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df003_profiles.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use TProfiles with RDataFrame. ; This tutorial illustrates how to use TProfiles in combination with the RDataFrame. See the documentation of TProfile and TProfile2D to better understand the analogy of this code with the example one.; ; import ROOT; ; # A simple helper function to fill a test tree: this makes the example; # stand-alone.; def fill_tree(treeName, fileName):; d = ROOT.RDataFrame(25000); d.Define(""px"", ""gRandom->Gaus()"")\; .Define(""py"", ""gRandom->Gaus()"")\; .Define(""pz"", ""sqrt(px * px + py * py)"")\; .Snapshot(treeName, fileName); ; # We prepare an input tree to run on; fileName = ""df003_profiles_py.root""; treeName = ""myTree""; fill_tree(treeName, fileName); ; # We read the tree from the file and create a RDataFrame.; d = ROOT.RDataFrame(treeName, fileName); ; # Create the profiles; hprof1d = d.Profile1D((""hprof1d"", ""Profile of pz versus px"", 64, -4, 4), ""px"", ""py""); hprof2d = d.Profile2D((""hprof2d"", ""Profile of pz versus px and py"", 40, -4, 4, 40, -4, 4, 0, 20), ""px"", ""py"", ""pz""); ; # And Draw; c1 = ROOT.TCanvas(""c1"", ""Profile histogram example"", 200, 10, 700, 500); hprof1d.Draw(); c1.SaveAs(""df003_c1.png""); ; c2 = ROOT.TCanvas(""c2"", ""Profile2D histogram example"", 200, 10, 700, 500); hprof2d.Draw(); c2.SaveAs(""df003_c2.png""); ; print(""Saved figures to df003_*.png""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; . DateFebruary 2017 ; AuthorDanilo Piparo (CERN) ; Definition in file df003_profiles.py. tutorialsdataframedf003_profiles.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df003__profiles_8py.html:105,Load,Loading,105,doc/master/df003__profiles_8py.html,https://root.cern,https://root.cern/doc/master/df003__profiles_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df004_cutFlowReport.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df004_cutFlowReport.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Display cut/Filter efficiencies with RDataFrame. ; This tutorial shows how to get information about the efficiency of the filters applied; ; using FourVector = ROOT::Math::XYZTVector;; using FourVectors = std::vector<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(50);; int i(0);; d.Define(""b1"", [&i]() { return (double)i; }); .Define(""b2"",; [&i]() {; auto j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; void df004_cutFlowReport(); {; ; // We prepare an input tree to run on; auto fileName = ""df004_cutFlowReport.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame; ROOT::RDataFrame d(treeName, fileName, {""b1"", ""b2""});; ; // ## Define cuts and create the report; // Here we define two simple cuts; auto cut1 = [](double b1) { return b1 > 25.; };; auto cut2 = [](int b2) { return 0 == b2 % 2; };; ; // An optional string parameter name can be passed to the Filter method to create a named filter.; // Named filters work as usual, but also keep track of how many entries they accept and reject.; auto filtered1 = d.Filter(cut1, {""b1""}, ""Cut1"");; auto filtered2 = d.Filter(cut2, {""b2""}, ""Cut2"");; ; auto augmented1 = filtered2.Define(""b3"", [](double b1, int b2) { return b1 / b2; });; auto cut3 = [](double x) { return x < .5; };; auto filtered3 = augmented1.Filter(cut3, {""b3""}, ""Cut3"");; ; // Statistics are retrieved through a call to the Report method:; // when Report is called on the main RDataFrame object, it retrieves stats; // for all named filters declared up to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df004__cutFlowReport_8C.html:109,Load,Loading,109,doc/master/df004__cutFlowReport_8C.html,https://root.cern,https://root.cern/doc/master/df004__cutFlowReport_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df004_cutFlowReport.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df004_cutFlowReport.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Display cut/Filter efficiencies with RDataFrame. ; This tutorial shows how to get information about the efficiency of the filters applied; ; import ROOT; ; def fill_tree(treeName, fileName):; df = ROOT.RDataFrame(50); df.Define(""b1"", ""(double) rdfentry_"")\; .Define(""b2"", ""(int) rdfentry_ * rdfentry_"").Snapshot(treeName, fileName); ; # We prepare an input tree to run on; fileName = 'df004_cutFlowReport_py.root'; treeName = 'myTree'; fill_tree(treeName, fileName); ; # We read the tree from the file and create a RDataFrame, a class that; # allows us to interact with the data contained in the tree.; d = ROOT.RDataFrame(treeName, fileName); ; # ## Define cuts and create the report; # An optional string parameter name can be passed to the Filter method to create a named filter.; # Named filters work as usual, but also keep track of how many entries they accept and reject.; filtered1 = d.Filter('b1 > 25', 'Cut1'); filtered2 = d.Filter('0 == b2 % 2', 'Cut2'); ; augmented1 = filtered2.Define('b3', 'b1 / b2'); filtered3 = augmented1.Filter('b3 < .5','Cut3'); ; # Statistics are retrieved through a call to the Report method:; # when Report is called on the main RDataFrame object, it retrieves stats for; # all named filters declared up to that point. When called on a stored chain; # state (i.e. a chain/graph node), it retrieves stats for all named filters in; # the section of the chain between the main RDataFrame and that node (included).; # Stats are printed in the same order as named filters that have been added to the; # graph, and refer to the latest event-loop that has been running using the relevant; # RDataFrame.; print('Cut3 stats:'); filtered3.Report(); print('All stats:'); allCutsReport = d.Report(); allCutsReport.Print()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df004__cutFlowReport_8py.html:110,Load,Loading,110,doc/master/df004__cutFlowReport_8py.html,https://root.cern,https://root.cern/doc/master/df004__cutFlowReport_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df005_fillAnyObject.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df005_fillAnyObject.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Using the generic Fill action. ; This tutorial shows how to fill any object the class of which exposes a Fill method.; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(100);; auto i = 0.;; d.Define(""b1"", [&i]() { return i; }); .Define(""b2"",; [&i]() {; float j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; int df005_fillAnyObject(); {; ; // We prepare an input tree to run on; auto fileName = ""df005_fillAnyObject.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame.; ROOT::RDataFrame d(treeName, fileName);; ; // ## Filling any object; // We now fill some objects which are instances of classes which expose a; // `Fill` method with some input arguments.; auto th1d = d.Fill<double>(TH1D(""th1d"", ""th1d"", 64, 0, 128), {""b1""});; auto th1i = d.Fill<float>(TH1I(""th1i"", ""th1i"", 64, 0, 128), {""b2""});; auto th2d = d.Fill<double, float>(TH2D(""th2d"", ""th2d"", 64, 0, 128, 64, 0, 1024), {""b1"", ""b2""});; ; auto c1 = new TCanvas();; th1d->DrawClone();; ; auto c2 = new TCanvas();; th1i->DrawClone();; ; auto c3 = new TCanvas();; th2d->DrawClone(""COLZ"");; ; return 0;; }; d#define d(i)Definition RSha256.hxx:102; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1I1-D histogram with an int per channel (see TH1 documentation)Definition TH1.h:540; TH2D2-D histogram with a double per channel (see TH1 documentation)Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df005__fillAnyObject_8C.html:109,Load,Loading,109,doc/master/df005__fillAnyObject_8C.html,https://root.cern,https://root.cern/doc/master/df005__fillAnyObject_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df006_ranges.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df006_ranges.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use Range to limit the amount of data processed. ; This tutorial shows how to express the concept of ranges when working with the RDataFrame.; ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(100);; int i(0);; d.Define(""b1"", [&i]() { return i; }); .Define(""b2"",; [&i]() {; float j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; int df006_ranges(); {; ; // We prepare an input tree to run on; auto fileName = ""df006_ranges.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame.; ROOT::RDataFrame d(treeName, fileName);; ; // ## Usage of ranges; // Now we'll count some entries using ranges; auto c_all = d.Count();; ; // This is how you can express a range of the first 30 entries; auto d_0_30 = d.Range(30);; auto c_0_30 = d_0_30.Count();; ; // This is how you pick all entries from 15 onwards; auto d_15_end = d.Range(15, 0);; auto c_15_end = d_15_end.Count();; ; // We can use a stride too, in this case we pick an event every 3 entries; auto d_15_end_3 = d.Range(15, 0, 3);; auto c_15_end_3 = d_15_end_3.Count();; ; // The Range here acts first on the (whole) RDataFrame graph:; // Not only actions (like Count) but also filters and new columns can be added to it.; auto d_0_50 = d.Range(50);; auto c_0_50_odd_b1 = d_0_50.Filter(""1 == b1 % 2"").Count();; ; // An important thing to notice is that the counts of a filter are relative to the; // number of entries a filter ""sees"". Therefore, if a Range depends on a filter,; // the Range will act on the entries passing the filter only.; auto c_0_3_after_even_b1 = d.Filter(""0 == b1 % 2"").Range(0, 3).Count()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df006__ranges_8C.html:102,Load,Loading,102,doc/master/df006__ranges_8C.html,https://root.cern,https://root.cern/doc/master/df006__ranges_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df006_ranges.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df006_ranges.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use Range to limit the amount of data processed. ; This tutorial shows how to express the concept of ranges when working with the RDataFrame.; ; import ROOT; ; def fill_tree(treeName, fileName):; df = ROOT.RDataFrame(100); df.Define(""b1"", ""(int) rdfentry_"")\; .Define(""b2"", ""(float) rdfentry_ * rdfentry_"").Snapshot(treeName, fileName); ; ; # We prepare an input tree to run on; fileName = ""df006_ranges_py.root""; treeName = ""myTree""; ; fill_tree(treeName, fileName); ; # We read the tree from the file and create a RDataFrame.; d = ROOT.RDataFrame(treeName, fileName); ; # ## Usage of ranges; # Now we'll count some entries using ranges; c_all = d.Count(); ; # This is how you can express a range of the first 30 entries; d_0_30 = d.Range(30) ; c_0_30 = d_0_30.Count(); ; # This is how you pick all entries from 15 onwards; d_15_end = d.Range(15, 0); c_15_end = d_15_end.Count(); ; # We can use a stride too, in this case we pick an event every 3 entries; d_15_end_3 = d.Range(15, 0, 3); c_15_end_3 = d_15_end_3.Count(); ; # The Range here acts first on the (whole) RDataFrame graph:; # Not only actions (like Count) but also filters and new columns can be added to it.; d_0_50 = d.Range(50); c_0_50_odd_b1 = d_0_50.Filter(""1 == b1 % 2"").Count(); ; # An important thing to notice is that the counts of a filter are relative to the; # number of entries a filter ""sees"". Therefore, if a Range depends on a filter,; # the Range will act on the entries passing the filter only.; c_0_3_after_even_b1 = d.Filter(""0 == b1 % 2"").Range(0, 3).Count(); ; # Ok, time to wrap up: let's print all counts!; print(""Usage of ranges:""); print("" - All entries:"", c_all.GetValue()); print("" - Entries from 0 to 30:"", c_0_30.GetValue()); print("" - Entries from 15 onwards:"", c_15_en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df006__ranges_8py.html:103,Load,Loading,103,doc/master/df006__ranges_8py.html,https://root.cern,https://root.cern/doc/master/df006__ranges_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df007_snapshot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df007_snapshot.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Write ROOT data with RDataFrame. ; This tutorial shows how to write out datasets in ROOT format using RDataFrame. ; // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *treeName, const char *fileName); {; ROOT::RDataFrame d(10000);; int i(0);; d.Define(""b1"", [&i]() { return i; }); .Define(""b2"",; [&i]() {; float j = i * i;; ++i;; return j;; }); .Snapshot(treeName, fileName);; }; ; int df007_snapshot(); {; // We prepare an input tree to run on; auto fileName = ""df007_snapshot.root"";; auto outFileName = ""df007_snapshot_output.root"";; auto outFileNameAllColumns = ""df007_snapshot_output_allColumns.root"";; auto treeName = ""myTree"";; fill_tree(treeName, fileName);; ; // We read the tree from the file and create a RDataFrame; ROOT::RDataFrame d(treeName, fileName);; ; // ## Select entries; // We now select some entries in the dataset; auto d_cut = d.Filter(""b1 % 2 == 0"");; // ## Enrich the dataset; // Build some temporary columns: we'll write them out; auto d2 = d_cut.Define(""b1_square"", ""b1 * b1""); .Define(""b2_vector"",; [](float b2) {; std::vector<float> v;; for (int i = 0; i < 3; i++); v.push_back(b2 * i);; return v;; },; {""b2""});; ; // ## Write it to disk in ROOT format; // We now write to disk a new dataset with one of the variables originally; // present in the tree and the new variables.; // The user can explicitly specify the types of the columns as template; // arguments of the Snapshot method, otherwise they will be automatically; // inferred.; d2.Snapshot(treeName, outFileName, {""b1"", ""b1_square"", ""b2_vector""});; ; // Open the new file and list the columns of the tree; TFile f1(outFileName);; auto t = f1.Get<TTree>(treeName);; std::cout << ""These are the columns b1, b1_square an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df007__snapshot_8C.html:104,Load,Loading,104,doc/master/df007__snapshot_8C.html,https://root.cern,https://root.cern/doc/master/df007__snapshot_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df007_snapshot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df007_snapshot.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Write ROOT data with RDataFrame. ; This tutorial shows how to write out datasets in ROOT format using RDataFrame. ; import ROOT; ; # A simple helper function to fill a test tree: this makes the example stand-alone.; def fill_tree(treeName, fileName):; df = ROOT.RDataFrame(10000); df.Define(""b1"", ""(int) rdfentry_"")\; .Define(""b2"", ""(float) rdfentry_ * rdfentry_"").Snapshot(treeName, fileName); ; # We prepare an input tree to run on; fileName = ""df007_snapshot_py.root""; outFileName = ""df007_snapshot_output_py.root""; outFileNameAllColumns = ""df007_snapshot_output_allColumns_py.root""; treeName = ""myTree""; fill_tree(treeName, fileName); ; # We read the tree from the file and create a RDataFrame; d = ROOT.RDataFrame(treeName, fileName); ; # ## Select entries; # We now select some entries in the dataset; d_cut = d.Filter(""b1 % 2 == 0""); # ## Enrich the dataset; # Build some temporary columns: we'll write them out; ; getVector_code ='''; std::vector<float> getVector (float b2); {; std::vector<float> v;; for (int i = 0; i < 3; i++) v.push_back(b2*i);; return v;; }; '''; ROOT.gInterpreter.Declare(getVector_code); ; d2 = d_cut.Define(""b1_square"", ""b1 * b1"") \; .Define(""b2_vector"", ""getVector( b2 )""); ; # ## Write it to disk in ROOT format; # We now write to disk a new dataset with one of the variables originally; # present in the tree and the new variables.; # The user can explicitly specify the types of the columns as template; # arguments of the Snapshot method, otherwise they will be automatically; # inferred.; d2.Snapshot(treeName, outFileName, \; [""b1"", ""b1_square"", ""b2_vector""]); # Open the new file and list the columns of the tree; f1 = ROOT.TFile(outFileName); t = f1[treeName]; print(""These are the columns b1, b1_square and b2_vecto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df007__snapshot_8py.html:105,Load,Loading,105,doc/master/df007__snapshot_8py.html,https://root.cern,https://root.cern/doc/master/df007__snapshot_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df008_createDataSetFromScratch.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df008_createDataSetFromScratch.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Create data from scratch with RDataFrame. ; This tutorial shows how to create a dataset from scratch with RDataFrame; ; void df008_createDataSetFromScratch(); {; // We create an empty data frame of 100 entries; ROOT::RDataFrame df(100);; ; // We now fill it with random numbers; gRandom->SetSeed(1);; auto df_1 = df.Define(""rnd"", []() { return gRandom->Gaus(); });; ; // And we write out the dataset on disk; df_1.Snapshot(""randomNumbers"", ""df008_createDataSetFromScratch.root"");; }; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; TRandom::SetSeedvirtual void SetSeed(ULong_t seed=0)Set the random generator seed.Definition TRandom.cxx:615; df008_createDataSetFromScratchDefinition df008_createDataSetFromScratch.py:1; DateJune 2017 ; AuthorDanilo Piparo (CERN) ; Definition in file df008_createDataSetFromScratch.C. tutorialsdataframedf008_createDataSetFromScratch.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df008__createDataSetFromScratch_8C.html:120,Load,Loading,120,doc/master/df008__createDataSetFromScratch_8C.html,https://root.cern,https://root.cern/doc/master/df008__createDataSetFromScratch_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df008_createDataSetFromScratch.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df008_createDataSetFromScratch.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Create data from scratch with RDataFrame. ; This tutorial shows how to create a dataset from scratch with RDataFrame; ; import ROOT; ; # We create an empty data frame of 100 entries; df = ROOT.RDataFrame(100); ; # We now fill it with random numbers; ROOT.gRandom.SetSeed(1); df_1 = df.Define(""rnd"", ""gRandom->Gaus()""); ; # And we write out the dataset on disk; df_1.Snapshot(""randomNumbers"", ""df008_createDataSetFromScratch_py.root""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; DateJune 2017 ; AuthorDanilo Piparo (CERN) ; Definition in file df008_createDataSetFromScratch.py. tutorialsdataframedf008_createDataSetFromScratch.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df008__createDataSetFromScratch_8py.html:121,Load,Loading,121,doc/master/df008__createDataSetFromScratch_8py.html,https://root.cern,https://root.cern/doc/master/df008__createDataSetFromScratch_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df009_FromScratchVSTTree.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df009_FromScratchVSTTree.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Compare creation of a ROOT dataset with RDataFrame and TTree. ; This tutorial illustrates how much simpler it can be to use a RDataFrame to create a dataset with respect to the usage of the TTree interfaces.; ; // ##This is the classic way of creating a ROOT dataset; // The steps are:; // - Create a file; // - Create a tree associated to the file; // - Define the variables to write in the entries; // - Define the branches associated to those variables; // - Write the event loop to set the right value to the variables; // - Call TTree::Fill to save the value of the variables; // - Write the TTree; // - Close the file; void classicWay(); {; TFile f(""df009_FromScratchVSTTree_classic.root"", ""RECREATE"");; TTree t(""treeName"", ""treeName"");; double b1;; int b2;; t.Branch(""b1"", &b1);; t.Branch(""b2"", &b2);; for (int i = 0; i < 10; ++i) {; b1 = i;; b2 = i * i;; t.Fill();; }; t.Write();; f.Close();; }; ; // ##This is the RDF way of creating a ROOT dataset; // Few lines are needed to achieve the same result.; // Parallel creation of the TTree is not supported in the; // classic method.; // In this case the steps are:; // - Create an empty RDataFrame; // - If needed, define variables for the functions used to fill the branches; // - Create new columns expressing their content with lambdas, functors, functions or strings; // - Invoke the Snapshot action; //; // Parallelism is not the only advantage. Starting from an existing dataset,; // filtering it, enriching it with new columns, leaving aside some other columns, and; // writing a new dataset become very easy to do.; void RDFWay(); {; ROOT::RDataFrame df(10);; auto b = 0.;; df.Define(""b1"", [&b]() { return b++; }); .Define(""b2"", ""(int) b1 * b1"") // This can even be a string; .Snapshot(""t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df009__FromScratchVSTTree_8C.html:114,Load,Loading,114,doc/master/df009__FromScratchVSTTree_8C.html,https://root.cern,https://root.cern/doc/master/df009__FromScratchVSTTree_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df010_trivialDataSource.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df010_trivialDataSource.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the ""trivial data source"", an example data source implementation. ; This tutorial illustrates how use the RDataFrame in combination with a RDataSource. In this case we use a RTrivialDS, which is nothing more than a simple generator: it does not interface to any existing dataset. The RTrivialDS has a single column, col0, which has value n for entry n. The code for RTrivialDS is available at these links (header and source):; https://github.com/root-project/root/blob/master/tree/dataframe/src/RTrivialDS.cxx; https://github.com/root-project/root/blob/master/tree/dataframe/inc/ROOT/RTrivialDS.hxx. Note that RTrivialDS is only a demo data source implementation and superior alternatives typically exist for production use (e.g. constructing an empty RDataFrame as RDataFrame(nEntries)).; ; int df010_trivialDataSource(); {; auto nEvents = 128U;; auto d_s = ROOT::RDF::MakeTrivialDataFrame(nEvents);; ; /// Now we have a regular RDataFrame: the ingestion of data is delegated to; /// the RDataSource. At this point everything works as before.; auto h_s = d_s.Define(""x"", ""1./(1. + col0)"").Histo1D({""h_s"", ""h_s"", 128, 0, .6}, ""x"");; ; /// Now we redo the same with a RDF from scratch and we draw the two histograms; ROOT::RDataFrame d(nEvents);; ; /// This lambda redoes what the RTrivialDS provides; auto g = []() {; static ULong64_t i = 0;; return i++;; };; auto h = d.Define(""col0"", g).Define(""x"", ""1./(1. + col0)"").Histo1D({""h"", ""h"", 128, 0, .6}, ""x"");; ; auto c_s = new TCanvas();; c_s->SetLogy();; h_s->DrawClone();; ; auto c = new TCanvas();; c->SetLogy();; h->DrawClone();; ; return 0;; }; d#define d(i)Definition RSha256.hxx:102; c#define c(i)Definition RSha256.hxx:101; g#define g(i)Definition RSha256.hxx:105; h#define h(i)Definition RSha25",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df010__trivialDataSource_8C.html:113,Load,Loading,113,doc/master/df010__trivialDataSource_8C.html,https://root.cern,https://root.cern/doc/master/df010__trivialDataSource_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df010_trivialDataSource.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df010_trivialDataSource.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the ""trivial data source"", an example data source implementation. ; This tutorial illustrates how use the RDataFrame in combination with a RDataSource. In this case we use a RTrivialDS, which is nothing more than a simple generator: it does not interface to any existing dataset. The RTrivialDS has a single column, col0, which has value n for entry n.; Note that RTrivialDS is only a demo data source implementation and superior alternatives typically exist for production use (e.g. constructing an empty RDataFrame as RDataFrame(nEntries)).; ; import ROOT; ; # Create the data frame; MakeTrivialDataFrame = ROOT.RDF.MakeTrivialDataFrame; ; nEvents = 128; ; d_s = MakeTrivialDataFrame(nEvents); ; # Now we have a regular RDataFrame: the ingestion of data is delegated to; # the RDataSource. At this point everything works as before.; h_s = d_s.Define(""x"", ""1./(1. + col0)"").Histo1D((""h_s"", ""h_s"", 128, 0, .6), ""x""); ; c = ROOT.TCanvas(); c.SetLogy(); h_s.Draw(); c.SaveAs(""df010_trivialDataSource.png""); ; print(""Saved figure to df010_trivialDataSource.png""); DateSeptember 2017 ; AuthorDanilo Piparo (CERN) ; Definition in file df010_trivialDataSource.py. tutorialsdataframedf010_trivialDataSource.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df010__trivialDataSource_8py.html:114,Load,Loading,114,doc/master/df010__trivialDataSource_8py.html,https://root.cern,https://root.cern/doc/master/df010__trivialDataSource_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df012_DefinesAndFiltersAsStrings.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df012_DefinesAndFiltersAsStrings.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use just-in-time-compiled Filters and Defines for quick prototyping. ; This tutorial illustrates how to save some typing when using RDataFrame by invoking functions that perform jit-compiling at runtime.; ; void df012_DefinesAndFiltersAsStrings(); {; // We will inefficiently calculate an approximation of pi by generating; // some data, and doing very simple filtering and analysis on it.; ; // We start by creating an empty dataframe where we will insert 10 million; // random points in a square of side 2.0 (that is, with an inscribed circle; // of radius 1.0).; ; size_t npoints = 10000000;; ROOT::RDataFrame df(npoints);; ; // Define what we want inside the dataframe. We do not need to define p as an array,; // but we do it here to demonstrate how to use jitting with RDataFrame.; ; // NOTE: Although it's possible to use ""for (auto&& x : p)"" below, it will; // shadow the name of the data column ""x"", and may cause compilation failures; // if the local variable and the data column are of different types, or the; // local x variable is declared in the global scope of the lambda function.; ; auto pidf = df.Define(""x"", ""gRandom->Uniform(-1.0, 1.0)""); .Define(""y"", ""gRandom->Uniform(-1.0, 1.0)""); .Define(""p"", ""std::array<double, 2> v{x, y}; return v;""); .Define(""r"", ""double r2 = 0.0; for (auto&& x : p) r2 += x*x; return sqrt(r2);"");; ; // Now we have a dataframe with columns x, y, p (which is a point based on x; // and y), and the radius r = sqrt(x*x + y*y). In order to approximate pi, we; // need to know how many of our data points fall inside the unit circle compared; // with the total number of points. The ratio of the areas is; //; // A_circle / A_square = pi r*r / l * l, where r = 1.0, and l = 2.0; //; // Therefor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df012__DefinesAndFiltersAsStrings_8C.html:122,Load,Loading,122,doc/master/df012__DefinesAndFiltersAsStrings_8C.html,https://root.cern,https://root.cern/doc/master/df012__DefinesAndFiltersAsStrings_8C.html,2,"['Load', 'perform']","['Loading', 'perform']"
Performance,". ROOT: tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df012_DefinesAndFiltersAsStrings.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use just-in-time-compiled Filters and Defines for quick prototyping. ; This tutorial illustrates how to use jit-compiling features of RDataFrame to define data using C++ code in a Python script.; ; import ROOT; ; ## We will inefficiently calculate an approximation of pi by generating; ## some data and doing very simple filtering and analysis on it.; ; ## We start by creating an empty dataframe where we will insert 10 million; ## random points in a square of side 2.0 (that is, with an inscribed unit; ## circle).; ; npoints = 10000000; df = ROOT.RDataFrame(npoints); ; ## Define what data we want inside the dataframe. We do not need to define p; ## as an array, but we do it here to demonstrate how to use jitting with RDataFrame.; ; pidf = df.Define(""x"", ""gRandom->Uniform(-1.0, 1.0)"") \; .Define(""y"", ""gRandom->Uniform(-1.0, 1.0)"") \; .Define(""p"", ""std::array<double, 2> v{x, y}; return v;"") \; .Define(""r"", ""double r2 = 0.0; for (auto&& w : p) r2 += w*w; return sqrt(r2);""); ; ## Now we have a dataframe with columns x, y, p (which is a point based on x; ## and y), and the radius r = sqrt(x*x + y*y). In order to approximate pi, we; ## need to know how many of our data points fall inside the circle of radius; ## one compared with the total number of points. The ratio of the areas is; ##; ## A_circle / A_square = pi r*r / l * l, where r = 1.0, and l = 2.0; ##; ## Therefore, we can approximate pi with four times the number of points inside; ## the unit circle over the total number of points:; ; incircle = pidf.Filter(""r <= 1.0"").Count().GetValue(); ; pi_approx = 4.0 * incircle / npoints; ; print(""pi is approximately equal to %g"" % (pi_approx)); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-leve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df012__DefinesAndFiltersAsStrings_8py.html:123,Load,Loading,123,doc/master/df012__DefinesAndFiltersAsStrings_8py.html,https://root.cern,https://root.cern/doc/master/df012__DefinesAndFiltersAsStrings_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df013_InspectAnalysis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df013_InspectAnalysis.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use callbacks to update a plot and a progress bar during the event loop. ; Showcase registration of callback functions that act on partial results while the event-loop is running using OnPartialResult and OnPartialResultSlot. This tutorial is not meant to run in batch mode.; ; using namespace ROOT; // RDataFrame lives in here; ; void df013_InspectAnalysis(); {; ROOT::EnableImplicitMT();; const auto poolSize = ROOT::GetThreadPoolSize();; const auto nSlots = 0 == poolSize ? 1 : poolSize;; ; // ## Setup a simple RDataFrame; // We start by creating a RDataFrame with a good number of empty events; const auto nEvents = nSlots * 10000ull;; RDataFrame d(nEvents);; ; // `heavyWork` is a lambda that fakes some interesting computation and just returns a normally distributed double; TRandom r;; auto heavyWork = [&r]() {; for (volatile int i = 0; i < 1000000; ++i); ;; return r.Gaus();; };; ; // Let's define a column ""x"" produced by invoking `heavyWork` for each event; // `df` stores a modified data-frame that contains ""x""; auto df = d.Define(""x"", heavyWork);; ; // Now we register a histogram-filling action with the RDataFrame.; // `h` can be used just like a pointer to TH1D but it is actually a TResultProxy<TH1D>, a smart object that triggers; // an event-loop to fill the pointee histogram if needed.; auto h = df.Histo1D<double>({""browserHisto"", """", 100, -2., 2.}, ""x"");; ; // ## Use the callback mechanism to draw the histogram on a TBrowser while it is being filled; // So far we have registered a column ""x"" to a data-frame with `nEvents` events and we registered the filling of a; // histogram with the values of column ""x"".; // In the following we will register three functions for execution during the event-loop:; // - one is to be executed on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df013__InspectAnalysis_8C.html:111,Load,Loading,111,doc/master/df013__InspectAnalysis_8C.html,https://root.cern,https://root.cern/doc/master/df013__InspectAnalysis_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df014_CSVDataSource.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df014_CSVDataSource.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Process a CSV file with RDataFrame and the CSV data source. ; This tutorial illustrates how use the RDataFrame in combination with a RDataSource. In this case we use a RCsvDS. This data source allows to read a CSV file from a RDataFrame. As a result of running this tutorial, we will produce plots of the dimuon spectrum starting from a subset of the CMS collision events of Run2010B. Dataset Reference: McCauley, T. (2014). Dimuon event information derived from the Run2010B public Mu dataset. CERN Open Data Portal. DOI: 10.7483/OPENDATA.CMS.CB8H.MFFA.; ; int df014_CSVDataSource(); {; // Let's first create a RDF that will read from the CSV file.; // The types of the columns will be automatically inferred.; auto fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv"";; auto fileName = ""df014_CsvDataSource_MuRun2010B_cpp.csv"";; if(gSystem->AccessPathName(fileName)); TFile::Cp(fileNameUrl, fileName);; auto df = ROOT::RDF::FromCSV(fileName);; ; // Now we will apply a first filter based on two columns of the CSV,; // and we will define a new column that will contain the invariant mass.; // Note how the new invariant mass column is defined from several other; // columns that already existed in the CSV file.; auto filteredEvents =; df.Filter(""Q1 * Q2 == -1""); .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; ; // Next we create a histogram to hold the invariant mass values and we draw it.; auto invMass =; filteredEvents.Histo1D({""invMass"", ""CMS Opendata: #mu#mu mass;#mu#mu mass [GeV];Events"", 512, 2, 110}, ""m"");; ; auto c = new TCanvas();; c->SetLogx();; c->SetLogy();; invMass->DrawClone();; ; // We will now produce a plot also for the J/Psi particle. We will plot; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8C.html:109,Load,Loading,109,doc/master/df014__CSVDataSource_8C.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df014_CSVDataSource.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df014_CSVDataSource.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_dataframe; 3/// \notebook -draw; 4/// Process a CSV file with RDataFrame and the CSV data source.; 5///; 6/// This tutorial illustrates how use the RDataFrame in combination with a; 7/// RDataSource. In this case we use a RCsvDS. This data source allows to read; 8/// a CSV file from a RDataFrame.; 9/// As a result of running this tutorial, we will produce plots of the dimuon; 10/// spectrum starting from a subset of the CMS collision events of Run2010B.; 11/// Dataset Reference:; 12/// McCauley, T. (2014). Dimuon event information derived from the Run2010B; 13/// public Mu dataset. CERN Open Data Portal.; 14/// DOI: [10.7483/OPENDATA.CMS.CB8H.MFFA](http://opendata.cern.ch/record/700).; 15///; 16/// \macro_code; 17/// \macro_image; 18///; 19/// \date October 2017; 20/// \author Enric Tejedor (CERN); 21 ; 22int df014_CSVDataSource(); 23{; 24 // Let's first create a RDF that will read from the CSV file.; 25 // The types of the columns will be automatically inferred.; 26 auto fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv"";; 27 auto fileName = ""df014_CsvDataSource_MuRun2010B_cpp.csv"";; 28 if(gSystem->AccessPathName(fileName)); 29 TFile::Cp(fileNameUrl, fileName);; 30 auto df = ROOT::RDF::FromCSV(fileName);; 31 ; 32 // Now we will apply a first filter based on two columns of the CSV,; 33 // and we will define a new column that will contain the invariant mass.; 34 // Note how the new invariant mass column is defined from several other; 35 // columns that already existed in the CSV file.; 36 auto filteredEvents =; 37 df.Filter(""Q1 * Q2 == -1""); 38 .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; 39 ; 40 // Next we create a histogram to hold the invari",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8C_source.html:106,Load,Loading,106,doc/master/df014__CSVDataSource_8C_source.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df014_CSVDataSource.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df014_CSVDataSource.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Process a CSV file with RDataFrame and the CSV data source. ; This tutorial illustrates how use the RDataFrame in combination with a RDataSource. In this case we use a TCsvDS. This data source allows to read a CSV file from a RDataFrame. As a result of running this tutorial, we will produce plots of the dimuon spectrum starting from a subset of the CMS collision events of Run2010B. Dataset Reference: McCauley, T. (2014). Dimuon event information derived from the Run2010B public Mu dataset. CERN Open Data Portal. DOI: 10.7483/OPENDATA.CMS.CB8H.MFFA.; ; import ROOT; import os; ; # Let's first create a RDF that will read from the CSV file.; # The types of the columns will be automatically inferred.; fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv""; fileName = ""df014_CsvDataSource_MuRun2010B_py.csv""; if not os.path.isfile(fileName):; ROOT.TFile.Cp(fileNameUrl, fileName); ; df = ROOT.RDF.FromCSV(fileName); ; # Now we will apply a first filter based on two columns of the CSV,; # and we will define a new column that will contain the invariant mass.; # Note how the new invariant mass column is defined from several other; # columns that already existed in the CSV file.; filteredEvents = df.Filter(""Q1 * Q2 == -1"") \; .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))""); ; # Next we create a histogram to hold the invariant mass values and we draw it.; invMass = filteredEvents.Histo1D((""invMass"", ""CMS Opendata: #mu#mu mass;#mu#mu mass [GeV];Events"", 512, 2, 110), ""m""); ; c = ROOT.TCanvas(); c.SetLogx(); c.SetLogy(); invMass.Draw(); c.SaveAs(""df014_invMass.png""); ; # We will now produce a plot also for the J/Psi particle. We will plot; # on the same c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8py.html:110,Load,Loading,110,doc/master/df014__CSVDataSource_8py.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df014_CSVDataSource.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df014_CSVDataSource.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_dataframe; 3## \notebook -draw; 4## Process a CSV file with RDataFrame and the CSV data source.; 5##; 6## This tutorial illustrates how use the RDataFrame in combination with a; 7## RDataSource. In this case we use a TCsvDS. This data source allows to read; 8## a CSV file from a RDataFrame.; 9## As a result of running this tutorial, we will produce plots of the dimuon; 10## spectrum starting from a subset of the CMS collision events of Run2010B.; 11## Dataset Reference:; 12## McCauley, T. (2014). Dimuon event information derived from the Run2010B; 13## public Mu dataset. CERN Open Data Portal.; 14## DOI: [10.7483/OPENDATA.CMS.CB8H.MFFA](http://opendata.cern.ch/record/700).; 15##; 16## \macro_code; 17## \macro_image; 18##; 19## \date October 2017; 20## \author Enric Tejedor (CERN); 21 ; 22import ROOT; 23import os; 24 ; 25# Let's first create a RDF that will read from the CSV file.; 26# The types of the columns will be automatically inferred.; 27fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv""; 28fileName = ""df014_CsvDataSource_MuRun2010B_py.csv""; 29if not os.path.isfile(fileName):; 30 ROOT.TFile.Cp(fileNameUrl, fileName); 31 ; 32df = ROOT.RDF.FromCSV(fileName); 33 ; 34# Now we will apply a first filter based on two columns of the CSV,; 35# and we will define a new column that will contain the invariant mass.; 36# Note how the new invariant mass column is defined from several other; 37# columns that already existed in the CSV file.; 38filteredEvents = df.Filter(""Q1 * Q2 == -1"") \; 39 .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))""); 40 ; 41# Next we create a histogram to hold the invariant mass values and we draw it.; 42invMass = filteredEvents.Hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8py_source.html:107,Load,Loading,107,doc/master/df014__CSVDataSource_8py_source.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8py_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df015_LazyDataSource.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df015_LazyDataSource.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the lazy RDataFrame data source to concatenate computation graphs. ; This tutorial illustrates how to take advantage of a lazy data source creating a data frame from columns of one or multiple parent dataframe(s), delaying the creation of the columns to the actual usage of the daughter data frame. Dataset Reference: McCauley, T. (2014). Dimuon event information derived from the Run2010B public Mu dataset. CERN Open Data Portal. DOI: 10.7483/OPENDATA.CMS.CB8H.MFFA. From the ROOT website: https://root.cern/files/tutorials/tdf014_CsvDataSource_MuRun2010B.csv; ; int df015_LazyDataSource(); {; using namespace ROOT::RDF;; ; // Let's first create a RDF that will read from the CSV file.; // See the tutorial (https://root.cern/doc/master/df014__CSVDataSource_8C.html) on CSV data sources for more details!; auto fileNameUrl = ""http://root.cern/files/tutorials/df014_CsvDataSource_MuRun2010B.csv"";; auto fileName = ""df015_CsvDataSource_MuRun2010B.csv"";; if(gSystem->AccessPathName(fileName)); TFile::Cp(fileNameUrl, fileName);; ; auto csv_rdf = FromCSV(fileName);; ; // Now we take out two columns: px and py of the first muon in the muon pair; std::string px1Name = ""px1"";; auto px1 = csv_rdf.Take<double>(px1Name);; std::string py1Name = ""py1"";; auto py1 = csv_rdf.Take<double>(py1Name);; ; // Now we create a new dataframe built on top of the columns above. Note that up to now, no event loop; // has been carried out!; auto df = MakeLazyDataFrame(std::make_pair(px1Name, px1), std::make_pair(py1Name, py1));; ; // We build a histogram of the transverse momentum of the muons.; auto ptFormula = [](double px, double py) { return sqrt(px * px + py * py); };; auto pt_h = df.Define(""pt"", ptFormula, {""px1"", ""py1""}); .Histo1D<double>({""pt"", ""Muon p_{T};p_{T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df015__LazyDataSource_8C.html:110,Load,Loading,110,doc/master/df015__LazyDataSource_8C.html,https://root.cern,https://root.cern/doc/master/df015__LazyDataSource_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df016_vecOps.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df016_vecOps.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Process collections in RDataFrame with the help of RVec. ; This tutorial shows the potential of the VecOps approach for treating collections stored in datasets, a situation very common in HEP data analysis.; ; using namespace ROOT;; ; int df016_vecOps(); {; // We re-create a set of points in a square.; // This is a technical detail, just to create a dataset to play with!; auto unifGen = [](double) { return gRandom->Uniform(-1.0, 1.0); };; auto vGen = [&](int len) {; RVecD v(len);; std::transform(v.begin(), v.end(), v.begin(), unifGen);; return v;; };; RDataFrame d(1024);; auto d0 = d.Define(""len"", []() { return (int)gRandom->Uniform(0, 16); }); .Define(""x"", vGen, {""len""}); .Define(""y"", vGen, {""len""});; ; // Now we have in our hands d, a RDataFrame with two columns, x and y, which; // hold collections of coordinates. The sizes of these collections vary.; // Let's now define radii from the x and y coordinates. We'll do it treating ; // the collections stored in the columns without looping on the individual elements.; auto d1 = d0.Define(""r"", ""sqrt(x*x + y*y)"");; ; // Now we want to plot 2 quarters of a ring with radii .5 and 1.; // Note how the cuts are performed on RVecs, comparing them with integers and; // among themselves.; auto ring_h = d1.Define(""rInFig"", ""r > .5 && r < 1 && x*y < 0""); .Define(""yFig"", ""y[rInFig]""); .Define(""xFig"", ""x[rInFig]""); .Histo2D({""fig"", ""Two quarters of a ring"", 64, -1.1, 1.1, 64, -1.1, 1.1}, ""xFig"", ""yFig"");; ; auto cring = new TCanvas();; ring_h->DrawCopy(""Colz"");; ; return 0;; }; d#define d(i)Definition RSha256.hxx:102; lenOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttribut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df016__vecOps_8C.html:102,Load,Loading,102,doc/master/df016__vecOps_8C.html,https://root.cern,https://root.cern/doc/master/df016__vecOps_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df016_vecOps.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df016_vecOps.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Process collections in RDataFrame with the help of RVec. ; This tutorial shows the potential of the VecOps approach for treating collections stored in datasets, a situation very common in HEP data analysis. ; import ROOT; ; df = ROOT.RDataFrame(1024); coordDefineCode = '''ROOT::RVecD {0}(len);; std::transform({0}.begin(), {0}.end(), {0}.begin(), [](double){{return gRandom->Uniform(-1.0, 1.0);}});; return {0};'''; d = df.Define(""len"", ""gRandom->Uniform(0, 16)"")\; .Define(""x"", coordDefineCode.format(""x""))\; .Define(""y"", coordDefineCode.format(""y"")); ; # Now we have in our hands d, a RDataFrame with two columns, x and y, which; # hold collections of coordinates. The sizes of these collections vary.; # Let's now define radii radii from the x and y coordinates. We'll do it treating ; # the collections stored in the columns without looping on the individual elements.; d1 = d.Define(""r"", ""sqrt(x*x + y*y)""); ; # Now we want to plot 2 quarters of a ring with radii .5 and 1.; # Note how the cuts are performed on RVecs, comparing them with integers and; # among themselves.; ring_h = d1.Define(""rInFig"", ""r > .5 && r < 1 && x*y < 0"")\; .Define(""yFig"", ""y[rInFig]"")\; .Define(""xFig"", ""x[rInFig]"")\; .Histo2D((""fig"", ""Two quarters of a ring"", 64, -1.1, 1.1, 64, -1.1, 1.1), ""xFig"", ""yFig""); ; cring = ROOT.TCanvas(); ring_h.Draw(""Colz""); cring.SaveAs(""df016_ring.png""); ; print(""Saved figure to df016_ring.png""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; DateFebruary 2018 ; AuthorDanilo Piparo (CERN) ; Definition in file df016_vecOps.py. tutorialsdataframedf016_vecOps.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df016__vecOps_8py.html:103,Load,Loading,103,doc/master/df016__vecOps_8py.html,https://root.cern,https://root.cern/doc/master/df016__vecOps_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df017_vecOpsHEP.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df017_vecOpsHEP.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use RVecs to plot the transverse momentum of selected particles. ; This tutorial shows how VecOps can be used to slim down the programming model typically adopted in HEP for analysis. In this case we have a dataset containing the kinematic properties of particles stored in individual arrays. We want to plot the transverse momentum of these particles if the energy is greater than 100 MeV.; ; auto filename = gROOT->GetTutorialDir() + ""/dataframe/df017_vecOpsHEP.root"";; auto treename = ""myDataset"";; ; using namespace ROOT;; ; ; void WithTTreeReader(); {; TFile f(filename);; TTreeReader tr(treename, &f);; TTreeReaderArray<double> px(tr, ""px"");; TTreeReaderArray<double> py(tr, ""py"");; TTreeReaderArray<double> E(tr, ""E"");; ; TH1F h(""pt"", ""pt"", 16, 0, 4);; ; while (tr.Next()) {; for (auto i=0U;i < px.GetSize(); ++i) {; if (E[i] > 100) h.Fill(sqrt(px[i]*px[i] + py[i]*py[i]));; }; }; h.DrawCopy();; }; ; void WithRDataFrame(); {; RDataFrame f(treename, filename.Data());; auto CalcPt = [](RVecD &px, RVecD &py, RVecD &E) {; RVecD v;; for (auto i=0U;i < px.size(); ++i) {; if (E[i] > 100) {; v.emplace_back(sqrt(px[i]*px[i] + py[i]*py[i]));; }; }; return v;; };; f.Define(""pt"", CalcPt, {""px"", ""py"", ""E""}); .Histo1D<RVecD>({""pt"", ""pt"", 16, 0, 4}, ""pt"")->DrawCopy();; }; ; void WithRDataFrameVecOps(); {; RDataFrame f(treename, filename.Data());; auto CalcPt = [](RVecD &px, RVecD &py, RVecD &E) {; auto pt = sqrt(px*px + py*py);; return pt[E>100];; };; f.Define(""good_pt"", CalcPt, {""px"", ""py"", ""E""}); .Histo1D<RVecD>({""pt"", ""pt"", 16, 0, 4}, ""good_pt"")->DrawCopy();; }; ; void WithRDataFrameVecOpsJit(); {; RDataFrame f(treename, filename.Data());; f.Define(""good_pt"", ""sqrt(px*px + py*py)[E>100]""); .Histo1D({""pt"", ""pt"", 16, 0, 4}, ""good_pt"")->DrawCopy();; }; ; void df",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df017__vecOpsHEP_8C.html:105,Load,Loading,105,doc/master/df017__vecOpsHEP_8C.html,https://root.cern,https://root.cern/doc/master/df017__vecOpsHEP_8C.html,1,['Load'],['Loading']
Performance,. ROOT: tutorials/dataframe/df017_vecOpsHEP.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df017_vecOpsHEP.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use RVecs to plot the transverse momentum of selected particles. ; This tutorial shows how VecOps can be used to slim down the programming model typically adopted in HEP for analysis. In this case we have a dataset containing the kinematic properties of particles stored in individual arrays. We want to plot the transverse momentum of these particles if the energy is greater than 100 MeV. ; Definition in file df017_vecOpsHEP.py. tutorialsdataframedf017_vecOpsHEP.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df017__vecOpsHEP_8py.html:106,Load,Loading,106,doc/master/df017__vecOpsHEP_8py.html,https://root.cern,https://root.cern/doc/master/df017__vecOpsHEP_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df018_customActions.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df018_customActions.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Implement a custom action to fill THns. ; This tutorial shows how to implement a custom action. As an example, we build a helper for filling THns.; ; // This is a custom action which respects a well defined interface. It supports parallelism,; // in the sense that it behaves correctly if implicit multi threading is enabled.; // We template it on:; // - The type of the internal THnT(s); // - The dimension of the internal THnT(s); // Note the plural: in presence of a MT execution, internally more than a single THnT is created.; template <typename T, unsigned int NDIM>; class THnHelper : public ROOT::Detail::RDF::RActionImpl<THnHelper<T, NDIM>> {; public:; /// This is a handy, expressive shortcut.; using THn_t = THnT<T>;; /// This type is a requirement for every helper.; using Result_t = THn_t;; ; private:; std::vector<std::shared_ptr<THn_t>> fHistos; // one per data processing slot; ; public:; /// This constructor takes all the parameters necessary to build the THnTs. In addition, it requires the names of; /// the columns which will be used.; THnHelper(std::string_view name, std::string_view title, std::array<int, NDIM> nbins, std::array<double, NDIM> xmins,; std::array<double, NDIM> xmax); {; const auto nSlots = ROOT::IsImplicitMTEnabled() ? ROOT::GetThreadPoolSize() : 1;; for (auto i : ROOT::TSeqU(nSlots)) {; fHistos.emplace_back(std::make_shared<THn_t>(std::string(name).c_str(), std::string(title).c_str(),; NDIM, nbins.data(), xmins.data(), xmax.data()));; (void)i;; }; }; THnHelper(THnHelper &&) = default;; THnHelper(const THnHelper &) = delete;; std::shared_ptr<THn_t> GetResultPtr() const { return fHistos[0]; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; /// This is a method executed at every entry; templa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df018__customActions_8C.html:109,Load,Loading,109,doc/master/df018__customActions_8C.html,https://root.cern,https://root.cern/doc/master/df018__customActions_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df019_Cache.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df019_Cache.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Cache a processed RDataFrame in memory for further usage. ; This tutorial shows how the content of a data frame can be cached in memory in form of a dataframe. The content of the columns is stored in memory in contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation is performed.; Creating a cached data frame storing all of its content deserialised and uncompressed in memory is particularly useful when dealing with datasets of a moderate size (small enough to fit the RAM) over which several explorative loops need to be performed as fast as possible. In addition, caching can be useful when no file on disk needs to be created as a side effect of checkpointing part of the analysis.; All steps in the caching are lazy, i.e. the cached data frame is actually filled only when the event loop is triggered on it.; ; void df019_Cache(); {; // We create a data frame on top of the hsimple example.; auto hsimplePath = gROOT->GetTutorialDir();; hsimplePath += ""/hsimple.root"";; ROOT::RDataFrame df(""ntuple"", hsimplePath.Data());; ; // We apply a simple cut and define a new column.; auto df_cut = df.Filter([](float py) { return py > 0.f; }, {""py""}); .Define(""px_plus_py"", [](float px, float py) { return px + py; }, {""px"", ""py""});; ; // We cache the content of the dataset. Nothing has happened yet: the work to accomplish; // has been described. As for `Snapshot`, the types and columns can be written out explicitly; // or left for the jitting to handle (`df_cached` is intentionally unused - it shows how; // to create a *cached* dataframe specifying column types explicitly):; auto df_cached = df_cut.Cache<float, float>({""px_plus_py"", ""py""});; auto df_cached_implicit = df_cut.Cache();; auto h = df_cached_implicit.Histo1D<float>(""px_plus_py"");; ; // Now ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df019__Cache_8C.html:101,Load,Loading,101,doc/master/df019__Cache_8C.html,https://root.cern,https://root.cern/doc/master/df019__Cache_8C.html,6,"['Cache', 'Load', 'cache', 'perform']","['Cache', 'Loading', 'cached', 'performed']"
Performance,". ROOT: tutorials/dataframe/df019_Cache.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df019_Cache.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Cache a processed RDataFrame in memory for further usage. ; This tutorial shows how the content of a data frame can be cached in memory in form of a dataframe. The content of the columns is stored in memory in contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation is performed.; Creating a cached data frame storing all of its content deserialised and uncompressed in memory is particularly useful when dealing with datasets of a moderate size (small enough to fit the RAM) over which several explorative loops need to be performed as fast as possible. In addition, caching can be useful when no file on disk needs to be created as a side effect of checkpointing part of the analysis.; All steps in the caching are lazy, i.e. the cached data frame is actually filled only when the event loop is triggered on it.; ; import ROOT; import os; ; # We create a data frame on top of the hsimple example.; hsimplePath = os.path.join(str(ROOT.gROOT.GetTutorialDir().Data()), ""hsimple.root""); df = ROOT.RDataFrame(""ntuple"", hsimplePath); ; # We apply a simple cut and define a new column.; df_cut = df.Filter(""py > 0.f"")\; .Define(""px_plus_py"", ""px + py""); ; # We cache the content of the dataset. Nothing has happened yet: the work to accomplish; # has been described.; df_cached = df_cut.Cache(); ; h = df_cached.Histo1D(""px_plus_py""); ; # Now the event loop on the cached dataset is triggered by accessing the histogram.; # This event triggers the loop on the `df` data frame lazily.; c = ROOT.TCanvas(); h.Draw(); c.SaveAs(""df019_Cache.png""); ; print(""Saved figure to df019_Cache.png""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; . DateJune 2018 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df019__Cache_8py.html:102,Load,Loading,102,doc/master/df019__Cache_8py.html,https://root.cern,https://root.cern/doc/master/df019__Cache_8py.html,6,"['Cache', 'Load', 'cache', 'perform']","['Cache', 'Loading', 'cached', 'performed']"
Performance,". ROOT: tutorials/dataframe/df020_helpers.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df020_helpers.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show usage of RDataFrame's helper tools, contained in ROOT/RDFHelpers.hxx. ; ; void df020_helpers(); {; // First of all, we create a dataframe with 3 entries and define two simple columns; const auto nEntries = 3;; ROOT::RDataFrame _df(nEntries);; auto df = _df.Define(""one"", [] { return 1; }).Define(""two"", [] { return 2; });; ; // *** Not ***; // This helper takes a callable `f` (which must return a `bool`) and produces a new callable which takes the same; // arguments as `f` but returns its negated result. `Not` is useful to invert the check performed by a given Filter.; // Here we define a simple lambda that checks whether a value is equal to 1, and invert it with Not:; auto isOne = [] (int a) { return a == 1; };; auto isNotOne = ROOT::RDF::Not(isOne);; ; // Both `isOne` and `isNotOne` are callables that we can use in `Filters`:; auto c1 = df.Filter(isOne, {""one""}).Count();; auto c2 = df.Filter(isNotOne, {""two""}).Count();; // Both counts are equal to the total number of entries, as both Filters always pass.; R__ASSERT(*c1 == nEntries);; R__ASSERT(*c2 == nEntries);; ; // *** PassAsVec ***; // Consider the following function, which checks if a vector consists of two elements equal to 1 and 2:; auto checkOneTwo = [] (const std::vector<int> &v) { return v.size() == 2 && v[0] == 1 && v[1] == 2; };; // The following line, although it looks reasonable, would _not_ run correctly:; // df.Filter(checkOneTwo, {""one"", ""two""});; // The reason is that `Filter(..., {""one"", ""two""})` expects a callable that takes exactly two integers, while; // `checkOneTwo` actually takes a vector of integers (i.e. it does not have the right signature).; // PassAsVec helps passing down the single values ""one"", ""two"" to `checkOneTwo` as a collection: it takes a callable; // `f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df020__helpers_8C.html:103,Load,Loading,103,doc/master/df020__helpers_8C.html,https://root.cern,https://root.cern/doc/master/df020__helpers_8C.html,2,"['Load', 'perform']","['Loading', 'performed']"
Performance,". ROOT: tutorials/dataframe/df021_createTGraph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df021_createTGraph.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Fill a TGraph using RDataFrame. ; ; ; ; void df021_createTGraph(); {; ROOT::EnableImplicitMT(2);; ; ROOT::RDataFrame d(160);; ; // Create a trivial parabola; auto dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x"");; ; auto graph = dd.Graph(""x"", ""y"");; ; // This tutorial is ran with multithreading enabled. The order in which points are inserted is not known, so to have a meaningful representation points are sorted.; graph->Sort();; auto c = new TCanvas();; graph->DrawClone(""APL"");; }; d#define d(i)Definition RSha256.hxx:102; c#define c(i)Definition RSha256.hxx:101; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TCanvasThe Canvas class.Definition TCanvas.h:23; ROOT::EnableImplicitMTvoid EnableImplicitMT(UInt_t numthreads=0)Enable ROOT's implicit multi-threading for all objects and methods that provide an internal paralleli...Definition TROOT.cxx:539; df021_createTGraphDefinition df021_createTGraph.py:1; graphDefinition graph.py:1; . DateJuly 2018 ; AuthorsEnrico Guiraud, Danilo Piparo (CERN), Massimo Tumolo (Politecnico di Torino) ; Definition in file df021_createTGraph.C. tutorialsdataframedf021_createTGraph.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df021__createTGraph_8C.html:108,Load,Loading,108,doc/master/df021__createTGraph_8C.html,https://root.cern,https://root.cern/doc/master/df021__createTGraph_8C.html,2,"['Load', 'multi-thread']","['Loading', 'multi-threading']"
Performance,". ROOT: tutorials/dataframe/df021_createTGraph.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df021_createTGraph.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Fill a TGraph using RDataFrame. ; ; import ROOT; ; ROOT.ROOT.EnableImplicitMT(2); d = ROOT.RDataFrame(160); ; # Create a trivial parabola; dd = d.Alias(""x"", ""rdfentry_"").Define(""y"", ""x*x""); ; graph = dd.Graph(""x"", ""y""); ; # This tutorial is ran with multithreading enabled. The order in which points are inserted is not known, so to have a meaningful representation points are sorted.; c = ROOT.TCanvas(); graph.Sort(); graph.Draw(""APL""); c.SaveAs(""df021_createTGraph.png""); ; print(""Saved figure to df021_createTGraph.png""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; . DateJuly 2018 ; AuthorsEnrico Guiraud, Danilo Piparo (CERN), Massimo Tumolo (Politecnico di Torino) ; Definition in file df021_createTGraph.py. tutorialsdataframedf021_createTGraph.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df021__createTGraph_8py.html:109,Load,Loading,109,doc/master/df021__createTGraph_8py.html,https://root.cern,https://root.cern/doc/master/df021__createTGraph_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df022_useKahan.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df022_useKahan.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Implement a custom action that evaluates a Kahan sum. ; This tutorial shows how to implement a Kahan summation custom action.; ; template <typename T>; class KahanSum final : public ROOT::Detail::RDF::RActionImpl<class KahanSum<T>> {; public:; /// This type is a requirement for every helper.; using Result_t = T;; ; private:; std::vector<T> fPartialSums;; std::vector<T> fCompensations;; int fNSlots;; ; std::shared_ptr<T> fResultSum;; ; void KahanAlgorithm(const T &x, T &sum, T &compensation){; T y = x - compensation;; T t = sum + y;; compensation = (t - sum) - y;; sum = t;; }; ; public:; KahanSum(KahanSum &&) = default;; KahanSum(const KahanSum &) = delete;; ; KahanSum(const std::shared_ptr<T> &r) : fResultSum(r); {; static_assert(std::is_floating_point<T>::value, ""Kahan sum makes sense only on floating point numbers"");; ; fNSlots = ROOT::IsImplicitMTEnabled() ? ROOT::GetThreadPoolSize() : 1;; fPartialSums.resize(fNSlots, 0.);; fCompensations.resize(fNSlots, 0.);; }; ; std::shared_ptr<Result_t> GetResultPtr() const { return fResultSum; }; ; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; ; void Exec(unsigned int slot, T x); {; KahanAlgorithm(x, fPartialSums[slot], fCompensations[slot]);; }; ; template <typename V=T, std::enable_if_t<ROOT::Internal::RDF::IsDataContainer<V>::value, int> = 0>; void Exec(unsigned int slot, const T &vs); {; for (auto &&v : vs) {; Exec(slot, v);; }; }; ; void Finalize(); {; T sum(0) ;; T compensation(0);; for (int i = 0; i < fNSlots; ++i) {; KahanAlgorithm(fPartialSums[i], sum, compensation);; }; *fResultSum = sum;; }; ; std::string GetActionName() { return ""KahanSum""; }; };; ; void df022_useKahan(); {; // We enable implicit parallelism; ROOT::EnableImplicitMT(2);; ; ROOT::RDataFrame d(20);; auto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df022__useKahan_8C.html:104,Load,Loading,104,doc/master/df022__useKahan_8C.html,https://root.cern,https://root.cern/doc/master/df022__useKahan_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df023_aggregate.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df023_aggregate.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Aggregate action to specify arbitrary data aggregations. ; This tutorial shows how to use the Aggregate action to evaluate the product of all the elements of a column. This operation may be performed using a Reduce action, however aggregate is used for the sake of the tutorial; ; void df023_aggregate(); {; ; // Column to be aggregated; const std::string columnName = ""x"";; ; ROOT::EnableImplicitMT(2);; auto rdf = ROOT::RDataFrame(5);; auto d = rdf.Define(columnName, ""rdfentry_ + 1."");; ; // Aggregator function. It receives an accumulator (acc) and a column value (x). The variable acc is shared among the; // calls, so the function has to specify how the value has to be aggregated in the accumulator.; auto aggregator = [](double acc, double x) { return acc * x; };; ; // If multithread is enabled, the aggregator function will be called by more threads and will produce a vector of; // partial accumulators. The merger function performs the final aggregation of these partial results.; auto merger = [](std::vector<double> &accumulators) {; auto size = accumulators.size();; for (int i = 1; i < size; ++i) {; accumulators[0] *= accumulators[i];; }; };; ; // The accumulator is initialized at this value by every thread.; double initValue = 1.;; ; // Multiplies all elements of the column ""x""; auto result = d.Aggregate(aggregator, merger, columnName, initValue);; ; std::cout << *result << std::endl;; }; d#define d(i)Definition RSha256.hxx:102; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df023__aggregate_8C.html:105,Load,Loading,105,doc/master/df023__aggregate_8C.html,https://root.cern,https://root.cern/doc/master/df023__aggregate_8C.html,2,"['Load', 'perform']","['Loading', 'performed']"
Performance,". ROOT: tutorials/dataframe/df024_Display.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df024_Display.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Display action to inspect entry values. ; ; void df024_Display(); {; // Setting up a Dataframe with some data; unsigned long long y = 1;; int x = 1;; double w = 1;; double z = 1;; ROOT::RDataFrame df(10);; auto d = df.Define(""y"", [&y]() { return y *= 100; }) // A column with ulongs; .Define(""x"",; [&x]() {; return std::vector<int>({x++, x++, x++, x++});; }) // A column with four-elements collection; .Define(""w"", [&w]() { return w *= 1.8; }) // A column with doubles; .Define(""z"", [&z]() {; z *= 1.1;; return std::vector<std::vector<double>>({{z, ++z}, {z, ++z}, {z, ++z}});; }); // A column of matrices; ; // Preparing the RResultPtr<RDisplay> object with all columns and default number of entries; auto d1 = d.Display("""");; // Preparing the RResultPtr<RDisplay> object with two columns and default number of entries; auto d2 = d.Display({""x"", ""y""});; ; // Printing the short representations, the event loop will run; std::cout << ""The following is the representation of all columns with the default nr of entries"" << std::endl;; d1->Print();; std::cout << ""\n\nThe following is the representation of two columns with the default nr of entries"" << std::endl;; d2->Print();; }; d#define d(i)Definition RSha256.hxx:102; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; df024_DisplayDefinition df024_Display.py:1; ; The following is the representation of all columns with the default nr of entries; +-----+-----------+----+-------------+--------------------------+; | Row | w | x | y | z | ; +-----+-----------+----+-------------+----------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df024__Display_8C.html:103,Load,Loading,103,doc/master/df024__Display_8C.html,https://root.cern,https://root.cern/doc/master/df024__Display_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df024_Display.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df024_Display.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Display action to inspect entry values. ; This tutorial shows how to use the Display action; ; import ROOT; ; # Setting up a Dataframe with some data; ROOT.gInterpreter.ProcessLine('''; unsigned long long y = 1;; int x = 1;; double w = 1;; double z = 1;; ROOT::RDataFrame df(10);; auto d = df.Define(""y"", [&y]() { return y *= 100; }) // A column with ulongs; .Define(""x"",; [&x]() {; return std::vector<int>({x++, x++, x++, x++});; }) // A column with four-elements collection; .Define(""w"", [&w]() { return w *= 1.8; }) // A column with doubles; .Define(""z"", [&z]() {; z *= 1.1;; return std::vector<std::vector<double>>({{z, ++z}, {z, ++z}, {z, ++z}});; }); // A column of matrices; '''); ; d = ROOT.d; ; # Preparing the RResultPtr<RDisplay> object with all columns and default number of entries; d1 = d.Display(""""); # Preparing the RResultPtr<RDisplay> object with two columns and default number of entries; cols = ROOT.vector('string')(); cols.push_back(""x""); cols.push_back(""y"");; d2 = d.Display(cols); ; # Printing the short representations, the event loop will run; print(""The following is the representation of all columns with the default nr of entries""); d1.Print(); print(""\n\nThe following is the representation of two columns with the default nr of entries""); d2.Print(); +-----+-----------+----+-------------+--------------------------+; | Row | w | x | y | z | ; +-----+-----------+----+-------------+--------------------------+; | 0 | 1.800000 | 1 | 100 | { 1.1000000, 2.1000000 } | ; | | | 2 | | { 2.1000000, 3.1000000 } | ; | | | 3 | | { 3.1000000, 4.1000000 } | ; | | | 4 | | | ; +-----+-----------+----+-------------+--------------------------+; | 1 | 3.240000 | 5 | 10000 | { 4.5100000, 5.5100000 } | ; | | | 6 | | { 5.5100000, 6.5100",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df024__Display_8py.html:104,Load,Loading,104,doc/master/df024__Display_8py.html,https://root.cern,https://root.cern/doc/master/df024__Display_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df025_RNode.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df025_RNode.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Manipulate RDF objects in functions, loops and conditional branches. ; Each RDataFrame object has its own type. It helps with performance, but sometimes it gets in the way of writing simple code that manages RDF objects. Luckily, every RDF object can be converted to the generic RNode type. This tutorial shows how to take advantage of RNode to easily manipulate RDataFrames.; ; /// A generic function that takes an RDF object and applies a string filter; ROOT::RDF::RNode AddFilter(ROOT::RDF::RNode node, string_view filterStr); {; return node.Filter(filterStr);; }; ; void df025_RNode(); {; ROOT::RDataFrame df(8);; ; // Using the generic AddFilter helper function defined above: RNode in, RNode out; auto f1 = AddFilter(df, ""rdfentry_ > 0"");; auto f2 = f1.Filter([](ULong64_t e) { return e > 1; }, {""rdfentry_""});; ; // Conditionally applying a filter is simple with ROOT::RDF::RNode; bool someCondition = true;; auto maybe_filtered = ROOT::RDF::RNode(f2);; if (someCondition); maybe_filtered = maybe_filtered.Filter(""rdfentry_ > 3"");; ; // Adding new columns with Define in a loop is simple thanks to ROOT::RDF::RNode; auto with_columns = ROOT::RDF::RNode(maybe_filtered);; for (auto i = 0; i < 3; ++i); with_columns = with_columns.Define(""x"" + std::to_string(i), ""42"");; ; // RNodes can be used exactly like any other RDF object; std::cout << ""Entries passing the selection: "" << with_columns.Count().GetValue() << std::endl;; }; e#define e(i)Definition RSha256.hxx:103; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; ROOT::RDF::RInterfaceThe public interface to the RDataFrame federation of classes.Definition RInterface.hxx:113; ROOT::RDF::RInterface::FilterRInterface< RDFDetail::RFilter< F, Proxied >, DS_t > Filter(F f, const ColumnNames_t &columns={}",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df025__RNode_8C.html:101,Load,Loading,101,doc/master/df025__RNode_8C.html,https://root.cern,https://root.cern/doc/master/df025__RNode_8C.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: tutorials/dataframe/df026_AsNumpyArrays.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df026_AsNumpyArrays.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Read data from RDataFrame into Numpy arrays. ; ; import ROOT; from sys import exit; ; # Let's create a simple dataframe with ten rows and two columns; df = ROOT.RDataFrame(10) \; .Define(""x"", ""(int)rdfentry_"") \; .Define(""y"", ""1.f/(1.f+rdfentry_)""); ; # Next, we want to access the data from Python as Numpy arrays. To do so, the; # content of the dataframe is converted using the AsNumpy method. The returned; # object is a dictionary with the column names as keys and 1D numpy arrays with; # the content as values.; npy = df.AsNumpy(); print(""Read-out of the full RDataFrame:\n{}\n"".format(npy)); ; # Since reading out data to memory is expensive, always try to read-out only what; # is needed for your analysis. You can use all RDataFrame features to reduce your; # dataset, e.g., the Filter transformation. Furthermore, you can can pass to the; # AsNumpy method a whitelist of column names with the option `columns` or a blacklist; # with column names with the option `exclude`.; df2 = df.Filter(""x>5""); npy2 = df2.AsNumpy(); print(""Read-out of the filtered RDataFrame:\n{}\n"".format(npy2)); ; npy3 = df2.AsNumpy(columns=[""x""]); print(""Read-out of the filtered RDataFrame with the columns option:\n{}\n"".format(npy3)); ; npy4 = df2.AsNumpy(exclude=[""x""]); print(""Read-out of the filtered RDataFrame with the exclude option:\n{}\n"".format(npy4)); ; # You can read-out all objects from ROOT files since these are wrapped by PyROOT; # in the Python world. However, be aware that objects other than fundamental types,; # such as complex C++ objects and not int or float, are costly to read-out.; ROOT.gInterpreter.Declare(""""""; // Inject the C++ class CustomObject in the C++ runtime.; class CustomObject {; public:; int x = 42;; };; // Create a fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df026__AsNumpyArrays_8py.html:110,Load,Loading,110,doc/master/df026__AsNumpyArrays_8py.html,https://root.cern,https://root.cern/doc/master/df026__AsNumpyArrays_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df027_SQliteDependencyOverVersion.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df027_SQliteDependencyOverVersion.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Plot the ROOT downloads based on the version reading a remote sqlite3 file. ; This tutorial uses the Reduce method which allows to extract the minimum time stored in the SQlite3 database. The next step is to create a TH1F Histogram, which will be filled with the values stored in two different columns from the database. This procedure is simplified with a lambda expression that takes as parameters the values stored in the ""Time"" and ""Version"" columns.; ; ; void df027_SQliteDependencyOverVersion (); {; auto rdfb = ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT * FROM accesslog;"");; ; auto minTimeStr = *rdfb.Reduce([](std::string a, std::string b) {return std::min(a, b);}, ""Time"", std::string(""Z""));; ; std::cout << ""Minimum time is '"" << minTimeStr << ""'"" << std::endl;; ; double minTime = TDatime(minTimeStr.c_str()).Convert();; double maxTime = minTime + 3600.*24*365.25*4; // cover approx 4 years from minimal time; ; auto rdf = rdfb.Define(""datime"", [](const std::string &time){return TDatime(time.c_str()).Convert();}, {""Time""});; ; auto h614 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.14"");}, {""Version""}); .Histo1D({""h614"", ""Download time for version 6.14"", 64, minTime, maxTime}, {""datime""});; ; auto h616 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.16"");}, {""Version""}); .Histo1D({""h616"", ""Download time for version 6.16"", 64, minTime, maxTime}, {""datime""});; ; auto h618 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.18"");}, {""Version""}); .Histo1D({""h618"", ""Download time for version 6.18"", 64, minTime, maxTime}, {""datime""});; ; auto customize_histo = [](TH1D &histo) {; auto *xaxis = histo.GetXaxis();; xaxis->SetTimeDisplay(1);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C.html:123,Load,Loading,123,doc/master/df027__SQliteDependencyOverVersion_8C.html,https://root.cern,https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df027_SQliteDependencyOverVersion.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df027_SQliteDependencyOverVersion.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_dataframe; 3/// \notebook -js; 4/// Plot the ROOT downloads based on the version reading a remote sqlite3 file.; 5///; 6/// This tutorial uses the Reduce method which allows to extract the minimum time; 7/// stored in the SQlite3 database.; 8/// The next step is to create a TH1F Histogram, which will be filled with the values stored in; 9/// two different columns from the database. This procedure is simplified with a lambda; 10/// expression that takes as parameters the values stored in the ""Time"" and ""Version"" columns.; 11///; 12/// \macro_code; 13/// \macro_image; 14///; 15/// \date August 2018; 16/// \authors Alexandra-Maria Dobrescu, Sergey Linev; 17 ; 18 ; 19void df027_SQliteDependencyOverVersion (); 20{; 21 auto rdfb = ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT * FROM accesslog;"");; 22 ; 23 auto minTimeStr = *rdfb.Reduce([](std::string a, std::string b) {return std::min(a, b);}, ""Time"", std::string(""Z""));; 24 ; 25 std::cout << ""Minimum time is '"" << minTimeStr << ""'"" << std::endl;; 26 ; 27 double minTime = TDatime(minTimeStr.c_str()).Convert();; 28 double maxTime = minTime + 3600.*24*365.25*4; // cover approx 4 years from minimal time; 29 ; 30 auto rdf = rdfb.Define(""datime"", [](const std::string &time){return TDatime(time.c_str()).Convert();}, {""Time""});; 31 ; 32 auto h614 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.14"");}, {""Version""}); 33 .Histo1D({""h614"", ""Download time for version 6.14"", 64, minTime, maxTime}, {""datime""});; 34 ; 35 auto h616 = rdf.Filter([](const std::string &v){ return 0 == v.find(""6.16"");}, {""Version""}); 36 .Histo1D({""h616"", ""Download time for version 6.16"", 64, minTime, maxTime}, {""datime""});; 37 ; 38 auto h618 = rdf.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C_source.html:120,Load,Loading,120,doc/master/df027__SQliteDependencyOverVersion_8C_source.html,https://root.cern,https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df028_SQliteIPLocation.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df028_SQliteIPLocation.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Plot the location of ROOT downloads reading a remote sqlite3 file. ; The world map is held by a TH2Poly histogram which, after filling, will show the world wide dispersion of ROOT's users. To histogram filling, is done thanks to a lambda expression having as input parameters the two columns of the database: ""IPLongitude' - for the longitude, and the; ""IPLatitude"" - for the latitude.; The data related to the latitude and the longitude has been provided from the; log files storing the users IP.; This product includes GeoLite2 data created by MaxMind, available from; <a href=""http://www.maxmind.com"">http://www.maxmind.com.; ; void df028_SQliteIPLocation() {; ; auto rdf = ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT * FROM accesslog;"");; ; auto f = TFile::Open(""http://root.cern/files/WM.root"");; auto worldMap = f->Get<TH2Poly>(""WMUSA"");; ; auto fillIPLocation = [&worldMap] ( const std::string &sLongitude, const std::string &sLatitude ) {; if (!( sLongitude == """" ) && !( sLatitude == """" )) {; auto latitude = std::stof(sLatitude);; auto longitude = std::stof(sLongitude);; worldMap->Fill(longitude, latitude);; }; };; ; rdf.Foreach( fillIPLocation, { ""IPLongitude"", ""IPLatitude"" } );; ; auto worldMapCanvas = new TCanvas();; worldMapCanvas->SetLogz();; worldMap->SetTitle(""ROOT Downloads per Location (GitHub excluded);Longitude;Latitude"");; worldMap->DrawClone(""colz"");; }; f#define f(i)Definition RSha256.hxx:104; TCanvasThe Canvas class.Definition TCanvas.h:23; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TH2Poly2D Hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df028__SQliteIPLocation_8C.html:112,Load,Loading,112,doc/master/df028__SQliteIPLocation_8C.html,https://root.cern,https://root.cern/doc/master/df028__SQliteIPLocation_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df029_SQlitePlatformDistribution.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df029_SQlitePlatformDistribution.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use RDataFrame to display data about ROOT downloads. ; In order to display the Platform Distribution of ROOT, we choose to create two TH1F histograms: one that includes all types of platforms, other filtering and classifying them. This procedure is using a lambda expression taking as parameter the values stored in the ""Platform"" column from the database. At the end, the histograms are filled with their specific demand regarding the platform's type.; ; void df029_SQlitePlatformDistribution() {; ; auto rdf = ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT * FROM accesslog;"");; ; TH1F hRootPlatform(""hrootPlatform"", ""Platform Distribution"", 7, 0, -1);; TH1F hShortRootPlatform(""hShortRootPlatform"", ""Short Platform Distribution"", 7, 0, -1);; ; auto fillRootPlatform = [&hRootPlatform, &hShortRootPlatform] ( const std::string &platform ) {; TString Platform = platform;; TString Platform_0(Platform(0,5));; TString Platform_1(Platform(0,6));; TString Platform_2(Platform(0,8));; ; if ( Platform.Contains(""win32"") ){; hShortRootPlatform.Fill(Platform_0,1);; } else if ( Platform.Contains(""Linux"") ){; hShortRootPlatform.Fill(Platform_0,1);; } else if ( Platform.Contains(""source"") ){; hShortRootPlatform.Fill(Platform_1,1);; } else if ( Platform.Contains(""macosx64"") ){; hShortRootPlatform.Fill(Platform_2,1);; } else if ( Platform.Contains(""IRIX64"") ){; hShortRootPlatform.Fill(Platform_1,1);; }; ; hRootPlatform.Fill(Platform,1);; };; ; rdf.Foreach( fillRootPlatform, { ""Platform"" } );; ; auto c1 = new TCanvas();; c1->SetLogy(1);; hRootPlatform.GetXaxis()->LabelsOption(""a"");; hRootPlatform.LabelsDeflate(""X"");; hRootPlatform.DrawClone();; ; auto c2 = new TCanvas();; hShortRootPlatform.GetXaxis(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df029__SQlitePlatformDistribution_8C.html:122,Load,Loading,122,doc/master/df029__SQlitePlatformDistribution_8C.html,https://root.cern,https://root.cern/doc/master/df029__SQlitePlatformDistribution_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df030_SQliteVersionsOfROOT.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df030_SQliteVersionsOfROOT.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Read an sqlite3 databases with RDataFrame and plot statistics on ROOT downloads. ; Plot the downloads of different ROOT versions reading a remote sqlite3 file with RSqliteDS. Then a TH1F histogram is created and filled using a lambda expression which receives the recorded values in the ""version"" column of the sqlite3 database. The histogram shows the usage of the ROOT development version.; ; void df030_SQliteVersionsOfROOT() {; ; auto rdf =; ROOT::RDF::FromSqlite(""http://root.cern/files/root_download_stats.sqlite"", ""SELECT Version FROM accesslog;"");; ; TH1F hVersionOfRoot(""hVersionOfRoot"", ""Development Versions of ROOT"", 8, 0, -1);; ; auto fillVersionHisto = [&hVersionOfRoot] (const std::string &version) {; TString copyVersion = version;; TString shortVersion(copyVersion(0,4));; hVersionOfRoot.Fill(shortVersion, 1);; };; ; rdf.Foreach( fillVersionHisto, { ""Version"" } );; ; auto VersionOfRootHistogram = new TCanvas();; ; gStyle->SetOptStat(0);; hVersionOfRoot.GetXaxis()->LabelsOption(""a"");; hVersionOfRoot.LabelsDeflate(""X"");; hVersionOfRoot.DrawClone("""");; }; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TStringBasic string class.Definition TString.h:139; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; ROOT::RDF::FromSqliteRDataFrame FromSqlite(std::string_view fileName, std::string_view query)Factory method to create a SQlite RDataFrame.Definition RSqliteDS.cxx:538; . DateAugust 2018 ; AuthorAlexandra-Maria Dobrescu ; Definition in file df030_SQli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df030__SQliteVersionsOfROOT_8C.html:116,Load,Loading,116,doc/master/df030__SQliteVersionsOfROOT_8C.html,https://root.cern,https://root.cern/doc/master/df030__SQliteVersionsOfROOT_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df031_Stats.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df031_Stats.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Stats action to extract the statistics of a column. ; Extract the statistics relative to RDataFrame columns and store them in TStatistic instances.; ; void df031_Stats() {; ; // Create a data frame and add two columns: one for the values and one for the weight.; ROOT::RDataFrame r(256);; auto rr = r.Define(""v"", [](ULong64_t e){return e;}, {""rdfentry_""}); .Define(""w"", [](ULong64_t e){return 1./(e+1);}, {""v""});; ; // Now extract the statistics, weighted, unweighted - with and without explicit types.; auto stats_eu = rr.Stats<ULong64_t>(""v"");; auto stats_ew = rr.Stats<ULong64_t, double>(""v"", ""w"");; auto stats_iu = rr.Stats(""v"");; auto stats_iw = rr.Stats(""v"", ""w"");; ; // Now print them: they are all identical of course!; stats_eu->Print();; stats_ew->Print();; stats_iu->Print();; stats_iw->Print();; }; e#define e(i)Definition RSha256.hxx:103; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; df031_StatsDefinition df031_Stats.py:1; ; OBJ: TStatistic Mean = 127.5 +- 4.628 RMS = 74.045 Count = 256 Min = 0 Max = 255; OBJ: TStatistic Mean = 40.8 +- 12.86 RMS = 60.318 Count = 256 Min = 0 Max = 255; OBJ: TStatistic Mean = 127.5 +- 4.628 RMS = 74.045 Count = 256 Min = 0 Max = 255; OBJ: TStatistic Mean = 40.8 +- 12.86 RMS = 60.318 Count = 256 Min = 0 Max = 255; DateApril 2019 ; AuthorDanilo Piparo (CERN) ; Definition in file df031_Stats.C. tutorialsda",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df031__Stats_8C.html:101,Load,Loading,101,doc/master/df031__Stats_8C.html,https://root.cern,https://root.cern/doc/master/df031__Stats_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df031_Stats.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df031_Stats.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Use the Stats action to extract the statistics of a column. ; Extract the statistics relative to RDataFrame columns and store them in TStatistic instances.; ; import ROOT; ; # Create a data frame and add two columns: one for the values and one for the weight.; r = ROOT.RDataFrame(256);; rr = r.Define(""v"", ""rdfentry_"")\; .Define(""w"", ""return 1./(v+1)""); ; # Now extract the statistics, weighted, unweighted; stats_iu = rr.Stats(""v""); stats_iw = rr.Stats(""v"", ""w""); ; # Now print them: they are all identical of course!; stats_iu.Print(); stats_iw.Print(); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; OBJ: TStatistic Mean = 127.5 +- 4.628 RMS = 74.045 Count = 256 Min = 0 Max = 255; OBJ: TStatistic Mean = 40.8 +- 12.86 RMS = 60.318 Count = 256 Min = 0 Max = 255; DateApril 2019 ; AuthorDanilo Piparo (CERN) ; Definition in file df031_Stats.py. tutorialsdataframedf031_Stats.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df031__Stats_8py.html:102,Load,Loading,102,doc/master/df031__Stats_8py.html,https://root.cern,https://root.cern/doc/master/df031__Stats_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df032_RDFFromNumpy.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df032_RDFFromNumpy.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Read data from Numpy arrays into RDataFrame. ; ; import ROOT; import numpy as np; ; # Let's create some data in numpy arrays; x = np.array([1, 2, 3], dtype=np.int32); y = np.array([4, 5, 6], dtype=np.float64); ; # Read the data with RDataFrame; # The column names in the RDataFrame are defined by the keys of the dictionary.; # Please note that only fundamental types (int, float, ...) are supported and; # the arrays must have the same length.; df = ROOT.RDF.FromNumpy({'x': x, 'y': y}); ; # You can now use the RDataFrame as usually, e.g. add a column ...; df = df.Define('z', 'x + y'); ; # ... or print the content; df.Display().Print(); ; # ... or save the data as a ROOT file; df.Snapshot('tree', 'df032_RDFFromNumpy.root'); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59; +-----+---+----------+----------+; | Row | x | y | z | ; +-----+---+----------+----------+; | 0 | 1 | 4.000000 | 5.000000 | ; +-----+---+----------+----------+; | 1 | 2 | 5.000000 | 7.000000 | ; +-----+---+----------+----------+; | 2 | 3 | 6.000000 | 9.000000 | ; +-----+---+----------+----------+; DateMarch 2021 ; AuthorStefan Wunsch (KIT, CERN) ; Definition in file df032_RDFFromNumpy.py. tutorialsdataframedf032_RDFFromNumpy.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df032__RDFFromNumpy_8py.html:109,Load,Loading,109,doc/master/df032__RDFFromNumpy_8py.html,https://root.cern,https://root.cern/doc/master/df032__RDFFromNumpy_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df032_RDFFromNumpy.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df032_RDFFromNumpy.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_dataframe; 3## \notebook; 4## Read data from Numpy arrays into RDataFrame.; 5##; 6## \macro_code; 7## \macro_output; 8##; 9## \date March 2021; 10## \author Stefan Wunsch (KIT, CERN); 11 ; 12import ROOT; 13import numpy as np; 14 ; 15# Let's create some data in numpy arrays; 16x = np.array([1, 2, 3], dtype=np.int32); 17y = np.array([4, 5, 6], dtype=np.float64); 18 ; 19# Read the data with RDataFrame; 20# The column names in the RDataFrame are defined by the keys of the dictionary.; 21# Please note that only fundamental types (int, float, ...) are supported and; 22# the arrays must have the same length.; 23df = ROOT.RDF.FromNumpy({'x': x, 'y': y}); 24 ; 25# You can now use the RDataFrame as usually, e.g. add a column ...; 26df = df.Define('z', 'x + y'); 27 ; 28# ... or print the content; 29df.Display().Print(); 30 ; 31# ... or save the data as a ROOT file; 32df.Snapshot('tree', 'df032_RDFFromNumpy.root'); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59. tutorialsdataframedf032_RDFFromNumpy.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df032__RDFFromNumpy_8py_source.html:106,Load,Loading,106,doc/master/df032__RDFFromNumpy_8py_source.html,https://root.cern,https://root.cern/doc/master/df032__RDFFromNumpy_8py_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df033_Describe.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df033_Describe.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Get information about the dataframe with the convenience method Describe. ; ; import ROOT; ; # Create a dataframe; path = 'root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root'; df = ROOT.RDataFrame('Events', path); ; # Describe the state of the dataframe.; # Note that this operation is not running the event loop.; # Describe returns a DFDescription object, which has e.g. a Print method. See its docs for more information.; df.Describe().Print(); ; # Build a small analysis studying the invariant mass of dimuon systems.; # See tutorial df102_NanoAODDimuonAnalysis for more information.; df = df.Filter('nMuon == 2')\; .Filter('Muon_charge[0] != Muon_charge[1]')\; .Define('Dimuon_mass', 'InvariantMass(Muon_pt, Muon_eta, Muon_phi, Muon_mass)')\; .Filter('Dimuon_mass > 70')\; .Range(1000); ; # Trigger the event loop by asking for the mean of the dimuon mass.; print('\nApproximate mass of the Z boson: {:.2f} GeV\n'.format(; df.Mean('Dimuon_mass').GetValue())); ; # This time we ask for the `shortFormat`, which only prints a brief description of the dataset:; df.Describe().Print(shortFormat=True); formatOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df033__Describe_8py.html:105,Load,Loading,105,doc/master/df033__Describe_8py.html,https://root.cern,https://root.cern/doc/master/df033__Describe_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df034_SaveGraph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df034_SaveGraph.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Basic SaveGraph usage. ; This tutorial shows how to use the SaveGraph action. SaveGraph inspects the sequence of RDataFrame actions.; ; // First, an RDataFrame computation graph is created with Defines, Filters and methods such as Mean, Count, etc.; // After that, SaveGraph can be called either on the root RDataFrame object or on a specific node of the computation; // graph: in the first case, the graph returned will span the full computation graph, in the second case it will show; // only the branch of the computation graph that the node belongs to.; // If a filename is passed as second argument, the graph is saved to that file, otherwise it is returned as a string.; ; void df034_SaveGraph(); {; ROOT::RDataFrame rd1(1);; auto rd2 = rd1.Define(""Root_def1"", ""1"").Filter(""Root_def1 < 2"", ""Main_Filter"").Define(""Root_def2"", ""1"");; ; auto branch1 = rd2.Define(""Branch_1_def"", ""1"");; auto branch2 = rd2.Define(""Branch_2_def"", ""1"");; ; ROOT::RDF::RResultPtr<double> branch1_1 = branch1.Filter(""Branch_1_def < 2"", ""Filter_1""); .Define(""Branch_1_1_def"", ""1""); .Filter(""1 == Branch_1_1_def % 2"", ""Filter_1_1""); .Mean(""Branch_1_1_def"");; ; ROOT::RDF::RResultPtr<unsigned long long> branch1_2 =; branch1.Define(""Branch_1_2_def"", ""1"").Filter(""Branch_1_2_def < 2"", ""Filter_1_2"").Count();; ; ROOT::RDF::RResultPtr<double> branch2_1 = branch2.Filter(""Branch_2_def < 2"", ""Filter_2""); .Define(""Branch_2_1_def"", ""1""); .Define(""Branch_2_2_def"", ""1""); .Filter(""1 == Branch_2_1_def % 2"", ""Filter_2_1""); .Max(""Branch_2_1_def"");; ; ROOT::RDF::RResultPtr<unsigned long long> branch2_2 = branch2.Count();; ; std::cout << ROOT::RDF::SaveGraph(branch1_1);; ROOT::RDF::SaveGraph(rd1, /*output_file=*/""rdf_savegraph_tutorial.dot"");; // SaveGraph produces content in the standard DOT file fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df034__SaveGraph_8C.html:105,Load,Loading,105,doc/master/df034__SaveGraph_8C.html,https://root.cern,https://root.cern/doc/master/df034__SaveGraph_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df034_SaveGraph.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df034_SaveGraph.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Basic SaveGraph usage. ; This tutorial shows how to use the SaveGraph action. SaveGraph inspects the sequence of RDataFrame actions.; ; # First, an RDataFrame computation graph is created with Defines, Filters and methods such as Mean, Count, etc.; # After that, SaveGraph can be called either on the root RDataFrame object or on a specific node of the computation; # graph: in the first case, the graph returned will span the full computation graph, in the second case it will show; # only the branch of the computation graph that the node belongs to.; # If a filename is passed as second argument, the graph is saved to that file, otherwise it is returned as a string.; ; import ROOT; ; rd1 = ROOT.RDataFrame(2); ; rd2 = rd1.Define(""Root_def1"", ""1"") \; .Filter(""Root_def1 < 2"", ""Main_Filter"") \; .Define(""Root_def2"", ""1""); ; branch1 = rd2.Define(""Branch_1_def"", ""1""); branch2 = rd2.Define(""Branch_2_def"", ""1""); ; branch1_1 = branch1.Filter(""Branch_1_def < 2"", ""Filter_1"") \; .Define(""Branch_1_1_def"", ""1"") \; .Filter(""1 == Branch_1_1_def % 2"", ""Filter_1_1"") \; .Mean(""Branch_1_1_def"");; ; branch1_2 = branch1.Define(""Branch_1_2_def"", ""1"") \; .Filter(""Branch_1_2_def < 2"", ""Filter_1_2"") \; .Count(); ; branch2_1 = branch2.Filter(""Branch_2_def < 2"", ""Filter_2"") \; .Define(""Branch_2_1_def"", ""1"") \; .Define(""Branch_2_2_def"", ""1"") \; .Filter(""1 == Branch_2_1_def % 2"", ""Filter_2_1"") \; .Max(""Branch_2_1_def""); ; branch2_2 = branch2.Count(); ; print(ROOT.RDF.SaveGraph(branch1_1)); ROOT.RDF.SaveGraph(rd1, ""exampleGraph.dot""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOT::RDF::SaveGraphstd::string SaveGraph(NodeType node)Create a graphviz representation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df034__SaveGraph_8py.html:106,Load,Loading,106,doc/master/df034__SaveGraph_8py.html,https://root.cern,https://root.cern/doc/master/df034__SaveGraph_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df035_RDFFromPandas.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df035_RDFFromPandas.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Read data from Pandas Data Frame into RDataFrame. ; ; import ROOT; import pandas as pd; ; # Let's create some data in a pandas dataframe; pdf = pd.DataFrame({'x': [1, 2, 3], 'y': [4, 5, 6]}); ; # Convert the Pandas DataFrame to RDataFrame; # The column names are directly copied to the RDF ; # Please note that only fundamental types (int, float, ...) are supported and; # the arrays must have the same length.; df = ROOT.RDF.FromPandas(pdf); ; # You can now use the RDataFrame as usually, e.g. add a column ...; df = df.Define('z', 'x + y'); ; # ... or print the content; df.Display().Print(); ; # ... or save the data as a ROOT file; df.Snapshot('tree', 'df035_RDFFromPandas.root'); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59; +-----+---+---+---+; | Row | x | y | z | ; +-----+---+---+---+; | 0 | 1 | 4 | 5 | ; +-----+---+---+---+; | 1 | 2 | 5 | 7 | ; +-----+---+---+---+; | 2 | 3 | 6 | 9 | ; +-----+---+---+---+; DateFebruary 2024 ; AuthorPere Mato (CERN) ; Definition in file df035_RDFFromPandas.py. tutorialsdataframedf035_RDFFromPandas.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df035__RDFFromPandas_8py.html:110,Load,Loading,110,doc/master/df035__RDFFromPandas_8py.html,https://root.cern,https://root.cern/doc/master/df035__RDFFromPandas_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df036_missingBranches.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df036_missingBranches.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; ; This example shows how to process a dataset where entries might be incomplete due to one or more missing branches in one or more of the files in the dataset. It shows usage of the FilterAvailable and DefaultValueFor RDataFrame functionalities to act upon the missing entries.; #include <ROOT/RDataFrame.hxx>; #include <TChain.h>; #include <TFile.h>; #include <TTree.h>; ; #include <iostream>; #include <numeric>; ; // A helper class to create the dataset for the tutorial below.; struct Dataset {; ; constexpr static std::array<const char *, 3> fFileNames{""df036_missingBranches_C_file_1.root"",; ""df036_missingBranches_C_file_2.root"",; ""df036_missingBranches_C_file_3.root""};; constexpr static std::array<const char *, 3> fTreeNames{""tree_1"", ""tree_2"", ""tree_3""};; constexpr static auto fTreeEntries{5};; ; Dataset(); {; {; TFile f(fFileNames[0], ""RECREATE"");; TTree t(fTreeNames[0], fTreeNames[0]);; int x{};; int y{};; t.Branch(""x"", &x, ""x/I"");; t.Branch(""y"", &y, ""y/I"");; for (int i = 1; i <= fTreeEntries; i++) {; x = i;; y = 2 * i;; t.Fill();; }; ; t.Write();; }; ; {; TFile f(fFileNames[1], ""RECREATE"");; TTree t(fTreeNames[1], fTreeNames[1]);; int y{};; t.Branch(""y"", &y, ""y/I"");; for (int i = 1; i <= fTreeEntries; i++) {; y = 3 * i;; t.Fill();; }; ; t.Write();; }; ; {; TFile f(fFileNames[2], ""RECREATE"");; TTree t(fTreeNames[2], fTreeNames[2]);; int x{};; t.Branch(""x"", &x, ""x/I"");; for (int i = 1; i <= fTreeEntries; i++) {; x = 4 * i;; t.Fill();; }; ; t.Write();; }; }; ; ~Dataset(); {; for (auto &&fileName : fFileNames); std::remove(fileName);; }; };; ; void df036_missingBranches(); {; // Create the example dataset. Three files are created with one TTree each.; // The first contains branches (x, y), the second only branch y, the third; // ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df036__missingBranches_8C.html:111,Load,Loading,111,doc/master/df036__missingBranches_8C.html,https://root.cern,https://root.cern/doc/master/df036__missingBranches_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df037_TTreeEventMatching.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df037_TTreeEventMatching.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; ; This example shows processing of a TTree-based dataset with horizontal concatenations (friends) and event matching (based on TTreeIndex). In case the current event being processed does not match one (or more) of the friend datasets, one can use the FilterAvailable and DefaultValueFor functionalities to act upon the situation.; #include <TChain.h>; #include <TFile.h>; #include <TTree.h>; #include <TTreeIndex.h>; ; #include <ROOT/RDataFrame.hxx>; ; #include <iostream>; #include <numeric>; ; // A helper class to create the dataset for the tutorial below.; struct Dataset {; ; constexpr static auto fMainFile{""df037_TTreeEventMatching_C_main.root""};; constexpr static auto fAuxFile1{""df037_TTreeEventMatching_C_aux_1.root""};; constexpr static auto fAuxFile2{""df037_TTreeEventMatching_C_aux_2.root""};; constexpr static auto fMainTreeName{""events""};; constexpr static auto fAuxTreeName1{""auxdata_1""};; constexpr static auto fAuxTreeName2{""auxdata_2""};; ; Dataset(); {; {; TFile f(fMainFile, ""RECREATE"");; TTree mainTree(fMainTreeName, fMainTreeName);; int idx;; int x;; mainTree.Branch(""idx"", &idx, ""idx/I"");; mainTree.Branch(""x"", &x, ""x/I"");; ; idx = 1;; x = 1;; mainTree.Fill();; idx = 2;; x = 2;; mainTree.Fill();; idx = 3;; x = 3;; mainTree.Fill();; ; mainTree.Write();; }; {; // The first auxiliary file has matching indices 1 and 2, but not 3; TFile f(fAuxFile1, ""RECREATE"");; TTree auxTree(fAuxTreeName1, fAuxTreeName1);; int y;; int idx;; auxTree.Branch(""idx"", &idx, ""idx/I"");; auxTree.Branch(""y"", &y, ""y/I"");; ; idx = 1;; y = 4;; auxTree.Fill();; idx = 2;; y = 5;; auxTree.Fill();; ; auxTree.Write();; }; {; // The second auxiliary file has matching indices 1 and 3, but not 2; TFile f(fAuxFile2, ""RECREATE"");; TTree auxTree(fAuxTreeName2, fA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df037__TTreeEventMatching_8C.html:114,Load,Loading,114,doc/master/df037__TTreeEventMatching_8C.html,https://root.cern,https://root.cern/doc/master/df037__TTreeEventMatching_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df101_h1Analysis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df101_h1Analysis.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how to express ROOT's standard H1 analysis with RDataFrame. ; ; auto Select = [](ROOT::RDataFrame &dataFrame) {; using namespace ROOT;; ; auto ret = dataFrame.Filter(""TMath::Abs(md0_d - 1.8646) < 0.04""); .Filter(""ptds_d > 2.5""); .Filter(""TMath::Abs(etads_d) < 1.5""); .Filter([](int ik, int ipi, RVecI& nhitrp) { return nhitrp[ik - 1] * nhitrp[ipi - 1] > 1; },; {""ik"", ""ipi"", ""nhitrp""}); .Filter([](int ik, RVecF& rstart, RVecF& rend) { return rend[ik - 1] - rstart[ik - 1] > 22; },; {""ik"", ""rstart"", ""rend""}); .Filter([](int ipi, RVecF& rstart, RVecF& rend) { return rend[ipi - 1] - rstart[ipi - 1] > 22; },; {""ipi"", ""rstart"", ""rend""}); .Filter([](int ik, RVecF& nlhk) { return nlhk[ik - 1] > 0.1; }, {""ik"", ""nlhk""}); .Filter([](int ipi, RVecF& nlhpi) { return nlhpi[ipi - 1] > 0.1; }, {""ipi"", ""nlhpi""}); .Filter([](int ipis, RVecF& nlhpi) { return nlhpi[ipis - 1] > 0.1; }, {""ipis"", ""nlhpi""}); .Filter(""njets >= 1"");; ; return ret;; };; ; const Double_t dxbin = (0.17 - 0.13) / 40; // Bin-width; ; Double_t fdm5(Double_t *xx, Double_t *par); {; Double_t x = xx[0];; if (x <= 0.13957); return 0;; Double_t xp3 = (x - par[3]) * (x - par[3]);; Double_t res =; dxbin * (par[0] * pow(x - 0.13957, par[1]) + par[2] / 2.5066 / par[4] * exp(-xp3 / 2 / par[4] / par[4]));; return res;; }; ; Double_t fdm2(Double_t *xx, Double_t *par); {; static const Double_t sigma = 0.0012;; Double_t x = xx[0];; if (x <= 0.13957); return 0;; Double_t xp3 = (x - 0.1454) * (x - 0.1454);; Double_t res = dxbin * (par[0] * pow(x - 0.13957, 0.25) + par[1] / 2.5066 / sigma * exp(-xp3 / 2 / sigma / sigma));; return res;; }; ; void FitAndPlotHdmd(TH1 &hdmd); {; // create the canvas for the h1analysis fit; gStyle->SetOptFit();; auto c1 = new TCanvas(""c1"", ""h1analysis analysis"", 10, 10, 800",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df101__h1Analysis_8C.html:106,Load,Loading,106,doc/master/df101__h1Analysis_8C.html,https://root.cern,https://root.cern/doc/master/df101__h1Analysis_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df102_NanoAODDimuonAnalysis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df102_NanoAODDimuonAnalysis.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how NanoAOD files can be processed with RDataFrame. ; This tutorial illustrates how NanoAOD files can be processed with ROOT dataframes. The NanoAOD-like input files are filled with 66 mio. events from CMS OpenData containing muon candidates part of 2012 dataset (DOI: 10.7483/OPENDATA.CMS.YLIC.86ZZ and DOI: 10.7483/OPENDATA.CMS.M5AD.Y3V3). The macro matches muon pairs and produces an histogram of the dimuon mass spectrum showing resonances up to the Z mass. Note that the bump at 30 GeV is not a resonance but a trigger effect.; More details about the dataset can be found on the CERN Open Data portal. ; #include ""ROOT/RDataFrame.hxx""; #include ""ROOT/RDFHelpers.hxx""; #include ""ROOT/RVec.hxx""; #include ""TCanvas.h""; #include ""TH1D.h""; #include ""TLatex.h""; #include ""TStyle.h""; ; using namespace ROOT::VecOps;; ; void df102_NanoAODDimuonAnalysis(); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; // Create dataframe from NanoAOD files; ROOT::RDataFrame df(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/""; ""Run2012BC_DoubleMuParked_Muons.root"");; ; // Add ProgressBar; ROOT::RDF::Experimental::AddProgressBar(df);; ; // For simplicity, select only events with exactly two muons and require opposite charge; auto df_2mu = df.Filter(""nMuon == 2"", ""Events with exactly two muons"");; auto df_os = df_2mu.Filter(""Muon_charge[0] != Muon_charge[1]"", ""Muons with opposite charge"");; ; // Compute invariant mass of the dimuon system; auto df_mass = df_os.Define(""Dimuon_mass"", InvariantMass<float>, {""Muon_pt"", ""Muon_eta"", ""Muon_phi"", ""Muon_mass""});; ; // Make histogram of dimuon mass spectrum. Note how we can set title and axis labels in one go; auto h = df_mass.Histo1D({""Dimuon_mass"", """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8C.html:117,Load,Loading,117,doc/master/df102__NanoAODDimuonAnalysis_8C.html,https://root.cern,https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df102_NanoAODDimuonAnalysis.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df102_NanoAODDimuonAnalysis.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Show how NanoAOD files can be processed with RDataFrame. ; This tutorial illustrates how NanoAOD files can be processed with ROOT dataframes. The NanoAOD-like input files are filled with 66 mio. events from CMS OpenData containing muon candidates part of 2012 dataset (DOI: 10.7483/OPENDATA.CMS.YLIC.86ZZ and DOI: 10.7483/OPENDATA.CMS.M5AD.Y3V3). The macro matches muon pairs and produces an histogram of the dimuon mass spectrum showing resonances up to the Z mass. Note that the bump at 30 GeV is not a resonance but a trigger effect.; More details about the dataset can be found on the CERN Open Data portal. ; import ROOT; ; # Enable multi-threading; ROOT.ROOT.EnableImplicitMT(); ; # Create dataframe from NanoAOD files; df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""); ; # For simplicity, select only events with exactly two muons and require opposite charge; df_2mu = df.Filter(""nMuon == 2"", ""Events with exactly two muons""); df_os = df_2mu.Filter(""Muon_charge[0] != Muon_charge[1]"", ""Muons with opposite charge""); ; # Compute invariant mass of the dimuon system; df_mass = df_os.Define(""Dimuon_mass"", ""InvariantMass(Muon_pt, Muon_eta, Muon_phi, Muon_mass)""); ; # Make histogram of dimuon mass spectrum. Note how we can set titles and axis labels in one go.; h = df_mass.Histo1D((""Dimuon_mass"", ""Dimuon mass;m_{#mu#mu} (GeV);N_{Events}"", 30000, 0.25, 300), ""Dimuon_mass""); ; # Request cut-flow report; report = df_mass.Report(); ; # Produce plot; ROOT.gStyle.SetOptStat(0); ROOT.gStyle.SetTextFont(42); c = ROOT.TCanvas(""c"", """", 800, 700); c.SetLogx(); c.SetLogy(); ; h.SetTitle(""""); h.GetXaxis().SetTitleSize(0.04); h.GetY",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8py.html:118,Load,Loading,118,doc/master/df102__NanoAODDimuonAnalysis_8py.html,https://root.cern,https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8py.html,2,"['Load', 'multi-thread']","['Loading', 'multi-threading']"
Performance,". ROOT: tutorials/dataframe/df103_NanoAODHiggsAnalysis.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df103_NanoAODHiggsAnalysis.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; An example of complex analysis with RDataFrame: reconstructing the Higgs boson. ; This tutorial is a simplified but yet complex example of an analysis reconstructing the Higgs boson decaying to two Z bosons from events with four leptons. The data and simulated events are taken from CERN OpenData representing a subset of the data recorded in 2012 with the CMS detector at the LHC. The tutorials follows the Higgs to four leptons analysis published on CERN Open Data portal (10.7483/OPENDATA.CMS.JKB8.RR42). The resulting plots show the invariant mass of the selected four lepton systems in different decay modes (four muons, four electrons and two of each kind) and in a combined plot indicating the decay of the Higgs boson with a mass of about 125 GeV.; The following steps are performed for each sample with data and simulated events in order to reconstruct the Higgs boson from the selected muons and electrons:; Select interesting events with multiple cuts on event properties, e.g., number of leptons, kinematics of the leptons and quality of the tracks.; Reconstruct two Z bosons of which only one on the mass shell from the selected events and apply additional cuts on the reconstructed objects.; Reconstruct the Higgs boson from the remaining Z boson candidates and calculate its invariant mass. The tutorial has the fast mode enabled by default, which reads the data from already skimmed datasets with a total size of only 51MB. If the fast mode is disabled, the tutorial runs over the full dataset with a size of 12GB. ; #include ""ROOT/RDataFrame.hxx""; #include ""ROOT/RDFHelpers.hxx""; #include ""ROOT/RVec.hxx""; #include ""ROOT/RDF/RInterface.hxx""; #include ""TCanvas.h""; #include ""TH1D.h""; #include ""TLatex.h""; #include ""TLegend.h""; #inclu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8C.html:116,Load,Loading,116,doc/master/df103__NanoAODHiggsAnalysis_8C.html,https://root.cern,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df103_NanoAODHiggsAnalysis.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df103_NanoAODHiggsAnalysis.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; An example of complex analysis with RDataFrame: reconstructing the Higgs boson. ; This tutorial is a simplified but yet complex example of an analysis reconstructing the Higgs boson decaying to two Z bosons from events with four leptons. The data and simulated events are taken from CERN OpenData representing a subset of the data recorded in 2012 with the CMS detector at the LHC. The tutorials follows the Higgs to four leptons analysis published on CERN Open Data portal (10.7483/OPENDATA.CMS.JKB8.RR42). The resulting plots show the invariant mass of the selected four lepton systems in different decay modes (four muons, four electrons and two of each kind) and in a combined plot indicating the decay of the Higgs boson with a mass of about 125 GeV.; The following steps are performed for each sample with data and simulated events in order to reconstruct the Higgs boson from the selected muons and electrons:; Select interesting events with multiple cuts on event properties, e.g., number of leptons, kinematics of the leptons and quality of the tracks.; Reconstruct two Z bosons of which only one on the mass shell from the selected events and apply additional cuts on the reconstructed objects.; Reconstruct the Higgs boson from the remaining Z boson candidates and calculate its invariant mass. Another aim of this version of the tutorial is to show a way to blend C++ and Python code. All the functions that make computations on data to define new columns or filter existing ones in a precise way, better suited to be written in C++, have been moved to a header that is then declared to the ROOT C++ interpreter. The functions that instead create nodes of the computational graph (e.g. Filter, Define) remain inside the ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8py.html:117,Load,Loading,117,doc/master/df103__NanoAODHiggsAnalysis_8py.html,https://root.cern,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df103_NanoAODHiggsAnalysis_python.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df103_NanoAODHiggsAnalysis_python.h File ReferenceTutorials » Dataframe tutorials. Detailed Description; Header file with functions needed to execute the Python version of the NanoAOD Higgs tutorial. ; The header is declared to the ROOT C++ interpreter prior to the start of the analysis via the ROOT.gInterpreter.Declare() function.; DateJuly 2019 ; AuthorsStefan Wunsch (KIT, CERN), Vincenzo Eduardo Padulano (UniMiB, CERN) ; Definition in file df103_NanoAODHiggsAnalysis_python.h. tutorialsdataframedf103_NanoAODHiggsAnalysis_python.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis__python_8h.html:123,Load,Loading,123,doc/master/df103__NanoAODHiggsAnalysis__python_8h.html,https://root.cern,https://root.cern/doc/master/df103__NanoAODHiggsAnalysis__python_8h.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df104_HiggsToTwoPhotons.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df104_HiggsToTwoPhotons.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame. ; This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare, the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent reconstruction and identification efficiency of photons at the ATLAS experiment.; The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data. ; import ROOT; import os; ; # Enable multi-threading; ROOT.ROOT.EnableImplicitMT(); ; # Create a ROOT dataframe for each dataset; path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22""; df = {}; df[""data""] = ROOT.RDataFrame(""mini"", (os.path.join(path, ""GamGam/Data/data_{}.GamGam.root"".format(x)) for x in (""A"", ""B"", ""C"", ""D""))); df[""ggH""] = ROOT.RDataFrame(""mini"", os.path.join(path, ""GamGam/MC/mc_343981.ggH125_gamgam.GamGam.root"")); df[""VBF""] = ROOT.RDataFrame(""mini"", os.path.join(path, ""GamGam/MC/mc_345041.VBFH125_gamgam.GamGam.root"")); processes = list(df.keys()); ; # Apply scale factors and MC weight for simulated events and a weight of 1 for the data; for p in [""ggH"", ""VBF""]:; df[p] = df[p].Define(""weight"",; ""scaleFactor_PHOTON * scaleFactor_PhotonTRIGGER * scaleFactor_PILEUP * mcWeight"");; df[""data""] = df[""data""].Define(""weight"", ""1.0""); ; # Select the events for the analysis; for p in processes:; # Apply preselection cut on photon trigger; df[p] = df[p].Filter(""trigP""); ; # Find two good muons with tight ID, pt > 25 GeV an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df104__HiggsToTwoPhotons_8py.html:114,Load,Loading,114,doc/master/df104__HiggsToTwoPhotons_8py.html,https://root.cern,https://root.cern/doc/master/df104__HiggsToTwoPhotons_8py.html,2,"['Load', 'multi-thread']","['Loading', 'multi-threading']"
Performance,". ROOT: tutorials/dataframe/df105_WBosonAnalysis.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df105_WBosonAnalysis.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame. ; This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data. By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with the –full-dataset argument and you can also run only on a fraction of the original dataset using the argument –lumi-scale.; See the corresponding spec json file. ; import ROOT; import sys; import json; import argparse; import os; ; # Argument parsing; parser = argparse.ArgumentParser(); parser.add_argument(""--lumi-scale"", type=float, default=0.001,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); if 'df105_WBosonAnalysis.py' in sys.argv[0]:; # Script; args = parser.parse_args(); else:; # Notebook; args = parser.parse_args(args=[]); ; if args.b: ROOT.gROOT.SetBatch(Tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df105__WBosonAnalysis_8py.html:111,Load,Loading,111,doc/master/df105__WBosonAnalysis_8py.html,https://root.cern,https://root.cern/doc/master/df105__WBosonAnalysis_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df106_HiggsToFourLeptons.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df106_HiggsToFourLeptons.C File ReferenceTutorials » Dataframe tutorials. Detailed Description; The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame. ; This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads to a narrow invariant mass peak on top a relatively smooth and small background, revealing the Higgs at 125 GeV. The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; Lepton selection efficiency corrections (""scale factors"") are applied to simulated samples to correct for the differences in the trigger, reconstruction, and identification efficiencies in simulation compared to real data. Systematic uncertainties for those scale factors are evaluated and the Vary function of RDataFrame is used to propagate the variations to the final four leptons mass distribution.; See the corresponding spec json file.; ; #include ""TInterpreter.h""; #include <Math/Vector4D.h>; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RVec.hxx>; #include <TCanvas.h>; #include <TGraph.h>; #include <TH1D.h>; #include <THStack.h>; #include <TLatex.h>; #include <TLegend.h>; #include <TProfile.h>; #include <TStyle.h>; ; using namespace ROOT::VecOps;; using PtEtaPhiEVectorF = ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<float>>;; using ROOT::RVecF;; using ROOT::RDF::RSampleInfo;; using namespace ROOT::RDF::Experimental;; ; // Define functions needed in the analysis; // Select events for the analys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html:114,Load,Loading,114,doc/master/df106__HiggsToFourLeptons_8C.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df106_HiggsToFourLeptons.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df106_HiggsToFourLeptons.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame. ; This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads to a narrow invariant mass peak on top a relatively smooth and small background, revealing the Higgs at 125 GeV. Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting. The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; See the corresponding spec json file. ; import ROOT; import os; ; # Enable Multi-threaded mode; ROOT.EnableImplicitMT(); ; # Create the RDataFrame from the spec json file. The df106_HiggsToFourLeptons_spec.json is provided in the same folder as this tutorial; dataset_spec = os.path.join(ROOT.gROOT.GetTutorialsDir(), ""dataframe"", ""df106_HiggsToFourLeptons_spec.json""); df = ROOT.RDF.Experimental.FromSpec(dataset_spec) # Creates a single dataframe for all the samples; ; # Add the ProgressBar feature; ROOT.RDF.Experimental.AddProgressBar(df); ; # Access metadata information that is stored in the JSON config file of the RDataFrame.; # The metadata contained in the JSON file is accessible within a `DefinePerSample` call, through the `RSampleInfo` class.; df = df.DefinePerSample(""xsecs"", 'rdfsampleinfo_.GetD(""xsecs"")'); df = df.DefinePerSample(""lumi"", 'rdfsampleinfo_.GetD(""lumi"")'); df = df.DefinePerSample(""sumws""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py.html:115,Load,Loading,115,doc/master/df106__HiggsToFourLeptons_8py.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df106_HiggsToFourLeptons.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. df106_HiggsToFourLeptons.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_dataframe; 3## \notebook -draw; 4## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; 5##; 6## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; 7## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; 8## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; 9## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; 10## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; 11## the Higgs at 125 GeV.; 12## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; 13## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; 14##; 15## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; 16##; 17## \macro_image; 18## \macro_code; 19## \macro_output; 20##; 21## \date March 2020, August 2022, August 2023; 22## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN); 23 ; 24import ROOT; 25import os; 26 ; 27# Enable Multi-threaded mode; 28ROOT.EnableImplicitMT(); 29 ; 30# Create the RDataFrame from the spec json file. The df106_HiggsToFourLeptons_spec.json is provided in the same folder as this tutorial; 31dataset_spec = os.path.join(ROOT.gROOT.GetTutorialsDir(), ""dataframe"", ""df106_HiggsToFourLeptons_spec.json""); 32df = ROOT.RDF.Experimental.FromSpec(dataset_spec) # Creates a single dataframe for all the samples; 33 ; 34# Add the ProgressBar feature;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html:112,Load,Loading,112,doc/master/df106__HiggsToFourLeptons_8py_source.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/df107_SingleTopAnalysis.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; df107_SingleTopAnalysis.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame. ; This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020 (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data. By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with the –full-dataset argument and you can also run only on a fraction of the original dataset using the argument –lumi-scale.; See the corresponding spec json file. ; import ROOT; import sys; import json; import argparse; import os; ; # Argument parsing; parser = argparse.ArgumentParser(); parser.add_argument(""--lumi-scale"", type=float, default=0.05,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); if 'df107_SingleTopAnalysis.py' in sys.argv[0]:; # Script; args = parser.parse_args(); else:; # Notebook; args = parser.parse_args(args=[]); ; if args.b:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df107__SingleTopAnalysis_8py.html:114,Load,Loading,114,doc/master/df107__SingleTopAnalysis_8py.html,https://root.cern,https://root.cern/doc/master/df107__SingleTopAnalysis_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/distrdf001_spark_connection.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; distrdf001_spark_connection.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Configure a Spark connection and fill two histograms distributedly. ; This tutorial shows the ingredients needed to setup the connection to a Spark cluster, namely a SparkConf object holding configuration parameters and a SparkContext object created with the desired options. After this initial setup, an RDataFrame with distributed capabilities is created and connected to the SparkContext instance. Finally, a couple of histograms are drawn from the created columns in the dataset.; import pyspark; import ROOT; ; # Point RDataFrame calls to Spark RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; ; # Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf001__spark__connection_8py.html:118,Load,Loading,118,doc/master/distrdf001__spark__connection_8py.html,https://root.cern,https://root.cern/doc/master/distrdf001__spark__connection_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/distrdf002_dask_connection.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; distrdf002_dask_connection.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Configure a Dask connection and fill two histograms distributedly. ; This tutorial shows the ingredients needed to setup the connection to a Dask cluster (e.g. a LocalCluster for a single machine). After this initial setup, an RDataFrame with distributed capabilities is created and connected to a Dask Client instance. Finally, a couple of histograms are drawn from the created columns in the dataset. Relevant documentation can be found at http://distributed.dask.org/en/stable .; from dask.distributed import LocalCluster, Client; import ROOT; ; # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ; ; def create_connection():; """"""; Setup connection to a Dask cluster. Two ingredients are needed:; 1. Creating a cluster object that represents computing resources. This can be; done in various ways depending on the type of resources at disposal. To use; only the local machine (e.g. your laptop), a `LocalCluster` object can be; used. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'.; ; Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf002__dask__connection_8py.html:117,Load,Loading,117,doc/master/distrdf002__dask__connection_8py.html,https://root.cern,https://root.cern/doc/master/distrdf002__dask__connection_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/dataframe/distrdf003_live_visualization.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; distrdf003_live_visualization.py File ReferenceTutorials » Dataframe tutorials. Detailed Description; Configure a Dask connection and visualize the filling of a 1D and 2D histograms distributedly. ; This tutorial showcases the process of setting up real-time data representation for distributed computations. By calling the LiveVisualize function, you can observe the canvas updating with the intermediate results of the histograms as the distributed computation progresses.; from dask.distributed import LocalCluster, Client; import ROOT; ; # Import the live visualization function; LiveVisualize = ROOT.RDF.Experimental.Distributed.LiveVisualize; ; # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ; # Function to create a Dask cluster and return the client; def create_connection():; cluster = LocalCluster(n_workers=4, threads_per_worker=1, processes=True, memory_limit=""2GiB""); client = Client(cluster); return client; ; # Function to fit a Gaussian function to the plot; def fit_gaus(plot):; plot.Fit(""gaus""); ; if __name__ == ""__main__"":; # Setup connection to a Dask cluster; connection = create_connection(); ; # Create an RDataFrame that will use Dask as a backend for computations; num_entries = 100000000; d = RDataFrame(num_entries, daskclient=connection, npartitions=30); ; # Define a gaussean distribution with a variable mean; dd = d.Define(""x"", f""gRandom->Gaus(10*rdfentry_/{num_entries}, 2)"")\; .Define(""y"", f""gRandom->Gaus(10*rdfentry_/{num_entries}, 3)"")\; ; # Create a 1D and a 2D histogram using the defined columns; h_normal_1d = dd.Histo1D((""normal_1d"", ""1D Histogram of a Normal Distribution"",; 100, -10, 20),; ""x""); ; h_normal_2d = dd.Histo2D((""normal_2d"", ""2D Histogram of a Normal Distribution"",; 100, -15, 25, ; 100, -15, 25; ), ""x"", ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/distrdf003__live__visualization_8py.html:120,Load,Loading,120,doc/master/distrdf003__live__visualization_8py.html,https://root.cern,https://root.cern/doc/master/distrdf003__live__visualization_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/demos.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. demos.C File ReferenceTutorials. Detailed Description; This macro shows a control bar to run some of the ROOT tutorials. ; To execute an item, click with the left mouse button.; ; void demos() {; ; //Add the tutorials directory to the macro path; //This is necessary in case this macro is executed from another user directory; TString dirName = gSystem->GetDirName(gInterpreter->GetCurrentMacroName());; const char *current = gROOT->GetMacroPath();; gROOT->SetMacroPath(TString::Format(""%s:%s"", current, dirName.Data()));; ; TControlBar *bar = new TControlBar(""vertical"", ""Demos"", 10, 10);; bar->AddButton(""Help Demos"", "".x demoshelp.C"", ""Click Here For Help on Running the Demos"");; bar->AddButton(""browser"", ""new TBrowser;"", ""Start the ROOT Browser"");; bar->AddButton(""framework"", "".x graphics/framework.C"", ""An Example of Object Oriented User Interface"");; bar->AddButton(""first"", "".x graphics/first.C"", ""An Example of Slide with Root"");; bar->AddButton(""hsimple"", "".x hsimple.C"", ""An Example Creating Histograms/Ntuples on File"");; bar->AddButton(""hsum"", "".x hist/hsum.C"", ""Filling Histograms and Some Graphics Options"");; bar->AddButton(""formula1"", "".x graphics/formula1.C"", ""Simple Formula and Functions"");; bar->AddButton(""surfaces"", "".x graphs/surfaces.C"", ""Surface Drawing Options"");; bar->AddButton(""fillrandom"", "".x hist/fillrandom.C"", ""Histograms with Random Numbers from a Function"");; bar->AddButton(""fit1"", "".x fit/fit1.C"", ""A Simple Fitting Example"");; bar->AddButton(""multifit"", "".x fit/multifit.C"", ""Fitting in Subranges of Histograms"");; bar->AddButton(""h1ReadAndDraw"", "".x hist/h1ReadAndDraw.C"", ""Drawing Options for 1D Histograms"");; bar->AddButton(""graph"", "".x graphs/graph.C"", ""Example of a Simple Graph"");; bar->AddButton(""gerrors"", "".x graphs/gerrors.C"", ""Example of a Graph with Error Bars"");; bar->AddButton(""tornado"", "".x graphics/tornado.C"", ""Exampl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/demos_8C.html:85,Load,Loading,85,doc/master/demos_8C.html,https://root.cern,https://root.cern/doc/master/demos_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/demoshelp.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. demoshelp.C File ReferenceTutorials. Detailed Description; This macro shows help on running the Demos. ; ; void demoshelp() {; //; new TCanvas(""chelp"",""Help to run demos"",200,10,700,500);; ; TPaveText *welcome = new TPaveText(.1,.8,.9,.97);; welcome->AddText(""Welcome to the ROOT demos"");; welcome->SetTextFont(32);; welcome->SetTextColor(4);; welcome->SetFillColor(24);; welcome->Draw();; ; TPaveText *hdemo = new TPaveText(.05,.05,.95,.7);; hdemo->SetTextAlign(12);; hdemo->SetTextFont(52);; hdemo->AddText(""- Run demo hsimple.C first. Then in any order"");; hdemo->AddText(""- Click left mouse button to execute one demo"");; hdemo->AddText(""- Click right mouse button to see the title of the demo"");; hdemo->AddText(""- Click on 'Close Bar' to exit from the demo menu"");; hdemo->AddText(""- Select 'File/Print' to print a Postscript view of the canvas"");; hdemo->AddText(""- You can execute a demo with the mouse or type commands"");; hdemo->AddText(""- During the demo (try on this canvas) you can :"");; hdemo->AddText("" .... Use left button to move/grow/etc objects"");; hdemo->AddText("" .... Use middle button to pop overlapping objects"");; hdemo->AddText("" .... Use right button to get an object sensitive pop-up"");; hdemo->AddText("" "");; hdemo->SetAllWith(""...."",""color"",2);; hdemo->SetAllWith(""...."",""font"",72);; hdemo->SetAllWith(""...."",""size"",0.04);; ; hdemo->Draw();; }; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TCanvasThe Canvas class.Definition TCanvas.h:23; TPaveTe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/demoshelp_8C.html:89,Load,Loading,89,doc/master/demoshelp_8C.html,https://root.cern,https://root.cern/doc/master/demoshelp_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/eve7/collection_proxies.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. collection_proxies.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_eve7; 3///; 4/// This is an example of visualization of containers; 5/// with REveDataCollection and REveDataProxyBuilders.; 6/// \macro_code; 7///; 8 ; 9 ; 10#include ""ROOT/REveDataTable.hxx""; 11#include ""ROOT/REveDataSimpleProxyBuilderTemplate.hxx""; 12#include ""ROOT/REveManager.hxx""; 13#include ""ROOT/REveScalableStraightLineSet.hxx""; 14#include ""ROOT/REveViewContext.hxx""; 15#include <ROOT/REveGeoShape.hxx>; 16#include <ROOT/REveJetCone.hxx>; 17#include <ROOT/REvePointSet.hxx>; 18#include <ROOT/REveProjectionBases.hxx>; 19#include <ROOT/REveProjectionManager.hxx>; 20#include <ROOT/REveScene.hxx>; 21#include <ROOT/REveTableProxyBuilder.hxx>; 22#include <ROOT/REveTableInfo.hxx>; 23#include <ROOT/REveTrack.hxx>; 24#include <ROOT/REveTrackPropagator.hxx>; 25#include <ROOT/REveViewer.hxx>; 26#include <ROOT/REveViewContext.hxx>; 27#include <ROOT/REveBoxSet.hxx>; 28#include <ROOT/REveSelection.hxx>; 29#include <ROOT/REveCalo.hxx>; 30 ; 31#include ""TGeoTube.h""; 32#include ""TROOT.h""; 33#include ""TList.h""; 34#include ""TParticle.h""; 35#include ""TRandom.h""; 36#include ""TApplication.h""; 37#include ""TFile.h""; 38#include ""TH2F.h""; 39#include <iostream>; 40 ; 41 ; 42const Double_t kR_min = 299;; 43const Double_t kR_max = 300;; 44const Double_t kZ_d = 500;; 45 ; 46 ; 47namespace fw3dlego {; 48 const int xbins_n = 83;; 49 const double xbins[xbins_n] = {; 50 -5.191, -4.889, -4.716, -4.538, -4.363, -4.191, -4.013, -3.839, -3.664, -3.489, -3.314, -3.139, -2.964, -2.853,; 51 -2.650, -2.500, -2.322, -2.172, -2.043, -1.930, -1.830, -1.740, -1.653, -1.566, -1.479, -1.392, -1.305, -1.218,; 52 -1.131, -1.044, -0.957, -0.870, -0.783, -0.696, -0.609, -0.522, -0.435, -0.348, -0.261, -0.174, -0.087, 0.000,; 53 0.087, 0.174, 0.261, 0.348, 0.435, 0.522, 0.609, 0.696, 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/collection__proxies_8C_source.html:100,Load,Loading,100,doc/master/collection__proxies_8C_source.html,https://root.cern,https://root.cern/doc/master/collection__proxies_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/eve7/eveGeoBrowser.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Functions ; eveGeoBrowser.C File Reference. #include <ROOT/REveGeoTopNode.hxx>; #include <ROOT/REveManager.hxx>. Include dependency graph for eveGeoBrowser.C:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Functions; void eveGeoBrowser (bool showDet=true);  ; TGeoNode * getNodeFromPath (TGeoNode *top, std::string path);  ; TGeoNode * rootgeom ();  ; TGeoNode * testCmsGeo ();  . Function Documentation. ◆ eveGeoBrowser(). void eveGeoBrowser ; (; bool ; showDet = true). Definition at line 169 of file eveGeoBrowser.C. ◆ getNodeFromPath(). TGeoNode * getNodeFromPath ; (; TGeoNode * ; top, . std::string ; path . ). Definition at line 9 of file eveGeoBrowser.C. ◆ rootgeom(). TGeoNode * rootgeom ; (; ). Definition at line 47 of file eveGeoBrowser.C. ◆ testCmsGeo(). TGeoNode * testCmsGeo ; (; ). Definition at line 20 of file eveGeoBrowser.C. tutorialseve7eveGeoBrowser.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/eveGeoBrowser_8C.html:98,Load,Loading,98,doc/master/eveGeoBrowser_8C.html,https://root.cern,https://root.cern/doc/master/eveGeoBrowser_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/eve7/eveGeoBrowser.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. eveGeoBrowser.C. Go to the documentation of this file. 1 ; 2#include <ROOT/REveGeoTopNode.hxx>; 3#include <ROOT/REveManager.hxx>; 4 ; 5 ; 6namespace REX = ROOT::Experimental;; 7 ; 8 ; 9TGeoNode *getNodeFromPath(TGeoNode *top, std::string path); 10{; 11 TGeoNode *node = top;; 12 std::istringstream f(path);; 13 std::string s;; 14 while (getline(f, s, '/')); 15 node = node->GetVolume()->FindNode(s.c_str());; 16 ; 17 return node;; 18}; 19 ; 20TGeoNode* testCmsGeo(); 21{; 22 TFile::SetCacheFileDir(""."");; 23 ; 24 TGeoManager::Import(""https://root.cern/files/cms.root"");; 25 ; 26 gGeoManager->DefaultColors();; 27 gGeoManager->GetVolume(""TRAK"")->InvisibleAll();; 28 gGeoManager->GetVolume(""HVP2"")->SetTransparency(20);; 29 gGeoManager->GetVolume(""HVEQ"")->SetTransparency(20);; 30 gGeoManager->GetVolume(""YE4"")->SetTransparency(10);; 31 gGeoManager->GetVolume(""YE3"")->SetTransparency(20);; 32 gGeoManager->GetVolume(""RB2"")->SetTransparency(99);; 33 gGeoManager->GetVolume(""RB3"")->SetTransparency(99);; 34 gGeoManager->GetVolume(""COCF"")->SetTransparency(99);; 35 gGeoManager->GetVolume(""HEC1"")->SetLineColor(7);; 36 gGeoManager->GetVolume(""EAP1"")->SetLineColor(7);; 37 gGeoManager->GetVolume(""EAP2"")->SetLineColor(7);; 38 gGeoManager->GetVolume(""EAP3"")->SetLineColor(7);; 39 gGeoManager->GetVolume(""EAP4"")->SetLineColor(7);; 40 gGeoManager->GetVolume(""HTC1"")->SetLineColor(2);; 41 ; 42 TGeoNode* top = gGeoManager->GetTopVolume()->FindNode(""CMSE_1"");; 43 TGeoNode* n = getNodeFromPath(top, ""MUON_1"");; 44 return top;; 45}; 46 ; 47TGeoNode* rootgeom(); 48{; 49 TGeoManager *geom = new TGeoManager(""simple1"", ""Simple geometry"");; 50 ; 51 TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; 52 TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; 53// //--- define some media; 54 TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; 55 TGeoMedium *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/eveGeoBrowser_8C_source.html:95,Load,Loading,95,doc/master/eveGeoBrowser_8C_source.html,https://root.cern,https://root.cern/doc/master/eveGeoBrowser_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit Directory Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit Directory Reference. Directory dependency graph for fit:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Files;  combinedFit.C;   Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ;  combinedFit.py;   Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ;  ConfidenceIntervals.C;   Illustrates TVirtualFitter::GetConfidenceIntervals This method computes confidence intervals for the fitted function ;  ;  ErrorIntegral.C;   Estimate the error in the integral of a fitted function taking into account the errors in the parameters resulting from the fit. ;  ;  exampleFit3D.C;   example of fitting a 3D function Typical multidimensional parametric regression where the predictor depends on 3 variables ;  ;  fit1.C;   Simple fitting example (1-d histogram with an interpreted function) ;  ;  fit2.C;   Fitting a 2-D histogram This tutorial illustrates : ;  ;  fit2a.C;   Fitting a 2-D histogram (a variant) This tutorial illustrates : ;  ;  fit2d.C;   Example illustrating how to fit a 2-d histogram of type y=f(x) ;  ;  fit2dHist.C;   Example to fit two histograms at the same time via the Fitter class. ;  ;  fitCircle.C;   Generate points distributed with some errors around a circle Fit a circle through the points and draw To run the script, do, eg ;  ;  fitcont.C;   Example illustrating how to draw the n-sigma contour of a Minuit fit. ;  ;  fitConvolution.C;   Tutorial for convolution of two functions ;  ;  fitConvolution.py;   Tutorial for convolution of two functions ;  ;  fitEllipseTGraphDLSF.cxx;  ;  fitEllipseTGraphRMM.cxx;  ;  fitExclude.C;   Illustrates how to fit excluding points in a given range. ;  ;  fithist.C;   Example of fit where the model is histogram + function ;  ;  FitHistoInFile.C;   ;  ;  fitLinear.C;   Ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html:86,Load,Loading,86,doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html,https://root.cern,https://root.cern/doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/ConfidenceIntervals.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ConfidenceIntervals.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Illustrates TVirtualFitter::GetConfidenceIntervals This method computes confidence intervals for the fitted function . ; #include ""TGraphErrors.h""; #include ""TGraph2DErrors.h""; #include ""TCanvas.h""; #include ""TF2.h""; #include ""TH1.h""; #include ""TVirtualFitter.h""; #include ""TRandom.h""; ; void ConfidenceIntervals(); {; TCanvas *myc = new TCanvas(""myc"",; ""Confidence intervals on the fitted function"",1000, 500);; myc->Divide(3,1);; ; //### 1. A graph; //Create and fill a graph; int ngr = 100;; TGraph *gr = new TGraph(ngr);; gr->SetName(""GraphNoError"");; double x, y;; int i;; for (i=0; i<ngr; i++){; x = gRandom->Uniform(-1, 1);; y = -1 + 2*x + gRandom->Gaus(0, 1);; gr->SetPoint(i, x, y);; }; //Create the fitting function; TF1 *fpol = new TF1(""fpol"", ""pol1"", -1, 1);; fpol->SetLineWidth(2);; gr->Fit(fpol, ""Q"");; ; /*Create a TGraphErrors to hold the confidence intervals*/; TGraphErrors *grint = new TGraphErrors(ngr);; grint->SetTitle(""Fitted line with .95 conf. band"");; for (i=0; i<ngr; i++); grint->SetPoint(i, gr->GetX()[i], 0);; /*Compute the confidence intervals at the x points of the created graph*/; (TVirtualFitter::GetFitter())->GetConfidenceIntervals(grint);; //Now the ""grint"" graph contains function values as its y-coordinates; //and confidence intervals as the errors on these coordinates; //Draw the graph, the function and the confidence intervals; myc->cd(1);; grint->SetLineColor(kRed);; grint->Draw(""ap"");; gr->SetMarkerStyle(5);; gr->SetMarkerSize(0.7);; gr->Draw(""psame"");; ; //### 2. A histogram; myc->cd(2);; //Create, fill and fit a histogram; int nh=5000;; TH1D *h = new TH1D(""h"",; ""Fitted Gaussian with .95 conf.band"", 100, -3, 3);; h->FillRandom(""gaus"", nh);; TF1 *f = new TF1(""fgaus"", ""gaus"", -3, 3);; f->SetLineWidth(2);; h->Fit(f, ""Q"");;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ConfidenceIntervals_8C.html:103,Load,Loading,103,doc/master/ConfidenceIntervals_8C.html,https://root.cern,https://root.cern/doc/master/ConfidenceIntervals_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/ConfidenceIntervals.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ConfidenceIntervals.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook; 4/// Illustrates TVirtualFitter::GetConfidenceIntervals; 5/// This method computes confidence intervals for the fitted function; 6///; 7/// \macro_image; 8/// \macro_code; 9///; 10/// \author Rene Brun; 11 ; 12#include ""TGraphErrors.h""; 13#include ""TGraph2DErrors.h""; 14#include ""TCanvas.h""; 15#include ""TF2.h""; 16#include ""TH1.h""; 17#include ""TVirtualFitter.h""; 18#include ""TRandom.h""; 19 ; 20void ConfidenceIntervals(); 21{; 22 TCanvas *myc = new TCanvas(""myc"",; 23 ""Confidence intervals on the fitted function"",1000, 500);; 24 myc->Divide(3,1);; 25 ; 26//### 1. A graph; 27 //Create and fill a graph; 28 int ngr = 100;; 29 TGraph *gr = new TGraph(ngr);; 30 gr->SetName(""GraphNoError"");; 31 double x, y;; 32 int i;; 33 for (i=0; i<ngr; i++){; 34 x = gRandom->Uniform(-1, 1);; 35 y = -1 + 2*x + gRandom->Gaus(0, 1);; 36 gr->SetPoint(i, x, y);; 37 }; 38 //Create the fitting function; 39 TF1 *fpol = new TF1(""fpol"", ""pol1"", -1, 1);; 40 fpol->SetLineWidth(2);; 41 gr->Fit(fpol, ""Q"");; 42 ; 43 /*Create a TGraphErrors to hold the confidence intervals*/; 44 TGraphErrors *grint = new TGraphErrors(ngr);; 45 grint->SetTitle(""Fitted line with .95 conf. band"");; 46 for (i=0; i<ngr; i++); 47 grint->SetPoint(i, gr->GetX()[i], 0);; 48 /*Compute the confidence intervals at the x points of the created graph*/; 49 (TVirtualFitter::GetFitter())->GetConfidenceIntervals(grint);; 50 //Now the ""grint"" graph contains function values as its y-coordinates; 51 //and confidence intervals as the errors on these coordinates; 52 //Draw the graph, the function and the confidence intervals; 53 myc->cd(1);; 54 grint->SetLineColor(kRed);; 55 grint->Draw(""ap"");; 56 gr->SetMarkerStyle(5);; 57 gr->SetMarkerSize(0.7);; 58 gr->Draw(""psame"");; 59 ; 60//### 2. A histogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ConfidenceIntervals_8C_source.html:100,Load,Loading,100,doc/master/ConfidenceIntervals_8C_source.html,https://root.cern,https://root.cern/doc/master/ConfidenceIntervals_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/ErrorIntegral.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ErrorIntegral.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Estimate the error in the integral of a fitted function taking into account the errors in the parameters resulting from the fit. ; The error is estimated also using the correlations values obtained from the fit; run the macro doing:; .x ErrorIntegral.C; After having computed the integral and its error using the integral and the integral error using the generic functions TF1::Integral and TF1::IntegralError, we compute the integrals and its error analytically using the fact that the fitting function is \( f(x) = p[1]* sin(p[0]*x) \).; Therefore we have:; integral in [0,1] : ic = p[1]* (1-std::cos(p[0]) )/p[0]; derivative of integral with respect to p0: c0c = p[1] * (std::cos(p[0]) + p[0]*std::sin(p[0]) -1.)/p[0]/p[0]; derivative of integral with respect to p1: c1c = (1-std::cos(p[0]) )/p[0]. and then we can compute the integral error using error propagation and the covariance matrix for the parameters p obtained from the fit.; integral error : sic = std::sqrt( c0c*c0c * covMatrix(0,0) + c1c*c1c * covMatrix(1,1) + 2.* c0c*c1c * covMatrix(0,1)); Note that, if possible, one should fit directly the function integral, which are the number of events of the different components (e.g. signal and background). In this way one obtains a better and more correct estimate of the integrals uncertainties, since they are obtained directly from the fit without using the approximation of error propagation. This is possible in ROOT. when using the TF1NormSum class, see the tutorial fitNormSum.C. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 49.5952; NDf = 48; Edm = 1.61787e-06; NCalls = 58; p0 = 3.13205 +/- 0.0312726 ; p1 = 29.7625 +/- 1.00876 ; Covariance matrix from the fit ; 2x2 matrix is as follows; ; | 0 | 1 |; --------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ErrorIntegral_8C.html:97,Load,Loading,97,doc/master/ErrorIntegral_8C.html,https://root.cern,https://root.cern/doc/master/ErrorIntegral_8C.html,1,['Load'],['Loading']
Performance,. ROOT: tutorials/fit/FittingDemo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. FittingDemo.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example for fitting signal/background. ; This example can be executed with:; root > .x FittingDemo.C (using the cling interpreter); root > .x FittingDemo.C+ (using the native complier via ACLIC). ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 58.9284; NDf = 54; Edm = 9.73335e-07; NCalls = 606; p0 = -0.864746 +/- 0.887832 ; p1 = 45.8428 +/- 2.65453 ; p2 = -13.3213 +/- 0.980305 ; p3 = 13.8087 +/- 2.24457 ; p4 = 0.172313 +/- 0.0374057 ; p5 = 0.987278 +/- 0.0112928 ; Minuit2Minimizer: Minimize with max-calls 1780 convergence for edm < 0.01 strategy 1; Number of iterations 10; ----------> Iteration 0; FVAL = 60.856975016 Edm = 2.04157626492 Nfcn = 23; Error matrix change = 1; Parameters : p0 = -0.864746 p1 = 45.8428 p2 = -13.3213 p3 = 13.8087 p4 = 0.2 p5 = 1; ----------> Iteration 1; FVAL = 59.0984738211 Edm = 0.192336813475 Nfcn = 40; Error matrix change = 0.589159; Parameters : p0 = -0.913462 p1 = 45.8154 p2 = -13.3295 p3 = 14.3068 p4 = 0.176677 p5 = 0.990619; ----------> Iteration 2; FVAL = 58.9599783699 Edm = 0.018918033963 Nfcn = 54; Error matrix change = 0.342284; Parameters : p0 = -0.906747 p1 = 45.8363 p2 = -13.3167 p3 = 14.116 p4 = 0.177064 p5 = 0.986977; ----------> Iteration 3; FVAL = 58.9376425149 Edm = 0.00958566000238 Nfcn = 68; Error matrix change = 0.364189; Parameters : p0 = -0.924256 p1 = 45.83 p2 = -13.3146 p3 = 13.9161 p4 = 0.174171 p5 = 0.987051; ----------> Iteration 4; FVAL = 58.9318510093 Edm = 0.00157028886174 Nfcn = 82; Error matrix change = 0.246637; Parameters : p0 = -0.905334 p1 = 45.839 p2 = -13.3101 p3 = 13.8652 p4 = 0.172941 p5 = 0.987268; ----------> Iteration 5; FVAL = 58.9287717045 Edm = 0.000439744580493 Nfcn = 96; Error matrix change = 0.274881; Parameters : p0 = -0.867943 p1 = 45.8302 p2 = -13.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FittingDemo_8C.html:95,Load,Loading,95,doc/master/FittingDemo_8C.html,https://root.cern,https://root.cern/doc/master/FittingDemo_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/Ifit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Ifit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example of a program to fit non-equidistant data points ; The fitting function fcn is a simple chisquare function The data consists of 5 data points (arrays x,y,z) + the errors in errorsz More details on the various functions or parameters for these functions can be obtained in an interactive ROOT session with:; Root > TMinuit *minuit = new TMinuit(10);; TMinuitDefinition TMinuit.h:27; Root > minuit->mnhelp(""*"") to see the list of possible keywords; Root > minuit->mnhelp(""SET"") explains most parameters; ; **********; ** 1 **SET ERR 1; **********; PARAMETER DEFINITIONS:; NO. NAME VALUE STEP SIZE LIMITS; 1 a1 3.00000e+00 1.00000e-01 no limits; 2 a2 1.00000e+00 1.00000e-01 no limits; 3 a3 1.00000e-01 1.00000e-02 no limits; 4 a4 1.00000e-02 1.00000e-03 no limits; **********; ** 2 **MIGRAD 500 1; **********; FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4.; START MIGRAD MINIMIZATION. STRATEGY 1. CONVERGENCE WHEN EDM .LT. 1.00e-03; FCN=90047.1 FROM MIGRAD STATUS=INITIATE 14 CALLS 15 TOTAL; EDM= unknown STRATEGY= 1 NO ERROR MATRIX ; EXT PARAMETER CURRENT GUESS STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 a1 3.00000e+00 1.00000e-01 1.00000e-01 2.81614e+05; 2 a2 1.00000e+00 1.00000e-01 1.00000e-01 -2.73395e+05; 3 a3 1.00000e-01 1.00000e-02 1.00000e-02 -3.08505e+05; 4 a4 1.00000e-02 1.00000e-03 1.00000e-03 3.53925e+05; MIGRAD MINIMIZATION HAS CONVERGED.; MIGRAD WILL VERIFY CONVERGENCE AND ERROR MATRIX.; EIGENVALUES OF SECOND-DERIVATIVE MATRIX:; -6.7573e-05 7.2964e-05 4.1376e-02 3.9586e+00; MINUIT WARNING IN HESSE ; ============== MATRIX FORCED POS-DEF BY ADDING 0.004026 TO DIAGONAL.; FCN=10.3986 FROM HESSE STATUS=NOT POSDEF 23 CALLS 112 TOTAL; EDM=0.11462 STRATEGY= 1 ERR MATRIX NOT POS-DEF; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Ifit_8C.html:88,Load,Loading,88,doc/master/Ifit_8C.html,https://root.cern,https://root.cern/doc/master/Ifit_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/NumericalMinimization.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. NumericalMinimization.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example on how to use the new Minimizer class in ROOT Show usage with all the possible minimizers. ; Minimize the Rosenbrock function (a 2D -function); input : minimizer name + algorithm name randomSeed: = <0 : fixed value: 0 random with seed 0; >0 random with given seed; ; #include ""Math/Minimizer.h""; #include ""Math/Factory.h""; #include ""Math/Functor.h""; #include ""TRandom2.h""; #include ""TError.h""; #include <iostream>; ; double RosenBrock(const double *xx ); {; const double x = xx[0];; const double y = xx[1];; const double tmp1 = y-x*x;; const double tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }; ; int NumericalMinimization(const char * minName = ""Minuit2"",; const char *algoName = """" ,; int randomSeed = -1); {; // create minimizer giving a name and a name (optionally) for the specific; // algorithm; // possible choices are:; // minName algoName; // Minuit /Minuit2 Migrad, Simplex,Combined,Scan (default is Migrad); // Minuit2 Fumili2; // Fumili; // GSLMultiMin ConjugateFR, ConjugatePR, BFGS,; // BFGS2, SteepestDescent; // GSLMultiFit; // GSLSimAn; // Genetic; ROOT::Math::Minimizer* minimum =; ROOT::Math::Factory::CreateMinimizer(minName, algoName);; if (!minimum) {; std::cerr << ""Error: cannot create minimizer \"""" << minName; << ""\"". Maybe the required library was not built?"" << std::endl;; return 1;; }; ; // set tolerance , etc...; minimum->SetMaxFunctionCalls(1000000); // for Minuit/Minuit2; minimum->SetMaxIterations(10000); // for GSL; minimum->SetTolerance(0.001);; minimum->SetPrintLevel(1);; ; // create function wrapper for minimizer; // a IMultiGenFunction type; ROOT::Math::Functor f(&RosenBrock,2);; double step[2] = {0.01,0.01};; // starting point; ; double variable[2] = { -1.,1.2};; if (randomSeed >= 0) {; TRandom2 r(randomSeed);; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NumericalMinimization_8C.html:105,Load,Loading,105,doc/master/NumericalMinimization_8C.html,https://root.cern,https://root.cern/doc/master/NumericalMinimization_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/TestBinomial.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TestBinomial.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Perform a fit to a set of data with binomial errors like those derived from the division of two histograms. ; Three different fits are performed and compared:. simple least square fit to the divided histogram obtained from TH1::Divide with option b; least square fit to the TGraphAsymmErrors obtained from TGraphAsymmErrors::BayesDivide; likelihood fit performed on the dividing histograms using binomial statistics with the TBinomialEfficiency class. The first two methods are biased while the last one is statistical correct. Running the script passing an integer value n larger than 1, n fits are performed and the bias are also shown. To run the script :; to show the bias performing 100 fits for 1000 events per ""experiment""; root[0]: .x TestBinomial.C+; to show the bias performing 100 fits for 1000 events per ""experiment""; .x TestBinomial.C+(100, 1000). ; 32 68; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.350714; NDf = 3; Edm = 1.27001e-06; NCalls = 81; p0 = 0.694132 +/- 0.210029 ; p1 = 19.3471 +/- 5.85483 ; p2 = 5.2245 +/- 5.11013 ; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 14.3081; Chi2 = 28.6162; NDf = 21; Edm = 4.11934e-08; NCalls = 91; p0 = 0.822966 +/- 0.0807557 (limited); p1 = 21.9819 +/- 2.14579 ; p2 = 3.36105 +/- 1.05866 ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1.64738; NDf = 5; Edm = 1.01171e-06; NCalls = 137; p0 = 0.677329 +/- 0.135567 (limited); p1 = 15.5028 +/- 4.11118 ; p2 = 4.10441 +/- 2.77044 ; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 19.363; Chi2 = 38.7261; NDf = 25; Edm = 9.40378e-08; NCalls = 80; p0 = 0.778188 +/- 0.0815568 (limited); p1 = 23.7948 +/- 2.21356 ; p2 = 4.58769 +/- 1.24153 ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TestBinomial_8C.html:96,Load,Loading,96,doc/master/TestBinomial_8C.html,https://root.cern,https://root.cern/doc/master/TestBinomial_8C.html,6,"['Load', 'Perform', 'perform']","['Loading', 'Perform', 'performed', 'performing']"
Performance,". ROOT: tutorials/fit/TwoHistoFit2D.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TwoHistoFit2D.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example to fit two histograms at the same time. . ; Do global fit; PARAMETER DEFINITIONS:; NO. NAME VALUE STEP SIZE LIMITS; 1 p0 1.00000e+02 1.00000e-02 no limits; 2 p1 6.00000e+00 1.00000e-02 no limits; 3 p2 2.00000e+00 1.00000e-02 no limits; 4 p3 7.00000e+00 1.00000e-02 no limits; 5 p4 3.00000e+00 1.00000e-02 no limits; 6 p5 1.00000e+02 1.00000e-02 no limits; 7 p6 1.20000e+01 1.00000e-02 no limits; 8 p7 3.00000e+00 1.00000e-02 no limits; 9 p8 1.10000e+01 1.00000e-02 no limits; 10 p9 2.00000e+00 1.00000e-02 no limits; **********; ** 1 **SET PRINT 0 16.85; **********; **********; ** 2 **MIGRAD 5000 0.01; **********; MIGRAD MINIMIZATION HAS CONVERGED.; FCN=4015.63 FROM MIGRAD STATUS=CONVERGED 525 CALLS 526 TOTAL; EDM=7.64858e-07 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 4.8 per cent; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 2.55114e+01 2.22488e-01 1.18177e-03 1.29669e-03; 2 p1 6.03551e+00 1.56999e-02 1.78147e-04 5.19787e-02; 3 p2 1.95953e+00 1.34972e-02 1.02338e-04 -2.33217e-02; 4 p3 7.09821e+00 3.32869e-02 2.39024e-04 2.42669e-02; 5 p4 2.94271e+00 2.42010e-02 -1.88552e-04 2.78529e-03; 6 p5 2.63145e+01 2.69272e-01 -2.31447e-03 -2.60063e-03; 7 p6 1.19850e+01 3.51596e-02 4.24094e-04 -3.93616e-02; 8 p7 2.90086e+00 2.64547e-02 8.06260e-05 -5.19624e-03; 9 p8 1.09762e+01 1.47334e-02 -6.74372e-05 -1.09627e-02; 10 p9 1.95760e+00 1.14466e-02 2.85422e-05 -1.15591e-01; Chi2 Fit = 4015.63 ndf = 3921 3921; (int) 0; ; #include ""TH2D.h""; #include ""TF2.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TRandom3.h""; #include ""TVirtualFitter.h""; #include ""TList.h""; ; #include <vector>; #include <map>; #include <iostream>; ; double gauss2D(double *x, double *par) {; double z1 = double((x[0]-par[1])/par[2]);; double z2 = double((x[1]-par[3])/par[4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TwoHistoFit2D_8C.html:97,Load,Loading,97,doc/master/TwoHistoFit2D_8C.html,https://root.cern,https://root.cern/doc/master/TwoHistoFit2D_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/combinedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. combinedFit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Combined (simultaneous) fit of two histogram with separate functions and some common parameters ; See http://root.cern/phpBB3//viewtopic.php?f=3&t=11740#p50908 for a modified version working with Fumili or GSLMultiFit; N.B. this macro must be compiled with ACliC. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 131.104; NDf = 115; Edm = 2.11602e-08; NCalls = 225; Par_0 = 5.5396 +/- 0.0354094 ; Par_1 = 4.66089 +/- 0.050106 ; Par_2 = -0.0514037 +/- 0.00108539 (limited); Par_3 = 77.2733 +/- 3.93105 (limited); Par_4 = 30 (fixed); Par_5 = 4.864 +/- 0.243005 ; Combined fit Chi2 = 131.104; ; #include <Fit/Fitter.h>; #include <Fit/BinData.h>; #include <Fit/Chi2FCN.h>; #include <TH1.h>; #include <Math/WrappedMultiTF1.h>; #include <HFitInterface.h>; #include <TCanvas.h>; #include <TStyle.h>; ; // definition of shared parameter; // background function; int iparB[2] = {; 0, // exp amplitude in B histo; 2 // exp common parameter; };; ; // signal + background function; int iparSB[5] = {; 1, // exp amplitude in S+B histo; 2, // exp common parameter; 3, // Gaussian amplitude; 4, // Gaussian mean; 5 // Gaussian sigma; };; ; // Create the GlobalCHi2 structure; ; struct GlobalChi2 {; GlobalChi2(ROOT::Math::IMultiGenFunction &f1, ROOT::Math::IMultiGenFunction &f2) : fChi2_1(&f1), fChi2_2(&f2) {}; ; // parameter vector is first background (in common 1 and 2); // and then is signal (only in 2); double operator()(const double *par) const; {; double p1[2];; for (int i = 0; i < 2; ++i); p1[i] = par[iparB[i]];; ; double p2[5];; for (int i = 0; i < 5; ++i); p2[i] = par[iparSB[i]];; ; return (*fChi2_1)(p1) + (*fChi2_2)(p2);; }; ; const ROOT::Math::IMultiGenFunction *fChi2_1;; const ROOT::Math::IMultiGenFunction *fChi2_2;; };; ; void combinedFit(); {; ; TH1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/combinedFit_8C.html:95,Load,Loading,95,doc/master/combinedFit_8C.html,https://root.cern,https://root.cern/doc/master/combinedFit_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/combinedFit.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. combinedFit.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook; 4/// Combined (simultaneous) fit of two histogram with separate functions; 5/// and some common parameters; 6///; 7/// See http://root.cern/phpBB3//viewtopic.php?f=3&t=11740#p50908; 8/// for a modified version working with Fumili or GSLMultiFit; 9///; 10/// N.B. this macro must be compiled with ACliC; 11///; 12/// \macro_image; 13/// \macro_output; 14/// \macro_code; 15///; 16/// \author Lorenzo Moneta; 17 ; 18#include <Fit/Fitter.h>; 19#include <Fit/BinData.h>; 20#include <Fit/Chi2FCN.h>; 21#include <TH1.h>; 22#include <Math/WrappedMultiTF1.h>; 23#include <HFitInterface.h>; 24#include <TCanvas.h>; 25#include <TStyle.h>; 26 ; 27// definition of shared parameter; 28// background function; 29int iparB[2] = {; 30 0, // exp amplitude in B histo; 31 2 // exp common parameter; 32};; 33 ; 34// signal + background function; 35int iparSB[5] = {; 36 1, // exp amplitude in S+B histo; 37 2, // exp common parameter; 38 3, // Gaussian amplitude; 39 4, // Gaussian mean; 40 5 // Gaussian sigma; 41};; 42 ; 43// Create the GlobalCHi2 structure; 44 ; 45struct GlobalChi2 {; 46 GlobalChi2(ROOT::Math::IMultiGenFunction &f1, ROOT::Math::IMultiGenFunction &f2) : fChi2_1(&f1), fChi2_2(&f2) {}; 47 ; 48 // parameter vector is first background (in common 1 and 2); 49 // and then is signal (only in 2); 50 double operator()(const double *par) const; 51 {; 52 double p1[2];; 53 for (int i = 0; i < 2; ++i); 54 p1[i] = par[iparB[i]];; 55 ; 56 double p2[5];; 57 for (int i = 0; i < 5; ++i); 58 p2[i] = par[iparSB[i]];; 59 ; 60 return (*fChi2_1)(p1) + (*fChi2_2)(p2);; 61 }; 62 ; 63 const ROOT::Math::IMultiGenFunction *fChi2_1;; 64 const ROOT::Math::IMultiGenFunction *fChi2_2;; 65};; 66 ; 67void combinedFit(); 68{; 69 ; 70 TH1D *hB = new TH1D(""hB"", ""histo B"", 100, 0, 100",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/combinedFit_8C_source.html:92,Load,Loading,92,doc/master/combinedFit_8C_source.html,https://root.cern,https://root.cern/doc/master/combinedFit_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/combinedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; combinedFit.py File ReferenceTutorials » Fit Tutorials. Detailed Description; Combined (simultaneous) fit of two histogram with separate functions and some common parameters . ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 131.104; NDf = 115; Edm = 2.11602e-08; NCalls = 225; Par_0 = 5.5396 +/- 0.0354094 ; Par_1 = 4.66089 +/- 0.050106 ; Par_2 = -0.0514037 +/- 0.00108539 (limited); Par_3 = 77.2733 +/- 3.93105 (limited); Par_4 = 30 (fixed); Par_5 = 4.864 +/- 0.243005 ; ; ; import ROOT; import numpy as np; ; ; # definition of shared parameter background function; iparB = np.array([0, 2], dtype=np.int32) # exp amplitude in B histo and exp common parameter; ; # signal + background function; iparSB = np.array(; [; 1, # exp amplitude in S+B histo; 2, # exp common parameter; 3, # Gaussian amplitude; 4, # Gaussian mean; 5, # Gaussian sigma; ],; dtype=np.int32,; ); ; # Create the GlobalCHi2 structure; ; class GlobalChi2(object):; def __init__(self, f1, f2):; self._f1 = f1; self._f2 = f2; ; def __call__(self, par):; # parameter vector is first background (in common 1 and 2) and then is; # signal (only in 2); ; # the zero-copy way to get a numpy array from a double *; par_arr = np.frombuffer(par, dtype=np.float64, count=6); ; p1 = par_arr[iparB]; p2 = par_arr[iparSB]; ; return self._f1(p1) + self._f2(p2); ; ; hB = ROOT.TH1D(""hB"", ""histo B"", 100, 0, 100); hSB = ROOT.TH1D(""hSB"", ""histo S+B"", 100, 0, 100); ; fB = ROOT.TF1(""fB"", ""expo"", 0, 100); fB.SetParameters(1, -0.05); hB.FillRandom(""fB""); ; fS = ROOT.TF1(""fS"", ""gaus"", 0, 100); fS.SetParameters(1, 30, 5); ; hSB.FillRandom(""fB"", 2000); hSB.FillRandom(""fS"", 1000); ; # perform now global fit; ; fSB = ROOT.TF1(""fSB"", ""expo + gaus(2)"", 0, 100); ; wfB = ROOT.Math.WrappedMultiTF1(fB, 1); wfSB = ROOT.Math.WrappedMultiTF1(fSB, 1); ; opt = ROOT.Fit.DataOptions();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/combinedFit_8py.html:96,Load,Loading,96,doc/master/combinedFit_8py.html,https://root.cern,https://root.cern/doc/master/combinedFit_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/combinedFit.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. combinedFit.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_fit; 3## \notebook; 4## Combined (simultaneous) fit of two histogram with separate functions; 5## and some common parameters; 6##; 7## \macro_image; 8## \macro_output; 9## \macro_code; 10##; 11## \author Jonas Rembser, Lorenzo Moneta (C++ version); 12 ; 13 ; 14import ROOT; 15import numpy as np; 16 ; 17 ; 18# definition of shared parameter background function; 19iparB = np.array([0, 2], dtype=np.int32) # exp amplitude in B histo and exp common parameter; 20 ; 21# signal + background function; 22iparSB = np.array(; 23 [; 24 1, # exp amplitude in S+B histo; 25 2, # exp common parameter; 26 3, # Gaussian amplitude; 27 4, # Gaussian mean; 28 5, # Gaussian sigma; 29 ],; 30 dtype=np.int32,; 31); 32 ; 33# Create the GlobalCHi2 structure; 34 ; 35class GlobalChi2(object):; 36 def __init__(self, f1, f2):; 37 self._f1 = f1; 38 self._f2 = f2; 39 ; 40 def __call__(self, par):; 41 # parameter vector is first background (in common 1 and 2) and then is; 42 # signal (only in 2); 43 ; 44 # the zero-copy way to get a numpy array from a double *; 45 par_arr = np.frombuffer(par, dtype=np.float64, count=6); 46 ; 47 p1 = par_arr[iparB]; 48 p2 = par_arr[iparSB]; 49 ; 50 return self._f1(p1) + self._f2(p2); 51 ; 52 ; 53hB = ROOT.TH1D(""hB"", ""histo B"", 100, 0, 100); 54hSB = ROOT.TH1D(""hSB"", ""histo S+B"", 100, 0, 100); 55 ; 56fB = ROOT.TF1(""fB"", ""expo"", 0, 100); 57fB.SetParameters(1, -0.05); 58hB.FillRandom(""fB""); 59 ; 60fS = ROOT.TF1(""fS"", ""gaus"", 0, 100); 61fS.SetParameters(1, 30, 5); 62 ; 63hSB.FillRandom(""fB"", 2000); 64hSB.FillRandom(""fS"", 1000); 65 ; 66# perform now global fit; 67 ; 68fSB = ROOT.TF1(""fSB"", ""expo + gaus(2)"", 0, 100); 69 ; 70wfB = ROOT.Math.WrappedMultiTF1(fB, 1); 71wfSB = ROOT.Math.WrappedMultiTF1(fSB, 1); 72 ; 73opt = ROOT.Fit.DataOptions(); 74rangeB = ROOT.Fit.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/combinedFit_8py_source.html:93,Load,Loading,93,doc/master/combinedFit_8py_source.html,https://root.cern,https://root.cern/doc/master/combinedFit_8py_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/exampleFit3D.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. exampleFit3D.C File ReferenceTutorials » Fit Tutorials. Detailed Description; example of fitting a 3D function Typical multidimensional parametric regression where the predictor depends on 3 variables ; In the case of 1 or 2D one can use the TGraph classes but since no TGraph3D class exists this tutorial provide an example of fitting 3D points; ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 993.065; NDf = 997; Edm = 2.2677e-24; NCalls = 7; p0 = 0.993546 +/- 0.00475134 ; p1 = 0.99397 +/- 0.00434249 ; p2 = 0.997895 +/- 0.000545663 ; Good fit : p-value = 0.529221; ; ; #include ""TRandom2.h""; #include ""TF3.h""; #include ""TError.h""; #include ""Fit/BinData.h""; #include ""Fit/Fitter.h""; #include ""Math/WrappedMultiTF1.h""; ; void exampleFit3D() {; ; const int n = 1000;; double x[n], y[n], z[n], v[n];; double ev = 0.1;; ; // generate the data; TRandom2 r;; for (int i = 0; i < n; ++i) {; x[i] = r.Uniform(0,10);; y[i] = r.Uniform(0,10);; z[i] = r.Uniform(0,10);; v[i] = sin(x[i] ) + cos(y[i]) + z[i] + r.Gaus(0,ev);; }; ; // create a 3d binned data structure; ROOT::Fit::BinData data(n,3);; double xx[3];; for(int i = 0; i < n; ++i) {; xx[0] = x[i];; xx[1] = y[i];; xx[2] = z[i];; // add the 3d-data coordinate, the predictor value (v[i]) and its errors; data.Add(xx, v[i], ev);; }; ; TF3 * f3 = new TF3(""f3"",""[0] * sin(x) + [1] * cos(y) + [2] * z"",0,10,0,10,0,10);; f3->SetParameters(2,2,2);; ROOT::Fit::Fitter fitter;; // wrapped the TF1 in a IParamMultiFunction interface for the Fitter class; ROOT::Math::WrappedMultiTF1 wf(*f3,3);; fitter.SetFunction(wf);; //; bool ret = fitter.Fit(data);; if (ret) {; const ROOT::Fit::FitResult & res = fitter.Result();; // print result (should be around 1); res.Print(std::cout);; // copy all fit result info (values, chi2, etc..) in TF3; f3->SetFitResult(res);; // test fit p-value (chi2 prob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exampleFit3D_8C.html:96,Load,Loading,96,doc/master/exampleFit3D_8C.html,https://root.cern,https://root.cern/doc/master/exampleFit3D_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fit1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit1.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Simple fitting example (1-d histogram with an interpreted function) . ; TFile** fillrandom.root ; TFile* fillrandom.root ; KEY: TFormula form1;1 abs(sin(x)/x); KEY: TF1 sqroot;1 x*gaus(0) + [3]*form1; KEY: TH1F h1f;1 Test random numbers; Formula based function: sqroot ; sqroot : x*gaus(0) + [3]*form1 Ndim= 1, Npar= 4, Number= 0 ; Formula expression: ; x*[p0]*exp(-0.5*((x-[p1])/[p2])*((x-[p1])/[p2]))+[p3]*(abs(sin(x)/x)) ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 198.935; NDf = 190; Edm = 1.49283e-07; NCalls = 149; p0 = 33.1658 +/- 0.545703 ; p1 = 4.00667 +/- 0.0165304 ; p2 = 0.984663 +/- 0.0128238 ; p3 = 63.4464 +/- 1.33233 ; fit1 : Real Time = 0.30 seconds Cpu Time = 0.30 seconds; ; #include ""TCanvas.h""; #include ""TFrame.h""; #include ""TBenchmark.h""; #include ""TString.h""; #include ""TF1.h""; #include ""TH1.h""; #include ""TFile.h""; #include ""TROOT.h""; #include ""TError.h""; #include ""TInterpreter.h""; #include ""TSystem.h""; #include ""TPaveText.h""; ; void fit1() {; TCanvas *c1 = new TCanvas(""c1_fit1"",""The Fit Canvas"",200,10,700,500);; c1->SetGridx();; c1->SetGridy();; c1->GetFrame()->SetFillColor(21);; c1->GetFrame()->SetBorderMode(-1);; c1->GetFrame()->SetBorderSize(5);; ; gBenchmark->Start(""fit1"");; //; // We connect the ROOT file generated in a previous tutorial; // (see <a href=""fillrandom.C.nbconvert.ipynb"">Filling histograms with random numbers from a function</a>); //; TString dir = gROOT->GetTutorialDir();; dir.Append(""/fit/"");; TFile *file = nullptr;; if (!gSystem->AccessPathName(""fillrandom.root"")) {; // file exists; file = TFile::Open(""fillrandom.root"");; } else {; gROOT->ProcessLine(Form("".x %s../hist/fillrandom.C(0)"",dir.Data()));; file = TFile::Open(""fillrandom.root"");; if (!file) return;; }; ; //; // The function ""ls()"" lists the d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit1_8C.html:88,Load,Loading,88,doc/master/fit1_8C.html,https://root.cern,https://root.cern/doc/master/fit1_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fit2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit2.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting a 2-D histogram This tutorial illustrates : . how to create a 2-d function; fill a 2-d histogram randomly from this function; fit the histogram; display the fitted function on top of the histogram. This example can be executed via the interpreter or ACLIC; root > .x fit2.C; root > .x fit2.C++. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1048.29; NDf = 1139; Edm = 3.90056e-06; NCalls = 519; p0 = 392.558 +/- 2.07088 ; p1 = -2.99838 +/- 0.0116072 ; p2 = 2.98484 +/- 0.00840711 ; p3 = -3.00201 +/- 0.0115172 ; p4 = 2.97271 +/- 0.00841038 ; p5 = 601.133 +/- 10.5562 ; p6 = 0.00614073 +/- 0.0119548 ; p7 = 0.81626 +/- 0.0107847 ; p8 = -0.000781266 +/- 0.0134062 ; p9 = 0.911288 +/- 0.0119899 ; p10 = 146.899 +/- 5.12261 ; p11 = 3.9882 +/- 0.0182639 ; p12 = 0.727561 +/- 0.0142962 ; p13 = 4.02637 +/- 0.0175896 ; p14 = 0.703077 +/- 0.0140242 ; ; #include ""TF2.h""; #include ""TH2.h""; #include ""TMath.h""; ; double g2(double *x, double *par) {; double r1 = double((x[0]-par[1])/par[2]);; double r2 = double((x[1]-par[3])/par[4]);; return par[0]*TMath::Exp(-0.5*(r1*r1+r2*r2));; }; double fun2(double *x, double *par) {; double *p1 = &par[0];; double *p2 = &par[5];; double *p3 = &par[10];; double result = g2(x,p1) + g2(x,p2) + g2(x,p3);; return result;; }; ; void fit2() {; const int npar = 15;; double f2params[npar] =; {100,-3,3,-3,3,160,0,0.8,0,0.9,40,4,0.7,4,0.7};; TF2 *f2 = new TF2(""f2"",fun2,-10,10,-10,10, npar);; f2->SetParameters(f2params);; ; //Create an histogram and fill it randomly with f2; TH2F *h2 = new TH2F(""h2"",""from f2"",40,-10,10,40,-10,10);; int nentries = 100000;; h2->FillRandom(""f2"",nentries);; //Fit h2 with original function f2; float ratio = 4*nentries/100000;; f2params[ 0] *= ratio;; f2params[ 5] *= ratio;; f2params[10] *= ratio;; f2->",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2_8C.html:88,Load,Loading,88,doc/master/fit2_8C.html,https://root.cern,https://root.cern/doc/master/fit2_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fit2a.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit2a.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting a 2-D histogram (a variant) This tutorial illustrates : . how to create a 2-d function; fill a 2-d histogram randomly from this function; fit the histogram; display the fitted function on top of the histogram (lego-plot) using a surface plot in a sub-range of the histogram. This example can be executed via the interpreter or/and the compiler; root > .x fit2a.C; root > .x fit2a.C++. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1048.29; NDf = 1139; Edm = 3.90056e-06; NCalls = 519; p0 = 392.558 +/- 2.07088 ; p1 = -2.99838 +/- 0.0116072 ; p2 = 2.98484 +/- 0.00840711 ; p3 = -3.00201 +/- 0.0115172 ; p4 = 2.97271 +/- 0.00841038 ; p5 = 601.133 +/- 10.5562 ; p6 = 0.00614073 +/- 0.0119548 ; p7 = 0.81626 +/- 0.0107847 ; p8 = -0.000781266 +/- 0.0134062 ; p9 = 0.911288 +/- 0.0119899 ; p10 = 146.899 +/- 5.12261 ; p11 = 3.9882 +/- 0.0182639 ; p12 = 0.727561 +/- 0.0142962 ; p13 = 4.02637 +/- 0.0175896 ; p14 = 0.703077 +/- 0.0140242 ; (TCanvas *) 0x557b5f4d89f0; ; #include ""TF2.h""; #include ""TH2.h""; #include ""TCutG.h""; #include ""TMath.h""; #include ""TCanvas.h""; #include ""TStyle.h""; ; double g2(double *x, double *par) {; double r1 = double((x[0]-par[1])/par[2]);; double r2 = double((x[1]-par[3])/par[4]);; return par[0]*TMath::Exp(-0.5*(r1*r1+r2*r2));; }; double fun2(double *x, double *par) {; double *p1 = &par[0];; double *p2 = &par[5];; double *p3 = &par[10];; double result = g2(x,p1) + g2(x,p2) + g2(x,p3);; return result;; }; ; TCanvas *fit2a() {; TCanvas *c = new TCanvas();; gStyle->SetOptStat(true);; gStyle->SetPalette(57);; const int npar = 15;; double f2params[npar] = {100,-3,3,-3,3,160,0,0.8,0,0.9,40,4,0.7,4,0.7};; auto f2 = new TF2(""f2"",fun2,-10,10,-10,10, npar);; f2->SetParameters(f2params);; ; //Create an histogram and fill it randomly w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2a_8C.html:89,Load,Loading,89,doc/master/fit2a_8C.html,https://root.cern,https://root.cern/doc/master/fit2a_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fit2d.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit2d.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example illustrating how to fit a 2-d histogram of type y=f(x) . ; ****************************************; Minimizer is Linear / Migrad; Chi2 = 4501.58; NDf = 33; p0 = -0.47055 +/- 0.00713644 ; p1 = 10.8033 +/- 0.0124078 ; ; #include <TCanvas.h>; #include <TCutG.h>; #include <TH2F.h>; #include <TProfile.h>; #include <TRandom.h>; ; void fit2d(); {; // generate a 2-d histogram using a TCutG; const int n = 6;; float x[n] = {0.092,0.83,0.94,0.81,0.12,0.1};; float y[n] = {0.71,9.4,9,8,0.3,0.71};; TCutG *cut = new TCutG(""cut"",n,x,y);; TH2F *h2 = new TH2F(""h2"",""h2"",40,0,1,40,0,10);; float u,v;; for (int i=0;i<100000;i++) {; u = gRandom->Rndm();; v = 10*gRandom->Rndm();; if (cut->IsInside(u,v)) h2->Fill(u,v);; }; TCanvas *c1 = new TCanvas(""c1"",""show profile"",600,900);; c1->Divide(1,2);; c1->cd(1);; h2->Draw();; c1->cd(2);; ; //use a TProfile to convert the 2-d to 1-d problem; TProfile *prof = h2->ProfileX();; prof->Fit(""pol1"");; }; ; TCanvas.h; TCutG.h; TH2F.h; TProfile.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TCanvasThe Canvas class.Definition TCanvas.h:23; TCutGGraphical cut class.Definition TCutG.h:20; TGraph::IsInsidevirtual Int_t IsInside(Double_t x, Double_t y) constReturn 1 if the point (x,y) is inside the polygon defined by the graph vertices 0 otherwise.Definition TGraph.cxx:1841; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TProfileProfile Histogram.Definition TProfile.h:32; TRandom::RndmDouble_t Rndm() overrideMachine independent random number generator.Definition TRandom.cxx:559; yDouble_t y[n]Definition le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2d_8C.html:89,Load,Loading,89,doc/master/fit2d_8C.html,https://root.cern,https://root.cern/doc/master/fit2d_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fit2dHist.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fit2dHist.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example to fit two histograms at the same time via the Fitter class. ; To execute this tutorial, you can do:; root > .x fit2dHist.C (executing via cling, slow); or root > .x fit2dHist.C+ (executing via ACLIC , fast, with Minuit); root > .x fit2dHist.C+(2) (executing via ACLIC , fast, with Minuit2); xDouble_t x[n]Definition legend1.C:17; or using the option to fit independently the 2 histos root > .x fit2dHist.C+(10) (via ACLIC, fast, independent fits with Minuit); root > .x fit2dHist.C+(12) (via ACLIC, fast, independent fits with Minuit2); Note that you can also execute this script in batch with eg, root -b -q ""fit2dHist.C+(12)""; b#define b(i)Definition RSha256.hxx:100; qfloat * qDefinition THbookFile.cxx:89; or execute interactively from the shell root fit2dHist.C+; root ""fit2dHist.C+(12)"". ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 2613.61; NDf = 2478; Edm = 2.04928e-05; NCalls = 1133; p0 = 534.106 +/- 2.22027 ; p1 = 6.00013 +/- 0.00562856 ; p2 = 1.98723 +/- 0.00361514 ; p3 = 7.02975 +/- 0.0260609 ; p4 = 2.9968 +/- 0.0137019 ; p5 = 519.282 +/- 50.0512 ; p6 = 11.5486 +/- 0.456627 ; p7 = 2.72866 +/- 0.245596 ; p8 = 11.1983 +/- 0.233757 ; p9 = 2.08449 +/- 0.0982633 ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 2220.46; NDf = 2231; Edm = 2.08188e-06; NCalls = 311; p0 = 530.876 +/- 1.55657 ; p1 = 6.0121 +/- 0.00596885 ; p2 = 1.99427 +/- 0.0055483 ; p3 = 6.98634 +/- 0.0177191 ; p4 = 2.98763 +/- 0.0113697 ; p5 = 532.75 +/- 1.15393 ; p6 = 11.9894 +/- 0.00876067 ; p7 = 2.99537 +/- 0.00613849 ; p8 = 10.9975 +/- 0.00338646 ; p9 = 1.98879 +/- 0.00240993 ; (int) 0; ; #include ""TH2D.h""; #include ""TF2.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TRandom3.h""; #include ""Fit/Fitter.h""; #include ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2dHist_8C.html:93,Load,Loading,93,doc/master/fit2dHist_8C.html,https://root.cern,https://root.cern/doc/master/fit2dHist_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitCircle.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitCircle.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Generate points distributed with some errors around a circle Fit a circle through the points and draw To run the script, do, eg ; root > .x fitCircle.C (10000 points by default); root > .x fitCircle.C(100); (with only 100 points; root > .x fitCircle.C++(100000); with ACLIC; pointsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t pointsDefinition TGWin32VirtualXProxy.cxx:148. ; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 903.174; NDf = 0; Edm = 8.44653e-07; NCalls = 65; x0 = 0.00667903 +/- 0.0141774 ; y0 = 0.00535479 +/- 0.0141954 ; R = 3.995 +/- 0.0100048 ; ; #include ""TCanvas.h""; #include ""TRandom3.h""; #include ""TGraph.h""; #include ""TMath.h""; #include ""TArc.h""; #include ""Fit/Fitter.h""; #include <Math/Functor.h>; ; //____________________________________________________________________; void fitCircle(int n=10000) {; //generates n points around a circle and fit them; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,600);; c1->SetGrid();; TGraph* gr = new TGraph(n);; if (n> 999) gr->SetMarkerStyle(1);; else gr->SetMarkerStyle(3);; TRandom3 r;; double x,y;; for (int i=0;i<n;i++) {; r.Circle(x,y,r.Gaus(4,0.3));; gr->SetPoint(i,x,y);; }; c1->DrawFrame(-5,-5,5,5);; gr->Draw(""p"");; ; ; auto chi2Function = [&](const double *par) {; //minimisation function computing the sum of squares of residuals; // looping at the graph points; int np = gr->GetN();; double f = 0;; double *x = gr->GetX();; double *y = gr->GetY();; for (int i=0;i<np;i++) {; double u = x[i] - par[0];; double v = y[i] - par[1];; double dr = par[2] - std::sqrt(u*u+v*v);; f += dr*dr;; }; return f;; };; ; // wrap chi2 function in a function object for the fit; // 3 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitCircle_8C.html:93,Load,Loading,93,doc/master/fitCircle_8C.html,https://root.cern,https://root.cern/doc/master/fitCircle_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitConvolution.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitConvolution.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for convolution of two functions . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 298.12; NDf = 96; Edm = 1.67196e-06; NCalls = 448; p0 = 7.32861 +/- 0.0370492 ; p1 = 0.0733018 +/- 0.00243973 ; p2 = -2.26418 +/- 0.0491372 ; p3 = 1.12808 +/- 0.0628185 ; ; #include <TCanvas.h>; #include <TRandom.h>; #include <TF1Convolution.h>; #include <TF1.h>; #include <TH1F.h>; ; void fitConvolution(); {; // Construction of histogram to fit.; TH1F *h_ExpGauss = new TH1F(""h_ExpGauss"", ""Exponential convoluted by Gaussian"", 100, 0., 5.);; for (int i = 0; i < 1e6; i++) {; // Gives a alpha of -0.3 in the exp.; double x = gRandom->Exp(1. / 0.3);; x += gRandom->Gaus(0., 3.);; // Probability density function of the addition of two variables is the; // convolution of two density functions.; h_ExpGauss->Fill(x);; }; ; TF1Convolution *f_conv = new TF1Convolution(""expo"", ""gaus"", -1, 6, true);; f_conv->SetRange(-1., 6.);; f_conv->SetNofPointsFFT(1000);; TF1 *f = new TF1(""f"", *f_conv, 0., 5., f_conv->GetNpar());; f->SetParameters(1., -0.3, 0., 1.);; ; // Fit.; h_ExpGauss->Fit(""f"");; }; f#define f(i)Definition RSha256.hxx:104; TCanvas.h; TF1Convolution.h; TF1.h; TH1F.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TF1ConvolutionClass wrapping convolution of two functions.Definition TF1Convolution.h:20; TF1Convolution::GetNparInt_t GetNpar() constDefinition TF1Convolution.h:68; TF1Convolution::SetRangevoid SetRange(Double_t a, Double_t b) overrideSet the actual range used for the convolution.Definition TF1Convolution.cxx:452; TF1Convolution::SetNofPointsFFTvoid SetNofPointsFFT(Int_t n)Set the number of points used for the FFT convolution.Definition TF1Convolution.cxx:382; TF11-Dim function classDefinition TF1.h:233; TH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitConvolution_8C.html:98,Load,Loading,98,doc/master/fitConvolution_8C.html,https://root.cern,https://root.cern/doc/master/fitConvolution_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitConvolution.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitConvolution.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook -js; 4/// Tutorial for convolution of two functions; 5///; 6/// \macro_image; 7/// \macro_output; 8/// \macro_code; 9///; 10/// \author Aurelie Flandi; 11 ; 12#include <TCanvas.h>; 13#include <TRandom.h>; 14#include <TF1Convolution.h>; 15#include <TF1.h>; 16#include <TH1F.h>; 17 ; 18void fitConvolution(); 19{; 20 // Construction of histogram to fit.; 21 TH1F *h_ExpGauss = new TH1F(""h_ExpGauss"", ""Exponential convoluted by Gaussian"", 100, 0., 5.);; 22 for (int i = 0; i < 1e6; i++) {; 23 // Gives a alpha of -0.3 in the exp.; 24 double x = gRandom->Exp(1. / 0.3);; 25 x += gRandom->Gaus(0., 3.);; 26 // Probability density function of the addition of two variables is the; 27 // convolution of two density functions.; 28 h_ExpGauss->Fill(x);; 29 }; 30 ; 31 TF1Convolution *f_conv = new TF1Convolution(""expo"", ""gaus"", -1, 6, true);; 32 f_conv->SetRange(-1., 6.);; 33 f_conv->SetNofPointsFFT(1000);; 34 TF1 *f = new TF1(""f"", *f_conv, 0., 5., f_conv->GetNpar());; 35 f->SetParameters(1., -0.3, 0., 1.);; 36 ; 37 // Fit.; 38 h_ExpGauss->Fit(""f"");; 39}; f#define f(i)Definition RSha256.hxx:104; TCanvas.h; TF1Convolution.h; TF1.h; TH1F.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TF1ConvolutionClass wrapping convolution of two functions.Definition TF1Convolution.h:20; TF1Convolution::GetNparInt_t GetNpar() constDefinition TF1Convolution.h:68; TF1Convolution::SetRangevoid SetRange(Double_t a, Double_t b) overrideSet the actual range used for the convolution.Definition TF1Convolution.cxx:452; TF1Convolution::SetNofPointsFFTvoid SetNofPointsFFT(Int_t n)Set the number of points used for the FFT convolution.Definition TF1Convolution.cxx:382; TF11-Dim function classDefinition TF1.h:233; TH1F1-D histogram with a float per chann",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitConvolution_8C_source.html:95,Load,Loading,95,doc/master/fitConvolution_8C_source.html,https://root.cern,https://root.cern/doc/master/fitConvolution_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitConvolution.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; fitConvolution.py File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for convolution of two functions . ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 298.12; NDf = 96; Edm = 1.67196e-06; NCalls = 448; p0 = 7.32861 +/- 0.0370492 ; p1 = 0.0733018 +/- 0.00243973 ; p2 = -2.26418 +/- 0.0491372 ; p3 = 1.12808 +/- 0.0628185 ; ; import ROOT; ; # Construction of histogram to fit.; h_ExpGauss = ROOT.TH1F(""h_ExpGauss"", ""Exponential convoluted by Gaussian"", 100, 0.0, 5.0); for i in range(1000000):; # Gives a alpha of -0.3 in the exp.; x = ROOT.gRandom.Exp(1.0 / 0.3); x += ROOT.gRandom.Gaus(0.0, 3.0); # Probability density function of the addition of two variables is the; # convolution of two density functions.; h_ExpGauss.Fill(x); ; f_conv = ROOT.TF1Convolution(""expo"", ""gaus"", -1, 6, True); f_conv.SetRange(-1.0, 6.0); f_conv.SetNofPointsFFT(1000); f = ROOT.TF1(""f"", f_conv, 0.0, 5.0, f_conv.GetNpar()); f.SetParameters(1.0, -0.3, 0.0, 1.0); ; c1 = ROOT.TCanvas(""c1"", ""c1"", 800, 1000); ; # Fit and draw result of the fit; h_ExpGauss.Fit(""f""); ; c1.SaveAs(""fitConvolution.png""); AuthorJonas Rembser, Aurelie Flandi (C++ version) ; Definition in file fitConvolution.py. tutorialsfitfitConvolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitConvolution_8py.html:99,Load,Loading,99,doc/master/fitConvolution_8py.html,https://root.cern,https://root.cern/doc/master/fitConvolution_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitConvolution.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitConvolution.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_fit; 3## \notebook; 4## Tutorial for convolution of two functions; 5##; 6## \macro_image; 7## \macro_output; 8## \macro_code; 9##; 10## \author Jonas Rembser, Aurelie Flandi (C++ version); 11 ; 12import ROOT; 13 ; 14# Construction of histogram to fit.; 15h_ExpGauss = ROOT.TH1F(""h_ExpGauss"", ""Exponential convoluted by Gaussian"", 100, 0.0, 5.0); 16for i in range(1000000):; 17 # Gives a alpha of -0.3 in the exp.; 18 x = ROOT.gRandom.Exp(1.0 / 0.3); 19 x += ROOT.gRandom.Gaus(0.0, 3.0); 20 # Probability density function of the addition of two variables is the; 21 # convolution of two density functions.; 22 h_ExpGauss.Fill(x); 23 ; 24f_conv = ROOT.TF1Convolution(""expo"", ""gaus"", -1, 6, True); 25f_conv.SetRange(-1.0, 6.0); 26f_conv.SetNofPointsFFT(1000); 27f = ROOT.TF1(""f"", f_conv, 0.0, 5.0, f_conv.GetNpar()); 28f.SetParameters(1.0, -0.3, 0.0, 1.0); 29 ; 30c1 = ROOT.TCanvas(""c1"", ""c1"", 800, 1000); 31 ; 32# Fit and draw result of the fit; 33h_ExpGauss.Fit(""f""); 34 ; 35c1.SaveAs(""fitConvolution.png""). tutorialsfitfitConvolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitConvolution_8py_source.html:96,Load,Loading,96,doc/master/fitConvolution_8py_source.html,https://root.cern,https://root.cern/doc/master/fitConvolution_8py_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitExclude.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitExclude.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Illustrates how to fit excluding points in a given range. . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 84.1529; NDf = 78; Edm = 8.41446e-22; NCalls = 32; p0 = 28.4731 +/- 0.946564 ; p1 = -4.81581 +/- 0.26533 ; ; #include <TH1.h>; #include <TF1.h>; #include <TROOT.h>; ; bool reject;; double fline(double *x, double *par); {; if (reject && x[0] > 2.5 && x[0] < 3.5) {; TF1::RejectPoint();; return 0;; }; return par[0] + par[1]*x[0];; }; ; void fitExclude() {; //Create a source function; TF1 *f1 = new TF1(""f1"",""[0] +[1]*x +gaus(2)"",0,5);; f1->SetParameters(6,-1,5,3,0.2);; // create and fill histogram according to the source function; TH1F *h = new TH1F(""h"",""background + signal"",100,0,5);; h->FillRandom(""f1"",2000);; TF1 *fl = new TF1(""fl"",fline,0,5,2);; fl->SetParameters(2,-1);; //fit only the linear background excluding the signal area; reject = true;; h->Fit(fl,""0"");; reject = false;; //store 2 separate functions for visualization; TF1 *fleft = new TF1(""fleft"",fline,0,2.5,2);; fleft->SetParameters(fl->GetParameters());; h->GetListOfFunctions()->Add(fleft);; gROOT->GetListOfFunctions()->Remove(fleft);; TF1 *fright = new TF1(""fright"",fline,3.5,5,2);; fright->SetParameters(fl->GetParameters());; h->GetListOfFunctions()->Add(fright);; gROOT->GetListOfFunctions()->Remove(fright);; h->Draw();; }; ; h#define h(i)Definition RSha256.hxx:106; TF1.h; TH1.h; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TF11-Dim function classDefinition TF1.h:233; TF1::RejectPointstatic void RejectPoint(Bool_t reject=kTRUE)Static function to set the global flag to reject points the fgRejectPoint global flag is tested by al...Definition TF1.cxx:3683; TF1::GetParametersvirtual Double_t * GetParameters() constDefinition TF1.h:548; TF1::SetParametersvirtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitExclude_8C.html:94,Load,Loading,94,doc/master/fitExclude_8C.html,https://root.cern,https://root.cern/doc/master/fitExclude_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitLinear.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitLinear.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example of fitting with a linear function, using TLinearFitter This example is for a TGraphErrors, but it can also be used when fitting a histogram, a TGraph2D or a TMultiGraph . ; ****************************************; Minimizer is Linear / Migrad; Chi2 = 36.5406; NDf = 36; p0 = -7.07142 +/- 0.0233493 ; p1 = -0.0194368 +/- 0.0354128 ; p2 = 2.03968 +/- 0.0136149 ; p3 = 1.00594 +/- 0.0139068 ; ****************************************; Minimizer is Linear / Migrad; Chi2 = 46.7362; NDf = 38; p0 = 1.0005 +/- 0.0242765 ; p1 = 0.985942 +/- 0.0279149 ; ****************************************; Minimizer is Linear / Migrad; Chi2 = 43.6161; NDf = 38; p0 = -2.04095 +/- 0.0220454 ; p1 = 1.01171 +/- 0.00904363 ; ; #include ""TGraphErrors.h""; #include ""TF1.h""; #include ""TRandom.h""; #include ""TCanvas.h""; #include ""TLegend.h""; #include ""TMath.h""; ; ; void makePoints(int n, double *x, double *y, double *e, int p);; ; void fitLinear(); {; int n = 40;; double *x = new double[n];; double *y = new double[n];; double *e = new double[n];; TCanvas *myc = new TCanvas(""myc"",; ""Fitting 3 TGraphErrors with linear functions"");; myc->SetGrid();; ; //Generate points along a 3rd degree polynomial:; makePoints(n, x, y, e, 3);; TGraphErrors *gre3 = new TGraphErrors(n, x, y, nullptr, e);; gre3->Draw(""a*"");; //Fit the graph with the predefined ""pol3"" function; gre3->Fit(""pol3"");; //Access the fit results; TF1 *f3 = gre3->GetFunction(""pol3"");; f3->SetLineWidth(1);; ; //Generate points along a sin(x)+sin(2x) function; makePoints(n, x, y, e, 2);; TGraphErrors *gre2=new TGraphErrors(n, x, y, nullptr, e);; gre2->Draw(""*same"");; gre2->SetMarkerColor(kBlue);; gre2->SetLineColor(kBlue);; //The fitting function can be predefined and passed to the Fit function; //The ""++"" mean that the linear fitter should ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitLinear_8C.html:93,Load,Loading,93,doc/master/fitLinear_8C.html,https://root.cern,https://root.cern/doc/master/fitLinear_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitLinear2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitLinear2.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fit a 5d hyperplane by n points, using the linear fitter directly ; This macro shows some features of the TLinearFitter class A 5-d hyperplane is fit, a constant term is assumed in the hyperplane equation (y = a0 + a1*x0 + a2*x1 + a3*x2 + a4*x3 + a5*x4); ; par[0]=0.000069+-0.001011; par[1]=3.999934+-0.000164; par[2]=0.999835+-0.000172; par[3]=1.999892+-0.000178; par[4]=2.999967+-0.000185; par[5]=0.199823+-0.000174; chisquare=70.148012; ; More Points:; par[0]=0.000551+-0.000712; par[1]=3.999910+-0.000121; par[2]=0.999886+-0.000125; par[3]=2.000067+-0.000123; par[4]=2.999915+-0.000127; par[5]=0.199918+-0.000130; chisquare=145.050322490893336; ; Without Constant; par[0]=3.999913+-0.000121; par[1]=0.999890+-0.000125; par[2]=2.000057+-0.000123; par[3]=2.999919+-0.000127; par[4]=0.199918+-0.000130; chisquare=145.649621; ; Fixed Constant:; par[0]=0.000536+-0.000712; par[1]=4.000000+-1.000000; par[2]=0.999884+-0.000125; par[3]=2.000070+-0.000123; par[4]=2.999910+-0.000127; par[5]=0.199920+-0.000130; chisquare=145.602523231220914; ; #include ""TLinearFitter.h""; #include ""TF1.h""; #include ""TRandom.h""; ; void fitLinear2(); {; int n=100;; int i;; TRandom randNum;; TLinearFitter *lf=new TLinearFitter(5);; ; //The predefined ""hypN"" functions are the fastest to fit; lf->SetFormula(""hyp5"");; ; double *x=new double[n*10*5];; double *y=new double[n*10];; double *e=new double[n*10];; ; //Create the points and put them into the fitter; for (i=0; i<n; i++){; x[0 + i*5] = randNum.Uniform(-10, 10);; x[1 + i*5] = randNum.Uniform(-10, 10);; x[2 + i*5] = randNum.Uniform(-10, 10);; x[3 + i*5] = randNum.Uniform(-10, 10);; x[4 + i*5] = randNum.Uniform(-10, 10);; e[i] = 0.01;; y[i] = 4*x[0+i*5] + x[1+i*5] + 2*x[2+i*5] + 3*x[3+i*5] + 0.2*x[4+i*5] + randNum.Gaus()*e[i];; }; ; //To avoid copying ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitLinear2_8C.html:94,Load,Loading,94,doc/master/fitLinear2_8C.html,https://root.cern,https://root.cern/doc/master/fitLinear2_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitLinearRobust.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitLinearRobust.C File ReferenceTutorials » Fit Tutorials. Detailed Description; This tutorial shows how the least trimmed squares regression, included in the TLinearFitter class, can be used for fitting in cases when the data contains outliers. ; Here the fitting is done via the TGraph::Fit function with option ""rob"": If you want to use the linear fitter directly for computing the robust fitting coefficients, just use the TLinearFitter::EvalRobust function instead of TLinearFitter::Eval. ; Ordinary least squares:; ****************************************; Minimizer is Linear / Migrad; Chi2 = 606758; NDf = 246; p0 = 15.724 +/- 0.0887641 ; p1 = -0.835912 +/- 0.14096 ; p2 = -3.40616 +/- 0.0607296 ; p3 = 4.82569 +/- 0.0602628 ; Resistant Least trimmed squares fit:; ****************************************; Minimizer is Linear / Robust (h=0.75); Chi2 = 634792; NDf = 246; p0 = 1.00953; p1 = 1.71148; p2 = 2.97937; p3 = 4.07752; ; #include ""TRandom.h""; #include ""TGraphErrors.h""; #include ""TF1.h""; #include ""TCanvas.h""; #include ""TLegend.h""; ; void fitLinearRobust(); {; //First generate a dataset, where 20% of points are spoiled by large; //errors; int npoints = 250;; int fraction = int(0.8*npoints);; double *x = new double[npoints];; double *y = new double[npoints];; double *e = new double[npoints];; TRandom r;; int i;; for (i=0; i<fraction; i++){; //the good part of the sample; x[i]=r.Uniform(-2, 2);; e[i]=1;; y[i]=1 + 2*x[i] + 3*x[i]*x[i] + 4*x[i]*x[i]*x[i] + e[i]*r.Gaus();; }; for (i=fraction; i<npoints; i++){; //the bad part of the sample; x[i]=r.Uniform(-1, 1);; e[i]=1;; y[i] = 1 + 2*x[i] + 3*x[i]*x[i] + 4*x[i]*x[i]*x[i] + r.Landau(10, 5);; }; ; TGraphErrors *grr = new TGraphErrors(npoints, x, y, nullptr, e);; grr->SetMinimum(-30);; grr->SetMaximum(80);; TF1 *ffit1 = new TF1(""ffit1"", ""pol3"", -5, 5);; TF1 *ffit2 = new TF1(""ffit2"", ""pol3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitLinearRobust_8C.html:99,Load,Loading,99,doc/master/fitLinearRobust_8C.html,https://root.cern,https://root.cern/doc/master/fitLinearRobust_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitMultiGraph.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitMultiGraph.C File ReferenceTutorials » Fit Tutorials. Detailed Description; fitting a parabola to a multigraph of 3 partly overlapping graphs with different errors . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 95.1374; NDf = 87; Edm = 8.90994e-21; NCalls = 55; p0 = 3.21134 +/- 0.428055 ; p1 = 1.87952 +/- 0.248404 ; p2 = 1.00914 +/- 0.0349228 ; ; #include ""TMultiGraph.h""; #include ""TRandom.h""; #include ""TF1.h""; #include ""TGraphErrors.h""; #include ""TCanvas.h""; #include ""TMath.h""; ; void fitMultiGraph(); {; int n = 30;; double *xvalues1 = new double[n];; double *xvalues2 = new double[n];; double *xvalues3 = new double[n];; double *yvalues1 = new double[n];; double *yvalues2 = new double[n];; double *yvalues3 = new double[n];; double *evalues1 = new double[n];; double *evalues2 = new double[n];; double *evalues3 = new double[n];; ; //generate the data for the graphs; TRandom r;; int i;; for (i=0; i<n; i++) {; xvalues1[i] = r.Uniform(0.1, 5);; xvalues2[i] = r.Uniform(3, 8);; xvalues3[i] = r.Uniform(9, 15);; yvalues1[i] = 3 + 2*xvalues1[i] + xvalues1[i]*xvalues1[i] + r.Gaus();; yvalues2[i] = 3 + 2*xvalues2[i] + xvalues2[i]*xvalues2[i] + r.Gaus()*10;; evalues1[i] = 1;; evalues2[i] = 10;; evalues3[i] = 20;; yvalues3[i] = 3 + 2*xvalues3[i] + xvalues3[i]*xvalues3[i] + r.Gaus()*20;; }; ; //create the graphs and set their drawing options; TGraphErrors *gr1 = new TGraphErrors(n, xvalues1, yvalues1, nullptr, evalues1);; TGraphErrors *gr2 = new TGraphErrors(n, xvalues2, yvalues2, nullptr, evalues2);; TGraphErrors *gr3 = new TGraphErrors(n, xvalues3, yvalues3, nullptr, evalues3);; gr1->SetLineColor(kRed);; gr2->SetLineColor(kBlue);; gr2->SetMarkerStyle(24);; gr2->SetMarkerSize(0.3);; gr3->SetLineColor(kGreen);; gr3->SetMarkerStyle(24);; gr3->SetMarkerSize(0.3);; ; //add the graphs to the multigraph; TMultiGrap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitMultiGraph_8C.html:97,Load,Loading,97,doc/master/fitMultiGraph_8C.html,https://root.cern,https://root.cern/doc/master/fitMultiGraph_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitNormSum.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitNormSum.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for normalized sum of two functions Here: a background exponential and a crystalball function Parameters can be set: . with the TF1 object before adding the function (for 3) and 4)); with the TF1NormSum object (first two are the coefficients, then the non constant parameters); with the TF1 object after adding the function. Sum can be constructed by:; by a string containing the names of the functions and/or the coefficient in front; by a string containg formulas like expo, gaus...; by the list of functions and coefficients (which are 1 by default); by a std::vector for functions and coefficients. ; Time to generate 1050000 events: Real time 0:00:00, CP time 0.160; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1018.73; NDf = 993; Edm = 9.65559e-06; NCalls = 233; NSignal = 50082 +/- 1231.21 ; NBackground = 998899 +/- 1569.86 ; Mean = 2.99896 +/- 0.0022426 ; Sigma = 0.297871 +/- 0.00230279 ; Alpha = 2.12493 +/- 0.1368 ; N = 1.1562 +/- 0.468136 ; Slope = -0.300341 +/- 0.000644187 ; Time to fit using ROOT TF1Normsum: Real time 0:00:00, CP time 0.160; ; #include <Math/MinimizerOptions.h>; #include <TCanvas.h>; #include <TF1.h>; #include <TF1NormSum.h>; #include <TFitResult.h>; #include <TH1.h>; #include <TLatex.h>; #include <TMath.h>; #include <TStopwatch.h>; #include <TStyle.h>; ; void fitNormSum(); {; const int nsig = 5.E4;; const int nbkg = 1.e6;; int nEvents = nsig + nbkg;; int nBins = 1e3;; ; double signal_mean = 3;; TF1 *f_cb = new TF1(""MyCrystalBall"", ""crystalball"", -5., 5.);; TF1 *f_exp = new TF1(""MyExponential"", ""expo"", -5., 5.);; ; // I.:; f_exp->SetParameters(1., -0.3);; f_cb->SetParameters(1, signal_mean, 0.3, 2, 1.5);; ; // CONSTRUCTION OF THE TF1NORMSUM OBJECT ........................................; // 1) :; TF1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8C.html:94,Load,Loading,94,doc/master/fitNormSum_8C.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitNormSum.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitNormSum.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook; 4/// Tutorial for normalized sum of two functions; 5/// Here: a background exponential and a crystalball function; 6/// Parameters can be set:; 7/// 1. with the TF1 object before adding the function (for 3) and 4)); 8/// 2. with the TF1NormSum object (first two are the coefficients, then the non constant parameters); 9/// 3. with the TF1 object after adding the function; 10///; 11/// Sum can be constructed by:; 12/// 1. by a string containing the names of the functions and/or the coefficient in front; 13/// 2. by a string containg formulas like expo, gaus...; 14/// 3. by the list of functions and coefficients (which are 1 by default); 15/// 4. by a std::vector for functions and coefficients; 16///; 17/// \macro_image; 18/// \macro_output; 19/// \macro_code; 20///; 21/// \author Lorenzo Moneta; 22 ; 23#include <Math/MinimizerOptions.h>; 24#include <TCanvas.h>; 25#include <TF1.h>; 26#include <TF1NormSum.h>; 27#include <TFitResult.h>; 28#include <TH1.h>; 29#include <TLatex.h>; 30#include <TMath.h>; 31#include <TStopwatch.h>; 32#include <TStyle.h>; 33 ; 34void fitNormSum(); 35{; 36 const int nsig = 5.E4;; 37 const int nbkg = 1.e6;; 38 int nEvents = nsig + nbkg;; 39 int nBins = 1e3;; 40 ; 41 double signal_mean = 3;; 42 TF1 *f_cb = new TF1(""MyCrystalBall"", ""crystalball"", -5., 5.);; 43 TF1 *f_exp = new TF1(""MyExponential"", ""expo"", -5., 5.);; 44 ; 45 // I.:; 46 f_exp->SetParameters(1., -0.3);; 47 f_cb->SetParameters(1, signal_mean, 0.3, 2, 1.5);; 48 ; 49 // CONSTRUCTION OF THE TF1NORMSUM OBJECT ........................................; 50 // 1) :; 51 TF1NormSum *fnorm_exp_cb = new TF1NormSum(f_cb, f_exp, nsig, nbkg);; 52 // 4) :; 53 ; 54 TF1 *f_sum = new TF1(""fsum"", *fnorm_exp_cb, -5., 5., fnorm_exp_cb->GetNpar());; 55 ; 56 // III.:; 57 f_sum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8C_source.html:91,Load,Loading,91,doc/master/fitNormSum_8C_source.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitNormSum.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; fitNormSum.py File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for normalized sum of two functions Here: a background exponential and a crystalball function Parameters can be set: . with the TF1 object before adding the function (for 3) and 4)); with the TF1NormSum object (first two are the coefficients, then the non constant parameters); with the TF1 object after adding the function. Sum can be constructed by:; by a string containing the names of the functions and/or the coefficient in front; by a string containg formulas like expo, gaus...; by the list of functions and coefficients (which are 1 by default); by a std::vector for functions and coefficients. Real time 0:00:00, CP time 0.270; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 1018.73; NDf = 993; Edm = 9.65559e-06; NCalls = 233; NSignal = 50082 +/- 1231.21 ; NBackground = 998899 +/- 1569.86 ; Mean = 2.99896 +/- 0.0022426 ; Sigma = 0.297871 +/- 0.00230279 ; Alpha = 2.12493 +/- 0.1368 ; N = 1.1562 +/- 0.468136 ; Slope = -0.300341 +/- 0.000644187 ; Real time 0:00:00, CP time 0.270; Time to generate 1050000 events: ; Time to fit using ROOT TF1Normsum: ; ; import ROOT; ; nsig = 50000; nbkg = 1000000; nEvents = nsig + nbkg; nBins = 1000; ; signal_mean = 3.0; f_cb = ROOT.TF1(""MyCrystalBall"", ""crystalball"", -5.0, 5.0); f_exp = ROOT.TF1(""MyExponential"", ""expo"", -5.0, 5.0); ; # I.:; f_exp.SetParameters(1.0, -0.3); f_cb.SetParameters(1, signal_mean, 0.3, 2, 1.5); ; # CONSTRUCTION OF THE TF1NORMSUM OBJECT ........................................; # 1) :; fnorm_exp_cb = ROOT.TF1NormSum(f_cb, f_exp, nsig, nbkg); # 4) :; ; f_sum = ROOT.TF1(""fsum"", fnorm_exp_cb, -5.0, 5.0, fnorm_exp_cb.GetNpar()); ; # III.:; parameter_values = fnorm_exp_cb.GetParameters(); f_sum.SetParameters(parameter_values.data()); # Note: in the C++ tuto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8py.html:95,Load,Loading,95,doc/master/fitNormSum_8py.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitNormSum.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitNormSum.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_fit; 3## \notebook; 4## Tutorial for normalized sum of two functions; 5## Here: a background exponential and a crystalball function; 6## Parameters can be set:; 7## 1. with the TF1 object before adding the function (for 3) and 4)); 8## 2. with the TF1NormSum object (first two are the coefficients, then the non constant parameters); 9## 3. with the TF1 object after adding the function; 10##; 11## Sum can be constructed by:; 12## 1. by a string containing the names of the functions and/or the coefficient in front; 13## 2. by a string containg formulas like expo, gaus...; 14## 3. by the list of functions and coefficients (which are 1 by default); 15## 4. by a std::vector for functions and coefficients; 16##; 17## \macro_image; 18## \macro_output; 19## \macro_code; 20##; 21## \author Jonas Rembser, Lorenzo Moneta (C++ version); 22 ; 23import ROOT; 24 ; 25nsig = 50000; 26nbkg = 1000000; 27nEvents = nsig + nbkg; 28nBins = 1000; 29 ; 30signal_mean = 3.0; 31f_cb = ROOT.TF1(""MyCrystalBall"", ""crystalball"", -5.0, 5.0); 32f_exp = ROOT.TF1(""MyExponential"", ""expo"", -5.0, 5.0); 33 ; 34# I.:; 35f_exp.SetParameters(1.0, -0.3); 36f_cb.SetParameters(1, signal_mean, 0.3, 2, 1.5); 37 ; 38# CONSTRUCTION OF THE TF1NORMSUM OBJECT ........................................; 39# 1) :; 40fnorm_exp_cb = ROOT.TF1NormSum(f_cb, f_exp, nsig, nbkg); 41# 4) :; 42 ; 43f_sum = ROOT.TF1(""fsum"", fnorm_exp_cb, -5.0, 5.0, fnorm_exp_cb.GetNpar()); 44 ; 45# III.:; 46parameter_values = fnorm_exp_cb.GetParameters(); 47f_sum.SetParameters(parameter_values.data()); 48# Note: in the C++ tutorial, the parameter value sync is done in one line with:; 49# ```C++; 50# f_sum->SetParameters(fnorm_exp_cb->GetParameters().data());; 51# ```; 52# However, TF1NormSum::GetParameters() returns an std::vector by value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8py_source.html:92,Load,Loading,92,doc/master/fitNormSum_8py_source.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8py_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitcont.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitcont.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example illustrating how to draw the n-sigma contour of a Minuit fit. ; To get the n-sigma contour the ERRDEF parameter in Minuit has to set to n^2. The fcn function has to be set before the routine is called.; WARNING!!! This test works only with TMinuit; The TGraph object is created via the interpreter. The user must cast it to a TGraph*. ; FCN=96.6163 FROM MIGRAD STATUS=CONVERGED 62 CALLS 63 TOTAL; EDM=2.07594e-08 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 1.43454e+02 2.29666e+00 9.00732e-03 -6.49594e-05; 2 Mean 1.60911e-02 1.30402e-02 6.28520e-05 3.57224e-03; 3 Sigma 9.87683e-01 9.45637e-03 1.24479e-05 2.14428e-02; ; #include <TCanvas.h>; #include <TGraph.h>; #include <TH1F.h>; #include <TMinuit.h>; #include <TVirtualFitter.h>; ; void fitcont(); {; //be sure default is Minuit since we will use gMinuit; TVirtualFitter::SetDefaultFitter(""Minuit"");; ; TCanvas *c1 = new TCanvas(""c1"");; TH1F *h = new TH1F(""h"",""My histogram"",100,-3,3);; h->FillRandom(""gaus"",6000);; h->Fit(""gaus"");; c1->Update();; ; TCanvas *c2 = new TCanvas(""c2"",""contours"",10,10,600,800);; c2->Divide(1,2);; c2->cd(1);; /*get first contour for parameter 1 versus parameter 2*/; TGraph *gr12 = (TGraph*)gMinuit->Contour(40,1,2);; gr12->Draw(""alp"");; c2->cd(2);; /*Get contour for parameter 0 versus parameter 2 for ERRDEF=2*/; gMinuit->SetErrorDef(4); //note 4 and not 2!; TGraph *gr2 = (TGraph*)gMinuit->Contour(80,0,2);; gr2->SetFillColor(42);; gr2->Draw(""alf"");; /*Get contour for parameter 0 versus parameter 2 for ERRDEF=1*/; gMinuit->SetErrorDef(1);; TGraph *gr1 = (TGraph*)gMinuit->Contour(80,0,2);; gr1->SetFillColor(38);; gr1->Draw(""lf"");; }; h#define h(i)Definition RSha256.hxx:106; TCanvas.h; TGraph.h; TH1F.h; TMinuit.h; gMinuitR__EXTERN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitcont_8C.html:91,Load,Loading,91,doc/master/fitcont_8C.html,https://root.cern,https://root.cern/doc/master/fitcont_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fithist.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fithist.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Example of fit where the model is histogram + function . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 7.84157; NDf = 96; Edm = 3.7399e-06; NCalls = 174; p0 = 156.638 +/- 5.91061 (limited); p1 = 5.98183 +/- 0.0189043 ; p2 = -0.506659 +/- 0.0180481 ; p3 = 1.0003 +/- 0.0112955 ; ; #include <TF1.h>; #include <TFile.h>; #include <TH1F.h>; ; TH1F *background;; void histgen() {; //generate the histogram background and save it to a file; //background taken as linearly decreasing; ; TF1 f1(""f1"",""pol1"",0,10);; f1.SetParameters(5,-0.5);; TH1F h(""background"",""linear background"",100,0,10);; h.FillRandom(""f1"",10000);; TFile f(""background.root"",""recreate"");; //save the background histogram; h.Write();; //superimpose a Gaussian signal to the background histogram; TF1 f2(""f2"",""gaus"",0,10);; f2.SetParameters(1,6,0.5);; h.FillRandom(""f2"",2000);; h.SetName(""result"");; h.Write();; }; ; double ftotal(double *x, double *par) {; double xx = x[0];; int bin = background->GetXaxis()->FindBin(xx);; double br = par[3]*background->GetBinContent(bin);; double arg = (xx-par[1])/par[2];; double sr = par[0]*TMath::Exp(-0.5*arg*arg);; return sr + br;; }; void fithist() {; //fit function ftotal to signal + background; ; histgen();; ; TFile *f = new TFile(""background.root"");; background = (TH1F*)f->Get(""background""); //pointer used in ftotal; TH1F *result = (TH1F*)f->Get(""result"");; ; TF1 *ftot = new TF1(""ftot"",ftotal,0,10,4);; double norm = result->GetMaximum();; ftot->SetParameters(0.5*norm,5,.2,norm);; ftot->SetParLimits(0,.3*norm,norm);; ; result->Fit(""ftot"",""b"");; }; f#define f(i)Definition RSha256.hxx:104; h#define h(i)Definition RSha256.hxx:106; TF1.h; TFile.h; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fithist_8C.html:91,Load,Loading,91,doc/master/fithist_8C.html,https://root.cern,https://root.cern/doc/master/fithist_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitpanel_playback.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitpanel_playback.C File ReferenceTutorials » Fit Tutorials. Detailed Description; This file will test all the transient frames (aka Dialog windows) displayed in the fitpanel, as the rest of the functionality is tried automatically with the UnitTest.C unit. ; This implies trying the Set Parameters dialog and the Advanced one.; At every operation, a png file will be saved. These files will be later on compared with some references values, to have an estimation of the goodness of the test.; ; #include ""TSystem.h""; #include ""TSystemFile.h""; #include ""TRecorder.h""; #include ""Riostream.h""; ; int file_size(const char *filename); {; FileStat_t fs;; gSystem->GetPathInfo(filename, fs);; return (int)fs.fSize;; }; ; void fitpanel_playback(); {; auto * r = new TRecorder();; r->Replay(""http://root.cern/files/fitpanel_playback.root"");; ; // wait for the recorder to finish the replay; while (r->GetState() == TRecorder::kReplaying) {; gSystem->ProcessEvents();; gSystem->Sleep(1);; }; ; int Step_Err = 100;; int Step1_Ref = 15691;; int Step2_Ref = 15691;; int Step3_Ref = 17632;; int Step4_Ref = 12305;; int Step5_Ref = 11668;; ; int Step1_Size = file_size(""Step1.png"");; int Step2_Size = file_size(""Step2.png"");; int Step3_Size = file_size(""Step3.png"");; int Step4_Size = file_size(""Step4.png"");; int Step5_Size = file_size(""Step5.png"");; ; ; std::cout << ""**********************************************************************"" << std::endl;; std::cout << ""* Report of fitpanel_playback.C *"" << std::endl;; std::cout << ""**********************************************************************"" << std::endl;; ; if (TMath::Abs(Step1_Ref-Step1_Size) <= Step_Err) {; std::cout << ""Step1: ............................................................ OK"" << std::endl;; } else {; std::cout << ""Step1: ........................................................ FAILED"" <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitpanel__playback_8C.html:101,Load,Loading,101,doc/master/fitpanel__playback_8C.html,https://root.cern,https://root.cern/doc/master/fitpanel__playback_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/fitslicesy.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. fitslicesy.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Illustrates how to use the TH1::FitSlicesY function It uses the TH2F histogram generated in macro hsimple.C It invokes FitSlicesY and draw the fitted ""mean"" and ""sigma"" in 2 sepate pads. ; This macro shows also how to annotate a picture, change some pad parameters. ; ; #include <TCanvas.h>; #include <TFile.h>; #include <TH2F.h>; #include <TROOT.h>; #include <TStyle.h>; ; void fitslicesy() {; // Change some default parameters in the current style; gStyle->SetLabelSize(0.06,""x"");; gStyle->SetLabelSize(0.06,""y"");; gStyle->SetFrameFillColor(38);; gStyle->SetTitleW(0.6);; gStyle->SetTitleH(0.1);; ; // Connect the input file and get the 2-d histogram in memory; TString dir = gROOT->GetTutorialDir();; dir.Append(""/hsimple.C"");; dir.ReplaceAll(""/./"",""/"");; if (!gInterpreter->IsLoaded(dir.Data())) gInterpreter->LoadMacro(dir.Data());; TFile *hsimpleFile = (TFile*)gROOT->ProcessLineFast(""hsimple(1)"");; if (!hsimpleFile) return;; TH2F *hpxpy = (TH2F*)hsimpleFile->Get(""hpxpy"");; ; // Create a canvas and divide it; TCanvas *c1 = new TCanvas(""c1"",""c1"",700,500);; c1->SetFillColor(42);; c1->Divide(2,1);; TPad *leftPad = (TPad*)c1->cd(1);;; leftPad->Divide(1,2);; ; // Draw 2-d original histogram; leftPad->cd(1);; gPad->SetTopMargin(0.12);; gPad->SetFillColor(33);; hpxpy->Draw();; hpxpy->GetXaxis()->SetLabelSize(0.06);; hpxpy->GetYaxis()->SetLabelSize(0.06);; hpxpy->SetMarkerColor(kYellow);; ; // Fit slices projected along Y fron bins in X [7,32] with more than 20 bins in Y filled; hpxpy->FitSlicesY(nullptr,7,32,20);; ; // Show fitted ""mean"" for each slice; leftPad->cd(2);; gPad->SetFillColor(33);; TH2F *hpxpy_0 = (TH2F*)hsimpleFile->Get(""hpxpy_0"");; hpxpy_0->Draw();; TPad *rightPad = (TPad*)c1->cd(2);; rightPad->Divide(1,2);; rightPad->cd(1);; gPad->SetTopMargin(0.12);; gPad->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitslicesy_8C.html:94,Load,Loading,94,doc/master/fitslicesy_8C.html,https://root.cern,https://root.cern/doc/master/fitslicesy_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/graph2dfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph2dfit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting a TGraph2D . ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 4.25425e+06; NDf = 398; Edm = 5.85197e-13; NCalls = 45; p0 = 0.574556 +/- 0.109977 ; p1 = 1.72367 +/- 0.329932 ; ; #include <TMath.h>; #include <TGraph2D.h>; #include <TRandom.h>; #include <TStyle.h>; #include <TCanvas.h>; #include <TF2.h>; #include <TH1.h>; ; void graph2dfit(); {; gStyle->SetOptStat(0);; gStyle->SetOptFit();; ; auto c = new TCanvas(""c"",""Graph2D example"",0,0,600,800);; c->Divide(2,3);; ; double rnd, x, y, z;; double e = 0.3;; int nd = 400;; int np = 10000;; ; TRandom r;; double fl = 6;; auto f2 = new TF2(""f2"",""1000*(([0]*sin(x)/x)*([1]*sin(y)/y))+200"",; -fl,fl,-fl,fl);; f2->SetParameters(1,1);; auto dt = new TGraph2D();; ; // Fill the 2D graph; double zmax = 0;; for (int N=0; N<nd; N++) {; f2->GetRandom2(x,y);; // Generate a random number in [-e,e]; rnd = 2*r.Rndm()*e-e;; z = f2->Eval(x,y)*(1+rnd);; if (z>zmax) zmax = z;; dt->SetPoint(N,x,y,z);; }; ; double hr = 350;; auto h1 = new TH1D(""h1"",; ""#splitline{Difference between Original}{#splitline{function and Function}{with noise}}"",; 100, -hr, hr);; auto h2 = new TH1D(""h2"",; ""#splitline{Difference between Original}{#splitline{function and Delaunay triangles}{interpolation}}"",; 100, -hr, hr);; auto h3 = new TH1D(""h3"",; ""#splitline{Difference between Original}{function and Minuit fit}"",; 500, -hr, hr);; ; f2->SetParameters(0.5,1.5);; dt->Fit(f2);; auto fit2 = (TF2*)dt->FindObject(""f2"");; ; f2->SetParameters(1,1);; ; for (int N=0; N<np; N++) {; f2->GetRandom2(x,y);; // Generate a random number in [-e,e]; rnd = 2*r.Rndm()*e-e;; z = f2->Eval(x,y)*(1+rnd);; h1->Fill(f2->Eval(x,y)-z);; z = dt->Interpolate(x,y);; h2->Fill(f2->Eval(x,y)-z);; z = fit2->Eval(x,y);; h3->Fill(f2->Eval(x,y)-z);; }; ; c->cd(1);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph2dfit_8C.html:94,Load,Loading,94,doc/master/graph2dfit_8C.html,https://root.cern,https://root.cern/doc/master/graph2dfit_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/graph2dfit.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. graph2dfit.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook; 4/// Fitting a TGraph2D; 5///; 6/// \macro_image; 7/// \macro_output; 8/// \macro_code; 9///; 10/// \author Olivier Couet; 11 ; 12#include <TMath.h>; 13#include <TGraph2D.h>; 14#include <TRandom.h>; 15#include <TStyle.h>; 16#include <TCanvas.h>; 17#include <TF2.h>; 18#include <TH1.h>; 19 ; 20void graph2dfit(); 21{; 22 gStyle->SetOptStat(0);; 23 gStyle->SetOptFit();; 24 ; 25 auto c = new TCanvas(""c"",""Graph2D example"",0,0,600,800);; 26 c->Divide(2,3);; 27 ; 28 double rnd, x, y, z;; 29 double e = 0.3;; 30 int nd = 400;; 31 int np = 10000;; 32 ; 33 TRandom r;; 34 double fl = 6;; 35 auto f2 = new TF2(""f2"",""1000*(([0]*sin(x)/x)*([1]*sin(y)/y))+200"",; 36 -fl,fl,-fl,fl);; 37 f2->SetParameters(1,1);; 38 auto dt = new TGraph2D();; 39 ; 40 // Fill the 2D graph; 41 double zmax = 0;; 42 for (int N=0; N<nd; N++) {; 43 f2->GetRandom2(x,y);; 44 // Generate a random number in [-e,e]; 45 rnd = 2*r.Rndm()*e-e;; 46 z = f2->Eval(x,y)*(1+rnd);; 47 if (z>zmax) zmax = z;; 48 dt->SetPoint(N,x,y,z);; 49 }; 50 ; 51 double hr = 350;; 52 auto h1 = new TH1D(""h1"",; 53 ""#splitline{Difference between Original}{#splitline{function and Function}{with noise}}"",; 54 100, -hr, hr);; 55 auto h2 = new TH1D(""h2"",; 56 ""#splitline{Difference between Original}{#splitline{function and Delaunay triangles}{interpolation}}"",; 57 100, -hr, hr);; 58 auto h3 = new TH1D(""h3"",; 59 ""#splitline{Difference between Original}{function and Minuit fit}"",; 60 500, -hr, hr);; 61 ; 62 f2->SetParameters(0.5,1.5);; 63 dt->Fit(f2);; 64 auto fit2 = (TF2*)dt->FindObject(""f2"");; 65 ; 66 f2->SetParameters(1,1);; 67 ; 68 for (int N=0; N<np; N++) {; 69 f2->GetRandom2(x,y);; 70 // Generate a random number in [-e,e]; 71 rnd = 2*r.Rndm()*e-e;; 72 z = f2->Eval(x,y)*(1+rnd);; 73 h1->Fill(f2->Eval(x,y)-z);; 74 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph2dfit_8C_source.html:91,Load,Loading,91,doc/master/graph2dfit_8C_source.html,https://root.cern,https://root.cern/doc/master/graph2dfit_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/langaus.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. langaus.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Convoluted Landau and Gaussian Fitting Function (using ROOT's Landau and Gauss functions) ; Based on a Fortran code by R.Fruehwirth (fruhw.nosp@m.irth.nosp@m.@heph.nosp@m.y.oe.nosp@m.aw.ac.nosp@m..at); to execute this example, do:; root > .x langaus.C; or; root > .x langaus.C++. ; Fitting...; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 5.25252; NDf = 64; Edm = 6.48548e-07; NCalls = 184; Width = 1.25725 +/- 0.304795 (limited); MP = 20.8889 +/- 1.2821 (limited); Area = 11552.8 +/- 2422.85 (limited); GSigma = 4.0632 +/- 0.758575 (limited); Fitting done; Plotting results...; ; #include ""TH1.h""; #include ""TF1.h""; #include ""TROOT.h""; #include ""TStyle.h""; #include ""TMath.h""; ; double langaufun(double *x, double *par) {; ; //Fit parameters:; //par[0]=Width (scale) parameter of Landau density; //par[1]=Most Probable (MP, location) parameter of Landau density; //par[2]=Total area (integral -inf to inf, normalization constant); //par[3]=Width (sigma) of convoluted Gaussian function; //; //In the Landau distribution (represented by the CERNLIB approximation),; //the maximum is located at x=-0.22278298 with the location parameter=0.; //This shift is corrected within this function, so that the actual; //maximum is identical to the MP parameter.; ; // Numeric constants; double invsq2pi = 0.3989422804014; // (2 pi)^(-1/2); double mpshift = -0.22278298; // Landau maximum location; ; // Control constants; double np = 100.0; // number of convolution steps; double sc = 5.0; // convolution extends to +-sc Gaussian sigmas; ; // Variables; double xx;; double mpc;; double fland;; double sum = 0.0;; double xlow,xupp;; double step;; double i;; ; ; // MP shift correction; mpc = par[1] - mpshift * par[0];; ; // Range of convolution integral; xlow = x[0] - sc * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/langaus_8C.html:91,Load,Loading,91,doc/master/langaus_8C.html,https://root.cern,https://root.cern/doc/master/langaus_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/line3Dfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. line3Dfit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting of a TGraph2D with a 3D straight line ; run this macro by doing:; root>.x line3Dfit.C+. ; Total Initial distance square = 8.65172e+07; Total final distance square 19988; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 19988; NDf = 0; Edm = 1.04086e-06; NCalls = 248; Par_0 = 10.3555 +/- 0.392118 ; Par_1 = 19.9602 +/- 0.0688151 ; Par_2 = 0.999233 +/- 0.0444791 ; Par_3 = 2.00379 +/- 0.00783849 ; (int) 0; ; #include <TMath.h>; #include <TGraph2D.h>; #include <TRandom2.h>; #include <TStyle.h>; #include <TCanvas.h>; #include <TF2.h>; #include <TH1.h>; #include <Math/Functor.h>; #include <TPolyLine3D.h>; #include <Math/Vector3D.h>; #include <Fit/Fitter.h>; ; #include <cassert>; ; using namespace ROOT::Math;; ; ; // define the parametric line equation; void line(double t, const double *p, double &x, double &y, double &z) {; // a parametric line is define from 6 parameters but 4 are independent; // x0,y0,z0,z1,y1,z1 which are the coordinates of two points on the line; // can choose z0 = 0 if line not parallel to x-y plane and z1 = 1;; x = p[0] + p[1]*t;; y = p[2] + p[3]*t;; z = t;; }; ; ; bool first = true;; ; // function Object to be minimized; struct SumDistance2 {; // the TGraph is a data member of the object; TGraph2D *fGraph;; ; SumDistance2(TGraph2D *g) : fGraph(g) {}; ; // calculate distance line-point; double distance2(double x,double y,double z, const double *p) {; // distance line point is D= | (xp-x0) cross ux |; // where ux is direction of line and x0 is a point in the line (like t = 0); XYZVector xp(x,y,z);; XYZVector x0(p[0], p[2], 0. );; XYZVector x1(p[0] + p[1], p[2] + p[3], 1. );; XYZVector u = (x1-x0).Unit();; double d2 = ((xp-x0).Cross(u)).Mag2();; return d2;; }; ; // implementation of the function to be minimized",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/line3Dfit_8C.html:93,Load,Loading,93,doc/master/line3Dfit_8C.html,https://root.cern,https://root.cern/doc/master/line3Dfit_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/minuit2FitBench.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. minuit2FitBench.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Demonstrate performance and usage of Minuit2 and Fumili2 for monodimensional fits. . ; ; *********************************************************************************; Minuit ; *********************************************************************************; pass : 0; ................... FCN=205.276 FROM MINOS STATUS=SUCCESSFUL 44 CALLS 429 TOTAL; EDM=3.83288e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 5.13639e+01 2.01329e+00 -2.79418e-04 -2.05471e-06; 2 p1 5.57813e+01 4.80582e+00 3.09127e-03 -9.98919e-07; 3 p2 7.42112e+01 1.87041e+00 -1.20311e-03 -1.93173e-07; 4 p3 4.27344e+02 2.93232e+00 -1.66243e-02 -7.80957e-07; 5 p4 3.58604e-02 3.47005e-04 1.74159e-07 9.80777e-02; 6 p5 1.00001e+00 1.64203e-04 1.64203e-04 3.19213e-02; Minuit, npass=20 : RT= 0.170 s, Cpu= 0.170 s; ; *********************************************************************************; Fumili ; *********************************************************************************; pass : 0; ...................****************************************; Minimizer is Fumili; Chi2 = 206.284; NDf = 194; NCalls = 4; p0 = 51.4325 +/- 2.01397 ; p1 = 55.5412 +/- 4.81253 ; p2 = 74.2976 +/- 1.87298 ; p3 = 427.425 +/- 2.93868 ; p4 = 0.0358559 +/- 0.000357243 ; p5 = 1.00001 +/- 0.00016009 ; Fumili, npass=20 : RT= 0.055 s, Cpu= 0.060 s; ; *********************************************************************************; Minuit2 ; *********************************************************************************; pass : 0; ...................****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 205.34; NDf = 194; Edm = 1.91398e-10; NCalls = 85; p0 = 51.3576 +/- 2.0133 -2.01329 +2.0133 (Minos) ; p1 = 55.8172 +/- 4.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/minuit2FitBench_8C.html:99,Load,Loading,99,doc/master/minuit2FitBench_8C.html,https://root.cern,https://root.cern/doc/master/minuit2FitBench_8C.html,2,"['Load', 'perform']","['Loading', 'performance']"
Performance,". ROOT: tutorials/fit/minuit2FitBench2D.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. minuit2FitBench2D.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Minuit2 fit 2D benchmark. . ; FCN=7196.63 FROM MIGRAD STATUS=CONVERGED 169 CALLS 170 TOTAL; EDM=3.06509e-09 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 2.0 per cent; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 5.28670e+01 2.67227e-01 1.71567e-03 1.41590e-04; 2 p1 2.00562e+00 9.99521e-03 -6.72962e-05 -5.71949e-03; 3 p2 -1.02279e+00 1.35440e-02 3.22465e-05 2.77027e-03; 4 p3 2.89928e+00 7.94099e-03 -9.38703e-05 -4.55759e-03; 5 p4 3.86656e+00 1.13330e-02 1.06568e-05 -2.11126e-03; Minuit, npass=0 : RT= 0.143 s, Cpu= 0.140 s; ****************************************; Minimizer is Fumili; Chi2 = 7196.63; NDf = 7366; NCalls = 30; p0 = 52.8672 +/- 0.262932 ; p1 = 2.00562 +/- 0.00992527 ; p2 = -1.02279 +/- 0.0135821 ; p3 = 2.89927 +/- 0.00781808 ; p4 = 3.86655 +/- 0.011235 ; Fumili, npass=0 : RT= 0.084 s, Cpu= 0.090 s; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 7196.63; NDf = 7366; Edm = 4.35806e-08; NCalls = 176; p0 = 52.867 +/- 0.264728 ; p1 = 2.00562 +/- 0.00995152 ; p2 = -1.0228 +/- 0.0137398 ; p3 = 2.89928 +/- 0.00798634 ; p4 = 3.86656 +/- 0.0112306 ; Minuit2, npass=0 : RT= 0.096 s, Cpu= 0.100 s; ****************************************; Minimizer is Minuit2 / Fumili; Chi2 = 7196.63; NDf = 7366; Edm = 2.49758e-07; NCalls = 99; p0 = 52.8669 +/- 0.265504 ; p1 = 2.00562 +/- 0.00992463 ; p2 = -1.0228 +/- 0.0135834 ; p3 = 2.89928 +/- 0.00792724 ; p4 = 3.86656 +/- 0.0113104 ; Fumili2, npass=0 : RT= 0.062 s, Cpu= 0.060 s; ; #include ""TH1.h""; #include ""TF1.h""; #include ""TH2D.h""; #include ""TF2.h""; #include ""TCanvas.h""; #include ""TStopwatch.h""; #include ""TSystem.h""; #include ""TRandom3.h""; #include ""TVirtualFitter.h""; #include ""TPaveLabel.h""; #include ""TStyle.h""; ; ; TF2 *fitFcn;; TH2D *histo;; ; // Quadratic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/minuit2FitBench2D_8C.html:101,Load,Loading,101,doc/master/minuit2FitBench2D_8C.html,https://root.cern,https://root.cern/doc/master/minuit2FitBench2D_8C.html,1,['Load'],['Loading']
Performance,. ROOT: tutorials/fit/minuit2GausFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. minuit2GausFit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Perform fits with different configurations using Minuit2 . ; ; Do Fit 1; ; Do Fit 2; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 65.1586; NDf = 56; Edm = 1.93774e-09; NCalls = 69; Constant = 36.3132 +/- 1.52625 -1.51651 +1.53547 (Minos) ; Mean = 0.013082 +/- 0.0347499 -0.0347674 +0.0347613 (Minos) ; Sigma = 1.03413 +/- 0.0288039 -0.0286274 +0.0290102 (Minos) (limited); ; Do Fit 3; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 65.1586; NDf = 56; Edm = 6.86315e-08; NCalls = 57; Constant = 36.327 +/- 2 -1.51685 +1.53726 (Minos) ; Mean = 0.0130817 +/- 2 ; Sigma = 1.03373 +/- 6.72116 (limited); ; Do Fit 4; ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 43.3935; Chi2 = 86.7869; NDf = 97; Edm = 9.97216e-08; NCalls = 62; Constant = 38.427 +/- 1.48837 -1.46667 +1.51031 (Minos) ; Mean = 0.027601 +/- 0.032831 -0.0328395 +0.0328395 (Minos) ; Sigma = 1.03819 +/- 0.0232194 -0.0227841 +0.0236699 (Minos) (limited); ; Do Fit 1; ; Do Fit 2; ****************************************; Minimizer is Minuit2 / Fumili; Chi2 = 65.1586; NDf = 56; Edm = 8.05693e-09; NCalls = 45; Constant = 36.3131 +/- 1.52625 -1.51642 +1.53556 (Minos) ; Mean = 0.0130818 +/- 0.0347499 -0.0347671 +0.0347615 (Minos) ; Sigma = 1.03413 +/- 0.0288039 -0.0286291 +0.0290085 (Minos) (limited); ; Do Fit 3; ****************************************; Minimizer is Minuit2 / Fumili; Chi2 = 65.1586; NDf = 56; Edm = 1.52369e-08; NCalls = 45; Constant = 36.3272 +/- 1.52734 -1.51745 +1.53671 (Minos) ; Mean = 0.0130818 +/- 0.0347499 -0.0347671 +0.0347615 (Minos) ; Sigma = 1.03373 +/- 0.0288151 -0.0286415 +0.0290186 (Minos) (limited); ; Do Fit 4; ****************************************; Minimizer is Minuit2 / Fumili,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/minuit2GausFit_8C.html:98,Load,Loading,98,doc/master/minuit2GausFit_8C.html,https://root.cern,https://root.cern/doc/master/minuit2GausFit_8C.html,2,"['Load', 'Perform']","['Loading', 'Perform']"
Performance,. ROOT: tutorials/fit/multidimfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multidimfit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Multi-Dimensional Parametrisation and Fitting ; ; *************************************************; * Multidimensional Fit *; * *; * By Christian Holm <cholm@nbi.dk> 14/10/00 *; *************************************************; ; User parameters:; ----------------; Variables: 4; Data points: 0; Max Terms: 30; Power Limit Parameter: 1; Max functions: 1000; Max functions to study: 1000; Max angle (optional): 10; Min angle: 10; Relative Error accepted: 0.01; Maximum Powers: 6 6 6 6; ; Parameterisation will be done using Monomials; ; ======================================; Sample statistics:; ------------------; D 1 2 3 4; Max: 141.6264 9.954 9.99 9.998 9.995; Min: 0.149448 0.0455 0.01523 0.04109 0.003819; Mean: 48.40441 5.033 5.044 5 5.002; Function Sum Squares: 1.678e+06; ; Coeff SumSqRes Contrib Angle QM Func Value W^2 Powers; 1 5.065e+05 1.367e-26 10 6.67e-07 0 -5.23e-15 500 0 0 0 0; 2 1.15e+05 3.915e+05 50 0.167 2 47.33 174.7 1 0 0 0; 3 8.755e+04 2.749e+04 80 0.167 1 13.26 156.3 0 0 0 1; 4 6.188e+04 2.568e+04 80 0.167 3 12.39 167.3 0 0 1 0; 5 3.708e+04 2.48e+04 80 0.167 4 12.6 156.3 0 1 0 0; 6 2.596e+04 1.112e+04 85 0.333 8 14.91 50.03 1 1 0 0; 7 1.667e+04 9290 85 0.333 9 13.02 54.78 1 0 0 1; 8 7382 9287 85 0.333 14 12.64 58.13 1 0 1 0; 9 6235 1147 87.5 0.333 5 5.095 44.16 0 0 0 2; 10 5218 1018 87.5 0.333 12 4.983 40.99 0 2 0 0; 11 4193 1025 87.5 0.667 53 5.229 37.5 0 0 4 0; 12 3299 893.8 88.8 0.333 6 -4.058 54.27 0 0 1 1; 13 2458 841.2 88.8 0.333 7 -4.155 48.73 0 1 0 1; 14 1933 524.7 88.8 0.333 13 -3.291 48.45 0 1 1 0; 15 1675 258.1 88.8 0.5 19 4.211 14.56 1 0 0 2; 16 1334 340.6 88.8 0.5 26 -4.731 15.22 1 1 0 1; 17 1079 255.5 88.8 0.5 33 3.953 16.35 1 0 2 0; 18 788.2 290.4 88.8 0.5 34 4.687 13.22 1 2 0 0; 19 709.2 78.94 89.4 0.5 21 2.23 15.88 0 1 1 1; 20 47,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multidimfit_8C.html:95,Load,Loading,95,doc/master/multidimfit_8C.html,https://root.cern,https://root.cern/doc/master/multidimfit_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/multifit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multifit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting multiple functions to different ranges of a 1-D histogram Example showing how to fit in a sub-range of an histogram A histogram is created and filled with the bin contents and errors defined in the table below. ; Three Gaussians are fitted in sub-ranges of this histogram. A new function (a sum of 3 Gaussians) is fitted on another subrange Note that when fitting simple functions, such as Gaussians, the initial values of parameters are automatically computed by ROOT. In the more complicated case of the sum of 3 Gaussians, the initial values of parameters must be given. In this particular case, the initial values are taken from the result of the individual fits. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.0848003; NDf = 7; Edm = 8.86911e-08; NCalls = 106; Constant = 4.96664 +/- 2.83221 ; Mean = 95.4663 +/- 12.3905 ; Sigma = 6.82779 +/- 7.49131 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.0771026; NDf = 7; Edm = 1.00182e-07; NCalls = 73; Constant = 5.96312 +/- 1.14355 ; Mean = 100.467 +/- 1.53372 ; Sigma = 3.54806 +/- 1.16899 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.00877492; NDf = 8; Edm = 4.98832e-06; NCalls = 87; Constant = 0.912053 +/- 0.435309 ; Mean = 116.304 +/- 8.32344 ; Sigma = 8.38103 +/- 18.5139 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.31282; NDf = 31; Edm = 3.25006e-06; NCalls = 495; p0 = 4.91052 +/- 1.41324 ; p1 = 94.4492 +/- 3.71244 ; p2 = 5.9461 +/- 2.41662 ; p3 = 3.22456 +/- 3.11384 ; p4 = 101.662 +/- 1.67862 ; p5 = 2.48631 +/- 1.91151 ; p6 = 0.911626 +/- 0.368736 ; p7 = 117.581 +/- 5.06092 ; p8 = 7.59194 +/- 8.78217 ; ; #include ""TH1.h""; #include ""TF1.h""; ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8C.html:92,Load,Loading,92,doc/master/multifit_8C.html,https://root.cern,https://root.cern/doc/master/multifit_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/multifit.C Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multifit.C. Go to the documentation of this file. 1/// \file; 2/// \ingroup tutorial_fit; 3/// \notebook -js; 4/// Fitting multiple functions to different ranges of a 1-D histogram; 5/// Example showing how to fit in a sub-range of an histogram; 6/// A histogram is created and filled with the bin contents and errors; 7/// defined in the table below.; 8/// Three Gaussians are fitted in sub-ranges of this histogram.; 9/// A new function (a sum of 3 Gaussians) is fitted on another subrange; 10/// Note that when fitting simple functions, such as Gaussians, the initial; 11/// values of parameters are automatically computed by ROOT.; 12/// In the more complicated case of the sum of 3 Gaussians, the initial values; 13/// of parameters must be given. In this particular case, the initial values; 14/// are taken from the result of the individual fits.; 15///; 16/// \macro_image; 17/// \macro_output; 18/// \macro_code; 19///; 20/// \author Rene Brun; 21 ; 22#include ""TH1.h""; 23#include ""TF1.h""; 24 ; 25void multifit(); 26{; 27 const int np = 49;; 28 float x[np] = {1.913521, 1.953769, 2.347435, 2.883654, 3.493567, 4.047560, 4.337210, 4.364347, 4.563004,; 29 5.054247, 5.194183, 5.380521, 5.303213, 5.384578, 5.563983, 5.728500, 5.685752, 5.080029,; 30 4.251809, 3.372246, 2.207432, 1.227541, 0.8597788, 0.8220503, 0.8046592, 0.7684097, 0.7469761,; 31 0.8019787, 0.8362375, 0.8744895, 0.9143721, 0.9462768, 0.9285364, 0.8954604, 0.8410891, 0.7853871,; 32 0.7100883, 0.6938808, 0.7363682, 0.7032954, 0.6029015, 0.5600163, 0.7477068, 1.188785, 1.938228,; 33 2.602717, 3.472962, 4.465014, 5.177035};; 34 ; 35 // The histogram are filled with bins defined in the array x.; 36 TH1F *h = new TH1F(""h"", ""Example of several fits in subranges"", np, 85, 134);; 37 h->SetMaximum(7);; 38 ; 39 for (int i = 0; i < np; i++) {; 40 h->SetBinContent(i + 1, x[i]);; 41 }; 42 ; 43 // Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8C_source.html:89,Load,Loading,89,doc/master/multifit_8C_source.html,https://root.cern,https://root.cern/doc/master/multifit_8C_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/multifit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; multifit.py File ReferenceTutorials » Fit Tutorials. Detailed Description; Fitting multiple functions to different ranges of a 1-D histogram Example showing how to fit in a sub-range of an histogram A histogram is created and filled with the bin contents and errors defined in the table below. ; Three Gaussians are fitted in sub-ranges of this histogram. A new function (a sum of 3 Gaussians) is fitted on another subrange Note that when fitting simple functions, such as Gaussians, the initial values of parameters are automatically computed by ROOT. In the more complicated case of the sum of 3 Gaussians, the initial values of parameters must be given. In this particular case, the initial values are taken from the result of the individual fits. ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.0848003; NDf = 7; Edm = 8.86911e-08; NCalls = 106; Constant = 4.96664 +/- 2.83221 ; Mean = 95.4663 +/- 12.3905 ; Sigma = 6.82779 +/- 7.49131 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.0771026; NDf = 7; Edm = 1.00182e-07; NCalls = 73; Constant = 5.96312 +/- 1.14355 ; Mean = 100.467 +/- 1.53372 ; Sigma = 3.54806 +/- 1.16899 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.00877492; NDf = 8; Edm = 4.98832e-06; NCalls = 87; Constant = 0.912053 +/- 0.435309 ; Mean = 116.304 +/- 8.32344 ; Sigma = 8.38103 +/- 18.5139 (limited); ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 0.31282; NDf = 31; Edm = 3.25006e-06; NCalls = 495; p0 = 4.91052 +/- 1.41324 ; p1 = 94.4492 +/- 3.71244 ; p2 = 5.9461 +/- 2.41662 ; p3 = 3.22456 +/- 3.11384 ; p4 = 101.662 +/- 1.67862 ; p5 = 2.48631 +/- 1.91151 ; p6 = 0.911626 +/- 0.368736 ; p7 = 117.581 +/- 5.06092 ; p8 = 7.59194 +/- 8.78217 ; [ 4.96663958 95.46632975 6.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8py.html:93,Load,Loading,93,doc/master/multifit_8py.html,https://root.cern,https://root.cern/doc/master/multifit_8py.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/multifit.py Source File. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. multifit.py. Go to the documentation of this file. 1## \file; 2## \ingroup tutorial_fit; 3## \notebook; 4## Fitting multiple functions to different ranges of a 1-D histogram; 5## Example showing how to fit in a sub-range of an histogram; 6## A histogram is created and filled with the bin contents and errors; 7## defined in the table below.; 8## Three Gaussians are fitted in sub-ranges of this histogram.; 9## A new function (a sum of 3 Gaussians) is fitted on another subrange; 10## Note that when fitting simple functions, such as Gaussians, the initial; 11## values of parameters are automatically computed by ROOT.; 12## In the more complicated case of the sum of 3 Gaussians, the initial values; 13## of parameters must be given. In this particular case, the initial values; 14## are taken from the result of the individual fits.; 15##; 16## \macro_image; 17## \macro_output; 18## \macro_code; 19##; 20## \authors Jonas Rembser, Rene Brun (C++ version); 21 ; 22import ROOT; 23 ; 24import numpy as np; 25 ; 26n_x = 49; 27 ; 28# fmt: off; 29x = np.array( [ 1.913521, 1.953769, 2.347435, 2.883654, 3.493567, 4.047560,; 30 4.337210, 4.364347, 4.563004, 5.054247, 5.194183, 5.380521, 5.303213,; 31 5.384578, 5.563983, 5.728500, 5.685752, 5.080029, 4.251809, 3.372246,; 32 2.207432, 1.227541, 0.8597788, 0.8220503, 0.8046592, 0.7684097, 0.7469761,; 33 0.8019787, 0.8362375, 0.8744895, 0.9143721, 0.9462768, 0.9285364,; 34 0.8954604, 0.8410891, 0.7853871, 0.7100883, 0.6938808, 0.7363682,; 35 0.7032954, 0.6029015, 0.5600163, 0.7477068, 1.188785, 1.938228, 2.602717,; 36 3.472962, 4.465014, 5.177035, ], dtype=np.float32,); 37# fmt: on; 38 ; 39# The histogram are filled with bins defined in the array x.; 40h = ROOT.TH1F(""h"", ""Example of several fits in subranges"", n_x, 85, 134); 41h.SetMaximum(7); 42 ; 43for i, x_i in enumerate(x):; 44 h.SetBinContent(i + 1, x[i]); 45 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8py_source.html:90,Load,Loading,90,doc/master/multifit_8py_source.html,https://root.cern,https://root.cern/doc/master/multifit_8py_source.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/myfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. myfit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Get in memory an histogram from a root file and fit a user defined function. ; Note that a user defined function must always be defined as in this example:; first parameter: array of variables (in this example only 1-dimension); second parameter: array of parameters Note also that in case of user defined functions, one must set an initial value for each parameter. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 36.7428; NDf = 47; Edm = 2.03167e-06; NCalls = 101; Constant = 797.969 +/- 6.79742 ; Mean_value = -7.42918e-05 +/- 0.00734861 ; Sigma = 0.998754 +/- 0.0071337 ; Integral of function = 1907.36; ; #include <TCanvas.h>; #include <TF1.h>; #include <TFile.h>; #include <TH1F.h>; #include <TInterpreter.h>; #include <TROOT.h>; ; #include <cmath>; ; double fitf(double *x, double *par); {; double arg = 0;; if (par[2] != 0) arg = (x[0] - par[1])/par[2];; ; double fitval = par[0]*std::exp(-0.5*arg*arg);; return fitval;; }; void myfit(); {; TString dir = gROOT->GetTutorialDir();; dir.Append(""/hsimple.C"");; dir.ReplaceAll(""/./"",""/"");; if (!gInterpreter->IsLoaded(dir.Data())) gInterpreter->LoadMacro(dir.Data());; TFile *hsimpleFile = (TFile*)gROOT->ProcessLineFast(""hsimple(1)"");; if (!hsimpleFile) return;; ; TCanvas *c1 = new TCanvas(""c1"",""the fit canvas"",500,400);; ; TH1F *hpx = (TH1F*)hsimpleFile->Get(""hpx"");; ; // Creates a Root function based on function fitf above; TF1 *func = new TF1(""fitf"",fitf,-2,2,3);; ; // Sets initial values and parameter names; func->SetParameters(100,0,1);; func->SetParNames(""Constant"",""Mean_value"",""Sigma"");; ; // Fit histogram in range defined by function; hpx->Fit(func,""r"");; ; // Gets integral of function between fit limits; printf(""Integral of function = %g\n"",func->Integral(-2,2));; }; TCanvas.h; TF1.h; TFile.h; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/myfit_8C.html:89,Load,Loading,89,doc/master/myfit_8C.html,https://root.cern,https://root.cern/doc/master/myfit_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/qa2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. qa2.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Test generation of random numbers distributed according to a function defined by the user . ; ; #include <TBenchmark.h>; #include <TCanvas.h>; #include <TF1.h>; #include <TFormula.h>; #include <TH1F.h>; #include <TPaveLabel.h>; ; void qa2() {; //Fill a 1-D histogram from a parametric function; TCanvas *c1 = new TCanvas(""c1"",""The FillRandom example"",0,0,700,500);; ; gBenchmark->Start(""fillrandom"");; //; // A function (any dimension) or a formula may reference; // an already defined formula; //; TFormula *form1 = new TFormula(""form1"",""abs(sin(x)/x)"");; TF1 *sqroot = new TF1(""sqroot"",""x*gaus(0) + [3]*form1"",0,10);; sqroot->SetParameters(10,4,1,20);; ; //; // Create a one dimensional histogram (one float per bin); // and fill it following the distribution in function sqroot.; //; TH1F *h1f = new TH1F(""h1f"",""Test random numbers"",200,0,10);; h1f->SetFillColor(45);; h1f->FillRandom(""sqroot"",100000);; h1f->Draw();; TPaveLabel *lfunction = new TPaveLabel(5,39,9.8,46,""The sqroot function"");; lfunction->SetFillColor(41);; ; c1->SetGridx();; c1->SetGridy();; ; h1f->SetDirectory(nullptr);; ; c1->Update();; ; sqroot->SetParameters(200,4,1,20);; }; TBenchmark.h; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; TCanvas.h; TF1.h; TH1F.h; TPaveLabel.h; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; TFormulaThe Formula class.Definition TFormula.h:89; TH1F1-D histogram with a float per channel (see TH1 docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/qa2_8C.html:87,Load,Loading,87,doc/master/qa2_8C.html,https://root.cern,https://root.cern/doc/master/qa2_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/fit/vectorizedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. vectorizedFit.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Tutorial for creating a Vectorized TF1 function using a formula expression and use it for fitting an histogram ; To create a vectorized function (if ROOT has been compiled with support for vectorization) is very easy. One needs to create the TF1 object with the option ""VEC"" or call the method TF1::SetVectorized. ; Doing Serial Gaussian Fit ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 40217.9; NDf = 39409; Edm = 3.38976e-08; NCalls = 75; Constant = 120.018 +/- 0.105817 ; Mean = 0.00114402 +/- 0.000709328 ; Sigma = 0.979817 +/- 0.000519995 (limited); ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 20355.3; Chi2 = 40710.5; NDf = 39997; Edm = 8.97826e-10; NCalls = 65; Constant = 120.024 +/- 0.105551 ; Mean = 0.000138332 +/- 0.000716607 ; Sigma = 0.99985 +/- 0.000537073 (limited); Real time 0:00:00, CP time 0.450; Doing Vectorized Gaussian Fit ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 40217.9; NDf = 39409; Edm = 3.38976e-08; NCalls = 75; Constant = 120.018 +/- 0.105817 ; Mean = 0.00114402 +/- 0.000709328 ; Sigma = 0.979817 +/- 0.000519995 (limited); ****************************************; Minimizer is Minuit2 / Migrad; MinFCN = 20355.3; Chi2 = 40710.5; NDf = 39997; Edm = 8.97826e-10; NCalls = 65; Constant = 120.024 +/- 0.105551 ; Mean = 0.000138332 +/- 0.000716607 ; Sigma = 0.99985 +/- 0.000537073 (limited); Real time 0:00:00, CP time 0.360; Doing Serial Polynomial Fit ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 37690; NDf = 38075; Edm = 3.47827e-15; NCalls = 72; A = 0.202001 +/- 0.00176461 ; B = 0.268032 +/- 0.0153893 ; C = 1.05504 +/- 0.0248331 ; ****************************************; Minimizer is Minuit2 / M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/vectorizedFit_8C.html:97,Load,Loading,97,doc/master/vectorizedFit_8C.html,https://root.cern,https://root.cern/doc/master/vectorizedFit_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/foam/foam_demo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. foam_demo.C File ReferenceTutorials » FOAM tutorials. Detailed Description; Demonstrate the TFoam class. ; To run this macro type from ROOT command line; root [0] gSystem->Load(""libFoam.so""); root [1] .x foam_demo.C+; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Loadvirtual int Load(const char *module, const char *entry="""", Bool_t system=kFALSE)Load a shared library.Definition TSystem.cxx:1857; ; ; #include ""Riostream.h""; #include ""TFile.h""; #include ""TFoam.h""; #include ""TH1.h""; #include ""TMath.h""; #include ""TFoamIntegrand.h""; #include ""TRandom3.h""; ; class TFDISTR: public TFoamIntegrand {; public:; TFDISTR(){};; Double_t Density(int nDim, Double_t *Xarg){; // Integrand for mFOAM; Double_t Fun1,Fun2,R1,R2;; Double_t pos1=1e0/3e0;; Double_t pos2=2e0/3e0;; Double_t Gam1= 0.100e0; // as in JPC; Double_t Gam2= 0.100e0; // as in JPC; Double_t sPi = sqrt(TMath::Pi());; Double_t xn1=1e0;; Double_t xn2=1e0;; int i;; R1=0;; R2=0;; for(i = 0 ; i<nDim ; i++){; R1=R1+(Xarg[i] -pos1)*(Xarg[i] -pos1);; R2=R2+(Xarg[i] -pos2)*(Xarg[i] -pos2);; xn1=xn1*Gam1*sPi;; xn2=xn2*Gam2*sPi;; }; R1 = sqrt(R1);; R2 = sqrt(R2);; Fun1 = exp(-(R1*R1)/(Gam1*Gam1))/xn1; // Gaussian delta-like profile; Fun2 = exp(-(R2*R2)/(Gam2*Gam2))/xn2; // Gaussian delta-like profile; return 0.5e0*(Fun1+ Fun2);; }; ClassDef(TFDISTR,1) //Class of testing functions for FOAM; };; ClassImp(TFDISTR); ; Int_t foam_demo(); {; TFile RootFile(""foam_demo.root"",""RECREATE"",""histograms"");; long loop;; Double_t MCresult,MCerror,MCwt;; //-----------------------------------------; long NevTot = 50000; // Total MC statistics; Int_t kDim = 2; // total dimension; Int_t nCells = 500; // Number of Cells; Int_t nSampl = 200; // Number of MC events per cell in build-up; Int_t nBin = 8; // Number of bins in build-up; Int_t OptRej = 1; // Wted events for OptRej=0; wt=1 for OptRej=1 (def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/foam__demo_8C.html:94,Load,Loading,94,doc/master/foam__demo_8C.html,https://root.cern,https://root.cern/doc/master/foam__demo_8C.html,5,['Load'],"['Load', 'Loading', 'Loadvirtual']"
Performance,". ROOT: tutorials/foam/foam_demopers.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. foam_demopers.C File ReferenceTutorials » FOAM tutorials. Detailed Description; This simple macro demonstrates persistency of FOAM object. ; First run macro foam_demo.C to create file foam_demo.root with FOAM object.; Next type root -l foam_demopers.C from shell command line; ; #include ""Riostream.h""; #include ""TFile.h""; #include ""TFoam.h""; #include ""TROOT.h""; #include ""TSystem.h""; #include ""TFoamIntegrand.h""; ; ; Int_t foam_demopers(); {; ; // need to load the foam_demo tutorial for the definition of the function; TString macroName = gROOT->GetTutorialDir();; macroName.Append(""/foam/foam_demo.C"");; gROOT->ProcessLine(TString::Format("".L %s+"",macroName.Data()));; ; //******************************************; cout<<""====================== TestVector ================================""<<endl;; TFile fileA(""foam_demo.root"");; fileA.cd();; cout<<""------------------------------------------------------------------""<<endl;; fileA.ls();; cout<<""------------------------------------------------------------------""<<endl;; fileA.Map();; cout<<""------------------------------------------------------------------""<<endl;; fileA.ShowStreamerInfo();; cout<<""------------------------------------------------------------------""<<endl;; fileA.GetListOfKeys()->Print();; cout<<""------------------------------------------------------------------""<<endl;; //*******************************************; TFoam *FoamX = (TFoam*)fileA.Get(""FoamX"");; //*******************************************; // FoamX->PrintCells();; FoamX->CheckAll(1);; ; //N.B. the integrand functions need to be reset; // because cannot be made persistent; TFoamIntegrand * rho = (TFoamIntegrand*) gROOT->ProcessLine(""return new TFDISTR();"");; FoamX->SetRho(rho);; ; Double_t MCvect[2]; // 2-dim vector generated in the MC run; ; for(long loop=0; loop<50000; loop++){; FoamX->MakeEvent(); // generat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/foam__demopers_8C.html:98,Load,Loading,98,doc/master/foam__demopers_8C.html,https://root.cern,https://root.cern/doc/master/foam__demopers_8C.html,2,"['Load', 'load']","['Loading', 'load']"
Performance,". ROOT: tutorials/foam/foam_kanwa.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. foam_kanwa.C File ReferenceTutorials » FOAM tutorials. Detailed Description; This program can be execute from the command line as folows: ; root -l foam_kanwa.C; lTLine lDefinition textangle.C:4; ; #include ""Riostream.h""; #include ""TFoam.h""; #include ""TCanvas.h""; #include ""TH2.h""; #include ""TMath.h""; #include ""TFoamIntegrand.h""; #include ""TRandom3.h""; ; //_____________________________________________________________________________; Double_t sqr(Double_t x){; return x*x;; }; //_____________________________________________________________________________; Double_t Camel2(Int_t nDim, Double_t *Xarg){; // 2-dimensional distribution for Foam, normalized to one (within 1e-5); Double_t x=Xarg[0];; Double_t y=Xarg[1];; Double_t GamSq= sqr(0.100e0);; Double_t Dist= 0;; Dist +=exp(-(sqr(x-1./3) +sqr(y-1./3))/GamSq)/GamSq/TMath::Pi();; Dist +=exp(-(sqr(x-2./3) +sqr(y-2./3))/GamSq)/GamSq/TMath::Pi();; return 0.5*Dist;; }; //_____________________________________________________________________________; ; Int_t foam_kanwa(){; cout<<""--- kanwa started ---""<<endl;; TH2D *hst_xy = new TH2D(""hst_xy"" , ""x-y plot"", 50,0,1.0, 50,0,1.0);; Double_t MCvect[2]; // 2-dim vector generated in the MC run; //; TRandom *PseRan = new TRandom3(); // Create random number generator; PseRan->SetSeed(4357);; TFoam *FoamX = new TFoam(""FoamX""); // Create Simulator; FoamX->SetkDim(2); // No. of dimensions, obligatory!; FoamX->SetnCells(500); // Optionally No. of cells, default=2000; FoamX->SetRhoInt(Camel2); // Set 2-dim distribution, included below; FoamX->SetPseRan(PseRan); // Set random number generator; FoamX->Initialize(); // Initialize simulator, may take time...; //; // visualising generated distribution; TCanvas *cKanwa = new TCanvas(""cKanwa"",""Canvas for plotting"",600,600);; cKanwa->cd();; // From now on FoamX is ready to generate events; int nshow=5000;; for(long lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/foam__kanwa_8C.html:95,Load,Loading,95,doc/master/foam__kanwa_8C.html,https://root.cern,https://root.cern/doc/master/foam__kanwa_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/RadioNuclides.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RadioNuclides.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Macro that demonstrates usage of radioactive elements/materials/mixtures with TGeo package. ; A radionuclide (TGeoElementRN) derives from the class TGeoElement and provides additional information related to its radioactive properties and decay modes.; The radionuclides table is loaded on demand by any call:; TGeoElementRN *TGeoElementTable::GetElementRN(Int_t atomic_number,; Int_t atomic_charge,; Int_t isomeric_number); Int_tint Int_tDefinition RtypesCore.h:45; TGeoElementRNClass representing a radionuclidevoid TGeoManager::SetDefaultRootUnits() { if ( fgDefaultUnits == kRo...Definition TGeoElement.h:132; TGeoElementTable::GetElementRNTGeoElementRN * GetElementRN(Int_t ENDFcode) constRetrieve a radionuclide by ENDF code.Definition TGeoElement.cxx:1368; The isomeric number is optional and the default value is 0.; To create a radioactive material based on a radionuclide, one should use the constructor:; TGeoMaterial(const char *name, TGeoElement *elem, Double_t density); Double_tdouble Double_tDefinition RtypesCore.h:59; namechar name[80]Definition TGX11.cxx:110; TGeoElementBase class for chemical elements.Definition TGeoElement.h:36; TGeoMaterialBase class describing materials.Definition TGeoMaterial.h:34; To create a radioactive mixture, one can use radionuclides as well as stable elements:; TGeoMixture(const char *name, Int_t nelements, Double_t density);; TGeoMixture::AddElement(TGeoElement *elem, Double_t weight_fraction);; TGeoMixtureMixtures of elements.Definition TGeoMaterial.h:159; TGeoMixture::AddElementvoid AddElement(Double_t a, Double_t z, Double_t weight)add an element to the mixture using fraction by weight Check if the element is already definedDefinition TGeoMaterial.cxx:869; Once defined, one can retrieve the time evolution for the rad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RadioNuclides_8C.html:98,Load,Loading,98,doc/master/RadioNuclides_8C.html,https://root.cern,https://root.cern/doc/master/RadioNuclides_8C.html,2,"['Load', 'load']","['Loading', 'loaded']"
Performance,". ROOT: tutorials/geom/assembly.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. assembly.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Geometry detector assembly example. ; ��A2␏V ; void assembly(); {; //--- Definition of a simple geometry; TGeoManager *geom = new TGeoManager(""Assemblies"",; ""Geometry using assemblies"");; Int_t i;; //--- define some materials; TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; // //--- define some media; TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; TGeoMedium *Al = new TGeoMedium(""Aluminium"",2, matAl);; ; //--- make the top container volume; TGeoVolume *top = geom->MakeBox(""TOP"", Vacuum, 1000., 1000., 100.);; geom->SetTopVolume(top);; ; // Make the elementary assembly of the whole structure; TGeoVolume *tplate = new TGeoVolumeAssembly(""TOOTHPLATE"");; ; Int_t ntooth = 5;; Double_t xplate = 25;; Double_t yplate = 50;; Double_t xtooth = 10;; Double_t ytooth = 0.5*yplate/ntooth;; Double_t dshift = 2.*xplate + xtooth;; Double_t xt,yt;; ; TGeoVolume *plate = geom->MakeBox(""PLATE"", Al, xplate,yplate,1);; plate->SetLineColor(kBlue);; TGeoVolume *tooth = geom->MakeBox(""TOOTH"", Al, xtooth,ytooth,1);; tooth->SetLineColor(kBlue);; tplate->AddNode(plate,1);; for (i=0; i<ntooth; i++) {; xt = xplate+xtooth;; yt = -yplate + (4*i+1)*ytooth;; tplate->AddNode(tooth, i+1, new TGeoTranslation(xt,yt,0));; xt = -xplate-xtooth;; yt = -yplate + (4*i+3)*ytooth;; tplate->AddNode(tooth, ntooth+i+1, new TGeoTranslation(xt,yt,0));; }; ; TGeoRotation *rot1 = new TGeoRotation();; rot1->RotateX(90);; TGeoRotation *rot;; // Make a hexagone cell out of 6 tooth plates. These can zip together; // without generating overlaps (they are self-contained); TGeoVolume *cell = new TGeoVolumeAssembly(""CELL"");; for (i=0; i<6; i++) {; Double_t phi = 60.*i;; Double_t phirad = phi*TMath::DegToRad();; Double_t xp = dshift*TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geom_2assembly_8C.html:93,Load,Loading,93,doc/master/geom_2assembly_8C.html,https://root.cern,https://root.cern/doc/master/geom_2assembly_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/building.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. building.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a building where Dept. ; of Physics is, using ROOT geometry class.; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x building.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void building(); {; TGeoManager *geom = new TGeoManager(""geom"",""My First 3D Geometry"");; ; // Materials; TGeoMaterial *Vacuum = new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe = new TGeoMaterial(""Fe"",55.845,26,7.87);; ; // Media; TGeoMedium *Air = new TGeoMedium(""Air"",0,Vacuum);; TGeoMedium *Iron = new TGeoMedium(""Iron"",0,Fe);; ; // Volume; TGeoVolume *Phy_Building = geom->MakeBox(""top"",Air,150,150,150);; geom->SetTopVolume(Phy_Building);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; TGeoVolume *mBlocks;; ; ; ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////; //////////////////////////////// Front-Building ///////////////////////////////; ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////; ; int i = 0;; int F = 0; // Floor; int N = 0; // Block_no; int nW = 8; // Number of windows; int nF = 3; // Number of Floor; char no_Block[100]; // Name of Block; double sP = 0; // Starting Phi of Tubs; double hP = 21; // Height of Tubs from Ground; ; while (F<nF){; N = 0; i = 0; sP = 0;; ; /////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/building_8C.html:93,Load,Loading,93,doc/master/building_8C.html,https://root.cern,https://root.cern/doc/master/building_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/cheongwadae.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. cheongwadae.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing the Cheongwadae building which is the Presidential Residence of the Republic of Korea, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x cheongwadae.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void cheongwadae(); {; TGeoManager *geom = new TGeoManager(""geom"",""My first 3D geometry"");; ; //material; TGeoMaterial *vacuum = new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe = new TGeoMaterial(""Fe"",55.845,26,7.87);; ; //creat media; TGeoMedium *Air = new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron = new TGeoMedium(""Iron"",1,Fe);; ; //creat volume; TGeoVolume *top = geom->MakeBox(""top"",Air,300,300,300);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; char nBlocks[100];; int N = 0;; int f=0;; int di[2]; di[0] = 0; di[1] = 30;; TGeoVolume *mBlock;; ; for(int k=0;k<7;k++){; for(int i=0;i<20;i++){; sprintf(nBlocks,""f%d_bg%d"",f,N++);; mBlock = geom->MakeBox(nBlocks, Iron, 0.6,1.8,63);; mBlock->SetLineColor(20);; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(-10.6-(2.6*i),-17.8+(6*k),0));; ; sprintf(nBlocks,""f%d_bg%d"",f,N++);; mBlock = geom->MakeBox(nBlocks, Iron, 0.7,1.8,58);; mBlock->SetLineColor(12);; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(-11.9-(2.6*i),-17.8+(6*k),0));; }; sprintf(nBlocks,""f%d_bg%d"",f,N++);; mBlock = geom->MakeBox(nBlocks, Iron, 26,1.2,63);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/cheongwadae_8C.html:96,Load,Loading,96,doc/master/cheongwadae_8C.html,https://root.cern,https://root.cern/doc/master/cheongwadae_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/csgdemo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. csgdemo.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Combinatorial Solid Geometry example. ; ; Bool_t raytracing = kTRUE;; ; #include ""TGeoManager.h""; ; //______________________________________________________________________________; TCanvas *create_canvas(const char *title, bool divide = true); {; auto c = (TCanvas *) gROOT->GetListOfCanvases()->FindObject(""csg_canvas"");; if (c) {; c->Clear();; c->Update();; c->SetTitle(title);; } else {; c = new TCanvas(""csg_canvas"", title, 700,1000);; }; ; if (divide) {; c->Divide(1,2,0,0);; c->cd(2);; gPad->SetPad(0,0,1,0.4);; c->cd(1);; gPad->SetPad(0,0.4,1,1);; }; ; return c;; }; ; //______________________________________________________________________________; void MakePicture(); {; Bool_t is_raytracing = gGeoManager->GetTopVolume()->IsRaytracing();; if (is_raytracing != raytracing) {; gGeoManager->GetTopVolume()->SetVisRaytrace(raytracing);; gPad->Modified();; gPad->Update();; }; }; ; //______________________________________________________________________________; void s_union(); {; auto c = create_canvas(""Union boolean operation"");; ; if (gGeoManager) delete gGeoManager;; ; new TGeoManager(""xtru"", ""poza12"");; TGeoMaterial *mat = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *med = new TGeoMedium(""MED"",1,mat);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",med,100,100,100);; gGeoManager->SetTopVolume(top);; ; // define shape components with names; TGeoPgon *pgon = new TGeoPgon(""pg"",0.,360.,6,2);; pgon->DefineSection(0,0,0,20);; pgon->DefineSection(1, 30,0,20);; ; TGeoSphere *sph = new TGeoSphere(""sph"", 40., 45., 5., 175., 0., 340.);; // define named geometrical transformations with names; TGeoTranslation *tr = new TGeoTranslation(0., 0., 45.);; tr->SetName(""tr"");; // register all used transformations; tr->RegisterYourself();; // create the composite shape based on a B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geom_2csgdemo_8C.html:92,Load,Loading,92,doc/master/geom_2csgdemo_8C.html,https://root.cern,https://root.cern/doc/master/geom_2csgdemo_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/gdml/testoptical.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. testoptical.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Tests importing/exporting optical surfaces from GDML. ; Optical surfaces, skin surfaces and border surfaces are imported in object arrays stored by TGeoManager class. Optical surfaces do not store property arrays but point to GDML matrices describing such properties. One can get the data for such property like: TGeoOpticalSurface *surf = geom->GetOpticalSurface(""surf1""); const char *property = surf=>GetPropertyRef(""REFLECTIVITY""); TGeoGDMLMatrix *m = geom->GetGDMLMatrix(property); Skin surfaces and border surfaces can be retrieved from the TGeoManager object by using: TObjArray *skin_array = geom->GetListOfSkinSurfaces(); TObjArra8 *border_array = geom->GetListOfBorderSurfaces(); Alternatively accessors by name can also be used: GetSkinSurface(name)/GetBorderSurface(name); AuthorAndrei Gheata ; Definition in file testoptical.C. tutorialsgeomgdmltestoptical.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/testoptical_8C.html:101,Load,Loading,101,doc/master/testoptical_8C.html,https://root.cern,https://root.cern/doc/master/testoptical_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/geodemo.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geodemo.C File ReferenceTutorials » Geometry tutorials. Detailed Description; GUI to draw the geometry shapes. ; ; #include ""TMath.h""; #include ""TControlBar.h""; #include ""TRandom3.h""; #include ""TROOT.h""; #include ""TSystem.h""; #include ""TVirtualPad.h""; #include ""TCanvas.h""; #include ""TVirtualGeoPainter.h""; #include ""TGeoManager.h""; #include ""TGeoNode.h""; #include ""TView.h""; #include ""TPaveText.h""; #include ""TGeoBBox.h""; #include ""TGeoPara.h""; #include ""TGeoTube.h""; #include ""TGeoCone.h""; #include ""TGeoEltu.h""; #include ""TGeoSphere.h""; #include ""TGeoTorus.h""; #include ""TGeoTrd1.h""; #include ""TGeoTrd2.h""; #include ""TGeoParaboloid.h""; #include ""TGeoHype.h""; #include ""TGeoPcon.h""; #include ""TGeoPgon.h""; #include ""TGeoArb8.h""; #include ""TGeoXtru.h""; #include ""TGeoCompositeShape.h""; #include ""TGeoTessellated.h""; #include ""TGeoPhysicalNode.h""; ; Bool_t comments = kTRUE;; Bool_t raytracing = kFALSE;; Bool_t grotate = kFALSE;; Bool_t axis = kTRUE;; ; //______________________________________________________________________________; void MakePicture(); {; TView *view = gPad->GetView();; if (view) {; // view->RotateView(248,66);; if (axis) view->ShowAxis();; }; Bool_t is_raytracing = gGeoManager->GetTopVolume()->IsRaytracing();; if (is_raytracing != raytracing) {; gGeoManager->GetTopVolume()->SetVisRaytrace(raytracing);; gPad->Modified();; gPad->Update();; }; }; ; //______________________________________________________________________________; void AddMemberInfo(TPaveText *pave, const char *datamember, Double_t value, const char *comment); {; TString line = datamember;; while (line.Length() < 10) line.Append("" "");; line.Append(TString::Format(""= %5.2f => %s"", value, comment));; TText *text = pave->AddText(line.Data());; // text->SetTextColor(4);; text->SetTextAlign(12);//12; }; ; //______________________________________________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geodemo_8C.html:92,Load,Loading,92,doc/master/geodemo_8C.html,https://root.cern,https://root.cern/doc/master/geodemo_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/geomAlice.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomAlice.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here ALICE). ; by default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site. ; void geomAlice(); {; TGeoManager::Import(""http://root.cern/files/alice2.root"");; gGeoManager->DefaultColors();; // gGeoManager->SetVisLevel(4);; gGeoManager->GetVolume(""HALL"")->InvisibleAll();; gGeoManager->GetVolume(""ZDCC"")->InvisibleAll();; gGeoManager->GetVolume(""ZDCA"")->InvisibleAll();; gGeoManager->GetVolume(""L3MO"")->InvisibleAll();; gGeoManager->GetVolume(""YOUT1"")->InvisibleAll();; gGeoManager->GetVolume(""YOUT2"")->InvisibleAll();; gGeoManager->GetVolume(""YSAA"")->InvisibleAll();; gGeoManager->GetVolume(""RB24"")->InvisibleAll();; gGeoManager->GetVolume(""RB26Pipe"")->InvisibleAll();; gGeoManager->GetVolume(""DDIP"")->InvisibleAll();; gGeoManager->GetVolume(""DCM0"")->InvisibleAll();; // gGeoManager->GetVolume(""PPRD"")->InvisibleAll();; gGeoManager->GetVolume(""BRS1"")->InvisibleAll();; gGeoManager->GetVolume(""BRS4"")->InvisibleAll();; // gGeoManager->GetVolume(""Dipole"")->InvisibleAll();; gGeoManager->GetVolume(""ZN1"")->InvisibleAll();; gGeoManager->GetVolume(""Q13T"")->InvisibleAll();; gGeoManager->GetVolume(""ZP1"")->InvisibleAll();; gGeoManager->GetVolume(""QTD1"")->InvisibleAll();; gGeoManager->GetVolume(""QTD2"")->InvisibleAll();; gGeoManager->GetVolume(""QBS7"")->InvisibleAll();; gGeoManager->GetVolume(""QA07"")->InvisibleAll();; gGeoManager->GetVolume(""MD1V"")->InvisibleAll();; gGeoManager->GetVolume(""QTD3"")->InvisibleAll();; gGeoManager->GetVolume(""QTD4"")->InvisibleAll();; gGeoManager->GetVolume(""QTD5"")->InvisibleAll();; gGeoManager->GetVolume(""QBS3"")->InvisibleAll();; gGeoManager->GetVolume(""QBS4""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomAlice_8C.html:94,Load,Loading,94,doc/master/geomAlice_8C.html,https://root.cern,https://root.cern/doc/master/geomAlice_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/geomAlice_itsv.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomAlice_itsv.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here ITSV from Alice). ; By default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site. ; void geomAlice_itsv() {; TGeoManager::Import(""http://root.cern/files/alice2.root"");; gGeoManager->DefaultColors();; gGeoManager->GetVolume(""ITSV"")->Draw(""ogl"");; new TBrowser;; }; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::GetVolumeTGeoVolume * GetVolume(const char *name) constSearch for a named volume. All trailing blanks stripped.Definition TGeoManager.cxx:2942; TGeoManager::DefaultColorsvoid DefaultColors()Set default volume colors according to A of material.Definition TGeoManager.cxx:2259; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; AuthorRene Brun ; Definition in file geomAlice_itsv.C. tutorialsgeomgeomAlice_itsv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomAlice__itsv_8C.html:99,Load,Loading,99,doc/master/geomAlice__itsv_8C.html,https://root.cern,https://root.cern/doc/master/geomAlice__itsv_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/geomAtlas.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomAtlas.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here ATLAS). ; by default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site. ; void geomAtlas() {; TGeoManager::Import(""http://root.cern/files/atlas.root"");; //gGeoManager->DefaultColors();; gGeoManager->SetMaxVisNodes(5000);; //gGeoManager->SetVisLevel(4);; gGeoManager->GetVolume(""ATLS"")->Draw(""ogl"");; new TBrowser;; }; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::GetVolumeTGeoVolume * GetVolume(const char *name) constSearch for a named volume. All trailing blanks stripped.Definition TGeoManager.cxx:2942; TGeoManager::SetMaxVisNodesvoid SetMaxVisNodes(Int_t maxnodes=10000)set the maximum number of visible nodes.Definition TGeoManager.cxx:2380; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; AuthorRene Brun ; Definition in file geomAtlas.C. tutorialsgeomgeomAtlas.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomAtlas_8C.html:94,Load,Loading,94,doc/master/geomAtlas_8C.html,https://root.cern,https://root.cern/doc/master/geomAtlas_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/geomBrahms.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomBrahms.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here BRAHMS). ; by default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site. ; void geomBrahms() {; TGeoManager::Import(""http://root.cern/files/brahms.root"");; gGeoManager->GetVolume(""CAVE"")->Draw(""ogl"");; new TBrowser;; }; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::GetVolumeTGeoVolume * GetVolume(const char *name) constSearch for a named volume. All trailing blanks stripped.Definition TGeoManager.cxx:2942; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; AuthorRene Brun ; Definition in file geomBrahms.C. tutorialsgeomgeomBrahms.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomBrahms_8C.html:95,Load,Loading,95,doc/master/geomBrahms_8C.html,https://root.cern,https://root.cern/doc/master/geomBrahms_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/geomD0.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geomD0.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Script drawing a detector geometry (here D0). ; by default the geometry is drawn using the GL viewer Using the TBrowser, you can select other components if the file containing the geometry is not found in the local directory, it is automatically read from the ROOT web site.; run with .x geomD0.C top level detectors are transparent; or .x geomD0.C(1) top level detectors are visible. ; void RecursiveInvisible(TGeoVolume *vol);; void RecursiveTransparency(TGeoVolume *vol, Int_t transp);; ; void geomD0(Int_t allVisible=0) {; TGeoManager::Import(""http://root.cern/files/d0.root"");; gGeoManager->DefaultColors();; gGeoManager->SetMaxVisNodes(40000);; //gGeoManager->SetVisLevel(4);; if (!allVisible) {; RecursiveInvisible(gGeoManager->GetVolume(""D0-""));; RecursiveInvisible(gGeoManager->GetVolume(""D0+""));; RecursiveInvisible(gGeoManager->GetVolume(""D0WZ""));; RecursiveInvisible(gGeoManager->GetVolume(""D0WL""));; RecursiveTransparency(gGeoManager->GetVolume(""MUON""), 90);; }; ; gGeoManager->GetVolume(""D0"")->Draw(""ogl"");; }; ; void RecursiveInvisible(TGeoVolume *vol); {; vol->InvisibleAll();; Int_t nd = vol->GetNdaughters();; for (Int_t i=0; i<nd; i++) {; RecursiveInvisible(vol->GetNode(i)->GetVolume());; }; }; ; void RecursiveTransparency(TGeoVolume *vol, Int_t transp); {; vol->SetTransparency(transp);; Int_t nd = vol->GetNdaughters();; for (Int_t i=0; i<nd; i++) {; RecursiveTransparency(vol->GetNode(i)->GetVolume(), transp);; }; }; Int_tint Int_tDefinition RtypesCore.h:45; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::GetVolumeTGeoVolume *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geomD0_8C.html:91,Load,Loading,91,doc/master/geomD0_8C.html,https://root.cern,https://root.cern/doc/master/geomD0_8C.html,1,['Load'],['Loading']
Performance,. ROOT: tutorials/geom/geometry.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. geometry.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Example of the old geometry package (now obsolete) ; Definition in file geometry.C. tutorialsgeomgeometry.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geometry_8C.html:93,Load,Loading,93,doc/master/geometry_8C.html,https://root.cern,https://root.cern/doc/master/geometry_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/lego.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. lego.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a figure, made of lego block, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x lego.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TSystem.h""; #include ""TGeoManager.h""; ; void lego(); {; TGeoManager *geom = new TGeoManager(""geom"",""My first 3D geometry"");; ; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; ; ; ; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; ; ; // create volume; TGeoVolume *top=geom->MakeBox(""top"",Air,100,100,100);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; //----------------------------------------------------------------------; ; TGeoVolume *ha1=geom->MakeSphere(""ha1"",Iron,0,10,80,90,0,360);; ha1->SetLineColor(41);; top->AddNodeOverlap(ha1,1,new TGeoCombiTrans(0,0,4,new TGeoRotation(""ha1"",0,0,0)));; ; TGeoVolume *ha2=geom->MakeSphere(""ha2"",Iron,0,7,90,180,0,360);; ha2->SetLineColor(41);; top->AddNodeOverlap(ha2,1,new TGeoCombiTrans(0,0,4,new TGeoRotation(""ha2"",0,180,0)));; ; TGeoVolume *ha3=geom->MakeSphere(""ha3"",Iron,0,7.3,80,90,0,360);; ha3->SetLineColor(2);; top->AddNodeOverlap(ha3,1,new TGeoCombiTrans(0,0,4.8,new TGeoRotation(""ha3"",0,0,0)));; ; ; TGeoVolume *h1=geom->MakeTubs(""h1"",Iron,0,6,4.5,0,0);; h1->SetLineColor(5);; top->AddNodeOverlap(h1,1,new TGeoComb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/geom_2lego_8C.html:89,Load,Loading,89,doc/master/geom_2lego_8C.html,https://root.cern,https://root.cern/doc/master/geom_2lego_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/mp3player.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. mp3player.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a mp3 type music player, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x mp3player.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TCanvas.h""; #include ""TPaveText.h""; #include ""TImage.h""; #include ""TLine.h""; #include ""TLatex.h""; #include ""TButton.h""; #include ""TGeoManager.h""; ; void mp3player(); {; ; TGeoManager *geom=new TGeoManager(""geom"",""My first 3D geometry"");; ; ; //materials; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; ; //create media; ; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; ; ; //create volume; ; TGeoVolume *top=geom->MakeBox(""top"",Air,800,800,800);; geom->SetTopVolume(top);; geom->SetTopVisible(kFALSE);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; ; TGeoVolume *b1=geom->MakeBox(""b1"",Iron,100,200,600);; b1->SetLineColor(2);; ; ; TGeoVolume *b2=geom->MakeTubs(""b2"",Iron,0,50,200,0,90);; b2->SetLineColor(10);; ; ; TGeoVolume *b3=geom->MakeTubs(""b3"",Iron,0,50,200,90,180);; b3->SetLineColor(10);; ; ; TGeoVolume *b4=geom->MakeTubs(""b4"",Iron,0,50,200,180,270);; b4->SetLineColor(10);; ; TGeoVolume *b5=geom->MakeTubs(""b5"",Iron,0,50,200,270,360);; b5->SetLineColor(10);; ; ; TGeoVolume *b6=geom->MakeTubs(""b6"",Iron,0,50,600,0,90);; b6->SetLineColor(10);; ; TGeoVolume *b7=geom->MakeTubs(""b7"",Iron,0,50,600,90,180);; b7",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/mp3player_8C.html:94,Load,Loading,94,doc/master/mp3player_8C.html,https://root.cern,https://root.cern/doc/master/mp3player_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/na49.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. na49.C File ReferenceTutorials » Geometry tutorials. Detailed Description; This file has been generated automatically via the root utility toroot from an interactive version of GEANT (see ROOT class TGeometry header for an example of use) This shows an example of the old geometry package (now obsolete) ; ; #ifdef __CLING__; #pragma cling optimize(0); #endif; ; #include ""TMaterial.h""; #include ""TMixture.h""; #include ""TNode.h""; #include ""TGeometry.h""; #include ""TRotMatrix.h""; #include ""TBenchmark.h""; #include ""TBRIK.h""; #include ""TTRAP.h""; #include ""TTUBE.h""; ; void na49() {; gBenchmark->Start(""na49"");; ; TMaterial *mat;; TMixture *mix;; TRotMatrix *rot;; TNode *Node;; ; TGeometry *na49 = new TGeometry(""na49"",""na49.C"");; ; ; //-----------List of Materials and Mixtures--------------; ; mat = new TMaterial(""mat1"",""HYDROGEN"",1.01,1,.0708);; mat = new TMaterial(""mat2"",""DEUTERIUM"",2.01,1,.162);; mat = new TMaterial(""mat3"",""HELIUM"",4,2,.125);; mat = new TMaterial(""mat4"",""LITHIUM"",6.94,3,.534);; mat = new TMaterial(""mat5"",""BERILLIUM"",9.01,4,1.848);; mat = new TMaterial(""mat6"",""CARBON"",12.01,6,2.265);; mat = new TMaterial(""mat7"",""NITROGEN"",14.01,7,.808);; mat = new TMaterial(""mat8"",""NEON"",20.18,10,1.207);; mat = new TMaterial(""mat9"",""ALUMINIUM"",26.97999,13,2.7);; mat = new TMaterial(""mat10"",""IRON"",55.84999,26,7.869999);; mat = new TMaterial(""mat11"",""COPPER"",63.54,29,8.96);; mat = new TMaterial(""mat12"",""TUNGSTEN"",183.85,74,19.29999);; mat = new TMaterial(""mat13"",""LEAD"",207.19,82,11.35);; mat = new TMaterial(""mat14"",""URANIUM"",238.0299,92,18.95);; mat = new TMaterial(""mat15"",""AIR"",14.60999,7.3,.001205);; mat = new TMaterial(""mat16"",""VACUUM"",0,0,0);; mat = new TMaterial(""mat17"",""JUNK"",28.09,14,2.329999);; mat = new TMaterial(""mat18"",""JUNK"",28.09,14,2.329999);; mat = new TMaterial(""mat19"",""JUNK"",28.09,14,2.329999);; mat = new TMaterial(""mat20"",""SILICON"",28.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49_8C.html:89,Load,Loading,89,doc/master/na49_8C.html,https://root.cern,https://root.cern/doc/master/na49_8C.html,2,"['Load', 'optimiz']","['Loading', 'optimize']"
Performance,". ROOT: tutorials/geom/na49geomfile.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. na49geomfile.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Before executing this macro, the file makegeometry.C must have been executed. ; ; void na49geomfile() {; gBenchmark->Start(""geometry"");; TGeometry *n49 =(TGeometry*)gROOT->FindObject(""na49"");; if (n49) {; TFile na(""na49.root"",""RECREATE"");; n49->Write();; na.Write();; }; gBenchmark->Show(""geometry"");; }; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; gROOT#define gROOTDefinition TROOT.h:406; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TBenchmark::Showvirtual void Show(const char *name)Stops Benchmark name and Prints results.Definition TBenchmark.cxx:155; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TGeometryTGeometry description.Definition TGeometry.h:39; TGeometry::FindObjectTObject * FindObject(const char *name) const overrideSearch object identified by name in the geometry tree.Definition TGeometry.cxx:273; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; na49geomfileDefinition na49geomfile.py:1; AuthorAndrei Gheata ; Definition in file na49geomfile.C. tutorialsgeomna49geomfile.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49geomfile_8C.html:97,Load,Loading,97,doc/master/na49geomfile_8C.html,https://root.cern,https://root.cern/doc/master/na49geomfile_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/na49view.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. na49view.C File ReferenceTutorials » Geometry tutorials. Detailed Description; This macro generates with 2 views of the NA49 detector using the old obsolete geometry package. . ; void na49view() {; TCanvas *c1 = new TCanvas(""c1"",""The NA49 canvas"",200,10,700,780);; ; gBenchmark->Start(""na49view"");; ; TPad *all = new TPad(""all"",""A Global view of NA49"",0.02,0.02,0.48,0.82,28);; TPad *tof = new TPad(""tof"",""One Time Of Flight element"",0.52,0.02,0.98,0.82,28);; all->Draw();; tof->Draw();; TPaveLabel *na49title = new TPaveLabel(0.04,0.86,0.96,0.98,""Two views of the NA49 detector"");; na49title->SetFillColor(32);; na49title->Draw();; //; TFile *nageom = new TFile(""na49.root"");; if (!nageom || nageom->IsZombie()) return;; TGeometry *n49 =(TGeometry*)gROOT->FindObject(""na49"");; n49->SetBomb(1.2);; n49->cd(); //Set current geometry; all->cd(); //Set current pad; n49->Draw();; c1->Update();; tof->cd();; TNode *TOFR1 = n49->GetNode(""TOFR1"");; TOFR1->Draw();; c1->Update();; ; gBenchmark->Show(""na49view"");; ; // To have a better and dynamic view of any of these pads,; // you can click with the middle button of your mouse to select it.; // Then select ""View with x3d"" in the VIEW menu of the Canvas.; // Once in x3d, you are in wireframe mode by default.; // You can switch to:; // - Hidden Line mode by typing E; // - Solid mode by typing R; // - Wireframe mode by typing W; // - Stereo mode by clicking S (and you need special glasses); // - To leave x3d type Q; }; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; gROOT#define gROOTDefinition TROOT.h:406; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TBenchmark::Showvirtual void Show(const char *name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/na49view_8C.html:93,Load,Loading,93,doc/master/na49view_8C.html,https://root.cern,https://root.cern/doc/master/na49view_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/parallel_world.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. parallel_world.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Misaligning geometry generate in many cases overlaps, due to the idealization of the design and the fact that in real life movements of the geometry volumes have constraints and are correlated. ; This typically generates inconsistent response of the navigation methods, leading to inefficiencies during tracking, errors in the material budget calculations, and so on. Among those, there are dangerous cases when the hidden volumes are sensitive. This macro demonstrates how to use the ""parallel world"" feature to assign highest navigation priority to some physical paths in geometry. ; void align();; ; //______________________________________________________________________________; void parallel_world(Bool_t usepw=kTRUE, Bool_t useovlp=kTRUE); {; // web geometry display does not support ""parallel world"" feature; gROOT->SetWebDisplay(""off"");; ; TGeoManager *geom = new TGeoManager(""parallel_world"", ""Showcase for prioritized physical paths"");; TGeoMaterial *matV = new TGeoMaterial(""Vac"", 0,0,0);; TGeoMedium *medV = new TGeoMedium(""MEDVAC"",1,matV);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; TGeoMedium *medAl = new TGeoMedium(""MEDAL"",2,matAl);; TGeoMaterial *matSi = new TGeoMaterial(""Si"", 28.085,14,2.329);; TGeoMedium *medSi = new TGeoMedium(""MEDSI"",3,matSi);; TGeoVolume *top = gGeoManager->MakeBox(""TOP"",medV,100,400,1000);; gGeoManager->SetTopVolume(top);; ; // Shape for the support block; TGeoBBox *sblock = new TGeoBBox(""sblock"", 20,10,2);; // The volume for the support; TGeoVolume *support = new TGeoVolume(""block"",sblock, medAl);; support->SetLineColor(kGreen);; ; // Shape for the sensor to be prioritized in case of overlap; TGeoBBox *ssensor = new TGeoBBox(""sensor"", 19,9,0.2);; // The volume for the sensor; TGeoVolume *sensor = new TGeoV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/parallel__world_8C.html:99,Load,Loading,99,doc/master/parallel__world_8C.html,https://root.cern,https://root.cern/doc/master/parallel__world_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/robot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. robot.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a famous Korean robot, TaekwonV, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x robot.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void robot(); {; ; ; TGeoManager *Robot = new TGeoManager(""Robot"",""This is Taegwon V"");; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; ; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; ; // create volume; ; TGeoVolume *top=Robot->MakeBox(""top"",Air,1000,1000,1000);; Robot->SetTopVolume(top);; Robot->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; ; // head; TGeoVolume *Band=Robot->MakeEltu(""Band"",Iron,20,20,2.5);; Band->SetLineColor(12);; Band->SetFillColor(12);; TGeoVolume *Band_b=Robot->MakeSphere(""Band_b"",Iron,0,2,0,180,180,360);; Band_b->SetLineColor(2);; Band_b->SetFillColor(2);; TGeoVolume *Head=Robot->MakeSphere(""Head"",Iron,0,19,0,180,180,360);; Head->SetLineColor(17);; Head->SetFillColor(17);; TGeoVolume *Horn=Robot->MakeSphere(""Horn"",Iron,0,10,60,180,240,300);; ; // drawing head; top->AddNodeOverlap(Band,1,new TGeoTranslation(0,0,90));; float Phi = 3.14;; int N = 10;; ; for (int i=0; i<=N;i++){; top->AddNodeOverlap(Band_b,1,new TGeoCombiTrans(sin(2*Phi/N*i)*19,-cos(2*Phi/N*i)*19,90,; new TGeoRotation(""R1"",-90+(360/N*i),-90,90)));; }; top->AddNodeOverlap(H",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/robot_8C.html:90,Load,Loading,90,doc/master/robot_8C.html,https://root.cern,https://root.cern/doc/master/robot_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/rootgeom.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rootgeom.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Definition of a simple geometry (the 4 ROOT characters) ; �␆2�␏V ; void rootgeom(bool vis = true); {; // gStyle->SetCanvasPreferGL(true);; ; TGeoManager *geom = new TGeoManager(""simple1"", ""Simple geometry"");; ; //--- define some materials; TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; // //--- define some media; TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);; ; //--- define the transformations; TGeoTranslation *tr1 = new TGeoTranslation(20., 0, 0.);; TGeoTranslation *tr2 = new TGeoTranslation(10., 0., 0.);; TGeoTranslation *tr3 = new TGeoTranslation(10., 20., 0.);; TGeoTranslation *tr4 = new TGeoTranslation(5., 10., 0.);; TGeoTranslation *tr5 = new TGeoTranslation(20., 0., 0.);; TGeoTranslation *tr6 = new TGeoTranslation(-5., 0., 0.);; TGeoTranslation *tr7 = new TGeoTranslation(7.5, 7.5, 0.);; TGeoRotation *rot1 = new TGeoRotation(""rot1"", 90., 0., 90., 270., 0., 0.);; TGeoCombiTrans *combi1 = new TGeoCombiTrans(7.5, -7.5, 0., rot1);; TGeoTranslation *tr8 = new TGeoTranslation(7.5, -5., 0.);; TGeoTranslation *tr9 = new TGeoTranslation(7.5, 20., 0.);; TGeoTranslation *tr10 = new TGeoTranslation(85., 0., 0.);; TGeoTranslation *tr11 = new TGeoTranslation(35., 0., 0.);; TGeoTranslation *tr12 = new TGeoTranslation(-15., 0., 0.);; TGeoTranslation *tr13 = new TGeoTranslation(-65., 0., 0.);; ; TGeoTranslation *tr14 = new TGeoTranslation(0,0,-100);; TGeoCombiTrans *combi2 = new TGeoCombiTrans(0,0,100,; new TGeoRotation(""rot2"",90,180,90,90,180,0));; TGeoCombiTrans *combi3 = new TGeoCombiTrans(100,0,0,; new TGeoRotation(""rot3"",90,270,0,0,90,180));; TGeoCombiTrans *combi4 = new TGeoCombiTrans(-100,0,0,; new TGeoRotation(""rot4""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootgeom_8C.html:93,Load,Loading,93,doc/master/rootgeom_8C.html,https://root.cern,https://root.cern/doc/master/rootgeom_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/runplugin.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. runplugin.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Creates and runs a simple iterator plugin connected to TGeoPainter iterator. ; It demonstrates the possibility to dynamically change the color of drawn volumes according some arbitrary criteria WITHOUT changing the color of the same volume drawn on branches that do not match the criteria.; To run:; root[0] .L iterplugin.cxx+; root[1] .x runplugin.C; root[2] select(2,kMagenta);; root[3] select(3,kBlue); ...; kMagenta@ kMagentaDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; iterpluginDefinition iterplugin.cxx:10; ; #include ""iterplugin.cxx""; ; iterplugin *plugin = nullptr;; ; void runplugin(); {; ; ; TString tutdir = gROOT->GetTutorialDir();; gROOT->ProcessLine("".x "" + tutdir + ""/geom/rootgeom.C"");; plugin = new iterplugin();; gGeoManager->GetGeomPainter()->SetIteratorPlugin(plugin);; }; ; void select(Int_t replica=1, Int_t color=kGreen); {; // Change current color. Replica range: 1-4; plugin->Select(replica, color);; gGeoManager->GetGeomPainter()->ModifiedPad();; }; Int_tint Int_tDefinition RtypesCore.h:45; kGreen@ kGreenDefinition Rtypes.h:66; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; gROOT#define gROOTDefinition TROOT.h:406; TGeoManager::GetGeomPainterTVirtualGeoPainter * GetGeomPainter()Make a default painter if none present. Returns pointer to it.Definition TGeoManager.cxx:2916; TStringBasic string class.Definition TString.h:139; TVirtualGeoPainter::ModifiedPadvirtual void ModifiedPad(Bool_t update=kFALSE) const =0; TVirtualGeoPainter::SetIteratorPluginvirtual void SetIteratorPlugin(TGeoIteratorPlugin *plugin)=0; iterplugin::Selectvoid Select(Int_t replica, Int_t color)Definition iterplugin.cxx:16; iterplugin.cxx; AuthorAndrei Gheata ; Definition in file runplugin.C. tutorialsgeomrunplugin.C. ROOT master - Refe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/runplugin_8C.html:94,Load,Loading,94,doc/master/runplugin_8C.html,https://root.cern,https://root.cern/doc/master/runplugin_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/shapes.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. shapes.C File ReferenceTutorials » Geometry tutorials. Detailed Description; The old geometry shapes (see script geodemo.C) . ; #include ""TGeometry.h""; #include ""TGeoManager.h""; ; void shapes() {; TCanvas *c1 = new TCanvas(""glc1"",""Geometry Shapes"",200,10,700,500);; ; gSystem->Load(""libGeom"");; //delete previous geometry objects in case this script is re-executed; if (gGeoManager) {; gGeoManager->GetListOfNodes()->Delete();; gGeoManager->GetListOfShapes()->Delete();; }; ; // Define some volumes; TBRIK *brik = new TBRIK(""BRIK"",""BRIK"",""void"",200,150,150);; TTRD1 *trd1 = new TTRD1(""TRD1"",""TRD1"",""void"",200,50,100,100);; TTRD2 *trd2 = new TTRD2(""TRD2"",""TRD2"",""void"",200,50,200,50,100);; TTRAP *trap = new TTRAP(""TRAP"",""TRAP"",""void"",190,0,0,60,40,90,15,120,80,180,15);; TPARA *para = new TPARA(""PARA"",""PARA"",""void"",100,200,200,15,30,30);; TGTRA *gtra = new TGTRA(""GTRA"",""GTRA"",""void"",390,0,0,20,60,40,90,15,120,80,180,15);; TTUBE *tube = new TTUBE(""TUBE"",""TUBE"",""void"",150,200,400);; TTUBS *tubs = new TTUBS(""TUBS"",""TUBS"",""void"",80,100,100,90,235);; TCONE *cone = new TCONE(""CONE"",""CONE"",""void"",100,50,70,120,150);; TCONS *cons = new TCONS(""CONS"",""CONS"",""void"",50,100,100,200,300,90,270);; TSPHE *sphe = new TSPHE(""SPHE"",""SPHE"",""void"",25,340, 45,135, 0,270);; TSPHE *sphe1 = new TSPHE(""SPHE1"",""SPHE1"",""void"",0,140, 0,180, 0,360);; TSPHE *sphe2 = new TSPHE(""SPHE2"",""SPHE2"",""void"",0,200, 10,120, 45,145);; ; TPCON *pcon = new TPCON(""PCON"",""PCON"",""void"",180,270,4);; pcon->DefineSection(0,-200,50,100);; pcon->DefineSection(1,-50,50,80);; pcon->DefineSection(2,50,50,80);; pcon->DefineSection(3,200,50,100);; ; TPGON *pgon = new TPGON(""PGON"",""PGON"",""void"",180,270,8,4);; pgon->DefineSection(0,-200,50,100);; pgon->DefineSection(1,-50,50,80);; pgon->DefineSection(2,50,50,80);; pgon->DefineSection(3,200,50,100);; ; // Set shapes attributes; brik->SetLineColor(1);; trd1->Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/shapes_8C.html:91,Load,Loading,91,doc/master/shapes_8C.html,https://root.cern,https://root.cern/doc/master/shapes_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/shapesAnim.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. shapesAnim.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Macro illustrating how to animate a geometry picture using a Timer. ; ; Double_t pi;; Float_t theta = 0;; Float_t phi = 30;; void shapesAnim() {; TCanvas *c1 = new TCanvas(""c1"",""Geometry Shapes"",10,10,500,500);; ; // Define some volumes; TBRIK *brik = new TBRIK(""BRIK"",""BRIK"",""void"",200,150,150);; TTRD1 *trd1 = new TTRD1(""TRD1"",""TRD1"",""void"",200,50,100,100);; TTRD2 *trd2 = new TTRD2(""TRD2"",""TRD2"",""void"",200,50,200,50,100);; TTRAP *trap = new TTRAP(""TRAP"",""TRAP"",""void"",190,0,0,60,40,90,15,120,80,180,15);; TPARA *para = new TPARA(""PARA"",""PARA"",""void"",100,200,200,15,30,30);; TGTRA *gtra = new TGTRA(""GTRA"",""GTRA"",""void"",390,0,0,20,60,40,90,15,120,80,180,15);; TTUBE *tube = new TTUBE(""TUBE"",""TUBE"",""void"",150,200,400);; TTUBS *tubs = new TTUBS(""TUBS"",""TUBS"",""void"",80,100,100,90,235);; TCONE *cone = new TCONE(""CONE"",""CONE"",""void"",100,50,70,120,150);; TCONS *cons = new TCONS(""CONS"",""CONS"",""void"",50,100,100,200,300,90,270);; TSPHE *sphe = new TSPHE(""SPHE"",""SPHE"",""void"",25,340, 45,135, 0,270);; TSPHE *sphe1 = new TSPHE(""SPHE1"",""SPHE1"",""void"",0,140, 0,180, 0,360);; TSPHE *sphe2 = new TSPHE(""SPHE2"",""SPHE2"",""void"",0,200, 10,120, 45,145);; ; TPCON *pcon = new TPCON(""PCON"",""PCON"",""void"",180,270,4);; pcon->DefineSection(0,-200,50,100);; pcon->DefineSection(1,-50,50,80);; pcon->DefineSection(2,50,50,80);; pcon->DefineSection(3,200,50,100);; ; TPGON *pgon = new TPGON(""PGON"",""PGON"",""void"",180,270,8,4);; pgon->DefineSection(0,-200,50,100);; pgon->DefineSection(1,-50,50,80);; pgon->DefineSection(2,50,50,80);; pgon->DefineSection(3,200,50,100);; ; // Set shapes attributes; brik->SetLineColor(1);; trd1->SetLineColor(2);; trd2->SetLineColor(3);; trap->SetLineColor(4);; para->SetLineColor(5);; gtra->SetLineColor(7);; tube->SetLineColor(6);; tubs->SetLineColor(7);; cone->SetLineColor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/shapesAnim_8C.html:95,Load,Loading,95,doc/master/shapesAnim_8C.html,https://root.cern,https://root.cern/doc/master/shapesAnim_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/south_gate.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. south_gate.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a famous Korean gate, the South gate, called Namdeamoon in Korean, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x south_gate.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void south_gate(); {; ; ; TGeoManager *geom=new TGeoManager(""geom"",""My first 3D geometry"");; ; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);//a,z,rho; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; ; //Create media; ; TGeoMedium *Air = new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron = new TGeoMedium(""Iron"",1,Fe);; ; //Create volume; ; TGeoVolume *top = geom->MakeBox(""top"",Air,1000,1000,1000);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; //base; ; char nBlocks[100];; int i=1;; int N = 0;; int f=0;; int di[2]; di[0] = 0; di[1] = 30;; TGeoVolume *mBlock;; ; while (f<11){; while (i<14){; if (i==6 && f<8){; i = i+3;; }; ; sprintf(nBlocks,""f%d_bg%d"",f,N++);; mBlock = geom->MakeBox(nBlocks, Iron, 29,149,9);; mBlock->SetLineColor(20);; if (f<8){; if (i<=5 && f<8){; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(-120-((i-1)*60)-di[f%2],5,5+(20*f)));; } else if (i>5 && f<8){; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(120+((i-9)*60) +di[f%2],5,5+(20*f)));; }; } else {; top->AddNodeOverlap(mBlock,1,new TGeoTranslation(-420+(i*60)-di[f%2],5,5+(20*f)));; }; i++;; if (i>=14 && ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/south__gate_8C.html:95,Load,Loading,95,doc/master/south__gate_8C.html,https://root.cern,https://root.cern/doc/master/south__gate_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/station1.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. station1.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a space station, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x station1.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void station1(); {; ; ; TGeoManager *geom=new TGeoManager(""geom"",""My first 3D geometry"");; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; TGeoMaterial *Cu=new TGeoMaterial(""Cu"",63.549,29,8.92);; ; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; TGeoMedium *Copper=new TGeoMedium(""Copper"",2,Cu);; ; TGeoVolume *top=geom->MakeBox(""top"",Air,1000,1000,1000);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; ; TGeoVolume *Cone1=geom->MakeCone(""Cone1"",Copper,650,0,20,0,20);; Cone1->SetFillColor(35);; Cone1->SetLineColor(35);; top->AddNodeOverlap(Cone1,1,new TGeoTranslation(0,0,0));; ; TGeoVolume *Cone2=geom->MakeCone(""Cone2"",Copper,25,0,30,0,30);; Cone2->SetFillColor(7);; Cone2->SetLineColor(7);; top->AddNodeOverlap(Cone2,1,new TGeoTranslation(0,0,630));; ; TGeoVolume *Cone21=geom->MakeCone(""Cone21"",Copper,30,0,30,0,30);; Cone21->SetFillColor(29);; Cone21->SetLineColor(29);; top->AddNodeOverlap(Cone21,1,new TGeoTranslation(0,0,550));; ; TGeoVolume *Cone22=geom->MakeCone(""Cone22"",Copper,5,0,50,0,50);; Cone22->SetFillColor(2);; Cone22->SetLineColor(2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/station1_8C.html:93,Load,Loading,93,doc/master/station1_8C.html,https://root.cern,https://root.cern/doc/master/station1_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/station2.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. station2.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a space station (version 2), using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x station2.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void station2(); {; ; ; TGeoManager *geom = new TGeoManager(""geom"",""Space Station"");; ; TGeoMaterial *vacuum=new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe=new TGeoMaterial(""Fe"",55.845,26,7.87);; TGeoMaterial *Cu=new TGeoMaterial(""Cu"",63.549,29,8.92);; ; TGeoMedium *Air=new TGeoMedium(""Vacuum"",0,vacuum);; TGeoMedium *Iron=new TGeoMedium(""Iron"",1,Fe);; TGeoMedium *Copper=new TGeoMedium(""Copper"",2,Cu);; ; TGeoVolume *top=geom->MakeBox(""top"",Air,1000,1000,1000);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; TGeoVolume *b1=geom->MakeBox(""b1"",Iron,1,2,3);; b1->SetLineColor(37);; b1->SetFillColor(37);; ; TGeoVolume *b2=geom->MakeBox(""b2"",Iron,1,2,3);; b2->SetLineColor(37);; b2->SetFillColor(37);; ; TGeoVolume *b12=geom->MakeBox(""b12"",Iron,1,2,3);; b12->SetLineColor(37);; b12->SetFillColor(37);; ; TGeoVolume *b22=geom->MakeBox(""b22"",Iron,1,2,3);; b22->SetLineColor(37);; b22->SetFillColor(37);; ; TGeoVolume *b13=geom->MakeBox(""b13"",Iron,1,2,3);; b13->SetLineColor(37);; b13->SetFillColor(37);; ; TGeoVolume *b23=geom->MakeBox(""b23"",Iron,1,2,3);; b23->SetLineColor(37);; b23->SetFillColor(37);; ; TGeoVolume *b14=geom->MakeBox(""b14"",Iron,1,2,3);; b1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/station2_8C.html:93,Load,Loading,93,doc/master/station2_8C.html,https://root.cern,https://root.cern/doc/master/station2_8C.html,1,['Load'],['Loading']
Performance,". ROOT: tutorials/geom/tank.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. tank.C File ReferenceTutorials » Geometry tutorials. Detailed Description; Drawing a fine tank, using ROOT geometry class. ; Reviewed by Sunman Kim (sunma.nosp@m.n98@.nosp@m.hanma.nosp@m.il.n.nosp@m.et) Supervisor: Prof. Inkyu Park (icpar.nosp@m.k@ph.nosp@m.ysics.nosp@m..uos.nosp@m..ac.k.nosp@m.r); How to run: .x tank.C in ROOT terminal, then use OpenGL; This macro was created for the evaluation of Computational Physics course in 2006. We thank to Prof. Inkyu Park for his special lecture on ROOT and to all of ROOT team. ; #include ""TGeoManager.h""; ; void tank(); {; TGeoManager *geom = new TGeoManager(""geom"",""My 3D Project"");; ; //------------------Creat materials-----------------------------; TGeoMaterial *vacuum = new TGeoMaterial(""vacuum"",0,0,0);; TGeoMaterial *Fe = new TGeoMaterial(""Fe"",55.84,26.7,7.87);; TGeoMaterial *Cu = new TGeoMaterial(""Cu"",63.549,29,8.92);; ; //------------------Creat media----------------------------------; TGeoMedium *Air = new TGeoMedium(""Air"",0,vacuum);; TGeoMedium *Iron = new TGeoMedium(""Iron"",1,Fe);; ; //------------------Create TOP volume----------------------------; TGeoVolume *top = geom->MakeBox(""top"",Air,100,100,100);; geom->SetTopVolume(top);; geom->SetTopVisible(false);; // If you want to see the boundary, please input the number, 1 instead of 0.; // Like this, geom->SetTopVisible(1);; ; ; //-----------------Create Object volume--------------------------; ; ; //Now, we start real shape; ; //UpperBody; TGeoVolume *pl=geom->MakeBox(""pl"",Iron,210,93,20);; pl->SetLineColor(42);; TGeoVolume *pl1=geom->MakeBox(""pl1"",Iron,217,50,5);; pl1->SetLineColor(42);; TGeoVolume *pl2=geom->MakeTrd2(""pl2"",Iron,219,150,50,40,10);; pl2->SetLineColor(42);; TGeoVolume *plu=geom->MakeTrd2(""plu"",Iron,210,70,100,100,5);; plu->SetLineColor(42);; top->AddNodeOverlap(plu,1,new TGeoTranslation(0,0,-105));; TGeoVolume *sp=geom->MakeTu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tank_8C.html:89,Load,Loading,89,doc/master/tank_8C.html,https://root.cern,https://root.cern/doc/master/tank_8C.html,1,['Load'],['Loading']
